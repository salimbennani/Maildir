Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 08:58:00 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 5949958014B
	for <like.xu@linux.intel.com>; Mon,  3 Dec 2018 13:01:54 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga001-1.fm.intel.com with ESMTP; 03 Dec 2018 13:01:54 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A8LPhYhEp5Ug3Pi0JCi35RJ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ7yo82wAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VDK/5KlpVRDokj?=
 =?us-ascii?q?8KODw6/m7YlsN+g6JVrgyvqRJi247ZYoObOfVjcq7TYd8aX3ROXt1KWixdGYyx?=
 =?us-ascii?q?dZcDA/YdMetaqYT2ulsArQG5BQmpHO7vzDhIimbs3aIky+QhFQHH0Rc4H90UrH?=
 =?us-ascii?q?TbsNX1O7kcUOyvy6nI1zrDYvVL0jnz74jIdwouofCKXb9oacre01UvGB/FjlqO?=
 =?us-ascii?q?p43pJTSV1v4Cs2Wd8uFuVvqvhnY5pw1toTWj3NoghpTKi44P1FzJ+yV0zJwoKd?=
 =?us-ascii?q?C6UEJ3f9CpHIFOuyyaOYZ6WN4uTmFptSog1LEKpJG2cS4Xw5o93RHfceaIc42Q?=
 =?us-ascii?q?7xLjSumRJTB4iWpheLK+nBay7VOgxvfzVsmyzVZGtC1FksPDtnwV1hzT7NaISu?=
 =?us-ascii?q?dl80u/xTqC1Brf5vxZLU03j6bXNZAsz74qmpYOs0nPBir2l1/3jK+SeEUk4O+o?=
 =?us-ascii?q?6+H/b7X/uJCcMpJ0hhjjPaswhMywH+A4PhEVUGic5OS80qHs8lPiQLlNiv02k6?=
 =?us-ascii?q?rZv47AKcUUu660GwtV0ocl6xaiADaqytUYnX8bLF1bfBKLlZTmO1bLIP3jC/e/?=
 =?us-ascii?q?hFKskDhtx/DbJLHhBY/NLnfbnLf7Ybl981JcyBY0zd1H45JUC7IBL+zpVk7+qd?=
 =?us-ascii?q?zVFRs5Mw2yw+b6B9RxzIIeWWSTAqCHNKPeq0OH5uUqI7rEWYkOpTyoK+Q5/+W8?=
 =?us-ascii?q?yjg9mEQBZu+v2p0Ybm3+Ge5pZECQYH7pi9FGFn8Wvw04V6vzhVifFDJeeXu2DJ?=
 =?us-ascii?q?86/SwxXYevDIPfQdK0jbmcmSu2AJBSI3pLE02BCmvAcYKCVPERLiWILZh6jzYG?=
 =?us-ascii?q?WLO9HpInzgykrwTgyrBqfdbTrzUSspTx1d50z/femRE76Xp/CMHO6WyVS3BImT?=
 =?us-ascii?q?YRSjormaxyv0F54lGE16d+nrpfD9MAyelOV1I8MtvGwvR+GvjqUx7KftqWDlG8?=
 =?us-ascii?q?TYb1SQotR848loddK312HM+v20jO?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AQMwBmmAVchxHrdtBjGwEBAQEfAwEBA?=
 =?us-ascii?q?QQBAQGBToEvgTkDgSaDeYh3jTuXXIFjEBgPBYQ6AQMBAQIWAYMwIjgSAQMBAQE?=
 =?us-ascii?q?BAQECARMBAQEKCwkIGw4jDII2BQIDGAmCXAIBAwECFwkEDRIKKQMDAQIGAgoXA?=
 =?us-ascii?q?wIiBAICAgEBQgEICBkFgxwBggEBBAqlPgEBAW58M4QtAYEDg06BLIELiE2CRII?=
 =?us-ascii?q?WgREzAYJegx4EGIEUARIBCTOCZ4I9GgKHIQGCBIYIfFCPRgmHAIpUCgKBT02ER?=
 =?us-ascii?q?IJ/hzuKdIJ1iwSBXUg9cX2BAAUGVjyBEgkKghQXiF4uhTJRAYEGiA0PFwQsgXc?=
 =?us-ascii?q?BAQ?=
X-IPAS-Result: =?us-ascii?q?A0AQMwBmmAVchxHrdtBjGwEBAQEfAwEBAQQBAQGBToEvgTk?=
 =?us-ascii?q?DgSaDeYh3jTuXXIFjEBgPBYQ6AQMBAQIWAYMwIjgSAQMBAQEBAQECARMBAQEKC?=
 =?us-ascii?q?wkIGw4jDII2BQIDGAmCXAIBAwECFwkEDRIKKQMDAQIGAgoXAwIiBAICAgEBQgE?=
 =?us-ascii?q?ICBkFgxwBggEBBAqlPgEBAW58M4QtAYEDg06BLIELiE2CRIIWgREzAYJegx4EG?=
 =?us-ascii?q?IEUARIBCTOCZ4I9GgKHIQGCBIYIfFCPRgmHAIpUCgKBT02ERIJ/hzuKdIJ1iwS?=
 =?us-ascii?q?BXUg9cX2BAAUGVjyBEgkKghQXiF4uhTJRAYEGiA0PFwQsgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,311,1539673200"; 
   d="scan'208";a="42569013"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 03 Dec 2018 13:01:52 -0800
Received: from localhost ([::1]:52458 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gTvLk-0005fc-3Q
	for like.xu@linux.intel.com; Mon, 03 Dec 2018 16:01:52 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:53272)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <no-reply@patchew.org>) id 1gTvLV-0005ea-N2
	for qemu-devel@nongnu.org; Mon, 03 Dec 2018 16:01:40 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <no-reply@patchew.org>) id 1gTvLN-0002JL-Qf
	for qemu-devel@nongnu.org; Mon, 03 Dec 2018 16:01:35 -0500
Resent-Date: Mon, 03 Dec 2018 16:01:34 -0500
Resent-Message-Id: <E1gTvLN-0002JL-Qf@eggs.gnu.org>
Received: from sender-of-o52.zoho.com ([135.84.80.217]:21363)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <no-reply@patchew.org>)
	id 1gTvLM-00029X-Mv
	for qemu-devel@nongnu.org; Mon, 03 Dec 2018 16:01:29 -0500
ARC-Seal: i=1; a=rsa-sha256; t=1543869949; cv=none; d=zoho.com; s=zohoarc; 
	b=cTVsku0FNS+W60WlKskDT0PXJZjtFHMOKkWBvbGWg5UMhs0sYV+f8f/VpmtEfwVntJwYf4/SO38kYuZdRSFmzhdoLnM6slCm1iFP2eOC2e+tUp8EcuiwrK1NCosDDeAiZrFZ5KnIx+qGTwPA907SnO6kZljgZehBdJP/Ullobr4=
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=zoho.com;
	s=zohoarc; t=1543869949;
	h=Content-Type:Content-Transfer-Encoding:Cc:Date:From:In-Reply-To:MIME-Version:Message-ID:Reply-To:Subject:To:ARC-Authentication-Results;
	bh=gpegAmhfh8wMSanlmw9BnS7Sima/oFFbMV4ZEdfFMaI=; 
	b=hh98G9KH8qHnLDjUszvPcFJ+d2rhQcPLW8/+UhEdc+lW88Di7QQQbRGZbujuZN8kZH1aL+vjKu3eKZPVWaA3a+TK5hjh1sVZmyDj4A4URxOQEbhCSDD4BeEs6rjvx3Wvrt6WN8dlFKiMgiE3GynZJgvcXdk4WFB2lmkhbMYVgsw=
ARC-Authentication-Results: i=1; mx.zoho.com; dkim=pass  header.i=patchew.org;
	spf=pass  smtp.mailfrom=no-reply@patchew.org;
	dmarc=pass header.from=<no-reply@patchew.org>
	header.from=<no-reply@patchew.org>
Received: from [172.17.0.2] (23.253.156.214 [23.253.156.214]) by
	mx.zohomail.com with SMTPS id 1543869947909862.061587361433;
	Mon, 3 Dec 2018 12:45:47 -0800 (PST)
In-Reply-To: <1543851204-41186-1-git-send-email-pbonzini@redhat.com>
Message-ID: <154386994645.14761.12824408992950935962@c26723477dc9>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Resent-From: 
From: no-reply@patchew.org
To: pbonzini@redhat.com
Date: Mon, 3 Dec 2018 12:45:47 -0800 (PST)
X-ZohoMailClient: External
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 135.84.80.217
Subject: Re: [Qemu-devel] [PATCH for-4.0 00/71] qtest: qgraph driver
 framework
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Reply-To: qemu-devel@nongnu.org
Cc: e.emanuelegiuseppe@gmail.com, thuth@redhat.com, famz@redhat.com,
	qemu-devel@nongnu.org, laurent@vivier.eu
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

UGF0Y2hldyBVUkw6IGh0dHBzOi8vcGF0Y2hldy5vcmcvUUVNVS8xNTQzODUxMjA0LTQxMTg2LTEt
Z2l0LXNlbmQtZW1haWwtcGJvbnppbmlAcmVkaGF0LmNvbS8KCgoKSGksCgpUaGlzIHNlcmllcyBz
ZWVtcyB0byBoYXZlIHNvbWUgY29kaW5nIHN0eWxlIHByb2JsZW1zLiBTZWUgb3V0cHV0IGJlbG93
IGZvcgptb3JlIGluZm9ybWF0aW9uOgoKU3ViamVjdDogW1FlbXUtZGV2ZWxdIFtQQVRDSCBmb3It
NC4wIDAwLzcxXSBxdGVzdDogcWdyYXBoIGRyaXZlciBmcmFtZXdvcmsKTWVzc2FnZS1pZDogMTU0
Mzg1MTIwNC00MTE4Ni0xLWdpdC1zZW5kLWVtYWlsLXBib256aW5pQHJlZGhhdC5jb20KVHlwZTog
c2VyaWVzCgo9PT0gVEVTVCBTQ1JJUFQgQkVHSU4gPT09CiMhL2Jpbi9iYXNoCgpCQVNFPWJhc2UK
bj0xCnRvdGFsPSQoZ2l0IGxvZyAtLW9uZWxpbmUgJEJBU0UuLiB8IHdjIC1sKQpmYWlsZWQ9MAoK
Z2l0IGNvbmZpZyAtLWxvY2FsIGRpZmYucmVuYW1lbGltaXQgMApnaXQgY29uZmlnIC0tbG9jYWwg
ZGlmZi5yZW5hbWVzIFRydWUKZ2l0IGNvbmZpZyAtLWxvY2FsIGRpZmYuYWxnb3JpdGhtIGhpc3Rv
Z3JhbQoKY29tbWl0cz0iJChnaXQgbG9nIC0tZm9ybWF0PSVIIC0tcmV2ZXJzZSAkQkFTRS4uKSIK
Zm9yIGMgaW4gJGNvbW1pdHM7IGRvCiAgICBlY2hvICJDaGVja2luZyBQQVRDSCAkbi8kdG90YWw6
ICQoZ2l0IGxvZyAtbiAxIC0tZm9ybWF0PSVzICRjKS4uLiIKICAgIGlmICEgZ2l0IHNob3cgJGMg
LS1mb3JtYXQ9ZW1haWwgfCAuL3NjcmlwdHMvY2hlY2twYXRjaC5wbCAtLW1haWxiYWNrIC07IHRo
ZW4KICAgICAgICBmYWlsZWQ9MQogICAgICAgIGVjaG8KICAgIGZpCiAgICBuPSQoKG4rMSkpCmRv
bmUKCmV4aXQgJGZhaWxlZAo9PT0gVEVTVCBTQ1JJUFQgRU5EID09PQoKVXBkYXRpbmcgM2M4Y2Y1
YTljMjFmZjg3ODIxNjRkMWRlZjdmNDRiZDg4ODcxMzM4NApTd2l0Y2hlZCB0byBhIG5ldyBicmFu
Y2ggJ3Rlc3QnCjI0ODFjNGYgcW9zLXRlc3Q6IG1lZ2FzYXMgdGVzdCBub2RlCmViMWIyZTIgcW9z
LXRlc3Q6IGUxMDAwIHRlc3Qgbm9kZQphZGJlMDE4IHFvcy10ZXN0OiBlZXBybzEwMCB0ZXN0IG5v
ZGUKNGJjOWE4MyBxb3MtdGVzdDogZXMxMzcwIHRlc3Qgbm9kZQoyM2YyMjI1IHFvcy10ZXN0OiB2
bXhuZXQzIHRlc3Qgbm9kZQplYWE0ZTgyIHFvcy10ZXN0OiB1c2ItaGNkLW9oY2kgdGVzdCBub2Rl
CjViYTAwOWYgcW9zLXRlc3Q6IHNwYXByLXBoYiB0ZXN0IG5vZGUKNGVhMzMxNiBxb3MtdGVzdDog
cGNuZXQgdGVzdCBub2RlCmQzYWM0MzkgcW9zLXRlc3Q6IG52bWUgdGVzdCBub2RlCmE5ZjcwZmIg
cW9zLXRlc3Q6IG5lMmtfcGNpIHRlc3Qgbm9kZQowZWJkOWMwIHFvcy10ZXN0OiBpcG9jdGFsMjMy
IHRlc3Qgbm9kZQpjNzhhNGU2IHFvcy10ZXN0OiB0cGNpMjAwIHRlc3Qgbm9kZQpkNGFkMGY2IHFv
cy10ZXN0OiBhYzk3IHRlc3Qgbm9kZQo2NzEzYzliIHRlc3RzOiBtb3ZlIHZpcnRpbyBlbnRpcmVs
eSB0byBxb3MtdGVzdApkYzZjNWYyIHRlc3RzL2xpYnFvczogcmVtb3ZlIHByZS1xZ3JhcGggUVZp
cnRpb1BDSURldmljZSBBUEkKMzg4ZTdkMiBxb3MtdGVzdDogdmlydGlvLXNjc2kgdGVzdCBub2Rl
CjM0ZTQzNmMgdGVzdHMvbGlicW9zOiB2aXJ0aW8tc2NzaSBkcml2ZXIgYW5kIGludGVyZmFjZSBu
b2RlcwoyNDcwNGFjIHFvcy10ZXN0OiB2aG9zdC11c2VyIHRlc3Qgbm9kZQplZmM4MDJkIHZob3N0
LXVzZXItdGVzdDogYWx3YXlzIHVzZSAyNTYgTWlCIG9mIGd1ZXN0IG1lbW9yeQoyYWQwM2M0IHRl
c3RzL2xpYnFvczogc3VwcG9ydCBtdWx0aXF1ZXVlIGZvciB2aXJ0aW8tbmV0CmU3YmM5MDAyIHFv
cy10ZXN0OiB2aXJ0aW8tbmV0IHRlc3Qgbm9kZQo0NTE2MTZiIHRlc3RzL2xpYnFvczogdmlydGlv
LW5ldCBkcml2ZXIgYW5kIGludGVyZmFjZSBub2RlcwoxZmViY2NjIHFvcy10ZXN0OiB2aXJ0aW8t
YmxrIHRlc3Qgbm9kZQo1NzdlYzgxIHRlc3RzL2xpYnFvczogdmlydGlvLWJsayBkcml2ZXIgYW5k
IGludGVyZmFjZSBub2Rlcwo4OWFkNDRlIHFvcy10ZXN0OiB2aXJ0aW8tcm5nIHRlc3Qgbm9kZQpj
OGJiMWU4IHRlc3RzL2xpYnFvczogdmlydGlvLXJuZyBkcml2ZXIgYW5kIGludGVyZmFjZSBub2Rl
cwozZDMyNjYxIHRlc3RzL3FncmFwaDogcmVtb3ZlIHZpcnRpby1iYWxsb29uLXRlc3QKOGVlZTRj
YiB0ZXN0cy9saWJxb3M6IHZpcnRpby1iYWxsb29uIGRyaXZlciBhbmQgaW50ZXJmYWNlIG5vZGVz
CjliZWFmM2IgcW9zLXRlc3Q6IHZpcnRpby05cCB0ZXN0IG5vZGUKOWM4MmEyZSB0ZXN0cy9saWJx
b3M6IHZpcnRpby05cCBkcml2ZXIgYW5kIGludGVyZmFjZSBub2Rlcwo1YThiYmJjIHFvcy10ZXN0
OiB2aXJ0aW8tY29uc29sZSBhbmQgdmlydGlvLXNlcmlhbCB0ZXN0IG5vZGUKMTVlYWQxYSB0ZXN0
cy9saWJxb3M6IHZpcnRpby1zZXJpYWwgZHJpdmVyIGFuZCBpbnRlcmZhY2Ugbm9kZXMKZTMxMDI4
YSB0ZXN0cy9xZ3JhcGg6IGFkZCBnZW5lcmljIHZpcnRpbyB0ZXN0Y2FzZXMKMGJhZDNkMyB0ZXN0
cy9saWJxb3M6IGFybS92aXJ0IG1hY2hpbmUgbm9kZQpiMjdhM2FlIHRlc3RzL2xpYnFvczogdmly
dGlvLW1taW8gZHJpdmVyIGFuZCBpbnRlcmZhY2Ugbm9kZXMKZjQ4N2YxOSB0ZXN0cy9saWJxb3M6
IHJlbW92ZSBnbG9iYWxfcXRlc3QgZnJvbSB2aXJ0aW8gZW5kaWFubmVzcyBjaGVja3MKNzA4OWY4
NCB0ZXN0cy9saWJxb3M6IHZpcnRpby1wY2kgZHJpdmVyIGFuZCBpbnRlcmZhY2Ugbm9kZXMKMWM4
Mzg1ZCBxb3MtdGVzdDogZTEwMDBlIHRlc3Qgbm9kZQozNDhhYThlIHRlc3RzL2xpYnFvczogZTEw
MDBlIGRyaXZlciBhbmQgaW50ZXJmYWNlIG5vZGVzCjM5MGM4NTUgdGVzdHMvbGlicW9zOiBoYXNf
YnVnZ3lfbXNpIGZsYWcKNzVmMWFmYiB0ZXN0cy9xZ3JhcGg6IHBwYzY0L3BzZXJpZXMgbWFjaGlu
ZSBub2RlCjdhNzNiM2EgdGVzdHMvbGlicW9zOiBwY2ktc3BhcHIgZHJpdmVyIGFuZCBpbnRlcmZh
Y2Ugbm9kZXMKNDE0MWNmMCB0ZXN0cy9xZ3JhcGg6IGFkZCBnZW5lcmljIFBDSSB0ZXN0Y2FzZXMK
ZGUzYWVmZCBxb3MtdGVzdDogc2RoY2kgdGVzdCBub2RlCjQxZDRjMzMgdGVzdHMvbGlicW9zOiBh
YXJjaDY0L3hsbngtemN1MTAyIG1hY2hpbmUgbm9kZQpiYzI4Y2M1IHRlc3RzL2xpYnFvczogYXJt
L3hpbGlueC16eW5xLWE5IG1hY2hpbmUgbm9kZQpkNGQ0NWMyIHRlc3RzL2xpYnFvczogYXJtL3Nh
YnJlbGl0ZSBtYWNoaW5lIG5vZGUKNWQyZjMwNyB0ZXN0cy9saWJxb3M6IGFybS9zbWRrYzIxMCBt
YWNoaW5lIG5vZGUKYzNkZmU4NyB0ZXN0cy9saWJxb3M6IGFybS9yYXNwaTIgbWFjaGluZSBub2Rl
CmZlMjUyNDIgdGVzdHMvbGlicW9zOiBzZGhjaSBkcml2ZXIgYW5kIGludGVyZmFjZSBub2Rlcwpj
OGIyYjk2IHRlc3RzL2xpYnFvczogeDg2XzY0L3BjIG1hY2hpbmUgbm9kZQo1MWQxNjVhIHRlc3Rz
L2xpYnFvczogcGNpLXBjIGRyaXZlciBhbmQgaW50ZXJmYWNlIG5vZGVzCmRjMGVmNjggdGVzdHM6
IHFncmFwaCBBUEkgZm9yIHRoZSBxdGVzdCBkcml2ZXIgZnJhbWV3b3JrCmE5MTg5ZDA5IHRlc3Rz
L2xpYnFvczogZW1iZWQgYWxsb2NhdG9ycyBpbnN0ZWFkIG9mIG1hbGxvYy1pbmcgdGhlbQo2OGZj
YzE0IHRlc3RzOiByZW1vdmUgcnVsZSBmb3Igbm9uZXhpc3RpbmcgcWRldi1tb25pdG9yLXRlc3QK
NTgwMDQ1MiB0ZXN0cy9saWJxb3M6IHJlbmFtZSBxcGNpX2luaXRfcGMgYW5kIHFwY2lfaW5pdF9z
cGFwciBmdW5jdGlvbnMKYmMwYTJiNSB0ZXN0cy9saWJxb3M6IGludHJvZHVjZSB2aXJ0aW9fc3Rh
cnRfZGV2aWNlCjVhNmU4ZGEgdmhvc3QtdXNlci10ZXN0OiBjcmVhdGUgYSB0ZW1wb3JhcnkgZGly
ZWN0b3J5IHBlciBUZXN0U2VydmVyCmMzMzFjMzUgdmhvc3QtdXNlci10ZXN0OiBzbWFsbCBjaGFu
Z2VzIHRvIGluaXRfaHVnZXBhZ2VmcwpkZmNjOWQ5IHZob3N0LXVzZXItdGVzdDogY3JlYXRlIGEg
bWFpbiBsb29wIHBlciBUZXN0U2VydmVyCmI5ODUyZjUgdmhvc3QtdXNlci10ZXN0OiByZWR1Y2Ug
dXNhZ2Ugb2YgZ2xvYmFsX3F0ZXN0CmNmYWFkZDUgdmhvc3QtdXNlci10ZXN0OiBza2lwIGlmIHRo
ZXJlIGlzIG5vIG1lbW9yeSBhdCBhZGRyZXNzIDAKOTMyNmU2MSB2aG9zdC11c2VyLXRlc3Q6IHN1
cHBvcnQgVkhPU1RfVVNFUl9QUk9UT0NPTF9GX0NST1NTX0VORElBTgplZmYyNTk2IHZob3N0LXVz
ZXI6IHN1cHBvcnQgY3Jvc3MtZW5kaWFuIHZuZXQgaGVhZGVycwo2MTM0Y2NhIHZob3N0LXVzZXIt
dGVzdDogc2lnbmFsIGRhdGFfY29uZCB3aGVuIHMtPnJpbmdzIGNoYW5nZXMKMWI3YWExZSB2aG9z
dC11c2VyLXRlc3Q6IHVzZSBnX2NvbmRfYnJvYWRjYXN0CmE2ZDRiZDkgdmhvc3QtbmV0OiByZXZh
bXAgY29uZmlndXJlIGxvZ2ljCjk2ZTk0Y2Egdmhvc3QtbmV0OiBjb21waWxlIGl0IG9uIGFsbCB0
YXJnZXRzIHRoYXQgaGF2ZSB2aXJ0aW8tbmV0LgoxOWEyZWM1IHZob3N0OiByZXN0cmljdCBMaW51
eCBkZXBlbmRlbmN5IHRvIGtlcm5lbCB2aG9zdAo3NTc3MzI0IHZob3N0LW5ldC11c2VyOiBhZGQg
c3R1YnMgZm9yIHdoZW4gbm8gdmlydGlvLW5ldCBkZXZpY2UgaXMgcHJlc2VudAowYjQ0NzFkIHZo
b3N0LW5ldDogbW92ZSBzdHVicyB0byBhIHNlcGFyYXRlIGZpbGUKCj09PSBPVVRQVVQgQkVHSU4g
PT09CkNoZWNraW5nIFBBVENIIDEvNzE6IHZob3N0LW5ldDogbW92ZSBzdHVicyB0byBhIHNlcGFy
YXRlIGZpbGUuLi4KV0FSTklORzogYWRkZWQsIG1vdmVkIG9yIGRlbGV0ZWQgZmlsZShzKSwgZG9l
cyBNQUlOVEFJTkVSUyBuZWVkIHVwZGF0aW5nPwojNDA6IApuZXcgZmlsZSBtb2RlIDEwMDY0NAoK
dG90YWw6IDAgZXJyb3JzLCAxIHdhcm5pbmdzLCAxMTUgbGluZXMgY2hlY2tlZAoKWW91ciBwYXRj
aCBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZpZXcuICBJZiBhbnkgb2YgdGhlc2UgZXJy
b3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRoZW0gdG8gdGhlIG1haW50YWluZXIsIHNl
ZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgpDaGVja2luZyBQQVRDSCAyLzcxOiB2aG9zdC1u
ZXQtdXNlcjogYWRkIHN0dWJzIGZvciB3aGVuIG5vIHZpcnRpby1uZXQgZGV2aWNlIGlzIHByZXNl
bnQuLi4KV0FSTklORzogYWRkZWQsIG1vdmVkIG9yIGRlbGV0ZWQgZmlsZShzKSwgZG9lcyBNQUlO
VEFJTkVSUyBuZWVkIHVwZGF0aW5nPwojOTk6IApuZXcgZmlsZSBtb2RlIDEwMDY0NAoKdG90YWw6
IDAgZXJyb3JzLCAxIHdhcm5pbmdzLCA3NSBsaW5lcyBjaGVja2VkCgpZb3VyIHBhdGNoIGhhcyBz
dHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJl
IGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNL
UEFUQ0ggaW4gTUFJTlRBSU5FUlMuCkNoZWNraW5nIFBBVENIIDMvNzE6IHZob3N0OiByZXN0cmlj
dCBMaW51eCBkZXBlbmRlbmN5IHRvIGtlcm5lbCB2aG9zdC4uLgpDaGVja2luZyBQQVRDSCA0Lzcx
OiB2aG9zdC1uZXQ6IGNvbXBpbGUgaXQgb24gYWxsIHRhcmdldHMgdGhhdCBoYXZlIHZpcnRpby1u
ZXQuLi4uCkNoZWNraW5nIFBBVENIIDUvNzE6IHZob3N0LW5ldDogcmV2YW1wIGNvbmZpZ3VyZSBs
b2dpYy4uLgpDaGVja2luZyBQQVRDSCA2LzcxOiB2aG9zdC11c2VyLXRlc3Q6IHVzZSBnX2NvbmRf
YnJvYWRjYXN0Li4uCkNoZWNraW5nIFBBVENIIDcvNzE6IHZob3N0LXVzZXItdGVzdDogc2lnbmFs
IGRhdGFfY29uZCB3aGVuIHMtPnJpbmdzIGNoYW5nZXMuLi4KQ2hlY2tpbmcgUEFUQ0ggOC83MTog
dmhvc3QtdXNlcjogc3VwcG9ydCBjcm9zcy1lbmRpYW4gdm5ldCBoZWFkZXJzLi4uCkNoZWNraW5n
IFBBVENIIDkvNzE6IHZob3N0LXVzZXItdGVzdDogc3VwcG9ydCBWSE9TVF9VU0VSX1BST1RPQ09M
X0ZfQ1JPU1NfRU5ESUFOLi4uCkNoZWNraW5nIFBBVENIIDEwLzcxOiB2aG9zdC11c2VyLXRlc3Q6
IHNraXAgaWYgdGhlcmUgaXMgbm8gbWVtb3J5IGF0IGFkZHJlc3MgMC4uLgpDaGVja2luZyBQQVRD
SCAxMS83MTogdmhvc3QtdXNlci10ZXN0OiByZWR1Y2UgdXNhZ2Ugb2YgZ2xvYmFsX3F0ZXN0Li4u
CldBUk5JTkc6IGxpbmUgb3ZlciA4MCBjaGFyYWN0ZXJzCiMyNjogRklMRTogdGVzdHMvdmhvc3Qt
dXNlci10ZXN0LmM6MTkwOgorc3RhdGljIHZvaWQgaW5pdF92aXJ0aW9fZGV2KFFUZXN0U3RhdGUg
KnF0cywgVGVzdFNlcnZlciAqcywgdWludDMyX3QgZmVhdHVyZXNfbWFzaykKCldBUk5JTkc6IGxp
bmUgb3ZlciA4MCBjaGFyYWN0ZXJzCiM1OTogRklMRTogdGVzdHMvdmhvc3QtdXNlci10ZXN0LmM6
Mjk2OgorICAgICAgICAgICAgdWludDMyX3QgYSA9IHF0ZXN0X3JlYWRiKHF0cywgcy0+bWVtb3J5
LnJlZ2lvbnNbaV0uZ3Vlc3RfcGh5c19hZGRyICsgaik7Cgp0b3RhbDogMCBlcnJvcnMsIDIgd2Fy
bmluZ3MsIDEzMiBsaW5lcyBjaGVja2VkCgpZb3VyIHBhdGNoIGhhcyBzdHlsZSBwcm9ibGVtcywg
cGxlYXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZl
cyByZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRB
SU5FUlMuCkNoZWNraW5nIFBBVENIIDEyLzcxOiB2aG9zdC11c2VyLXRlc3Q6IGNyZWF0ZSBhIG1h
aW4gbG9vcCBwZXIgVGVzdFNlcnZlci4uLgpFUlJPUjogc3BhY2UgcHJvaGliaXRlZCBiZXR3ZWVu
IGZ1bmN0aW9uIG5hbWUgYW5kIG9wZW4gcGFyZW50aGVzaXMgJygnCiM1NTogRklMRTogdGVzdHMv
dmhvc3QtdXNlci10ZXN0LmM6NTUxOgorICAgICAgICBnX21haW5fY29udGV4dF9pdGVyYXRpb24g
KE5VTEwsIFRSVUUpOwoKdG90YWw6IDEgZXJyb3JzLCAwIHdhcm5pbmdzLCA4MiBsaW5lcyBjaGVj
a2VkCgpZb3VyIHBhdGNoIGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4gIElmIGFu
eSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0byB0aGUg
bWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCgpDaGVja2luZyBQQVRD
SCAxMy83MTogdmhvc3QtdXNlci10ZXN0OiBzbWFsbCBjaGFuZ2VzIHRvIGluaXRfaHVnZXBhZ2Vm
cy4uLgpDaGVja2luZyBQQVRDSCAxNC83MTogdmhvc3QtdXNlci10ZXN0OiBjcmVhdGUgYSB0ZW1w
b3JhcnkgZGlyZWN0b3J5IHBlciBUZXN0U2VydmVyLi4uCkVSUk9SOiBFcnJvciBtZXNzYWdlcyBz
aG91bGQgbm90IGNvbnRhaW4gbmV3bGluZXMKIzcxOiBGSUxFOiB0ZXN0cy92aG9zdC11c2VyLXRl
c3QuYzo1MTA6CisgICAgICAgIGdfdGVzdF9tZXNzYWdlKCJta2R0ZW1wIG9uIHBhdGggKCVzKTog
JXNcbiIsIHRlbXBsYXRlLCBzdHJlcnJvcihlcnJubykpOwoKRVJST1I6IEVycm9yIG1lc3NhZ2Vz
IHNob3VsZCBub3QgY29udGFpbiBuZXdsaW5lcwojOTI6IEZJTEU6IHRlc3RzL3Zob3N0LXVzZXIt
dGVzdC5jOjU4MDoKKyAgICAgICAgZ190ZXN0X21lc3NhZ2UoInVuYWJsZSB0byBybWRpcjogcGF0
aCAoJXMpOiAlc1xuIiwKCnRvdGFsOiAyIGVycm9ycywgMCB3YXJuaW5ncywgMTc5IGxpbmVzIGNo
ZWNrZWQKCllvdXIgcGF0Y2ggaGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYg
YW55IG9mIHRoZXNlIGVycm9ycwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRo
ZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KCkNoZWNraW5nIFBB
VENIIDE1LzcxOiB0ZXN0cy9saWJxb3M6IGludHJvZHVjZSB2aXJ0aW9fc3RhcnRfZGV2aWNlLi4u
CkNoZWNraW5nIFBBVENIIDE2LzcxOiB0ZXN0cy9saWJxb3M6IHJlbmFtZSBxcGNpX2luaXRfcGMg
YW5kIHFwY2lfaW5pdF9zcGFwciBmdW5jdGlvbnMuLi4KQ2hlY2tpbmcgUEFUQ0ggMTcvNzE6IHRl
c3RzOiByZW1vdmUgcnVsZSBmb3Igbm9uZXhpc3RpbmcgcWRldi1tb25pdG9yLXRlc3QuLi4KQ2hl
Y2tpbmcgUEFUQ0ggMTgvNzE6IHRlc3RzL2xpYnFvczogZW1iZWQgYWxsb2NhdG9ycyBpbnN0ZWFk
IG9mIG1hbGxvYy1pbmcgdGhlbS4uLgpFUlJPUjogY29kZSBpbmRlbnQgc2hvdWxkIG5ldmVyIHVz
ZSB0YWJzCiMzMzk6IEZJTEU6IHRlc3RzL2xpYnFvcy9tYWxsb2MtZ2VuZXJpYy5jOjE5OgorXkle
SV5JdWludDY0X3Qgc2l6ZSwgdWludDMyX3QgcGFnZV9zaXplKSQKCnRvdGFsOiAxIGVycm9ycywg
MCB3YXJuaW5ncywgODQ2IGxpbmVzIGNoZWNrZWQKCllvdXIgcGF0Y2ggaGFzIHN0eWxlIHByb2Js
ZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYgYW55IG9mIHRoZXNlIGVycm9ycwphcmUgZmFsc2UgcG9z
aXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRoZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBpbiBN
QUlOVEFJTkVSUy4KCkNoZWNraW5nIFBBVENIIDE5LzcxOiB0ZXN0czogcWdyYXBoIEFQSSBmb3Ig
dGhlIHF0ZXN0IGRyaXZlciBmcmFtZXdvcmsuLi4KV0FSTklORzogYWRkZWQsIG1vdmVkIG9yIGRl
bGV0ZWQgZmlsZShzKSwgZG9lcyBNQUlOVEFJTkVSUyBuZWVkIHVwZGF0aW5nPwojOTM6IApuZXcg
ZmlsZSBtb2RlIDEwMDY0NAoKV0FSTklORzogbGluZSBvdmVyIDgwIGNoYXJhY3RlcnMKIzE5Nzog
RklMRTogdGVzdHMvbGlicW9zL3FncmFwaC5jOjEwMDoKKyAgICAgICAgb3B0cy0+YmVmb3JlX2Nt
ZF9saW5lID8gZ19zdHJjb25jYXQoIiAiLCBvcHRzLT5iZWZvcmVfY21kX2xpbmUsIE5VTEwpIDog
TlVMTDsKCldBUk5JTkc6IGxpbmUgb3ZlciA4MCBjaGFyYWN0ZXJzCiMxOTk6IEZJTEU6IHRlc3Rz
L2xpYnFvcy9xZ3JhcGguYzoxMDI6CisgICAgICAgIG9wdHMtPmV4dHJhX2RldmljZV9vcHRzID8g
Z19zdHJjb25jYXQoIiwiLCBvcHRzLT5leHRyYV9kZXZpY2Vfb3B0cywgTlVMTCkgOiBOVUxMOwoK
V0FSTklORzogbGluZSBvdmVyIDgwIGNoYXJhY3RlcnMKIzIwMTogRklMRTogdGVzdHMvbGlicW9z
L3FncmFwaC5jOjEwNDoKKyAgICAgICAgb3B0cy0+YWZ0ZXJfY21kX2xpbmUgPyBnX3N0cmNvbmNh
dCgiICIsIG9wdHMtPmFmdGVyX2NtZF9saW5lLCBOVUxMKSA6IE5VTEw7CgpFUlJPUjogY29kZSBp
bmRlbnQgc2hvdWxkIG5ldmVyIHVzZSB0YWJzCiMxMjA5OiBGSUxFOiB0ZXN0cy9saWJxb3MvcWdy
YXBoLmg6MzQ2OgorXkleSV5JXkkgKiBhbmQgbW9kaWZ5IHRoZSBhcmd1bWVudCB0byB0aGUgdGVz
dCBmdW5jdGlvbi4kCgpXQVJOSU5HOiBsaW5lIG92ZXIgODAgY2hhcmFjdGVycwojMTkzMDogRklM
RTogdGVzdHMvcW9zLXRlc3QuYzoyMDI6CitzdGF0aWMgdm9pZCAqYWxsb2NhdGVfb2JqZWN0cyhR
VGVzdFN0YXRlICpxdHMsIGNoYXIgKipwYXRoLCBRR3Vlc3RBbGxvY2F0b3IgKipwX2FsbG9jKQoK
V0FSTklORzogbGluZSBvdmVyIDgwIGNoYXJhY3RlcnMKIzIwODc6IEZJTEU6IHRlc3RzL3Fvcy10
ZXN0LmM6MzU5OgorICAgIC8qIGV0eXBlIHNldCB0byBRRURHRV9DT05TVU1FRF9CWSBzbyB0aGF0
IG1hY2hpbmUgY2FuIGFkZCB0byB0aGUgY29tbWFuZCBsaW5lICovCgp0b3RhbDogMSBlcnJvcnMs
IDYgd2FybmluZ3MsIDI1NTkgbGluZXMgY2hlY2tlZAoKWW91ciBwYXRjaCBoYXMgc3R5bGUgcHJv
YmxlbXMsIHBsZWFzZSByZXZpZXcuICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBw
b3NpdGl2ZXMgcmVwb3J0IHRoZW0gdG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGlu
IE1BSU5UQUlORVJTLgoKQ2hlY2tpbmcgUEFUQ0ggMjAvNzE6IHRlc3RzL2xpYnFvczogcGNpLXBj
IGRyaXZlciBhbmQgaW50ZXJmYWNlIG5vZGVzLi4uCkNoZWNraW5nIFBBVENIIDIxLzcxOiB0ZXN0
cy9saWJxb3M6IHg4Nl82NC9wYyBtYWNoaW5lIG5vZGUuLi4KV0FSTklORzogYWRkZWQsIG1vdmVk
IG9yIGRlbGV0ZWQgZmlsZShzKSwgZG9lcyBNQUlOVEFJTkVSUyBuZWVkIHVwZGF0aW5nPwojMjk6
IApuZXcgZmlsZSBtb2RlIDEwMDY0NAoKRVJST1I6IGNvZGUgaW5kZW50IHNob3VsZCBuZXZlciB1
c2UgdGFicwojODY6IEZJTEU6IHRlc3RzL2xpYnFvcy94ODZfNjRfcGMtbWFjaGluZS5jOjUzOgor
XkleSV5JXkkgICBRVGVzdFN0YXRlICpxdHMsJAoKdG90YWw6IDEgZXJyb3JzLCAxIHdhcm5pbmdz
LCAxMTkgbGluZXMgY2hlY2tlZAoKWW91ciBwYXRjaCBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFz
ZSByZXZpZXcuICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVw
b3J0IHRoZW0gdG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJT
LgoKQ2hlY2tpbmcgUEFUQ0ggMjIvNzE6IHRlc3RzL2xpYnFvczogc2RoY2kgZHJpdmVyIGFuZCBp
bnRlcmZhY2Ugbm9kZXMuLi4KV0FSTklORzogYWRkZWQsIG1vdmVkIG9yIGRlbGV0ZWQgZmlsZShz
KSwgZG9lcyBNQUlOVEFJTkVSUyBuZWVkIHVwZGF0aW5nPwojMjg6IApuZXcgZmlsZSBtb2RlIDEw
MDY0NAoKRVJST1I6IGNvZGUgaW5kZW50IHNob3VsZCBuZXZlciB1c2UgdGFicwojOTg6IEZJTEU6
IHRlc3RzL2xpYnFvcy9zZGhjaS5jOjY2OgorXkleSSAgICAgICB1aW50MzJfdCBhZGRyLCBRU0RI
Q0lQcm9wZXJ0aWVzICpjb21tb24pJAoKRVJST1I6IGNvZGUgaW5kZW50IHNob3VsZCBuZXZlciB1
c2UgdGFicwojMjY5OiBGSUxFOiB0ZXN0cy9saWJxb3Mvc2RoY2kuaDo2ODoKK15JXkkgICAgICAg
dWludDMyX3QgYWRkciwgUVNESENJUHJvcGVydGllcyAqY29tbW9uKTskCgp0b3RhbDogMiBlcnJv
cnMsIDEgd2FybmluZ3MsIDI0MCBsaW5lcyBjaGVja2VkCgpZb3VyIHBhdGNoIGhhcyBzdHlsZSBw
cm9ibGVtcywgcGxlYXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNl
IHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0gg
aW4gTUFJTlRBSU5FUlMuCgpDaGVja2luZyBQQVRDSCAyMy83MTogdGVzdHMvbGlicW9zOiBhcm0v
cmFzcGkyIG1hY2hpbmUgbm9kZS4uLgpXQVJOSU5HOiBhZGRlZCwgbW92ZWQgb3IgZGVsZXRlZCBm
aWxlKHMpLCBkb2VzIE1BSU5UQUlORVJTIG5lZWQgdXBkYXRpbmc/CiMyNzogCm5ldyBmaWxlIG1v
ZGUgMTAwNjQ0Cgp0b3RhbDogMCBlcnJvcnMsIDEgd2FybmluZ3MsIDk4IGxpbmVzIGNoZWNrZWQK
CllvdXIgcGF0Y2ggaGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYgYW55IG9m
IHRoZXNlIGVycm9ycwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRoZSBtYWlu
dGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KQ2hlY2tpbmcgUEFUQ0ggMjQv
NzE6IHRlc3RzL2xpYnFvczogYXJtL3NtZGtjMjEwIG1hY2hpbmUgbm9kZS4uLgpXQVJOSU5HOiBh
ZGRlZCwgbW92ZWQgb3IgZGVsZXRlZCBmaWxlKHMpLCBkb2VzIE1BSU5UQUlORVJTIG5lZWQgdXBk
YXRpbmc/CiMyNzogCm5ldyBmaWxlIG1vZGUgMTAwNjQ0Cgp0b3RhbDogMCBlcnJvcnMsIDEgd2Fy
bmluZ3MsIDk4IGxpbmVzIGNoZWNrZWQKCllvdXIgcGF0Y2ggaGFzIHN0eWxlIHByb2JsZW1zLCBw
bGVhc2UgcmV2aWV3LiAgSWYgYW55IG9mIHRoZXNlIGVycm9ycwphcmUgZmFsc2UgcG9zaXRpdmVz
IHJlcG9ydCB0aGVtIHRvIHRoZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJ
TkVSUy4KQ2hlY2tpbmcgUEFUQ0ggMjUvNzE6IHRlc3RzL2xpYnFvczogYXJtL3NhYnJlbGl0ZSBt
YWNoaW5lIG5vZGUuLi4KV0FSTklORzogYWRkZWQsIG1vdmVkIG9yIGRlbGV0ZWQgZmlsZShzKSwg
ZG9lcyBNQUlOVEFJTkVSUyBuZWVkIHVwZGF0aW5nPwojMjc6IApuZXcgZmlsZSBtb2RlIDEwMDY0
NAoKdG90YWw6IDAgZXJyb3JzLCAxIHdhcm5pbmdzLCA5OCBsaW5lcyBjaGVja2VkCgpZb3VyIHBh
dGNoIGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVzZSBl
cnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5lciwg
c2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCkNoZWNraW5nIFBBVENIIDI2LzcxOiB0ZXN0
cy9saWJxb3M6IGFybS94aWxpbngtenlucS1hOSBtYWNoaW5lIG5vZGUuLi4KV0FSTklORzogYWRk
ZWQsIG1vdmVkIG9yIGRlbGV0ZWQgZmlsZShzKSwgZG9lcyBNQUlOVEFJTkVSUyBuZWVkIHVwZGF0
aW5nPwojMjc6IApuZXcgZmlsZSBtb2RlIDEwMDY0NAoKdG90YWw6IDAgZXJyb3JzLCAxIHdhcm5p
bmdzLCAxMDEgbGluZXMgY2hlY2tlZAoKWW91ciBwYXRjaCBoYXMgc3R5bGUgcHJvYmxlbXMsIHBs
ZWFzZSByZXZpZXcuICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMg
cmVwb3J0IHRoZW0gdG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlO
RVJTLgpDaGVja2luZyBQQVRDSCAyNy83MTogdGVzdHMvbGlicW9zOiBhYXJjaDY0L3hsbngtemN1
MTAyIG1hY2hpbmUgbm9kZS4uLgpXQVJOSU5HOiBhZGRlZCwgbW92ZWQgb3IgZGVsZXRlZCBmaWxl
KHMpLCBkb2VzIE1BSU5UQUlORVJTIG5lZWQgdXBkYXRpbmc/CiMyNzogCm5ldyBmaWxlIG1vZGUg
MTAwNjQ0CgpFUlJPUjogbGluZSBvdmVyIDkwIGNoYXJhY3RlcnMKIzEyMDogRklMRTogdGVzdHMv
bGlicW9zL2FhcmNoNjQteGxueC16Y3UxMDItbWFjaGluZS5jOjg5OgorICAgIHFvc19ub2RlX2Ny
ZWF0ZV9tYWNoaW5lKCJhYXJjaDY0L3hsbngtemN1MTAyIiwgcW9zX2NyZWF0ZV9tYWNoaW5lX2Fh
cmNoNjRfeGxueF96Y3UxMDIpOwoKdG90YWw6IDEgZXJyb3JzLCAxIHdhcm5pbmdzLCAxMDAgbGlu
ZXMgY2hlY2tlZAoKWW91ciBwYXRjaCBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZpZXcu
ICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRoZW0g
dG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgoKQ2hlY2tp
bmcgUEFUQ0ggMjgvNzE6IHFvcy10ZXN0OiBzZGhjaSB0ZXN0IG5vZGUuLi4KQ2hlY2tpbmcgUEFU
Q0ggMjkvNzE6IHRlc3RzL3FncmFwaDogYWRkIGdlbmVyaWMgUENJIHRlc3RjYXNlcy4uLgpXQVJO
SU5HOiBhZGRlZCwgbW92ZWQgb3IgZGVsZXRlZCBmaWxlKHMpLCBkb2VzIE1BSU5UQUlORVJTIG5l
ZWQgdXBkYXRpbmc/CiMyMzogCm5ldyBmaWxlIG1vZGUgMTAwNjQ0Cgp0b3RhbDogMCBlcnJvcnMs
IDEgd2FybmluZ3MsIDMyIGxpbmVzIGNoZWNrZWQKCllvdXIgcGF0Y2ggaGFzIHN0eWxlIHByb2Js
ZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYgYW55IG9mIHRoZXNlIGVycm9ycwphcmUgZmFsc2UgcG9z
aXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRoZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBpbiBN
QUlOVEFJTkVSUy4KQ2hlY2tpbmcgUEFUQ0ggMzAvNzE6IHRlc3RzL2xpYnFvczogcGNpLXNwYXBy
IGRyaXZlciBhbmQgaW50ZXJmYWNlIG5vZGVzLi4uCkNoZWNraW5nIFBBVENIIDMxLzcxOiB0ZXN0
cy9xZ3JhcGg6IHBwYzY0L3BzZXJpZXMgbWFjaGluZSBub2RlLi4uCldBUk5JTkc6IGFkZGVkLCBt
b3ZlZCBvciBkZWxldGVkIGZpbGUocyksIGRvZXMgTUFJTlRBSU5FUlMgbmVlZCB1cGRhdGluZz8K
IzI4OiAKbmV3IGZpbGUgbW9kZSAxMDA2NDQKCkVSUk9SOiBjb2RlIGluZGVudCBzaG91bGQgbmV2
ZXIgdXNlIHRhYnMKIzg1OiBGSUxFOiB0ZXN0cy9saWJxb3MvcHBjNjRfcHNlcmllcy1tYWNoaW5l
LmM6NTM6CiteSV5JXkleSSAgIFFHdWVzdEFsbG9jYXRvciAqYWxsb2MpJAoKdG90YWw6IDEgZXJy
b3JzLCAxIHdhcm5pbmdzLCAxMTggbGluZXMgY2hlY2tlZAoKWW91ciBwYXRjaCBoYXMgc3R5bGUg
cHJvYmxlbXMsIHBsZWFzZSByZXZpZXcuICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxz
ZSBwb3NpdGl2ZXMgcmVwb3J0IHRoZW0gdG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENI
IGluIE1BSU5UQUlORVJTLgoKQ2hlY2tpbmcgUEFUQ0ggMzIvNzE6IHRlc3RzL2xpYnFvczogaGFz
X2J1Z2d5X21zaSBmbGFnLi4uCkNoZWNraW5nIFBBVENIIDMzLzcxOiB0ZXN0cy9saWJxb3M6IGUx
MDAwZSBkcml2ZXIgYW5kIGludGVyZmFjZSBub2Rlcy4uLgpXQVJOSU5HOiBhZGRlZCwgbW92ZWQg
b3IgZGVsZXRlZCBmaWxlKHMpLCBkb2VzIE1BSU5UQUlORVJTIG5lZWQgdXBkYXRpbmc/CiMyODog
Cm5ldyBmaWxlIG1vZGUgMTAwNjQ0Cgp0b3RhbDogMCBlcnJvcnMsIDEgd2FybmluZ3MsIDMyMCBs
aW5lcyBjaGVja2VkCgpZb3VyIHBhdGNoIGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmll
dy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhl
bSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCkNoZWNr
aW5nIFBBVENIIDM0LzcxOiBxb3MtdGVzdDogZTEwMDBlIHRlc3Qgbm9kZS4uLgpXQVJOSU5HOiBs
aW5lIG92ZXIgODAgY2hhcmFjdGVycwojMjU5OiBGSUxFOiB0ZXN0cy9lMTAwMGUtdGVzdC5jOjM3
Ogorc3RhdGljIHZvaWQgZTEwMDBlX3NlbmRfdmVyaWZ5KFFFMTAwMEUgKmQsIGludCAqdGVzdF9z
b2NrZXRzLCBRR3Vlc3RBbGxvY2F0b3IgKmFsbG9jKQoKV0FSTklORzogbGluZSBvdmVyIDgwIGNo
YXJhY3RlcnMKIzI4MTogRklMRTogdGVzdHMvZTEwMDBlLXRlc3QuYzoxMDE6CitzdGF0aWMgdm9p
ZCBlMTAwMGVfcmVjZWl2ZV92ZXJpZnkoUUUxMDAwRSAqZCwgaW50ICp0ZXN0X3NvY2tldHMsIFFH
dWVzdEFsbG9jYXRvciAqYWxsb2MpCgpFUlJPUjogY29kZSBpbmRlbnQgc2hvdWxkIG5ldmVyIHVz
ZSB0YWJzCiM0NTg6IEZJTEU6IHRlc3RzL2UxMDAwZS10ZXN0LmM6MjU1OgorXkleSV5JICAgdGVz
dF9zb2NrZXRzWzFdKTskCgp0b3RhbDogMSBlcnJvcnMsIDIgd2FybmluZ3MsIDQ0NSBsaW5lcyBj
aGVja2VkCgpZb3VyIHBhdGNoIGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4gIElm
IGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0byB0
aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCgpDaGVja2luZyBQ
QVRDSCAzNS83MTogdGVzdHMvbGlicW9zOiB2aXJ0aW8tcGNpIGRyaXZlciBhbmQgaW50ZXJmYWNl
IG5vZGVzLi4uCldBUk5JTkc6IGxpbmUgb3ZlciA4MCBjaGFyYWN0ZXJzCiM2NjogRklMRTogdGVz
dHMvbGlicW9zL3ZpcnRpby1wY2kuYzo1MToKK3N0YXRpYyB2b2lkIHF2aXJ0aW9fcGNpX2luaXRf
ZnJvbV9wY2lkZXYoUVZpcnRpb1BDSURldmljZSAqZGV2LCBRUENJRGV2aWNlICpwY2lfZGV2KQoK
dG90YWw6IDAgZXJyb3JzLCAxIHdhcm5pbmdzLCAzMjIgbGluZXMgY2hlY2tlZAoKWW91ciBwYXRj
aCBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZpZXcuICBJZiBhbnkgb2YgdGhlc2UgZXJy
b3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRoZW0gdG8gdGhlIG1haW50YWluZXIsIHNl
ZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgpDaGVja2luZyBQQVRDSCAzNi83MTogdGVzdHMv
bGlicW9zOiByZW1vdmUgZ2xvYmFsX3F0ZXN0IGZyb20gdmlydGlvIGVuZGlhbm5lc3MgY2hlY2tz
Li4uCkNoZWNraW5nIFBBVENIIDM3LzcxOiB0ZXN0cy9saWJxb3M6IHZpcnRpby1tbWlvIGRyaXZl
ciBhbmQgaW50ZXJmYWNlIG5vZGVzLi4uCldBUk5JTkc6IGxpbmUgb3ZlciA4MCBjaGFyYWN0ZXJz
CiMzNjogRklMRTogdGVzdHMvbGlicW9zL3ZpcnRpby1tbWlvLmM6MjE6CisgICAgcmV0dXJuIHF0
ZXN0X3JlYWRiKGRldi0+cXRzLCBkZXYtPmFkZHIgKyBRVklSVElPX01NSU9fREVWSUNFX1NQRUNJ
RklDICsgb2ZmKTsKCldBUk5JTkc6IGxpbmUgb3ZlciA4MCBjaGFyYWN0ZXJzCiM0NDogRklMRTog
dGVzdHMvbGlicW9zL3ZpcnRpby1tbWlvLmM6Mjc6CisgICAgcmV0dXJuIHF0ZXN0X3JlYWR3KGRl
di0+cXRzLCBkZXYtPmFkZHIgKyBRVklSVElPX01NSU9fREVWSUNFX1NQRUNJRklDICsgb2ZmKTsK
CldBUk5JTkc6IGxpbmUgb3ZlciA4MCBjaGFyYWN0ZXJzCiM1MjogRklMRTogdGVzdHMvbGlicW9z
L3ZpcnRpby1tbWlvLmM6MzM6CisgICAgcmV0dXJuIHF0ZXN0X3JlYWRsKGRldi0+cXRzLCBkZXYt
PmFkZHIgKyBRVklSVElPX01NSU9fREVWSUNFX1NQRUNJRklDICsgb2ZmKTsKCldBUk5JTkc6IGxp
bmUgb3ZlciA4MCBjaGFyYWN0ZXJzCiM2MDogRklMRTogdGVzdHMvbGlicW9zL3ZpcnRpby1tbWlv
LmM6Mzk6CisgICAgcmV0dXJuIHF0ZXN0X3JlYWRxKGRldi0+cXRzLCBkZXYtPmFkZHIgKyBRVklS
VElPX01NSU9fREVWSUNFX1NQRUNJRklDICsgb2ZmKTsKCldBUk5JTkc6IGxpbmUgb3ZlciA4MCBj
aGFyYWN0ZXJzCiM5NjogRklMRTogdGVzdHMvbGlicW9zL3ZpcnRpby1tbWlvLmM6NjY6CisgICAg
cmV0dXJuICh1aW50OF90KXF0ZXN0X3JlYWRsKGRldi0+cXRzLCBkZXYtPmFkZHIgKyBRVklSVElP
X01NSU9fREVWSUNFX1NUQVRVUyk7CgpXQVJOSU5HOiBsaW5lIG92ZXIgODAgY2hhcmFjdGVycwoj
MTA0OiBGSUxFOiB0ZXN0cy9saWJxb3MvdmlydGlvLW1taW8uYzo3MjoKKyAgICBxdGVzdF93cml0
ZWwoZGV2LT5xdHMsIGRldi0+YWRkciArIFFWSVJUSU9fTU1JT19ERVZJQ0VfU1RBVFVTLCAodWlu
dDMyX3Qpc3RhdHVzKTsKCldBUk5JTkc6IGxpbmUgb3ZlciA4MCBjaGFyYWN0ZXJzCiMxNDc6IEZJ
TEU6IHRlc3RzL2xpYnFvcy92aXJ0aW8tbW1pby5jOjEwODoKKyAgICBnX2Fzc2VydF9jbXBoZXgo
cXRlc3RfcmVhZGwoZGV2LT5xdHMsIGRldi0+YWRkciArIFFWSVJUSU9fTU1JT19RVUVVRV9QRk4p
LCA9PSwgMCk7CgpXQVJOSU5HOiBsaW5lIG92ZXIgODAgY2hhcmFjdGVycwojMTU1OiBGSUxFOiB0
ZXN0cy9saWJxb3MvdmlydGlvLW1taW8uYzoxMTQ6CisgICAgcmV0dXJuICh1aW50MTZfdClxdGVz
dF9yZWFkbChkZXYtPnF0cywgZGV2LT5hZGRyICsgUVZJUlRJT19NTUlPX1FVRVVFX05VTV9NQVgp
OwoKV0FSTklORzogbGluZSBvdmVyIDgwIGNoYXJhY3RlcnMKIzE3NzogRklMRTogdGVzdHMvbGli
cW9zL3ZpcnRpby1tbWlvLmM6MTMyOgorICAgIHF0ZXN0X3dyaXRlbChkZXYtPnF0cywgZGV2LT5h
ZGRyICsgUVZJUlRJT19NTUlPX1FVRVVFX0FMSUdOLCBkZXYtPnBhZ2Vfc2l6ZSk7CgpFUlJPUjog
Y29kZSBpbmRlbnQgc2hvdWxkIG5ldmVyIHVzZSB0YWJzCiMyMjc6IEZJTEU6IHRlc3RzL2xpYnFv
cy92aXJ0aW8tbW1pby5jOjIwNzoKK15JXkleSSAgICAgIHVpbnQ2NF90IGFkZHIsIHVpbnQzMl90
IHBhZ2Vfc2l6ZSkkCgpFUlJPUjogY29kZSBpbmRlbnQgc2hvdWxkIG5ldmVyIHVzZSB0YWJzCiMy
ODM6IEZJTEU6IHRlc3RzL2xpYnFvcy92aXJ0aW8tbW1pby5oOjQ4OgorXkleSV5JICAgICAgdWlu
dDY0X3QgYWRkciwgdWludDMyX3QgcGFnZV9zaXplKTskCgpXQVJOSU5HOiBsaW5lIG92ZXIgODAg
Y2hhcmFjdGVycwojMjk2OiBGSUxFOiB0ZXN0cy92aXJ0aW8tYmxrLXRlc3QuYzo3MjU6CisgICAg
cXZpcnRpb19tbWlvX2luaXRfZGV2aWNlKGRldiwgZ2xvYmFsX3F0ZXN0LCBNTUlPX0RFVl9CQVNF
X0FERFIsIE1NSU9fUEFHRV9TSVpFKTsKCnRvdGFsOiAyIGVycm9ycywgMTAgd2FybmluZ3MsIDI1
OSBsaW5lcyBjaGVja2VkCgpZb3VyIHBhdGNoIGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJl
dmlldy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQg
dGhlbSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCgpD
aGVja2luZyBQQVRDSCAzOC83MTogdGVzdHMvbGlicW9zOiBhcm0vdmlydCBtYWNoaW5lIG5vZGUu
Li4KV0FSTklORzogYWRkZWQsIG1vdmVkIG9yIGRlbGV0ZWQgZmlsZShzKSwgZG9lcyBNQUlOVEFJ
TkVSUyBuZWVkIHVwZGF0aW5nPwojMjc6IApuZXcgZmlsZSBtb2RlIDEwMDY0NAoKRVJST1I6IGNv
ZGUgaW5kZW50IHNob3VsZCBuZXZlciB1c2UgdGFicwojMTAzOiBGSUxFOiB0ZXN0cy9saWJxb3Mv
YXJtLXZpcnQtbWFjaGluZS5jOjcyOgorXkkgICAgICAgQVJNX1ZJUlRfUkFNX0FERFIsJAoKRVJS
T1I6IGNvZGUgaW5kZW50IHNob3VsZCBuZXZlciB1c2UgdGFicwojMTA0OiBGSUxFOiB0ZXN0cy9s
aWJxb3MvYXJtLXZpcnQtbWFjaGluZS5jOjczOgorXkkgICAgICAgQVJNX1ZJUlRfUkFNX0FERFIg
KyBBUk1fVklSVF9SQU1fU0laRSwkCgpFUlJPUjogY29kZSBpbmRlbnQgc2hvdWxkIG5ldmVyIHVz
ZSB0YWJzCiMxMDU6IEZJTEU6IHRlc3RzL2xpYnFvcy9hcm0tdmlydC1tYWNoaW5lLmM6NzQ6Cite
SSAgICAgICBBUk1fUEFHRV9TSVpFKTskCgp0b3RhbDogMyBlcnJvcnMsIDEgd2FybmluZ3MsIDk3
IGxpbmVzIGNoZWNrZWQKCllvdXIgcGF0Y2ggaGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2
aWV3LiAgSWYgYW55IG9mIHRoZXNlIGVycm9ycwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0
aGVtIHRvIHRoZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KCkNo
ZWNraW5nIFBBVENIIDM5LzcxOiB0ZXN0cy9xZ3JhcGg6IGFkZCBnZW5lcmljIHZpcnRpbyB0ZXN0
Y2FzZXMuLi4KV0FSTklORzogYWRkZWQsIG1vdmVkIG9yIGRlbGV0ZWQgZmlsZShzKSwgZG9lcyBN
QUlOVEFJTkVSUyBuZWVkIHVwZGF0aW5nPwojMjM6IApuZXcgZmlsZSBtb2RlIDEwMDY0NAoKdG90
YWw6IDAgZXJyb3JzLCAxIHdhcm5pbmdzLCAzMiBsaW5lcyBjaGVja2VkCgpZb3VyIHBhdGNoIGhh
cyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMK
YXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNI
RUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCkNoZWNraW5nIFBBVENIIDQwLzcxOiB0ZXN0cy9saWJx
b3M6IHZpcnRpby1zZXJpYWwgZHJpdmVyIGFuZCBpbnRlcmZhY2Ugbm9kZXMuLi4KV0FSTklORzog
YWRkZWQsIG1vdmVkIG9yIGRlbGV0ZWQgZmlsZShzKSwgZG9lcyBNQUlOVEFJTkVSUyBuZWVkIHVw
ZGF0aW5nPwojMzA6IApuZXcgZmlsZSBtb2RlIDEwMDY0NAoKdG90YWw6IDAgZXJyb3JzLCAxIHdh
cm5pbmdzLCAxNTYgbGluZXMgY2hlY2tlZAoKWW91ciBwYXRjaCBoYXMgc3R5bGUgcHJvYmxlbXMs
IHBsZWFzZSByZXZpZXcuICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2
ZXMgcmVwb3J0IHRoZW0gdG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5U
QUlORVJTLgpDaGVja2luZyBQQVRDSCA0MS83MTogcW9zLXRlc3Q6IHZpcnRpby1jb25zb2xlIGFu
ZCB2aXJ0aW8tc2VyaWFsIHRlc3Qgbm9kZS4uLgpXQVJOSU5HOiBhZGRlZCwgbW92ZWQgb3IgZGVs
ZXRlZCBmaWxlKHMpLCBkb2VzIE1BSU5UQUlORVJTIG5lZWQgdXBkYXRpbmc/CiM3ODogCmRlbGV0
ZWQgZmlsZSBtb2RlIDEwMDY0NAoKdG90YWw6IDAgZXJyb3JzLCAxIHdhcm5pbmdzLCA5MCBsaW5l
cyBjaGVja2VkCgpZb3VyIHBhdGNoIGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4g
IElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0
byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCkNoZWNraW5n
IFBBVENIIDQyLzcxOiB0ZXN0cy9saWJxb3M6IHZpcnRpby05cCBkcml2ZXIgYW5kIGludGVyZmFj
ZSBub2Rlcy4uLgpXQVJOSU5HOiBhZGRlZCwgbW92ZWQgb3IgZGVsZXRlZCBmaWxlKHMpLCBkb2Vz
IE1BSU5UQUlORVJTIG5lZWQgdXBkYXRpbmc/CiMzMDogCm5ldyBmaWxlIG1vZGUgMTAwNjQ0Cgp0
b3RhbDogMCBlcnJvcnMsIDEgd2FybmluZ3MsIDIyMiBsaW5lcyBjaGVja2VkCgpZb3VyIHBhdGNo
IGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVzZSBlcnJv
cnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5lciwgc2Vl
CkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCkNoZWNraW5nIFBBVENIIDQzLzcxOiBxb3MtdGVz
dDogdmlydGlvLTlwIHRlc3Qgbm9kZS4uLgpDaGVja2luZyBQQVRDSCA0NC83MTogdGVzdHMvbGli
cW9zOiB2aXJ0aW8tYmFsbG9vbiBkcml2ZXIgYW5kIGludGVyZmFjZSBub2Rlcy4uLgpXQVJOSU5H
OiBhZGRlZCwgbW92ZWQgb3IgZGVsZXRlZCBmaWxlKHMpLCBkb2VzIE1BSU5UQUlORVJTIG5lZWQg
dXBkYXRpbmc/CiMzMDogCm5ldyBmaWxlIG1vZGUgMTAwNjQ0Cgp0b3RhbDogMCBlcnJvcnMsIDEg
d2FybmluZ3MsIDE1OSBsaW5lcyBjaGVja2VkCgpZb3VyIHBhdGNoIGhhcyBzdHlsZSBwcm9ibGVt
cywgcGxlYXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0
aXZlcyByZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJ
TlRBSU5FUlMuCkNoZWNraW5nIFBBVENIIDQ1LzcxOiB0ZXN0cy9xZ3JhcGg6IHJlbW92ZSB2aXJ0
aW8tYmFsbG9vbi10ZXN0Li4uCldBUk5JTkc6IGFkZGVkLCBtb3ZlZCBvciBkZWxldGVkIGZpbGUo
cyksIGRvZXMgTUFJTlRBSU5FUlMgbmVlZCB1cGRhdGluZz8KIzQzOiAKZGVsZXRlZCBmaWxlIG1v
ZGUgMTAwNjQ0Cgp0b3RhbDogMCBlcnJvcnMsIDEgd2FybmluZ3MsIDIxIGxpbmVzIGNoZWNrZWQK
CllvdXIgcGF0Y2ggaGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYgYW55IG9m
IHRoZXNlIGVycm9ycwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRoZSBtYWlu
dGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KQ2hlY2tpbmcgUEFUQ0ggNDYv
NzE6IHRlc3RzL2xpYnFvczogdmlydGlvLXJuZyBkcml2ZXIgYW5kIGludGVyZmFjZSBub2Rlcy4u
LgpXQVJOSU5HOiBhZGRlZCwgbW92ZWQgb3IgZGVsZXRlZCBmaWxlKHMpLCBkb2VzIE1BSU5UQUlO
RVJTIG5lZWQgdXBkYXRpbmc/CiMzMDogCm5ldyBmaWxlIG1vZGUgMTAwNjQ0Cgp0b3RhbDogMCBl
cnJvcnMsIDEgd2FybmluZ3MsIDE1NiBsaW5lcyBjaGVja2VkCgpZb3VyIHBhdGNoIGhhcyBzdHls
ZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZh
bHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFU
Q0ggaW4gTUFJTlRBSU5FUlMuCkNoZWNraW5nIFBBVENIIDQ3LzcxOiBxb3MtdGVzdDogdmlydGlv
LXJuZyB0ZXN0IG5vZGUuLi4KQ2hlY2tpbmcgUEFUQ0ggNDgvNzE6IHRlc3RzL2xpYnFvczogdmly
dGlvLWJsayBkcml2ZXIgYW5kIGludGVyZmFjZSBub2Rlcy4uLgpXQVJOSU5HOiBhZGRlZCwgbW92
ZWQgb3IgZGVsZXRlZCBmaWxlKHMpLCBkb2VzIE1BSU5UQUlORVJTIG5lZWQgdXBkYXRpbmc/CiMz
MDogCm5ldyBmaWxlIG1vZGUgMTAwNjQ0Cgp0b3RhbDogMCBlcnJvcnMsIDEgd2FybmluZ3MsIDE3
MSBsaW5lcyBjaGVja2VkCgpZb3VyIHBhdGNoIGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJl
dmlldy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQg
dGhlbSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCkNo
ZWNraW5nIFBBVENIIDQ5LzcxOiBxb3MtdGVzdDogdmlydGlvLWJsayB0ZXN0IG5vZGUuLi4KV0FS
TklORzogYWRkZWQsIG1vdmVkIG9yIGRlbGV0ZWQgZmlsZShzKSwgZG9lcyBNQUlOVEFJTkVSUyBu
ZWVkIHVwZGF0aW5nPwojNjk6IApkZWxldGVkIGZpbGUgbW9kZSAxMDA2NDQKCldBUk5JTkc6IGxp
bmUgb3ZlciA4MCBjaGFyYWN0ZXJzCiM3NjM6IEZJTEU6IHRlc3RzL3ZpcnRpby1ibGstdGVzdC5j
OjU3NjoKKyAgICAgICAgICAgICAgICAgICAgICAgICAmKFFQQ0lBZGRyZXNzKSB7IC5kZXZmbiA9
IFFQQ0lfREVWRk4oUENJX1NMT1RfSFAsIDApIH0pOwoKRVJST1I6IGNvZGUgaW5kZW50IHNob3Vs
ZCBuZXZlciB1c2UgdGFicwojODY4OiBGSUxFOiB0ZXN0cy92aXJ0aW8tYmxrLXRlc3QuYzo2NDM6
CiteSV5JXkkgICB0bXBfcGF0aCk7JAoKdG90YWw6IDEgZXJyb3JzLCAyIHdhcm5pbmdzLCA3OTcg
bGluZXMgY2hlY2tlZAoKWW91ciBwYXRjaCBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZp
ZXcuICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRo
ZW0gdG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgoKQ2hl
Y2tpbmcgUEFUQ0ggNTAvNzE6IHRlc3RzL2xpYnFvczogdmlydGlvLW5ldCBkcml2ZXIgYW5kIGlu
dGVyZmFjZSBub2Rlcy4uLgpXQVJOSU5HOiBhZGRlZCwgbW92ZWQgb3IgZGVsZXRlZCBmaWxlKHMp
LCBkb2VzIE1BSU5UQUlORVJTIG5lZWQgdXBkYXRpbmc/CiMzMDogCm5ldyBmaWxlIG1vZGUgMTAw
NjQ0Cgp0b3RhbDogMCBlcnJvcnMsIDEgd2FybmluZ3MsIDI0NCBsaW5lcyBjaGVja2VkCgpZb3Vy
IHBhdGNoIGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVz
ZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5l
ciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCkNoZWNraW5nIFBBVENIIDUxLzcxOiBx
b3MtdGVzdDogdmlydGlvLW5ldCB0ZXN0IG5vZGUuLi4KQ2hlY2tpbmcgUEFUQ0ggNTIvNzE6IHRl
c3RzL2xpYnFvczogc3VwcG9ydCBtdWx0aXF1ZXVlIGZvciB2aXJ0aW8tbmV0Li4uCkNoZWNraW5n
IFBBVENIIDUzLzcxOiB2aG9zdC11c2VyLXRlc3Q6IGFsd2F5cyB1c2UgMjU2IE1pQiBvZiBndWVz
dCBtZW1vcnkuLi4KQ2hlY2tpbmcgUEFUQ0ggNTQvNzE6IHFvcy10ZXN0OiB2aG9zdC11c2VyIHRl
c3Qgbm9kZS4uLgpFUlJPUjogbGluZSBvdmVyIDkwIGNoYXJhY3RlcnMKIzEwNjogRklMRTogdGVz
dHMvdmhvc3QtdXNlci10ZXN0LmM6MTczOgorc3RhdGljIHZvaWQgYXBwZW5kX21lbV9vcHRzKFRl
c3RTZXJ2ZXIgKnNlcnZlciwgR1N0cmluZyAqY21kX2xpbmUsIGludCBzaXplLCBlbnVtIHRlc3Rf
bWVtZmQgbWVtZmQpCgpXQVJOSU5HOiBsaW5lIG92ZXIgODAgY2hhcmFjdGVycwojNDk0OiBGSUxF
OiB0ZXN0cy92aG9zdC11c2VyLXRlc3QuYzo4NzI6CitzdGF0aWMgdm9pZCB0ZXN0X3Zob3N0X3Vz
ZXJfc3RhcnRlZCh2b2lkICpvYmosIHZvaWQgKmFyZywgUUd1ZXN0QWxsb2NhdG9yICphbGxvYykK
CnRvdGFsOiAxIGVycm9ycywgMSB3YXJuaW5ncywgNTk0IGxpbmVzIGNoZWNrZWQKCllvdXIgcGF0
Y2ggaGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYgYW55IG9mIHRoZXNlIGVy
cm9ycwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRoZSBtYWludGFpbmVyLCBz
ZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KCkNoZWNraW5nIFBBVENIIDU1LzcxOiB0ZXN0
cy9saWJxb3M6IHZpcnRpby1zY3NpIGRyaXZlciBhbmQgaW50ZXJmYWNlIG5vZGVzLi4uCldBUk5J
Tkc6IGFkZGVkLCBtb3ZlZCBvciBkZWxldGVkIGZpbGUocyksIGRvZXMgTUFJTlRBSU5FUlMgbmVl
ZCB1cGRhdGluZz8KIzMwOiAKbmV3IGZpbGUgbW9kZSAxMDA2NDQKCnRvdGFsOiAwIGVycm9ycywg
MSB3YXJuaW5ncywgMTYzIGxpbmVzIGNoZWNrZWQKCllvdXIgcGF0Y2ggaGFzIHN0eWxlIHByb2Js
ZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYgYW55IG9mIHRoZXNlIGVycm9ycwphcmUgZmFsc2UgcG9z
aXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRoZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBpbiBN
QUlOVEFJTkVSUy4KQ2hlY2tpbmcgUEFUQ0ggNTYvNzE6IHFvcy10ZXN0OiB2aXJ0aW8tc2NzaSB0
ZXN0IG5vZGUuLi4KQ2hlY2tpbmcgUEFUQ0ggNTcvNzE6IHRlc3RzL2xpYnFvczogcmVtb3ZlIHBy
ZS1xZ3JhcGggUVZpcnRpb1BDSURldmljZSBBUEkuLi4KV0FSTklORzogbGluZSBvdmVyIDgwIGNo
YXJhY3RlcnMKIzE0NTogRklMRTogdGVzdHMvbGlicW9zL3ZpcnRpby1wY2kuYzozNjQ6CitzdGF0
aWMgdm9pZCBxdmlydGlvX3BjaV9pbml0X2Zyb21fcGNpZGV2KFFWaXJ0aW9QQ0lEZXZpY2UgKmRl
diwgUVBDSURldmljZSAqcGNpX2RldikKCnRvdGFsOiAwIGVycm9ycywgMSB3YXJuaW5ncywgMTUy
IGxpbmVzIGNoZWNrZWQKCllvdXIgcGF0Y2ggaGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2
aWV3LiAgSWYgYW55IG9mIHRoZXNlIGVycm9ycwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0
aGVtIHRvIHRoZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KQ2hl
Y2tpbmcgUEFUQ0ggNTgvNzE6IHRlc3RzOiBtb3ZlIHZpcnRpbyBlbnRpcmVseSB0byBxb3MtdGVz
dC4uLgpDaGVja2luZyBQQVRDSCA1OS83MTogcW9zLXRlc3Q6IGFjOTcgdGVzdCBub2RlLi4uCkNo
ZWNraW5nIFBBVENIIDYwLzcxOiBxb3MtdGVzdDogdHBjaTIwMCB0ZXN0IG5vZGUuLi4KV0FSTklO
RzogYWRkZWQsIG1vdmVkIG9yIGRlbGV0ZWQgZmlsZShzKSwgZG9lcyBNQUlOVEFJTkVSUyBuZWVk
IHVwZGF0aW5nPwojNDM6IApuZXcgZmlsZSBtb2RlIDEwMDY0NAoKdG90YWw6IDAgZXJyb3JzLCAx
IHdhcm5pbmdzLCA4NiBsaW5lcyBjaGVja2VkCgpZb3VyIHBhdGNoIGhhcyBzdHlsZSBwcm9ibGVt
cywgcGxlYXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0
aXZlcyByZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJ
TlRBSU5FUlMuCkNoZWNraW5nIFBBVENIIDYxLzcxOiBxb3MtdGVzdDogaXBvY3RhbDIzMiB0ZXN0
IG5vZGUuLi4KQ2hlY2tpbmcgUEFUQ0ggNjIvNzE6IHFvcy10ZXN0OiBuZTJrX3BjaSB0ZXN0IG5v
ZGUuLi4KQ2hlY2tpbmcgUEFUQ0ggNjMvNzE6IHFvcy10ZXN0OiBudm1lIHRlc3Qgbm9kZS4uLgpX
QVJOSU5HOiBsaW5lIG92ZXIgODAgY2hhcmFjdGVycwojMTUwOiBGSUxFOiB0ZXN0cy9udm1lLXRl
c3QuYzo4MToKKyAgICBxb3NfYWRkX3Rlc3QoIm9vYi1jbWItYWNjZXNzIiwgIm52bWUiLCBudm1l
dGVzdF9vb2JfY21iX3Rlc3QsICYoUU9TR3JhcGhUZXN0T3B0aW9ucykgewoKdG90YWw6IDAgZXJy
b3JzLCAxIHdhcm5pbmdzLCAxMjkgbGluZXMgY2hlY2tlZAoKWW91ciBwYXRjaCBoYXMgc3R5bGUg
cHJvYmxlbXMsIHBsZWFzZSByZXZpZXcuICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxz
ZSBwb3NpdGl2ZXMgcmVwb3J0IHRoZW0gdG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENI
IGluIE1BSU5UQUlORVJTLgpDaGVja2luZyBQQVRDSCA2NC83MTogcW9zLXRlc3Q6IHBjbmV0IHRl
c3Qgbm9kZS4uLgpDaGVja2luZyBQQVRDSCA2NS83MTogcW9zLXRlc3Q6IHNwYXByLXBoYiB0ZXN0
IG5vZGUuLi4KQ2hlY2tpbmcgUEFUQ0ggNjYvNzE6IHFvcy10ZXN0OiB1c2ItaGNkLW9oY2kgdGVz
dCBub2RlLi4uCkNoZWNraW5nIFBBVENIIDY3LzcxOiBxb3MtdGVzdDogdm14bmV0MyB0ZXN0IG5v
ZGUuLi4KQ2hlY2tpbmcgUEFUQ0ggNjgvNzE6IHFvcy10ZXN0OiBlczEzNzAgdGVzdCBub2RlLi4u
CkNoZWNraW5nIFBBVENIIDY5LzcxOiBxb3MtdGVzdDogZWVwcm8xMDAgdGVzdCBub2RlLi4uCkNo
ZWNraW5nIFBBVENIIDcwLzcxOiBxb3MtdGVzdDogZTEwMDAgdGVzdCBub2RlLi4uCkNoZWNraW5n
IFBBVENIIDcxLzcxOiBxb3MtdGVzdDogbWVnYXNhcyB0ZXN0IG5vZGUuLi4KV0FSTklORzogbGlu
ZSBvdmVyIDgwIGNoYXJhY3RlcnMKIzEwNzogRklMRTogdGVzdHMvbWVnYXNhcy10ZXN0LmM6NDc6
CitzdGF0aWMgdm9pZCBtZWdhc2FzX3BkX2dldF9pbmZvX2Z1enoodm9pZCAqb2JqLCB2b2lkICpk
YXRhLCBRR3Vlc3RBbGxvY2F0b3IgKmFsbG9jKQoKV0FSTklORzogbGluZSBvdmVyIDgwIGNoYXJh
Y3RlcnMKIzE1NzogRklMRTogdGVzdHMvbWVnYXNhcy10ZXN0LmM6ODc6CisgICAgcW9zX2FkZF90
ZXN0KCJkY21kL3BkLWdldC1pbmZvL2Z1enoiLCAibWVnYXNhcyIsIG1lZ2FzYXNfcGRfZ2V0X2lu
Zm9fZnV6eiwgTlVMTCk7Cgp0b3RhbDogMCBlcnJvcnMsIDIgd2FybmluZ3MsIDEzNCBsaW5lcyBj
aGVja2VkCgpZb3VyIHBhdGNoIGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4gIElm
IGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0byB0
aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCj09PSBPVVRQVVQg
RU5EID09PQoKVGVzdCBjb21tYW5kIGV4aXRlZCB3aXRoIGNvZGU6IDEKCgpUaGUgZnVsbCBsb2cg
aXMgYXZhaWxhYmxlIGF0Cmh0dHA6Ly9wYXRjaGV3Lm9yZy9sb2dzLzE1NDM4NTEyMDQtNDExODYt
MS1naXQtc2VuZC1lbWFpbC1wYm9uemluaUByZWRoYXQuY29tL3Rlc3RpbmcuY2hlY2twYXRjaC8/
dHlwZT1tZXNzYWdlLgotLS0KRW1haWwgZ2VuZXJhdGVkIGF1dG9tYXRpY2FsbHkgYnkgUGF0Y2hl
dyBbaHR0cDovL3BhdGNoZXcub3JnL10uClBsZWFzZSBzZW5kIHlvdXIgZmVlZGJhY2sgdG8gcGF0
Y2hldy1kZXZlbEByZWRoYXQuY29t


