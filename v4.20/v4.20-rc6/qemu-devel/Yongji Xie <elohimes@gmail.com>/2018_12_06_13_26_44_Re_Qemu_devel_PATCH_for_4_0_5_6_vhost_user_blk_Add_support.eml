Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 08:46:28 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id A8E8858042F
	for <like.xu@linux.intel.com>; Thu,  6 Dec 2018 05:27:23 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 06 Dec 2018 05:27:23 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A83zJNRReQGh11XihjuzzkxLfa9psv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa6zYhGN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRODYOy?=
 =?us-ascii?q?bYQBD+QPM+VGoYbhulUOtRmzCwujCe/yxDJEmmH53bYh3uQ9DQ3LxhAsE84SvH?=
 =?us-ascii?q?nWqtj+KaccUfqyzKnN1TjMbfRW2THy6IjKcxAqvPCDXbNufsHMzkQgCQfFjlKQ?=
 =?us-ascii?q?qYzkOjOayP8NvnOU7+plT+2vimonpxttrTiow8chk4/EjZ8WxFDc7Sh13po5KN?=
 =?us-ascii?q?6iREJmfNKpE4Fcuz+UOoZ2WM8uXmNltD4kxrAHpZK2fi0HyJokyhHEd/CKdoeF?=
 =?us-ascii?q?7xHiWeueJDp0mm5pdbe6ihmp/kWs1+vxXdSu3llQtCpKiNzMu2gN1xPN7siHTe?=
 =?us-ascii?q?Nw/kOg2TaUywDT8ftIIU8ylarGMZIhxaQwlpULvUTCGC/5hln2gbeIekk4+eWk?=
 =?us-ascii?q?8fnrbqjlq5OGKYN5hAHzPr4zlsG9Geg4NxIBX2mf+eSyzr3j+kj5Ta1TjvIol6?=
 =?us-ascii?q?nZrYnWKtkFqa6nHQBV1p8v5A24Dze71tQXgWcILElCdBKDjojpOE/BLOr3DPei?=
 =?us-ascii?q?m1mslDZrx/bbPrzuGJnNL37DkKv/crZ58UJT1A0zzdVE6pJSDbEBJv3zWknstN?=
 =?us-ascii?q?DCCR85KQO0z/79CNphzoMeRX6PAqiBPaPWsF+I5fwgL/ODZY8Iozv9L/kl5/jz?=
 =?us-ascii?q?jX42g1MdfK+p3YcJZ3C8BPhpP0KZYX+/yuoHCnoA6woiUPTx2hrFVT9Ie230Wa?=
 =?us-ascii?q?U66TcmToW8AsDGT4GphbWHmyCjApxRYHsBE12JDDLkepuJX6QxbjmPKJpkmz0A?=
 =?us-ascii?q?Sb/zUoIkyFSiuRH3z/99I/PJ9zYEnZTk0tdz+qvUjx5l7iF+DcmWzzSQSXpplH?=
 =?us-ascii?q?gDXT480fNDphls102SlKt/n/tGPc1a4f9EQkImOJfZifZnWP7oXQeUT9CPR1Sn?=
 =?us-ascii?q?CuWnDHllQ9Y2w94Lbl1VFNCrjxSF1C2vVexG34eXDYA5p/qPl0P6INxwnjOfjP?=
 =?us-ascii?q?Es?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BKFADxIglcmBHrdtBkGwEBAQEfAwEBA?=
 =?us-ascii?q?QQBAQGBTAKBL4EtgTWDeoh4jAEGgTWJIAOOK4FzFBgUh1ciNAkNAQMBAQEBAQE?=
 =?us-ascii?q?CARMBAQEBAQgLCwYbDiMMgjYFAgMaAQaCWwEBAQECAQECIAQZAQUKDB0BAgECA?=
 =?us-ascii?q?QIGAQEFBQsKAwICIgQCAgMBHQEBEQEFARwZBYMcgWkBAwgFCAEEmg48iw18FgU?=
 =?us-ascii?q?BF4J3BYQ7ChknDV2BNwIGEnmLExd4gQeEI4JXhS6CVwKJKzYGhktRhAKLLC4Jj?=
 =?us-ascii?q?hiDLhiRNY8HiXUPIYElgg0zGggbFWyCO4InFxKDOIpgNDGBB4hwgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0BKFADxIglcmBHrdtBkGwEBAQEfAwEBAQQBAQGBTAKBL4E?=
 =?us-ascii?q?tgTWDeoh4jAEGgTWJIAOOK4FzFBgUh1ciNAkNAQMBAQEBAQECARMBAQEBAQgLC?=
 =?us-ascii?q?wYbDiMMgjYFAgMaAQaCWwEBAQECAQECIAQZAQUKDB0BAgECAQIGAQEFBQsKAwI?=
 =?us-ascii?q?CIgQCAgMBHQEBEQEFARwZBYMcgWkBAwgFCAEEmg48iw18FgUBF4J3BYQ7ChknD?=
 =?us-ascii?q?V2BNwIGEnmLExd4gQeEI4JXhS6CVwKJKzYGhktRhAKLLC4JjhiDLhiRNY8HiXU?=
 =?us-ascii?q?PIYElgg0zGggbFWyCO4InFxKDOIpgNDGBB4hwgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,322,1539673200"; 
   d="scan'208";a="54802411"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 06 Dec 2018 05:27:22 -0800
Received: from localhost ([::1]:41024 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gUtgX-0004rZ-Tx
	for like.xu@linux.intel.com; Thu, 06 Dec 2018 08:27:21 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:41581)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <elohimes@gmail.com>) id 1gUtgJ-0004pV-V1
	for qemu-devel@nongnu.org; Thu, 06 Dec 2018 08:27:13 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <elohimes@gmail.com>) id 1gUtgC-00078V-14
	for qemu-devel@nongnu.org; Thu, 06 Dec 2018 08:27:07 -0500
Received: from mail-yb1-xb41.google.com ([2607:f8b0:4864:20::b41]:42330)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <elohimes@gmail.com>) id 1gUtgA-00077O-3k
	for qemu-devel@nongnu.org; Thu, 06 Dec 2018 08:26:58 -0500
Received: by mail-yb1-xb41.google.com with SMTP id s8so315857ybe.9
	for <qemu-devel@nongnu.org>; Thu, 06 Dec 2018 05:26:57 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
	h=mime-version:references:in-reply-to:from:date:message-id:subject:to
	:cc; bh=JXYzUqrySlDuVDBVi/Nr/VHh28w9BqbRULwFB71fSBY=;
	b=njqYv7ec8F1Z63qZvQabBwoRkYHllvIry6WkQ7gfZefKHTSI1XzJV6vkyp8RRGB5Fh
	dbQfBygDj3XwSVk+DSbOo1y+Q4pd82lUhVL9dIoMPCAKHluN1BvYCIhiTYQhqtJycWcw
	L6fQ/b+LYSXE16TS64GceyIiTLG42xhyQtkC5zUNnu5ACQVwIBqYQy3frG4Dxg4IsDei
	lSNYeQngAiYdOGd7MM12pYzyA2TwK8hR0ceFLFXUHIh0cN3N6Ul3yY8UlL6ie+zqdo81
	1xSfy9d9QUV0Tqp4XPoF0FDCdu6N3b3zig/A12PH5QpTNv1zkkT1dXhzOJWz9CKODsyt
	BcTQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:mime-version:references:in-reply-to:from:date
	:message-id:subject:to:cc;
	bh=JXYzUqrySlDuVDBVi/Nr/VHh28w9BqbRULwFB71fSBY=;
	b=Wt8soNlSsS9G7gtpR46Yd7PPBR4oG8TibQSQkdE3jQ22I4ju3U+ayWb2Vb2sEGdnAg
	eIaKrm5ey5qQCt2r2oQRYwuokWt0JiEFHRweo2uSeG7lkVnjKfhGy371Zfg/ivSdc6qr
	wt4CaSRDb/8KUtzArggOZCRiYnC8AD/PXGuc1Pr2zMKwZQk6zwWsP4l5PmNpYD3RZa8h
	vBZQSSNI5OwmcCNXdL/ejbukN9s1rTkghZ7oDhbQZzQBfIriP0pZ6/HbsdwQ4liLwqX6
	yuff8E8TyGn2s2u5ltDj/La2+TX3VEo1UM4NUDBWU23KiJ1W8dCt7AwcyiWWzjmMfASm
	FQWg==
X-Gm-Message-State: AA+aEWYj2C6Az1JucTWD2MAngKR2Zxo7gTiLNhjFAjpBbOiN6jtjw0LZ
	cpaLu7+8cjSTZNfT0AZMlx3689pnR45xoy4UChM=
X-Google-Smtp-Source: AFSGD/XSgZTU6it/nfRrleEOwLCdxwc5cwX9uWg9qaSBNym7RYMxfOd5eG2+6WvudmdSvd7wbgdNQAsTBG82eX6OxhE=
X-Received: by 2002:a25:c887:: with SMTP id
	y129-v6mr26939325ybf.264.1544102817102; 
	Thu, 06 Dec 2018 05:26:57 -0800 (PST)
MIME-Version: 1.0
References: <20181206063552.6701-1-xieyongji@baidu.com>
	<20181206063552.6701-6-xieyongji@baidu.com>
	<932521544098909@sas1-fc7737ec834f.qloud-c.yandex.net>
In-Reply-To: <932521544098909@sas1-fc7737ec834f.qloud-c.yandex.net>
From: Yongji Xie <elohimes@gmail.com>
Date: Thu, 6 Dec 2018 21:26:44 +0800
Message-ID: <CAONzpcZJ94OjAg+nOf_WbFSZOPJ8XcYP89_kWV+qTRQjy=sTpA@mail.gmail.com>
To: yury-kotov@yandex-team.ru
Content-Type: text/plain; charset="UTF-8"
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2607:f8b0:4864:20::b41
Subject: Re: [Qemu-devel] [PATCH for-4.0 5/6] vhost-user-blk: Add support
 for reconnecting backend
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: zhangyu31@baidu.com, "Michael S. Tsirkin" <mst@redhat.com>,
	Xie Yongji <xieyongji@baidu.com>, lilin24@baidu.com,
	qemu-devel@nongnu.org, chaiwen@baidu.com,
	marcandre.lureau@redhat.com, nixun@baidu.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Thu, 6 Dec 2018 at 20:21, Yury Kotov <yury-kotov@yandex-team.ru> wrote:
>
> 06.12.2018, 09:38, "elohimes@gmail.com" <elohimes@gmail.com>:
> > From: Xie Yongji <xieyongji@baidu.com>
> >
> > Since the new message VHOST_USER_SET_VRING_INFLIGHT,
> > the backend is able to restart safely. This patch
> > allow qemu to reconnect the backend after connection
> > closed.
> >
> > Signed-off-by: Xie Yongji <xieyongji@baidu.com>
> > Signed-off-by: Ni Xun <nixun@baidu.com>
> > Signed-off-by: Zhang Yu <zhangyu31@baidu.com>
> > ---
> >  hw/block/vhost-user-blk.c | 169 +++++++++++++++++++++++++++--
> >  include/hw/virtio/vhost-user-blk.h | 4 +
> >  2 files changed, 161 insertions(+), 12 deletions(-)
> >
> > diff --git a/hw/block/vhost-user-blk.c b/hw/block/vhost-user-blk.c
> > index 1451940845..663e91bcf6 100644
> > --- a/hw/block/vhost-user-blk.c
> > +++ b/hw/block/vhost-user-blk.c
> > @@ -101,7 +101,7 @@ const VhostDevConfigOps blk_ops = {
> >      .vhost_dev_config_notifier = vhost_user_blk_handle_config_change,
> >  };
> >
> > -static void vhost_user_blk_start(VirtIODevice *vdev)
> > +static int vhost_user_blk_start(VirtIODevice *vdev)
> >  {
> >      VHostUserBlk *s = VHOST_USER_BLK(vdev);
> >      BusState *qbus = BUS(qdev_get_parent_bus(DEVICE(vdev)));
> > @@ -110,13 +110,13 @@ static void vhost_user_blk_start(VirtIODevice *vdev)
> >
> >      if (!k->set_guest_notifiers) {
> >          error_report("binding does not support guest notifiers");
> > - return;
> > + return -ENOSYS;
> >      }
> >
> >      ret = vhost_dev_enable_notifiers(&s->dev, vdev);
> >      if (ret < 0) {
> >          error_report("Error enabling host notifiers: %d", -ret);
> > - return;
> > + return ret;
> >      }
> >
> >      ret = k->set_guest_notifiers(qbus->parent, s->dev.nvqs, true);
> > @@ -140,12 +140,13 @@ static void vhost_user_blk_start(VirtIODevice *vdev)
> >          vhost_virtqueue_mask(&s->dev, vdev, i, false);
> >      }
> >
> > - return;
> > + return ret;
> >
> >  err_guest_notifiers:
> >      k->set_guest_notifiers(qbus->parent, s->dev.nvqs, false);
> >  err_host_notifiers:
> >      vhost_dev_disable_notifiers(&s->dev, vdev);
> > + return ret;
> >  }
> >
> >  static void vhost_user_blk_stop(VirtIODevice *vdev)
> > @@ -164,7 +165,6 @@ static void vhost_user_blk_stop(VirtIODevice *vdev)
> >      ret = k->set_guest_notifiers(qbus->parent, s->dev.nvqs, false);
> >      if (ret < 0) {
> >          error_report("vhost guest notifier cleanup failed: %d", ret);
> > - return;
> >      }
> >
> >      vhost_dev_disable_notifiers(&s->dev, vdev);
> > @@ -174,21 +174,39 @@ static void vhost_user_blk_set_status(VirtIODevice *vdev, uint8_t status)
> >  {
> >      VHostUserBlk *s = VHOST_USER_BLK(vdev);
> >      bool should_start = status & VIRTIO_CONFIG_S_DRIVER_OK;
> > + int ret;
> >
> >      if (!vdev->vm_running) {
> >          should_start = false;
> >      }
> >
> > - if (s->dev.started == should_start) {
> > + if (s->should_start == should_start) {
> > + return;
> > + }
> > +
> > + if (!s->connected || s->dev.started == should_start) {
> > + s->should_start = should_start;
> >          return;
> >      }
> >
> >      if (should_start) {
> > - vhost_user_blk_start(vdev);
> > + s->should_start = true;
> > + /* make sure we ignore fake guest kick by
> > + * vhost_dev_enable_notifiers() */
> > + barrier();
> > + ret = vhost_user_blk_start(vdev);
> > + if (ret < 0) {
> > + error_report("vhost-user-blk: vhost start failed: %s",
> > + strerror(-ret));
> > + qemu_chr_fe_disconnect(&s->chardev);
> > + }
> >      } else {
> >          vhost_user_blk_stop(vdev);
> > + /* make sure we ignore fake guest kick by
> > + * vhost_dev_disable_notifiers() */
> > + barrier();
> > + s->should_start = false;
> >      }
> > -
> >  }
> >
> >  static uint64_t vhost_user_blk_get_features(VirtIODevice *vdev,
> > @@ -218,13 +236,22 @@ static uint64_t vhost_user_blk_get_features(VirtIODevice *vdev,
> >  static void vhost_user_blk_handle_output(VirtIODevice *vdev, VirtQueue *vq)
> >  {
> >      VHostUserBlk *s = VHOST_USER_BLK(vdev);
> > - int i;
> > + int i, ret;
> >
> >      if (!(virtio_host_has_feature(vdev, VIRTIO_F_VERSION_1) &&
> >          !virtio_vdev_has_feature(vdev, VIRTIO_F_VERSION_1))) {
>
> This condition looks complicated. Is it correct? I'm not sure but may be
> the second '!' is odd. Sorry, I know that it isn't part of this patch, but it
> looks like this cond was added in one of your old patches.
>

This means we only support that case when guest driver is virtio-0.9 and host
device is virtio-1.0.

> >          return;
> >      }
> >
> > + if (s->should_start) {
> > + return;
> > + }
> > + s->should_start = true;
> > +
> > + if (!s->connected) {
> > + return;
> > + }
> > +
> >      if (s->dev.started) {
> >          return;
> >      }
> > @@ -232,7 +259,13 @@ static void vhost_user_blk_handle_output(VirtIODevice *vdev, VirtQueue *vq)
> >      /* Some guests kick before setting VIRTIO_CONFIG_S_DRIVER_OK so start
> >       * vhost here instead of waiting for .set_status().
> >       */
> > - vhost_user_blk_start(vdev);
> > + ret = vhost_user_blk_start(vdev);
> > + if (ret < 0) {
> > + error_report("vhost-user-blk: vhost start failed: %s",
> > + strerror(-ret));
> > + qemu_chr_fe_disconnect(&s->chardev);
> > + return;
> > + }
> >
> >      /* Kick right away to begin processing requests already in vring */
> >      for (i = 0; i < s->dev.nvqs; i++) {
> > @@ -245,6 +278,106 @@ static void vhost_user_blk_handle_output(VirtIODevice *vdev, VirtQueue *vq)
> >      }
> >  }
> >
> > +static void vhost_user_blk_reset(VirtIODevice *vdev)
> > +{
> > + VHostUserBlk *s = VHOST_USER_BLK(vdev);
> > +
> > + if (s->vhost_user) {
> > + vhost_user_inflight_reset(s->vhost_user);
> > + }
> > +}
> > +
> > +static int vhost_user_blk_connect(DeviceState *dev)
> > +{
> > + VirtIODevice *vdev = VIRTIO_DEVICE(dev);
> > + VHostUserBlk *s = VHOST_USER_BLK(vdev);
> > + int ret = 0;
> > +
> > + if (s->connected) {
> > + return 0;
> > + }
> > + s->connected = true;
> > +
> > + s->dev.nvqs = s->num_queues;
> > + s->dev.vqs = s->vqs;
> > + s->dev.vq_index = 0;
> > + s->dev.backend_features = 0;
> > +
> > + vhost_dev_set_config_notifier(&s->dev, &blk_ops);
> > +
> > + ret = vhost_dev_init(&s->dev, s->vhost_user, VHOST_BACKEND_TYPE_USER, 0);
> > + if (ret < 0) {
> > + error_report("vhost-user-blk: vhost initialization failed: %s",
> > + strerror(-ret));
> > + return ret;
> > + }
> > +
> > + if (s->should_start && !s->dev.started) {
>
> It seems that `!s->dev.started` is always true here because
> vhost_dev_init sets dev.started = 0 on success.
>

Good catch! Will fix it in v2.

Thanks,
Yongji

