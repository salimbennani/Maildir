Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 05 Dec 2018 08:45:21 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from FMSMGA003.fm.intel.com (fmsmga003.fm.intel.com [10.253.24.29])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 66388580375;
	Tue,  4 Dec 2018 14:43:21 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by FMSMGA003-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 04 Dec 2018 14:43:21 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A89J0+hdGV1n37Kflky3dE3melGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc68YxeN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRBDI2i?=
 =?us-ascii?q?coUBAekPM+FaoInzqFQAogC+BRGuCe701jNFhWX70bEg3ug9DQ3L2hErEdIUsH?=
 =?us-ascii?q?TTqdX4LKAcXvqpzKnUzTXDbulZ2Szg44bNaB8uv/GMXbZsfsrS10YkCgTIjlCT?=
 =?us-ascii?q?qYP/JD6ayuQNs3Kc7+plVOKvlmsnpxt2oji1ycchk4/EjZ8WxFDc7Sh13po5KN?=
 =?us-ascii?q?miREJmb9OoDoFcuzyZOodqWM8vQmNltD4kxrAHp5K3YC0HxIknyhHDbvGLbZSE?=
 =?us-ascii?q?7gzmWeqMJDp3n3Nod6ixhxu3/0itye3xW8yq31lXrydKjtzBuWoR2BHS8MeKTO?=
 =?us-ascii?q?Z28F271jaVzQ/T7/lJIUAqmqrfLJ4s2qAwlpUNvkTZBCP2m1v5jLWQdko6/uik?=
 =?us-ascii?q?8ePnYq/pppOENo90jB/xMrg2l8ChHeg1NhICU3WV9OiizrHv4E70TKlQgvA3kK?=
 =?us-ascii?q?TVqJXaKt4apq69DQ9VyIEj6xOnAjei0dQYm2QHLV1cdBKEkYfpIVfOL+78Dfum?=
 =?us-ascii?q?hFStnjFryO7cPrD6HJXNIWbMkK37cbZ+9UFc0gwzws5b555ODbEBOv3zVlfrtN?=
 =?us-ascii?q?PEFh85LxC0w+H/BdV514MeWnyADrWWMaPPqlKI4uMvI++RZI4aojr9Kv4l5+Lw?=
 =?us-ascii?q?gn89g1MSYa6p3Z4PYnCiAvtmO1mZYWbrgtoZEWcFpAs+TPDwh12FSzJTZ2uyUL?=
 =?us-ascii?q?g65jE0E4+mCYbDRoawgL2Oxiu7H5tWZnxYBVCIC3vna4KEW/IUYiKIPsBhiiAE?=
 =?us-ascii?q?VaSmS4I51xGusxH1x6BkLurT/C0Ys5Xj2cNx5+3SkxEy6DN1A96c02GLU2F7gG?=
 =?us-ascii?q?cISyUq06B4pEx30k2D3rRgg/xECdxT4OtEXR0hNZ7cyOx6CMr+WhjbcdeLU1um?=
 =?us-ascii?q?RtSmATcsTtM+2dMOYkB9G8m8gRDHxSalH7gVl7mTDpwu7q3cx2TxJ9p6y3ve16?=
 =?us-ascii?q?kulV8mTtFLNW2nnKF/8QfTCpXNk0WYkaaqaKsd0DTM9GeF0WqBokVYXBRsXqXC?=
 =?us-ascii?q?WHAVflHWosjh5kPeU7+uDqwqPRZbxs6cNKRGcN3pgk9ARPf4JtveZWW9m2OzBR?=
 =?us-ascii?q?aNwrOBd47qe2Qb3CXAB0kIiQET/XCaNQcgAietuX7RDDtrFVj3eUPj7fF+qG+n?=
 =?us-ascii?q?Tk8z1wyFcldu16Sr9RIPhfyTUfUT3qkatycnsDh0GFe939TLC9uPvQZhfaNcYc?=
 =?us-ascii?q?8j71dDz27Wqwt9Ppm4JaB4mlEeaxh3v1/p1xhvFoVAkM0qrHQ2zApyKaOUyk9B?=
 =?us-ascii?q?eymf3ZDqPr3XK2/y/B+0Zq7S21He1suW+6gV5PQ5rVXjoB+mFk44/3p71NlV1m?=
 =?us-ascii?q?OW5o/WAwoKTZLxTkE3+gBgqLHefCY86J3b1H12Paavrz/NxsgmBO0myhanYddS?=
 =?us-ascii?q?K6eEFA70E80HCMmiMu0qm161bh0aOOBe7rI7P8Sjd/Gewq6kIP5gnC66jWRA+I?=
 =?us-ascii?q?180l+M+zBgReLS3pcFw+uX3g2IVzrniFehs8b3mZ1LZD0IH2q/zzTkC5BVZqFo?=
 =?us-ascii?q?YYkLDmKuKdWtxtpin57tR2JY9Fm7ClMc2c+mZQCdb0bg0g1Xz0gXp2KomTG5zz?=
 =?us-ascii?q?Btjz4mtK6f0zHQzOT4cxoHPHVGRG1jjVfqPIi1gMoWXEmubwg1ihSl4Vz2yLRc?=
 =?us-ascii?q?pKR6N2PTW1tHfzDqL2F+Vau9rrqDY89V5JIoqylXS/m8YVaBR775ohsa1T7jHm?=
 =?us-ascii?q?REyDA6cTGqpov2nxhghG2BK3ZzqWLTedtsyhfH+NzcWflR0yIERCZikznXBVu8?=
 =?us-ascii?q?P96z8dWPjZjDseO+V2OnVpJNdynm1oeAtCq95W13DhyzhfGzmtv7EQck1S/3zc?=
 =?us-ascii?q?VlVSLNrBzkeInky7y6Mf57fklvHFL969B1GoZknosyhZEQ32MXhpGU/XoBjGfy?=
 =?us-ascii?q?Ps9X2aP4bHoRWzELx8TZ7xTi2E1mNniJ3Z72Vm2Bwst9YNm3emAW1Tg878xQCK?=
 =?us-ascii?q?eU8aZLnS16olejqQLRYP59nioSyPc06X4ahf0JtxQpzimHHr8SGkxYNzT2lxuU?=
 =?us-ascii?q?99C+sLlXZGG3fLi11Up+nsquAKuMow5CQ3b5ZoktHTVr4cphKlLM32b+6oXleN?=
 =?us-ascii?q?nWcNISuQeYkxbGj+hJNp0xkuAGijZgOWL4pXcl0fI0jQRy3ZGmu4iKM3lt/KW8?=
 =?us-ascii?q?AhJCNzz6fcUT+iz2jaZFn8abxISvHpRnGjUWU5rkV/OoEDQOtfv5MwaCCiEzqn?=
 =?us-ascii?q?CeGbDHBw+Q9F9mr27TE5CsL3yYP2MWzdJmRBmAPkBfhB0UUS4+np44EACq2cPg?=
 =?us-ascii?q?fF145jAX+l73tB9Mxvh0OBn4V2fVvB2oZSssSJiDMBpW6RlP50XPPsyb8O1zBD?=
 =?us-ascii?q?tU/oG7oAyON2ybZBlIDWcTVUyfHF3jOriu5d/d8+mXHOa+Lv3OYamQpuxaTfuH?=
 =?us-ascii?q?2ZWv0o5+9TaWKsqPJmViD+E82kdbXXF5HNnZmywSSyMNkSLBddWbpBC6+i14tc?=
 =?us-ascii?q?2/9PXrWATy5YqAEbdSMNNv+wyojqeHLeKfmCF5KTNA3JMW2XDI0KQf3EIViyx2?=
 =?us-ascii?q?dzmiD7UAtS3OTKLRgKNXDAQbayR8NMRW9aI8wxJNNNXfitP00L54k/E0B01EVV?=
 =?us-ascii?q?znhsGme8gKL3uhO1PAAUaBLK6GKiHTw8HrfaO8TqVdg/9JtxKrozaUDU/iMi6H?=
 =?us-ascii?q?lznoTB2vNeBMjCeGPB1Roo29cxBtCXT9Q9LicBG0LNh3jTguy70umnzKLXIcMS?=
 =?us-ascii?q?R7c05Vsr2Q7CZYju9jFGBb8nVlLfeLmyCC4uncK5YWt+ZrAytum+Jb5nQ616Va?=
 =?us-ascii?q?7CVeSPNpnyvSq8Zko0u6nemX1jpnTB1Opy5LhY2Ru0ViPKTZ9p9YVnfF/BIC92?=
 =?us-ascii?q?OQCxsRqtthC93vvb1Qy9fVmKLyLjdC78zb/c8GC8fIL8KHNSlpDR28IjneRCAB?=
 =?us-ascii?q?RCSofTXFgEZRm/Wb7H69oZ0zq5yqk50LHPsTeFUrF/9SI0V/GN0PaMN+XykgkL?=
 =?us-ascii?q?OXpMoJ42eu6hjcEoEShJfNHtKfG+/uLjnR2aNDbRtLza/QLokJMID/nUt4ZQ8+?=
 =?us-ascii?q?1KHDAUmYZ81RpiRnYkdgpUxX8z5kU3E30kTpQgq35TkYEvvi2lYfjAdvKcs38y?=
 =?us-ascii?q?z3qwM+IFbb4iQql1IqsdHkhzmLd3j2NqjmGcl6AjT1uwAbKJTkRU4hYQSsnEAi?=
 =?us-ascii?q?Pi3DWLR5i7pmfHpszgjGts0cN+RbSPhhaQMMxfCefL0L2Flcri6kyAcT4OjMIZ?=
 =?us-ascii?q?BijgwvcIOp6XVa1FQwP5YOOaXMKf8RnRBrjaWUs3rtj7hpzQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AiAAC/AQdch0O0hNFkHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGBMII7J4wSjA6CIYkLjiqBcxIBARgTAYdMIjQJDQEDAQEBAQEBAgETAQE?=
 =?us-ascii?q?BCA0JCCkjDII2JAGCYgMDAQIkCwENAQE3AQUJAQFQAzEBBQEcBgESBYMcgXUNA?=
 =?us-ascii?q?QSZczyKHYFsM4J2AQEFhy4IEoddgxOBHBeBQD+DdYsKiSmBeYQSfVCPSgmRNiO?=
 =?us-ascii?q?JW4dLiQaPSgIEAgQFAgUPIYElgg1NMAiDJ4IbDBeIXoVgHzKBBQEBimEBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AiAAC/AQdch0O0hNFkHQEBBQEHBQGBUQgBCwGBMII7J4w?=
 =?us-ascii?q?SjA6CIYkLjiqBcxIBARgTAYdMIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2J?=
 =?us-ascii?q?AGCYgMDAQIkCwENAQE3AQUJAQFQAzEBBQEcBgESBYMcgXUNAQSZczyKHYFsM4J?=
 =?us-ascii?q?2AQEFhy4IEoddgxOBHBeBQD+DdYsKiSmBeYQSfVCPSgmRNiOJW4dLiQaPSgIEA?=
 =?us-ascii?q?gQFAgUPIYElgg1NMAiDJ4IbDBeIXoVgHzKBBQEBimEBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,315,1539673200"; 
   d="scan'208";a="65332561"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 04 Dec 2018 14:43:19 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726624AbeLDWnS (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 4 Dec 2018 17:43:18 -0500
Received: from mail-pl1-f195.google.com ([209.85.214.195]:40895 "EHLO
        mail-pl1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726554AbeLDWnP (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 4 Dec 2018 17:43:15 -0500
Received: by mail-pl1-f195.google.com with SMTP id u18so9013984plq.7
        for <linux-kernel@vger.kernel.org>; Tue, 04 Dec 2018 14:43:15 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=chromium.org; s=google;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=yHna8u9FKf6J9ziMeKKaX8sDyEF2n0RgvcE1So7rIQI=;
        b=k2vxh+Evf9lsyWVrN9fS36QB3Ng0vE/z7UShF5YeK7s/GVgjWi8cSxWqAzpmmej+Jr
         aDebf4Y4iMLix4pmlppvtnP4fNw3Js3jaadey9sr7EkLBKkAgnqDlGGIhwSR7QMJvir0
         uT2x+y8R9VoSg+QZdL/EZcKNKsWsUcf/sDp5A=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=yHna8u9FKf6J9ziMeKKaX8sDyEF2n0RgvcE1So7rIQI=;
        b=g3YFj18f8jkZrjqOikcUtoNDp6zFBAX3PQRwrPhMYnV2hRcXIkm4CQyDXfIxXaHHzK
         6wHW4wbS3MqU6KSBb+JZi3NuNQkRKU3gXM17p4oL5z6ecYhdaZOJT/Gf9dPpSMHF9e12
         sdUiCNJe/ypA8+q1sYpkYuuZwr1kJHxrG1hxxDT8bt+OVP/7+G2ORV70pwznEX9u5/Hg
         0+Jm6EwvizsfckMLWbWZ1ywzmBC4o5gFyPSasYcomz1LExCHIrNvVShW09q1ESYqdd87
         +udx+dQTCq5V+6JaG+/9EBpvW7/LIm1YzJOLAJ/EQ07v/BjYIkNc4HAfGrJ3xbGD0P+r
         GUFQ==
X-Gm-Message-State: AA+aEWYGPVhgxFjht8PDTWeauxr0c5sswuuqFYyp0LF6VzAhrD3sM9ch
        FBGCA4lPD5zB4XNkdOhgg3ovJQ==
X-Google-Smtp-Source: AFSGD/W3KyMz+d4oTcSdX4UD3mgvHaq25DPtv0Xd51dzH+9s0/gWhzBc9BYJRhjqfKt2QHim6okhaA==
X-Received: by 2002:a17:902:6113:: with SMTP id t19mr21091745plj.248.1543963395251;
        Tue, 04 Dec 2018 14:43:15 -0800 (PST)
Received: from mka.mtv.corp.google.com ([2620:15c:202:1:b6af:f85:ed6c:ac6a])
        by smtp.gmail.com with ESMTPSA id y184sm21961917pgd.71.2018.12.04.14.43.14
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 04 Dec 2018 14:43:14 -0800 (PST)
From: Matthias Kaehlcke <mka@chromium.org>
To: Rob Clark <robdclark@gmail.com>, David Airlie <airlied@linux.ie>,
        Rob Herring <robh+dt@kernel.org>,
        Mark Rutland <mark.rutland@arm.com>,
        Andy Gross <andy.gross@linaro.org>,
        David Brown <david.brown@linaro.org>
Cc: Archit Taneja <architt@codeaurora.org>,
        Sean Paul <seanpaul@chromium.org>,
        Rajesh Yadav <ryadav@codeaurora.org>,
        Douglas Anderson <dianders@chromium.org>,
        Stephen Boyd <swboyd@chromium.org>,
        Jeykumar Sankaran <jsanka@codeaurora.org>,
        linux-arm-msm@vger.kernel.org, dri-devel@lists.freedesktop.org,
        freedreno@lists.freedesktop.org, devicetree@vger.kernel.org,
        linux-kernel@vger.kernel.org, Matthias Kaehlcke <mka@chromium.org>
Subject: [PATCH v4 2/8] drm/msm/dsi: 28nm 8960 PHY: Get ref clock from the DT
Date: Tue,  4 Dec 2018 14:42:28 -0800
Message-Id: <20181204224234.62619-3-mka@chromium.org>
X-Mailer: git-send-email 2.20.0.rc1.387.gf8505762e3-goog
In-Reply-To: <20181204224234.62619-1-mka@chromium.org>
References: <20181204224234.62619-1-mka@chromium.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Get the ref clock of the PHY from the device tree instead of
hardcoding its name and rate.

Signed-off-by: Matthias Kaehlcke <mka@chromium.org>
---
Changes in v4:
- always use parent rate in dsi_pll_28nm_clk_set_rate()
- pass name of VCO ref clock to pll_28nm_register() instead of
  storing it in a struct field
- updated commit message

Changes in v3:
- use default name and rate if the ref clock is not specified
  in the DT
- store vco_ref_clk_name instead of vco_ref_clk
- fixed check for EPROBE_DEFER
- renamed VCO_REF_CLK_RATE to VCO_REF_CLK_DEFAULT_RATE

Changes in v2:
- patch added to the series
---
 .../gpu/drm/msm/dsi/pll/dsi_pll_28nm_8960.c   | 24 +++++++++++++++----
 1 file changed, 19 insertions(+), 5 deletions(-)

diff --git a/drivers/gpu/drm/msm/dsi/pll/dsi_pll_28nm_8960.c b/drivers/gpu/drm/msm/dsi/pll/dsi_pll_28nm_8960.c
index 49008451085b8..76e5188169b91 100644
--- a/drivers/gpu/drm/msm/dsi/pll/dsi_pll_28nm_8960.c
+++ b/drivers/gpu/drm/msm/dsi/pll/dsi_pll_28nm_8960.c
@@ -47,7 +47,6 @@
 
 #define NUM_PROVIDED_CLKS	2
 
-#define VCO_REF_CLK_RATE	27000000
 #define VCO_MIN_RATE		600000000
 #define VCO_MAX_RATE		1200000000
 
@@ -125,7 +124,7 @@ static int dsi_pll_28nm_clk_set_rate(struct clk_hw *hw, unsigned long rate,
 	DBG("rate=%lu, parent's=%lu", rate, parent_rate);
 
 	temp = rate / 10;
-	val = VCO_REF_CLK_RATE / 10;
+	val = parent_rate / 10;
 	fb_divider = (temp * VCO_PREF_DIV_RATIO) / val;
 	fb_divider = fb_divider / 2 - 1;
 	pll_write(base + REG_DSI_28nm_8960_PHY_PLL_CTRL_1,
@@ -406,11 +405,12 @@ static void dsi_pll_28nm_destroy(struct msm_dsi_pll *pll)
 					pll_28nm->clks, pll_28nm->num_clks);
 }
 
-static int pll_28nm_register(struct dsi_pll_28nm *pll_28nm)
+static int pll_28nm_register(struct dsi_pll_28nm *pll_28nm,
+			     const char *ref_clk_name)
 {
 	char *clk_name, *parent_name, *vco_name;
 	struct clk_init_data vco_init = {
-		.parent_names = (const char *[]){ "pxo" },
+		.parent_names = &ref_clk_name,
 		.num_parents = 1,
 		.flags = CLK_IGNORE_UNUSED,
 		.ops = &clk_ops_dsi_pll_28nm_vco,
@@ -494,6 +494,8 @@ struct msm_dsi_pll *msm_dsi_pll_28nm_8960_init(struct platform_device *pdev,
 {
 	struct dsi_pll_28nm *pll_28nm;
 	struct msm_dsi_pll *pll;
+	struct clk *vco_ref_clk;
+	const char *vco_ref_clk_name;
 	int ret;
 
 	if (!pdev)
@@ -506,6 +508,18 @@ struct msm_dsi_pll *msm_dsi_pll_28nm_8960_init(struct platform_device *pdev,
 	pll_28nm->pdev = pdev;
 	pll_28nm->id = id + 1;
 
+	vco_ref_clk = devm_clk_get(&pdev->dev, "ref");
+	if (!IS_ERR(vco_ref_clk)) {
+		vco_ref_clk_name = __clk_get_name(vco_ref_clk);
+	} else {
+		ret = PTR_ERR(vco_ref_clk);
+		if (ret == -EPROBE_DEFER)
+			return ERR_PTR(ret);
+
+		dev_warn(&pdev->dev, "'ref' clock is not specified, using default name\n");
+		vco_ref_clk_name = "pxo";
+	}
+
 	pll_28nm->mmio = msm_ioremap(pdev, "dsi_pll", "DSI_PLL");
 	if (IS_ERR_OR_NULL(pll_28nm->mmio)) {
 		dev_err(&pdev->dev, "%s: failed to map pll base\n", __func__);
@@ -524,7 +538,7 @@ struct msm_dsi_pll *msm_dsi_pll_28nm_8960_init(struct platform_device *pdev,
 	pll->en_seq_cnt = 1;
 	pll->enable_seqs[0] = dsi_pll_28nm_enable_seq;
 
-	ret = pll_28nm_register(pll_28nm);
+	ret = pll_28nm_register(pll_28nm, vco_ref_clk_name);
 	if (ret) {
 		dev_err(&pdev->dev, "failed to register PLL: %d\n", ret);
 		return ERR_PTR(ret);
-- 
2.20.0.rc1.387.gf8505762e3-goog

