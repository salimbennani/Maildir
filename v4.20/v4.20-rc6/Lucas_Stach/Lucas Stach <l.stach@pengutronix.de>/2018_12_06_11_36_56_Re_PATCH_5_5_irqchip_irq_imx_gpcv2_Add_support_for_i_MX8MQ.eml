Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 08:44:42 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C3D7B58042F;
	Thu,  6 Dec 2018 03:37:09 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 06 Dec 2018 03:37:09 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AcVBFIBFn26m+J20HW2sdiJ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75osmybnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJVCJPH4Oy?=
 =?us-ascii?q?YZUBAeUDM+ZXs47zqFQBoxulHQmhBvjiyiNLi3LswaE3yfgtHAPA0Qc9H9wOqn?=
 =?us-ascii?q?PUrNDtOakUTOC60LPHzS7eZP1LxTfy8pTHchA8qvyLWbJ8a9HRyVU1GAzZjlWd?=
 =?us-ascii?q?spTlMC2T1uQCrmib8/BgVeWpi24mpAB9uCWgydk1h4TPm4kbxFfE9SBjz4Y0I9?=
 =?us-ascii?q?21UEt7YNGnHZtVriGWLZd5Td8kTmp1uyg60qULtYCncCUO0pgr2hDSZ+Kdf4SV?=
 =?us-ascii?q?4R/vSPydLDZ6iX59Zr6zmwq+/VWlx+D9VMS7zFNHoytHn9XQs30BygDf5tSCR/?=
 =?us-ascii?q?dg40is3DOC2x7J5exCPEs6j7DUK4Q7zb41jpcTsVrMHivxmEjukq+WeVsr+vKy?=
 =?us-ascii?q?5+TkfLrmvJmcOJFwig3kNaQugMO/Dfw5MggIQWeb5fyx2KP/8UD9WrlGk/M7nr?=
 =?us-ascii?q?fDvJzHJskXurS1Dg5X34o77hawFTam0NAWnXkdK1JFfQqKj4zoO1HIPfD5Au6z?=
 =?us-ascii?q?g1eynzdxwfDJILnhDozKLnnNlrfuY6x95lVCyAo8099f/YhYCrIfL/LpXE/+qt?=
 =?us-ascii?q?jYAgU+MwyuzObrEM992Z8GWWKTHq+ZN7vfsVuJ5uIsPeaAfoAUuCvmJvgh5v7u?=
 =?us-ascii?q?i2I5mFAHcamo25sXdG63HvB8L0qFZnrsh88LEX0WsQomUOzqlFqCXCZTZ3moXq?=
 =?us-ascii?q?I8+is0CIW8AYfDW4CimrqB3CigE51SZ2BGDE2MEHjye4WFXfcMdDydIst7njMY?=
 =?us-ascii?q?UrihTpcr1Quyuw/i17pnMu3U9zUatZLkytd5/e7TlRY09TxyCMSQyGWNT2Bynm?=
 =?us-ascii?q?MVSD46xqF/oUphylid1ah0meBXFdtW5/lRSAc1KYbcz/BmC9D1Qg/OZMyJSFah?=
 =?us-ascii?q?QtWlGz0xVMg+w90VbkZ5GtWiiA3D3iWwD78UkbyLGII78qbG03ftIMZ9zm7M1L?=
 =?us-ascii?q?M9gFk+XstPKWqmi7Z89wfJAY7FiUGZl6eweqQa0y7A72ODzWuIvEFFXw98S6TF?=
 =?us-ascii?q?XXYDZkTIqdT1/F/NT7irCb4/KAtO1daCKrdWat3ulVhJWe3sOMrAbG6rm2e/Hx?=
 =?us-ascii?q?CIxqiSY4rsfGkd2CbdCE0Akw0I+XaGNA4+Bjquom7EDTxuE07vbF3o8eVktHy7?=
 =?us-ascii?q?SUo0xRmQb0J9z7q15gIVhfuERvwOxL0Epjkupy90HFmn2dLWEMSPpwx6caVYYN?=
 =?us-ascii?q?M95kpH1G3Duwx8OJygM75thloEfwtruEPu0g19Cp9cnsgysHMq0A1yJLqE0FNA?=
 =?us-ascii?q?cjOY2ozwOr3XK2Xo4BCjcanW2kva0NaX/KcP5+81q1HivAGvC0oj/G9r09hT03?=
 =?us-ascii?q?uA+JrKCBAeXo72UkYy7xJ6va3VYjEh54PI0n1hKbO7sjvc1NMmGuQkygyscMxC?=
 =?us-ascii?q?MKyZDgDyFc4aB8+wKOExn1ipbxQEPP1d9aIuPsOmceeG17CvPOp6gD2mimFH6p?=
 =?us-ascii?q?hn0k2Q7yp8VvLI35EdzvCYwwuLTSvzgE2gs8D3g49EYz4SE3G7ySjlAo5Re6Jz?=
 =?us-ascii?q?cZwKCWeoP8242NF+i4TxVH5f8V6pH0kG19OxeRqOc1z92hVd1V4WoXO7gyS41S?=
 =?us-ascii?q?F7kzYzoqqZwiPO2eXieAMbNWFRQGltkEnjIZKzj9AcR0WoawkplB245Uf13aRb?=
 =?us-ascii?q?paJ/L3XNTkdMZST5M2ZiUq6ovLqYf8FP8I8osTlQUOmkYVGaS6TxohsA3yP4Am?=
 =?us-ascii?q?tewis2dzWrupX/ghx7h3iRLHd1rHrFZ85wwQ3T68DbRf5UxjAGXjV3iSHLBlig?=
 =?us-ascii?q?ONmk5deUmI3ZsuC9VGKhUYdfcTLxwoODtyu75GtqDgO5n/2ont3nEA460TL01t?=
 =?us-ascii?q?VwVCXIqgr8bZfv16igLe1neUxoDkfm68VmAoF+jpcwhJYI1HkanJqV+mALkWXy?=
 =?us-ascii?q?MdVdwq/+aHsNRTgWw9/a+gTl2UtjLm6XyIL9THmS3sxhZ9yiaGMMxi0999xKCL?=
 =?us-ascii?q?uT7LFcnit6uFu4oRjRYfhghDgdz/Qu5WUeg+EIvgot0yqcDqoTHUleISzjiRCI?=
 =?us-ascii?q?48qio6VQYWalaaKw21ZmndC9ELGCpRlRWHP4epchByB89Mt+P0zX0H3v9I7kYs?=
 =?us-ascii?q?LfYswJth2biBrAi+lVKJQslvsFnyZnOGT9vWE7xO4/lxBhwZa6vI2fIWV34K25?=
 =?us-ascii?q?GgJYNiHyZ84L5jHtiqNektyX3o+1GJVhBy4LXIDpTf+zFDIStPLnNxuBETEmq3?=
 =?us-ascii?q?ebH6bfEhGb6Et8s33PFJWrPWmNJHYF1dViWAWdJEtHjQ8PRjo6mZo5Fh2wyMzl?=
 =?us-ascii?q?bUd0/TQR5l/+qhtRxeNkLRj/UmHDpAi2bjc4UoSQLB1T7gta/UfaLdSe7v5vHy?=
 =?us-ascii?q?Ff5pChrhaCKmmFaARTF20JRlaIB1P+Prmt+NnA9fKXBvGlIvvKYLWOr/FeVviS?=
 =?us-ascii?q?yZKu1Itm4yiDNsGVMnZ+CP0731JJXWplFMTBhzUPVysXmjrNbs6cuRe84zB3od?=
 =?us-ascii?q?q58PjxQwLv4o2PC7RJPNVr+hC2h7qDNuGKiCZ4LzZYyo0DxXvSxLcD214Sjjlk?=
 =?us-ascii?q?dyOxHrQYqS7NUKXQl7dXDxEFaiNzN8hI76Mm0glOI87bjdz12aBijv4oEFdITl?=
 =?us-ascii?q?jhmsCvZcwXLGCxLlLHBECXNLuYIT3H2d34YaS5SbdIluVbqwWwuSqHE0/kJjmM?=
 =?us-ascii?q?jSTpWAu1Me5SjCCXJhheuICmfxZpCGjjSs/maxKhPN92iz023aM7hnfQOWEANj?=
 =?us-ascii?q?h8dltHrqeM4iNAnvV/B2tB42J5LemFniaV9fXXJowKvvtrHCt0kflX4HA7y7tT?=
 =?us-ascii?q?8SFFS+Z5mCrUrt5yvV6mlvODxSZgUBpLsjxLnp6EvV1+OaXF8ZlNQXbF8wgL7W?=
 =?us-ascii?q?WVChQKocNqC9zvu69KzNjPm7n+KDND89LS4MsdCNLYKMOBMHo9LxXpHCTYAxcC?=
 =?us-ascii?q?TT6uZinjgBl0lv2I+2zdlZ07sJ7rhtJaQ7lXTlEqUOgfC15jG8IqL5J+Xzdimr?=
 =?us-ascii?q?me2opAwHOkp1HjVcNVv53dHqaXCO/kbiSIi7ZFagEgyKn9a48UM9uo9VZlbwxe?=
 =?us-ascii?q?gY/DAALrQdlGomU1akkvvExG8FBmQ2s8xl7/bQWs8DkfGKjnzVYNlgJibLF1p3?=
 =?us-ascii?q?/X6FAtKw+P/XNonQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ATAACvCAlch0O0hNFkHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGBMII7J4N6iBmOLoh+jjyBcywTAYdWIjQJDQEDAQEBAQEBAgETAQEBCA0?=
 =?us-ascii?q?JCCkvgjYkAYJiAwMBAiAECwFGBgkBAQgCDgwCJgICAx4HLwYBEgWDHIFqAxUBA?=
 =?us-ascii?q?wGKCZtQfDOFQYJBDYIcgQuLE4FXP4QjgleFLoJXAosklQ0uBwKBFYkmgm1wg0a?=
 =?us-ascii?q?JbIdJiQ6FeYtKgg0zGiSDO4InF44ePzKBBQEBimcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ATAACvCAlch0O0hNFkHQEBBQEHBQGBUQgBCwGBMII7J4N?=
 =?us-ascii?q?6iBmOLoh+jjyBcywTAYdWIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkvgjYkAYJiA?=
 =?us-ascii?q?wMBAiAECwFGBgkBAQgCDgwCJgICAx4HLwYBEgWDHIFqAxUBAwGKCZtQfDOFQYJ?=
 =?us-ascii?q?BDYIcgQuLE4FXP4QjgleFLoJXAosklQ0uBwKBFYkmgm1wg0aJbIdJiQ6FeYtKg?=
 =?us-ascii?q?g0zGiSDO4InF44ePzKBBQEBimcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,322,1539673200"; 
   d="scan'208";a="54080351"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 06 Dec 2018 03:37:07 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729456AbeLFLhF (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 6 Dec 2018 06:37:05 -0500
Received: from metis.ext.pengutronix.de ([85.220.165.71]:34375 "EHLO
        metis.ext.pengutronix.de" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727908AbeLFLhF (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 6 Dec 2018 06:37:05 -0500
Received: from kresse.hi.pengutronix.de ([2001:67c:670:100:1d::2a])
        by metis.ext.pengutronix.de with esmtp (Exim 4.89)
        (envelope-from <l.stach@pengutronix.de>)
        id 1gUrxg-0006GY-Ld; Thu, 06 Dec 2018 12:36:56 +0100
Message-ID: <1544096216.3709.63.camel@pengutronix.de>
Subject: Re: [PATCH 5/5] irqchip/irq-imx-gpcv2: Add support for i.MX8MQ
From: Lucas Stach <l.stach@pengutronix.de>
To: Andrey Smirnov <andrew.smirnov@gmail.com>,
        Marc Zyngier <marc.zyngier@arm.com>
Cc: Thomas Gleixner <tglx@linutronix.de>,
        Jason Cooper <jason@lakedaemon.net>, cphealy@gmail.com,
        Leonard Crestez <leonard.crestez@nxp.com>,
        "A.s. Dong" <aisheng.dong@nxp.com>,
        Richard Zhu <hongxing.zhu@nxp.com>, linux-imx@nxp.com,
        linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org
Date: Thu, 06 Dec 2018 12:36:56 +0100
In-Reply-To: <20181206073125.7255-6-andrew.smirnov@gmail.com>
References: <20181206073125.7255-1-andrew.smirnov@gmail.com>
         <20181206073125.7255-6-andrew.smirnov@gmail.com>
Content-Type: text/plain; charset="UTF-8"
X-Mailer: Evolution 3.22.6-1+deb9u1 
Mime-Version: 1.0
Content-Transfer-Encoding: 8bit
X-SA-Exim-Connect-IP: 2001:67c:670:100:1d::2a
X-SA-Exim-Mail-From: l.stach@pengutronix.de
X-SA-Exim-Scanned: No (on metis.ext.pengutronix.de); SAEximRunCond expanded to false
X-PTX-Original-Recipient: linux-kernel@vger.kernel.org
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Am Mittwoch, den 05.12.2018, 23:31 -0800 schrieb Andrey Smirnov:
> Add code needed to support i.MX8MQ.
> 
> > Cc: Thomas Gleixner <tglx@linutronix.de>
> > Cc: Jason Cooper <jason@lakedaemon.net>
> > Cc: Marc Zyngier <marc.zyngier@arm.com>
> Cc: cphealy@gmail.com
> Cc: l.stach@pengutronix.de
> > Cc: Leonard Crestez <leonard.crestez@nxp.com>
> > Cc: "A.s. Dong" <aisheng.dong@nxp.com>
> > Cc: Richard Zhu <hongxing.zhu@nxp.com>
> Cc: linux-imx@nxp.com
> Cc: linux-arm-kernel@lists.infradead.org
> Cc: linux-kernel@vger.kernel.org
> Signed-off-by: Andrey Smirnov <andrew.smirnov@gmail.com>
> ---
>  drivers/irqchip/irq-imx-gpcv2.c | 31 +++++++++++++++++++++++++++++--
>  1 file changed, 29 insertions(+), 2 deletions(-)
> 
> diff --git a/drivers/irqchip/irq-imx-gpcv2.c b/drivers/irqchip/irq-imx-gpcv2.c
> index c2b2b3128ddd..17a2dad2d4c2 100644
> --- a/drivers/irqchip/irq-imx-gpcv2.c
> +++ b/drivers/irqchip/irq-imx-gpcv2.c
> @@ -17,6 +17,9 @@
>  
> >  #define GPC_IMR1_CORE0		0x30
> >  #define GPC_IMR1_CORE1		0x40
> > +#define GPC_IMR1_CORE2		0x1c0
> > +#define GPC_IMR1_CORE3		0x1d0
> +
>  
>  struct gpcv2_irqchip_data {
> > >  	struct raw_spinlock	rlock;
> @@ -192,11 +195,19 @@ static const struct irq_domain_ops gpcv2_irqchip_data_domain_ops = {
> > >  	.free		= irq_domain_free_irqs_common,
>  };
>  
> +static const struct of_device_id gpcv2_of_match[] = {
> > +	{ .compatible = "fsl,imx7d-gpc",  .data = (const void *) 2 },
> > +	{ .compatible = "fsl,imx8mq-gpc", .data = (const void *) 4 },
> > +	{ /* END */ }
> +};
> +
>  static int __init imx_gpcv2_irqchip_init(struct device_node *node,
> >  			       struct device_node *parent)
>  {
> >  	struct irq_domain *parent_domain, *domain;
> >  	struct gpcv2_irqchip_data *cd;
> > +	const struct of_device_id *id;
> > +	unsigned long core_num;
> >  	int i;
>  
> >  	if (!parent) {
> @@ -204,6 +215,14 @@ static int __init imx_gpcv2_irqchip_init(struct device_node *node,
> >  		return -ENODEV;
> >  	}
>  
> > +	id = of_match_node(gpcv2_of_match, node);
> > +	if (!id) {
> > +		pr_err("%pOF: unknown compatibility string\n", node);
> > +		return -ENODEV;
> > +	}
> +
> > +	core_num = (unsigned long)id->data;
> +
> >  	parent_domain = irq_find_host(parent);
> >  	if (!parent_domain) {
> >  		pr_err("%pOF: unable to get parent domain\n", node);
> @@ -236,8 +255,16 @@ static int __init imx_gpcv2_irqchip_init(struct device_node *node,
>  
> >  	/* Initially mask all interrupts */
> >  	for (i = 0; i < IMR_NUM; i++) {
> > -		writel_relaxed(~0, cd->gpc_base + GPC_IMR1_CORE0 + i * 4);
> > -		writel_relaxed(~0, cd->gpc_base + GPC_IMR1_CORE1 + i * 4);
> > +		void __iomem *reg = cd->gpc_base + i * 4;
> +
> > +		switch (core_num) {
> > +		case 4:
> > +			writel_relaxed(~0, reg + GPC_IMR1_CORE2);
> > +			writel_relaxed(~0, reg + GPC_IMR1_CORE3);
> > > +		case 2:	      /* FALLTHROUGH */
> > +			writel_relaxed(~0, reg + GPC_IMR1_CORE0);
> > +			writel_relaxed(~0, reg + GPC_IMR1_CORE1);
> +		}

The writes being not being in linear descending core order does trigger
something in me, but obviously this doesn't has any effect on the code,
so:

Reviewed-by: Lucas Stach <l.stach@pengutronix.de>

>  		cd->wakeup_sources[i] = ~0;
> >  	}
>  
