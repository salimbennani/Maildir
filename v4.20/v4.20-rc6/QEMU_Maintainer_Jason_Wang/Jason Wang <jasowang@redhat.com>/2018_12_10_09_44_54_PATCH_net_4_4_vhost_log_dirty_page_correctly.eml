Return-Path: <virtualization-bounces@lists.linux-foundation.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 10 Dec 2018 18:15:33 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 0F7FF58028E
	for <like.xu@linux.intel.com>; Mon, 10 Dec 2018 01:46:47 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga007-1.jf.intel.com with ESMTP; 10 Dec 2018 01:46:46 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A4qJE9hZYdyxCmPtGJfAsFLP/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZps2yYR7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyxPDJ2h?=
 =?us-ascii?q?YYUBDOQOP+hYr5H/qlUMohayGAehCP/gxTBUiXH2xrM13v89EQzExgEsA84CvG?=
 =?us-ascii?q?jKoNjzKawcUfq1zK7NzTjba/1Zwyz96I/Ochs8of6DR7RwccXMwkQoFQPKlE6Q?=
 =?us-ascii?q?qYvrPjyP0OQNvHOW7/B+Wu2yi24osR1xriKzyccrj4nEn4QYwU3K+yV+xYY6P9?=
 =?us-ascii?q?y4SEhjbN6gEZtQsTyaNoR4QsMlXmFovjs1xacauZ66eygKzo4rxxnFa/yIdYWD?=
 =?us-ascii?q?/xHtVP6JLDtli39pZKiziwiv/US90OHwS8i53VJQoiZYjNXArm4B2wDX58SdV/?=
 =?us-ascii?q?dw8Fmt1SyS2w3Q5OxIO144mKndJpU82LA/jIATvl7GHiLumEX5kquWdkI89+it?=
 =?us-ascii?q?8evnY7HmqoWYN491jAH+L6svmsK4AeQlNAgBQnKU+fi91L3k+031WrJKjuc5kq?=
 =?us-ascii?q?XBsZDaI9oUprKhDgNI3Ysv9wyzAym73NgFh3ULMVNIdRadg4T0JV3COPX4Au2+?=
 =?us-ascii?q?g1Sonjdr3ffGPrj5D5XTL3jDiqvhfatn5E5YyQoyzMpQ545VCrEGJvL/Q1T+tN?=
 =?us-ascii?q?vFDh8/LwO73f3nBc551oMfQmKPHrSZPLnWsV+J4OIvPuaNaJYbuDb6Nvgl4ePh?=
 =?us-ascii?q?gmUlmV8ceqmp24EbaHeiHvRpO0mZe2bjgs8dEWcWuQozVOjqiFyBUTFNfXqzUL?=
 =?us-ascii?q?886yo/CIKnC4fDW4+sjKaA3Ce9Ap1ZeGRGBkqQHnfvcoXXE8oKcz+Yd899jiQf?=
 =?us-ascii?q?B//mT446yQrosA781qppKffS9iQEtJXlkt9v6KrWnBA28DVySMOFz2CKSXozgG?=
 =?us-ascii?q?ISWyI/2KFtqFB8zVHQ7K5jnvYNENVS4+9OABk7L4LBxuh7GdnuWwXHO82EUUur?=
 =?us-ascii?q?WcmOBTAqUsl3x94IflY4FdK/iBzKwyutBfkSjbPcH4E+8K/Xwy3sId1gwW3Nzq?=
 =?us-ascii?q?grggoaRZ5KLnGOnKNz9wHPQYXOlgHRla+xcrsV2iHl7mqPzWOS+kpfVUo4UrvA?=
 =?us-ascii?q?dW4Qa1GQrtnj4E7GCbi0BvBvLApb1dOLLqpYY8HoilNuQPb4JM+YZ2O3hnf1Cx?=
 =?us-ascii?q?GVwL+FcIvtfSMaxiqZQE4Jjwwe416YOgUkQCSsuWTTCHppD12rK0ft9/Ru7XC2?=
 =?us-ascii?q?VEk5yymUYEB7kbm44BgYgbqbUfxA8KgDvXIDoi5zGh6C1tTZQ46CrhFmY6xabv?=
 =?us-ascii?q?sn7VtH3H6fvAt4aM/zZ5t+j0ITJlwk93jl0A96X8AZyZAn?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AeAAAgNQ5chwyp04xjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUwUBAQsBgVqBD4EXEoxyiy6DLpYwgXMUGAsJg3qDcCI2Bw0BAwEBAQEBAQI?=
 =?us-ascii?q?BEwEBAQoLCQgpIwyCNgUCAxoBBoJcAQIDAQEBJBMMCh4LAwMBAgYBAUAEBAgDA?=
 =?us-ascii?q?SMBLwcSBYJRSwGCAQUKpWYzihoFjCEXgUA/h0EBBIc5AoZyiRE2j3ZGCYcIhig?=
 =?us-ascii?q?zg2ELGIFciAgCh1eJIoEFg26LG4FNBoIBMxoIGxU7gmyCJxeIXoVMMgEBMYEji?=
 =?us-ascii?q?jaBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AeAAAgNQ5chwyp04xjHAEBAQQBAQcEAQGBUwUBAQsBgVq?=
 =?us-ascii?q?BD4EXEoxyiy6DLpYwgXMUGAsJg3qDcCI2Bw0BAwEBAQEBAQIBEwEBAQoLCQgpI?=
 =?us-ascii?q?wyCNgUCAxoBBoJcAQIDAQEBJBMMCh4LAwMBAgYBAUAEBAgDASMBLwcSBYJRSwG?=
 =?us-ascii?q?CAQUKpWYzihoFjCEXgUA/h0EBBIc5AoZyiRE2j3ZGCYcIhigzg2ELGIFciAgCh?=
 =?us-ascii?q?1eJIoEFg26LG4FNBoIBMxoIGxU7gmyCJxeIXoVMMgEBMYEjijaBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,338,1539673200"; 
   d="scan'208";a="56796387"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from mail.linuxfoundation.org ([140.211.169.12])
  by mtab.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 01:46:46 -0800
Received: from mail.linux-foundation.org (localhost [127.0.0.1])
	by mail.linuxfoundation.org (Postfix) with ESMTP id D5204B35;
	Mon, 10 Dec 2018 09:45:30 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@mail.linuxfoundation.org
Received: from smtp1.linuxfoundation.org (smtp1.linux-foundation.org
	[172.17.192.35])
	by mail.linuxfoundation.org (Postfix) with ESMTPS id AB164B08
	for <virtualization@lists.linux-foundation.org>;
	Mon, 10 Dec 2018 09:45:26 +0000 (UTC)
X-Greylist: domain auto-whitelisted by SQLgrey-1.7.6
Received: from mx1.redhat.com (mx1.redhat.com [209.132.183.28])
	by smtp1.linuxfoundation.org (Postfix) with ESMTPS id EAA87619
	for <virtualization@lists.linux-foundation.org>;
	Mon, 10 Dec 2018 09:45:25 +0000 (UTC)
Received: from smtp.corp.redhat.com (int-mx02.intmail.prod.int.phx2.redhat.com
	[10.5.11.12])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 6880D81F0E;
	Mon, 10 Dec 2018 09:45:25 +0000 (UTC)
Received: from jason-ThinkPad-T450s.redhat.com (ovpn-12-196.pek2.redhat.com
	[10.72.12.196])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 8A0C960C65;
	Mon, 10 Dec 2018 09:45:22 +0000 (UTC)
From: Jason Wang <jasowang@redhat.com>
To: mst@redhat.com, jasowang@redhat.com, kvm@vger.kernel.org,
	virtualization@lists.linux-foundation.org, netdev@vger.kernel.org,
	linux-kernel@vger.kernel.org
Subject: [PATCH net 4/4] vhost: log dirty page correctly
Date: Mon, 10 Dec 2018 17:44:54 +0800
Message-Id: <20181210094454.21144-5-jasowang@redhat.com>
In-Reply-To: <20181210094454.21144-1-jasowang@redhat.com>
References: <20181210094454.21144-1-jasowang@redhat.com>
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.12
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.27]);
	Mon, 10 Dec 2018 09:45:25 +0000 (UTC)
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	smtp1.linux-foundation.org
Cc: Jintack Lim <jintack@cs.columbia.edu>
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.12
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>,
	<mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>,
	<mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
MIME-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: virtualization-bounces@lists.linux-foundation.org
Errors-To: virtualization-bounces@lists.linux-foundation.org

Vhost dirty page logging API is designed to sync through GPA. But we
try to log GIOVA when device IOTLB is enabled. This is wrong and may
lead to missing data after migration.

To solve this issue, when logging with device IOTLB enabled, we will:

1) reuse the device IOTLB translation result of GIOVA->HVA mapping to
   get HVA, for writable descriptor, get HVA through iovec. For used
   ring update, translate its GIOVA to HVA
2) traverse the GPA->HVA mapping to get the possible GPA and log
   through GPA. Pay attention this reverse mapping is not guaranteed
   to be unique, so we should log each possible GPA in this case.

This fix the failure of scp to guest during migration. In -next, we
will probably support passing GIOVA->GPA instead of GIOVA->HVA.

Fixes: 6b1e6cc7855b ("vhost: new device IOTLB API")
Reported-by: Jintack Lim <jintack@cs.columbia.edu>
Cc: Jintack Lim <jintack@cs.columbia.edu>
Signed-off-by: Jason Wang <jasowang@redhat.com>
---
 drivers/vhost/net.c   |  3 +-
 drivers/vhost/vhost.c | 78 +++++++++++++++++++++++++++++++++++--------
 drivers/vhost/vhost.h |  3 +-
 3 files changed, 68 insertions(+), 16 deletions(-)

diff --git a/drivers/vhost/net.c b/drivers/vhost/net.c
index 5f272ab4d5b4..754ca22efb43 100644
--- a/drivers/vhost/net.c
+++ b/drivers/vhost/net.c
@@ -1196,7 +1196,8 @@ static void handle_rx(struct vhost_net *net)
 		if (nvq->done_idx > VHOST_NET_BATCH)
 			vhost_net_signal_used(nvq);
 		if (unlikely(vq_log))
-			vhost_log_write(vq, vq_log, log, vhost_len);
+			vhost_log_write(vq, vq_log, log, vhost_len,
+					vq->iov, in);
 		total_len += vhost_len;
 		if (unlikely(vhost_exceeds_weight(++recv_pkts, total_len))) {
 			vhost_poll_queue(&vq->poll);
diff --git a/drivers/vhost/vhost.c b/drivers/vhost/vhost.c
index 55e5aa662ad5..8ab279720a2b 100644
--- a/drivers/vhost/vhost.c
+++ b/drivers/vhost/vhost.c
@@ -1733,11 +1733,66 @@ static int log_write(void __user *log_base,
 	return r;
 }
 
+static int log_write_hva(struct vhost_virtqueue *vq, u64 hva, u64 len)
+{
+	struct vhost_umem *umem = vq->umem;
+	struct vhost_umem_node *u;
+	u64 gpa;
+	int r;
+	bool hit = false;
+
+	list_for_each_entry(u, &umem->umem_list, link) {
+		if (u->userspace_addr < hva &&
+		    u->userspace_addr + u->size >=
+		    hva + len) {
+			gpa = u->start + hva - u->userspace_addr;
+			r = log_write(vq->log_base, gpa, len);
+			if (r < 0)
+				return r;
+			hit = true;
+		}
+	}
+
+	/* No reverse mapping, should be a bug */
+	WARN_ON(!hit);
+	return 0;
+}
+
+static void log_used(struct vhost_virtqueue *vq, u64 used_offset, u64 len)
+{
+	struct iovec iov[64];
+	int i, ret;
+
+	if (!vq->iotlb) {
+		log_write(vq->log_base, vq->log_addr + used_offset, len);
+		return;
+	}
+
+	ret = translate_desc(vq, (u64)vq->used + used_offset, len, iov, 64,
+			     VHOST_ACCESS_WO);
+	WARN_ON(ret < 0);
+
+	for (i = 0; i < ret; i++) {
+		ret = log_write_hva(vq, (u64)iov[i].iov_base, iov[i].iov_len);
+		WARN_ON(ret);
+	}
+}
+
 int vhost_log_write(struct vhost_virtqueue *vq, struct vhost_log *log,
-		    unsigned int log_num, u64 len)
+		    unsigned int log_num, u64 len, struct iovec *iov, int count)
 {
 	int i, r;
 
+	if (vq->iotlb) {
+		for (i = 0; i < count; i++) {
+			r = log_write_hva(vq, (u64)iov[i].iov_base,
+					  iov[i].iov_len);
+			if (r < 0)
+				return r;
+		}
+		return 0;
+	}
+
 	/* Make sure data written is seen before log. */
 	smp_wmb();
 	for (i = 0; i < log_num; ++i) {
@@ -1769,9 +1824,8 @@ static int vhost_update_used_flags(struct vhost_virtqueue *vq)
 		smp_wmb();
 		/* Log used flag write. */
 		used = &vq->used->flags;
-		log_write(vq->log_base, vq->log_addr +
-			  (used - (void __user *)vq->used),
-			  sizeof vq->used->flags);
+		log_used(vq, (used - (void __user *)vq->used),
+			 sizeof vq->used->flags);
 		if (vq->log_ctx)
 			eventfd_signal(vq->log_ctx, 1);
 	}
@@ -1789,9 +1843,8 @@ static int vhost_update_avail_event(struct vhost_virtqueue *vq, u16 avail_event)
 		smp_wmb();
 		/* Log avail event write */
 		used = vhost_avail_event(vq);
-		log_write(vq->log_base, vq->log_addr +
-			  (used - (void __user *)vq->used),
-			  sizeof *vhost_avail_event(vq));
+		log_used(vq, (used - (void __user *)vq->used),
+			 sizeof *vhost_avail_event(vq));
 		if (vq->log_ctx)
 			eventfd_signal(vq->log_ctx, 1);
 	}
@@ -2191,10 +2244,8 @@ static int __vhost_add_used_n(struct vhost_virtqueue *vq,
 		/* Make sure data is seen before log. */
 		smp_wmb();
 		/* Log used ring entry write. */
-		log_write(vq->log_base,
-			  vq->log_addr +
-			   ((void __user *)used - (void __user *)vq->used),
-			  count * sizeof *used);
+		log_used(vq, ((void __user *)used - (void __user *)vq->used),
+			 count * sizeof *used);
 	}
 	old = vq->last_used_idx;
 	new = (vq->last_used_idx += count);
@@ -2236,9 +2287,8 @@ int vhost_add_used_n(struct vhost_virtqueue *vq, struct vring_used_elem *heads,
 		/* Make sure used idx is seen before log. */
 		smp_wmb();
 		/* Log used index update. */
-		log_write(vq->log_base,
-			  vq->log_addr + offsetof(struct vring_used, idx),
-			  sizeof vq->used->idx);
+		log_used(vq, offsetof(struct vring_used, idx),
+			 sizeof vq->used->idx);
 		if (vq->log_ctx)
 			eventfd_signal(vq->log_ctx, 1);
 	}
diff --git a/drivers/vhost/vhost.h b/drivers/vhost/vhost.h
index 466ef7542291..1b675dad5e05 100644
--- a/drivers/vhost/vhost.h
+++ b/drivers/vhost/vhost.h
@@ -205,7 +205,8 @@ bool vhost_vq_avail_empty(struct vhost_dev *, struct vhost_virtqueue *);
 bool vhost_enable_notify(struct vhost_dev *, struct vhost_virtqueue *);
 
 int vhost_log_write(struct vhost_virtqueue *vq, struct vhost_log *log,
-		    unsigned int log_num, u64 len);
+		    unsigned int log_num, u64 len,
+		    struct iovec *iov, int count);
 int vq_iotlb_prefetch(struct vhost_virtqueue *vq);
 
 struct vhost_msg_node *vhost_new_msg(struct vhost_virtqueue *vq, int type);
-- 
2.17.1

_______________________________________________
Virtualization mailing list
Virtualization@lists.linux-foundation.org
https://lists.linuxfoundation.org/mailman/listinfo/virtualization
