Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 18:30:52 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 2108F580375;
	Tue,  4 Dec 2018 01:19:15 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 04 Dec 2018 01:19:14 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AFXbS/xDqhf3FDnW/uq+IUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP7+os2wAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95RWSJfH428?=
 =?us-ascii?q?c4UBAekPPelaronyu1QAohSlBQm0Bu7i0SNIhmbq0aEmz+gtDR/K0Qo9FNwOqn?=
 =?us-ascii?q?TUq9D1Ob8KX++vw6nH1yjIYe5L2Tfn9ofIaRAhofKRXbJ1a8XR01QkGR/bgVWU?=
 =?us-ascii?q?rYzlPi6e2+MLs2eB4OpvT/mvi3M9qw5vuTWuycYsio3IhoITxVHI7zl2wIEwJd?=
 =?us-ascii?q?ChTkNwfN2qEINIui2EK4d7RtkuT3xmtSok0LEKpJ22cDQQxJkmxRPTc+GLfoeM?=
 =?us-ascii?q?7x75SeqcJTN1iGhldb6jnRq+7Eatx+PkWsm6zllHrTZJn9zJu30J1xHc9tKIR/?=
 =?us-ascii?q?5580i91juC1QXe5+JZLUwoi6bWLposz7wrmZYOt0nIAzX4l1/sjKCMc0Up4uio?=
 =?us-ascii?q?5PrjYrXhvpKcKYB0hR/kMqg0mcywH/44Mg4QUGif4+i806fj/ULhTLVLiP05jL?=
 =?us-ascii?q?XZvYjEKcgHoqO1GRJZ34g95xqlEjur08gUkWMGIV9HYB6HipLmO1DKIPD2F/e/?=
 =?us-ascii?q?hFGsnS9vx/DHOL3hH5rMImHAkLj/Z7Z97VBTyA4qwdBY6ZNUDK8OIOjoV0/vu9?=
 =?us-ascii?q?zXEAU5Pxa3w+n5EtV90J0RWWaVDq+eKqPSvkeE5vgzLOmUeI8VpDH9JuAh5/7v?=
 =?us-ascii?q?jn82h0URfKa03ZYMbHC4H/JmI1iWYHb2g9cBF3sKsRQ6TODwlFKCVjtTbW6oX6?=
 =?us-ascii?q?0g/jE7FJ6mDYDbS4CtmrOB3Tu7EYdRZmxcClCMDG3nd4OLW/oXbCKSI8lhkiEL?=
 =?us-ascii?q?VLS7So8h0w2uuxH+y7Z9MuXU/SgYv4r51Ndp/+3TiQ0y9TtsAsSf1GGCUXt4nm?=
 =?us-ascii?q?APRz8w2qB/pldwylOC0ah+nvxZGsZf5/JPUgcmK5Hcy/Z2BMz1WgLEZt2JUkqp?=
 =?us-ascii?q?Qs26ATEtSdI828UBY119G9WljRDPxTCqDKUXl7GQAJw086Tc32X+JspnynbG0r?=
 =?us-ascii?q?UhgEciQsdVKWKmgat//RDJB4HVi0WZi7qqdaME0S7O7miDy3CCvEVZUAFqV6XF?=
 =?us-ascii?q?UmsSZk/XrdT/+0PDQKWiCbUhMgtd18GCLrFGZcHujVVDXP3jIsjRY3qtm2esAh?=
 =?us-ascii?q?aF3q6DY5D0e2oDxindCFILkwYI/XmYMwgyASOho2HbDDxqDl/vZ0Ls8e9jqHK0?=
 =?us-ascii?q?VEM0zgeKb1F/2Lqx4BIamfucS/YL1LIepCghsyl0HEq639/OFtWPvRRhc7tGbd?=
 =?us-ascii?q?M9+lhH03nZuBJ7PpG7K6Bih1gecxl4vk/01hV3DJlAntYurH8w0AVyLqeY2ktb?=
 =?us-ascii?q?dzyExZDwJqHXKm7q8RCzaq7W31be0MqW+qYP8vg4t0/vvAazFkom8nVn1dZV3m?=
 =?us-ascii?q?CY5pXLCgoSTJ3wXlw29xh8u7HVfC0965nI2n1rNKm+qiXC1M4xBOs51hageM9S?=
 =?us-ascii?q?P7mAFADsHMwVGcivJPYxlFi0cx0LJuZS9K0zP8O4bPaG3K+rPOB9nDOpl2hH4Y?=
 =?us-ascii?q?Z90l6S+Cp4UOLHw5EFw/SA1AudSzj8lEuhstzwmY1cZTASA3CzxjT+CI9QZq19?=
 =?us-ascii?q?Z4ALCWi1Ls2zx9V+gYPtWnFC+F6iAVMGxNGmeR6IY1Ph2g1Q0FwdoWa7liug0z?=
 =?us-ascii?q?x0jzYpo7KF3CzP3+vtbgAHNXNMRGV4i1fjP5K0j9EDUEe0dQcpkAaq6ljgx6hc?=
 =?us-ascii?q?oqRyNG3TQUZOfyjrIGBuSKqwtryeY8FR7JMkqzlYUOO5YVqCUL7yvwMa0z//H2?=
 =?us-ascii?q?tZ3D06dzCqto/5nhBgk2KdMXBzoWHdecFxwxff+dPdSeRQ3joAWCl3lz3XCkKg?=
 =?us-ascii?q?MNmu+NWej43DvfymV2K9Sp1TdjHmzYGauyuh5m1qAhq/k+qomtL9Egg60i7719?=
 =?us-ascii?q?90WiXOtxv8Zojr16KnMeNoZEVoBVn869ZkFYF6iIc/mJYQ2X0CjJWP4XUHiXvz?=
 =?us-ascii?q?Mclc2a/mbHsCXzkLz8TX4Ajk3k1uNXaJx4P/VnWAzcptfdi6YmUK2i0j68BGEr?=
 =?us-ascii?q?ub7LtBnSFtuFq3sRrRYeRhnjca0fYu62QVg+ATtAot0yWSGLYSHUZDMCzolhSI?=
 =?us-ascii?q?6c2+rapNaGaud7iwyFRxndS7AL6epQFcXW7zeo0+Ei9o8sV/LFXM3WX26oHle9?=
 =?us-ascii?q?nfd8gftxOKnBfbk+haNogxmeEUiip9NmLwpnkly+89jRxz0pC2pomHK2Nx/K2n?=
 =?us-ascii?q?Bh5ULCH6Z8QW+jv1l6ZRgt6W35yzHpVmAjgLQJzoTfeyHDMTr/vnMRuOECYnqn?=
 =?us-ascii?q?eaArffGQ6f6EF7r3PACZyrNneXJGUHwtVmXhWSOEtfgAUMVjUggpE5DhyqxNDm?=
 =?us-ascii?q?cEph/T8e/Fn4qh9Ryu5yMxn/T3zSpAOpajcyVZieIwBa7gBE50fJL8Oe6vh/ED?=
 =?us-ascii?q?1f/p2ktAaNMHCUZxxUDWEVXUyJH1LjMaOr5dbe6OiUHPa+I+HNYbWTquxeSvGI?=
 =?us-ascii?q?yoi00oZ9+zaMN8OPPmRtDvEh20pDW2x5FNrdmzkVVyMXkCfNZdaBpBig4i13st?=
 =?us-ascii?q?y/8PPzVQPv4ouPFqJSMch19BCwm6uDLOmQhCB2KTtD0pMMxHnIyKUQ3VIIiiFu?=
 =?us-ascii?q?cSWtHqoEtSLXUK3QnapXBQYBayxvLMtI87483g5VNM7blNz11714jv00C1tfVl?=
 =?us-ascii?q?zhgMapZcMULGGnKVPHH12GNLCHJT3N3sH2brmwSbxWjOVIqRKwvSyXHFPkPjSG?=
 =?us-ascii?q?jzPpTQygMflQjCGHOxxToJuycgt2Bmj5Ut3nage3MNt2jTAtxb00h3XKNXMTMD?=
 =?us-ascii?q?RmckNNqKGQ4j1cgvllB2NB6X9lJ/GemymF9+nYNooWsfxzDyRoluJa5W42xKdP?=
 =?us-ascii?q?4C5YRPx6hi3So8Vqo1GnlOmP1zVmXABPqjZNmIKEo0FiNb/F+ZlHXHbO5AgN4n?=
 =?us-ascii?q?mICxQWu9tlDcXiuqBKxdjJkaLzKTFC/MrV/MscHcfULs2HPWElMRroHj7UEQQE?=
 =?us-ascii?q?QSSqNWHZm0xSjvWS+meJoZg9r5i/0KYJH5VcTl0uXtkAB1ZkGNgFJt8jVDQ+kK?=
 =?us-ascii?q?XdhtQF93u6qB7XbM9duYzDV/TUCvLqfmW3l75BMj0BzrqwFpkJO5b72FFnY0My?=
 =?us-ascii?q?ponOH0uYCdZErSR6cxU5iFVM9Hl4Xis43EezOVDl22MaCfPhxk1+sQB5e+l4sW?=
 =?us-ascii?q?60u1o=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAACRRQZch0O0hNFkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGBMFCBXAQLJwqHNgOET4tESoINFIh9jjiBJANMEwE?=
 =?us-ascii?q?YEwGEQAKDTCI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgpIwyCNiQBgmEBAQEBAwECJ?=
 =?us-ascii?q?BMGAQE3AQUGAwEBAQEIEQQBAQEeCQcDHgcKFAkIAgQOBQUDgxmBagMVAQICmRw?=
 =?us-ascii?q?CigeBbDOCdgEBBYUMDQuCCQgUjAgRBoFAP4ERRoJMgleFX4ImiyKUeC4JjSFwg?=
 =?us-ascii?q?0aBW49LigeEbolWAgQCBAUCDQEBBYFGgg1NIxWDJ4IbNYM4ilNBMQGBBAEBIYl?=
 =?us-ascii?q?DAYEeAQE?=
X-IPAS-Result: =?us-ascii?q?A0ABAACRRQZch0O0hNFkGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGBMFCBXAQLJwqHNgOET4tESoINFIh9jjiBJANMEwEYEwGEQAKDTCI0C?=
 =?us-ascii?q?Q0BAwEBAQEBAQIBEwEBAQoLCQgpIwyCNiQBgmEBAQEBAwECJBMGAQE3AQUGAwE?=
 =?us-ascii?q?BAQEIEQQBAQEeCQcDHgcKFAkIAgQOBQUDgxmBagMVAQICmRwCigeBbDOCdgEBB?=
 =?us-ascii?q?YUMDQuCCQgUjAgRBoFAP4ERRoJMgleFX4ImiyKUeC4JjSFwg0aBW49LigeEbol?=
 =?us-ascii?q?WAgQCBAUCDQEBBYFGgg1NIxWDJ4IbNYM4ilNBMQGBBAEBIYlDAYEeAQE?=
X-IronPort-AV: E=Sophos;i="5.56,313,1539673200"; 
   d="scan'208";a="43429204"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 04 Dec 2018 01:19:12 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726017AbeLDJTB (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 4 Dec 2018 04:19:01 -0500
Received: from mail-eopbgr700070.outbound.protection.outlook.com ([40.107.70.70]:23648
        "EHLO NAM04-SN1-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1725613AbeLDJTB (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 4 Dec 2018 04:19:01 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=xilinx.onmicrosoft.com; s=selector1-xilinx-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=VqtUm04srRCVkOde56VuyfXCGPBPrwfxw+LQmVutdGo=;
 b=G5VKJvxem+I+Cjkucezs7RTdFHwfVNlQ9MIC7EWl7RBQ3uwlvKaGj4Y9EqYxIFSL3yWsUlDGQp0ggUxfv2q2F8JJlfu6mz1w6ZwRetacBYBpe4UiHbkcQpo7qDKXM/bHrjrDXTMPR+clOlqwaWNCi1Kzsw9Bjns7HKlyo1MdaD8=
Received: from MWHPR02MB2623.namprd02.prod.outlook.com (10.168.206.9) by
 MWHPR02MB3247.namprd02.prod.outlook.com (10.164.133.160) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.1382.22; Tue, 4 Dec 2018 09:18:54 +0000
Received: from MWHPR02MB2623.namprd02.prod.outlook.com
 ([fe80::95ca:9c47:8102:97b1]) by MWHPR02MB2623.namprd02.prod.outlook.com
 ([fe80::95ca:9c47:8102:97b1%4]) with mapi id 15.20.1404.016; Tue, 4 Dec 2018
 09:18:53 +0000
From: Naga Sureshkumar Relli <nagasure@xilinx.com>
To: Boris Brezillon <boris.brezillon@bootlin.com>
CC: "miquel.raynal@bootlin.com" <miquel.raynal@bootlin.com>,
        "richard@nod.at" <richard@nod.at>,
        "dwmw2@infradead.org" <dwmw2@infradead.org>,
        "computersforpeace@gmail.com" <computersforpeace@gmail.com>,
        "marek.vasut@gmail.com" <marek.vasut@gmail.com>,
        Michal Simek <michals@xilinx.com>,
        "nagasuresh12@gmail.com" <nagasuresh12@gmail.com>,
        "linux-mtd@lists.infradead.org" <linux-mtd@lists.infradead.org>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        "robh@kernel.org" <robh@kernel.org>
Subject: RE: [LINUX PATCH v12 3/3] mtd: rawnand: arasan: Add support for
 Arasan NAND Flash Controller
Thread-Topic: [LINUX PATCH v12 3/3] mtd: rawnand: arasan: Add support for
 Arasan NAND Flash Controller
Thread-Index: AQHUd+lSRlJXewM/lk6msOyQbhKEh6VY60OAgBWAFRA=
Date: Tue, 4 Dec 2018 09:18:53 +0000
Message-ID: <MWHPR02MB2623DDF6C43BBBB99A52D5DFAFAF0@MWHPR02MB2623.namprd02.prod.outlook.com>
References: <1541739641-17789-1-git-send-email-naga.sureshkumar.relli@xilinx.com>
        <1541739641-17789-4-git-send-email-naga.sureshkumar.relli@xilinx.com>
 <20181120172443.5fb0bc14@bbrezillon>
In-Reply-To: <20181120172443.5fb0bc14@bbrezillon>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-Auto-Response-Suppress: DR, RN, NRN, OOF, AutoReply
X-MS-TNEF-Correlator: 
authentication-results: spf=none (sender IP is )
 smtp.mailfrom=nagasure@xilinx.com; 
x-originating-ip: [149.199.50.133]
x-ms-publictraffictype: Email
x-microsoft-exchange-diagnostics: 1;MWHPR02MB3247;6:mgaq898LMcEnUfGy4eoXjBm3LGL+xDy4+8iYU8ZbF41zboSufhMDuH9Jym+McY3r7h+UKkpTZE+1YKBDOYbibxZS1zmH09ugbstzi1rj3/HpyDqOav0BZtcQdCi4nm34TMjMx84v4Mzogf0uVtw8m2FURwFTGLQQRLiJshKunKL33Q2lFtqHMGbB6xKP7ESqAap1G8zv1Niyki2ZZ6inOs2uw8TSLYBinpwc49pPPkXXCO3qNUDAQs21VWnoKV4kDR/MqlQQuZNtsY9R+IQthexX9BfvBEtoqNc0/rjID17H5lmS6pnEymeCwQ/wxnqiejlYmwIZBQRlZL8knxn5H4ALoieuupCm47WHGnzBLO5coFEZTqSahySaInIv5r9dDxJiL8OXWY/4w355+YEjAWbwI9qSdWqw0UHYNPRiAOcHgmYgV3MQVqvciaX8VQ6lW5OUZCgmXQy+IquYnNRCYA==;5:Zc8yYwVlPOESPUyuWDNaDcEbIuxs1FkOyanEjhMmFTn7WEiyaHRsSQtOuPcPdjMO4RuDxC1Kq8JVIEYIyFFTkOJqJKucnzJzXgkk3grk2H6llp7IoFdNEw4hN6RjWZ7Fql2Pb3YZNMERdfSLhsK4DHKGShrCwv/mfdHKv7cERD4=;7:LAZdB7eSk6G2MXquDjtoBQLV8ZKIg8sJboi448Mp26vvc5sIvY9Pv3/Gr30CXq5pyC0QRV1KIvsDIySRqCfP/6CCfXhU67YbP6bBUAEUSn66RLnouQvtu2lXT0zzsrkS4zKWuHFHffbDdC+h7n1GAw==
x-ms-exchange-antispam-srfa-diagnostics: SOS;SOR;
x-forefront-antispam-report: SFV:SKI;SCL:-1;SFV:NSPM;SFS:(10009020)(396003)(366004)(346002)(136003)(376002)(39860400002)(199004)(189003)(13464003)(6506007)(26005)(53546011)(25786009)(102836004)(446003)(11346002)(476003)(74316002)(486006)(6916009)(39060400002)(4326008)(478600001)(53936002)(6246003)(7736002)(71200400001)(6436002)(5024004)(14444005)(71190400001)(256004)(229853002)(186003)(217873002)(2906002)(7416002)(5660300001)(54906003)(316002)(7696005)(76176011)(99286004)(305945005)(3846002)(6116002)(86362001)(81166006)(8676002)(81156014)(68736007)(97736004)(8936002)(66066001)(33656002)(14454004)(105586002)(106356001)(9686003)(55016002);DIR:OUT;SFP:1101;SCL:1;SRVR:MWHPR02MB3247;H:MWHPR02MB2623.namprd02.prod.outlook.com;FPR:;SPF:None;LANG:en;PTR:InfoNoRecords;A:1;MX:1;
x-ms-office365-filtering-correlation-id: 4b6c66b3-a3b0-49b9-c83d-08d659c982e7
x-ms-office365-filtering-ht: Tenant
x-microsoft-antispam: BCL:0;PCL:0;RULEID:(2390098)(7020095)(4652040)(8989299)(5600074)(711020)(4618075)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(2017052603328)(7153060)(7193020);SRVR:MWHPR02MB3247;
x-ms-traffictypediagnostic: MWHPR02MB3247:
x-microsoft-antispam-prvs: <MWHPR02MB3247A1A824C56387D768F930AFAF0@MWHPR02MB3247.namprd02.prod.outlook.com>
x-ms-exchange-senderadcheck: 1
x-exchange-antispam-report-cfa-test: BCL:0;PCL:0;RULEID:(8211001083)(6040522)(2401047)(8121501046)(5005006)(10201501046)(3002001)(3231455)(999002)(944501493)(52105112)(93006095)(93001095)(6055026)(148016)(149066)(150057)(6041310)(20161123558120)(20161123564045)(20161123560045)(201703131423095)(201702281528075)(20161123555045)(201703061421075)(201703061406153)(20161123562045)(201708071742011)(7699051)(76991095);SRVR:MWHPR02MB3247;BCL:0;PCL:0;RULEID:;SRVR:MWHPR02MB3247;
x-forefront-prvs: 0876988AF0
x-microsoft-antispam-message-info: D2YRBoru0XFYM7fWRfs4KMu6oxj5IcK0gIlOzFqb7W6oRXNiESSSzm8eTp0iQV52IH15VJ36fgSx5ufydBwfIDI2WQJn1jKuYz6XfZNg/hARdMZgS/qwjqQoiRrAO5SXjwYNtJ2vpiHvzuxueuDfr4ulnefkl6WPhZcRGh5RHG8Y/6tIw7pv5NSacmlpmCBoGn13OCrWJYj4lZWKkGnEVlHlXQVa67TUj58u6YIlX45hUbleMZdIDED3ImVZj75111bGYRS3pIU0JMftdBIybfG+AHkebQ5/r5dKTHmOyN1ZVmvqmDwYZKDNqyIewUttM7dWvuz6oumhK5XRGlQxAyaqxN6GGXIb2669KSUbE9A=
spamdiagnosticoutput: 1:99
spamdiagnosticmetadata: NSPM
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
X-OriginatorOrg: xilinx.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 4b6c66b3-a3b0-49b9-c83d-08d659c982e7
X-MS-Exchange-CrossTenant-originalarrivaltime: 04 Dec 2018 09:18:53.7759
 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 657af505-d5df-48d0-8300-c31994686c5c
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MWHPR02MB3247
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Boris,

> -----Original Message-----
> From: Boris Brezillon [mailto:boris.brezillon@bootlin.com]
> Sent: Tuesday, November 20, 2018 9:55 PM
> To: Naga Sureshkumar Relli <nagasure@xilinx.com>
> Cc: miquel.raynal@bootlin.com; richard@nod.at; dwmw2@infradead.org;
> computersforpeace@gmail.com; marek.vasut@gmail.com; Michal Simek
> <michals@xilinx.com>; nagasuresh12@gmail.com; linux-mtd@lists.infradead.o=
rg; linux-
> kernel@vger.kernel.org; robh@kernel.org
> Subject: Re: [LINUX PATCH v12 3/3] mtd: rawnand: arasan: Add support for =
Arasan
> NAND Flash Controller
>=20
> On Fri, 9 Nov 2018 10:30:41 +0530
> Naga Sureshkumar Relli <naga.sureshkumar.relli@xilinx.com> wrote:
>=20
> > +static int anfc_setup_data_interface(struct nand_chip *chip, int cslin=
e,
> > +				     const struct nand_data_interface *conf) {
> > +	struct anfc_nand_controller *nfc =3D to_anfc(chip->controller);
> > +	struct anfc_nand_chip *achip =3D to_anfc_nand(chip);
> > +	int err;
> > +	const struct nand_sdr_timings *sdr;
> > +	u32 inftimeval;
> > +	bool change_sdr_clk =3D false;
> > +
> > +	if (csline =3D=3D NAND_DATA_IFACE_CHECK_ONLY)
> > +		return 0;
> > +
> > +	/*
> > +	 * If the controller is already in the same mode as flash device
> > +	 * then no need to change the timing mode again.
> > +	 */
> > +	sdr =3D nand_get_sdr_timings(conf);
> > +	if (IS_ERR(sdr))
> > +		return PTR_ERR(sdr);
> > +
> > +	if (sdr->mode < 0)
> > +		return -ENOTSUPP;
> > +
> > +	inftimeval =3D sdr->mode & 7;
> > +	if (sdr->mode >=3D 2 && sdr->mode <=3D 5)
> > +		change_sdr_clk =3D true;
> > +	/*
> > +	 * SDR timing modes 2-5 will not work for the arasan nand when
> > +	 * freq > 90 MHz, so reduce the freq in SDR modes 2-5 to < 90Mhz
>=20
> What's the freq for mode 0 and 1?
It is 100MHz in SDR mode 0 and 1.

>=20
> > +	 */
> > +	if (change_sdr_clk) {
> > +		clk_disable_unprepare(nfc->clk_sys);
> > +		err =3D clk_set_rate(nfc->clk_sys, SDR_MODE_DEFLT_FREQ);
>=20
> You should not change the clk rate here. It should be done when the chip =
is selected, so that,
> if you ever have 2 different chips connected to the same controller, you =
can adapt the rate
> when they are accessed.
Ok, got it. I will update.

>=20
> > +		if (err) {
> > +			dev_err(nfc->dev, "Can't set the clock rate\n");
> > +			return err;
> > +		}
> > +		err =3D clk_prepare_enable(nfc->clk_sys);
> > +		if (err) {
> > +			dev_err(nfc->dev, "Unable to enable sys clock.\n");
> > +			clk_disable_unprepare(nfc->clk_sys);
> > +			return err;
> > +		}
> > +	}
> > +	achip->inftimeval =3D inftimeval;
> > +
> > +	return 0;
> > +}
> > +
> > +static int anfc_nand_attach_chip(struct nand_chip *chip) {
> > +	struct mtd_info *mtd =3D nand_to_mtd(chip);
> > +	struct anfc_nand_chip *achip =3D to_anfc_nand(chip);
> > +	u32 ret;
> > +
> > +	if (mtd->writesize <=3D SZ_512)
> > +		achip->spare_caddr_cycles =3D 1;
> > +	else
> > +		achip->spare_caddr_cycles =3D 2;
> > +
> > +	chip->ecc.calc_buf =3D kmalloc(mtd->oobsize, GFP_KERNEL);
> > +	chip->ecc.code_buf =3D kmalloc(mtd->oobsize, GFP_KERNEL);
>=20
> Those bufs are allocated but never freed (memleak). Also, are you sure yo=
u really need them.
These bufs are freed in nand_release(), which is calling from anfc_remove()=
.

And chip->ecc.code_buf, is used in anfc_read_page_hwecc().
What we are doing here is, extract ECC code from OOB and place it in ecv.co=
de_buf, and passing this info to nand_check_ecc_chunk(buf, chip->ecc.size, =
&ecc_code[i], eccbytes, NULL, 0,chip->ecc.strength).
i.e. just to store ECC code from OOB area.
=20
And chip->ecc.calc_buf is no where used in the driver, I will remove it.

Thanks,
Naga Sureshkumar Relli.

