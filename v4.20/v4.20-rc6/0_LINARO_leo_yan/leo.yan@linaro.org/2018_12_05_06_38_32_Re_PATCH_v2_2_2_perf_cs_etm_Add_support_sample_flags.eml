Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 06 Dec 2018 08:45:57 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C4A6F580443;
	Tue,  4 Dec 2018 22:38:46 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 04 Dec 2018 22:38:46 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ARAarJBCnEf9E+aDgahILUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP7/psSwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95fWSJBHI2y?=
 =?us-ascii?q?cogBD+QOMulEsobypVUBrQCmBQSuH+7v1iNEi2Xq0aEmyektDwfL1xEgEdIUt3?=
 =?us-ascii?q?TUqc34NKMMXuCy1qXJzS/Mb/VN1Df56YjIdAouoeuLXb5qdsrR00YvGgXYhVuT?=
 =?us-ascii?q?sYzoJy2Z2vgJvmSB8uZtW/yjh3Q6pwxyvjSj3MYhh4vRio4L1lzJ8T91zJg1KN?=
 =?us-ascii?q?GkUkJ3f8CoHZhKuy2HNIZ7RN4pTXtytyYg0LIGvIa2fCgUx5QjwB7Sc+KHc4eW?=
 =?us-ascii?q?7RL5TuqRIil3hGhjeL2hgxa+60+gyvfzVsWs0VZKqDRKksXUu3wTyxDe7tKLRu?=
 =?us-ascii?q?Zz80u/wzqDygPe5v1eLU01l6fXM5shzaQxlpoXv0TDBCj2mEDuga+Sd0Uk/PWo?=
 =?us-ascii?q?6uv+brXluJCcLYl0hR/6Mqg3ncy+D+I4PRYUX2WA5+S826Ps/VfjTLVJkPI2iK?=
 =?us-ascii?q?/Zv47eJcgBoa65GQBV3p456xmjFzemzMgYnX4fIVJBeRKHjJbmN0vBIfDlFvq/?=
 =?us-ascii?q?h1WskDF2x/HJJLHhA5PNLmTdn7flZ7py90lcyA8rx9BF+51UEq0BIO70WkLptN?=
 =?us-ascii?q?zXFB45MxCuzObgEtl91p4eVniJAq+WK67StV6I5uQyI+iDfoMVuTD9K+Q76P7q?=
 =?us-ascii?q?l3M2hVgdfayx15sNdH+4BuhmI1meYXf0gNcBFnkFshA9TOztjl2CVzlTam22X6?=
 =?us-ascii?q?I94DE7FY2nAZ3CRoCrnLyOwiO7EodKaWBBD1CGCW3oeJmcW/cQdCKSJddsnSYf?=
 =?us-ascii?q?VbihTI8h1guitBXgxLplNefU/iwYtZT+1Nl6/eHTlBcy9SBqAMSZyW2CU2Z0nm?=
 =?us-ascii?q?YQTT8swK9/uVB9ykuE0aVggPxXD9pT6+lNUgc7L5HcyeN6Bsv2WgLAeNeJVVmn?=
 =?us-ascii?q?Ts+nATE3UtI+3dsOb1xhFNWlixDJxzCqDKMNl7yXGJw09brR0GXrKMZj1XnKzq?=
 =?us-ascii?q?khgEMgQstUK2KmgKlz9wzQB47Ml0WUjKKqdaUa3C7Q+2aP12uOvEdEUAFuVaXJ?=
 =?us-ascii?q?R2wQZkzTrd7h/EPNU6euCag7MgtG0cONN7FFasP3gllcRPfsItLeY3mvlGe2Hh?=
 =?us-ascii?q?uIwrKMbIz3e2QSxindCU4EkxwN8naCLwQxGiCho2fGBjx0CV3ve1/s8fV5qH6j?=
 =?us-ascii?q?Uk80zgSKb0p917q1+h8Zn+CcR+kU3rIevCchqjN0HFmm0tLSCtqAoRdhfapGbd?=
 =?us-ascii?q?M85ldHyXzWtwhnMpO8KKBig0YUcx5rsEP2yxV3FoJAnNAwo3Mu0gVzJryX0VNb?=
 =?us-ascii?q?ezyDwJD/J6fYKm/x/BCoda7bwVXe0NeQ+qcS5/U0sVTjvAe1FkU893VrycVa03?=
 =?us-ascii?q?yZ5p/SFgodTYrxUlor9xh9v7zbYjQ965nI2nF2MKi0siXN29QmBOY+zhagftFf?=
 =?us-ascii?q?ML6LFQPoEs0aAdSuJ/Ium1Szch0EO+VS/rYuP8y6b/uGxLKrPOF4kTK8jGRI/J?=
 =?us-ascii?q?py0liR+Cp7UOLI2YgKw+uZ3geeSzjzllOhvd3ploBeYjESGHGyySzlBI5Xe61z?=
 =?us-ascii?q?cpwHCWaoI82r2Np+g4ThVGJf9F6mH1kGwtOmeQKOb1zh2g1dzUQWoX29lSq41T?=
 =?us-ascii?q?B0iCwprqyE0SzKwuTicgcHO2FRSGlji1fsPZa7j9QAUEe0aAgpkQOv5VzmyKhD?=
 =?us-ascii?q?uKR/M27TTF9KfyfsNWFiUaiwtr2Yb85U8pwosiZXUOW6YV+ETL7wuB8a0yLlH2?=
 =?us-ascii?q?tDyzE3bTCqupPlnxNkjGKRNmp8rH3cecto3xfQ+MTcReJN3joBXCR5iSPYBl+m?=
 =?us-ascii?q?M9mr/NWUkYzOsuS/V2KnS51SfjPnzYKGtCun+2JqBQezkOy0mt3iCQI6yzP018?=
 =?us-ascii?q?F2VSXUqxbxeorr2L67Me59fkloGUXz68x1GoxlloswhZcQ2WUVh5mP/HoHl3vz?=
 =?us-ascii?q?Pstf2a7kcHUNQjsLycbP4Af5wE1jMm6Jx4XhW3WYw8thZMO1bnkY2y0j9MBKFL?=
 =?us-ascii?q?mb7KZfkiRruFq4ohncYfx8njcb1Psv52QWg+APuAox0CqdBqoeElVfPSzpjx6I?=
 =?us-ascii?q?9cyxrL1LZGazdri9zFZ+ndekDL2YowBTQnD5eoo5HS9r78VyK1bM0Hz16oH5d9?=
 =?us-ascii?q?jcd9MTthuIkxjei+hZMo4+lv0PhSB/I2LyoWUly/InjRxpxZy1p5KIK2Jp/KKk?=
 =?us-ascii?q?GBJYMiD1atgX+jHsi6Zeg8mX05quHpVnBjUEQp/oQei0HzIVsPTtLxyOHyEkqn?=
 =?us-ascii?q?eHBbrfGheS6EV8oHLKDZ+rLGubJGUDwdVhWRmdJ1FfgAYOUzUhhZM5EgGqxMr8?=
 =?us-ascii?q?cEZ2/DwR51j4qgdSxeJsLRXwTmDfpAKwYDcuVJefNAZW7h1F50rNMc2e6f9zHz?=
 =?us-ascii?q?hF/pK7qgyBMHebZwNODWEGQUGEA1HjPr+z5djP6eSYB+y+L+fQbrWKs+BRS/CI?=
 =?us-ascii?q?xZe32It84zmMLtmPPmVlD/Aj2kpMQ3F5G8famzUOUSAXlDjNb8mUpBii4C13s9?=
 =?us-ascii?q?u//e/vWALu44uPFrRTPc9u+xCwnaeMKeqQiDxlJjZf05MG3WXIx6QH3F4OlyFu?=
 =?us-ascii?q?cCGgHq4dtSHWVqLfhK9WAwQfayNyL8ZI66M83g9QOc/UkN/117h4juIrBFdBT1?=
 =?us-ascii?q?DuhsapZckSKWGnKFzHHFqLNKiBJTDT38H3YKa8RadMg+lOqxKwuSiUE0n4MzSH?=
 =?us-ascii?q?ljnpUQ2vMO5WgCGaOhxepJ+ychJ3BWf/S9LmbwWxMMVrgj0u3b00mnTKOHYcMD?=
 =?us-ascii?q?dmdUNNq7yQ7SVAjfR+G2xO9HxlLeafliad7unYLIsWsPRxDiR1keJa/Go1y79P?=
 =?us-ascii?q?4C5YQ/x1nXiaktk7hli6kuiC13JfVxtUqztRzNaOtFliOKjEsIFHWGzF8Qgl6W?=
 =?us-ascii?q?SWAg4N4dx/BYu8lbpXz43LmaW1OT5E29bV+8IGAI7TMs3UYzIaLRP1FWuMX0M+?=
 =?us-ascii?q?RjmxODSa3hQFnQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAAAbcgdch0O0hNFkGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBg2sUE4wSjhsUlziCBQEBKwGHTSI0CQ0BAwE?=
 =?us-ascii?q?BAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmIDAwECJBMGAQE3AQUJAQEKISUDDAUgA?=
 =?us-ascii?q?QUBIhiDHIICBZksPIodgWwzgnYBAQWGA4EkCBKJSIEogRyCFoQjiDaCJolcgUe?=
 =?us-ascii?q?FDpAgBwKRNiMKAoFPiAWHTIoMjkYCBAIEBQIFDyGBJYINfYMvghsMF4hehUwzM?=
 =?us-ascii?q?oEFAQEhiwYBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ABAAAbcgdch0O0hNFkGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBg2sUE4wSjhsUlziCBQEBKwGHTSI0CQ0BAwEBAQEBAQIBEwEBA?=
 =?us-ascii?q?QgNCQgpIwyCNiQBgmIDAwECJBMGAQE3AQUJAQEKISUDDAUgAQUBIhiDHIICBZk?=
 =?us-ascii?q?sPIodgWwzgnYBAQWGA4EkCBKJSIEogRyCFoQjiDaCJolcgUeFDpAgBwKRNiMKA?=
 =?us-ascii?q?oFPiAWHTIoMjkYCBAIEBQIFDyGBJYINfYMvghsMF4hehUwzMoEFAQEhiwYBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,317,1539673200"; 
   d="scan'208";a="43608424"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 04 Dec 2018 22:38:45 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727038AbeLEGim (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 5 Dec 2018 01:38:42 -0500
Received: from mail-wr1-f45.google.com ([209.85.221.45]:41662 "EHLO
        mail-wr1-f45.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726037AbeLEGim (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 5 Dec 2018 01:38:42 -0500
Received: by mail-wr1-f45.google.com with SMTP id x10so18382423wrs.8
        for <linux-kernel@vger.kernel.org>; Tue, 04 Dec 2018 22:38:41 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=YaiSxZ5zkOGPVEb7SNIkGxQnViLDgHomOE3rkzH+wJQ=;
        b=KEyepbLfn5jgV2F/LPX1AhONZV1ZhSYUqc9vpS9PODTbg4yDlHzDBVaC2JHadV0X+Y
         dudr3lrwALsby41XvGFezJtr7Ufsf+EBNykIzCiGWoQzNVcoBQO6GgScrd2VKLv4cqa3
         5bOoUw1WU8SxOmPkr3ES8cwADkVOj+p69XXAA=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:cc:subject:message-id:references
         :mime-version:content-disposition:in-reply-to:user-agent;
        bh=YaiSxZ5zkOGPVEb7SNIkGxQnViLDgHomOE3rkzH+wJQ=;
        b=Gc9zzkoqXNEUOlsflC7zLKhzN//jWJUEZrs1pF+kN+otVP0IkmmgC4NSPrlJmmRKnl
         Z56/OGw72AdnxqBGZ5B3eJfjP2djP6WJ4yb49JiSdNXPI1atPFY0x+eFfm1huTjg22q6
         a/yktFQdU5ZG1Fmu57HFbBtPE2qYzLo2dd2mRZ0V2eR7xaw95doHl3YwyQ3jGujv10af
         /z/obHYukCkucUDU5C4nKcDKQ0lk78yswJVK1NmK4ixJJH5a2RVMPb0HLP5Fpc5HwQ0p
         kH/LztsdQu8ZDi3tcx8sN+xa1DvMjF0/Ve56Z6qV96hVUej+CUbyEM2IUlfJOVxr1VB2
         W/7A==
X-Gm-Message-State: AA+aEWZonRDTynZOOmdnx6b3AxrwBpXn9fp2bP3iSPAHwtMabvPOqFHB
        BBglaKB62aX+go3hdW7YpCJUQA==
X-Google-Smtp-Source: AFSGD/UIBxZhPvwSzO4XP9p0z5SPl3sTHAnRmegI2zn8LoIhY6PXVWK5gLRTW52hhnRmgK2M+jx1cA==
X-Received: by 2002:a5d:49cd:: with SMTP id t13mr6227276wrs.144.1543991920382;
        Tue, 04 Dec 2018 22:38:40 -0800 (PST)
Received: from leoy-ThinkPad-X240s ([209.250.228.18])
        by smtp.gmail.com with ESMTPSA id k135sm18248835wmd.42.2018.12.04.22.38.36
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 04 Dec 2018 22:38:39 -0800 (PST)
Date: Wed, 5 Dec 2018 14:38:32 +0800
From: leo.yan@linaro.org
To: Mathieu Poirier <mathieu.poirier@linaro.org>
Cc: Arnaldo Carvalho de Melo <acme@kernel.org>,
        Alexander Shishkin <alexander.shishkin@linux.intel.com>,
        Jiri Olsa <jolsa@redhat.com>,
        Namhyung Kim <namhyung@kernel.org>,
        linux-arm-kernel <linux-arm-kernel@lists.infradead.org>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        Mike Leach <mike.leach@linaro.org>,
        Robert Walker <robert.walker@arm.com>,
        Al Grant <Al.Grant@arm.com>,
        Coresight ML <coresight@lists.linaro.org>
Subject: Re: [PATCH v2 2/2] perf cs-etm: Add support sample flags
Message-ID: <20181205063832.GD15964@leoy-ThinkPad-X240s>
References: <1541912876-20967-1-git-send-email-leo.yan@linaro.org>
 <1541912876-20967-3-git-send-email-leo.yan@linaro.org>
 <20181119232202.GA7001@xps15>
 <CANLsYkxQVpSP1D2M_bCni=nkZyo4qC=d33bWC1Xy0_vDfX9Agg@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <CANLsYkxQVpSP1D2M_bCni=nkZyo4qC=d33bWC1Xy0_vDfX9Agg@mail.gmail.com>
User-Agent: Mutt/1.10+31 (9cdd884) (2018-06-19)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Tue, Nov 20, 2018 at 09:53:41AM -0700, Mathieu Poirier wrote:

[...]

> > > +static void cs_etm__fixup_flags(struct cs_etm_queue *etmq)
> > > +{
> > > +     /*
> > > +      * Decoding stream might insert one TRACE_OFF packet in the
> > > +      * middle of instruction packets, this means it doesn't
> > > +      * contain the pair packets with TRACE_OFF and TRACE_ON.
> > > +      * For this case, the instruction packet follows with
> > > +      * TRACE_OFF packet so we need to fixup prev_packet with flag
> > > +      * PERF_IP_FLAG_TRACE_BEGIN, this flag finally is used by the
> > > +      * instruction packet to generate samples.
> > > +      */
> > > +     if (etmq->prev_packet->sample_type == CS_ETM_TRACE_OFF &&
> > > +         etmq->packet->sample_type == CS_ETM_RANGE)
> > > +             etmq->prev_packet->flags = PERF_IP_FLAG_BRANCH |
> > > +                                        PERF_IP_FLAG_TRACE_BEGIN;
> > > +
> > > +     if (etmq->prev_packet->sample_type == CS_ETM_RANGE) {
> > > +             /*
> > > +              * When the exception packet is inserted, update flags
> > > +              * so tell perf it is exception related branches.
> > > +              */
> > > +             if (etmq->packet->sample_type == CS_ETM_EXCEPTION ||
> > > +                 etmq->packet->sample_type == CS_ETM_EXCEPTION_RET)
> > > +                     etmq->prev_packet->flags = etmq->packet->flags;
> > > +
> > > +             /*
> > > +              * The trace is discontinuous, weather this is caused by
> > > +              * TRACE_ON packet or TRACE_OFF packet is coming, if the
> > > +              * previous packet is instruction packet, simply set flag
> > > +              * PERF_IP_FLAG_TRACE_END for previous packet.
> > > +              */
> > > +             if (etmq->packet->sample_type == CS_ETM_TRACE_ON ||
> > > +                 etmq->packet->sample_type == CS_ETM_TRACE_OFF)
> > > +                     etmq->prev_packet->flags |= PERF_IP_FLAG_TRACE_END;
> > > +     }
> > > +}
> > > +
> >
> > I think it would be better to keep all the flag related processing in
> > cs-etm-decoder.c so that things in cs-etm.c are only concered with dealing with
> > perf.
> >
> > Look at function cs_etm__alloc_queue(), there you'll find "d_params.data = etmq".
> >
> > In function cs_etm_decoder__new(), decoder->data = d_params->data;
> >
> > This means that anywhere you have a decoder, decoder->data is an etmq.  I've
> > used this profusely in my work on CPU-wide trace scenarios.  Because you're
> > getting there ahead of me you'll need to fix the declaration of struct
> > cs_etm_queue but that's easy.
> 
> I've been thinking further about this and manipulating the etmq packet
> and prev_packet from the cs-etm-decoder.c won't work because all we
> have at that time is the decoder's packet queue.  My goal is to
> manipulate the flags in only one place - either in cs-etm.c or
> cs-etm-decoder.c but not in both.  It might be worth trying to do the
> implementation in cs-etm.c since there is already a lot of packet flow
> intelligence happening there.

Agree.  cs-etm.c has more context info than cs-etm-decoder.c, will
try to refactor in single place in cs-etm.c.

[...]

Thanks,
Leo Yan
