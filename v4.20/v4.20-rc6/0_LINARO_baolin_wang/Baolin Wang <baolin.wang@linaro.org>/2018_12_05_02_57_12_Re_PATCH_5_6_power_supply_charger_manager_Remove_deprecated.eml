Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 05 Dec 2018 14:28:34 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id EBC4B580375;
	Tue,  4 Dec 2018 18:57:33 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 04 Dec 2018 18:57:33 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AcURV1BNBN7fdCQLn0mkl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPj+osbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRsleVyJDDY28?=
 =?us-ascii?q?YYUBDPcPM/hEoIfyvFsOtRmzCBKwBOP20DJEmmP60bE43uknDArI3BYgH9ULsH?=
 =?us-ascii?q?nMsdj6LqASUeS0zKnO0D7Mb+lZ2THy6IPVdR0uuuuDXbV0ccrQz0kjDQ3EgU+W?=
 =?us-ascii?q?qYzqJD6V0uUNs26B4Op6UuKjkWknqxt+ojW2wMonl4rHhpoNx1za6Sl0xJw5Kc?=
 =?us-ascii?q?C2RUJle9KoDZhduz2AO4Z3QM4uW39ktDo+x7EcupO2fDIGxIo7yxPccfCLboyF?=
 =?us-ascii?q?7xPlWe2MOzl3nmhld6i6hxuq8Uiv1On8Vs6s3VZUoSpKjMPMumoO1xPN8MiHTO?=
 =?us-ascii?q?Vy/kO71TaIzQDT5flIIUEylaXFN54s2qA8moYXvEjZAyP7llv6gLWLekgn5uSk?=
 =?us-ascii?q?8eXqb7f+qp+ZLYB0iwX+Mqo0msy4BOQ1KgwOX2md+eSh27zv5E75T6tQjv0wjK?=
 =?us-ascii?q?bZtInWJcMVp66/HQBVyJ0u6wiwDzi4ytQUh3oHI0xfeBKBkYfpP0vCIPfiDfew?=
 =?us-ascii?q?m1isiitkx+jaPr39BZXANnzDkLbifblj8UJdxxczwMtb55JVDLEBPf3yVlXwtN?=
 =?us-ascii?q?zeEh82LQi0z/z7B9V604MUQXiPDbOBMKPOrV+I4foiI+mWa48UpDbyMf8l6+Tu?=
 =?us-ascii?q?jX8kg1Ade6ap0IATaHC5GPRmPkqYbWDtgtcHDWcFoA4+QPb2h12FVD5Zf2yyUL?=
 =?us-ascii?q?4k5jEnFIKmCp/ORoKqgLOfxiu7HZpWZmZAClCLCnroc4SEW/ERaCOdOMNhkzoE?=
 =?us-ascii?q?VaS/RI8lzx2hqAj6y79/JOrO5iIYrY7j1MRy5+DLjx4y7jx0D8Oe022XVWF7hG?=
 =?us-ascii?q?EISiQy3KB+p0x911iC3bJ5g/xeCdxc+fdJXh0mOp7byuxwE8ryVR7ZfteVVFam?=
 =?us-ascii?q?Rc2rATIrQdI32dMOZ0d9FM+kjhDMxCeqB74Vl7qWBJ076K7c3n7xJ9pjxHbCzq?=
 =?us-ascii?q?Uuk14mQs5XP228mqF/7xTTB5LOk0iBiqmlb7oc0zDX+GeD12WOulpYXxB2UanC?=
 =?us-ascii?q?WXAfZU7WrdDi60PGTr+uD6knMwRbxc6DLKtKdsPmjVFcSPj/P9TeZnq7m32sCh?=
 =?us-ascii?q?aQ2rOMcI3qdn0A0yrHFkgLjRof/XacOgg4HSeuvWTeASdqFVLuZUPs7OZ/pGm6?=
 =?us-ascii?q?Tk8y0wGFcUlh26Cp9R4SgPyWU+kT0a4cuCc9tzV0G06w387XC9qFoAphYKVcYN?=
 =?us-ascii?q?Mn7Fdbz27ZsBZ9PpihL6BkiV4TaAB3v0Lo1xVqBYRMi8kqrHU2zAVsLaKUyk9O?=
 =?us-ascii?q?dzSd3ZroIL3YNnHy/Ayza67RwlzRytKW9bkA6fsmq1TvphqmFlc//Hp91dlV0H?=
 =?us-ascii?q?yc5ovRAQoWUJLxVFs39hdgq7HbZCk9+53b1Xl2PaaotT/C3sojBPE5xRa4Y9df?=
 =?us-ascii?q?LKSEGRfyEs0HHcShNPYmmlmpbh0eOuBS+7U5P8end/uAxa6qM/xsnDOgjWRb/o?=
 =?us-ascii?q?991liA+DZ7Su7Nx5wF2e2X3hObVzfgi1esqtr3mYFYaj4IBGqw1C/kCJRXZqJs?=
 =?us-ascii?q?Z4YLCH6iLNGtydV6mpHiRWRY9FmlB14d3M+peBySb0Hy3AFK1EQXp2CnljW8zz?=
 =?us-ascii?q?Bujz4pqa+f1jTUw+v+bBoHJnJLRG56gFbsIIi4ldAbUFKzbwg0khuo/kL6x6ld?=
 =?us-ascii?q?pKRiIGjfW0ZIfy7qL258Vqu8rKaNY8lK6JkwqyVYTPy8YUyGSr76uxYa0TnsH3?=
 =?us-ascii?q?FdxDA4cDGmoI75kAZ5iGKeLXZzqmTWecdryBfb5dzcQ+NR3zUcSCl5jznXGkaz?=
 =?us-ascii?q?P92z8dqIkJfDt/i0V3i9WZ1LbSnr0YSAuTO75GJwBh2zhfKzmtzhEQUh1S/71t?=
 =?us-ascii?q?9qVTjHrRrmY4nr0bi6PvxjfkVyGFD87M96EJlkkoQsnJEQxWQahpKN8HoEi2jz?=
 =?us-ascii?q?MM9X2aLjbHUXQz4LzMXY4Azk2E1lM3KIyJj1VnSbwst9eda6Znka1T4678BPEK?=
 =?us-ascii?q?2U9qBLnTNpolqkqgLcef19njYeyfQ08nIbjf8GuBExziqDGLAdBldXPTbjlxmT?=
 =?us-ascii?q?69C+raNXZHugcLSq1Up+m8yhA6+Gog1GRHn5fZIiFzdq7spjKFLMzGHz6ob8dd?=
 =?us-ascii?q?nMatITsweYkhbagOhTNZIxjeEKhSt8NGL5vH0lzfM7jBN00ZG7uoiHN3ti/Kaj?=
 =?us-ascii?q?DhFEMT31YtsZ+ivxgqZGgsaWw4evE416FToRW5voSe+oHCgWtfT6LAuOFDw8qn?=
 =?us-ascii?q?GGGbvQBwOf6UFmr27RHJCvLX2YOH4ZzdB6ThmHOENfmBwUXCk9npMhFACl3snh?=
 =?us-ascii?q?f1li5jwL+l70sBhMyv9rNxniVGfQvhyoZywwSJieKhpW8w5D613UMcyY8uJ8AS?=
 =?us-ascii?q?VY8oe9owyKL2yRfx5IAn0RWkyYG1DjOaGj5NnH8+iFH+q+MuHBYbOUpexFUPeI?=
 =?us-ascii?q?w52v35Bi/zaNMMWPI3ZjA+c62kpFQXB2BcDZly8TRCwQkiLHd9Sbqwuk+i1rss?=
 =?us-ascii?q?C/9+zmWALx6ouOCLtSMtRv9wq1gaeZMO6Qizh2KSxF1pMX3nLIzLkf3FgPiyBh?=
 =?us-ascii?q?bTWtELIAtTLTQ6LUgKNYExkbayZrPstS8608xhVNOdLcit7tzLF4k+U6C01bWl?=
 =?us-ascii?q?3hgM2pYc0KLnq5NFPGAkaLKbuHKSfKw8HxfaOzV7lQgP9IuB23vDaRC1XjMSib?=
 =?us-ascii?q?lzn1SxCvNvlBjD2aPBxboo2ybgxhBnTjTN34bB22K9t3jTwwwb0piXLGL28cMT?=
 =?us-ascii?q?5gc0xTqr2c9z9XgvJ6G2ZZ9HpqMfGEmzqF7+nfMpsXseFkAiJxl+Jb5nQ107pU?=
 =?us-ascii?q?7CFeS/xzlyvftdpuo1CgkumSxTtrShtOqjBXhI2VuUVuI7nW9p5FWSWMwBVY12?=
 =?us-ascii?q?KaQzQHvcFkDNKn77pXwNjnl6/pLjpGtdXO8p1PKdLTLZetOX0lMByhJzfSA0NR?=
 =?us-ascii?q?RzesMWDZwVNUlv668nyTp4I97J/2l8xdGfdgSFUpG6ZCWQxeF9sYLcIyB2t8nA?=
 =?us-ascii?q?=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AeAAAYPgdch0O0hNFkHQEBBQEHBQGBU?=
 =?us-ascii?q?gcBCwGBWoIRJ4N5lCeCDRSXNYFzLBMBhECDDCI1CA0BAwEBAQEBAQIBEwEBAQg?=
 =?us-ascii?q?NCQgpIwyCNiQBgmEBAQEBAgEBAiAEGQEBNwEFCQEBCgsNAgImAgIDHxIBBQEcB?=
 =?us-ascii?q?hMFgxyBeggFmUs8ih1wfDOCdgEBBYcoCBJ5ixOBVz+EI4FUgxEcgwSCV4kzgW+?=
 =?us-ascii?q?EEnuFJhKKYwcCgiAEjx0YizeFb4dskHswgSYBggszGjBDMQaCNYIbDBd/AQ6HU?=
 =?us-ascii?q?IMZgjMyM4EFAQGIVQSCSQEB?=
X-IPAS-Result: =?us-ascii?q?A0AeAAAYPgdch0O0hNFkHQEBBQEHBQGBUgcBCwGBWoIRJ4N?=
 =?us-ascii?q?5lCeCDRSXNYFzLBMBhECDDCI1CA0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiQBg?=
 =?us-ascii?q?mEBAQEBAgEBAiAEGQEBNwEFCQEBCgsNAgImAgIDHxIBBQEcBhMFgxyBeggFmUs?=
 =?us-ascii?q?8ih1wfDOCdgEBBYcoCBJ5ixOBVz+EI4FUgxEcgwSCV4kzgW+EEnuFJhKKYwcCg?=
 =?us-ascii?q?iAEjx0YizeFb4dskHswgSYBggszGjBDMQaCNYIbDBd/AQ6HUIMZgjMyM4EFAQG?=
 =?us-ascii?q?IVQSCSQEB?=
X-IronPort-AV: E=Sophos;i="5.56,316,1539673200"; 
   d="scan'208";a="140807107"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 04 Dec 2018 18:57:32 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726570AbeLEC53 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 4 Dec 2018 21:57:29 -0500
Received: from mail-lj1-f196.google.com ([209.85.208.196]:40558 "EHLO
        mail-lj1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725982AbeLEC53 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 4 Dec 2018 21:57:29 -0500
Received: by mail-lj1-f196.google.com with SMTP id n18-v6so16898937lji.7
        for <linux-kernel@vger.kernel.org>; Tue, 04 Dec 2018 18:57:27 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc:content-transfer-encoding;
        bh=g3vdiKpq6Yq137uF6dDzSyP1VLeEpr9KPs0zFhT2M9g=;
        b=AvUeHEfDId+G74ApLqVBHgV2QmAkaA9ORiz0wd+Z5pJ15LoEHyAW4d5pmAvGjI4rhV
         YVyELgC6sGLbKMPMzIZ1HPaCVCJH6gWEVDP5XTLZxq0WFeHCMUUVj2NGmHrO0yImRaH2
         D/VC3hSb9gYN7C5AhXZ9yZ56aLQGpcJGm8Ubs=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc:content-transfer-encoding;
        bh=g3vdiKpq6Yq137uF6dDzSyP1VLeEpr9KPs0zFhT2M9g=;
        b=t7QOrAsbr/Nhyyya/7AKtZJB0Jbj87r9/qUzx5AEYuXJ+kEGi19nV9B1Tb37JKjmyr
         +OrFO8aj01B0bkUcXTKStYq0D0JRdQFgyPI+BgQeZIbOujBIiJHCeGjoLiApXi/yra7s
         WJ1IXTSlR7RnyRIjwxZ710Xv/FMJ1lEHQ6eKcxlvsXpHncPfkWgdTvmAnfJhMJrWRoFB
         5NmNIChYOk/4zlVyfGu4w3jNnnMxfuBjfqKKBd8PB4e454DpiXn9Jkjeq5do9n+7OA3a
         5vfwIZmeWujCRW3OwJxcQKZS0rML3xlcRG9MPWyDq04jBJaxkVOb5buaCPnihaof7pV3
         UpzA==
X-Gm-Message-State: AA+aEWZSFXCocRD5R9lC5M32wrdtJXcmSH5FBWj+dYfD73LxYlpAjmp9
        E1TJQOnrVTDOyEJYvZBA7bkgs9yjHU3p8p+P20F9fA==
X-Google-Smtp-Source: AFSGD/WwTCKfNk1curYU9AOJSPMFptKRQucn4abhtp6VOjv40S3rD08VtQEc8FTcSvXa199jM9nFbIcD5OHeBgKEry4=
X-Received: by 2002:a2e:5109:: with SMTP id f9-v6mr2959490ljb.52.1543978646327;
 Tue, 04 Dec 2018 18:57:26 -0800 (PST)
MIME-Version: 1.0
References: <4ea9eaf85d780afb190cb45da2df8ff5fd86d449.1542362262.git.baolin.wang@linaro.org>
 <a41e3aad0147b25c4c22189dd7af0d68c5587b92.1542362262.git.baolin.wang@linaro.org>
 <20181204215219.GA14502@bogus>
In-Reply-To: <20181204215219.GA14502@bogus>
From: Baolin Wang <baolin.wang@linaro.org>
Date: Wed, 5 Dec 2018 10:57:12 +0800
Message-ID: <CAMz4ku+5ELZ9sXz+1RzkgHnOFz_XfObwCdyixhvPN+Q0aovgUQ@mail.gmail.com>
Subject: Re: [PATCH 5/6] power: supply: charger-manager: Remove deprecated
 extcon APIs
To: Rob Herring <robh@kernel.org>
Cc: Sebastian Reichel <sre@kernel.org>,
        Mark Rutland <mark.rutland@arm.com>,
        Linux PM list <linux-pm@vger.kernel.org>,
        DTML <devicetree@vger.kernel.org>,
        LKML <linux-kernel@vger.kernel.org>, yuanjiang.yu@unisoc.com,
        Mark Brown <broonie@kernel.org>,
        Linus Walleij <linus.walleij@linaro.org>
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Rob=EF=BC=8C
On Wed, 5 Dec 2018 at 05:52, Rob Herring <robh@kernel.org> wrote:
>
> On Fri, Nov 16, 2018 at 07:01:12PM +0800, Baolin Wang wrote:
> > The struct extcon_specific_cable_nb and related APIs are deprecated now=
,
> > so we should use new method to get one extcon device and register extco=
n
> > notifier.
> >
> > Signed-off-by: Baolin Wang <baolin.wang@linaro.org>
> > ---
> >  .../bindings/power/supply/charger-manager.txt      |    6 +--
>
> Bindings should be a separate patch.

Sure.

>
> >  drivers/power/supply/charger-manager.c             |   51 ++++++++----=
--------
> >  include/linux/power/charger-manager.h              |    2 +-
> >  3 files changed, 23 insertions(+), 36 deletions(-)
> >
> > diff --git a/Documentation/devicetree/bindings/power/supply/charger-man=
ager.txt b/Documentation/devicetree/bindings/power/supply/charger-manager.t=
xt
> > index ec4fe9d..315b0cb 100644
> > --- a/Documentation/devicetree/bindings/power/supply/charger-manager.tx=
t
> > +++ b/Documentation/devicetree/bindings/power/supply/charger-manager.tx=
t
> > @@ -11,7 +11,7 @@ Required properties :
> >       - cm-regulator-name : name of charger regulator
> >       - subnode <cable> :
> >               - cm-cable-name : name of charger cable
> > -             - cm-cable-extcon : name of extcon dev
> > +             - extcon : phandles to external connector devices
>
> Somewhat less terrible, but not really. I consider extcon binding itself
> deprecated. I suspect 'charger-manager' as a whole probably needs to be
> reworked. This also is not a backwards compatible change.

We are do some optimization for 'charger-manager', like this patch
did, we are trying to remove the deprecated extcon API.
And now no one use the incorrect 'cm-cable-extcon' property on
mainline, so no need worry backwards compatibility.

> >  (optional)   - cm-cable-min : minimum current of cable
> >  (optional)   - cm-cable-max : maximum current of cable
> >
> > @@ -66,13 +66,13 @@ Example :
> >                       cm-regulator-name =3D "chg-reg";
> >                       cable@0 {
> >                               cm-cable-name =3D "USB";
> > -                             cm-cable-extcon =3D "extcon-dev.0";
> > +                             extcon =3D <&extcon_usb>;
> >                               cm-cable-min =3D <475000>;
> >                               cm-cable-max =3D <500000>;
> >                       };
> >                       cable@1 {
> >                               cm-cable-name =3D "TA";
> > -                             cm-cable-extcon =3D "extcon-dev.0";
> > +                             extcon =3D <&extcon_usb>;
> >                               cm-cable-min =3D <650000>;
> >                               cm-cable-max =3D <675000>;
> >                       };
> > diff --git a/drivers/power/supply/charger-manager.c b/drivers/power/sup=
ply/charger-manager.c
> > index dc0c9a6..4f28c03 100644
> > --- a/drivers/power/supply/charger-manager.c
> > +++ b/drivers/power/supply/charger-manager.c
> > @@ -1207,12 +1207,11 @@ static int charger_extcon_init(struct charger_m=
anager *cm,
> >        */
> >       INIT_WORK(&cable->wq, charger_extcon_work);
> >       cable->nb.notifier_call =3D charger_extcon_notifier;
> > -     ret =3D extcon_register_interest(&cable->extcon_dev,
> > -                     cable->extcon_name, cable->name, &cable->nb);
> > -     if (ret < 0) {
> > -             pr_info("Cannot register extcon_dev for %s(cable: %s)\n",
> > -                     cable->extcon_name, cable->name);
> > -     }
> > +     ret =3D devm_extcon_register_notifier(cm->dev, cable->extcon_dev,
> > +                                         EXTCON_USB, &cable->nb);
> > +     if (ret < 0)
> > +             dev_err(cm->dev, "Cannot register extcon_dev for (cable: =
%s)\n",
> > +                     cable->name);
> >
> >       return ret;
> >  }
> > @@ -1589,15 +1588,25 @@ static struct charger_desc *of_cm_parse_desc(st=
ruct device *dev)
> >                               for_each_child_of_node(child, _child) {
> >                                       of_property_read_string(_child,
> >                                       "cm-cable-name", &cables->name);
> > -                                     of_property_read_string(_child,
> > -                                     "cm-cable-extcon",
> > -                                     &cables->extcon_name);
> >                                       of_property_read_u32(_child,
> >                                       "cm-cable-min",
> >                                       &cables->min_uA);
> >                                       of_property_read_u32(_child,
> >                                       "cm-cable-max",
> >                                       &cables->max_uA);
> > +
> > +                                     if (of_property_read_bool(_child,=
 "extcon")) {
> > +                                             struct device_node *np;
> > +
> > +                                             np =3D of_parse_phandle(_=
child, "extcon", 0);
> > +                                             if (!np)
> > +                                                     return ERR_PTR(-E=
NODEV);
> > +
> > +                                             cables->extcon_dev =3D ex=
tcon_find_edev_by_node(np);
> > +                                             of_node_put(np);
> > +                                             if (IS_ERR(cables->extcon=
_dev))
> > +                                                     return ERR_PTR(PT=
R_ERR(cables->extcon_dev));
> > +                                     }
> >                                       cables++;
> >                               }
> >                       }
> > @@ -1625,7 +1634,6 @@ static int charger_manager_probe(struct platform_=
device *pdev)
> >       struct charger_desc *desc =3D cm_get_drv_data(pdev);
> >       struct charger_manager *cm;
> >       int ret, i =3D 0;
> > -     int j =3D 0;
> >       union power_supply_propval val;
> >       struct power_supply *fuel_gauge;
> >       struct power_supply_config psy_cfg =3D {};
> > @@ -1823,19 +1831,8 @@ static int charger_manager_probe(struct platform=
_device *pdev)
> >                               &charger->attr_g);
> >       }
> >  err_reg_extcon:
> > -     for (i =3D 0; i < desc->num_charger_regulators; i++) {
> > -             struct charger_regulator *charger;
> > -
> > -             charger =3D &desc->charger_regulators[i];
> > -             for (j =3D 0; j < charger->num_cables; j++) {
> > -                     struct charger_cable *cable =3D &charger->cables[=
j];
> > -                     /* Remove notifier block if only edev exists */
> > -                     if (cable->extcon_dev.edev)
> > -                             extcon_unregister_interest(&cable->extcon=
_dev);
> > -             }
> > -
> > +     for (i =3D 0; i < desc->num_charger_regulators; i++)
> >               regulator_put(desc->charger_regulators[i].consumer);
> > -     }
> >
> >       power_supply_unregister(cm->charger_psy);
> >
> > @@ -1847,7 +1844,6 @@ static int charger_manager_remove(struct platform=
_device *pdev)
> >       struct charger_manager *cm =3D platform_get_drvdata(pdev);
> >       struct charger_desc *desc =3D cm->desc;
> >       int i =3D 0;
> > -     int j =3D 0;
> >
> >       /* Remove from the list */
> >       mutex_lock(&cm_list_mtx);
> > @@ -1857,15 +1853,6 @@ static int charger_manager_remove(struct platfor=
m_device *pdev)
> >       cancel_work_sync(&setup_polling);
> >       cancel_delayed_work_sync(&cm_monitor_work);
> >
> > -     for (i =3D 0 ; i < desc->num_charger_regulators ; i++) {
> > -             struct charger_regulator *charger
> > -                             =3D &desc->charger_regulators[i];
> > -             for (j =3D 0 ; j < charger->num_cables ; j++) {
> > -                     struct charger_cable *cable =3D &charger->cables[=
j];
> > -                     extcon_unregister_interest(&cable->extcon_dev);
> > -             }
> > -     }
> > -
> >       for (i =3D 0 ; i < desc->num_charger_regulators ; i++)
> >               regulator_put(desc->charger_regulators[i].consumer);
> >
> > diff --git a/include/linux/power/charger-manager.h b/include/linux/powe=
r/charger-manager.h
> > index c4fa907..e4d0269 100644
> > --- a/include/linux/power/charger-manager.h
> > +++ b/include/linux/power/charger-manager.h
> > @@ -66,7 +66,7 @@ struct charger_cable {
> >       const char *name;
> >
> >       /* The charger-manager use Extcon framework */
> > -     struct extcon_specific_cable_nb extcon_dev;
> > +     struct extcon_dev *extcon_dev;
> >       struct work_struct wq;
> >       struct notifier_block nb;
> >
> > --
> > 1.7.9.5
> >



--=20
Baolin Wang
Best Regards
