Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 10 Dec 2018 18:13:56 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B2CF85804A8
	for <like.xu@linux.intel.com>; Sun,  9 Dec 2018 22:22:19 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga001-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 09 Dec 2018 22:22:19 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3Al92VORBTxVNa5E+WG5UiUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP37pMiwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VDK/5KlpVRDokj?=
 =?us-ascii?q?8KOTA5/m/JicJwgq1Urw68qBN9zYHafZmVOfh8cK7SYN8XS3ZNUdhKVyFaDYOw?=
 =?us-ascii?q?c5ECAvAdMetCsYXwoUYFoxukBQmrAePi0jFGiWXo3a07zusqDADI3A07ENIVt3?=
 =?us-ascii?q?TUqsj+OaAPXu+v0qnIzCjMYuhZ2Tf884fIaRchofeWUb1ta8rRzlEvGBjbgVqK?=
 =?us-ascii?q?s4zpJTKV2fkXv2eB8uptTOSigHMppQF2pzig3MYsio/Ri4Iay1DE6SV5wJsuKt?=
 =?us-ascii?q?GiVEF7ZtukHINXtyCbM4t5WNgtQ3pytCY90L0Gtoa3czUQyJQg3x7QcOKIfJKS?=
 =?us-ascii?q?4h75VeaePDF1j29mdrKnnxu+71Ssx+7mWsWpzVpHrTBJnsfCu30NzRDf98qKRu?=
 =?us-ascii?q?Nj8ku91zuDzR3f5vxeLU02iKbXMYMtz7gtnZQJq0vDBDX5mEDuga+WaEok/u+o?=
 =?us-ascii?q?5vzjYrXnvZ+cK5R0hhvxMqQoh8yzG+M4MhIBX2SD+OS80qPs/VHhTblUkvE7kb?=
 =?us-ascii?q?PVvI3HKckYvKK1HQFY34Y55xqiDTqqyNEYkmMGLFJBdhKHlY/pO1TWLfDhE/i/?=
 =?us-ascii?q?hkmsnC52yP/YIL3uHJHNImHYn7fmYLZ97VJTxxQozdxY45JUC7IBL+zpVk7+qd?=
 =?us-ascii?q?zVFhs5Mw2yw+b6B9RxzIIeWWSTAqCHNKPeq0OH5uUqI+SXYo8VvzD9K/cj5/7z?=
 =?us-ascii?q?l3M5nkUdfaax0ZsNdH+4BuhmI1meYXf0htcBEGQKsRQkQO3llV2PSjpTZ3e0X6?=
 =?us-ascii?q?Ih6TA3EoOmDYHfRo+zhLyNxju0HppTZjMON1aXDH29d5mYQ+xeL2WWI9R9iXoC?=
 =?us-ascii?q?Ur6uTZJn0guh8wrzyr5iJ+yT/TUEtJXlz59s6ujO0B0/6zFwXPmbyHyHGmR9n2?=
 =?us-ascii?q?cUQG0v0aVi5EBw1FqHlLJ1muFVDsB74fRPXQEnc5nGwLthFtrwVwndK8qPU0us?=
 =?us-ascii?q?Wd68ADs8He42lvYKblZwCp2BhwrP1jGqDqEOlL2aTMg986H02Gr1LsxmjWzbgv?=
 =?us-ascii?q?oPlV4jF+dGK2yqzoF+/RPUAcadn0yHlqqCeqUWxynLsmuZynKEsUhCFg98F6zY?=
 =?us-ascii?q?CyNMLnDKpMj0sxuRB4SlDq4qZ1NM?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AFAAAPBQ5cmBHrdtBjFgQBAQEBAQIBA?=
 =?us-ascii?q?QEBBwIBAQEBgVEFAQEBAQsBgTCBOYEpBIwPX4sugg2XURSBXwINBRgLCYQ7A4M?=
 =?us-ascii?q?kIjQJDQEDAQEBAQEBAgETAQEBAQEICwsGGw4jDII2BQIDGAmCXAECAwECJBkBA?=
 =?us-ascii?q?QQKKQECAwECBgEBCg4EBgkdCAMBCwUYHRQTBQSDGAGCAAEBBAqjeIFsM4J2AQE?=
 =?us-ascii?q?FgTABhWIHCIJtiBiBHBeBf4ERgxKDHgKBSoVyoHcJgiWEY4o8CxhggUmMHIJ4g?=
 =?us-ascii?q?wKLE4JriDCBRoIOMxoIFxmDJwmCEgwXEoFygUaFFIVTLTGBBAOKUoF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0AFAAAPBQ5cmBHrdtBjFgQBAQEBAQIBAQEBBwIBAQEBgVE?=
 =?us-ascii?q?FAQEBAQsBgTCBOYEpBIwPX4sugg2XURSBXwINBRgLCYQ7A4MkIjQJDQEDAQEBA?=
 =?us-ascii?q?QEBAgETAQEBAQEICwsGGw4jDII2BQIDGAmCXAECAwECJBkBAQQKKQECAwECBgE?=
 =?us-ascii?q?BCg4EBgkdCAMBCwUYHRQTBQSDGAGCAAEBBAqjeIFsM4J2AQEFgTABhWIHCIJti?=
 =?us-ascii?q?BiBHBeBf4ERgxKDHgKBSoVyoHcJgiWEY4o8CxhggUmMHIJ4gwKLE4JriDCBRoI?=
 =?us-ascii?q?OMxoIFxmDJwmCEgwXEoFygUaFFIVTLTGBBAOKUoF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,337,1539673200"; 
   d="asc'?scan'208";a="55212832"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 09 Dec 2018 22:22:18 -0800
Received: from localhost ([::1]:59353 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gWExN-0003bO-NH
	for like.xu@linux.intel.com; Mon, 10 Dec 2018 01:22:17 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:50775)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <dgibson@ozlabs.org>) id 1gWEx0-0003XB-1F
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 01:21:55 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <dgibson@ozlabs.org>) id 1gWEww-0002vO-TC
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 01:21:54 -0500
Received: from ozlabs.org ([203.11.71.1]:51295)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <dgibson@ozlabs.org>)
	id 1gWEwv-0002uG-Fc; Mon, 10 Dec 2018 01:21:50 -0500
Received: by ozlabs.org (Postfix, from userid 1007)
	id 43CtJT0dkRz9s6w; Mon, 10 Dec 2018 17:21:44 +1100 (AEDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
	d=gibson.dropbear.id.au; s=201602; t=1544422905;
	bh=R6xa80ILj2v7j216JRCHH2j1Fga+Tk6kY/WOjuhyEWM=;
	h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
	b=Yynl/PPMFN6cgOYXZcj869ISWqymwJLUbgP4YtaeZPQaLRc8iUIpCn0B9NRNRM6Eh
	6w0vQDKpLee/NWV0xRHxeKvGQRqn08SSTenyG80E85LFHGmxVB/EOx2uykHtytMexl
	EhEe/ECVItliPdrKXOUF87jbqWfLrVMJ0SfqwGbE=
Date: Mon, 10 Dec 2018 17:20:43 +1100
From: David Gibson <david@gibson.dropbear.id.au>
To: Alexey Kardashevskiy <aik@ozlabs.ru>
Message-ID: <20181210062043.GS4261@umbus.fritz.box>
References: <20181108014406.29818-1-aik@ozlabs.ru>
	<20181111191047.7af39551@bahia.lan>
	<efc67974-4118-7877-6f8d-ce0a09cb9999@ozlabs.ru>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
	protocol="application/pgp-signature"; boundary="wxNrNKeE/ptr8Zbn"
Content-Disposition: inline
In-Reply-To: <efc67974-4118-7877-6f8d-ce0a09cb9999@ozlabs.ru>
User-Agent: Mutt/1.10.1 (2018-07-13)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 203.11.71.1
Subject: Re: [Qemu-devel] [Qemu-ppc] [PATCH qemu] ppc/spapr: Receive and
 store device tree blob from SLOF
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-ppc@nongnu.org, Greg Kurz <groug@kaod.org>, qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>


--wxNrNKeE/ptr8Zbn
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

On Mon, Nov 12, 2018 at 03:12:26PM +1100, Alexey Kardashevskiy wrote:
>=20
>=20
> On 12/11/2018 05:10, Greg Kurz wrote:
> > Hi Alexey,
> >=20
> > Just a few remarks. See below.
> >=20
> > On Thu,  8 Nov 2018 12:44:06 +1100
> > Alexey Kardashevskiy <aik@ozlabs.ru> wrote:
> >=20
> >> SLOF receives a device tree and updates it with various properties
> >> before switching to the guest kernel and QEMU is not aware of any chan=
ges
> >> made by SLOF. Since there is no real RTAS (QEMU implements it), it mak=
es
> >> sense to pass the SLOF final device tree to QEMU to let it implement
> >> RTAS related tasks better, such as PCI host bus adapter hotplug.
> >>
> >> Specifially, now QEMU can find out the actual XICS phandle (for PHB
> >> hotplug) and the RTAS linux,rtas-entry/base properties (for firmware
> >> assisted NMI - FWNMI).
> >>
> >> This stores the initial DT blob in the sPAPR machine and replaces it
> >> in the KVMPPC_H_UPDATE_DT (new private hypercall) handler.
> >>
> >> This adds an @update_dt_enabled machine property to allow backward
> >> migration.
> >>
> >> SLOF already has a hypercall since
> >> https://github.com/aik/SLOF/commit/e6fc84652c9c0073f9183
> >>
> >> Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>
> >> ---
> >>  include/hw/ppc/spapr.h |  7 ++++++-
> >>  hw/ppc/spapr.c         | 29 ++++++++++++++++++++++++++++-
> >>  hw/ppc/spapr_hcall.c   | 32 ++++++++++++++++++++++++++++++++
> >>  hw/ppc/trace-events    |  2 ++
> >>  4 files changed, 68 insertions(+), 2 deletions(-)
> >>
> >> diff --git a/include/hw/ppc/spapr.h b/include/hw/ppc/spapr.h
> >> index ad4d7cfd97..f5dcaf44cb 100644
> >> --- a/include/hw/ppc/spapr.h
> >> +++ b/include/hw/ppc/spapr.h
> >> @@ -100,6 +100,7 @@ struct sPAPRMachineClass {
> >> =20
> >>      /*< public >*/
> >>      bool dr_lmb_enabled;       /* enable dynamic-reconfig/hotplug of =
LMBs */
> >> +    bool update_dt_enabled;    /* enable KVMPPC_H_UPDATE_DT */
> >>      bool use_ohci_by_default;  /* use USB-OHCI instead of XHCI */
> >>      bool pre_2_10_has_unused_icps;
> >>      bool legacy_irq_allocation;
> >> @@ -136,6 +137,9 @@ struct sPAPRMachineState {
> >>      int vrma_adjust;
> >>      ssize_t rtas_size;
> >>      void *rtas_blob;
> >> +    uint32_t fdt_size;
> >> +    uint32_t fdt_initial_size;
> >=20
> > I don't quite see the purpose of fdt_initial_size... it seems to be only
> > used to print a trace.
>=20
>=20
> Ah, lost in rebase. The purpose was to test if the new device tree has
> not grown too much.
>=20
>=20
>=20
> >=20
> >> +    void *fdt_blob;
> >>      long kernel_size;
> >>      bool kernel_le;
> >>      uint32_t initrd_base;
> >> @@ -462,7 +466,8 @@ struct sPAPRMachineState {
> >>  #define KVMPPC_H_LOGICAL_MEMOP  (KVMPPC_HCALL_BASE + 0x1)
> >>  /* Client Architecture support */
> >>  #define KVMPPC_H_CAS            (KVMPPC_HCALL_BASE + 0x2)
> >> -#define KVMPPC_HCALL_MAX        KVMPPC_H_CAS
> >> +#define KVMPPC_H_UPDATE_DT      (KVMPPC_HCALL_BASE + 0x3)
> >> +#define KVMPPC_HCALL_MAX        KVMPPC_H_UPDATE_DT
> >> =20
> >>  typedef struct sPAPRDeviceTreeUpdateHeader {
> >>      uint32_t version_id;
> >> diff --git a/hw/ppc/spapr.c b/hw/ppc/spapr.c
> >> index c08130facb..5e2d4d211c 100644
> >> --- a/hw/ppc/spapr.c
> >> +++ b/hw/ppc/spapr.c
> >> @@ -1633,7 +1633,10 @@ static void spapr_machine_reset(void)
> >>      /* Load the fdt */
> >>      qemu_fdt_dumpdtb(fdt, fdt_totalsize(fdt));
> >>      cpu_physical_memory_write(fdt_addr, fdt, fdt_totalsize(fdt));
> >> -    g_free(fdt);
> >> +    g_free(spapr->fdt_blob);
> >> +    spapr->fdt_size =3D fdt_totalsize(fdt);
> >> +    spapr->fdt_initial_size =3D spapr->fdt_size;
> >> +    spapr->fdt_blob =3D fdt;
> >=20
> > Hmm... It looks weird to store state in a reset handler. I'd rather zer=
oe
> > both fdt_blob and fdt_size here.
>=20
> The device tree is built from the reset handler and the idea is that we
> want to always have some tree in the machine.

Yes, I think the approach here is fine.  Otherwise when we want to
look up the current fdt state in RTAS calls or whatever we'd always
have to do
	if (fdt_blob)
		look up that
	else
		look up qemu created fdt.

Incidentally 'fdt' and 'fdt_blob' names do a terrible job of
distinguishing what the difference is.  Renaming fdt to fdt_initial
(to match fdt_initial_size) and fdt_blob to fdt should make that
clearer.

--=20
David Gibson			| I'll have my music baroque, and my code
david AT gibson.dropbear.id.au	| minimalist, thank you.  NOT _the_ _other_
				| _way_ _around_!
http://www.ozlabs.org/~dgibson

--wxNrNKeE/ptr8Zbn
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEEdfRlhq5hpmzETofcbDjKyiDZs5IFAlwOBbgACgkQbDjKyiDZ
s5I5cQ/9F0YS03o2XRjavMgeXN8wXRJB7u6wEjEKUOmXygn/UYvHLNiknr2USW+J
i1XpGus0M0fzlA9X8FK575/Lp3i8L8lX9YbnYB0OUFMhXz/bbjQEk0BDMAuMI6cO
77QzoJU53hkHBsy0ABPD52VqCBixpMrqmL+Enq8tofSOzCfyh6Ab70EWGSA8q9Fb
L76SHzgXb57SdwSALcKAInZO3vlGbSpNtZp+63GstJ3vQXduSN+h3oihlWcL4q1Z
ZfIkxBq9kwND/9UzqAv7hvhxwUCsEqx6//kuNXr4jnst/Wo3/ekQtIS9Po8xgjPc
gYvejKBj4Awpbbcz49U/T3aJynH7lPRbILun8evFtlpU3G97xRF8FmCKUt4EpLvr
t//mb1+K6sWNzpbA2zYs9b35urI0CbuybEvjg+hxP79WkctrOMYUWsHDGX2CcbSz
W0+HBHSW4TaizCrAOisdvCfAZwE9vvXv497ac5y9+PpXsk4piaXcyIF64tlATYgY
IxPa7Arh1C4HqJ1D1xVhc/02AURW0I/FpicfXROgAb6Jm7yqJ4pVYhKKrfWEJAiH
WJd8KFbm+0WPi5iHnsTL+YlBLMQt/OYZMEpRCkNmE0/HzftKwIPBrdyJNBawLcl7
MJxWZukpAqfEoTVYRsXFjYz2bodL4eWsNlgPxArjZe+WBYqgjiU=
=FaqK
-----END PGP SIGNATURE-----

--wxNrNKeE/ptr8Zbn--

