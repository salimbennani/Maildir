Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 03 Dec 2018 16:51:20 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 3E41E580224
	for <like.xu@linux.intel.com>; Sun,  2 Dec 2018 18:27:51 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga001-1.jf.intel.com with ESMTP; 02 Dec 2018 18:27:51 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3ASfefLxZPD119VHOZzEcJvD3/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpsy+Zx7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v6bpgRh31hy?=
 =?us-ascii?q?cdLzM3/mHZhNJzgqJVrx2uuwFwzIzab4+ILPpzfKHTcNwHSWdPQspeSTdBD5iz?=
 =?us-ascii?q?b4cTFecMJ/pUopPgq1YIsBCwBROsBOTqyjJQiHH5x7M60+U8Hgrb3QIgHskBsG?=
 =?us-ascii?q?/TrNXzKawfVv26w7PWzTXCcvxbwjj96InTfRA6pvGMW6h8ftfLyUkoDwPKlUuf?=
 =?us-ascii?q?ppb/Pz+P1+QCrnKX4PB9Ve+2jWMstg9/oj+qxsg2i4nJgJoYxU7C9SpkwYY6P9?=
 =?us-ascii?q?u4R1BgYd6/CpdQsSaaO5NxQsIjR2Fnoj01yqYctZ68ZigKx4wryAPFa/yAa4iH?=
 =?us-ascii?q?+QzsW/yLITtihXJqZbSyjAux/0i40uDwSNW43VVQoiZYj9XBtWoB2wLd58WHUP?=
 =?us-ascii?q?dx40Ws1S6R2w3c9u1IPEU5mKTfJpI93rI9k4QfvEHeEiLznUj6kqmbfVg+9Oey?=
 =?us-ascii?q?8eToeLDmq4ecN4BqjgH+Nbwjmsi+AeQjLggORHKX+eu61L3+50H5R69KjvIunq?=
 =?us-ascii?q?nYtpDVO9gbq7anDwNJ0Ysv8QuzAyql3dgCg3UKIlJIdAiag4XrI13OJer3Dfa7?=
 =?us-ascii?q?g1SiijdrwPXGM6X4AprTK3jDja7tcqtj5E5C1gUzyclT6IlTCrEcJvL8RlH+tM?=
 =?us-ascii?q?ffAh89Mgy0wPjoBM9y14MDQW+PBq6ZMKXPsV6H/O4vIu+MZJMLtzb5MfQq+/nu?=
 =?us-ascii?q?jXoilF8beqmp25QXaHalHvh8JEWZe3Xsjs8bEWgWpgo+UPDqiFqaXD5XZnayXL?=
 =?us-ascii?q?wz6is0CYK7ForDQoGtgLqc3Ca0BJFWZ2ZGCkySHnfsbYmLR/AMaCfBavJniSEO?=
 =?us-ascii?q?ALi9V5c6h1bpsA7h16EhKO3S9SsF85X5259w7uzXkBg0sjtsE8Wa1XrKVmxxgy?=
 =?us-ascii?q?YESiE72PNCp1dgwAKG2Kl8n/sKDNFW+rZFXxk3MdvGwvVnBsvucgTGeNiPVRCh?=
 =?us-ascii?q?WNrxGiw7TN8634oTZV1gEc6plBHJ0nmWBOo+FrCRBZd81q+U8H/4O8tngyLN0K?=
 =?us-ascii?q?YJjFAhTo1IL2Lw1YBl8A2GK4fXkknRuKegbqMalHrB/XmCwUKBvUtDVwg2Xb/C?=
 =?us-ascii?q?RXoSb1GQrNi/716UHOzmMqguLgYUkZ3KEaBNcNC81Vg=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ADAAAQlARchxHrdtBjFgQBAQEBAQIBA?=
 =?us-ascii?q?QEBBwIBAQEBgVEFAQEBAQsBgTAlBYEPgSmMEV+LKoINfJZMFIFbBg0FGAcNh3Y?=
 =?us-ascii?q?iNAkNAQMBAQEBAQECARMBAQEKCwkIGw4jDII2BQIDGAmCWwEBAQECAQECPQEBB?=
 =?us-ascii?q?AopAQICAQECBgEBChIGCRoDCAMBCwUYHRQTBQSCTUsBgXkIAQShb4IfgnYBAQW?=
 =?us-ascii?q?HEgcIgm2IE4EcF4F/gRGCXTWEOwsfBYVyj0GRAQmCI4RdgQaJKwsYX3xNjn6QR?=
 =?us-ascii?q?IgpgUaCDTMaCBcZgycJghIMFxJtAQMEfYZahVMtMYEEA4pIDxcELIF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0ADAAAQlARchxHrdtBjFgQBAQEBAQIBAQEBBwIBAQEBgVE?=
 =?us-ascii?q?FAQEBAQsBgTAlBYEPgSmMEV+LKoINfJZMFIFbBg0FGAcNh3YiNAkNAQMBAQEBA?=
 =?us-ascii?q?QECARMBAQEKCwkIGw4jDII2BQIDGAmCWwEBAQECAQECPQEBBAopAQICAQECBgE?=
 =?us-ascii?q?BChIGCRoDCAMBCwUYHRQTBQSCTUsBgXkIAQShb4IfgnYBAQWHEgcIgm2IE4EcF?=
 =?us-ascii?q?4F/gRGCXTWEOwsfBYVyj0GRAQmCI4RdgQaJKwsYX3xNjn6QRIgpgUaCDTMaCBc?=
 =?us-ascii?q?ZgycJghIMFxJtAQMEfYZahVMtMYEEA4pIDxcELIF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,308,1539673200"; 
   d="asc'?scan'208";a="55778119"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 02 Dec 2018 18:27:32 -0800
Received: from localhost ([::1]:46482 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gTdxI-0004BK-R3
	for like.xu@linux.intel.com; Sun, 02 Dec 2018 21:27:28 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:45704)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <dgibson@ozlabs.org>) id 1gTdww-0004AC-3C
	for qemu-devel@nongnu.org; Sun, 02 Dec 2018 21:27:08 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <dgibson@ozlabs.org>) id 1gTdwt-0007p7-VD
	for qemu-devel@nongnu.org; Sun, 02 Dec 2018 21:27:06 -0500
Received: from ozlabs.org ([2401:3900:2:1::2]:57045)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <dgibson@ozlabs.org>)
	id 1gTdws-0007no-TW; Sun, 02 Dec 2018 21:27:03 -0500
Received: by ozlabs.org (Postfix, from userid 1007)
	id 437TQp380Nz9s47; Mon,  3 Dec 2018 13:26:58 +1100 (AEDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
	d=gibson.dropbear.id.au; s=201602; t=1543804018;
	bh=RNRMpQ0jyyf9sS0ufjtuOiRyzCcaXs/JnOUiXsIB9lM=;
	h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
	b=Mwbn6RxjNbdBRrq4JPYBzi6lZf2zQh6Vls31IkRd7M9U4+TsbRscLJDgQyePUUPtb
	gGP0au6+vqu8y1kE0eN+qvgV/HefmZF/RFidH3QPyYmQbAbhBygt8yILSaN3zhcTs9
	CcE9HKzz3f8SUolHqcncn/S5C/Q9QoIUkHq3jwbc=
Date: Mon, 3 Dec 2018 12:36:40 +1100
From: David Gibson <david@gibson.dropbear.id.au>
To: =?iso-8859-1?Q?C=E9dric?= Le Goater <clg@kaod.org>
Message-ID: <20181203013640.GR30479@umbus.fritz.box>
References: <20181116105729.23240-1-clg@kaod.org>
	<20181116105729.23240-17-clg@kaod.org>
	<20181128042547.GZ2251@umbus.fritz.box>
	<a57f6b4b-414e-efe7-475d-e6cbb87f61a8@kaod.org>
	<20181129012355.GP2251@umbus.fritz.box>
	<898d49bd-e430-fd07-e1ee-10d5822e3757@kaod.org>
	<20181130012315.GH30479@umbus.fritz.box>
	<35df014a-1876-1fa2-291c-880d15222a58@kaod.org>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
	protocol="application/pgp-signature"; boundary="phbq2bkSb+hZnunM"
Content-Disposition: inline
In-Reply-To: <35df014a-1876-1fa2-291c-880d15222a58@kaod.org>
User-Agent: Mutt/1.10.1 (2018-07-13)
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2401:3900:2:1::2
Subject: Re: [Qemu-devel] [PATCH v5 16/36] spapr: add hcalls support for the
 XIVE exploitation interrupt mode
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-ppc@nongnu.org, qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>


--phbq2bkSb+hZnunM
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

On Fri, Nov 30, 2018 at 09:07:19AM +0100, C=E9dric Le Goater wrote:
> On 11/30/18 2:23 AM, David Gibson wrote:
> > On Thu, Nov 29, 2018 at 05:04:50PM +0100, C=E9dric Le Goater wrote:
> >> On 11/29/18 2:23 AM, David Gibson wrote:
> >>> On Wed, Nov 28, 2018 at 11:21:37PM +0100, C=E9dric Le Goater wrote:
> >>>> On 11/28/18 5:25 AM, David Gibson wrote:
> >>>>> On Fri, Nov 16, 2018 at 11:57:09AM +0100, C=E9dric Le Goater wrote:
> >>>>>> The different XIVE virtualization structures (sources and event qu=
eues)
> >>>>>> are configured with a set of Hypervisor calls :
> >>>>>>
> >>>>>>  - H_INT_GET_SOURCE_INFO
> >>>>>>
> >>>>>>    used to obtain the address of the MMIO page of the Event State
> >>>>>>    Buffer (ESB) entry associated with the source.
> >>>>>>
> >>>>>>  - H_INT_SET_SOURCE_CONFIG
> >>>>>>
> >>>>>>    assigns a source to a "target".
> >>>>>>
> >>>>>>  - H_INT_GET_SOURCE_CONFIG
> >>>>>>
> >>>>>>    determines which "target" and "priority" is assigned to a source
> >>>>>>
> >>>>>>  - H_INT_GET_QUEUE_INFO
> >>>>>>
> >>>>>>    returns the address of the notification management page associa=
ted
> >>>>>>    with the specified "target" and "priority".
> >>>>>>
> >>>>>>  - H_INT_SET_QUEUE_CONFIG
> >>>>>>
> >>>>>>    sets or resets the event queue for a given "target" and "priori=
ty".
> >>>>>>    It is also used to set the notification configuration associated
> >>>>>>    with the queue, only unconditional notification is supported for
> >>>>>>    the moment. Reset is performed with a queue size of 0 and queue=
ing
> >>>>>>    is disabled in that case.
> >>>>>>
> >>>>>>  - H_INT_GET_QUEUE_CONFIG
> >>>>>>
> >>>>>>    returns the queue settings for a given "target" and "priority".
> >>>>>>
> >>>>>>  - H_INT_RESET
> >>>>>>
> >>>>>>    resets all of the guest's internal interrupt structures to their
> >>>>>>    initial state, losing all configuration set via the hcalls
> >>>>>>    H_INT_SET_SOURCE_CONFIG and H_INT_SET_QUEUE_CONFIG.
> >>>>>>
> >>>>>>  - H_INT_SYNC
> >>>>>>
> >>>>>>    issue a synchronisation on a source to make sure all notificati=
ons
> >>>>>>    have reached their queue.
> >>>>>>
> >>>>>> Calls that still need to be addressed :
> >>>>>>
> >>>>>>    H_INT_SET_OS_REPORTING_LINE
> >>>>>>    H_INT_GET_OS_REPORTING_LINE
> >>>>>>
> >>>>>> See the code for more documentation on each hcall.
> >>>>>>
> >>>>>> Signed-off-by: C=E9dric Le Goater <clg@kaod.org>
> >>>>>> ---
> >>>>>>  include/hw/ppc/spapr.h      |  15 +-
> >>>>>>  include/hw/ppc/spapr_xive.h |   6 +
> >>>>>>  hw/intc/spapr_xive_hcall.c  | 892 +++++++++++++++++++++++++++++++=
+++++
> >>>>>>  hw/ppc/spapr_irq.c          |   2 +
> >>>>>>  hw/intc/Makefile.objs       |   2 +-
> >>>>>>  5 files changed, 915 insertions(+), 2 deletions(-)
> >>>>>>  create mode 100644 hw/intc/spapr_xive_hcall.c
> >>>>>>
> >>>>>> diff --git a/include/hw/ppc/spapr.h b/include/hw/ppc/spapr.h
> >>>>>> index 1fbc2663e06c..8415faea7b82 100644
> >>>>>> --- a/include/hw/ppc/spapr.h
> >>>>>> +++ b/include/hw/ppc/spapr.h
> >>>>>> @@ -452,7 +452,20 @@ struct sPAPRMachineState {
> >>>>>>  #define H_INVALIDATE_PID        0x378
> >>>>>>  #define H_REGISTER_PROC_TBL     0x37C
> >>>>>>  #define H_SIGNAL_SYS_RESET      0x380
> >>>>>> -#define MAX_HCALL_OPCODE        H_SIGNAL_SYS_RESET
> >>>>>> +
> >>>>>> +#define H_INT_GET_SOURCE_INFO   0x3A8
> >>>>>> +#define H_INT_SET_SOURCE_CONFIG 0x3AC
> >>>>>> +#define H_INT_GET_SOURCE_CONFIG 0x3B0
> >>>>>> +#define H_INT_GET_QUEUE_INFO    0x3B4
> >>>>>> +#define H_INT_SET_QUEUE_CONFIG  0x3B8
> >>>>>> +#define H_INT_GET_QUEUE_CONFIG  0x3BC
> >>>>>> +#define H_INT_SET_OS_REPORTING_LINE 0x3C0
> >>>>>> +#define H_INT_GET_OS_REPORTING_LINE 0x3C4
> >>>>>> +#define H_INT_ESB               0x3C8
> >>>>>> +#define H_INT_SYNC              0x3CC
> >>>>>> +#define H_INT_RESET             0x3D0
> >>>>>> +
> >>>>>> +#define MAX_HCALL_OPCODE        H_INT_RESET
> >>>>>> =20
> >>>>>>  /* The hcalls above are standardized in PAPR and implemented by p=
Hyp
> >>>>>>   * as well.
> >>>>>> diff --git a/include/hw/ppc/spapr_xive.h b/include/hw/ppc/spapr_xi=
ve.h
> >>>>>> index 3f65b8f485fd..418511f3dc10 100644
> >>>>>> --- a/include/hw/ppc/spapr_xive.h
> >>>>>> +++ b/include/hw/ppc/spapr_xive.h
> >>>>>> @@ -60,4 +60,10 @@ int spapr_xive_target_to_end(sPAPRXive *xive, u=
int32_t target, uint8_t prio,
> >>>>>>  int spapr_xive_cpu_to_end(sPAPRXive *xive, PowerPCCPU *cpu, uint8=
_t prio,
> >>>>>>                            uint8_t *out_end_blk, uint32_t *out_end=
_idx);
> >>>>>> =20
> >>>>>> +bool spapr_xive_priority_is_valid(uint8_t priority);
> >>>>>
> >>>>> AFAICT this could be a local function.
> >>>>
> >>>> the KVM model uses it also, when collecting state from the KVM devic=
e=20
> >>>> to build the QEMU ENDT.
> >>>>
> >>>>>> +
> >>>>>> +typedef struct sPAPRMachineState sPAPRMachineState;
> >>>>>> +
> >>>>>> +void spapr_xive_hcall_init(sPAPRMachineState *spapr);
> >>>>>> +
> >>>>>>  #endif /* PPC_SPAPR_XIVE_H */
> >>>>>> diff --git a/hw/intc/spapr_xive_hcall.c b/hw/intc/spapr_xive_hcall=
=2Ec
> >>>>>> new file mode 100644
> >>>>>> index 000000000000..52e4e23995f5
> >>>>>> --- /dev/null
> >>>>>> +++ b/hw/intc/spapr_xive_hcall.c
> >>>>>> @@ -0,0 +1,892 @@
> >>>>>> +/*
> >>>>>> + * QEMU PowerPC sPAPR XIVE interrupt controller model
> >>>>>> + *
> >>>>>> + * Copyright (c) 2017-2018, IBM Corporation.
> >>>>>> + *
> >>>>>> + * This code is licensed under the GPL version 2 or later. See the
> >>>>>> + * COPYING file in the top-level directory.
> >>>>>> + */
> >>>>>> +
> >>>>>> +#include "qemu/osdep.h"
> >>>>>> +#include "qemu/log.h"
> >>>>>> +#include "qapi/error.h"
> >>>>>> +#include "cpu.h"
> >>>>>> +#include "hw/ppc/fdt.h"
> >>>>>> +#include "hw/ppc/spapr.h"
> >>>>>> +#include "hw/ppc/spapr_xive.h"
> >>>>>> +#include "hw/ppc/xive_regs.h"
> >>>>>> +#include "monitor/monitor.h"
> >>>>>
> >>>>> Fwiw, I don't think it's particularly necessary to split the hcall
> >>>>> handling out into a separate .c file.
> >>>>
> >>>> ok. let's move it to spapr_xive then ? It might help in reducing the=
=20
> >>>> exported funtions.=20
> >>>
> >>> Yes, I think so.
> >>>
> >>>>>> +/*
> >>>>>> + * OPAL uses the priority 7 EQ to automatically escalate interrup=
ts
> >>>>>> + * for all other queues (DD2.X POWER9). So only priorities [0..6]=
 are
> >>>>>> + * available for the guest.
> >>>>>
> >>>>> Referencing OPAL behaviour doesn't really make sense in the context=
 of
> >>>>> PAPR. =20
> >>>>
> >>>> It's an OPAL constraint which pHyp doesn't have. So its a QEMU/KVM=
=20
> >>>> constraint also.
> >>>
> >>> Right, I realized that a few patches on.  Maybe rephrase this to
> >>>
> >>>    Linux hosts under OPAL reserve priority 7 for their own escalation
> >>>    interrupts.  So we only allow the guest to use priorities [0..6].
> >>
> >> OK.
> >>
> >>> The point here is that we're emphasizing that this is a design
> >>> decision to make the host implementation easier, rather than a
> >>> fundamental constraint.
> >>>
> >>>>> What I think you're getting at is that the PAPR spec only
> >>>>> allows a PAPR guest to use priorities 0..6 (or at least it will if =
the
> >>>>> XIVE updated spec ever gets published). =20
> >>>>
> >>>> It's not in the spec. the XIVE sPAPR spec should be frozen soon btw.=
=20
> >>>> =20
> >>>>> The fact that this allows the
> >>>>> host use 7 for escalations is a design rationale=20
> >>>>> but not really relevant to the guest device itself.=20
> >>>>
> >>>> The guest should be aware of which priorities are reserved for
> >>>> the hypervisor though.
> >>>>
> >>>>>> + */
> >>>>>> +bool spapr_xive_priority_is_valid(uint8_t priority)
> >>>>>> +{
> >>>>>> +    switch (priority) {
> >>>>>> +    case 0 ... 6:
> >>>>>> +        return true;
> >>>>>> +    case 7: /* OPAL escalation queue */
> >>>>>> +    default:
> >>>>>> +        return false;
> >>>>>> +    }
> >>>>>> +}
> >>>>>> +
> >>>>>> +/*
> >>>>>> + * The H_INT_GET_SOURCE_INFO hcall() is used to obtain the logical
> >>>>>> + * real address of the MMIO page through which the Event State Bu=
ffer
> >>>>>> + * entry associated with the value of the "lisn" parameter is man=
aged.
> >>>>>> + *
> >>>>>> + * Parameters:
> >>>>>> + * Input
> >>>>>> + * - "flags"
> >>>>>> + *       Bits 0-63 reserved
> >>>>>> + * - "lisn" is per "interrupts", "interrupt-map", or
> >>>>>> + *       "ibm,xive-lisn-ranges" properties, or as returned by the
> >>>>>> + *       ibm,query-interrupt-source-number RTAS call, or as retur=
ned
> >>>>>> + *       by the H_ALLOCATE_VAS_WINDOW hcall
> >>>>>
> >>>>> I've not heard of H_ALLOCATE_VAS_WINDOW.  Is that something we inte=
nd
> >>>>> to implement in kvm/qemu, or is it only of interest for PowerVM?
> >>>>
> >>>> The hcall is part of the PAPR NX Interfaces and it returns interrupt
> >>>> numbers. I don't know if any work has been done on the topic. =20
> >>>
> >>> What's a "PAPR NX"?
> >>
> >> A way for the PAPR guests to access the POWER coprocessors doing=20
> >> compression and encryption. I really don't know much about this.
> >=20
> > Ah, ok.
> >=20
> > [snip]
> >>>> I think not, but the specs are not very clear on that topic. I will
> >>>> ask for clarification and use a -1 for now. We can not do loads on
> >>>> the trigger page so it can not be used by the H_INT_ESB hcall.
> >>>>
> >>>>>
> >>>>>> +    args[3] =3D TARGET_PAGE_SIZE;
> >>>>>
> >>>>> That seems wrong. =20
> >>>>
> >>>> This is utterly wrong. it should be a power of 2 number ... I got
> >>>> it right under KVM though. I guess that ioremap() under Linux rounds=
=20
> >>>> up the size to the page size in use, so, that's why it didn't blow
> >>>> up under TCG.
> >>>>
> >>>>> TARGET_PAGE_SIZE is generally 4kiB, but won't these usually
> >>>>> actually be 64kiB?
> >>>>
> >>>> yes. So what should I use to get a PAGE_SHIFT instead ?=20
> >>>
> >>> Erm, that gets a bit tricky, since qemu in a sense doesn't know the
> >>> guest's page size.
> >>>
> >>> But.. don't you actually want the esb_shift here, not PAGE_SHIFT - it
> >>> could matter for the 2 page * 64kiB variant, yes?
> >>
> >> Yes. we just want the page_shift of the ESB page, whether it's one or
> >> two pages. The other registers inform the guest if there are one or=20
> >> two ESB page in use.=20
> >=20
> > Ok, still sounds like you should base it on esb_shift, just adjust for
> > the two page case.
>=20
> yes.
>=20
>=20
> >>>>>> +    }
> >>>>>> +
> >>>>>> +    switch (qsize) {
> >>>>>> +    case 12:
> >>>>>> +    case 16:
> >>>>>> +    case 21:
> >>>>>> +    case 24:
> >>>>>> +        end.w3 =3D ((uint64_t)qpage) & 0xffffffff;
> >>>>>
> >>>>> It just occurred to me that I haven't been looking for this across =
any
> >>>>> of these reviews.  Don't you need byteswaps when accessing these
> >>>>> in-memory structures?
> >>>>
> >>>> yes this is done when some event data is enqueued in the EQ.
> >>>
> >>> I'm not talking about the data in the EQ itself, but the fields in the
> >>> END (and the NVT).
> >>
> >> XIVE is all BE.
> >=20
> > Yes... the qemu host might not be, which is why you need byteswaps.
>=20
> ok. I understand.
>=20
> > I realized eventually you have the swaps in your pnv get/set
> > accessors. =20
>=20
> Yes. because skiboot is BE, like the XIVE structures.

skiboot's endiannness isn't really relevant, because we're modelling
below that level.

> > I don't like that at all for a couple of reasons:
> >=20
> > 1) Although the END structure is made up of word-sized fields because
> > that's convenient, the END really is made of a bunch of subfields of
> > different sizes.  Knowing that it wouldn't be unreasonable for people
> > to expect they can look into the XIVE by byte offsets;=20
>=20
> These structures should be accessed with GETFIELD and SETFIELD macros
> using the XIVE definitions in the xive_regs.h header file. I would want=
=20
> to keep that common with skiboot  for sure.

Right.  It might make sense to make some helper macros or inlines that
include both the GETFIELD/SETFIELD and the byteswap.

> Are you suggesting we should define each field of the XIVE structures=20
> with C attributes ? That would be very unfortunate.

Oh no, bitfields are a complete mess.

> > that will break
> > if you're working with a copy that has already been byte-swapped on
> > word-sized units.
>=20
> I am not sure I understand the last sentence.

I mean that GETFIELD/SETFIELD only work on values that are already
native endian, but using byte offsets would only work on values that
are still in BE.

> the code working with a copy would necessarily know that the structure=20
> has been byteswapped and use correct offsets for the expected endianess.=
=20
> no ? why would it break ? =20
>=20
> > 2) At different points in the code you're storing both BE and
> > native-endian data in the same struct.=20
>=20
> on sPAPR, it's all native (which is a violation I agree).

Don't do that.  Having the same structure be BE in some situations and
native endian in other situations is a sure path to madness.

> TIMA is BE.
>=20
> > That's both confusing to
> > someone reading the code (if they see that struct they don't know if
> > it's byteswapped already) and also means you can't use sparse
> > annotations to make sure you have it right.
>=20
> XIVE structures are architected to be BE. That's immutable.

Yes, absolutely.  So don't represent them in C structs that are in
native endian.  Ever, even temporarily.

> It's a not problem for skiboot which is BE. The PnvXIVE model for the=20
> QEMU PowerNV machine reads these VSTs (Virtual Structure Tables) from=20
> the guest RAM and byteswaps the structure before using it. I think
> that's fine. Isn't it ?

Byteswapping structures - rather than individual fields as you use
them - is almost always a bad idea.  It's insanely easy to lose track
of whether this particular instance of the structure is swapped yet or
not, and you can't use sparse (or whatever) to check it for you.

Stick to one endianness for a struct, and do the byteswaps when you
access the fields (using helpers if that's, well, helpful).

> It becomes a problem with the sPAPR model which is using the XIVE structu=
res=20
> in native endianess and not BE anymore. But the guest OS never manipulate=
s=20
> these structures, so under the hood, I think we are free to use them in=
=20
> native and keep the common definitions.

Free to in the sense that it can theoretically work, yes.  But there's
no upside (byteswaps are essentially free on POWER, and of trivial
cost compared to memory access basically everywhere).  The downside is
that having the same variables / structures have data in different
endianness in different situations makes it exceedingly easy to forget
which one you're dealing with right now and therefore forget some
swaps or put in extra ones.

> Except that the event data entries in the OS EQs are BE. So the only plac=
e=20
> where we convert is when an event data is enqueued.=20
>=20
> What would you put in place if you think this is a too strong violation=
=20
> of the architecture ? I am afraid of something too complex to manipulate
> to be honest. May be we can drop the map/unmap access methods only keep=
=20
> the very basic ones.

THe complexity of having extra swaps is almost always less than having
the complexity of having those swaps not be in a consistent place.
Especially if you use helpers (including the swaps) to access your
structure.

--=20
David Gibson			| I'll have my music baroque, and my code
david AT gibson.dropbear.id.au	| minimalist, thank you.  NOT _the_ _other_
				| _way_ _around_!
http://www.ozlabs.org/~dgibson

--phbq2bkSb+hZnunM
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEEdfRlhq5hpmzETofcbDjKyiDZs5IFAlwEiKMACgkQbDjKyiDZ
s5IXgBAAsrDzLTSakBZ9i7qOhsAJai2o6NXtZv/XO2tVK7t1KobAkNMKZ75ss/7G
pfIrWlEhjySzasmiahZHWN0Xt/murliV3H5X46qGF4yfFbKC/12atPcSzZ4Im/nn
NzYzyYIrpDyoBmLGdmfPst+nli+T9Drha8VfMuIG8HYRpAtbrHGkhlFFr0JK33wx
5PXtunW6OhZ1PBJm+pOaMqwZ3DKLoQMGVvsJt+vWbbnBUygZD+aMHLeFebtSGpHA
FIfP+rwktZyMDcI6oEe1dUvkh2lfaJEd+DJkto9c8JnW2wav+pjBLwXW22rk5bqN
/OIme1rzD3bjwrolb5WdkCPExypnyrDEwMJltYqa4scTSe35trMJSyuThtFgXd5o
o4jz9mnUnD+IX60opOJwBqvbTeoQnRy0z7IXYRrKS0eMerJyVAoLfyInHAX93haq
eNKWsbbt/sawdHCVeCljMak9Irr+r7oQ/ChH9LbLR4kfPjb3Oq+r5kGc7jP3plRT
WRrMxI1Yr8hwLyxZrYFnDMyzezOKXwvVluRpF/VTdSX/MriLxU3JGg8zswFy5Nhi
Z4cDfxzz5R+9dGgRyIR1IKWlW/CxyW/wkwtnhf+K/efp+M8l9PMww8LtasWw0MEl
M6As89yRQBBjMVsDDHCUpKIvQ0fmoFk/xmNMRIXI5OWSTbKTqXA=
=SHYg
-----END PGP SIGNATURE-----

--phbq2bkSb+hZnunM--

