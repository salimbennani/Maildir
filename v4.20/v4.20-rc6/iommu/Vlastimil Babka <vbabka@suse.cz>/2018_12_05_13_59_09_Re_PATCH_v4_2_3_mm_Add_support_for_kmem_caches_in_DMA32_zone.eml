Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 06 Dec 2018 08:53:29 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id A0AC15804C1;
	Wed,  5 Dec 2018 06:02:17 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 05 Dec 2018 06:02:16 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AUExbqxZt5fvjpZ4FjHSwhqr/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpcizZh7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTzFPDJ2y?=
 =?us-ascii?q?b4UPDOQPM+hXoIb/qFQSohW+HhGsCeH0xz9UhXL7x7E23/gvHAzE2gErAtIAsG?=
 =?us-ascii?q?7TrNXwLKodXuS1w7PTzTXfbvNW3Db96IzVeR08u/6DRrFwftDMwkQoCQPKlU+f?=
 =?us-ascii?q?ppfmPzyPzekNqHWb7/F+Wu61l2Emqhh8rz6yzckvkonEnpwZxkzA+Clj3Yo4K8?=
 =?us-ascii?q?O0RFRmbdOnDJdcrSCXOoluTs8/R2xluDw2xqAItJO7ZiQG1oorywLFZ/CZc4WF?=
 =?us-ascii?q?7RTuX/uLLzhinnJqYre/ig6y8Ue+zu38UdG50EhFriVbiNnArHMN2ALJ6siBVP?=
 =?us-ascii?q?R9+l2t2TGV1wDc8u1EIEY0mrTHK5M53LI8ip4evV7eEiL4hkn6lrKae0Y49uSy?=
 =?us-ascii?q?6unqYK3qppqGOI91jgH+PL4umsu6AekgNggOXm6b+fmz1bH6/k32Xq9Kjvsona?=
 =?us-ascii?q?ndqZzaIsoapqinDA9PyYsj9Rm/ACm80NgCnnkIMkhFeBSZgIjtIV3OJ+r4Dfin?=
 =?us-ascii?q?j1S2jDhr3+zGPqHmApjVKnjDkbThcqhn509T1Qo+1tRf55NSCrEcL/P/QE7xtN?=
 =?us-ascii?q?rEDhAnNwy42froCNJ41okGQ2KAHreZML/OsV+P/u8vI/ODZI4JuDnnLPgp/f7u?=
 =?us-ascii?q?jWIjll8bcqmkxp8XaHG+HvR7LESVe3vsgtEdEWgUugoyVvDliFqHUTRLfXa9Q7?=
 =?us-ascii?q?o85i0nCIKhFYrDRIetj6Kb0Ce4GZ1WYGZGCleXHHfsdoWEXeoMaS2ILs9glDwE?=
 =?us-ascii?q?SaauS4s72R6ysw/6zqJtLvDI9S0AqZLjyN916vXJmhEp9Tx0CMed33uXT25unG?=
 =?us-ascii?q?MFXDs23KF5oUxgxVaPy6l4g/pEFdNN4/NFSBs1NZnZz+ZiEdD9RhrBfsuVSFah?=
 =?us-ascii?q?WtimAis+TtQrz98KYkZyAdOijh/Y0iquAr8VkaGLBZMu/qLd2XjxO9hyy3Lc2K?=
 =?us-ascii?q?Y9iFkmR9NFNXe6ia5n6wjTG4nJnl2EmKmwa6QTwjTB9GeZwmqIp0FXTghwXaLB?=
 =?us-ascii?q?XXAcY0vWqc/05kfDT7+oFLQmPRFNyc+EKqtWdNLpiU9KS+vkONTbe2ixgXu/BQ?=
 =?us-ascii?q?6UxrOQa4rnY3gS0z/DCEcaiQwT/WyJNQ4lBii/pWLTFzhuFVPpY0Px/uhysnK7?=
 =?us-ascii?q?Tkkozw6Ua01tzaa6+hkQhfaEUfMcwqoEuDs9qzVzBFu9w9PWC9+Hpwp9fKVdYc?=
 =?us-ascii?q?kx4Etd2WLerQx9Op2gL6ZthlMFdwR3vkXu1wh4C4lakMgqqm8qwxR2Ka6CzFxB?=
 =?us-ascii?q?cDaY14jqOrLLMmny4Ayva6nO117E1NaZ5KgO5+o4qln5pw6pC1ct/G9h09lW1H?=
 =?us-ascii?q?uc+I7HDA4TUZL3T0Y2+AJ2p7DcYikh+YzU0WdgPrWzsj/Hw9gpHvcqyg68f9dD?=
 =?us-ascii?q?N6OJDA/zE9AAC8eyMuArmlipYQgCPOBd76M0O8Kmd/2b2K+kJupgnTSmjXhZ74?=
 =?us-ascii?q?B5yE6D6y18SuvQ1ZYf3/6YxheHVyv7jFq5qMD3mJxLaisIHmWizijoHohRabNo?=
 =?us-ascii?q?fYYKEGuhP9e4xtFjiJHzQX5Y81ijCkgC2M+ofxqSclP80RdR1UQRvXyohy+4wy?=
 =?us-ascii?q?ZonDEuq6qVxDbOzPj6dBobJm5LQ3FvjFftIYSuj9EWRlOobxUvlBa+4Ub6xq5b?=
 =?us-ascii?q?pLlwLmXJQEdIeTT2IH9mUqeqqrWCZMtP4osysSpLSOS8fUyaSrnlrhsYySzjBW?=
 =?us-ascii?q?hexDM8dz2woZX2hR96iGGcLHZ1snXZf9p9xRPe5NzaWP5Q0SAKRCh+iTnLGFe8?=
 =?us-ascii?q?O8Ol8smTl5fGquq+TX6uVoVPcSn3yoONrCu66ndtARGlnfCzm9vnHBM+0S/60d?=
 =?us-ascii?q?lqSCrJoAz9Yonty6S1L+ZnclN0C1/77spwApt+nZcohJEMxXgagY2Y/Xkdnmfy?=
 =?us-ascii?q?K9lb2b/+Y2ALRT4E2NPV5Anl2Et+LnOG3Y75V3Odwtd/aNm+eG8ZxiU978VSAq?=
 =?us-ascii?q?eO8LNEhTd1oka/rQ/JZPh9nzQdxuE05H8Une4JoxYtwTuHAr8JA0ZYJyPsmg+M?=
 =?us-ascii?q?79C/qqVXeWmufaKx1Ep4gdCuErWCrhtAV3b+f5coBTVw4dlnMFLQzH3z7ZnpeM?=
 =?us-ascii?q?XXbdIWrBGVkg3Pj+5IKJIqjfoKhDFqOWb8vX0j1u46ggZi3ZC8vIibNWpt+Li1?=
 =?us-ascii?q?DQJfNj3wf8kT4C3ijb5CnsaK2ICiBo5uFS8MXJvsUPKkCjYSten8OgaKET08rG?=
 =?us-ascii?q?qbGLXFEQ+e7kdms2zAE5SxO36LI3kZyM1oRAOBK0xHnAAUQDI6k4Y7Fg+wwczu?=
 =?us-ascii?q?blx56ioN5lLiqRtM1+FoNwT5UmjFvwelcTM0SJmZLBpL4QBO/UbVMcqC7u1tGy?=
 =?us-ascii?q?FU5IGurAuIKmaDfQRHEXkJWlCYB1DkJrSv5d7A8/WBBuqjNfTOZ6+CqfdZV/eO?=
 =?us-ascii?q?ypKiyY9m/zeKNsWSMXhuFfw72kxfXX9nH8TVgSkASysSlyjVdc6UuA+8+jFrrs?=
 =?us-ascii?q?C46PnrWBzg5YqMC7tRMNVj4RO2gb2EN+6fmil5MytY1ogXyH/Mybgf2kMSii50?=
 =?us-ascii?q?ezmsF7QAqTDCTKbKlqBLCB4bbjt5NNFU4KIkwglNJcnbh8vv2b5llfE1EUlKVF?=
 =?us-ascii?q?z7lsGtZMwHOGW9NFLBBEaWO7WKPzzLw8frYayiTb1clvlbtxq1uTyDCU/sIiyD?=
 =?us-ascii?q?lyX1VxCoKexMkCCbPBlEtI6haBpiFWjjQ8zgahCgNN93jDs2waA7h3/QNG4cNy?=
 =?us-ascii?q?R8fF1JrrGK8SxYhfB/EXRb7nV5NemEhzqZ7+7AJ5cWq/RrBCF0l+Nc4HsiyrpV?=
 =?us-ascii?q?7DtLRPp6mCbJqt5uolemkvSAyzZ9URpOrCpLi5yPvUl4JarZ8ZxACj74+0cr7G?=
 =?us-ascii?q?6XDx0R7/FiC9bvsrwYntTVlaTwIz5e29nU58wZBtXRbsWdPyxleSXoHDqcIAYM?=
 =?us-ascii?q?RjmtfTXAhkhZ1v2f/3aSqLAzsJ2qk50LHOx1TlswQ80eA195HdkDJN9dVzknmP?=
 =?us-ascii?q?bPksQB73m3hALMX8gctYKRBaHaOunmNDvM1eoMXBAP276taN1LboA=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BPAADD2Qdch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUwUBAQsBAYNqJ4N5lCeBYAglFJc4gXMsEwGHUiI2Bw0BAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQgNCQgpL0IBEAGBYiQBgmEBAQEBAgEBAiAECwFGBQEJAQEKDgYEAgIYDgICA?=
 =?us-ascii?q?1QGAQwGAgEBAYMcgXoIBAGkeHwziFCBWYELixMXgUA/gREnDIIxLogFglcCiyK?=
 =?us-ascii?q?VNAmRPAYYgVuIECuHGYkJkUIGggAzGggwgyeQXD8ygQUBAYVnhTYBAQ?=
X-IPAS-Result: =?us-ascii?q?A0BPAADD2Qdch0O0hNFkHAEBAQQBAQcEAQGBUwUBAQsBAYN?=
 =?us-ascii?q?qJ4N5lCeBYAglFJc4gXMsEwGHUiI2Bw0BAwEBAQEBAQIBEwEBAQgNCQgpL0IBE?=
 =?us-ascii?q?AGBYiQBgmEBAQEBAgEBAiAECwFGBQEJAQEKDgYEAgIYDgICA1QGAQwGAgEBAYM?=
 =?us-ascii?q?cgXoIBAGkeHwziFCBWYELixMXgUA/gREnDIIxLogFglcCiyKVNAmRPAYYgVuIE?=
 =?us-ascii?q?CuHGYkJkUIGggAzGggwgyeQXD8ygQUBAYVnhTYBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,317,1539673200"; 
   d="scan'208";a="65426498"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 05 Dec 2018 06:02:14 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727628AbeLEOCM (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 5 Dec 2018 09:02:12 -0500
Received: from mx2.suse.de ([195.135.220.15]:41920 "EHLO mx1.suse.de"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1727142AbeLEOCM (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 5 Dec 2018 09:02:12 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay1.suse.de (unknown [195.135.220.254])
        by mx1.suse.de (Postfix) with ESMTP id F1D0CAEF2;
        Wed,  5 Dec 2018 14:02:08 +0000 (UTC)
Subject: Re: [PATCH v4 2/3] mm: Add support for kmem caches in DMA32 zone
To: Nicolas Boichat <drinkcat@chromium.org>,
        Will Deacon <will.deacon@arm.com>
Cc: Robin Murphy <robin.murphy@arm.com>,
        Joerg Roedel <joro@8bytes.org>,
        Christoph Lameter <cl@linux.com>,
        Pekka Enberg <penberg@kernel.org>,
        David Rientjes <rientjes@google.com>,
        Joonsoo Kim <iamjoonsoo.kim@lge.com>,
        Andrew Morton <akpm@linux-foundation.org>,
        Michal Hocko <mhocko@suse.com>,
        Mel Gorman <mgorman@techsingularity.net>,
        Levin Alexander <Alexander.Levin@microsoft.com>,
        Huaisheng Ye <yehs1@lenovo.com>,
        Mike Rapoport <rppt@linux.vnet.ibm.com>,
        linux-arm-kernel@lists.infradead.org,
        iommu@lists.linux-foundation.org, linux-kernel@vger.kernel.org,
        linux-mm@kvack.org, Yong Wu <yong.wu@mediatek.com>,
        Matthias Brugger <matthias.bgg@gmail.com>,
        Tomasz Figa <tfiga@google.com>, yingjoe.chen@mediatek.com,
        hch@infradead.org, Matthew Wilcox <willy@infradead.org>
References: <20181205054828.183476-1-drinkcat@chromium.org>
 <20181205054828.183476-3-drinkcat@chromium.org>
From: Vlastimil Babka <vbabka@suse.cz>
Openpgp: preference=signencrypt
Autocrypt: addr=vbabka@suse.cz; prefer-encrypt=mutual; keydata=
 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
 cqmP8roqufIAj+Ohhzs=
Message-ID: <5eddd264-5527-a98e-fc8b-31ea89f474db@suse.cz>
Date: Wed, 5 Dec 2018 14:59:09 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.3.2
MIME-Version: 1.0
In-Reply-To: <20181205054828.183476-3-drinkcat@chromium.org>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 12/5/18 6:48 AM, Nicolas Boichat wrote:
> In some cases (e.g. IOMMU ARMv7s page allocator), we need to allocate
> data structures smaller than a page with GFP_DMA32 flag.
> 
> This change makes it possible to create a custom cache in DMA32 zone
> using kmem_cache_create, then allocate memory using kmem_cache_alloc.
> 
> We do not create a DMA32 kmalloc cache array, as there are currently
> no users of kmalloc(..., GFP_DMA32). The new test in check_slab_flags
> ensures that such calls still fail (as they do before this change).
> 
> Fixes: ad67f5a6545f ("arm64: replace ZONE_DMA with ZONE_DMA32")

Same as my comment for 1/3.

> Signed-off-by: Nicolas Boichat <drinkcat@chromium.org>

In general,
Acked-by: Vlastimil Babka <vbabka@suse.cz>

Some comments below:

> ---
> 
> Changes since v2:
>  - Clarified commit message
>  - Add entry in sysfs-kernel-slab to document the new sysfs file
> 
> (v3 used the page_frag approach)
> 
> Documentation/ABI/testing/sysfs-kernel-slab |  9 +++++++++
>  include/linux/slab.h                        |  2 ++
>  mm/internal.h                               |  8 ++++++--
>  mm/slab.c                                   |  4 +++-
>  mm/slab.h                                   |  3 ++-
>  mm/slab_common.c                            |  2 +-
>  mm/slub.c                                   | 18 +++++++++++++++++-
>  7 files changed, 40 insertions(+), 6 deletions(-)
> 
> diff --git a/Documentation/ABI/testing/sysfs-kernel-slab b/Documentation/ABI/testing/sysfs-kernel-slab
> index 29601d93a1c2ea..d742c6cfdffbe9 100644
> --- a/Documentation/ABI/testing/sysfs-kernel-slab
> +++ b/Documentation/ABI/testing/sysfs-kernel-slab
> @@ -106,6 +106,15 @@ Description:
>  		are from ZONE_DMA.
>  		Available when CONFIG_ZONE_DMA is enabled.
>  
> +What:		/sys/kernel/slab/cache/cache_dma32
> +Date:		December 2018
> +KernelVersion:	4.21
> +Contact:	Nicolas Boichat <drinkcat@chromium.org>
> +Description:
> +		The cache_dma32 file is read-only and specifies whether objects
> +		are from ZONE_DMA32.
> +		Available when CONFIG_ZONE_DMA32 is enabled.

I don't have a strong opinion. It's a new file, yeah, but consistent
with already existing ones. I'd leave the decision with SL*B maintainers.

>  What:		/sys/kernel/slab/cache/cpu_slabs
>  Date:		May 2007
>  KernelVersion:	2.6.22
> diff --git a/include/linux/slab.h b/include/linux/slab.h
> index 11b45f7ae4057c..9449b19c5f107a 100644
> --- a/include/linux/slab.h
> +++ b/include/linux/slab.h
> @@ -32,6 +32,8 @@
>  #define SLAB_HWCACHE_ALIGN	((slab_flags_t __force)0x00002000U)
>  /* Use GFP_DMA memory */
>  #define SLAB_CACHE_DMA		((slab_flags_t __force)0x00004000U)
> +/* Use GFP_DMA32 memory */
> +#define SLAB_CACHE_DMA32	((slab_flags_t __force)0x00008000U)
>  /* DEBUG: Store the last owner for bug hunting */
>  #define SLAB_STORE_USER		((slab_flags_t __force)0x00010000U)
>  /* Panic if kmem_cache_create() fails */
> diff --git a/mm/internal.h b/mm/internal.h
> index a2ee82a0cd44ae..fd244ad716eaf8 100644
> --- a/mm/internal.h
> +++ b/mm/internal.h
> @@ -14,6 +14,7 @@
>  #include <linux/fs.h>
>  #include <linux/mm.h>
>  #include <linux/pagemap.h>
> +#include <linux/slab.h>
>  #include <linux/tracepoint-defs.h>
>  
>  /*
> @@ -34,9 +35,12 @@
>  #define GFP_CONSTRAINT_MASK (__GFP_HARDWALL|__GFP_THISNODE)
>  
>  /* Check for flags that must not be used with a slab allocator */
> -static inline gfp_t check_slab_flags(gfp_t flags)
> +static inline gfp_t check_slab_flags(gfp_t flags, slab_flags_t slab_flags)
>  {
> -	gfp_t bug_mask = __GFP_DMA32 | __GFP_HIGHMEM | ~__GFP_BITS_MASK;
> +	gfp_t bug_mask = __GFP_HIGHMEM | ~__GFP_BITS_MASK;
> +
> +	if (!IS_ENABLED(CONFIG_ZONE_DMA32) || !(slab_flags & SLAB_CACHE_DMA32))
> +		bug_mask |= __GFP_DMA32;

I'll point out that this is not even strictly needed AFAICS, as only
flags passed to kmem_cache_alloc() are checked - the cache->allocflags
derived from SLAB_CACHE_DMA32 are appended only after check_slab_flags()
(in both SLAB and SLUB AFAICS). And for a cache created with
SLAB_CACHE_DMA32, the caller of kmem_cache_alloc() doesn't need to also
include __GFP_DMA32, the allocation will be from ZONE_DMA32 regardless.
So it would be fine even unchanged. The check would anyway need some
more love to catch the same with __GFP_DMA to be consistent and cover
all corner cases.

>  
>  	if (unlikely(flags & bug_mask)) {
>  		gfp_t invalid_mask = flags & bug_mask;
