Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 08:50:49 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 4C13C5804F9
	for <like.xu@linux.intel.com>; Thu,  6 Dec 2018 09:08:58 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 06 Dec 2018 09:08:58 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AHNv1jxFDPewqyujIUR4/z51GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ7ypM2wAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VDK/5KlpVRDokj?=
 =?us-ascii?q?8KOT4n/m/ZicJ+i6BUoByuqBJw3oDUeIOYOvhxc6/Ac94WWXROXt1KWiBdAY6x?=
 =?us-ascii?q?dZcDAvAdMepEqYT2ulsArQG5BQmpHO7gxT5Ihnnq0qIk1eQgEAbG1xEnEd0Uvn?=
 =?us-ascii?q?TUotT1NKAUUe+r0aLFyivDY+lT2Tjn5ojIfBEhofaKXb1uasfRxkwvGBnEjlWU?=
 =?us-ascii?q?s4DqIzSV1uEUvmWd8uFuVvqvhnY5pw1toTWj3NoghpTKi44P1FzJ+yV0zJwoKd?=
 =?us-ascii?q?C6UEJ3fNCpHIZKuy2HKod7TdkuTmFrtSogybALuJi2dzUQxps93R7QcfmHfpCI?=
 =?us-ascii?q?4h39UOaRJi91hHZkeLKkmxay6lKsyuL6VsmpylpKqTBFktbUunAM0Rzc9NSHR+?=
 =?us-ascii?q?Nj8ku92juDzR3f5vxHLEwui6bWJZ4szqQtmpcRqUjDGzX5mETyjK+YbEUk/e2o?=
 =?us-ascii?q?5vz+Yrr4o5+cKpZ4hRzgPaQwhMO/Bf00PRMJX2iG/+SzyKPs/Vb+TLVOj/02kb?=
 =?us-ascii?q?fWvIrVJMQGvqO5Bw5V0oA+6xewFTum0dIYnWUZI1JBYh6Ik4/pO1TVLfD+Cve/?=
 =?us-ascii?q?hVuskDF2x/zcOb3hGJrNImDZkLj9ZbZ991JcyA0rwNBb5pJUCa8OLOj8W0/sr9?=
 =?us-ascii?q?HYCh45Mwqpw+foEtl914UeWX6RDa+dKq/drViI5ud8a9SKf5If7TbhN+A+tbmp?=
 =?us-ascii?q?iX4ihURbe66v0p0KLneiEbNjKkSdZHPqxdAZDWYNuBF5VeHvlRiOXCBeYyWPWb?=
 =?us-ascii?q?kh7GQ+AYOiEYCRX42onfmN0Tm2GthMa3lbB0uQOXHvcYqCRrELci3FOdJrkDEP?=
 =?us-ascii?q?Se28TZQ83wqlrg7wxulbKb/N9ygF8J7uytVxz+vUkx406HpzFcvO/XuKSjRKn2?=
 =?us-ascii?q?UDSjkk2+haqEJzy1CF3OAsnbpdHNJd5vRPXy81MJfdy6pxDNWkCVGJRcuAVFvz?=
 =?us-ascii?q?GobuOjo2VN9km9I=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0B9BQATVwlcmBHrdtBjHAECHwQBBgGBT?=
 =?us-ascii?q?QKBL4JijHKLMIswiTKEeYFxFAEBGBSHVyI0CQ0BAwEBAQEBAQIBEwEBAQEBCAs?=
 =?us-ascii?q?LBhsOIwyCNgUCAxgJglwDAwECJAsBDQEFCgwdAQIBAgECBgEBBRAzCAMBHQIRA?=
 =?us-ascii?q?QUBHBkFgxyBaQEDFQEEmkA8jAkWBQEXgncFgQGBQ4F1ChknDV2BNwIGEodegxO?=
 =?us-ascii?q?BHIFXP4ERhWmCd4UOAok1i1CLLC4HAoZEh1SDIwsYgVyIBodULIlmhHaJXQIEA?=
 =?us-ascii?q?gQFAgUPIYElgg1NI4EBgjuGCIpUcYEEAzuICIF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0B9BQATVwlcmBHrdtBjHAECHwQBBgGBTQKBL4JijHKLMIs?=
 =?us-ascii?q?wiTKEeYFxFAEBGBSHVyI0CQ0BAwEBAQEBAQIBEwEBAQEBCAsLBhsOIwyCNgUCA?=
 =?us-ascii?q?xgJglwDAwECJAsBDQEFCgwdAQIBAgECBgEBBRAzCAMBHQIRAQUBHBkFgxyBaQE?=
 =?us-ascii?q?DFQEEmkA8jAkWBQEXgncFgQGBQ4F1ChknDV2BNwIGEodegxOBHIFXP4ERhWmCd?=
 =?us-ascii?q?4UOAok1i1CLLC4HAoZEh1SDIwsYgVyIBodULIlmhHaJXQIEAgQFAgUPIYElgg1?=
 =?us-ascii?q?NI4EBgjuGCIpUcYEEAzuICIF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,323,1539673200"; 
   d="scan'208";a="55219413"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 06 Dec 2018 09:08:57 -0800
Received: from localhost ([::1]:42150 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gUx8y-0000h4-KP
	for like.xu@linux.intel.com; Thu, 06 Dec 2018 12:08:56 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:52329)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <v.maffione@gmail.com>) id 1gUx1v-0003mc-C9
	for qemu-devel@nongnu.org; Thu, 06 Dec 2018 12:01:43 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <v.maffione@gmail.com>) id 1gUx1e-0006t6-ST
	for qemu-devel@nongnu.org; Thu, 06 Dec 2018 12:01:35 -0500
Received: from mail-wr1-x443.google.com ([2a00:1450:4864:20::443]:34208)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <v.maffione@gmail.com>)
	id 1gUx1e-0006kp-99
	for qemu-devel@nongnu.org; Thu, 06 Dec 2018 12:01:22 -0500
Received: by mail-wr1-x443.google.com with SMTP id j2so1243119wrw.1
	for <qemu-devel@nongnu.org>; Thu, 06 Dec 2018 09:01:12 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
	h=from:to:cc:subject:date:message-id:in-reply-to:references
	:mime-version:content-transfer-encoding;
	bh=iUAg6dfrLALQcG1YgGKEexk7hL/v84hmTmLvr6abT14=;
	b=pZVPGIvsqGb+m6U/u0ubq0peSKp4DW0Hgg8vUt5p+mkkfvctRamudbUayPSsSeK0S0
	Gi0mfEWrAxtYKyl/VrPk5U7Deycy0NuFpwwatlc4nqYErcCt0bWwx5N9SxeUrJh5oLpa
	SO3/CrdECyeEdTK2Rk79wzcHERS4ETrWTtCFaZp9cpL/arT4SApG3Lu+/8BEfgytUtZS
	6UPp3UiynmuipOfFe7d9O7Gmf/KV+yZynnptO7w1OwwIXle/QGlktZE4fSlfldjggvml
	iHHe6muUp2og+28Oia0HRxGuYhG4xqiOTtadNsuy+KEU6Z+JlbstI+8S0cT5RUZGEXKo
	zgTA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references:mime-version:content-transfer-encoding;
	bh=iUAg6dfrLALQcG1YgGKEexk7hL/v84hmTmLvr6abT14=;
	b=jRUkiLvagqMagcy5p7zAxih15eFowi8lWo5vvz54kwUQMMp5optxRQlJ/X6Z196WN7
	/jg/0StwJ2/4sc8xmo518EF6B9l/g2VKUDLUV3fIkuL/3VXBnLEooTjoy4ZdJXeJDKw0
	n1F8kUIG4S/quK5I31j1ej+4v2N3ydDQPKrI5vkqwzPpaV8QtZJDKWV1JsSNFExQeVAM
	67qfHu09+3NfKP+Zt/paNhcV3wzp7KdmNXiF2mVVJ+QPB4KJYgaM4Ttj+wT2Lyd5XWRi
	+JENsL/V6TI+5kHQYrhDyGjE2+HHle82eR21UpE0HzygQUF4FH7GemvYmXAp1Q1oK8+H
	lBaw==
X-Gm-Message-State: AA+aEWaCo8wwlosDhUGip9adsT7kmZcHh3/utYMVZQzbJj77UVjzNSZ/
	NcqONPvhSwCSsOae9T8XWZjxoYWSiVE=
X-Google-Smtp-Source: AFSGD/XYSgEGimH4SjDLyuswwpiYDeR0VqzCaTnaUcm9O4bpIYqqyiJDkahdq1b3pGpD13uA/2d1vQ==
X-Received: by 2002:a5d:454f:: with SMTP id p15mr27719537wrr.39.1544115670435; 
	Thu, 06 Dec 2018 09:01:10 -0800 (PST)
Received: from localhost.localdomain (prova.iet.unipi.it. [131.114.58.86])
	by smtp.gmail.com with ESMTPSA id d4sm467556wrp.89.2018.12.06.09.01.09
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Thu, 06 Dec 2018 09:01:09 -0800 (PST)
From: Vincenzo Maffione <v.maffione@gmail.com>
To: qemu-devel@nongnu.org
Date: Thu,  6 Dec 2018 17:59:07 +0100
Message-Id: <20181206165907.23465-4-v.maffione@gmail.com>
X-Mailer: git-send-email 2.19.2
In-Reply-To: <20181206165907.23465-1-v.maffione@gmail.com>
References: <20181206165907.23465-1-v.maffione@gmail.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2a00:1450:4864:20::443
Subject: [Qemu-devel] [PATCH v1 3/3] net: netmap: improve
 netmap_receive_iov()
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: g.lettieri@iet.unipi.it, jasowang@redhat.com,
	Vincenzo Maffione <v.maffione@gmail.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Changes:
  - Save CPU cycles by computing the return value while scanning the
    input iovec, rather than calling iov_size() at the end.
  - Remove check for s->tx != NULL, because it cannot happen.
  - Cache ring->tail in a local variable and use it to check for
    space in the TX ring. The use of nm_ring_empty() was invalid,
    because nobody is updating ring->cur and ring->head at that point.
  - In case we run out of netmap slots in the middle of a packet,
    move the wake-up point by advancing ring->cur, but do not
    expose the incomplete packet (i.e., by updating also ring->head).

Signed-off-by: Vincenzo Maffione <v.maffione@gmail.com>
---
 net/netmap.c | 29 +++++++++++++++++------------
 1 file changed, 17 insertions(+), 12 deletions(-)

diff --git a/net/netmap.c b/net/netmap.c
index 852106af29..0cc8f545c5 100644
--- a/net/netmap.c
+++ b/net/netmap.c
@@ -159,21 +159,22 @@ static ssize_t netmap_receive_iov(NetClientState *nc,
 {
     NetmapState *s = DO_UPCAST(NetmapState, nc, nc);
     struct netmap_ring *ring = s->tx;
+    unsigned int tail = ring->tail;
+    ssize_t totlen = 0;
     uint32_t last;
     uint32_t idx;
     uint8_t *dst;
     int j;
     uint32_t i;
 
-    if (unlikely(!ring)) {
-        /* Drop the packet. */
-        return iov_size(iov, iovcnt);
-    }
-
-    last = i = ring->cur;
+    last = i = ring->head;
 
     if (nm_ring_space(ring) < iovcnt) {
-        /* Not enough netmap slots. */
+        /* Not enough netmap slots. Tell the kernel that we have seen the new
+         * available slots (so that it notifies us again when it has more
+         * ones), but without publishing any new slots to be processed
+         * (e.g., we don't advance ring->head). */
+        ring->cur = tail;
         netmap_write_poll(s, true);
         return 0;
     }
@@ -183,14 +184,17 @@ static ssize_t netmap_receive_iov(NetClientState *nc,
         int offset = 0;
         int nm_frag_size;
 
+        totlen += iov_frag_size;
+
         /* Split each iovec fragment over more netmap slots, if
            necessary. */
         while (iov_frag_size) {
             nm_frag_size = MIN(iov_frag_size, ring->nr_buf_size);
 
-            if (unlikely(nm_ring_empty(ring))) {
-                /* We run out of netmap slots while splitting the
+            if (unlikely(i == tail)) {
+                /* We ran out of netmap slots while splitting the
                    iovec fragments. */
+                ring->cur = tail;
                 netmap_write_poll(s, true);
                 return 0;
             }
@@ -212,12 +216,13 @@ static ssize_t netmap_receive_iov(NetClientState *nc,
     /* The last slot must not have NS_MOREFRAG set. */
     ring->slot[last].flags &= ~NS_MOREFRAG;
 
-    /* Now update ring->cur and ring->head. */
-    ring->cur = ring->head = i;
+    /* Now update ring->head and ring->cur to publish the new slots and
+     * the new wakeup point. */
+    ring->head = ring->cur = i;
 
     ioctl(s->nmd->fd, NIOCTXSYNC, NULL);
 
-    return iov_size(iov, iovcnt);
+    return totlen;
 }
 
 static ssize_t netmap_receive(NetClientState *nc,
-- 
2.19.2


