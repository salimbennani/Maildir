Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 06 Dec 2018 09:01:16 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 80C245804C1;
	Wed,  5 Dec 2018 16:38:31 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 05 Dec 2018 16:38:31 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AdZp7lxIV/kPJz0ohidmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULP37rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZXchfSixPDJ2y?=
 =?us-ascii?q?YYQTCOQOMulWr5Llp1YMtha+GQuhCfnzxjJSmnP736s32PkhHwHc2wwgGsoDvn?=
 =?us-ascii?q?DOo9XwKqgSSv2+wbTPzTXfc/NW3jL96IzWfREhvPqBWrZ+ftDUyUYxDAPJlEid?=
 =?us-ascii?q?qYv5PzOJ0eQNtmyb4PRgVO+0iWAosQdxoiOxyccqkIfGnJgVykzC9Spn2oY1Pt?=
 =?us-ascii?q?24SE9jYdK+DJRQsCSaOpJwT8g/TW9ovyM6xacHuZ69ZCUKy4ooxwTZa/OZd4iE?=
 =?us-ascii?q?+BXjVPyeITp+mXlre6q/ig6s/US8zuDwTNS43VhUoiZfj9XBtWwB2wbS58WFUv?=
 =?us-ascii?q?dx4Fut1SiV2wzN9O1IPFo4mbfZJpMv2LI8iJoevVrFEyTrgkv5lrWWeV8h+uWw?=
 =?us-ascii?q?6+TofLHmppiEOo9qhQHxLL4ulta8AesmKAgOWXaU+eCm2L3k5035T61Gjvwwkq?=
 =?us-ascii?q?bHrJDXPdoXqrK9DgNPz4ou5QizAy273NkbgXULNlNIdRCfg4jsIV7OIfT4Dfml?=
 =?us-ascii?q?g1SrlTdm3/TGPrznApXQIXnPibThcqhn605a1gUzyclT55VaC7EHPv3zQFT8tM?=
 =?us-ascii?q?LXDhAnKQy42eXnB8tn1oMYR22PBrWVMKTIsV+H/u4vOfWDZJcJuDbhLPgo//ru?=
 =?us-ascii?q?jX46mVADZ6Wo0oYXZWu8HvRnJUWZfHXtjs0AEWcMogoxUujqhEeeXj5UYna4R7?=
 =?us-ascii?q?g86S0jCIK6EYfDQZiggLyb0ye6Ap1ZfGdGBkqMEXf1bYqEXfgMZTmWIs9glDwE?=
 =?us-ascii?q?SLegR5Ug1RGoqA/11b5nIvDI9S0fsJLpzMJ16PHLlREu6Tx0CNyQ02OKT25qhG?=
 =?us-ascii?q?8IRDg23KZ5oUx60VqD1al4g/pFFd1c/f9JUwE6NYLCwOx+Edz9RgXBftKRQla8?=
 =?us-ascii?q?XtqmGS0xTs42w9IWeUl9ANWijhfA3yawGb8ajb6LCYcw8qLd2XjxOsl8x2zH1K?=
 =?us-ascii?q?knk1kpXM9POXe6ia548gjZH5TJnFmBl6a2aaQc2zbA9GSZwmqIpk1YVA9wXr/D?=
 =?us-ascii?q?XXAQfUbWqdX55kXfT76hE7gnMw1BydKcJatOcNHmkVJGRPL7MtTEf22xg3uwBQ?=
 =?us-ascii?q?qPxr6UcYXlYXsd0zvHBEgEiQ8T+22GOhY4Biump2LeDzluFVb0bkPo8Ol+rm67?=
 =?us-ascii?q?T0AuwwGLaU1hy6S6+hoPifOATPMT26oOuD09pDVsAFa9w9XWBsKdqAV7YqVTf8?=
 =?us-ascii?q?kx4Fdd2mLfrAxyIJqgIrtmhl4fdQR3okzv2w92CoVGjcglsncqwBBuJqKf1VNL?=
 =?us-ascii?q?bymY0ozoOr3LNmny+wiia7LX2lHb19aW5qcP6fQip1X/pg2pEVAi83Fm09lT3H?=
 =?us-ascii?q?uR/ZHKDAsUUZLsXUc77Rl6p7fGYiYj44PYz2FjMa6xsjXawdImGPMlygq8f9dY?=
 =?us-ascii?q?KK6LDgvyHNMVBsewKO0mgUOmbg8ZM+9I8q40PMSmd+Wd1a6vPeZgmi+mjGtd7I?=
 =?us-ascii?q?B81EKM6zRzSurS05kZxPGY2xONVy3gg1e5rsD3hYdEaCkSH2qi0yTrGJRdZ6xy?=
 =?us-ascii?q?fYkRD2euLNa6xtF/h57rRn5Z+0SvB1IA2M+1ZxWSa0bx0hFX1UQSuXangze3zy?=
 =?us-ascii?q?RokzE1qaqSxDbOw+X+exUdIG5EWW5igU3qIYeqldAaXVGkYBQzmxuh+En12bJb?=
 =?us-ascii?q?pKN5L2TIRUdIfi72L3xtU6eqt7qCZdJP540ssSlNTOu8ZlWaQKbnoxQGyyPjA3?=
 =?us-ascii?q?dexDcjejCqu5X1hRx7hHiGLHZuqnrUYsVwxRbZ5NzBSv9dxDsGRC9kiTbJAliw?=
 =?us-ascii?q?JcWm/dKRl53bqOCxS3qhVoFPcSns1Y6AtjG05XdpAR28mPC/gMbnHhI50S/41t?=
 =?us-ascii?q?lqUzvHrBDnb4nv1qS6N/9nf0ZyCF/97cp6Bp9xko8qiJ4M3ngag42f/WAbnmfr?=
 =?us-ascii?q?LdVbxaX+YWINRDERxN7Z+grl2ExlLn+Sw4L5V3OdwtZuZtWgY2MW3D494N5OCK?=
 =?us-ascii?q?uO8LNEmi51qEKirQ3Nefh9gisdyfw25X4Zme4JuRAhziWAAr8IG0lYMjfhlxCJ?=
 =?us-ascii?q?79C4saVWa3yjcbm21Epig9+hCKuOrR1bWHb8Yp0iBzN/7t1jMFLQ133+8oTkeN?=
 =?us-ascii?q?jTbd0JrBGVnQnPj/NJKJ0vjPoFnjRoOXjyvXA+z+47jBpu3Yy1vYSdKmVt+r65?=
 =?us-ascii?q?DQBcNjHve8wT/TTth75EnsmKx4CvAolhGjITUZv0SvKoFSgetPX9OAaIDT08sW?=
 =?us-ascii?q?ybGbvEEA+b6UdmqW/PEp+xO3GWInkZ0cttRB2HKENDhwAUWS0wnoQlGQCy2Mzh?=
 =?us-ascii?q?bEB56ygK6VHirRtMzv9oOwP7UmfCvwqobjY0SJ6CLBtZ9A1C5kHVMdCA4eJ3BS?=
 =?us-ascii?q?1X4pqhrAmVIGyBewtIFX0JWlCDB137PLmh/9zA/PaDBuakM/vCe7aOqfFdV/eV?=
 =?us-ascii?q?w5KgyJBm8i2INsWOOHliEvI61lBCXXB/B8TWhTEPRzYLmCLKas6RvA289TFvrs?=
 =?us-ascii?q?Cj7PTrXxri5IuIC7tPKNVv5gq5gaGZO+6LgyZ5LzlY24gIxX/JzrgfwVEThztv?=
 =?us-ascii?q?dzmrDbQPqyrNQLjMla9QCh4RczlzO9dQ76IgwglNPtbWitPr2b55jf41CFZFWU?=
 =?us-ascii?q?bimsGzYswKLH+yNEnaBEaQL7mGITzLw8fqYaKzU7FQjeNUtwGutjafCUPsIjOD?=
 =?us-ascii?q?lzzxXRC1Le5MlD2bPABZuIylaBltFHPsTMj4ZRy7KtN3iTw2zKYwhnPLM24cLD?=
 =?us-ascii?q?d9f1lMrr2W8SNXnPF/F3Zd4XpiKOmOgzyZ4PXAKpYKrftrBTx5l/5b4HQ/0bda?=
 =?us-ascii?q?8DtIS+B1mCTMqN5juFWmkuiJyjp6XxtCsDdLhISXvUp8PaXV7IVPWXHB/BgV92?=
 =?us-ascii?q?WfFwwKp8d5Ct3oo61RysLAlKT2KDdD9dLb5codB8jOJ8KBP3osKh7pGD/SDAsY?=
 =?us-ascii?q?Qj+nL2Dfh0pBkP6M8n2ZtIQ1qp/pmMlGdrgOfVo5DP4FQmFiBsAFJt8jVzA8lJ?=
 =?us-ascii?q?afjcgV9T+wqwTXSMxGv5fBEPWIDqOrYBKYi6RfLycP263xKYgIftnn3FZ8Y112?=
 =?us-ascii?q?h6zOGkzNTZVDpTBnYgYooUJLtn9kQTtg9Vjib1aP6XoeDraemQIqjQ56bPVloB?=
 =?us-ascii?q?Xl5losYHDNuDc3lU08iP3FiDaKfTjJJb2sW4xMECr1rw46NZatEFU9VhG7gUEx?=
 =?us-ascii?q?bGSMfLlWlbY1MDkz0AI=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BTAACSbghch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBVAQBAQsBgmkDfyeDepZHl0yBXxQYAxABh1MiNwYNAQMBAQEBAQECARMBAQE?=
 =?us-ascii?q?IDQkIKSMMgjYkAYJpAiAEGQEBESYBBQkCGAwCJgICA1oBF4McAYIAAQWlJnB8M?=
 =?us-ascii?q?4J2AQEFgkSEZQiBC4l3gRyBVz+BEYdxC4MbgleJERoKhkg1UYRoim0HAoIkhF+?=
 =?us-ascii?q?KV4FbiBUmhxgBiQmPdYEmNoF3TSODPAmCEgwXg0qFFIVOMQExgQUBAYgbgj4BA?=
 =?us-ascii?q?Q?=
X-IPAS-Result: =?us-ascii?q?A0BTAACSbghch0O0hNFkHAEBAQQBAQcEAQGBVAQBAQsBgmk?=
 =?us-ascii?q?DfyeDepZHl0yBXxQYAxABh1MiNwYNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkA?=
 =?us-ascii?q?YJpAiAEGQEBESYBBQkCGAwCJgICA1oBF4McAYIAAQWlJnB8M4J2AQEFgkSEZQi?=
 =?us-ascii?q?BC4l3gRyBVz+BEYdxC4MbgleJERoKhkg1UYRoim0HAoIkhF+KV4FbiBUmhxgBi?=
 =?us-ascii?q?QmPdYEmNoF3TSODPAmCEgwXg0qFFIVOMQExgQUBAYgbgj4BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,320,1539673200"; 
   d="scan'208";a="43760858"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 05 Dec 2018 16:38:29 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728663AbeLFAi1 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 5 Dec 2018 19:38:27 -0500
Received: from bedivere.hansenpartnership.com ([66.63.167.143]:44214 "EHLO
        bedivere.hansenpartnership.com" rhost-flags-OK-OK-OK-OK)
        by vger.kernel.org with ESMTP id S1727575AbeLFAi0 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 5 Dec 2018 19:38:26 -0500
Received: from localhost (localhost [127.0.0.1])
        by bedivere.hansenpartnership.com (Postfix) with ESMTP id 2ED1C8EE107;
        Wed,  5 Dec 2018 16:38:26 -0800 (PST)
Received: from bedivere.hansenpartnership.com ([127.0.0.1])
        by localhost (bedivere.hansenpartnership.com [127.0.0.1]) (amavisd-new, port 10024)
        with ESMTP id 5H61SOKnHVqI; Wed,  5 Dec 2018 16:38:26 -0800 (PST)
Received: from [192.168.100.106] (252.173.221.202.bf.2iij.net [202.221.173.252])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by bedivere.hansenpartnership.com (Postfix) with ESMTPSA id 18D928EE0D3;
        Wed,  5 Dec 2018 16:38:23 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple; d=hansenpartnership.com;
        s=20151216; t=1544056705;
        bh=AdPrAn4XR5FlSjvSIYSgj0P8SEuZHD0lpco+LKS2jHE=;
        h=Subject:From:To:Cc:Date:From;
        b=gD21tiMJydh4kwL7nQOXh6t7gDscugoyFmUrTLaYK3qfOOlgZexIlPNUYDRokyot6
         sc0uD3yb62w4dPy0Kn0yY+rsNaSDrtFWq0PyoYuqMpDhBOY1p8fLFrAFucAvjbSr59
         xU4Yr8fq2ckP8Cvo9IKcHwVPrX68o276PyNTTpWk=
Message-ID: <1544056700.3414.6.camel@HansenPartnership.com>
Subject: [GIT PULL] SCSI fixes for 4.20-rc5
From: James Bottomley <James.Bottomley@HansenPartnership.com>
To: Andrew Morton <akpm@linux-foundation.org>,
        Linus Torvalds <torvalds@linux-foundation.org>
Cc: linux-scsi <linux-scsi@vger.kernel.org>,
        linux-kernel <linux-kernel@vger.kernel.org>
Date: Thu, 06 Dec 2018 09:38:20 +0900
Content-Type: text/plain; charset="UTF-8"
X-Mailer: Evolution 3.26.6 
Mime-Version: 1.0
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Four obvious bug fixes.  The vmw_pscsi one is so old that it's amazing
no-one noticed before now.

The patch is available here:

git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi.git scsi-fixes

The short changelog is:

Cathy Avery (1):
      scsi: vmw_pscsi: Rearrange code to avoid multiple calls to free_irq during unload

Dexuan Cui (1):
      scsi: storvsc: Fix a race in sub-channel creation that can cause panic

Fred Herard (1):
      scsi: libiscsi: Fix NULL pointer dereference in iscsi_eh_session_reset

Martin Wilck (1):
      scsi: lpfc: fix block guard enablement on SLI3 adapters

And the diffstat:

 drivers/scsi/libiscsi.c       |  4 +--
 drivers/scsi/lpfc/lpfc_init.c |  6 ++++-
 drivers/scsi/lpfc/lpfc_sli.c  |  1 -
 drivers/scsi/storvsc_drv.c    | 61 +++++++++++++++++++++----------------------
 drivers/scsi/vmw_pvscsi.c     |  4 +--
 5 files changed, 39 insertions(+), 37 deletions(-)

With full diff below.

James

---

diff --git a/drivers/scsi/libiscsi.c b/drivers/scsi/libiscsi.c
index 93c66ebad907..f78d2e5c1471 100644
--- a/drivers/scsi/libiscsi.c
+++ b/drivers/scsi/libiscsi.c
@@ -2416,8 +2416,8 @@ int iscsi_eh_session_reset(struct scsi_cmnd *sc)
 failed:
 		ISCSI_DBG_EH(session,
 			     "failing session reset: Could not log back into "
-			     "%s, %s [age %d]\n", session->targetname,
-			     conn->persistent_address, session->age);
+			     "%s [age %d]\n", session->targetname,
+			     session->age);
 		spin_unlock_bh(&session->frwd_lock);
 		mutex_unlock(&session->eh_mutex);
 		return FAILED;
diff --git a/drivers/scsi/lpfc/lpfc_init.c b/drivers/scsi/lpfc/lpfc_init.c
index 20fa6785a0e2..68d62d55a3a5 100644
--- a/drivers/scsi/lpfc/lpfc_init.c
+++ b/drivers/scsi/lpfc/lpfc_init.c
@@ -167,7 +167,11 @@ lpfc_config_port_prep(struct lpfc_hba *phba)
 		       sizeof(phba->wwpn));
 	}
 
-	phba->sli3_options = 0x0;
+	/*
+	 * Clear all option bits except LPFC_SLI3_BG_ENABLED,
+	 * which was already set in lpfc_get_cfgparam()
+	 */
+	phba->sli3_options &= (uint32_t)LPFC_SLI3_BG_ENABLED;
 
 	/* Setup and issue mailbox READ REV command */
 	lpfc_read_rev(phba, pmb);
diff --git a/drivers/scsi/lpfc/lpfc_sli.c b/drivers/scsi/lpfc/lpfc_sli.c
index 783a1540cfbe..b9e5cd79931a 100644
--- a/drivers/scsi/lpfc/lpfc_sli.c
+++ b/drivers/scsi/lpfc/lpfc_sli.c
@@ -4965,7 +4965,6 @@ lpfc_sli_config_port(struct lpfc_hba *phba, int sli_mode)
 		phba->sli3_options &= ~(LPFC_SLI3_NPIV_ENABLED |
 					LPFC_SLI3_HBQ_ENABLED |
 					LPFC_SLI3_CRP_ENABLED |
-					LPFC_SLI3_BG_ENABLED |
 					LPFC_SLI3_DSS_ENABLED);
 		if (rc != MBX_SUCCESS) {
 			lpfc_printf_log(phba, KERN_ERR, LOG_INIT,
diff --git a/drivers/scsi/storvsc_drv.c b/drivers/scsi/storvsc_drv.c
index f03dc03a42c3..8f88348ebe42 100644
--- a/drivers/scsi/storvsc_drv.c
+++ b/drivers/scsi/storvsc_drv.c
@@ -446,7 +446,6 @@ struct storvsc_device {
 
 	bool	 destroy;
 	bool	 drain_notify;
-	bool	 open_sub_channel;
 	atomic_t num_outstanding_req;
 	struct Scsi_Host *host;
 
@@ -636,33 +635,38 @@ static inline struct storvsc_device *get_in_stor_device(
 static void handle_sc_creation(struct vmbus_channel *new_sc)
 {
 	struct hv_device *device = new_sc->primary_channel->device_obj;
+	struct device *dev = &device->device;
 	struct storvsc_device *stor_device;
 	struct vmstorage_channel_properties props;
+	int ret;
 
 	stor_device = get_out_stor_device(device);
 	if (!stor_device)
 		return;
 
-	if (stor_device->open_sub_channel == false)
-		return;
-
 	memset(&props, 0, sizeof(struct vmstorage_channel_properties));
 
-	vmbus_open(new_sc,
-		   storvsc_ringbuffer_size,
-		   storvsc_ringbuffer_size,
-		   (void *)&props,
-		   sizeof(struct vmstorage_channel_properties),
-		   storvsc_on_channel_callback, new_sc);
+	ret = vmbus_open(new_sc,
+			 storvsc_ringbuffer_size,
+			 storvsc_ringbuffer_size,
+			 (void *)&props,
+			 sizeof(struct vmstorage_channel_properties),
+			 storvsc_on_channel_callback, new_sc);
 
-	if (new_sc->state == CHANNEL_OPENED_STATE) {
-		stor_device->stor_chns[new_sc->target_cpu] = new_sc;
-		cpumask_set_cpu(new_sc->target_cpu, &stor_device->alloced_cpus);
+	/* In case vmbus_open() fails, we don't use the sub-channel. */
+	if (ret != 0) {
+		dev_err(dev, "Failed to open sub-channel: err=%d\n", ret);
+		return;
 	}
+
+	/* Add the sub-channel to the array of available channels. */
+	stor_device->stor_chns[new_sc->target_cpu] = new_sc;
+	cpumask_set_cpu(new_sc->target_cpu, &stor_device->alloced_cpus);
 }
 
 static void  handle_multichannel_storage(struct hv_device *device, int max_chns)
 {
+	struct device *dev = &device->device;
 	struct storvsc_device *stor_device;
 	int num_cpus = num_online_cpus();
 	int num_sc;
@@ -679,21 +683,11 @@ static void  handle_multichannel_storage(struct hv_device *device, int max_chns)
 	request = &stor_device->init_request;
 	vstor_packet = &request->vstor_packet;
 
-	stor_device->open_sub_channel = true;
 	/*
 	 * Establish a handler for dealing with subchannels.
 	 */
 	vmbus_set_sc_create_callback(device->channel, handle_sc_creation);
 
-	/*
-	 * Check to see if sub-channels have already been created. This
-	 * can happen when this driver is re-loaded after unloading.
-	 */
-
-	if (vmbus_are_subchannels_present(device->channel))
-		return;
-
-	stor_device->open_sub_channel = false;
 	/*
 	 * Request the host to create sub-channels.
 	 */
@@ -710,23 +704,29 @@ static void  handle_multichannel_storage(struct hv_device *device, int max_chns)
 			       VM_PKT_DATA_INBAND,
 			       VMBUS_DATA_PACKET_FLAG_COMPLETION_REQUESTED);
 
-	if (ret != 0)
+	if (ret != 0) {
+		dev_err(dev, "Failed to create sub-channel: err=%d\n", ret);
 		return;
+	}
 
 	t = wait_for_completion_timeout(&request->wait_event, 10*HZ);
-	if (t == 0)
+	if (t == 0) {
+		dev_err(dev, "Failed to create sub-channel: timed out\n");
 		return;
+	}
 
 	if (vstor_packet->operation != VSTOR_OPERATION_COMPLETE_IO ||
-	    vstor_packet->status != 0)
+	    vstor_packet->status != 0) {
+		dev_err(dev, "Failed to create sub-channel: op=%d, sts=%d\n",
+			vstor_packet->operation, vstor_packet->status);
 		return;
+	}
 
 	/*
-	 * Now that we created the sub-channels, invoke the check; this
-	 * may trigger the callback.
+	 * We need to do nothing here, because vmbus_process_offer()
+	 * invokes channel->sc_creation_callback, which will open and use
+	 * the sub-channel(s).
 	 */
-	stor_device->open_sub_channel = true;
-	vmbus_are_subchannels_present(device->channel);
 }
 
 static void cache_wwn(struct storvsc_device *stor_device,
@@ -1794,7 +1794,6 @@ static int storvsc_probe(struct hv_device *device,
 	}
 
 	stor_device->destroy = false;
-	stor_device->open_sub_channel = false;
 	init_waitqueue_head(&stor_device->waiting_to_drain);
 	stor_device->device = device;
 	stor_device->host = host;
diff --git a/drivers/scsi/vmw_pvscsi.c b/drivers/scsi/vmw_pvscsi.c
index 6e491023fdd8..0d6b2a88fc8e 100644
--- a/drivers/scsi/vmw_pvscsi.c
+++ b/drivers/scsi/vmw_pvscsi.c
@@ -1202,8 +1202,6 @@ static void pvscsi_shutdown_intr(struct pvscsi_adapter *adapter)
 
 static void pvscsi_release_resources(struct pvscsi_adapter *adapter)
 {
-	pvscsi_shutdown_intr(adapter);
-
 	if (adapter->workqueue)
 		destroy_workqueue(adapter->workqueue);
 
@@ -1534,6 +1532,7 @@ static int pvscsi_probe(struct pci_dev *pdev, const struct pci_device_id *id)
 out_reset_adapter:
 	ll_adapter_reset(adapter);
 out_release_resources:
+	pvscsi_shutdown_intr(adapter);
 	pvscsi_release_resources(adapter);
 	scsi_host_put(host);
 out_disable_device:
@@ -1542,6 +1541,7 @@ static int pvscsi_probe(struct pci_dev *pdev, const struct pci_device_id *id)
 	return error;
 
 out_release_resources_and_disable:
+	pvscsi_shutdown_intr(adapter);
 	pvscsi_release_resources(adapter);
 	goto out_disable_device;
 }
