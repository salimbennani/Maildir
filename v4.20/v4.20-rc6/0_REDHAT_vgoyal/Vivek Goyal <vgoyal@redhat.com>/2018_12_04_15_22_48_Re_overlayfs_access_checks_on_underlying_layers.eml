Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 05 Dec 2018 08:40:33 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 28FC3580375;
	Tue,  4 Dec 2018 07:22:56 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 04 Dec 2018 07:22:56 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Anf9+phZ1sFsWnZk+YN+6rUb/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpci+bB7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyJPDIOi?=
 =?us-ascii?q?YYUSDOQBM+lXoJXgqFQMoxS+HhGsCeH0xz9UmnP7x7E23/g7HA3Y2gErAtIAsG?=
 =?us-ascii?q?7TrNXwLKodXuG1zLfWwjXAcvhY2DD96YjSfRAlvPqBWqxwccXWyUgvDQzFik6d?=
 =?us-ascii?q?qZb7MDyI1uQCqXSb4/B8WuKojm4qsgd8qSWsyMc0koTFmJ4Zx1Te+Slkzos5O8?=
 =?us-ascii?q?e0RFN4bNK4CpddtiOXO5NoTs8+R2xkojs2x7MYtZKhYSQHy5oqywTBZ/GEdYWD?=
 =?us-ascii?q?/wjtW/yLIThigXJoYLK/iAi28Uin0uD8SMa030hQriZfkdnDqGoN1xrN5ciDUP?=
 =?us-ascii?q?d9+V2h2TmX2wDS7OFLP1w0mLLFJ5I9xrM8jIcfvErdEiPshUn7j7Oael8l9+Wq?=
 =?us-ascii?q?8+jnZ6/ppp6YN496kAH+NaEul9S7AeQ5NAgOQmea9f2/1LL95035RqtFjvkvnq?=
 =?us-ascii?q?nevpHaI9oUprSiDg9L3YYs9Qy/Ay2l0NsGh3kHKkxKeBadg4juIVHOL+j0De2j?=
 =?us-ascii?q?jFS0jDdr2/fGM6XlApXMLXjMjq3tfLlg60NHzAozzNZf549bC70bIfLzXFPxu8?=
 =?us-ascii?q?LcDhMjLwO0xOPnAs1n1owCQWKPHrOZMKTKvF+I/O0vIvWMa5USuDrnK/gl+uTh?=
 =?us-ascii?q?jXk2mVIGeamp3J0XaG23H/h8IkWZZ2bsjckFEWsQogU+S+nqgkWYUTFPf3ayQ7?=
 =?us-ascii?q?485jYjBYKkCofMWJqhgL+G3Ce9GJ1WYXtLClSNEXfuaoWFVO0AaCOUIs99jDME?=
 =?us-ascii?q?UaKtRJMm1RGrrAX60aZoLvLI+i0EspLuzMJ65/bTlRE19jx4Fd6d3HuPT2xvmm?=
 =?us-ascii?q?MIRjk23L1woEBny1eD17R4jOJcFdBJ+/xJVQI6P4bGz+NmE9DyRh7BftCRRVal?=
 =?us-ascii?q?WNqmBys9TtYww9AUZUZ9FM6vjhTC3yqsHr8UmKaHBJ0y8qLAwXfxI9xxxGrB1K?=
 =?us-ascii?q?kkl1MmWNdANXW6hq5j8AjeH5PGnF+Hl6m0b6gc3DTC9GGYzWWQukFUVwpwUabA?=
 =?us-ascii?q?XXAbfUbWqdX55kXfT76hE7gnMw1BydKcJatOcNHmkVJGRPL7MtTEf22xg3uwBQ?=
 =?us-ascii?q?qPxr6UcYXlYXsd0zvHBEgEiQ8T+22GOhY4Biq6p2LeDTpuFU/gYk/28Ol+rm+7?=
 =?us-ascii?q?QVEwzw2Qc0Jh0L+18AYPhfOAU/MTwq4EuCA5pjVoHVa92tXWC8aApwthZqlcfc?=
 =?us-ascii?q?kx4FBd1WLdtgx9OJOgIrtmhl4fdQR3okzv2w92CoVGjcglsncqwBBuJqKf1VNL?=
 =?us-ascii?q?bymY0ozoOr3LNmny+wiiZLTS2l7A39eZ5KcO5O4jpFX+oQ6mDEwi83Zg09lLyH?=
 =?us-ascii?q?ac4pTKDAwPUZP+SEo39h56p63EbSk5/Y/byXpsMaysuD/Yx90pHPclygqnf9pH?=
 =?us-ascii?q?MKKECRX+HNEAC8mvKOwlgV6pbh0fMeBW9a40Od6mdvSc1K6qOuZggCypjWBd7I?=
 =?us-ascii?q?9h1UKM8jJ2SvTU0JYd3/GYwgyHWi/mjFegrs/4g5pEaiwVHmalzyjrGpRRZqxr?=
 =?us-ascii?q?cYkXE2iuJ9C4yctkh57qXX5V71qjB1IA2M+0dhuedV393QtM1UsJpXyrgze3zz?=
 =?us-ascii?q?txkzsxtKqQwDTOw/j+dBoAImNKRGhigU3sIISulNAaQU6oYhMtlBuk40b62qda?=
 =?us-ascii?q?qL5+L2nVXUdHYSz2I3t+Xau3s7qIe9RP548wsSVLTOS8ZkiXSrznrBsA0CPjHG?=
 =?us-ascii?q?xeyCogdz6wuZX5nB16iGSDI3Z1t3fZfcBwxRHC5N3TX/JR3zwGRDVmhjnTHFSz?=
 =?us-ascii?q?I96p/dCMnZfZru++T36hVoFUcSTzzYKPriy76XdoAR2+mfC+gdnnEQk80S/m2N?=
 =?us-ascii?q?hmTyTIrBDgYob106S2K/5ofk5tBFXk8cp1Bpl+kpcshJEXwXUahY+a/XsdnWfz?=
 =?us-ascii?q?LNVUw6T+bHUWSD4Pwt7V5hXl2UJ5InKIwYL5SmuSws97a9amZWMW3zo379pWB6?=
 =?us-ascii?q?eM8LxEgSx1r0K9rQLQYvhyhC0RyPUw534Bn+EGphAtwT6DDbAIEklVJijslxWO?=
 =?us-ascii?q?79Cjo6Rbfmevcb6s1EVgmdCtFq2NogZZWHzhYJctATdw7tljMFLLyHDz9obkeN?=
 =?us-ascii?q?zKYdMSrBKUlQrAj/NOKJIwjfcKgStnOWTgvXwq0eI7jBpu3Y2ks4iDMWli4KW5?=
 =?us-ascii?q?AhtAPD3ve8wT4i3tjbpZnsuOxI+gBJJhGjEWXJfySfKoDSkftfDmNwaIDT09pW?=
 =?us-ascii?q?2XGbvZHQ+D9khmq2jDHIysN3GSPHMZ18ltRAGBJExDhwAZRDc6kYQ8Fg+038zt?=
 =?us-ascii?q?alt56ioS5l7lqRtM1+RoOAPkUmrEoAeoazE0SIWQLRZM7wFC4VvVPtKa7u5pAy?=
 =?us-ascii?q?5Y+ZihphSXKmOHfwRIEX0JWkucClHjObmu+MDA8/WCCeq4NffOerKOqepRV/qT?=
 =?us-ascii?q?wZKv041m/yuDN8mVP3liCeE71VRHXXxjB8vZnDAPQTQNly3Rd86buAu8+ipvo8?=
 =?us-ascii?q?C/7vvrWQHv5YiOC7dIMtVv4Re2gaidOO6KmSZ5Mi1V1pcNxX/O1bge00QeiyBo?=
 =?us-ascii?q?dzmxD7sAsTTBQ77Xmq9SFxQbcT98NNNU76Ig2QlAIdTUis7u2b5ikPE0C01JVV?=
 =?us-ascii?q?jgmsyyYcwKIme9NE7IBUqRNbSGIyHLzN/zYa+mVbJQi+BUvQWquTmHC0/jIiiD?=
 =?us-ascii?q?lz7xWhCzMOFMiTuXMwBEtI6hchZiF27jQcniah26Nt93kDI3zac1hnPMKW4TLz?=
 =?us-ascii?q?x8f1lRob2X6CNSmu9/FHBZ7np5MemEnD6U7unCJZYQtPtrAyJ0mPpb4XQ60bRV?=
 =?us-ascii?q?6i5ESedxmCvTqN5uvl6nnvOOyjphTBpBtDJLiJiXskVlPKWKvqVHDE3Y8QoN4G?=
 =?us-ascii?q?PYMBEDo99oG5W7oKxL4sTen6L0bjFZ+pTb+tVKVObOL8fSDns/PBmhNznFBQ9N?=
 =?us-ascii?q?GSCkMnDWg2RHnf2S/2HTpZ8//Mu/0KESQ6NWAQRmXsgRDV5oSZlbeM96?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AWAABbmwZch0O0hNFjGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBZYFbghEnjHGNPBSZKBQYEwGIESI4EgEDAQEBAQEBAgETAQE?=
 =?us-ascii?q?BCA0JCCkvgjYkAYJiAQIDAQIkEzIKAwYJAQEKDgoJJQMMBRgxEwWDHCkBgVgFp?=
 =?us-ascii?q?XIzijOMHheBQD+BEYMSiDaCJgKJHIIEhQ9Qj0oJkTYLGIFbiAA2hxWYd4FdgXY?=
 =?us-ascii?q?zGggbFYMngicXjjshAQExgQUBARyKRgEB?=
X-IPAS-Result: =?us-ascii?q?A0AWAABbmwZch0O0hNFjGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BZYFbghEnjHGNPBSZKBQYEwGIESI4EgEDAQEBAQEBAgETAQEBCA0JCCkvgjYkA?=
 =?us-ascii?q?YJiAQIDAQIkEzIKAwYJAQEKDgoJJQMMBRgxEwWDHCkBgVgFpXIzijOMHheBQD+?=
 =?us-ascii?q?BEYMSiDaCJgKJHIIEhQ9Qj0oJkTYLGIFbiAA2hxWYd4FdgXYzGggbFYMngicXj?=
 =?us-ascii?q?jshAQExgQUBARyKRgEB?=
X-IronPort-AV: E=Sophos;i="5.56,314,1539673200"; 
   d="scan'208";a="54851414"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 04 Dec 2018 07:22:54 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726853AbeLDPWu (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 4 Dec 2018 10:22:50 -0500
Received: from mx1.redhat.com ([209.132.183.28]:56710 "EHLO mx1.redhat.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726151AbeLDPWu (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 4 Dec 2018 10:22:50 -0500
Received: from smtp.corp.redhat.com (int-mx03.intmail.prod.int.phx2.redhat.com [10.5.11.13])
        (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
        (No client certificate requested)
        by mx1.redhat.com (Postfix) with ESMTPS id A96AD3084218;
        Tue,  4 Dec 2018 15:22:49 +0000 (UTC)
Received: from horse.redhat.com (unknown [10.18.25.234])
        by smtp.corp.redhat.com (Postfix) with ESMTP id 65CA1611D2;
        Tue,  4 Dec 2018 15:22:49 +0000 (UTC)
Received: by horse.redhat.com (Postfix, from userid 10451)
        id 00ABF2208FC; Tue,  4 Dec 2018 10:22:48 -0500 (EST)
Date: Tue, 4 Dec 2018 10:22:48 -0500
From: Vivek Goyal <vgoyal@redhat.com>
To: Stephen Smalley <sds@tycho.nsa.gov>
Cc: Miklos Szeredi <miklos@szeredi.hu>,
        Ondrej Mosnacek <omosnace@redhat.com>,
        "J. Bruce Fields" <bfields@fieldses.org>,
        Mark Salyzyn <salyzyn@android.com>,
        Paul Moore <paul@paul-moore.com>, linux-kernel@vger.kernel.org,
        overlayfs <linux-unionfs@vger.kernel.org>,
        linux-fsdevel@vger.kernel.org, selinux@vger.kernel.org,
        Daniel J Walsh <dwalsh@redhat.com>
Subject: Re: overlayfs access checks on underlying layers
Message-ID: <20181204152248.GB21509@redhat.com>
References: <CAJfpegtNhcWD0VWy6LPtoDtQBfPu4x5iFsB053UMCidj6oMsuw@mail.gmail.com>
 <26bce3be-49c2-cdd8-af03-1a78d0f268ae@tycho.nsa.gov>
 <CAJfpeguL9xOh9Eq8LOP=ddJ4YD6nbp2UY6e2AYDVoHeCLuVhZA@mail.gmail.com>
 <6b125e8e-413f-f8e6-c7ae-50f7235c8960@tycho.nsa.gov>
 <CAJfpegv6y56k1-Tewu-Pu3x1W75LL6qYB6Hb6=n+2BJoNfEigA@mail.gmail.com>
 <c993dba4-5129-7f04-2724-a82a1f1cafa3@tycho.nsa.gov>
 <f84bbe0b-f4c1-50e0-8c84-a6589154b3ae@tycho.nsa.gov>
 <CAJfpegtBDTMbmKd6eDxRmtSJjGN6CnpGK_QPNSsxjkOoeu=1pQ@mail.gmail.com>
 <4c20a261-5ce1-f0a2-8d40-c6032a023216@tycho.nsa.gov>
 <20181204151549.GA21509@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181204151549.GA21509@redhat.com>
User-Agent: Mutt/1.9.1 (2017-09-22)
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.13
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16 (mx1.redhat.com [10.5.110.40]); Tue, 04 Dec 2018 15:22:49 +0000 (UTC)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Tue, Dec 04, 2018 at 10:15:49AM -0500, Vivek Goyal wrote:
> On Tue, Dec 04, 2018 at 09:30:53AM -0500, Stephen Smalley wrote:
> > On 12/4/18 8:32 AM, Miklos Szeredi wrote:
> > > On Thu, Nov 29, 2018 at 10:16 PM Stephen Smalley <sds@tycho.nsa.gov> wrote:
> > > > 
> > > > On 11/29/18 4:03 PM, Stephen Smalley wrote:
> > > > > On 11/29/18 2:47 PM, Miklos Szeredi wrote:
> > > > > > On Thu, Nov 29, 2018 at 5:14 PM Stephen Smalley <sds@tycho.nsa.gov>
> > > > > > wrote:
> > > > > > 
> > > > > > > Possibly I misunderstood you, but I don't think we want to copy-up on
> > > > > > > permission denial, as that would still allow the mounter to read/write
> > > > > > > special files or execute regular files to which it would normally be
> > > > > > > denied access, because the copy would inherit the context specified by
> > > > > > > the mounter in the context mount case.  It still represents an
> > > > > > > escalation of privilege for the mounter.  In contrast, the copy-up on
> > > > > > > write behavior does not allow the mounter to do anything it could not do
> > > > > > > already (i.e. read from the lower, write to the upper).
> > > > > > 
> > > > > > Let's get this straight:  when file is copied up, it inherits label
> > > > > > from context=, not from label of lower file?
> > > > > 
> > > > > That's correct.  The overlay inodes are all assigned the label from the
> > > > > context= mount option, and so are any upper inodes created through the
> > > > > overlay.  At least that's my understanding of how it is supposed to
> > > > > work.  The original use case was for containers with the lower dir
> > > > > labeled with a context that is read-only to the container context and
> > > > > using a context that is writable by the container context for the
> > > > > context= mount.
> > > > > 
> > > > > > Next question: permission to change metadata is tied to permission to
> > > > > > open?  Is it possible that open is denied, but metadata can be
> > > > > > changed?
> > > > > 
> > > > > There is no metadata change occurring here. The overlay, upper, and
> > > > > lower inodes all keep their labels intact for their lifetime (both
> > > > > overlay and upper always have the context= label; upper has whatever its
> > > >                                                     ^^lower^^
> > > > 
> > > > > original label was), unless explicitly relabeled by some process.  And
> > > > > when viewed through the overlay, the file always has the label specified
> > > > > via context=, even before the copy-up.
> > > 
> > > Okay.
> > > 
> > > > > 
> > > > > > DAC model allows this: metadata change is tied to ownership, not mode
> > > > > > bits.   And different capability flag.
> > > > > > 
> > > > > > If the same is true for MAC, then the pre-v4.20-rc1 is already
> > > > > > susceptible to the privilege escalation you describe, right?
> > > > > 
> > > > > Actually, I guess there wouldn't be a privilege escalation if you
> > > > > checked the mounter's ability to create the new file upon copy-up, and
> > > > > checked the mounter's access to the upper inode label upon the
> > > > > subsequent read, write, or execute access.  Then we'd typically block
> > > > > the ability to create the device file and we'd block the ability to
> > > > > execute files with the label from context=.
> > > > > 
> > > > > But copy-up of special files seems undesirable for other reasons (e.g.
> > > > > requiring mounters to be allowed to create device nodes just to permit
> > > > > client's to read/write them, possible implications for nodev/noexec,
> > > > > implications for socket and fifo files).
> > > 
> > > I think you missed my point: opening a device file or executing an
> > > executable wouldn't normally require copy-up.   If
> > > 
> > >   -  permission is granted on overlay to task, and
> > >   -  permission is granted on lower layer to mounter,
> > > 
> > > then copy-up wouldn't be performed.
> > > 
> > > My proposed sequence would be
> > > 
> > > a) check task's creds against overlay inode, fail -> return fail, otherwise:
> > > b) check mounter's creds against lower inode, success -> return
> > > success, otherwise:
> > > c) copy up inode, fail -> return fail, otherwise
> > > d) check mounter's creds against upper inode, return result.
> > > 
> > > So, unlike write access to regular files, write access to special
> > > files don't necessarily result in copy-up.
> > > 
> > > You say this is an escalation of privilege, but I don't get it how.
> > > As DWalsh points out downthread, if mounter cannot create device
> > > files, then the copy-up will simply fail.  If mounter can create
> > > device files, then this is not an escalation of privilege for the
> > > mounter.
> > 
> > Yes, in that case there isn't an escalation of privilege for the mounter (I
> > acknowledged that above).  I'm still not sure copy-up of special files is a
> > good idea though:
> > 
> > - In the case of device files, there is the potential for mischief by the
> > client task in misusing the mounter's privileges to gain access to otherwise
> > unusable device node (nodev lower vs upper?),
> 
> I was thinking about it as well. But client can always bypass permissions
> of lower device inode by first removing device file and then by doing
> a mknod. And that will be equivalent of copy up. IOW, IIUC, we do not deny
> mknod to client and that always creates a way for it to write to device
> file (and it does not matter what are permissions on lower?)

Having said that, this still create little anomaly when mknod to client
is not allowed on context label. So a device file, which is on lower
and client can not open it for read/write on host, it can now be opened
for read/write because mounter will allow access. So why it is different
that regular copy up. Well, in regular copy up, we created a copy of
the original object and allowed writing to that object (cp --preserve=all)
model. But in case of device file, writes will go to same original
object. (And not a separate copy).

Thanks
Vivek
