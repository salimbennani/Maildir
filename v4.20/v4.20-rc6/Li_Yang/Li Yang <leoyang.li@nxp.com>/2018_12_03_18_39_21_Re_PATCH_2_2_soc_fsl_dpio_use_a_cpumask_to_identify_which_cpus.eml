Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 08:56:52 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga008.fm.intel.com (fmsmga008.fm.intel.com [10.253.24.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id EBFAB58014B;
	Mon,  3 Dec 2018 10:39:39 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga008-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 03 Dec 2018 10:39:39 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AjJbgkxXQf7bINCXI4Hufdb1mafvV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhCFvKdThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGoyz?=
 =?us-ascii?q?b4UNAOQBM+hWrJTzqUUSohulHQmhBvjiyiNUinLswaE2z/gtHAPA0Qc9H9wOqn?=
 =?us-ascii?q?PUrNDtOakUUOC+0avHwi/Fb/NZxDzw74zIfQ4mofCMR71wd8XRxVMrFwPElViQ?=
 =?us-ascii?q?r4PkPyuP2usRtGib6vNtWOSygGAkswF8uiajytsoh4XTm44YxE7I+T9kzIs2Od?=
 =?us-ascii?q?G0Uk92bNy8HJdOqy2XM5F6T8AiTm1ypSo3y78LtYSmcCUIyJkqwQPUZeadfIiS?=
 =?us-ascii?q?+B3jUf6cITdmi3Jhf7Kynwiy8Ue+xe3mTMW000hFrjBDktbSsnABzRvT6tKISv?=
 =?us-ascii?q?dl/0eh3yiA1xzL5+1aPUw5kbDXJ4Mvz7IujJYfrEfOEjPslEj3jqKabkAk9fKp?=
 =?us-ascii?q?6+TjbLXmvJicN4pshwH6M6QunNG/AOshPggNQWeb4+K826Pn/UHgR7VLgPs2nb?=
 =?us-ascii?q?fDsJ3BO8QbqbC2AxVP3oYg9Rm/FTGm38ocnXUdK1JFYh2Hg5DzO17SOPD4Eeu/?=
 =?us-ascii?q?g1O0nTdvxvDGPaPuDo/CL3jei7rhebd960hByAs819xf5pRUCq0fL/L3QEP+qN?=
 =?us-ascii?q?vYDhohOQyu3+nnEMl91p8ZWW+XAq+WKqLSsUOS6eIoOeWMZJIVtyz7K/gq/PPu?=
 =?us-ascii?q?iX45mVkAfaimx5cXaXa4Huh4LEWde3bjntABEWIStAokUOPqkEGCUSJUZ3uqXa?=
 =?us-ascii?q?I84S80BJilDYfEQICthruB0Ty/Hp1XYGBGF1+NHW3pd4WCR/cDdiaSLtV9nTwD?=
 =?us-ascii?q?ULirU5Uh2g22tA/m17pnKfLZ9TcDtZLj09h15PfflQso+jx2FMmd12CNT2dpnm?=
 =?us-ascii?q?IHXTM23aZ/oVBjxVeHy6R3n/tYFdlL7fNTTgg6LYLcz/B9C93qWQLOZNGJREyi?=
 =?us-ascii?q?QtWnGz4xSN0xzsQKY0Z8HdWikx/C0zCrA78Ti7yEGpg0/rjA0Hj2IsZ302zG27?=
 =?us-ascii?q?U5j1k6XstPMnWribNl+AjNGYHFiUWZmLysdaQHwiHN8mCPzW6NvEFdVA59SqHF?=
 =?us-ascii?q?XXEZZkvLotX1/ELCT7myCbs5NgtN09KNKqxPatfxl1VJWO/jOMjCY2K2g2q/GA?=
 =?us-ascii?q?yHxq2SY4bwe2USxiPdCFManAAV5nuGMQk+BiG8o2PRFjBuFFTvY1/y/ul6sn+0?=
 =?us-ascii?q?Ukg0zwSSZU17y7W14gIVheCbS/4LwrIEuSIhqzJoHFa939PaEcaAqxBmfKVGZd?=
 =?us-ascii?q?M94VFH1W3Cugx5P5ygKb1ih1EEfwR2uUPuywt4CoFancc2q3MqyRJ4KbiE31NZ?=
 =?us-ascii?q?azOYwZfwN6XNJWn24h+uZLDZ21HE3NmN56cA9e43q1PgvAGuCEov6HFn09hT03?=
 =?us-ascii?q?uB6ZTGFgsSUZTtUkkp8xh2va3VYi4454nMz31jLbG0siPe29IuHOYkygugc81D?=
 =?us-ascii?q?P6+eFQ7yE9cVB86hKOExn1ipbxQEPP1d9aIuPsOmceeG17CvPOp6gD2mimFH6p?=
 =?us-ascii?q?hn0k2Q7yp8VvLI35EdzvGC3wuISy3zjE28vcDwg4xEYy8dHnC+yST9GIFefKly?=
 =?us-ascii?q?cpsVBme0JM23wM5zh5rsW35e6V6iCEkK2M6veRqOcVP92Rdc2lgQoXyigSG41S?=
 =?us-ascii?q?B7kyk1rqqD2yzD2+TjdBsdNm9LXmVilkrsIY6vgtAeXUioaRUplRS/6Ub7wahb?=
 =?us-ascii?q?uLpwL23JTUhUeCj2KnloUrGsubqaf85P9JQovD1VUOume1CaSb39oxwA3yP4BW?=
 =?us-ascii?q?RexzM7dzCsuprnmRx3k2adLHd1rHrEdsB83xbf5NrARfFP2joKXjV3iT7SBlKk?=
 =?us-ascii?q?Jdmm4c2Ul4vfsuC5T2+gVodccS7xwYOCtSu743ZnARm+n/C1h93mHhI20S7919?=
 =?us-ascii?q?l2SyrIqAzwbZXs16S/KehnZFVnBEfg68pmHYFziogwi4sR2XQAhpWV4GAIkWH8?=
 =?us-ascii?q?MdhA3aL+bXwNRSMEwtLP4Qjl3lFjIWyNx47jSnqdxc5hbcGgYmwKwiI989xKCK?=
 =?us-ascii?q?CM4bxBnCt1oUC3oRjfYPdjhTcd1eUh6GQBjO4XogotwT6QArQTHUleICztmA6E?=
 =?us-ascii?q?79G4rKVLemmvdaK821Z5ndCkFLuCuB1TWG7lepc+Gi999tl/MFXJ0HHp64DrYt?=
 =?us-ascii?q?/Qbc8Ith2PkhfNlOxVKJM3lvoXiitrI2P9vXs5y+EliRxix421vI+CK2915qK2?=
 =?us-ascii?q?HgZYNiHpZ8MU4jzilrxRnsGS34CyBJlhHigLUYDsTfKpFjISqPvmOxyPED06tn?=
 =?us-ascii?q?eUB77fERWD50dhqnLFC4qrOG2PJHkF0dViQwGQJE5FjwARQjo6hYQ1FhywyMzi?=
 =?us-ascii?q?bUd55S0R5ljipRtX0e9oMxj/UmHCpAancDs0SZ6fLAZI4QFG/UvaLcue7udrFS?=
 =?us-ascii?q?FC4pKhtBCNKnCcZwlQDWAJXVGEB0n+Pra049nM6fOYBu24L/vBeriOre1eV/GV?=
 =?us-ascii?q?xZOgyIdm/jCMNtmRMXlmFfE0xk1DXXVhEcTDhzoPUzAXlz7Kb8ODpBez5Cx3rs?=
 =?us-ascii?q?O88PTqQg7v5pGPC7xdMdpx4RC2nLyDOvWUhCZ4LzZYy5wNyWXJyLgZwF4dlSVu?=
 =?us-ascii?q?eyOxHrQHsC7HVLjQlbNPDx4HdyNzM9NF4Lgh3gZWI87UlNP02qR8jv40EFpFUV?=
 =?us-ascii?q?3hmse0Zc0FOW29NVXHBFqVO7SCPzHE38b3YaakQ71KkOpUrwGwuSqcE0L7IjSD?=
 =?us-ascii?q?ljzpWwqzPu1WkC6bPAJRuIemfxZpCGjjSs/maxKhPN92iz023aM7hnfQOWEANj?=
 =?us-ascii?q?h8dltHrqeM4iNAnvV/B2tB42JlLOaenSaZ6ujYKpAOvvpqAiR7jeRa4HshxrtR?=
 =?us-ascii?q?7SFEQuF1mSTIot5vpVGmjveAyj59XBVSrTZLgdHDgUI3OKLQ8JAGUnfD5hQA7E?=
 =?us-ascii?q?2WGwxMrNxgWfP1vKUF7tmHpav1J38W99/T7MIaCI7QKeqBIGJnOh3sTm2HRDAZ?=
 =?us-ascii?q?RCKmYDmMz3dWl+ufozjM9sA3?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AUAAAceAVch0O0hNFZCh0BAQUBBwUBg?=
 =?us-ascii?q?VEIAQsBg2sUE4N5iBhfiy2CDRSXNIFzEwEYEwGICSI0CQ0BAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQoLCQgpL4I2JAGCYgECAwECIARSBgkBAQoLDQICJgICAx8SAQUBHBkFgxyCA?=
 =?us-ascii?q?gWaVjyLDXwziiYSeYsRghaBEYMShFaDL4JXAokmBoFzhQtQjnFVBwKKMocKGIl?=
 =?us-ascii?q?bh0uYRgIEAgQFAgUPIYElgg1NI4EBBoI1gicXjjwhMoEFAQGKVwEB?=
X-IPAS-Result: =?us-ascii?q?A0AUAAAceAVch0O0hNFZCh0BAQUBBwUBgVEIAQsBg2sUE4N?=
 =?us-ascii?q?5iBhfiy2CDRSXNIFzEwEYEwGICSI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgpL4I2J?=
 =?us-ascii?q?AGCYgECAwECIARSBgkBAQoLDQICJgICAx8SAQUBHBkFgxyCAgWaVjyLDXwziiY?=
 =?us-ascii?q?SeYsRghaBEYMShFaDL4JXAokmBoFzhQtQjnFVBwKKMocKGIlbh0uYRgIEAgQFA?=
 =?us-ascii?q?gUPIYElgg1NI4EBBoI1gicXjjwhMoEFAQGKVwEB?=
X-IronPort-AV: E=Sophos;i="5.56,311,1539673200"; 
   d="scan'208";a="54326805"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 03 Dec 2018 10:39:38 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726964AbeLCSji (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 3 Dec 2018 13:39:38 -0500
Received: from mail-oi1-f195.google.com ([209.85.167.195]:45327 "EHLO
        mail-oi1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726365AbeLCSjh (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 3 Dec 2018 13:39:37 -0500
Received: by mail-oi1-f195.google.com with SMTP id b141so11840187oii.12
        for <linux-kernel@vger.kernel.org>; Mon, 03 Dec 2018 10:39:33 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=6n/oxCL8XduT0iPyabgGeKYtciBEEj11+xCAlfZn8pA=;
        b=d0wSGfoQ+pRuZzVCSZ9Gz63tKfUD6yo5k9xQV9wVXZx1R606ekPoaZkKCcEiGbQT1O
         z7s6Gy2e7jdfYY537MViKh4tbFM2gf0TK5Ap6BHk7+dt4yUZPIYdRXpNOA34KlCV2OfW
         f03lCvWlwIweS2EvhAF7JQcDRY9MeUXD164zC/doT8G3EIKC0MNXbplmmyioXYtCezTn
         OMwF8suVEJU7kCpq1ActGCg9YHSOAjYGQWxRomj1BRLpfdDOwtUcPlW0aTvosx5bu2EB
         tU+De27hX1mqEL+pD985p9NvI5IImBoWhUpcVG4p84ozZBjoggmdy0lvrGJ9j/cimSuZ
         JHWg==
X-Gm-Message-State: AA+aEWb+QDSwj8CrReRZKwpcIpj1JEYlBSUKKaKeLdo1L4gvob83uoLb
        VujWqgaIxmTUeZoGhHNalbtoQgM/
X-Google-Smtp-Source: AFSGD/WM/BruO7lNSGoVo8Lk7s3gZKX/jcy789PHJwCzqWGUemWaeo4xBvIEhtl5D0W+TDYvTrxaQg==
X-Received: by 2002:aca:ac13:: with SMTP id v19mr10127469oie.160.1543862373063;
        Mon, 03 Dec 2018 10:39:33 -0800 (PST)
Received: from mail-oi1-f175.google.com (mail-oi1-f175.google.com. [209.85.167.175])
        by smtp.gmail.com with ESMTPSA id b124sm7024426oia.35.2018.12.03.10.39.32
        for <linux-kernel@vger.kernel.org>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Mon, 03 Dec 2018 10:39:32 -0800 (PST)
Received: by mail-oi1-f175.google.com with SMTP id w13so11856702oiw.9
        for <linux-kernel@vger.kernel.org>; Mon, 03 Dec 2018 10:39:32 -0800 (PST)
X-Received: by 2002:aca:1a0b:: with SMTP id a11mr11042322oia.154.1543862372213;
 Mon, 03 Dec 2018 10:39:32 -0800 (PST)
MIME-Version: 1.0
References: <1541410219-9943-1-git-send-email-ioana.ciornei@nxp.com> <1541410219-9943-3-git-send-email-ioana.ciornei@nxp.com>
In-Reply-To: <1541410219-9943-3-git-send-email-ioana.ciornei@nxp.com>
From: Li Yang <leoyang.li@nxp.com>
Date: Mon, 3 Dec 2018 12:39:21 -0600
X-Gmail-Original-Message-ID: <CADRPPNRiem+c2fK2RWyvopvre9ZBqT=6n8KxGJ1THtBpbA0d-Q@mail.gmail.com>
Message-ID: <CADRPPNRiem+c2fK2RWyvopvre9ZBqT=6n8KxGJ1THtBpbA0d-Q@mail.gmail.com>
Subject: Re: [PATCH 2/2] soc: fsl: dpio: use a cpumask to identify which cpus
 are unused
To: ioana.ciornei@nxp.com
Cc: Roy Pledge <roy.pledge@nxp.com>, youri.querry_1@nxp.com,
        lkml <linux-kernel@vger.kernel.org>,
        "moderated list:ARM/FREESCALE IMX / MXC ARM ARCHITECTURE" 
        <linux-arm-kernel@lists.infradead.org>,
        Ioana Ciocoi Radulescu <ruxandra.radulescu@nxp.com>,
        Horia Geanta <horia.geanta@nxp.com>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, Nov 5, 2018 at 3:31 AM Ioana Ciornei <ioana.ciornei@nxp.com> wrote:
>
> The current implementation of the dpio driver uses a static next_cpu
> variable to keep track of the index of the next cpu available. This
> approach does not handle well unbinding and binding dpio devices in a
> random order. For example, unbinding a dpio and then binding it again
> with the driver, will generate the below error:
>
> $ echo dpio.5 > /sys/bus/fsl-mc/drivers/fsl_mc_dpio/unbind
> $ echo dpio.5 > /sys/bus/fsl-mc/drivers/fsl_mc_dpio/bind
> [  103.946380] fsl_mc_dpio dpio.5: probe failed. Number of DPIOs exceeds
> NR_CPUS.
> [  103.955157] fsl_mc_dpio dpio.5: fsl_mc_driver_probe failed: -34
> -bash: echo: write error: No such device
>
> Fix this error by keeping a global cpumask of unused cpus that will be
> updated at every dpaa2_dpio_[probe,remove].
>
> Signed-off-by: Ioana Ciornei <ioana.ciornei@nxp.com>
> ---
>  drivers/soc/fsl/dpio/dpio-driver.c  | 25 ++++++++++++++++---------
>  drivers/soc/fsl/dpio/dpio-service.c |  6 ++++++
>  include/soc/fsl/dpaa2-io.h          |  2 ++
>  3 files changed, 24 insertions(+), 9 deletions(-)
>
> diff --git a/drivers/soc/fsl/dpio/dpio-driver.c b/drivers/soc/fsl/dpio/dpio-driver.c
> index e58fcc9..832175c 100644
> --- a/drivers/soc/fsl/dpio/dpio-driver.c
> +++ b/drivers/soc/fsl/dpio/dpio-driver.c
> @@ -30,6 +30,8 @@ struct dpio_priv {
>         struct dpaa2_io *io;
>  };
>
> +static cpumask_var_t cpus_unused_mask;
> +
>  static irqreturn_t dpio_irq_handler(int irq_num, void *arg)
>  {
>         struct device *dev = (struct device *)arg;
> @@ -86,7 +88,7 @@ static int dpaa2_dpio_probe(struct fsl_mc_device *dpio_dev)
>         struct dpio_priv *priv;
>         int err = -ENOMEM;
>         struct device *dev = &dpio_dev->dev;
> -       static int next_cpu = -1;
> +       int possible_next_cpu;
>
>         priv = devm_kzalloc(dev, sizeof(*priv), GFP_KERNEL);
>         if (!priv)
> @@ -128,17 +130,14 @@ static int dpaa2_dpio_probe(struct fsl_mc_device *dpio_dev)
>         desc.dpio_id = dpio_dev->obj_desc.id;
>
>         /* get the cpu to use for the affinity hint */
> -       if (next_cpu == -1)
> -               next_cpu = cpumask_first(cpu_online_mask);
> -       else
> -               next_cpu = cpumask_next(next_cpu, cpu_online_mask);
> -
> -       if (!cpu_possible(next_cpu)) {
> +       possible_next_cpu = cpumask_first(cpus_unused_mask);
> +       if (possible_next_cpu >= nr_cpu_ids) {
>                 dev_err(dev, "probe failed. Number of DPIOs exceeds NR_CPUS.\n");
>                 err = -ERANGE;
>                 goto err_allocate_irqs;
>         }
> -       desc.cpu = next_cpu;
> +       desc.cpu = possible_next_cpu;
> +       cpumask_clear_cpu(possible_next_cpu, cpus_unused_mask);
>
>         /*
>          * Set the CENA regs to be the cache inhibited area of the portal to
> @@ -211,7 +210,7 @@ static int dpaa2_dpio_remove(struct fsl_mc_device *dpio_dev)
>  {
>         struct device *dev;
>         struct dpio_priv *priv;
> -       int err;
> +       int err = 0, cpu;
>
>         dev = &dpio_dev->dev;
>         priv = dev_get_drvdata(dev);
> @@ -220,6 +219,9 @@ static int dpaa2_dpio_remove(struct fsl_mc_device *dpio_dev)
>
>         dpio_teardown_irqs(dpio_dev);
>
> +       cpu = dpaa2_io_get_cpu(priv->io);
> +       cpumask_set_cpu(cpu, cpus_unused_mask);
> +
>         err = fsl_mc_portal_allocate(dpio_dev, 0, &dpio_dev->mc_io);
>         if (err) {
>                 dev_err(dev, "MC portal allocation failed\n");
> @@ -267,11 +269,16 @@ static int dpaa2_dpio_remove(struct fsl_mc_device *dpio_dev)
>
>  static int dpio_driver_init(void)
>  {
> +       if (!zalloc_cpumask_var(&cpus_unused_mask, GFP_KERNEL))
> +               return -ENOMEM;
> +       cpumask_copy(cpus_unused_mask, cpu_online_mask);
> +
>         return fsl_mc_driver_register(&dpaa2_dpio_driver);
>  }
>
>  static void dpio_driver_exit(void)
>  {
> +       free_cpumask_var(cpus_unused_mask);
>         fsl_mc_driver_unregister(&dpaa2_dpio_driver);
>  }
>  module_init(dpio_driver_init);
> diff --git a/drivers/soc/fsl/dpio/dpio-service.c b/drivers/soc/fsl/dpio/dpio-service.c
> index 21c3e32..3198265 100644
> --- a/drivers/soc/fsl/dpio/dpio-service.c
> +++ b/drivers/soc/fsl/dpio/dpio-service.c
> @@ -214,6 +214,12 @@ irqreturn_t dpaa2_io_irq(struct dpaa2_io *obj)
>         return IRQ_HANDLED;
>  }
>
> +int dpaa2_io_get_cpu(struct dpaa2_io *d)
> +{
> +       return d->dpio_desc.cpu;
> +}
> +EXPORT_SYMBOL(dpaa2_io_get_cpu);

Although this function is very simple function and probably
self-explanatory, it is required that exported APIs have a kernel-doc
comment just like other functions in the file.

> +
>  /**
>   * dpaa2_io_service_register() - Prepare for servicing of FQDAN or CDAN
>   *                               notifications on the given DPIO service.
> diff --git a/include/soc/fsl/dpaa2-io.h b/include/soc/fsl/dpaa2-io.h
> index ab51e40..1c1764f 100644
> --- a/include/soc/fsl/dpaa2-io.h
> +++ b/include/soc/fsl/dpaa2-io.h
> @@ -90,6 +90,8 @@ struct dpaa2_io_notification_ctx {
>         void *dpio_private;
>  };
>
> +int dpaa2_io_get_cpu(struct dpaa2_io *d);
> +
>  int dpaa2_io_service_register(struct dpaa2_io *service,
>                               struct dpaa2_io_notification_ctx *ctx);
>  void dpaa2_io_service_deregister(struct dpaa2_io *service,
> --
> 1.9.1
>
