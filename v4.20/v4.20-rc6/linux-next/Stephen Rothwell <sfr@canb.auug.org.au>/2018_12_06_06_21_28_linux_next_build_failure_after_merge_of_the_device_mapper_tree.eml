Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 08:41:37 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B2F6E58052C;
	Wed,  5 Dec 2018 22:21:40 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 05 Dec 2018 22:21:40 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AsIp+bRKcaJKRYwHzudmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULvX5rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZUMhfVzJPDJ6/?=
 =?us-ascii?q?YYQAE+UBJv5YoovmqlsBsRezHxOhCP/zxjNWgHL9wK000/4mEQHDxAEuAs4Ov2?=
 =?us-ascii?q?rMrNX1KqgSV/2+wrXPzTXfb/NX1yny6IzMchs8pvyMRrxwcdDKxEYzDQzFiE6f?=
 =?us-ascii?q?pZb/MDOIy+QNvHKX7+16VeKgkWIosRxxryGpy8wxiYfJnpoYxk7Y+Sh92oo5ON?=
 =?us-ascii?q?O1RFBhbdK5E5ZcqzuWOop0T886XW1kpCg3xqcbtZKmZiQHyokrywTCZ/GBboOG?=
 =?us-ascii?q?+AjsVPyLLjd9nH9leKywhxK18UW41O38Wde70ExQoipGjNbMrHYN2ALX6sSdTf?=
 =?us-ascii?q?t95Eih1S6O1wDV9O5EPVg5mbTHJ5Ml2LI8i5QevVrZEiPrm0j6kLWae0Qm9+Sw?=
 =?us-ascii?q?7uToeLTmppuSN49ujQH+N7wjmsi+AeQ+LwgPUHGX+eei2735+032XrFKguQxkq?=
 =?us-ascii?q?jXtpDVO94bq7WnAw9azIkj8QyzDzS439QCm3kIMlZFdAiAj4jzNFHCOOr4Auun?=
 =?us-ascii?q?g1SwjDdrwOjLPrngApXOMHfPirjgfatm5k5YyQozy81f5p1OBrEAJvLzRlH+tN?=
 =?us-ascii?q?jCAhAlNAy0xv7tCM9h2YMGRWKPHqiZPbvSsVCS5+IvP/ODZIgPtDb9Nvgq/fju?=
 =?us-ascii?q?jXAilF8ZfKmp24YXaX+iEvRnJUWZfWTjgtMbHWgWuQo+SfTgiEeeXj5Le3ayQ6?=
 =?us-ascii?q?U86yk5CIKhE4jPXIOtgLuH3Ce9GZ1bfWRGClGKEXf1eISIQfYMaCSOIsB/ljwI?=
 =?us-ascii?q?T6SuS4gk1Ru2rg/116JnLvbI+i0frZ/szsN15+3UlREx7zB0Fd6S02OWQmFwn2?=
 =?us-ascii?q?MIQSI23a9lrUx8zFeDzbZ3g/hCGdNP4PNJVx8wNYTAwOxiF9DyRgXBc8+KSFm8?=
 =?us-ascii?q?RNWqGzUxTtMrzN8IbEZwANGijhHF3yq3DL4Zjb2LBJoo8q3C23j9Pdpyy3HD1K?=
 =?us-ascii?q?M5lVkpXtNPNXG6hq547wXcGpTGk1uHmKqwdaQTxijN9HydwmqIu01YVA1wUaDB?=
 =?us-ascii?q?XX0EYkvWrNL55l7NTrO0CLQnNBdBxtCGKqdQdtLpilBGTu/5ONvCe2Kxh3uwBR?=
 =?us-ascii?q?GQy7yRdoXqZXsS0D/dCEcelQAT5miJNQ4lCyelomLeCiFuFF31b0Pt9+l+tG20?=
 =?us-ascii?q?Tksuww6WaE1h0qK/+gQJivyEV/MTwrUEtT89qzV1GVa92M7WC9qApgZ7YKVQe9?=
 =?us-ascii?q?Q94E1D1WLYsQx9MYetL6Rjhl4YbgR2sFni1xRxCoVcj8cqqGkmwxZ1KaKdyFlB?=
 =?us-ascii?q?bS+X3YjsOr3LLWn/5Aqga6rI1VDRztmX+r0D5+8lq1r+pg6pEEki83J509RO13?=
 =?us-ascii?q?uc55PKDBcdUJ7rU0Y38QR6qK/eYiUn+4zU0nhsO7GusjDew9IpGPclyhG4ctZf?=
 =?us-ascii?q?LaOIDhP9H9cbBsiuMuMqnVepYwkAPOBT8q40Isyne+GH2K6tIOZvgjamgX5b74?=
 =?us-ascii?q?B610KG7zB8RfLQ35YZ3/GY2ROKVy39jFi9qM/3g51LZTYIEmq51yfkHo9RarRu?=
 =?us-ascii?q?cokRDWehPtO4xs95h57rQHNY8F+jB1Ub2M6mYxaSblr93RFO2kQTu3CohSy4zz?=
 =?us-ascii?q?lsmTEzsqWfxDDOw/jldBcfOm9LRXNujFf2LYivktAaWlOlbwwolBuj+Eb7yLJX?=
 =?us-ascii?q?pKV5L2nPX0hIezL6IH1lUqu1rrCCedJA6Is0sSVLV+SxeVKaRaTnoxsZ0CPjGH?=
 =?us-ascii?q?FSxCsheDGpuZX5nhp6h3ybLHtoqHrZeMdwxQrQ5dDGRP5R2CYGSzd8iTXNGle8?=
 =?us-ascii?q?ONyp982Ol5jfquC+S36hVppLfCjr14yAszG35W9rAR25hP2zntznEQ4n0S70zd?=
 =?us-ascii?q?VqVCPIrAribYnvzai1LeVnfkxwDl/m98V6Ap1+kpc3hJwI2ngVnJSV8WAHkWfu?=
 =?us-ascii?q?K9pb363+YWEJRT4Kxd7V/Qfk1FdiLnKP24L2SHGdztF9aNm9Z2Mcwjg94NxSCK?=
 =?us-ascii?q?eI8LxEmjN4ol+5rQLSe/dxhDkcxuU16H4Gne4JohEiwTuHArAdBkRYOS3slxKV?=
 =?us-ascii?q?79GxtqlXZWCvcaSu20p6h9yuELaCogREUnbjZpgiBTNw7tl4MF/UzH3z7YTkdM?=
 =?us-ascii?q?PRbN0JsB2UjgzAj/NUKJ8qkvoKhCxnOX/yvHE/yu47iwBu0o++vISdN2pt+6e5?=
 =?us-ascii?q?CAZCNjLpf8MT5i3tjaFGk8mNxY+vGZFhGigRUJvsUPKlCzYStfXhNwaTHzwwsH?=
 =?us-ascii?q?abGbzDHQCB7EdqtW7AE5euN3uPPnkW0c1iRAWBJExYmA0UXi81npsnGQCx3sDh?=
 =?us-ascii?q?bF115jMM5l77txtMzPhnNwLkX2fbpQeobCo0SZeFIBpX6AFC+1naMciE4u1vGC?=
 =?us-ascii?q?FY+4WrrBaRJWyDewRIEWYJV1SEBlDkI7mu/MTA/PKeBuakNPvOZrOOqeNFWveM?=
 =?us-ascii?q?xJKv1JZm/jmWOsWOOHliE+M02k5ZUX9lHMTZni0FSzYLmCLVc86buBC89zV3rs?=
 =?us-ascii?q?+h8fTrWwHv5YqVB7tRK9Vv/B+2jrmZN+6NnyZ0MjJY1pIKxX/Vx7kTxl8Siydy?=
 =?us-ascii?q?dzazFbQMrzLCTKXVmqVPFR4UdztzNNdU76I7xgRCI9Pbhcjv1rFmjv85EVNFVV?=
 =?us-ascii?q?36l8GtZMwKJXy9NVzdCEaKMrSGOSPEw8XtbaygTr1Qif1etwestjaDD0/jIjOD?=
 =?us-ascii?q?miH1VxCuNOFAlj2UMAZCt4G9bBltD3PuTNbnah29Ld92gic6wbwyhnPWK2EcNS?=
 =?us-ascii?q?JwfF9Krr2V9SlYmOlwG3Rd7np5KumJgyaY4PPeKpYTsPtrBDx7luNa4HsgzbtV?=
 =?us-ascii?q?4zpJRPh0mCvUs95vrEuqkuiJyjp7ThVOrixHi56MvUVnau3l8cxpXX/f8BsM9y?=
 =?us-ascii?q?2/QzcHvdRiDJW7sq9T4sLCmKL6NHFJ9NeCuYM5BsvZYPmBMWYzPAChTCXSDRcX?=
 =?us-ascii?q?QCSDL2zTh0VB1vqV8yvGgII9r83XhJcWSrJdHGYyCvMFB0BhVIgZLo1fVToim/?=
 =?us-ascii?q?iSkdMHo32ko1/YWZMJ7dj8SvuODKC3e36ihr5eak5NmOugIA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BEAQDfvghch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBZYIBgWsnjHKLLlABAQaBSYkMkC8FKwGHVSI4EgEDAQEBAQEBAgETAQEBCA0?=
 =?us-ascii?q?JCCkjDII2JAGCaQIkGQEBNwEFCQIrJQMMTgEXgxyBdQwBBaRygWwzgnYBAQWHI?=
 =?us-ascii?q?wcIgm2IFYEcF3iBB4ERjW6JLDiHII9XCZE3CxiRMIJ+hg2Pd4FdgXZNHxmDJ4I?=
 =?us-ascii?q?bDBeCBIwtKwEygQQBAQGKXAEB?=
X-IPAS-Result: =?us-ascii?q?A0BEAQDfvghch0O0hNFkHAEBAQQBAQcEAQGBZYIBgWsnjHK?=
 =?us-ascii?q?LLlABAQaBSYkMkC8FKwGHVSI4EgEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCa?=
 =?us-ascii?q?QIkGQEBNwEFCQIrJQMMTgEXgxyBdQwBBaRygWwzgnYBAQWHIwcIgm2IFYEcF3i?=
 =?us-ascii?q?BB4ERjW6JLDiHII9XCZE3CxiRMIJ+hg2Pd4FdgXZNHxmDJ4IbDBeCBIwtKwEyg?=
 =?us-ascii?q?QQBAQGKXAEB?=
X-IronPort-AV: E=Sophos;i="5.56,321,1539673200"; 
   d="scan'208";a="55750340"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 05 Dec 2018 22:21:38 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729038AbeLFGVe (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 6 Dec 2018 01:21:34 -0500
Received: from ozlabs.org ([203.11.71.1]:36905 "EHLO ozlabs.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1728489AbeLFGVd (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 6 Dec 2018 01:21:33 -0500
Received: from authenticated.ozlabs.org (localhost [127.0.0.1])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by ozlabs.org (Postfix) with ESMTPSA id 439QV13LBRz9s1c;
        Thu,  6 Dec 2018 17:21:29 +1100 (AEDT)
Authentication-Results: ozlabs.org; dmarc=none (p=none dis=none) header.from=canb.auug.org.au
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=canb.auug.org.au;
        s=201702; t=1544077289;
        bh=0PVPOgH2XFvrZqZM3Xik7TIgD7pG911g0wieXwx+T4E=;
        h=Date:From:To:Cc:Subject:From;
        b=KEV5fu46Gwtut4jVlvzVjQG61Lp0hNghbgPxOOALegwSju1bxvW4s1KTq0JsbWbEK
         xsY9kPFfDlYykhh3OR5vmlh4k9JH+aC5ohMNbPjmDaKRCFwxZDulSO+qIe3g319yyO
         my6QW0Yy/Afxa+nt/PrfbuMG5r71DCth+Jg1viRiPyQQSby19VRdJrv3SVhmF66rQe
         TQKdRvcRJrhESKqzAzLIgc4GnWcmdkutEd6Jl4hZ695WLhT69CDJNnEGwHVBaTe1t9
         ZpJtQm3Ihd8SH9+w7hk/T0J1Tf7kKS2JKhdXC7TWTYScC/oFZZpnSdHfqY6TutBdcQ
         1D7pNkdMZZB2Q==
Date: Thu, 6 Dec 2018 17:21:28 +1100
From: Stephen Rothwell <sfr@canb.auug.org.au>
To: Alasdair G Kergon <agk@redhat.com>,
        Mike Snitzer <snitzer@redhat.com>
Cc: Linux Next Mailing List <linux-next@vger.kernel.org>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        Mikulas Patocka <mpatocka@redhat.com>
Subject: linux-next: build failure after merge of the device-mapper tree
Message-ID: <20181206172128.71293ced@canb.auug.org.au>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 boundary="Sig_/2iD5IIBb4V8tL44Zu29DhN3"; protocol="application/pgp-signature"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

--Sig_/2iD5IIBb4V8tL44Zu29DhN3
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: quoted-printable

Hi all,

After merging the device-mapper tree, today's linux-next build (powerpc
ppc44x_defconfig) failed like this:

In file included from arch/powerpc/include/asm/local.h:144,
                 from include/linux/genhd.h:20,
                 from block/genhd.c:7:
block/genhd.c: In function 'part_inc_in_flight':
include/linux/percpu-defs.h:219:52: error: invalid operands to binary + (ha=
ve 'struct disk_stats' and 'int')
  const void __percpu *__vpp_verify =3D (typeof((ptr) + 0))NULL; \
                                              ~~~~~ ^
include/asm-generic/local.h:31:40: note: in definition of macro 'local_inc'
 #define local_inc(l) atomic_long_inc(&(l)->a)
                                        ^
include/linux/percpu-defs.h:259:2: note: in expansion of macro '__verify_pc=
pu_ptr'
  __verify_pcpu_ptr(__p);      \
  ^~~~~~~~~~~~~~~~~
include/linux/percpu-defs.h:263:47: note: in expansion of macro 'VERIFY_PER=
CPU_PTR'
 #define per_cpu_ptr(ptr, cpu) ({ (void)(cpu); VERIFY_PERCPU_PTR(ptr); })
                                               ^~~~~~~~~~~~~~~~~
block/genhd.c:56:13: note: in expansion of macro 'per_cpu_ptr'
  local_inc(&per_cpu_ptr(part->dkstats, cpu)->in_flight[rw]);
             ^~~~~~~~~~~
include/linux/percpu-defs.h:260:10: error: invalid type argument of unary '=
*' (have 'struct disk_stats')
  (typeof(*(__p)) __kernel __force *)(__p);   \
          ^~~~~~
include/asm-generic/local.h:31:40: note: in definition of macro 'local_inc'
 #define local_inc(l) atomic_long_inc(&(l)->a)
                                        ^
include/linux/percpu-defs.h:263:47: note: in expansion of macro 'VERIFY_PER=
CPU_PTR'
 #define per_cpu_ptr(ptr, cpu) ({ (void)(cpu); VERIFY_PERCPU_PTR(ptr); })
                                               ^~~~~~~~~~~~~~~~~
block/genhd.c:56:13: note: in expansion of macro 'per_cpu_ptr'
  local_inc(&per_cpu_ptr(part->dkstats, cpu)->in_flight[rw]);
             ^~~~~~~~~~~
include/linux/percpu-defs.h:219:52: error: invalid operands to binary + (ha=
ve 'struct disk_stats' and 'int')
  const void __percpu *__vpp_verify =3D (typeof((ptr) + 0))NULL; \
                                              ~~~~~ ^
include/asm-generic/local.h:31:40: note: in definition of macro 'local_inc'
 #define local_inc(l) atomic_long_inc(&(l)->a)
                                        ^
include/linux/percpu-defs.h:259:2: note: in expansion of macro '__verify_pc=
pu_ptr'
  __verify_pcpu_ptr(__p);      \
  ^~~~~~~~~~~~~~~~~
include/linux/percpu-defs.h:263:47: note: in expansion of macro 'VERIFY_PER=
CPU_PTR'
 #define per_cpu_ptr(ptr, cpu) ({ (void)(cpu); VERIFY_PERCPU_PTR(ptr); })
                                               ^~~~~~~~~~~~~~~~~
block/genhd.c:58:14: note: in expansion of macro 'per_cpu_ptr'
   local_inc(&per_cpu_ptr(part_to_disk(part)->part0.dkstats, cpu)->in_fligh=
t[rw]);
              ^~~~~~~~~~~
include/linux/percpu-defs.h:260:10: error: invalid type argument of unary '=
*' (have 'struct disk_stats')
  (typeof(*(__p)) __kernel __force *)(__p);   \
          ^~~~~~
include/asm-generic/local.h:31:40: note: in definition of macro 'local_inc'
 #define local_inc(l) atomic_long_inc(&(l)->a)
                                        ^
include/linux/percpu-defs.h:263:47: note: in expansion of macro 'VERIFY_PER=
CPU_PTR'
 #define per_cpu_ptr(ptr, cpu) ({ (void)(cpu); VERIFY_PERCPU_PTR(ptr); })
                                               ^~~~~~~~~~~~~~~~~
block/genhd.c:58:14: note: in expansion of macro 'per_cpu_ptr'
   local_inc(&per_cpu_ptr(part_to_disk(part)->part0.dkstats, cpu)->in_fligh=
t[rw]);
              ^~~~~~~~~~~
block/genhd.c: In function 'part_dec_in_flight':
include/linux/percpu-defs.h:219:52: error: invalid operands to binary + (ha=
ve 'struct disk_stats' and 'int')
  const void __percpu *__vpp_verify =3D (typeof((ptr) + 0))NULL; \
                                              ~~~~~ ^
include/asm-generic/local.h:32:40: note: in definition of macro 'local_dec'
 #define local_dec(l) atomic_long_dec(&(l)->a)
                                        ^
include/linux/percpu-defs.h:259:2: note: in expansion of macro '__verify_pc=
pu_ptr'
  __verify_pcpu_ptr(__p);      \
  ^~~~~~~~~~~~~~~~~
include/linux/percpu-defs.h:263:47: note: in expansion of macro 'VERIFY_PER=
CPU_PTR'
 #define per_cpu_ptr(ptr, cpu) ({ (void)(cpu); VERIFY_PERCPU_PTR(ptr); })
                                               ^~~~~~~~~~~~~~~~~
block/genhd.c:69:13: note: in expansion of macro 'per_cpu_ptr'
  local_dec(&per_cpu_ptr(part->dkstats, cpu)->in_flight[rw]);
             ^~~~~~~~~~~
include/linux/percpu-defs.h:260:10: error: invalid type argument of unary '=
*' (have 'struct disk_stats')
  (typeof(*(__p)) __kernel __force *)(__p);   \
          ^~~~~~
include/asm-generic/local.h:32:40: note: in definition of macro 'local_dec'
 #define local_dec(l) atomic_long_dec(&(l)->a)
                                        ^
include/linux/percpu-defs.h:263:47: note: in expansion of macro 'VERIFY_PER=
CPU_PTR'
 #define per_cpu_ptr(ptr, cpu) ({ (void)(cpu); VERIFY_PERCPU_PTR(ptr); })
                                               ^~~~~~~~~~~~~~~~~
block/genhd.c:69:13: note: in expansion of macro 'per_cpu_ptr'
  local_dec(&per_cpu_ptr(part->dkstats, cpu)->in_flight[rw]);
             ^~~~~~~~~~~
include/linux/percpu-defs.h:219:52: error: invalid operands to binary + (ha=
ve 'struct disk_stats' and 'int')
  const void __percpu *__vpp_verify =3D (typeof((ptr) + 0))NULL; \
                                              ~~~~~ ^
include/asm-generic/local.h:32:40: note: in definition of macro 'local_dec'
 #define local_dec(l) atomic_long_dec(&(l)->a)
                                        ^
include/linux/percpu-defs.h:259:2: note: in expansion of macro '__verify_pc=
pu_ptr'
  __verify_pcpu_ptr(__p);      \
  ^~~~~~~~~~~~~~~~~
include/linux/percpu-defs.h:263:47: note: in expansion of macro 'VERIFY_PER=
CPU_PTR'
 #define per_cpu_ptr(ptr, cpu) ({ (void)(cpu); VERIFY_PERCPU_PTR(ptr); })
                                               ^~~~~~~~~~~~~~~~~
block/genhd.c:71:14: note: in expansion of macro 'per_cpu_ptr'
   local_dec(&per_cpu_ptr(part_to_disk(part)->part0.dkstats, cpu)->in_fligh=
t[rw]);
              ^~~~~~~~~~~
include/linux/percpu-defs.h:260:10: error: invalid type argument of unary '=
*' (have 'struct disk_stats')
  (typeof(*(__p)) __kernel __force *)(__p);   \
          ^~~~~~
include/asm-generic/local.h:32:40: note: in definition of macro 'local_dec'
 #define local_dec(l) atomic_long_dec(&(l)->a)
                                        ^
include/linux/percpu-defs.h:263:47: note: in expansion of macro 'VERIFY_PER=
CPU_PTR'
 #define per_cpu_ptr(ptr, cpu) ({ (void)(cpu); VERIFY_PERCPU_PTR(ptr); })
                                               ^~~~~~~~~~~~~~~~~
block/genhd.c:71:14: note: in expansion of macro 'per_cpu_ptr'
   local_dec(&per_cpu_ptr(part_to_disk(part)->part0.dkstats, cpu)->in_fligh=
t[rw]);
              ^~~~~~~~~~~
block/genhd.c: In function 'part_in_flight':
include/linux/percpu-defs.h:219:52: error: invalid operands to binary + (ha=
ve 'struct disk_stats' and 'int')
  const void __percpu *__vpp_verify =3D (typeof((ptr) + 0))NULL; \
                                              ~~~~~ ^
include/asm-generic/local.h:29:42: note: in definition of macro 'local_read'
 #define local_read(l) atomic_long_read(&(l)->a)
                                          ^
include/linux/percpu-defs.h:259:2: note: in expansion of macro '__verify_pc=
pu_ptr'
  __verify_pcpu_ptr(__p);      \
  ^~~~~~~~~~~~~~~~~
include/linux/percpu-defs.h:263:47: note: in expansion of macro 'VERIFY_PER=
CPU_PTR'
 #define per_cpu_ptr(ptr, cpu) ({ (void)(cpu); VERIFY_PERCPU_PTR(ptr); })
                                               ^~~~~~~~~~~~~~~~~
block/genhd.c:85:27: note: in expansion of macro 'per_cpu_ptr'
   inflight +=3D local_read(&per_cpu_ptr(part->dkstats, cpu)->in_flight[0])=
 +
                           ^~~~~~~~~~~
include/linux/percpu-defs.h:260:10: error: invalid type argument of unary '=
*' (have 'struct disk_stats')
  (typeof(*(__p)) __kernel __force *)(__p);   \
          ^~~~~~
include/asm-generic/local.h:29:42: note: in definition of macro 'local_read'
 #define local_read(l) atomic_long_read(&(l)->a)
                                          ^
include/linux/percpu-defs.h:263:47: note: in expansion of macro 'VERIFY_PER=
CPU_PTR'
 #define per_cpu_ptr(ptr, cpu) ({ (void)(cpu); VERIFY_PERCPU_PTR(ptr); })
                                               ^~~~~~~~~~~~~~~~~
block/genhd.c:85:27: note: in expansion of macro 'per_cpu_ptr'
   inflight +=3D local_read(&per_cpu_ptr(part->dkstats, cpu)->in_flight[0])=
 +
                           ^~~~~~~~~~~
include/linux/percpu-defs.h:219:52: error: invalid operands to binary + (ha=
ve 'struct disk_stats' and 'int')
  const void __percpu *__vpp_verify =3D (typeof((ptr) + 0))NULL; \
                                              ~~~~~ ^
include/asm-generic/local.h:29:42: note: in definition of macro 'local_read'
 #define local_read(l) atomic_long_read(&(l)->a)
                                          ^
include/linux/percpu-defs.h:259:2: note: in expansion of macro '__verify_pc=
pu_ptr'
  __verify_pcpu_ptr(__p);      \
  ^~~~~~~~~~~~~~~~~
include/linux/percpu-defs.h:263:47: note: in expansion of macro 'VERIFY_PER=
CPU_PTR'
 #define per_cpu_ptr(ptr, cpu) ({ (void)(cpu); VERIFY_PERCPU_PTR(ptr); })
                                               ^~~~~~~~~~~~~~~~~
block/genhd.c:86:17: note: in expansion of macro 'per_cpu_ptr'
     local_read(&per_cpu_ptr(part->dkstats, cpu)->in_flight[1]);
                 ^~~~~~~~~~~
include/linux/percpu-defs.h:260:10: error: invalid type argument of unary '=
*' (have 'struct disk_stats')
  (typeof(*(__p)) __kernel __force *)(__p);   \
          ^~~~~~
include/asm-generic/local.h:29:42: note: in definition of macro 'local_read'
 #define local_read(l) atomic_long_read(&(l)->a)
                                          ^
include/linux/percpu-defs.h:263:47: note: in expansion of macro 'VERIFY_PER=
CPU_PTR'
 #define per_cpu_ptr(ptr, cpu) ({ (void)(cpu); VERIFY_PERCPU_PTR(ptr); })
                                               ^~~~~~~~~~~~~~~~~
block/genhd.c:86:17: note: in expansion of macro 'per_cpu_ptr'
     local_read(&per_cpu_ptr(part->dkstats, cpu)->in_flight[1]);
                 ^~~~~~~~~~~
block/genhd.c: In function 'part_in_flight_rw':
include/linux/percpu-defs.h:219:52: error: invalid operands to binary + (ha=
ve 'struct disk_stats' and 'int')
  const void __percpu *__vpp_verify =3D (typeof((ptr) + 0))NULL; \
                                              ~~~~~ ^
include/asm-generic/local.h:29:42: note: in definition of macro 'local_read'
 #define local_read(l) atomic_long_read(&(l)->a)
                                          ^
include/linux/percpu-defs.h:259:2: note: in expansion of macro '__verify_pc=
pu_ptr'
  __verify_pcpu_ptr(__p);      \
  ^~~~~~~~~~~~~~~~~
include/linux/percpu-defs.h:263:47: note: in expansion of macro 'VERIFY_PER=
CPU_PTR'
 #define per_cpu_ptr(ptr, cpu) ({ (void)(cpu); VERIFY_PERCPU_PTR(ptr); })
                                               ^~~~~~~~~~~~~~~~~
block/genhd.c:107:30: note: in expansion of macro 'per_cpu_ptr'
   inflight[0] +=3D local_read(&per_cpu_ptr(part->dkstats, cpu)->in_flight[=
0]);
                              ^~~~~~~~~~~
include/linux/percpu-defs.h:260:10: error: invalid type argument of unary '=
*' (have 'struct disk_stats')
  (typeof(*(__p)) __kernel __force *)(__p);   \
          ^~~~~~
include/asm-generic/local.h:29:42: note: in definition of macro 'local_read'
 #define local_read(l) atomic_long_read(&(l)->a)
                                          ^
include/linux/percpu-defs.h:263:47: note: in expansion of macro 'VERIFY_PER=
CPU_PTR'
 #define per_cpu_ptr(ptr, cpu) ({ (void)(cpu); VERIFY_PERCPU_PTR(ptr); })
                                               ^~~~~~~~~~~~~~~~~
block/genhd.c:107:30: note: in expansion of macro 'per_cpu_ptr'
   inflight[0] +=3D local_read(&per_cpu_ptr(part->dkstats, cpu)->in_flight[=
0]);
                              ^~~~~~~~~~~
include/linux/percpu-defs.h:219:52: error: invalid operands to binary + (ha=
ve 'struct disk_stats' and 'int')
  const void __percpu *__vpp_verify =3D (typeof((ptr) + 0))NULL; \
                                              ~~~~~ ^
include/asm-generic/local.h:29:42: note: in definition of macro 'local_read'
 #define local_read(l) atomic_long_read(&(l)->a)
                                          ^
include/linux/percpu-defs.h:259:2: note: in expansion of macro '__verify_pc=
pu_ptr'
  __verify_pcpu_ptr(__p);      \
  ^~~~~~~~~~~~~~~~~
include/linux/percpu-defs.h:263:47: note: in expansion of macro 'VERIFY_PER=
CPU_PTR'
 #define per_cpu_ptr(ptr, cpu) ({ (void)(cpu); VERIFY_PERCPU_PTR(ptr); })
                                               ^~~~~~~~~~~~~~~~~
block/genhd.c:108:30: note: in expansion of macro 'per_cpu_ptr'
   inflight[1] +=3D local_read(&per_cpu_ptr(part->dkstats, cpu)->in_flight[=
1]);
                              ^~~~~~~~~~~
include/linux/percpu-defs.h:260:10: error: invalid type argument of unary '=
*' (have 'struct disk_stats')
  (typeof(*(__p)) __kernel __force *)(__p);   \
          ^~~~~~
include/asm-generic/local.h:29:42: note: in definition of macro 'local_read'
 #define local_read(l) atomic_long_read(&(l)->a)
                                          ^
include/linux/percpu-defs.h:263:47: note: in expansion of macro 'VERIFY_PER=
CPU_PTR'
 #define per_cpu_ptr(ptr, cpu) ({ (void)(cpu); VERIFY_PERCPU_PTR(ptr); })
                                               ^~~~~~~~~~~~~~~~~
block/genhd.c:108:30: note: in expansion of macro 'per_cpu_ptr'
   inflight[1] +=3D local_read(&per_cpu_ptr(part->dkstats, cpu)->in_flight[=
1]);
                              ^~~~~~~~~~~

Caused by commit

  3a657cf59109 ("block: switch to per-cpu in-flight counters")

This build does not have CONFIG_SMP set and part->dkstats is not a
pointer in this case.

I have reverted the device-mapper tree changes for today.
--=20
Cheers,
Stephen Rothwell

--Sig_/2iD5IIBb4V8tL44Zu29DhN3
Content-Type: application/pgp-signature
Content-Description: OpenPGP digital signature

-----BEGIN PGP SIGNATURE-----

iQEzBAEBCAAdFiEENIC96giZ81tWdLgKAVBC80lX0GwFAlwIv+gACgkQAVBC80lX
0GzxcQgAokWkGRcssRyDFC6ojyPb9RygJfoGmKSTgnXkGxaevXEeN35HhECJbeiX
KgjCohj2orE/S6I629cKxyuOgH3XP3hOkXtvHO8mRaJdE+dMDKEI23IC2ZckJn13
u9iqciCWLY12y9fTYuB8pdQnG6Ra981E+T4aIRH9YOIEDcfPcSHNCcZxKU/kQnCn
dZobFbOZSLFIa0TW2ejO+UfE73brbegg1dkqnsuo0PIwIvVSINQHssxJAdvWLbTp
47UqGcy0gboFot0jR0xNqGqWehDDkB0kODtyU8Bw2dwssDU8mgW2pAm26HQ/y5eP
8NHE/O8BFVbuKjgoZ+Te7xJnagWTnA==
=UQX8
-----END PGP SIGNATURE-----

--Sig_/2iD5IIBb4V8tL44Zu29DhN3--
