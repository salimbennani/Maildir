Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 03 Dec 2018 20:26:42 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E9F09580117;
	Mon,  3 Dec 2018 04:19:55 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 03 Dec 2018 04:19:55 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A+T6b6xetY/ads96HYNBM9c5LlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc6+bRWN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4qF2QxHqlS?=
 =?us-ascii?q?gHLSY0/m/XhMJukaxVoxyhqBNjzIHJYo6aOuF+frvfcN4BWWpNQtxcWzBdDo6m?=
 =?us-ascii?q?cYcCCfcKM+ZCr4n6olsDtRywChOwBOPzyz9Dm3D50rc70+Q9DQHG3QogEMwIsH?=
 =?us-ascii?q?/Jq9j1Mb0dUfypzKnJ1znDcelZ2Tbh6IjUcxAhp++DXbRrfMrfyEkjDRnFjlKQ?=
 =?us-ascii?q?qYzgITyVy/4Ns2+D7+V+T+6gl2knqwRorzWp28wiiZHJi5oLxlzY8Sh12ps5KN?=
 =?us-ascii?q?OmREJhfNKpE4dcuzubOoZ0Ws8uXXxktSggxrEYuZO2fDIGxIkkyhPecfCKfImF?=
 =?us-ascii?q?7xT+X+iLOzh4nmhqeLenihay70egzur8W9Gq0FZFsCVFiMPAtnMT2BzJ7MiIVP?=
 =?us-ascii?q?998l2m2TaV2ADf8uBEIUYqmqrHM5Mt3KI8m54JvUjeECL6hl/6gLKVe0k44OSl?=
 =?us-ascii?q?6ubqbq3jppCGNo90jg/+Mr4pmsy6Gek4NgkOX26G+eWzzbHj/lP2QK9MjvIolq?=
 =?us-ascii?q?nVqZfaJModpqGnGQ9YyZgj6xmhADe8ytgYnmcILEhDeB2Zi4jlIVbOIOr3Dfun?=
 =?us-ascii?q?mVSjjC9rx+zaPr3mGpjNKnnDkLT/crpn5E9c1RE+zdRe55JSF7EAL+j/Wk73tN?=
 =?us-ascii?q?zEEBA5Nxa4zPrgCNV4zokeQ36AAreFMKPOtl+F/uIvLPONZI8Jojn9LOIp5/7z?=
 =?us-ascii?q?jXAjn18dcrKk3Z8WaHC+A/RnLF+VYXvqgtcdD2gKuhAyQ/DtiF2HSTRTfWq9X7?=
 =?us-ascii?q?og5jEnD4KrFYXDRoezj7Cb3ye7GZtWZmZBCl2XFXfodoOEW+oDaS6II89hlCAE?=
 =?us-ascii?q?WqalS4M7yR6uswr6waJ9LuXI4i0YqY7j1N9t6uLJjhEy9Tt0D8eH32GXVW50nH?=
 =?us-ascii?q?gFRzs33KB5vEx8xU2P0al+g/xEC9NT4+lFXRs9NZ7Z1+Z6Ecz9WhrdfteVT1ar?=
 =?us-ascii?q?WtamDis3Tt4rx98OYlxyG9Otjh3Y2yqqArkVl6GEBZAu86Lc2WTxKNh5y3rcyK?=
 =?us-ascii?q?YhiFwmSNNVNWK6nq5/6xTTB4nRnkqEjamqa7oT0DTN9GiZy2qOp19XUAh3XaXB?=
 =?us-ascii?q?XnAfY0/WoM/95kPDSb+uFLsmPhFAyc6ENqtFdNnpgU9aS/fkPdTUe3ixlHuoBR?=
 =?us-ascii?q?aU2rOMa5LndHgH0yXDFkcIiQAT8myANQglGCihpXnTDDhvFVLpfkPt/vNyqHK9?=
 =?us-ascii?q?Tk8o0Q6Ka1dt2Kay+h4QnfacUe8c3qoYuCc9rDV5BEq939PTC9qHuwphfKVdbc?=
 =?us-ascii?q?kh4Ftd0mLZrQh9Pp2mL6BtnVMedwV3v0Xz1xR4EIlAkM4qrG80wwp2M66XzFRB?=
 =?us-ascii?q?dzaA15DqJrLXMnXy/Ayoa6POwF7e1MiZ+6gR5/U4sVnspxypGVc4/HVh0NlV1G?=
 =?us-ascii?q?Wc647ODAoTV5LxT0k2+wJ7p7Hcfiky+YfU2WdwPqmztz/Iw8gpC/c9yha8Y9df?=
 =?us-ascii?q?N7uJFQ/vE8EAG8eiMu0rm1izYRICM+Bf76o0P8Kgd/ub16+nJudgnDS6jWtZ5I?=
 =?us-ascii?q?BxyF6D9y15SuTQxZYK3+mY3hebVzf7lFqhqMH3lpxeajEIA2W/zjLoBIhPaa1o?=
 =?us-ascii?q?fIYHEHuhLNezxtpjmZHtQXlY9Fi4ClMC2c+pfweSblPn0Q1R00QXvWKomS+iwz?=
 =?us-ascii?q?NolDEpq7KV3DbSzOT6aBoHJmlLSXFijFftO4S1j8oWXFO1bwgvjxal4Uf6x65G?=
 =?us-ascii?q?pKVwNWXTQEFIfzToIGFmSKe/qr2CY8tX4pMyrSpXSPi8YUydSrPloRsVyTnjH2?=
 =?us-ascii?q?hdxDA8bT2qoY/2nx95iGKcKnZ8snzZdNp0xRfe4tzcWPFQ0iAHRCl+lTnYGFy8?=
 =?us-ascii?q?M8O18tWTkpfJqvq+WH65Vp1PbSnrypuNtSuh6m1tGxG/nfGzmtv8HAg+0C/70c?=
 =?us-ascii?q?RqVCrSoBb9ZInry7q1MeZ9ckZ0A1/87tJwGptinYsomJEQxX8ai42W/XUdkGf/?=
 =?us-ascii?q?K9Vb2b/kY3oLSj4G2NrV4Anj2E1+IXOF3YP5VnOBwsR/Y9m2eH8Z2iU478pSEq?=
 =?us-ascii?q?eb8KREnTdpolq/tQ/RZPl9njQHxvc05n8VnfoJuBYzwSWHGb8dA1NYPSP3mhSM?=
 =?us-ascii?q?7tC+qrhXZWm1fbix0kp+gc6uDLWYrg5AX3b5f48oHTVs4cVnLFLMzHrz55n4eN?=
 =?us-ascii?q?nXaNIfrByVnA3Gj+hIM5IxjfsKiDFjOWL8u30l1uE6gQZv3ZG8oIiINWFt8Lil?=
 =?us-ascii?q?DR5fMz3/f9kT9S31jaZCgsaW2JiiEY57FTUMWJvoUOikEDYPtfn8MwaOETs8qm?=
 =?us-ascii?q?qUGLbFHA+f7ltmoGzLE5yxK36XI3wZx814RBaBPExfnBwUXDIik547DA+qwdLu?=
 =?us-ascii?q?cFxj6jAN/FL4qQZMyuF1Nxn5SGjfvxylajM1SJiZMRpX4RtO50bTMcyC8O1zGz?=
 =?us-ascii?q?tU8YGmrAyIMmabfRhHDXkVWkyYAFDuJrmv5d7d8+iBG+qxNf3Oba+VqexZUfeI?=
 =?us-ascii?q?yomi0o9n/zaKK8WOMWNuD/w92kpfQ395H97VlCkISywSjyjNddKUpA+g+i1rqc?=
 =?us-ascii?q?Cy6PTrVxzu5YuMCLtSMM9j+xOsgaeEOO6fmjx5KStD1p4XwX/Iyb4f3EMdii10?=
 =?us-ascii?q?djmtF6gAujDJTK7KhqBXCBsbYTtpNMRU96I8whVNOcnDh9zvy753leQ1BElFVF?=
 =?us-ascii?q?D7nsGpZNcHI2W8NFPBGUaKO66KJTzNw8Hrf6y8Tadcg/lTtx21oTybCVPsPiyf?=
 =?us-ascii?q?lzn1UBCiKf1MjCCePBBEpI6xaApiCWj9Q9LgcRC7NN53jTsrwbw7nH/KNGgcMS?=
 =?us-ascii?q?RifENJtLGf8SRYgvBnEWxb8nVlNfWEmzqe7+TAKpcZq/1rAiF1l+Jc+Hs7yrtV?=
 =?us-ascii?q?4ztCRPx6gybSqt9uo1e7kuiA0DZnURxOqipVi4KPp0ltJaLZ9pwTEUrDqRcE/3?=
 =?us-ascii?q?eRBg8DrNBiF9vzk69Vw9nL0qn0LXMK9tvI4cpaGcHVNN6GNncnGRToXiTTDA4I?=
 =?us-ascii?q?UCSsLWyZjEtYw9+I8XjAi5EmtpmkppMPVqNaUlEzXqcfA1h5HZocKZZrQjIinL?=
 =?us-ascii?q?izgs9O/32+qRTMXsJCs9bMUffEUqanEyqQkbQRP0hA+rj/N4lGboA=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ARAABeHgVch0O0hNFiHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2sVEowRjXI5lzQUgV0UAQEYEwGIAyI0CQ0BAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQoLCQgpL4I2IoJlAwMBAiQTPwYJAQFQAxEgAQUBIxIFgxyCAgQBmTQ8jAkzg?=
 =?us-ascii?q?32GIRKMCoFXP4ERM4IxhReFcwKJJgqFfoFMj0YHAoIfBIQeixOJW4dLiQSPQgY?=
 =?us-ascii?q?CCQcPIYElgg1NI4M8gicXjh8+MgGBAwEBATuKMQEB?=
X-IPAS-Result: =?us-ascii?q?A0ARAABeHgVch0O0hNFiHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?VEowRjXI5lzQUgV0UAQEYEwGIAyI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgpL4I2I?=
 =?us-ascii?q?oJlAwMBAiQTPwYJAQFQAxEgAQUBIxIFgxyCAgQBmTQ8jAkzg32GIRKMCoFXP4E?=
 =?us-ascii?q?RM4IxhReFcwKJJgqFfoFMj0YHAoIfBIQeixOJW4dLiQSPQgYCCQcPIYElgg1NI?=
 =?us-ascii?q?4M8gicXjh8+MgGBAwEBATuKMQEB?=
X-IronPort-AV: E=Sophos;i="5.56,310,1539673200"; 
   d="scan'208";a="140511516"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 03 Dec 2018 04:19:54 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726508AbeLCMUk (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 3 Dec 2018 07:20:40 -0500
Received: from mail-lf1-f66.google.com ([209.85.167.66]:42836 "EHLO
        mail-lf1-f66.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726298AbeLCMUk (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 3 Dec 2018 07:20:40 -0500
Received: by mail-lf1-f66.google.com with SMTP id l10so8932731lfh.9;
        Mon, 03 Dec 2018 04:19:49 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:cc:subject:message-id:references
         :mime-version:content-disposition:in-reply-to:user-agent;
        bh=fJ06/MEsQS8wIywHorlvQqUqrYoodnmIZrcXjxSdJq0=;
        b=D2BWuubqNUdvVYYA/AA48RbKlRMTG9AXZ0Mr9YGF9vcqFRLZ5w+ue9mt5wVOc9vjQI
         BSr2mVucz3QEDMc0EeIgHKQy2OwZBnSdV0h+jDJZ1qRp3YSTyIkUyEzV81Y7/KAAU7jz
         bIzWWajoCH2Gpxk8jl7yB1w6cpDt8lQaAd2DEC3zpBlYguCI6yJWjkF+mZiFapcu4NAh
         AKA9ioeRwQhiHfFr+KfIbdAvmyfD+DpRfngxUUYjhcLMWpRr5bJeNs1WTnoFiRAsEPwt
         MW2KzF80TjM+hWYdfckFu9VRmMP/9tXNG3yryqBtSNQ+V0vE+mObUY5YTXt2Nfc6v4eb
         PAIg==
X-Gm-Message-State: AA+aEWb0N7GlQNjhFmvgohNP7jmkvtQgnEoi1V86n7VNfLTU/2tXAu3J
        MtQXGgybrNbFH8tFCCaulcg=
X-Google-Smtp-Source: AFSGD/WgnRyEklbhrzoAdgtWZ2HOe0X9TsjA1Nq4WBaT2wWTmfqv/XbKXL3exfZ8C1DvNTpyHjbTzQ==
X-Received: by 2002:a19:f510:: with SMTP id j16mr8516533lfb.35.1543839588876;
        Mon, 03 Dec 2018 04:19:48 -0800 (PST)
Received: from localhost.localdomain ([213.255.186.46])
        by smtp.gmail.com with ESMTPSA id b21sm2309452lfi.7.2018.12.03.04.19.47
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Mon, 03 Dec 2018 04:19:48 -0800 (PST)
Date: Mon, 3 Dec 2018 14:19:35 +0200
From: Matti Vaittinen <matti.vaittinen@fi.rohmeurope.com>
To: mazziesaccount@gmail.com, matti.vaittinen@fi.rohmeurope.com
Cc: mturquette@baylibre.com, sboyd@kernel.org, cw00.choi@samsung.com,
        krzk@kernel.org, b.zolnierkie@samsung.com, linux@armlinux.org.uk,
        andy.gross@linaro.org, david.brown@linaro.org, pavel@ucw.cz,
        andrew.smirnov@gmail.com, lee.jones@linaro.org,
        pombredanne@nexb.com, sjhuang@iluvatar.ai, akshu.agrawal@amd.com,
        djkurtz@chromium.org, rafael.j.wysocki@intel.com,
        linux-doc@vger.kernel.org, linux-kernel@vger.kernel.org,
        linux-clk@vger.kernel.org, linux-arm-kernel@lists.infradead.org
Subject: [PATCH v5 3/9] clk: clk-max77686: Clean clkdev lookup leak and use
 devm
Message-ID: <beed6f8e43052b2d80d386444f57574b2ec0dd56.1543837442.git.matti.vaittinen@fi.rohmeurope.com>
References: <cover.1543837442.git.matti.vaittinen@fi.rohmeurope.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <cover.1543837442.git.matti.vaittinen@fi.rohmeurope.com>
User-Agent: Mutt/1.9.2 (2017-12-15)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

clk-max77686 never clean clkdev lookup at remove. This can cause
oops if clk-max77686 is removed and inserted again. Fix leak by
using new devm clkdev lookup registration. Simplify also error
path by using new devm_of_clk_add_parent_hw_provider.

Signed-off-by: Matti Vaittinen <matti.vaittinen@fi.rohmeurope.com>
Reviewed-by: Krzysztof Kozlowski <krzk@kernel.org>
---
 drivers/clk/clk-max77686.c | 29 +++++++----------------------
 1 file changed, 7 insertions(+), 22 deletions(-)

diff --git a/drivers/clk/clk-max77686.c b/drivers/clk/clk-max77686.c
index 22c937644c93..e65925d5e412 100644
--- a/drivers/clk/clk-max77686.c
+++ b/drivers/clk/clk-max77686.c
@@ -235,8 +235,9 @@ static int max77686_clk_probe(struct platform_device *pdev)
 			return ret;
 		}
 
-		ret = clk_hw_register_clkdev(&max_clk_data->hw,
-					     max_clk_data->clk_idata.name, NULL);
+		ret = devm_clk_hw_register_clkdev(dev, &max_clk_data->hw,
+						  max_clk_data->clk_idata.name,
+						  NULL);
 		if (ret < 0) {
 			dev_err(dev, "Failed to clkdev register: %d\n", ret);
 			return ret;
@@ -244,8 +245,9 @@ static int max77686_clk_probe(struct platform_device *pdev)
 	}
 
 	if (parent->of_node) {
-		ret = of_clk_add_hw_provider(parent->of_node, of_clk_max77686_get,
-					     drv_data);
+		ret = devm_of_clk_add_parent_hw_provider(dev,
+							 of_clk_max77686_get,
+							 drv_data);
 
 		if (ret < 0) {
 			dev_err(dev, "Failed to register OF clock provider: %d\n",
@@ -261,27 +263,11 @@ static int max77686_clk_probe(struct platform_device *pdev)
 					 1 << MAX77802_CLOCK_LOW_JITTER_SHIFT);
 		if (ret < 0) {
 			dev_err(dev, "Failed to config low-jitter: %d\n", ret);
-			goto remove_of_clk_provider;
+			return ret;
 		}
 	}
 
 	return 0;
-
-remove_of_clk_provider:
-	if (parent->of_node)
-		of_clk_del_provider(parent->of_node);
-
-	return ret;
-}
-
-static int max77686_clk_remove(struct platform_device *pdev)
-{
-	struct device *parent = pdev->dev.parent;
-
-	if (parent->of_node)
-		of_clk_del_provider(parent->of_node);
-
-	return 0;
 }
 
 static const struct platform_device_id max77686_clk_id[] = {
@@ -297,7 +283,6 @@ static struct platform_driver max77686_clk_driver = {
 		.name  = "max77686-clk",
 	},
 	.probe = max77686_clk_probe,
-	.remove = max77686_clk_remove,
 	.id_table = max77686_clk_id,
 };
 
-- 
2.14.3


-- 
Matti Vaittinen
ROHM Semiconductors

~~~ "I don't think so," said Rene Descartes.  Just then, he vanished ~~~
