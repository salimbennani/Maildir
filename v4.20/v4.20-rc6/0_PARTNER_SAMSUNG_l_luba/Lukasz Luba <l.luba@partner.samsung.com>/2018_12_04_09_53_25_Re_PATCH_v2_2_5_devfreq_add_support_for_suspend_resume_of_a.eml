Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 18:31:11 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id A1B415804C1;
	Tue,  4 Dec 2018 01:53:36 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 04 Dec 2018 01:53:36 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AKbiheRxCYa5JyPrXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0ewVK/ad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXXdPUNhRWSJCDI2z?=
 =?us-ascii?q?YYQAAOgOM+lEoYn9vEMOoBmlCAmwB+7i0CNEimP40KA41ekqDAHI3BYnH9ILqH?=
 =?us-ascii?q?naqsj1NKQIXuCuzajD0DPNb+5N1jjn9YPFdRQhreuIXbJtasXe01IiFxvfgVWK?=
 =?us-ascii?q?tYzlOS2a1v4Xv2iA9eVgUPmvi3MhqwF+uDSg2sAsiozQi48T11vK9j15zZ4rKd?=
 =?us-ascii?q?GkTEN3e8OoHZVOuy2AKod7Qd8uT3tptSs40rEKpIK3cSkQxJg62RLTd+aLfoiV?=
 =?us-ascii?q?7h75SuqdPTF1j29/dr2lnRa9602gx/X8Vsaq1FZKqTJIksfDtn8TzRzf8MuHRe?=
 =?us-ascii?q?Vn/kenxzmP0xrf6uZeIUA7jabbKpghzaAslpcLr0jPAiv7lF/rgKKYaEko4PWk?=
 =?us-ascii?q?5uf7brn8p5KRNZd4igTkPaQvnsy/D/44Mg8LX2WD/eS81bvj/VD2QblTjf05jL?=
 =?us-ascii?q?PZsJbEKsQfv6K5BAFU0oA95BalFDqmztsYkmcdLF5fexKIkZLpO1fQL/D8F/u/?=
 =?us-ascii?q?hE6skDhzy/DcIrLhGonNLmTEkLr5ebZ96k1cxxQpwdFQ+pJZEbUBIPP1Wk/su9?=
 =?us-ascii?q?3UFB45Mwqow+n5DNVxzJ8RWWWKAqWBKqPdrUeI5v4zI+mLfIIVuCzyK/k55/H0?=
 =?us-ascii?q?in81g18dfbSz0psRZ3C1BfBmI0SfYXrxjdYNC2YKvgwiTOP0jF2OSyJcZ3G3X6?=
 =?us-ascii?q?gk/DE0FJqmDZvfRoCqmLGB3iC7EYNMamBFDVCMF3Hod4KfVvcIaSKSJNJhkzMe?=
 =?us-ascii?q?WbigTY8hyQ+htAvgx7V7KerU/zUStYj/29ht++3TiRYy+CRuAMSG02GNSGJ0kn?=
 =?us-ascii?q?kSRzAs3qByukh9ylaF0ahljP1UD91T5/VVUggkMZ7Q1fB1C9f3WgjZZNeGVE6m?=
 =?us-ascii?q?Qsm6ATE2Vt8xwMUBY0BnF9WmjxDMxSyqA7AOmryPBZw09L/c3nfrK8Z8zXbGyL?=
 =?us-ascii?q?cuj108TsRTMm2mg7Z19xLPCI7Rj0WZi6GqeLwB0yHX6meM03CCvEFCXw52SqXK?=
 =?us-ascii?q?Q3YfakzSrdT640PCS6SjCbAmMgtH1M6DJbFGatzvjVVaWvjjPM7SbH62m2e1HR?=
 =?us-ascii?q?yI3K+DbJL2e2UB2yXQEFULnBoN/XmYLwQ+Bj2uo2TFDDNwE1LieEfs8eh4qHOm?=
 =?us-ascii?q?QU441QCKb0t917Wr/h4Zn+CTS/QW3rgcoicuty10HEqh39LRE9eAuwthfKBbYd?=
 =?us-ascii?q?Mh4FdG1XjVtxBnMpynNaBigl8ecwJ4v0710xV3C4NAkdUlrX8wzQpyL76Y301F?=
 =?us-ascii?q?dz+CwZ/wPbjXIHHo/B+zc67Wxk3e0NGO96gV7PQ3tVrisx+pF0Y46HpnzsRa3G?=
 =?us-ascii?q?Ga5pXJCwoST4n8UkI29xh8urHbbTMx54LS1X1wL6a0tiXO1M4uBOsg0hygZctQ?=
 =?us-ascii?q?MLuYFA/uFM0XH8ivKPEwl1e1dB4FPeBS+7QyP8OpbPaG3K+rPOB9nDOpl2hH4Y?=
 =?us-ascii?q?Z90l6S+Cp4UOLHw5EFw/SA1AudSzj8lEuhstzwmY1cfzESH3awxjL+BIFMYa1+?=
 =?us-ascii?q?Z4ALBnm0I82239lxm4TiW3pF+1G9HVMG38mpdAGWb1z82w1QyEsWrWammSu+0z?=
 =?us-ascii?q?x7jTUporCD0yzJxuTobAAHNXJTRGl+kVfsJpC5jtAbXESybwkljgCl5Vv8x6VA?=
 =?us-ascii?q?oKR/Lm/TQVpHfiTsLmFiVLewuaSGY8JV9JwotiBXWvymYV+GUr79vwca0yT7Em?=
 =?us-ascii?q?tc3j87bTKqupb+nxBgk2KSNnVzrHnYecF22xjf4sfRRfpQ3joAWSl5hiPbBlm6?=
 =?us-ascii?q?P9m149qUk43Pvfy5V2KkTpdTazXkzZuctCun4m1nGR2+kOq0mtH9Ewg60Cn72s?=
 =?us-ascii?q?JuVSXJqhb8f4bq2767MeJhYklnGlv859BmFYF5l4s6nIsQ1mQChpWJ4XoHln/+?=
 =?us-ascii?q?MdZB1qL/dnYNRSMLzMTT4Ajqw0BjKnOJx4TkVnSS2MdhZt+6Yn8I1SI59cxFFK?=
 =?us-ascii?q?CU7LlclytvvlW4tR7RYeR6njoFzPsu6X0ajPsTtAsj0CqdGawSEldCPSP3iRuI?=
 =?us-ascii?q?9d++ob5TZGaud7iwyUV/kcqgDLGEvgFTRnL5do0+Ei9368V1KEjM32Hr6oH4ZN?=
 =?us-ascii?q?nQasoetgGTkxfFleRUKYg+lvwXhSp8ImL9vGYoy+o6jRxowJG7s5KLK2Rr/KKl?=
 =?us-ascii?q?HBFYMif5aN8U+jHolaxehNqZ35izHpV9HTUGRIDnQuivEDIWqPTrLQKOECAnp3?=
 =?us-ascii?q?efGLrfGxKf6Uh8o3LOFZCrK2+YJH0Dwdp+QxmdIVRVgBoIUzUigp45CgeqydTj?=
 =?us-ascii?q?cEhj4zAe+EX4pgFQyu5yNBn/T2TfpBquajguU5iSNx5W7gBE50fIPs2S9ONzHy?=
 =?us-ascii?q?dE/pK/qAyBMHCUZwNNDWsRQEyLG0jjPqWy5dnH6+WZBu2+L+bXYbWTs+NeUe2E?=
 =?us-ascii?q?xYmo0otg8DaBLcGPPnhkD/0m1UtPR3F5G8LFmzoRTywbjT7Cb8mepB2k4C14st?=
 =?us-ascii?q?i/8Oj3WALo/YaPC6VdMdRs+xC1gKePLe2QhDx+KTZXyJwM32LIyKME0V4WiiFu?=
 =?us-ascii?q?cSStELsauS7MSqLQhrFYDxoBZyxvM8tI6ro23hNRNs7DltP1yrl4g+YvBFdYTl?=
 =?us-ascii?q?PhgN+mZMwQL2G5NVPKH0KLNLWAJT3WzMD7e6K8SbtMjOpKsx28oyqUE0jmPj6b?=
 =?us-ascii?q?jTnmSwivMf1QjCGcJBFepIC9chN3BWf/Vt7pdh27P8FxjTAtxb00h3XKNXMTMD?=
 =?us-ascii?q?RmckNNqKGQ4j1cgvllB2NB6X9lJ/GemymF9+nYNooWsfxzDyV0je1a5nE6y7pT?=
 =?us-ascii?q?7C5cRf11mDHdrthho1y9lumPyzxnUAdBqzpRhYKLu1liNrvd9pVaRXnE+xcNvi?=
 =?us-ascii?q?2sDEEhp9JjFdro84tQzdmHwKnscG8E+NLT/OMHDs3PNcSIdnEmNEytUDrVChYV?=
 =?us-ascii?q?CDexMCTcilZbnfW68nyOsoN8q57igpMCR7ZXElsvGbdSDkVjAcxHO55yRS4inv?=
 =?us-ascii?q?uAi8Ug+3Wztl/SSd9cs5SBUeidRb3rKTCEnfxHagEOzLfQM4seLMv41lZkZ108?=
 =?us-ascii?q?m57FXwLUXNZQsmh5aycqr0hXtntzVGs+3wTicAzpqHMeC/+/kwIshwZWf+sg7n?=
 =?us-ascii?q?Hv7k0xK16MozE/w2crntCwpS2SeSXjZIOtV4geXy6ys1U7O7vjShxpawCo21dt?=
 =?us-ascii?q?MSzZQb0XhLxlIzM4wDTAsIdCTKYPBZZPZwUdkLTOP60l?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AUAABUTQZch0O0hNFcBx0BAQUBBwUBg?=
 =?us-ascii?q?VEIAQsBg2sng3mIGYwOgWAtFJc1gXMsEwGIDiI0CQ0BAwEBAQEBAQIBEwEBAQo?=
 =?us-ascii?q?LCQgpIwyCNiQBgmIBAgMBAiAECwENAQEvCAEFCQEBCg4KAgImAgIDRBAGAQwGA?=
 =?us-ascii?q?gEBAYMcggEBBaMTcHwzgnYBAQWCQ4RqCIELiXeBHIFXP4ERJ4JrhFsTgxeCV4d?=
 =?us-ascii?q?imGcHAoo2hwUeXn2FEYJ/hzuCfAqFf4EDkDOCDTMaI4M8ghuDbYpUcQGBBAEBi?=
 =?us-ascii?q?EUBJQOCJAEB?=
X-IPAS-Result: =?us-ascii?q?A0AUAABUTQZch0O0hNFcBx0BAQUBBwUBgVEIAQsBg2sng3m?=
 =?us-ascii?q?IGYwOgWAtFJc1gXMsEwGIDiI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgpIwyCNiQBg?=
 =?us-ascii?q?mIBAgMBAiAECwENAQEvCAEFCQEBCg4KAgImAgIDRBAGAQwGAgEBAYMcggEBBaM?=
 =?us-ascii?q?TcHwzgnYBAQWCQ4RqCIELiXeBHIFXP4ERJ4JrhFsTgxeCV4dimGcHAoo2hwUeX?=
 =?us-ascii?q?n2FEYJ/hzuCfAqFf4EDkDOCDTMaI4M8ghuDbYpUcQGBBAEBiEUBJQOCJAEB?=
X-IronPort-AV: E=Sophos;i="5.56,313,1539673200"; 
   d="scan'208";a="140661032"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 04 Dec 2018 01:53:34 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726145AbeLDJxc (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 4 Dec 2018 04:53:32 -0500
Received: from mailout1.w1.samsung.com ([210.118.77.11]:39906 "EHLO
        mailout1.w1.samsung.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725767AbeLDJxb (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 4 Dec 2018 04:53:31 -0500
Received: from eucas1p2.samsung.com (unknown [182.198.249.207])
        by mailout1.w1.samsung.com (KnoxPortal) with ESMTP id 20181204095329euoutp01abe2a665752bc129bc0c86e6eb86f7df~tGIWenLhd2886828868euoutp01d
        for <linux-kernel@vger.kernel.org>; Tue,  4 Dec 2018 09:53:29 +0000 (GMT)
DKIM-Filter: OpenDKIM Filter v2.11.0 mailout1.w1.samsung.com 20181204095329euoutp01abe2a665752bc129bc0c86e6eb86f7df~tGIWenLhd2886828868euoutp01d
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=samsung.com;
        s=mail20170921; t=1543917209;
        bh=X11KD8/OnWuY3VZejmzvr+fMzr/vWkgerT/hAHvNABw=;
        h=Subject:To:Cc:From:Date:In-Reply-To:References:From;
        b=F2aR87bYpgIqDcs5+cDUiMHybE987tRyM6wbNh6nHnIw/WoSzJwttr0wQzaoj3CIR
         j7+O/MSa8LzfomFyVigI5rlrdB5CqXcsnfsYhTTFhvNI1M4YRCYTzuiVb7KB+UVv0F
         11neoeepScZ3rnznYp0xtotnB11T/knm0hbS3mls=
Received: from eusmges2new.samsung.com (unknown [203.254.199.244]) by
        eucas1p1.samsung.com (KnoxPortal) with ESMTP id
        20181204095328eucas1p151fbacdbf340b22cb385b040b95167e4~tGIVgARhs0348503485eucas1p1a;
        Tue,  4 Dec 2018 09:53:28 +0000 (GMT)
Received: from eucas1p1.samsung.com ( [182.198.249.206]) by
        eusmges2new.samsung.com (EUCPMTA) with SMTP id 97.32.04294.89E460C5; Tue,  4
        Dec 2018 09:53:28 +0000 (GMT)
Received: from eusmtrp1.samsung.com (unknown [182.198.249.138]) by
        eucas1p2.samsung.com (KnoxPortal) with ESMTPA id
        20181204095327eucas1p2d50b5ff6000b959fbd6929ed26369292~tGIUxV0E92231822318eucas1p2F;
        Tue,  4 Dec 2018 09:53:27 +0000 (GMT)
Received: from eusmgms2.samsung.com (unknown [182.198.249.180]) by
        eusmtrp1.samsung.com (KnoxPortal) with ESMTP id
        20181204095327eusmtrp1ea6b7ce8ef01de4e8eeecd1bc6ada374~tGIUhpg5f1349913499eusmtrp1g;
        Tue,  4 Dec 2018 09:53:27 +0000 (GMT)
X-AuditID: cbfec7f4-84fff700000010c6-d6-5c064e98d9c7
Received: from eusmtip2.samsung.com ( [203.254.199.222]) by
        eusmgms2.samsung.com (EUCPMTA) with SMTP id 2B.53.04128.79E460C5; Tue,  4
        Dec 2018 09:53:27 +0000 (GMT)
Received: from [106.120.51.20] (unknown [106.120.51.20]) by
        eusmtip2.samsung.com (KnoxPortal) with ESMTPA id
        20181204095326eusmtip239a607085920ad679072e052515b4644~tGITn1MwD2938229382eusmtip2a;
        Tue,  4 Dec 2018 09:53:26 +0000 (GMT)
Subject: Re: [PATCH v2 2/5] devfreq: add support for suspend/resume of a
 devfreq device
To: Chanwoo Choi <cw00.choi@samsung.com>,
        linux-arm-kernel@lists.infradead.org,
        linux-samsung-soc@vger.kernel.org, linux-kernel@vger.kernel.org,
        linux-pm@vger.kernel.org, devicetree@vger.kernel.org
Cc: tjakobi@math.uni-bielefeld.de, myungjoo.ham@samsung.com,
        kyungmin.park@samsung.com, rjw@rjwysocki.net, len.brown@intel.com,
        pavel@ucw.cz, gregkh@linuxfoundation.org, keescook@chromium.org,
        anton@enomsg.org, ccross@android.com, tony.luck@intel.com,
        robh+dt@kernel.org, mark.rutland@arm.com, kgene@kernel.org,
        krzk@kernel.org, m.szyprowski@samsung.com, b.zolnierkie@samsung.com
From: Lukasz Luba <l.luba@partner.samsung.com>
Message-ID: <7662d626-5c3e-aec5-05e4-c6cd2e56ef49@partner.samsung.com>
Date: Tue, 4 Dec 2018 10:53:25 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
        Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <5C061A57.7040002@samsung.com>
Content-Language: en-US
Content-Transfer-Encoding: 8bit
X-Brightmail-Tracker: H4sIAAAAAAAAA01Sa2yLYRj1fveN8iqzJ+aS1AjDXCNvQsRE5IuE+GcYU/YZsXb02zAkakZr
        bBMTqi4bI53uUpuulrLNahSd3dwvYzOXMENscYss1n4T+3fO85zznvMkr0Crz3DDhY36JMmg
        1yZouGDGdetX3WTLEi5mamUmR6rLJpASi4MlV0q+s+Rx13uW5NTUsWRvnoMjtQd1JKutnSb1
        9Zd4ci/1E0+sRysoUtr2iCX33ac40plRg4ilvpIiRTXNPLnwuJEiz/fkc6T57s0ev6+JJfsq
        aniyv+ArSz41vGTmhYquqy5WLDxTiMSTxkZGPJz1DYl51z5QYqn9ACdWnS7kxcvnd4vdt3jR
        +dDEiJlOOxLzC37wYmfpqKWqFcFz4qSEjVslw5S5a4I3vDTnUpufz9x+sCjMiK5HpKMgAfBM
        OP9uD0pHwYIa5yOoTL3AKKQLgb21iVNIJ4Ly9GL0z9Le9YRWFjYEv80NvEI6evxnjYxfNQQv
        h7t5bwOqodiHoKrKE3iLxvto6P7q7CGCwOFIKLdv8RtUeCHUZXQEIhgcDrcz2lg/DsHRYH5V
        wCmawXDnxJtAQBCeCPdzn1F+TONQePYmpxePhr1lJwPBgFsE+GJLZZTeC+DAWQ+r4CHw0evk
        FTwCfNmHejUy3DPbOQXvAtOd8l7NbLjhbWT9nWk8ARzuKco4ChznfJR/DHggPOkYrFQYCEdc
        x2llrALzfrWiHg/OQw2UgoeBrfAYfxhprH0Os/Y5xtrnGOv/3FzE2FGolCzr4iV5ul7aFilr
        dXKyPj5yXaKuFPX8Wl+3t6scuf+s9SAsIM0AlWU+G6NmtVvlFJ0HgUBrhqpejONi1Ko4bcoO
        yZAYa0hOkGQPChMYTahqZ7+WlWocr02SNknSZsnwb0sJQcONyLY6z3Qz+u10i61fRIz24qDY
        B1xxSqslCYccmZNarE+rfTqtaIZ6WVgc425t8S7eXp2VnRYdFbVi9tPasTn0ukfVsQtHjslQ
        y4n15oo04rpd1t9s1YV7Jy0CMDUvDTc9jMz+8tlUETL2xCq3Y1YHMf5c357dVP06GX8vycQr
        czWMvEE7LYI2yNq/0P2lJLEDAAA=
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFtrEKsWRmVeSWpSXmKPExsVy+t/xe7rT/dhiDH418Foc3KppsXHGelaL
        7Ru/sVpc//Kc1WL+kXOsFs2L17NZnOnOteh//JrZ4vz5DewWZ5vesFvMmrKXyWLT42usFpd3
        zWGz+Nx7hNFixvl9TBZrj9xlt1h6/SKTxe3GFWwWd08dBeo/fYnVonXvEXaLttUfWC3eXLjH
        4iDusW33NlaPNfPWMHrMbrjI4jGh/xOjx+I9L5k8Nq3qZPPYP3cNu8fmJfUe/46xe2y52s7i
        0bdlFaPHitXf2T0+b5IL4I3SsynKLy1JVcjILy6xVYo2tDDSM7S00DMysdQzNDaPtTIyVdK3
        s0lJzcksSy3St0vQy7jXsYCp4LZJRfda6QbGA1pdjJwcEgImEq+/3GDuYuTiEBJYyijRN38e
        C0RCTGLSvu3sELawxJ9rXWwQRa8ZJbrnzmcESQgLREqcWvwUrFtE4DSjxJTzp5hAHGaBVmaJ
        l28XMUK07GOSuLLyMVCGg4NNQE9ix6pCkG5eATeJc71vwSaxCKhInOh9zApiiwpESJx9uY4R
        okZQ4uTMJ2AncQpoS1xecIsJxGYWMJOYt/khM4QtLnHryXyouLxE89bZzBMYhWYhaZ+FpGUW
        kpZZSFoWMLKsYhRJLS3OTc8tNtIrTswtLs1L10vOz93ECEwv24793LKDsetd8CFGAQ5GJR7e
        GU6sMUKsiWXFlbmHGCU4mJVEeO+oscUI8aYkVlalFuXHF5XmpBYfYjQFem4is5Rocj4w9eWV
        xBuaGppbWBqaG5sbm1koifOeN6iMEhJITyxJzU5NLUgtgulj4uCUamDs3stlJXP4z/nL3yt3
        zov9fX+/Y0Tdlgj9SB/lh1sNZ3s+mJZzRO2R2OFZ01bdEr2UmXvvoRrHo15btYApqnFBpRrX
        ZtaXpUkanYzUVFnKt1z3t0yi8+s/6xx60pyqCjVeLClxWaG5KsbhscBiDuNgH8/Q1t3qv0oi
        m0uUmf/PaMpLfXmmL1eJpTgj0VCLuag4EQAnXwwhRQMAAA==
X-CMS-MailID: 20181204095327eucas1p2d50b5ff6000b959fbd6929ed26369292
X-Msg-Generator: CA
Content-Type: text/plain; charset="utf-8"
X-RootMTR: 20181203143131eucas1p217f22ac6d19682a54a57658a06980914
X-EPHeader: CA
CMS-TYPE: 201P
X-CMS-RootMailID: 20181203143131eucas1p217f22ac6d19682a54a57658a06980914
References: <1543847475-7600-1-git-send-email-l.luba@partner.samsung.com>
        <CGME20181203143131eucas1p217f22ac6d19682a54a57658a06980914@eucas1p2.samsung.com>
        <1543847475-7600-3-git-send-email-l.luba@partner.samsung.com>
        <5C06124B.5030409@samsung.com> <5C06140E.7010603@samsung.com>
        <5C061A57.7040002@samsung.com>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Chanwoo,

On 12/4/18 7:10 AM, Chanwoo Choi wrote:
> Hi Lukasz,
> 
> I add the comment about 'suspend_count'.
> 
> On 2018년 12월 04일 14:43, Chanwoo Choi wrote:
>> Hi,
>>
>> On 2018년 12월 04일 14:36, Chanwoo Choi wrote:
>>> Hi Lukasz,
>>>
>>> Looks good to me. But, I add the some comments.
>>> If you will fix it, feel free to add my tag:
>>> Reviewed-by: Chanwoo choi <cw00.choi@samsung.com>
>>
>> Sorry. Fix typo 'choi' to 'Choi' as following.
>> Reviewed-by: Chanwoo Choi <cw00.choi@samsung.com>
>>
>>>
>>> On 2018년 12월 03일 23:31, Lukasz Luba wrote:
>>>> The patch prepares devfreq device for handling suspend/resume
>>>> functionality.  The new fields will store needed information during this
>>>
>>> nitpick. Remove unneeded space. There are two spaces between '.' and 'The new'.
>>>
>>>> process.  Devfreq framework handles opp-suspend DT entry and there is no
>>>
>>> ditto.
>>>
>>>> need of modyfications in the drivers code.  It uses atomic variables to
>>>
>>> ditto.
>>>
>>>> make sure no race condition affects the process.
>>>>
>>>> The patch is based on earlier work by Tobias Jakobi.
>>>
>>> Please remove it from each patch description.
>>>
>>>>
>>>> Suggested-by: Tobias Jakobi <tjakobi@math.uni-bielefeld.de>
>>>> Suggested-by: Chanwoo Choi <cw00.choi@samsung.com>
>>>> Signed-off-by: Lukasz Luba <l.luba@partner.samsung.com>
>>>> ---
>>>>   drivers/devfreq/devfreq.c | 51 +++++++++++++++++++++++++++++++++++++++--------
>>>>   include/linux/devfreq.h   |  7 +++++++
>>>>   2 files changed, 50 insertions(+), 8 deletions(-)
>>>>
>>>> diff --git a/drivers/devfreq/devfreq.c b/drivers/devfreq/devfreq.c
>>>> index a9fd61b..36bed24 100644
>>>> --- a/drivers/devfreq/devfreq.c
>>>> +++ b/drivers/devfreq/devfreq.c
>>>> @@ -316,6 +316,10 @@ static int devfreq_set_target(struct devfreq *devfreq, unsigned long new_freq,
>>>>   			"Couldn't update frequency transition information.\n");
>>>>   
>>>>   	devfreq->previous_freq = new_freq;
>>>> +
>>>> +	if (devfreq->suspend_freq)
>>>> +		devfreq->resume_freq = cur_freq;
>>>> +
>>>>   	return err;
>>>>   }
>>>>   
>>>> @@ -667,6 +671,9 @@ struct devfreq *devfreq_add_device(struct device *dev,
>>>>   	}
>>>>   	devfreq->max_freq = devfreq->scaling_max_freq;
>>>>   
>>>> +	devfreq->suspend_freq = dev_pm_opp_get_suspend_opp_freq(dev);
>>>> +	atomic_set(&devfreq->suspend_count, 0);
>>>> +
>>>>   	dev_set_name(&devfreq->dev, "devfreq%d",
>>>>   				atomic_inc_return(&devfreq_no));
>>>>   	err = device_register(&devfreq->dev);
>>>> @@ -867,14 +874,28 @@ EXPORT_SYMBOL(devm_devfreq_remove_device);
>>>>    */
>>>>   int devfreq_suspend_device(struct devfreq *devfreq)
>>>>   {
>>>> +	int ret;
>>>> +
>>>>   	if (!devfreq)
>>>>   		return -EINVAL;
>>>>   
>>>> -	if (!devfreq->governor)
>>>> -		return 0;
>>>> +	if (devfreq->governor) {
>>>> +		ret = devfreq->governor->event_handler(devfreq,
>>>> +					DEVFREQ_GOV_SUSPEND, NULL);
>>>> +		if (ret)
>>>> +			return ret;
>>>> +	}
>>>> +
>>>> +	if (devfreq->suspend_freq) {
>>>> +		if (atomic_inc_return(&devfreq->suspend_count) > 1)
>>>> +			return 0;
>>>> +
>>>> +		ret = devfreq_set_target(devfreq, devfreq->suspend_freq, 0);
>>>> +		if (ret)
>>>> +			return ret;
>>>> +	}
> 
> In this patch, if some users call 'devfreq_suspend_device' twice,
> 'devfreq->governor->event_handler(devfreq, DEVFREQ_GOV_SUSPEND, NULL)'
> is called twice but devfreq_set_target() is called only one.
> I knew that it is no problem for operation.
> 
> But,
> I think that you better to use 'suspend_count' as the reference count
> of devfreq_suspend/resume_device(). But, if you use 'suspend_count'
> in order to check whether this devfreq is suspended or not,
> we can reduce the unneeded redundant call when calling it twice.
> 
> clock and regulator used the 'reference count' method in order to
> remove the redundant call.

I think I've got the point. I will move the atomic check just
after the !devfreq check. Something like the code bellow is what you
would like to see?
---8<-----
if (!devfreq)
	return -EINVAL;
if (atomic_inc_return(&devfreq->suspend_count) > 1)
	return0;

---->8-------
> 
> 
>>>>   
>>>> -	return devfreq->governor->event_handler(devfreq,
>>>> -				DEVFREQ_GOV_SUSPEND, NULL);
>>>> +	return 0;
>>>>   }
>>>>   EXPORT_SYMBOL(devfreq_suspend_device);
>>>>   
>>>> @@ -888,14 +909,28 @@ EXPORT_SYMBOL(devfreq_suspend_device);
>>>>    */
>>>>   int devfreq_resume_device(struct devfreq *devfreq)
>>>>   {
>>>> +	int ret;
>>>> +
>>>>   	if (!devfreq)
>>>>   		return -EINVAL;
>>>>   
>>>> -	if (!devfreq->governor)
>>>> -		return 0;
>>>> +	if (devfreq->resume_freq) {
>>>> +		if (atomic_dec_return(&devfreq->suspend_count) >= 1)
>>>> +			return 0;
> 
> ditto.
Same approach here:
---8<-----
if (!devfreq)
	return -EINVAL;
if (atomic_dec_return(&devfreq->suspend_count) >= 1)
	return 0;
---->8-------

Regards,
Lukasz
> 
>>>>   
>>>> -	return devfreq->governor->event_handler(devfreq,
>>>> -				DEVFREQ_GOV_RESUME, NULL);
>>>> +		ret = devfreq_set_target(devfreq, devfreq->resume_freq, 0);
>>>> +		if (ret)
>>>> +			return ret;
>>>> +	}
>>>> +
>>>> +	if (devfreq->governor) {
>>>> +		ret = devfreq->governor->event_handler(devfreq,
>>>> +					DEVFREQ_GOV_RESUME, NULL);
>>>> +		if (ret)
>>>> +			return ret;
>>>> +	}
>>>> +
>>>> +	return 0;
>>>>   }
>>>>   EXPORT_SYMBOL(devfreq_resume_device);
>>>>   
>>>> diff --git a/include/linux/devfreq.h b/include/linux/devfreq.h
>>>> index e4963b0..d985199 100644
>>>> --- a/include/linux/devfreq.h
>>>> +++ b/include/linux/devfreq.h
>>>> @@ -131,6 +131,9 @@ struct devfreq_dev_profile {
>>>>    * @scaling_min_freq:	Limit minimum frequency requested by OPP interface
>>>>    * @scaling_max_freq:	Limit maximum frequency requested by OPP interface
>>>>    * @stop_polling:	 devfreq polling status of a device.
>>>> + * @suspend_freq:	 frequency of a device set during suspend phase.
>>>> + * @resume_freq:	 frequency of a device set in resume phase.
>>>> + * @suspend_count:	 suspend requests counter for a device.
>>>>    * @total_trans:	Number of devfreq transitions
>>>>    * @trans_table:	Statistics of devfreq transitions
>>>>    * @time_in_state:	Statistics of devfreq states
>>>> @@ -167,6 +170,10 @@ struct devfreq {
>>>>   	unsigned long scaling_max_freq;
>>>>   	bool stop_polling;
>>>>   
>>>> +	unsigned long suspend_freq;
>>>> +	unsigned long resume_freq;
>>>> +	atomic_t suspend_count;
>>>> +
>>>>   	/* information for device frequency transition */
>>>>   	unsigned int total_trans;
>>>>   	unsigned int *trans_table;
>>>>
>>>
>>>
>>
>>
> 
> 
