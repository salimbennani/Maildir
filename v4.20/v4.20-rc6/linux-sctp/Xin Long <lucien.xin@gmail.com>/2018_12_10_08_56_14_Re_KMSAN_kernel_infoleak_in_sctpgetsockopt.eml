Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 10 Dec 2018 18:15:02 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 315555800CB;
	Mon, 10 Dec 2018 00:56:37 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 00:56:36 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AGKuQJhItCOGnMObQy9mcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgUIvj8rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvdxeb7Tfc4BRWpZQMleSzBBDI27?=
 =?us-ascii?q?b4sKFeUBPOBYpJT5q1YBqRayAA+hC+ThxDJHmnP73bQ23/gjHA3fwgIvAcgOu2?=
 =?us-ascii?q?nQoNj7KKseTeW5wa/KwzrZavNY2yny55LVfR8/u/GCXbNwftTVyUYyCgjLjEuf?=
 =?us-ascii?q?ppb4MDyLzOQGrnWV4PZnVeK1im4nrQ5xqSWryss1l4XFmocZx1bZ/it73Yk1P8?=
 =?us-ascii?q?W1R0F1YdGmEJVeuSKUOZZoTMw+TG9ooz46x78dtJ6nZSgH0ogrywLDZ/GFdYWD?=
 =?us-ascii?q?/xLtVPyWITd9nH9qebO/hxCv+kamze38UMa020tNoypBj9nDqnEN2ALV6sSdRf?=
 =?us-ascii?q?p9/0Gh1C2A1wDW8O5EIEQ0mbDHJJ4mx749j5weulnNEC/xnUX5lq6WdkM89+in?=
 =?us-ascii?q?7OTnZbrmppuCOINulg7+NaEultSwAeQ5LggOX3Wb9v+m2LL/+k35Ra1GjvIxkq?=
 =?us-ascii?q?neqpzaKsAbqrajDA9NyoYj8A6/DzC60NgCgXYHK1dFdRSahIbqI1HDOO70Aeu7?=
 =?us-ascii?q?jli2jTtmye7KMqf8DpjOMnTPirbscLRl50JC1AY+ycpT6pFUB70bPf7+W078uM?=
 =?us-ascii?q?bFAhI9PQG5xfvsBs9n2YMEQ22PB7eUMKPMvl+M4eIiO/eMZIALtzbnMfQl5ODh?=
 =?us-ascii?q?jWU/mVADeamlx5wXaGq3Hvh+IkWZZ2TjgssZHGsUogYzSPbmhECMXDJNfXq+Qq?=
 =?us-ascii?q?Ex6i0hBI+nD4rPXoWtj6aA3Ce/EJ1WfGdGClWUHHfsdoWEXeoMaS2LLs9ijDME?=
 =?us-ascii?q?T76hRJEl1R23sw/7xbxnIfTO+iADq5Lj28Z65/fJmREx6zN0FcKd3H+JT21umW?=
 =?us-ascii?q?MIXTA20LhloUNh0leDzbR4g/tAGNxX5vNJURk1OYTTzuxnEN3yXgPBftGUSFep?=
 =?us-ascii?q?WNmmADcxTs4vzN8KeUpyB9KijhXb1SqwH7AVj6CLBIAz8q/E33j+Pcd9y2rc26?=
 =?us-ascii?q?kmlVUmQtZPOneghq5w7AXTA4/Jk0OEl6elb6gc3SjN9HudwmqKpk1XTAlwUaDd?=
 =?us-ascii?q?V3AFekTWtcj55l/FT7K2C7QnNRVOxdSBKqtNbN3pi1JGSeznONTfZWKxhmixCQ?=
 =?us-ascii?q?yJxrOKcIrlZWEd0D/BB0gDlgAZ5WyGOhQmBie9v2LeCyRjGkj0Y0Ps9ul+q2m3?=
 =?us-ascii?q?TlUuwAGIdEBh07u1+hgIhf2TUf8T37QEuDs/pDVwBlqyw9XWC9+YrQp7YKpcec?=
 =?us-ascii?q?894EtA1W/BtAxyJJqgI7pmhl4faQt3uUzu2g5zCoVBl8gqsXwrwBBzKaKezFNO?=
 =?us-ascii?q?aTeY0YrsNb3QL2n45AqvZLLO2lHCzNaW/b8C5+kipFX9og6lDEoi/G9h09lOzX?=
 =?us-ascii?q?Sc4JLGDA4RUZL0VkY67Bx6p7DcYikg6ILYz3xsMa+osjDc39IlHvcqyhGlf91H?=
 =?us-ascii?q?KqOLCBfyE9EGB8ipMOElhkKmbgwaM+xI9K47JcWmd+CY166tJ+tgmDOmjWJa4I?=
 =?us-ascii?q?FyyE6M9ix8SvLW0JYB2f2XwgyHVzLkhle7rs/3gZxEZS0VHmen1SjkBYtRZqpu?=
 =?us-ascii?q?fYYLCWaiOdG3ys95h573X35Y9VijB1wd1c+teBqSaUH93AJK2UQWp3ynhTW3zz?=
 =?us-ascii?q?hunz41qaqf2TTEw/7+exofJm5LWG5igE/2Loiwkd8bU1anbggzmBS++Eb12rJU?=
 =?us-ascii?q?pKJ8L2nUX0dFZCz2L2BkUqutubuOec9P6JU0sSpJVOSwe0yVSrn4oxECySPsA3?=
 =?us-ascii?q?NexCwndzGtopj4nwF6hHiBI3pprXvZedt/xRHQ5NHHQf5R3zwGRDR3iDXNB1i8?=
 =?us-ascii?q?OcWp8suQl5vZru++UGehXIVJcSb31YOAqDe75WpyDB2lnvC8hsfoERIn3i/8zd?=
 =?us-ascii?q?VqUzvHrAz9YoXyy6u1K+ZncVR2C1/m7Mp6HJpzko8xhJEWxHgbiY+Z/XsBkWfv?=
 =?us-ascii?q?L9pb3bjyY2YKRT4O29TV+hTq2FV/LnKVwIL0TnWcwsp7a9i6eG8WwT8978ZRBa?=
 =?us-ascii?q?eQ7bxEmzZ1o1WioQLQZ/h9gikSyf805HEGhOEJvRInzj+BDbAKAUlYISvsmgyK?=
 =?us-ascii?q?79+ktqVXZ2Wvcb+q2Eplh9+hD7KCogBaWHnnfJcvBitw7sR5MFLR33z/8IDkeN?=
 =?us-ascii?q?/Mbd0Nsh2YiQvPj+9QKJgpjPoFmTJnOX7hvX0i0+M6jQZh3ZagsIiFKmVt+rm0?=
 =?us-ascii?q?AhpZNj3zesMS9SvhjadYnsaKwY+vGo9tFSkMXJvtVfioCi4dtez7NwaSFz0xsn?=
 =?us-ascii?q?SbFqDeHQOF6EdmsmjAE5akN3yMIHkZzNNiRASSJUBFgQAUWik6kYA9Fgyw2MPh?=
 =?us-ascii?q?d0J57CgL5lHkshtM1v5oNx7nX2fapQeoaS07RIKRLRVI9QFC+1naMdaF4e1tBS?=
 =?us-ascii?q?FY8YasrAiMKmydegRJAnsFWk2CB1D/ILau4cPM/PSfBuq7N/HOe6mBqfRCV/eU?=
 =?us-ascii?q?wpKiypdm/zGJNsmVP3htFfs72ldYXXBiGsTUgDEPSy0RlyLQYM+Xvha8+itrrs?=
 =?us-ascii?q?+h9PTnQh7g5YyKC7FKK9Vg5wi2gbufN+6XnCt2MixX1pQIxX/V0rQf2EMShjpq?=
 =?us-ascii?q?dzmsF7QAqCHMQLjRmq9REx4UdSdzONFU4KI72wlHIdTbhc/t1r5kkv41DE9IVV?=
 =?us-ascii?q?77lcGse8MKOHuxNE/dCEaIKbSGJiDLw8ftbqOnUrBQiORUtxutuTeUCUPjPzKD?=
 =?us-ascii?q?lyX3WBCrK+1DkCabPBlGsoGnbhltEXTjTM7hahCjMN53iiA2waQphnzQM24QKy?=
 =?us-ascii?q?N8c0RLrr2f9i5YhvR/G2pc7ntqN+WEmiCZ7/XGJZYSq/dkHiN0l+dC6nQg17RV?=
 =?us-ascii?q?9D1EROBymCbKrt5hvVCmkuqMyjpmShZOqSxLhIWEvUp8I6XZ64JAVG3A/BIM62?=
 =?us-ascii?q?WQFhsLq8FkCt3pp6Bf1NzPmLjvJzdF9tLe5dEcCNTMKMKbLHohNgLkFyTJDAQe?=
 =?us-ascii?q?Vz6kK2Hei1ZZkPGT7XCVqpk6qp7xmJsBULNbVVo1Fu8EBURhBtANPJB3XjY8m7?=
 =?us-ascii?q?6BkMEI/Wa+rAXWRMhCopDHV/eSDe/zJzqDkbZEZwUHwbXjIIQXN4373VFia1Zg?=
 =?us-ascii?q?kITLHUrQQc5Coil7YgAop0VN9WB0Tncv1EL9dgOt/HgTGOa0nxEsjAt+ZOUt9D?=
 =?us-ascii?q?H07FY2JlrFvi0wkEYqlNXhgDCRdiPxLaiqUYFXDSr0q1Y+MpfhTwlpag2ymB8s?=
 =?us-ascii?q?CTHfWrgEj6d8bXs5z0jTo5xSAeUaQqpDbxsdg/qQYrIkllFHpSSrglRW9+jMDZ?=
 =?us-ascii?q?9vjk4gbJG36DoNllouIZZ9beSYbPEQlwMM2vrT4ST03L46y1Q2KEEK/2efPiUP?=
 =?us-ascii?q?vQRAZYQgPDeiq+xw9RSZyXwEd3ILSuIx5P1t8Uw5NqKLyCen3/lEMly2KvDME6?=
 =?us-ascii?q?TMnmHansOMRRsK10gBjUVCtZx70NslflDcA0Um1rCcExNPMcfDNQdYdeJd8XHS?=
 =?us-ascii?q?eWCFtuCbkrxvOIDoJuHuBcuJsqlc1ka5FwckGcIc78IpEZyl0UWeJsDieu1WgS?=
 =?us-ascii?q?4x7RjmcQzWRM9CfwiGxW1c8sw=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AGAAAeKQ5ch0O0hNFjEwEBBQEBAQEBA?=
 =?us-ascii?q?gEBAQEHAgEBAQGBUQUBAQEBCwGCaYECFBODdAaDe4QejA2CDRSXPRSBEANFMw0?=
 =?us-ascii?q?GAYFLgnECAoMqIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII7AgMCAQQBAQUDA?=
 =?us-ascii?q?wEBBwEDglwBAgMBAiAEGQENDh0BAwIJAQEFBQsNAgImAgIDHgEBDgMBBQEcBgg?=
 =?us-ascii?q?HBAEEGASDAAGBaAEDFQUKmRE8iw18FgUBF4J3BYExAYJ+ChknDV2BNwIBBRJ5i?=
 =?us-ascii?q?xaCFoERgxKCV0cCAhiBFAESAR8sgliCVwKJJ4IChBR8kA4uBwKHCIcYgy8YgVy?=
 =?us-ascii?q?FFwWDJIchLI1pgQ6JfjCBJW0wcU0jgQGCOx+BfAkDF4NKgWiIejAzAQ8IAQFrA?=
 =?us-ascii?q?QGKC0eBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AGAAAeKQ5ch0O0hNFjEwEBBQEBAQEBAgEBAQEHAgEBAQG?=
 =?us-ascii?q?BUQUBAQEBCwGCaYECFBODdAaDe4QejA2CDRSXPRSBEANFMw0GAYFLgnECAoMqI?=
 =?us-ascii?q?jQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII7AgMCAQQBAQUDAwEBBwEDglwBAgM?=
 =?us-ascii?q?BAiAEGQENDh0BAwIJAQEFBQsNAgImAgIDHgEBDgMBBQEcBggHBAEEGASDAAGBa?=
 =?us-ascii?q?AEDFQUKmRE8iw18FgUBF4J3BYExAYJ+ChknDV2BNwIBBRJ5ixaCFoERgxKCV0c?=
 =?us-ascii?q?CAhiBFAESAR8sgliCVwKJJ4IChBR8kA4uBwKHCIcYgy8YgVyFFwWDJIchLI1pg?=
 =?us-ascii?q?Q6JfjCBJW0wcU0jgQGCOx+BfAkDF4NKgWiIejAzAQ8IAQFrAQGKC0eBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,337,1539673200"; 
   d="scan'208";a="56218131"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 10 Dec 2018 00:56:33 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726830AbeLJI4a (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 10 Dec 2018 03:56:30 -0500
Received: from mail-it1-f193.google.com ([209.85.166.193]:33610 "EHLO
        mail-it1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726531AbeLJI43 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 10 Dec 2018 03:56:29 -0500
Received: by mail-it1-f193.google.com with SMTP id m8so7423040itk.0;
        Mon, 10 Dec 2018 00:56:27 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc:content-transfer-encoding;
        bh=YZIb56R+QEb319IWfbmsRtgryH/Cf7rmiBoO94zw0Rg=;
        b=M2qGNzevnnAtNrPkzQStTJg1aghA5QapT2X1GI3FKivaJqjDPEoft7ink3ddBMFyWO
         EbGhGxGKSVih4iYVUVwR/YB8Jnc2XRFyneNtpwE1IH+D104hZsLc3L5YvViQJezr87iA
         7zgXyq8VAWq5WOgK0d7MfmnoNuMrjYM9BYavlvih0ZODx/Nx/HMQF2J30nO7wbNzXvYC
         hdgZQGLXS9eDYriXjzTFCJY8qKqDx9ffDEWWTwQrfrR/mb4BVAYxwkoLY0BOL+f9hRFC
         /dk54DBzPR/7DV5Pegpkrg1FYwoJsxDHqOvuKR6hVJstr1VrVRQEFe1vgA+qItH4c0kj
         Bjmg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc:content-transfer-encoding;
        bh=YZIb56R+QEb319IWfbmsRtgryH/Cf7rmiBoO94zw0Rg=;
        b=BS5yAuaRcH9OsGi4tzPNRzvC7uYAs/OvAxJR8X087LYIBCXwXJzxWLxXZd4V4tUCah
         0xyx7vjDMiPbuCCoHgTPagKxyVCYONC1bL7VUrjCLjBgprdzBTftuuKuYahulOQDCgp9
         /QWzvC8kKqirUGuQMFuK7uTfEF9dK5vzvmElNbUWItcB5n/4aVi5EHN+OaPH1IVGGUzd
         +HiniF/XPwymKVXdB2CPqbN5o+5Sk5VWqHI1IVqsj/GLSAu4f0E1y0DGQAnQgEmnEJ2F
         LnfCMsSc1gBset6S7DwGSjZ8XsdSsqnqjdxYlew3WEJJbph7dvuzo0g9nPeaaPvpaYGE
         3Tmg==
X-Gm-Message-State: AA+aEWYiYdjIy+ImD2YSBzfUO1QbsCWHOgoVHzJ4TOIuRoJymjASlxkm
        dmgy+jPHAuDj9IDpFazPnDK2QQ3tSiLi7S351EU=
X-Google-Smtp-Source: AFSGD/UQB9TByUGNaRYkNYcGpJIrRfq7G+I0GDcj4uef51UlPuF7/1jrzrh54xlBNV6lWyo1NcMPchkNGR5wZXEoZuk=
X-Received: by 2002:a05:660c:58a:: with SMTP id g10mr9484104itk.167.1544432187069;
 Mon, 10 Dec 2018 00:56:27 -0800 (PST)
MIME-Version: 1.0
References: <000000000000311344057c4b6cc3@google.com> <CAG_fn=WbOyQ0R35_OhCLjxTTnV7z=u5xnjtm2gXtiSRdHbDz=A@mail.gmail.com>
 <20181206110634.GA9056@localhost.localdomain>
In-Reply-To: <20181206110634.GA9056@localhost.localdomain>
From: Xin Long <lucien.xin@gmail.com>
Date: Mon, 10 Dec 2018 17:56:14 +0900
Message-ID: <CADvbK_f-F9hp8HwxCp8og8FmEf_4E3=HOr8DPq3sEmRA8wGepg@mail.gmail.com>
Subject: Re: KMSAN: kernel-infoleak in sctp_getsockopt
To: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
Cc: Alexander Potapenko <glider@google.com>,
        syzbot+ad5d327e6936a2e284be@syzkaller.appspotmail.com,
        davem <davem@davemloft.net>, LKML <linux-kernel@vger.kernel.org>,
        linux-sctp@vger.kernel.org, network dev <netdev@vger.kernel.org>,
        Neil Horman <nhorman@tuxdriver.com>,
        syzkaller-bugs <syzkaller-bugs@googlegroups.com>,
        Vlad Yasevich <vyasevich@gmail.com>
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, Dec 6, 2018 at 8:08 PM Marcelo Ricardo Leitner
<marcelo.leitner@gmail.com> wrote:
>
> On Thu, Dec 06, 2018 at 11:36:08AM +0100, Alexander Potapenko wrote:
> > On Wed, Dec 5, 2018 at 8:31 PM syzbot
> > <syzbot+ad5d327e6936a2e284be@syzkaller.appspotmail.com> wrote:
> > >
> > > Hello,
> > >
> > > syzbot found the following crash on:
> > >
> > > HEAD commit:    fffec98ae2a6 net: proper support for CONFIG_GENERIC_C=
SUM o..
> > > git tree:       https://github.com/google/kmsan.git/master
> > > console output: https://syzkaller.appspot.com/x/log.txt?x=3D12e84a474=
00000
> > > kernel config:  https://syzkaller.appspot.com/x/.config?x=3D56b48b46d=
afe4516
> > > dashboard link: https://syzkaller.appspot.com/bug?extid=3Dad5d327e693=
6a2e284be
> > > compiler:       clang version 8.0.0 (trunk 343298)
> > > syz repro:      https://syzkaller.appspot.com/x/repro.syz?x=3D103cd22=
5400000
> > >
> > > IMPORTANT: if you fix the bug, please add the following tag to the co=
mmit:
> > > Reported-by: syzbot+ad5d327e6936a2e284be@syzkaller.appspotmail.com
> > >
> > > 8021q: adding VLAN 0 to HW filter on device team0
> > > 8021q: adding VLAN 0 to HW filter on device team0
> > > 8021q: adding VLAN 0 to HW filter on device team0
> > > 8021q: adding VLAN 0 to HW filter on device team0
> > > =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
> > > BUG: KMSAN: kernel-infoleak in _copy_to_user+0x19a/0x230 lib/usercopy=
.c:33
> > > CPU: 1 PID: 8164 Comm: syz-executor2 Not tainted 4.20.0-rc3+ #95
> > > Hardware name: Google Google Compute Engine/Google Compute Engine, BI=
OS
> > > Google 01/01/2011
> > > Call Trace:
> > >   __dump_stack lib/dump_stack.c:77 [inline]
> > >   dump_stack+0x32d/0x480 lib/dump_stack.c:113
> > >   kmsan_report+0x12c/0x290 mm/kmsan/kmsan.c:683
> > >   kmsan_internal_check_memory+0x32a/0xa50 mm/kmsan/kmsan.c:743
> > >   kmsan_copy_to_user+0x78/0xd0 mm/kmsan/kmsan_hooks.c:634
> > >   _copy_to_user+0x19a/0x230 lib/usercopy.c:33
> > >   copy_to_user include/linux/uaccess.h:183 [inline]
> > >   sctp_getsockopt_local_addrs net/sctp/socket.c:5998 [inline]
> > >   sctp_getsockopt+0x15248/0x186f0 net/sctp/socket.c:7477
> > >   sock_common_getsockopt+0x13f/0x180 net/core/sock.c:2937
> > >   __sys_getsockopt+0x489/0x550 net/socket.c:1939
> > >   __do_sys_getsockopt net/socket.c:1950 [inline]
> > >   __se_sys_getsockopt+0xe1/0x100 net/socket.c:1947
> > >   __x64_sys_getsockopt+0x62/0x80 net/socket.c:1947
> > >   do_syscall_64+0xcf/0x110 arch/x86/entry/common.c:291
> > >   entry_SYSCALL_64_after_hwframe+0x63/0xe7
> > > RIP: 0033:0x457569
> > > Code: fd b3 fb ff c3 66 2e 0f 1f 84 00 00 00 00 00 66 90 48 89 f8 48 =
89 f7
> > > 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f=
0 ff
> > > ff 0f 83 cb b3 fb ff c3 66 2e 0f 1f 84 00 00 00 00
> > > RSP: 002b:00007f4991886c78 EFLAGS: 00000246 ORIG_RAX: 000000000000003=
7
> > > RAX: ffffffffffffffda RBX: 0000000000000005 RCX: 0000000000457569
> > > RDX: 000000000000006d RSI: 0000000000000084 RDI: 0000000000000003
> > > RBP: 000000000072bf00 R08: 0000000020000140 R09: 0000000000000000
> > > R10: 0000000020001100 R11: 0000000000000246 R12: 00007f49918876d4
> > > R13: 00000000004c7d88 R14: 00000000004ce348 R15: 00000000ffffffff
> > >
> > > Uninit was stored to memory at:
> > >   kmsan_save_stack_with_flags mm/kmsan/kmsan.c:246 [inline]
> > >   kmsan_save_stack mm/kmsan/kmsan.c:261 [inline]
> > >   kmsan_internal_chain_origin+0x13d/0x240 mm/kmsan/kmsan.c:469
> > >   kmsan_memcpy_memmove_metadata+0x1a9/0xf70 mm/kmsan/kmsan.c:344
> > >   kmsan_memcpy_metadata+0xb/0x10 mm/kmsan/kmsan.c:362
> > >   __msan_memcpy+0x61/0x70 mm/kmsan/kmsan_instr.c:162
> > >   sctp_copy_laddrs net/sctp/socket.c:5901 [inline]
> > >   sctp_getsockopt_local_addrs net/sctp/socket.c:5967 [inline]
> > >   sctp_getsockopt+0x14f41/0x186f0 net/sctp/socket.c:7477
> > >   sock_common_getsockopt+0x13f/0x180 net/core/sock.c:2937
> > >   __sys_getsockopt+0x489/0x550 net/socket.c:1939
> > >   __do_sys_getsockopt net/socket.c:1950 [inline]
> > >   __se_sys_getsockopt+0xe1/0x100 net/socket.c:1947
> > >   __x64_sys_getsockopt+0x62/0x80 net/socket.c:1947
> > >   do_syscall_64+0xcf/0x110 arch/x86/entry/common.c:291
> > >   entry_SYSCALL_64_after_hwframe+0x63/0xe7
> > >
> > > Uninit was stored to memory at:
> > >   kmsan_save_stack_with_flags mm/kmsan/kmsan.c:246 [inline]
> > >   kmsan_save_stack mm/kmsan/kmsan.c:261 [inline]
> > >   kmsan_internal_chain_origin+0x13d/0x240 mm/kmsan/kmsan.c:469
> > >   kmsan_memcpy_memmove_metadata+0x1a9/0xf70 mm/kmsan/kmsan.c:344
> > >   kmsan_memcpy_metadata+0xb/0x10 mm/kmsan/kmsan.c:362
> > >   __msan_memcpy+0x61/0x70 mm/kmsan/kmsan_instr.c:162
> > >   sctp_copy_laddrs net/sctp/socket.c:5890 [inline]
> > >   sctp_getsockopt_local_addrs net/sctp/socket.c:5967 [inline]
> > >   sctp_getsockopt+0x14de8/0x186f0 net/sctp/socket.c:7477
> > >   sock_common_getsockopt+0x13f/0x180 net/core/sock.c:2937
> > >   __sys_getsockopt+0x489/0x550 net/socket.c:1939
> > >   __do_sys_getsockopt net/socket.c:1950 [inline]
> > >   __se_sys_getsockopt+0xe1/0x100 net/socket.c:1947
> > >   __x64_sys_getsockopt+0x62/0x80 net/socket.c:1947
> > >   do_syscall_64+0xcf/0x110 arch/x86/entry/common.c:291
> > >   entry_SYSCALL_64_after_hwframe+0x63/0xe7
> > >
> > > Uninit was created at:
> > >   kmsan_save_stack_with_flags mm/kmsan/kmsan.c:246 [inline]
> > >   kmsan_internal_poison_shadow+0x6d/0x130 mm/kmsan/kmsan.c:170
> > >   kmsan_kmalloc+0xa1/0x100 mm/kmsan/kmsan_hooks.c:186
> > >   __kmalloc+0x14c/0x4d0 mm/slub.c:3825
> > >   kmalloc include/linux/slab.h:551 [inline]
> > >   sctp_inet6addr_event+0x60e/0xbd0 net/sctp/ipv6.c:100
> > >   notifier_call_chain kernel/notifier.c:93 [inline]
> > >   __atomic_notifier_call_chain kernel/notifier.c:183 [inline]
> > >   atomic_notifier_call_chain+0x13d/0x240 kernel/notifier.c:193
> > >   inet6addr_notifier_call_chain+0x76/0x90 net/ipv6/addrconf_core.c:10=
7
> > >   ipv6_add_addr+0x2597/0x2890 net/ipv6/addrconf.c:1115
> > >   inet6_addr_add+0xc86/0x1c10 net/ipv6/addrconf.c:2912
> > >   inet6_rtm_newaddr+0x167e/0x3d20 net/ipv6/addrconf.c:4750
> > >   rtnetlink_rcv_msg+0x1148/0x1540 net/core/rtnetlink.c:4947
> > >   netlink_rcv_skb+0x394/0x640 net/netlink/af_netlink.c:2477
> > >   rtnetlink_rcv+0x50/0x60 net/core/rtnetlink.c:4965
> > >   netlink_unicast_kernel net/netlink/af_netlink.c:1310 [inline]
> > >   netlink_unicast+0x1699/0x1740 net/netlink/af_netlink.c:1336
> > >   netlink_sendmsg+0x13c7/0x1440 net/netlink/af_netlink.c:1917
> > >   sock_sendmsg_nosec net/socket.c:621 [inline]
> > >   sock_sendmsg net/socket.c:631 [inline]
> > >   ___sys_sendmsg+0xe3b/0x1240 net/socket.c:2116
> > >   __sys_sendmsg net/socket.c:2154 [inline]
> > >   __do_sys_sendmsg net/socket.c:2163 [inline]
> > >   __se_sys_sendmsg+0x305/0x460 net/socket.c:2161
> > >   __x64_sys_sendmsg+0x4a/0x70 net/socket.c:2161
> > >   do_syscall_64+0xcf/0x110 arch/x86/entry/common.c:291
> > >   entry_SYSCALL_64_after_hwframe+0x63/0xe7
> > >
> > > Bytes 32-35 of 2100 are uninitialized
> > > Memory access of size 2100 starts at ffff888185d8b000
> > > Data copied to user address 0000000020001108
> > > =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
> > When a network device goes up and sctp_inetaddr_event() is called, it
> > allocates a partially initialized struct sctp_sockaddr_entry to hold
> > the newly created address.
> > The attached reproducer can be then used to read up to 8 uninit bytes
> > for each of the local addresses.
> > I guess the devices aren't created so often that this can pose any
> > security risk, but we probably still need to allocate this structure
> > with __GFP_ZERO.
>
> Agree. Thanks Alexander.
> Looks like this is the last/only place left with this issue.
This field is not really used by sctp, I will just set it to 0.

diff --git a/net/sctp/ipv6.c b/net/sctp/ipv6.c
index fc6c5e4bffa5..7f0539db5604 100644
--- a/net/sctp/ipv6.c
+++ b/net/sctp/ipv6.c
@@ -101,6 +101,7 @@ static int sctp_inet6addr_event(struct
notifier_block *this, unsigned long ev,
                if (addr) {
                        addr->a.v6.sin6_family =3D AF_INET6;
                        addr->a.v6.sin6_port =3D 0;
+                       addr->a.v6.sin6_flowinfo =3D 0;
                        addr->a.v6.sin6_addr =3D ifa->addr;
                        addr->a.v6.sin6_scope_id =3D ifa->idev->dev->ifinde=
x;
                        addr->valid =3D 1;

>
> > >
> > > ---
> > > This bug is generated by a bot. It may contain errors.
> > > See https://goo.gl/tpsmEJ for more information about syzbot.
> > > syzbot engineers can be reached at syzkaller@googlegroups.com.
> > >
> > > syzbot will keep track of this bug report. See:
> > > https://goo.gl/tpsmEJ#bug-status-tracking for how to communicate with
> > > syzbot.
> > > syzbot can test patches for this bug, for details see:
> > > https://goo.gl/tpsmEJ#testing-patches
> > >
> > > --
> > > You received this message because you are subscribed to the Google Gr=
oups "syzkaller-bugs" group.
> > > To unsubscribe from this group and stop receiving emails from it, sen=
d an email to syzkaller-bugs+unsubscribe@googlegroups.com.
> > > To view this discussion on the web visit https://groups.google.com/d/=
msgid/syzkaller-bugs/000000000000311344057c4b6cc3%40google.com.
> > > For more options, visit https://groups.google.com/d/optout.
> >
> >
> >
> > --
> > Alexander Potapenko
> > Software Engineer
> >
> > Google Germany GmbH
> > Erika-Mann-Stra=C3=9Fe, 33
> > 80636 M=C3=BCnchen
> >
> > Gesch=C3=A4ftsf=C3=BChrer: Paul Manicle, Halimah DeLaine Prado
> > Registergericht und -nummer: Hamburg, HRB 86891
> > Sitz der Gesellschaft: Hamburg
>
> > #ifndef DUMP_BUF_H
> > #define DUMP_BUF_H
> >
> > #ifndef DUMP_MIN_STRLEN
> > #define DUMP_MIN_STRLEN 1
> > #endif
> >
> > #ifndef DUMP_PARALLEL
> > #define DUMP_PARALLEL 0
> > #endif
> >
> > #ifndef DUMP_PRINT_BUF_ADDR
> > #define DUMP_PRINT_BUF_ADDR 0
> > #endif
> >
> > #ifndef DUMP_PRINT_HEX
> > #define DUMP_PRINT_HEX 0
> > #endif
> >
> > #ifndef DUMP_PRINT_STRING
> > #define DUMP_PRINT_STRING 0
> > #endif
> >
> > #if DUMP_PARALLEL
> > pthread_mutex_t out_mutex =3D PTHREAD_MUTEX_INITIALIZER;
> > #endif
> >
> > void dump_buf(unsigned char *buf, int len) {
> >   int i, nz =3D 0;
> >   for (i =3D 0; i < len; i++) {
> >     if (buf[i]) {
> >       nz =3D 1;
> >       break;
> >     }
> >   }
> >   if (!nz) {
> >     // The buffer is empty.
> >     return;
> >   } else {
> > #if DUMP_PARALLEL
> >     pthread_mutex_lock(&out_mutex);
> > #endif
> > #if DUMP_PRINT_BUF_ADDR
> >     fprintf(stderr, "nonempty buffer at %p\n", buf);
> > #endif
> > #if DUMP_PRINT_HEX
> >     for (i=3D0; i < len; i++) {
> >       if (buf[i]) {
> >         fprintf(stderr, "buf[%d]: %x (%p)\n", i, buf[i], *(void**)&buf[=
i]);
> >       }
> >     }
> > #endif // DUMP_PRINT_HEX
> > #if DUMP_PARALLEL
> >     pthread_mutex_unlock(&out_mutex);
> > #endif
> >   }
> > #if DUMP_PARALLEL
> >   pthread_mutex_lock(&out_mutex);
> > #endif
> > #if DUMP_PRINT_STRING
> >   for (i =3D 0; i < len; i++) {
> >     if (buf[i]) {
> >       int str_len =3D strlen(&buf[i]);
> >       // Short string pieces are too boring.
> >       if (str_len >=3D DUMP_MIN_STRLEN) {
> >         unsigned char *c;
> >         for (c =3D &buf[i]; c < &buf[i + str_len]; c++) {
> >           if ((*c > 127) || ((*c < 32) && (*c !=3D 10) && (*c !=3D 13))=
)  {
> >             *c =3D ' ';
> >             continue;
> >           }
> >         }
> >         // Dump the buffer.
> >         fprintf(stderr, "%s\n", &buf[i]);
> >       }
> >       i +=3D str_len;
> >     }
> >   }
> > #endif // DUMP_PRINT_STRING
> > #if DUMP_PARALLEL
> >   pthread_mutex_unlock(&out_mutex);
> > #endif
> > }
> >
> > #endif
>
> > #include <stdio.h>
> > #include <pthread.h>
> > #include <sys/types.h>          /* See NOTES */
> > #include <sys/socket.h>
> > #include <unistd.h>
> >
> > #define DUMP_PARALLEL 1
> > #define DUMP_PRINT_BUF_ADDR 1
> > #define DUMP_PRINT_STRING 1
> > #define DUMP_PRINT_HEX 1
> > #include "dump_buf.h"
> >
> > void *setsockopt_fn(void *arg) {
> >   int sock =3D (int)arg;
> >   struct sockaddr addr;
> >   memset(&addr, 0, sizeof(addr));
> >   addr.sa_family =3D 2;
> >   addr.sa_data[2] =3D 0xac;
> >   addr.sa_data[3] =3D 0x14;
> >   addr.sa_data[4] =3D 0x14;
> >   setsockopt(sock, 0x84, 0x6e, &addr, 0x10);
> > }
> >
> > #define BUFLEN (0x2c2)
> > void *getsockopt_fn(void *arg) {
> >   int sock =3D (int)arg;
> >   char buf[BUFLEN];
> >   memset(buf, 0, BUFLEN);
> >   int socklen =3D BUFLEN;
> >   getsockopt(sock, 0x84, /*SCTP_GET_LOCAL_ADDRS*/0x6d, buf, &socklen);
> >   dump_buf(&(buf[8]), 32);
> > }
> >
> > void do_work(int sock) {
> >   pthread_t t1, t2;
> >   for (int i =3D 0; i < 10; i++) {
> >     pthread_create(&t1, NULL, getsockopt_fn, (void*)sock);
> >     pthread_create(&t2, NULL, setsockopt_fn, (void*)sock);
> >     usleep(100);
> >   }
> > }
> >
> > int main(int argc, char *argv[]) {
> >   int res;
> >   int pid =3D fork();
> >   if (pid =3D=3D 0) {
> >     int sock =3D socket(0x2, 0x1, 0x84);
> >     do_work(sock);
> >   }
> >   sleep(10);
> >   return 0;
> > }
>
