Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 06 Dec 2018 08:52:06 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id F3A0358052C;
	Wed,  5 Dec 2018 04:38:01 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 05 Dec 2018 04:38:01 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AjfrenhRiOJ5HgCjs7WWeRkutn9psv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YBGCt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZAo2y?=
 =?us-ascii?q?cZYBAOgPPehWrIfyqEcBrQCmBQSuH+7v1iNEi2Xq0aEmz+gtDQfL1xEgEdIUt3?=
 =?us-ascii?q?TUqc34OqATUe+pzKnH1yvMb/dL0jny7IjIdg4uoeuJXb1qd8ra1E4iFwbdjlqO?=
 =?us-ascii?q?soHqITeV1uATvGiB6upvT+Svh3Qmqw5suDSg3Nosh5DPi4kIyV7E7T10zJgpKd?=
 =?us-ascii?q?C8UkJ3fNCpHIVKuy2HNIZ6XtkuTmBqtSoi1LEKpZC2cDIXxJg63RLSaeGLf5KV?=
 =?us-ascii?q?7h/lSe2fOy13hGh/d7K6nxuy8Vavyun7VsSszlZKoTRKksPWunAOyRPT8M6HRe?=
 =?us-ascii?q?V5/ku73jaPzQ/T5vlFIUAyi6XbN4YszqAsmpcXq0jPAyH7lFvsgKOLdUgo5vKk?=
 =?us-ascii?q?5uXlb7n+o5+TLY50igXwMqQ0ncy/BPw1MgwPX2id5OS926Tv/U7nT7VQiP05jK?=
 =?us-ascii?q?3ZvIndJcUVoK62HRVV35096xawETimys4UnXoZI1JffhKIkYzpN0vJIPDiAvez?=
 =?us-ascii?q?m06snytzx/DaIr3hBY3ALnzCkLfiY7lx8UFdyBcowNBb5pJUDKwBIf3pVk/wst?=
 =?us-ascii?q?zYEgE2Mwiuz+n7D9V905sUWXiTDa+BLKPSrViI6/ovI+aWZY8VpCzyK/8/6/7u?=
 =?us-ascii?q?kH82g1kdfaay0JsTaXC4GOlmIkqDbXrthNcBDXkFvg4kQOP2j12CVCZZZ2yuUK?=
 =?us-ascii?q?Ik+jE7FIWmAJ/BRoCqnrONxiS7HppQZmBADVCBCnPod4SCW/cRZyOeOM5hkjoY?=
 =?us-ascii?q?Vbe/T48tzw2htAj/y7B/NOrb5jUYtY7/1Nhy/+Dcjwoy9TxzD8SeyW2NVXt7nm?=
 =?us-ascii?q?ETSj8y3aB/p1F9y1iZ3ah5hfxYCcJc5/dTXggmMp7cyvRwC8ruVQLZYteJVFGm?=
 =?us-ascii?q?T82lAT4rSNI92dsOY0dnFNWkgRDOxC6qA74Tl7yWC5046KPc337tJ8ljz3bKzr?=
 =?us-ascii?q?Uuj14jQsFXL22pmrZ/9xTPB47Oi0iWiryldboC0yLX9GeM12yOvFpGXw52VqnF?=
 =?us-ascii?q?WXMfZk7Srdni4kPCTrmuCakoMwdbyM6CLLdKZcPtjVlcWPjjP9HeaXqrm2isHR?=
 =?us-ascii?q?aI2q+MbI3ydmoAxirdFlYLnxoT/XmcMwg+HTmuo2TFATxqFFLvZV7s8OZkpHO6?=
 =?us-ascii?q?SE800x+Fb0l727Wp/R4VgOSWS+kP0bIcpCchtzJ0EU6h39LXDtqAoBZhfKVcYN?=
 =?us-ascii?q?8n/FdLz2XZtxZ5PpyhKaBiiUUTcwB2v0PoyhV2BZ9MkcksrHM20gVyLbiU309G?=
 =?us-ascii?q?dzOdxZrwIKHYKnHu/BCzbK7bwkvR0NKI9aYA9vs5q0/vsxq0FkU/6Xpn1dpV03?=
 =?us-ascii?q?yC5pjRCAoSUJTxUls49hRgprHaZDU96J3Q1XF2Laa0tTrC0cozBOQ50hagY8tf?=
 =?us-ascii?q?MKScGQ7yDs0WHdShJPYrmlipdB0EOu9S+bUwP8OncfuGxaGqMPxhnDKgkWRI/o?=
 =?us-ascii?q?R93liQ+Cp7T+7Cx4wFzO2A3gubSzf8i0+sstr2mY9Yfz4SBHewyS/+CI5XeKJy?=
 =?us-ascii?q?Z4cLBX6yLMKtwtVxmoDiW2Rf9F6lHF4G3M6peRyPb13yxwFQ1EIXoWC5liu81T?=
 =?us-ascii?q?B7jzYprq+H1izU3+vibAYHOnJMRGR6jVbsIJK4jtAAUEizcggpkgCo5UL7x6hd?=
 =?us-ascii?q?uaR+IHPfQUZOfyjqMW5iVrG8uaaFY85K8JkoqzlYUPygYVCGTb7wuxka3Dn5H2?=
 =?us-ascii?q?tdxzA7cCumuo7jkBx5i2KdLXBzo2TfecxrwRff5drcReNe3zYcRSl4jyXXCUa4?=
 =?us-ascii?q?P9Wz4dqUkJLDuPikV229Tp1TbTXrzYSYuSq7/2JqBgezn/Kymt3hCgU61S7719?=
 =?us-ascii?q?93VSTHthr8Y4/r17ikPuJjZEVnGFj8689iEIFkjoQwnI0Q2WQdhpiN/noIi2bz?=
 =?us-ascii?q?Pc9b2aLjdnUNQzELzsXR4Ajk3k1jM32Iy5j4VnWb3stued26bnkK1SI66sBAEL?=
 =?us-ascii?q?2U46BcnStpvlq4qhrcYf18njce0/Qi8nAbjP8SuAox0CqdGKsdEldCPSzjjBmI?=
 =?us-ascii?q?69G+rKNKZGega7Sw1Ux+ncy/A7GGuA1TRHH5epI6Fy9q8sp/KE7M0GH06oz8ZN?=
 =?us-ascii?q?nQatcTugeVkhjaiehVNYkxluELhSd8PWL9vHsly/M0jBB03JG6upSHJHtp/K6j?=
 =?us-ascii?q?HhFYMTj1bdsJ+j7xlaZegtqW34e3E5p6ADoLW5/oTe+yHDIWqPTqLAKOEDw6qn?=
 =?us-ascii?q?eGFrvTBw6f6EF6r33RF5CnLW2YJH4czd96XhmSOFRfgBwIXDU9hpM5FBqlxMn/?=
 =?us-ascii?q?f0di/DwR+kT0qhhRyuJrKhn/VH3QpByzZzcwSZifKgdW7w5Y60fUN8ye8vx8Hy?=
 =?us-ascii?q?VC8pK9qwyNL3SRZx5UAmERRkyEG1fjM6Gu5NnH7uiYH/e+IOHIYbmUsuxeUPGI?=
 =?us-ascii?q?xZ2034ti/jaMMNiPP3Z4A/063EpDQW52G8DDlzoTTCwXkjrHb9SHqxek5i13ss?=
 =?us-ascii?q?e//ezrWA3x5IuPCLhSMdR19xC1m6eDMOGQizhjKTZFzZMB3nvIyLkZ3F4PhCBi?=
 =?us-ascii?q?bTitEbIctSHTSKLcgLNYDxkeaylrLstH87o83hVROc7ckt76zKN4geUvC1hbVV?=
 =?us-ascii?q?3tgMWpZc0RLmG5NVPHAluLNbucKT3KxcH3fb2zSblKgOpIsB2wvC6RE1X/MTSb?=
 =?us-ascii?q?iznpSxevPPlQjCGaORxSop2yfgxxBmjjUt3mbAa2MNt2jT0w3L01iWnGNW8aMT?=
 =?us-ascii?q?hgbUxNqqec4j9fgvV6A2ZB9GZqLfGYmyaF6OnVMpYXvuFtAiRxluJa5mw1yrpV?=
 =?us-ascii?q?7C5eQvx1lzDfrtpvo1Ggj+mOxSBrUBtIqjZXmo2LuV9uNrne9plFCj74+0co7G?=
 =?us-ascii?q?adQy4Dv9x9Dcfz8/RK0sDTvKbyLipStdPe+I0XAM2Ce+ydN390FBviGDfZCEMo?=
 =?us-ascii?q?STqmL2TWgQQJlemf3nCRqpUgr5Hq3psCDLZGAg9mXsgGA1hoSYRRaKx8WSkpxP?=
 =?us-ascii?q?vC1JYF?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ACAAAqxgdch0O0hNFkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUgQBAQEBCwGCAIFrJ4xxiy+CDRSXOIFxFhgTAYdSIjUIDQEDAQE?=
 =?us-ascii?q?BAQEBAgETAQEBCA0JCCkvgjYkAYJhAQEBAQIBAQJ2BgkBAQoOCgklAwwBRwYTB?=
 =?us-ascii?q?YMcgXoHAQWmKoorjB4XgX+DJX6EW4YBAokpgXmFX4Roim0JkVqRL5h+gUcBggt?=
 =?us-ascii?q?NHxmDJ4IkAxeOMSsBMoEEAQEBiFGCTAEB?=
X-IPAS-Result: =?us-ascii?q?A0ACAAAqxgdch0O0hNFkGgEBAQEBAgEBAQEHAgEBAQGBUgQ?=
 =?us-ascii?q?BAQEBCwGCAIFrJ4xxiy+CDRSXOIFxFhgTAYdSIjUIDQEDAQEBAQEBAgETAQEBC?=
 =?us-ascii?q?A0JCCkvgjYkAYJhAQEBAQIBAQJ2BgkBAQoOCgklAwwBRwYTBYMcgXoHAQWmKoo?=
 =?us-ascii?q?rjB4XgX+DJX6EW4YBAokpgXmFX4Roim0JkVqRL5h+gUcBggtNHxmDJ4IkAxeOM?=
 =?us-ascii?q?SsBMoEEAQEBiFGCTAEB?=
X-IronPort-AV: E=Sophos;i="5.56,317,1539673200"; 
   d="scan'208";a="53916348"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 05 Dec 2018 04:38:00 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727780AbeLEMh5 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 5 Dec 2018 07:37:57 -0500
Received: from ozlabs.org ([203.11.71.1]:47883 "EHLO ozlabs.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726149AbeLEMh4 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 5 Dec 2018 07:37:56 -0500
Received: from authenticated.ozlabs.org (localhost [127.0.0.1])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by ozlabs.org (Postfix) with ESMTPSA id 438ytd6ssyz9s3C;
        Wed,  5 Dec 2018 23:37:45 +1100 (AEDT)
Authentication-Results: ozlabs.org; dmarc=none (p=none dis=none) header.from=ellerman.id.au
From: Michael Ellerman <mpe@ellerman.id.au>
To: Mike Rapoport <rppt@linux.ibm.com>
Cc: Andrew Morton <akpm@linux-foundation.org>,
        Arnd Bergmann <arnd@arndb.de>,
        Benjamin Herrenschmidt <benh@kernel.crashing.org>,
        "David S. Miller" <davem@davemloft.net>,
        Guan Xuetao <gxt@pku.edu.cn>,
        Greentime Hu <green.hu@gmail.com>,
        Jonas Bonn <jonas@southpole.se>,
        Michal Hocko <mhocko@suse.com>,
        Michal Simek <monstr@monstr.eu>,
        Mark Salter <msalter@redhat.com>,
        Paul Mackerras <paulus@samba.org>,
        Rich Felker <dalias@libc.org>,
        Russell King <linux@armlinux.org.uk>,
        Stefan Kristiansson <stefan.kristiansson@saunalahti.fi>,
        Stafford Horne <shorne@gmail.com>,
        Vincent Chen <deanbo422@gmail.com>,
        Yoshinori Sato <ysato@users.sourceforge.jp>,
        linux-arm-kernel@lists.infradead.org, linux-c6x-dev@linux-c6x.org,
        linux-kernel@vger.kernel.org, linux-mm@kvack.org,
        linux-sh@vger.kernel.org, linuxppc-dev@lists.ozlabs.org,
        openrisc@lists.librecores.org, sparclinux@vger.kernel.org
Subject: Re: [PATCH v2 1/6] powerpc: prefer memblock APIs returning virtual address
In-Reply-To: <20181204171327.GL26700@rapoport-lnx>
References: <1543852035-26634-1-git-send-email-rppt@linux.ibm.com> <1543852035-26634-2-git-send-email-rppt@linux.ibm.com> <87woophasy.fsf@concordia.ellerman.id.au> <20181204171327.GL26700@rapoport-lnx>
Date: Wed, 05 Dec 2018 23:37:44 +1100
Message-ID: <87mupkkv3b.fsf@concordia.ellerman.id.au>
MIME-Version: 1.0
Content-Type: text/plain
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Mike Rapoport <rppt@linux.ibm.com> writes:
> On Tue, Dec 04, 2018 at 08:59:41PM +1100, Michael Ellerman wrote:
>> Hi Mike,
>> 
>> Thanks for trying to clean these up.
>> 
>> I think a few could be improved though ...
>> 
>> Mike Rapoport <rppt@linux.ibm.com> writes:
>> > diff --git a/arch/powerpc/kernel/paca.c b/arch/powerpc/kernel/paca.c
>> > index 913bfca..fa884ad 100644
>> > --- a/arch/powerpc/kernel/paca.c
>> > +++ b/arch/powerpc/kernel/paca.c
>> > @@ -42,17 +42,15 @@ static void *__init alloc_paca_data(unsigned long size, unsigned long align,
>> >  		nid = early_cpu_to_node(cpu);
>> >  	}
>> >  
>> > -	pa = memblock_alloc_base_nid(size, align, limit, nid, MEMBLOCK_NONE);
>> > -	if (!pa) {
>> > -		pa = memblock_alloc_base(size, align, limit);
>> > -		if (!pa)
>> > -			panic("cannot allocate paca data");
>> > -	}
>> > +	ptr = memblock_alloc_try_nid_raw(size, align, MEMBLOCK_LOW_LIMIT,
>> > +					 limit, nid);
>> > +	if (!ptr)
>> > +		panic("cannot allocate paca data");
>>   
>> The old code doesn't zero, but two of the three callers of
>> alloc_paca_data() *do* zero the whole allocation, so I'd be happy if we
>> did it in here instead.
>
> I looked at the callers and couldn't tell if zeroing memory in
> init_lppaca() would be ok.
> I'll remove the _raw here.
  
Thanks.

>> That would mean we could use memblock_alloc_try_nid() avoiding the need
>> to panic() manually.
>
> Actual, my plan was to remove panic() from all memblock_alloc* and make all
> callers to check the returned value.
> I believe it's cleaner and also allows more meaningful panic messages. Not
> mentioning the reduction of memblock code.

Hmm, not sure.

I see ~200 calls to the panicking functions, that seems like a lot of
work to change all those.

And I think I disagree on the "more meaningful panic message". This is a
perfect example, compare:

	panic("cannot allocate paca data");
to:
	panic("%s: Failed to allocate %llu bytes align=0x%llx nid=%d from=%pa max_addr=%pa\n",
	      __func__, (u64)size, (u64)align, nid, &min_addr, &max_addr);

The former is basically useless, whereas the second might at least give
you a hint as to *why* the allocation failed.

I know it's kind of odd for a function to panic() rather than return an
error, but memblock is kind of special because it's so early in boot.
Most of these allocations have to succeed to get the system up and
running.

cheers
