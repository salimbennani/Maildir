Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 06 Dec 2018 09:02:13 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 10D98580375;
	Wed,  5 Dec 2018 17:00:54 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 05 Dec 2018 17:00:53 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AwXQGZBEp6HvuldihTm1Km51GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75osi+bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJWCNBDIGz?=
 =?us-ascii?q?YYsBAeQCIOhWsZXyp0AWrRa8HgSsGP/jxyVUinPqwaE30eIsGhzG0gw6GNIOtW?=
 =?us-ascii?q?zZotDrO6gMSuC+0bfFzTLEb/NVxDzw74vIfQ4/rvGXQb1wds3RyUo0GgzZjlWQ?=
 =?us-ascii?q?s4vlPzaU1uQQtmiX9e1gVfigi2M+rQx6vzahxsApiobTh4IVzEjJ9SZnz4YvI9?=
 =?us-ascii?q?23Vkp7bcSjEJtKuCGXMZZ9TMA6Q2xwpio21rkLtYSmcCUE1pgr3QPTZv+bf4SS?=
 =?us-ascii?q?4x/uVv6dLSlkiH9hYr6yhBa//VK+xuHhUsS4yktGoyhbntTKq3sDzQbc6tKdRf?=
 =?us-ascii?q?t45kqh2SiA1wTU6uxcP0A0mrTUK4Q7zr4ziJUTq0LDETHymEnsi6+WbEok9vCp?=
 =?us-ascii?q?6+ThfLrmuoeRO5Fohgz6KKgih8KyDfoiPgQTXGWX5f6w2bzh8EHhRbVFlPw2kq?=
 =?us-ascii?q?3XsJDAIsQbo7a0AwtU0oYl9ha+AC6q0NcGknkdKlJKZhaHg5HuO1DAJvD3E+2/?=
 =?us-ascii?q?jk+ykDdk2f/GJKftApbTIXjZlrfuY7J951RbyAopwtBT/4hUBa0ZIPLvRk/xs8?=
 =?us-ascii?q?TVDhs4Mwy33enrEtp81p4FVGKLA6+ZNr7SsFCS6uIuJemMeJEauDLnJ/c54P7u?=
 =?us-ascii?q?iGczmUUBcqmxwZsXdHe4E+xmI0qDYHrsns0OEWAQsgo+UezlkluCUTFIana2Xq?=
 =?us-ascii?q?I84Cw7CY28AYfCQICtnKKO3COhEpJKYWBGD0iGEW30eIWcR/cMdCWSL9djkjwD?=
 =?us-ascii?q?S7etUYwh1RaotA/8zLpqNe7U+iwetZL+29l5/ezTlRcu9TNqC8SRyX2CT2Zxnm?=
 =?us-ascii?q?kQXT85wLh/oVBhyleEyaV3medYFdxU5/NKSAs6L4TTz+5hBtD2WwLBeMqJSVm8?=
 =?us-ascii?q?TtWnBzExUsw+w9sUb0lhHNWiiwjJ3zC2DL8Ni7yLGJs0/7rf33frIcZx0XLG1K?=
 =?us-ascii?q?g7gFkgTctCLmmmhq959wjOCI/FiUSZl6C2dasC2C7B7nuMzW2LvEtASg5/Tb3F?=
 =?us-ascii?q?XWwDZkvRtdn2+1nNT6GwBrg9MgtO08iCKrBUZd3villGQPTjONHaY2+qn2ewBB?=
 =?us-ascii?q?CIxq6DbYbwemUd2jndB1YAkwwJ4XmGMg0+DD+7o23CFDxuCU7vY0T0/OZjsny7?=
 =?us-ascii?q?UFE7wxuKb0J70bq14QAahfqHRvMX37IEvjohqjpuEFa82dLWF8SPpw57cKpAZt?=
 =?us-ascii?q?M95U9N1XjFuAxlIpygM6dii0YCcwR2ukPu0Al3CoVAkMQwsHMm1g1yKbic0FNA?=
 =?us-ascii?q?cTOY0ov9OrnWKmn04RCuZLTa2lDY0NaK5KgP7O40pEnkvAGsDkAi6Wlo08FJ03?=
 =?us-ascii?q?uA4ZXHFBAdUZbvXUc46Rd7p6vWbTIg54zJz3JsN6q0sjjc298yAOslyxCgf8pQ?=
 =?us-ascii?q?Ma+eFQ/yFdEaCNaqKOAwh1epaRcENvhI9KEoJ8Oma+eG2KmzMedggTKql3hI7J?=
 =?us-ascii?q?p800KM7SV8TOHI0o0Bw/GZ2AuHSjj9gE2gssDxhYBLezUSEnCjxijjAY5bfrdy?=
 =?us-ascii?q?cpoTCWeyP823wc1zh4TsW3FE7lGjHU4J2MizdRqUcVP9xwxQ2V0LrnO9nSu30i?=
 =?us-ascii?q?J7kysurqqZxyHOx+XidBwaOm9EXmVijFHsIZSqgNAeRkSncw8plB6970bg26db?=
 =?us-ascii?q?vLh/L3XUQUpQfyn2LntuU6uqurqZfs5P7oglsSFWUOS6fFCbRaTxoxoc0yP/AW?=
 =?us-ascii?q?RewCo3eC2tupX8hxZ6kn6SLG5vrHrFfsF93RXf68bGRf5S3ToGQzN0iSLNCVi/?=
 =?us-ascii?q?PNmp/NOUmInFsu2lU2KhV5tTcTTkzI+atSu743FqDgO7n/yphtLnFg062zfh19?=
 =?us-ascii?q?Z2TSXIsAr8Yo7z2qW6K+1neVNkBF3968p8AYx+loowhJcN2XkVnJmV/HwHkXvt?=
 =?us-ascii?q?PtVfw67xcH0NRTsTyd7P/AflwFFjLm6Ox4/hVXWS2Mpha8O6YmMLwC096c9KBb?=
 =?us-ascii?q?yQ7LxFmyt1v1W5oRjQYfh7gjcS1/8u5GQGjOEOvQon1j+dDawKHUlEISzskAyF?=
 =?us-ascii?q?79W/rKVUfmmja7ax21RlndC9Er6CuBpTV2jjepctBiJw6sR/MFTR0Hz88I3ked?=
 =?us-ascii?q?/Qbc4NuR2QiRvPk+9VKJcpnPoQmSVnIX79vWEiy+MjkRxu2pS6sJKGKmp3+qK5?=
 =?us-ascii?q?HwVYNib0Z84I/jHtjKBentuZ3oy1H5VhHCkLU4XsTf6yDD0SsvHnPR6UEDIgsn?=
 =?us-ascii?q?ebBabfHQiH5Uh9tX3PFJSrN2yNKHkd0NVvXx2dJE1ZgAAJUzQ2hJ85Fga2xMP/?=
 =?us-ascii?q?dEd1/Cwe5ln9qhFU0OJnKwH/UnvDpAevcjo0SoKQLB9I4QFZ/UvVLdaS7uFuHy?=
 =?us-ascii?q?Fb452hqhaCKneAagRMDGEJXFGEBl/5Mrmv49nA7/aXBu6kI/TSZrWOrPRUV+2U?=
 =?us-ascii?q?ypK3zotm4zGMO92PP3llEv07w1dDUmp/G8jDgDUPTCoXly3WYs6fpRe8/DB3r8?=
 =?us-ascii?q?+l/PTqXgLv+ZWAC79IPdpz/BC2hL+JN/SMiyZhNTZYypQMyGfIyLcB3V4SiCJu?=
 =?us-ascii?q?dzi3HbQDry7NS63QlbFNDx4GcCN+L89I76M63glQNs/XkNL11rhkjvErD1dJT0?=
 =?us-ascii?q?DumsasZcYSOWGyKEvHBFqXNLSBPTDE2dz3brimSbJOjORYrRmwuTeAHk/nPzSD?=
 =?us-ascii?q?kSTpVh+1PeFNiiGbIAJRuIWnfhlxDmjjScrsagenP99vkT023bo0i2vWNW4dND?=
 =?us-ascii?q?hwaV9CoqeM4iNYnPp/HXdM7n5kLemChiaY4PPUKpcQsft3HCt0k/hW72g9y7tQ?=
 =?us-ascii?q?9CtEXuB6mDPOrt5ypFGriumOxSBhUBpLqzZLgpqEvERiOarD8JlAVm3J/BYM7W?=
 =?us-ascii?q?WWFhQLqMFpCtzpu6BM1NfPkLj/JytF89LRroMgAJ2eBdiGOzIed1LDGTPYAREA?=
 =?us-ascii?q?RDjhfTXSjU1QnPyI81WFq5khsZnrntwFTboNEBQRF/UHEQxZG8YcKZN7RXtwjb?=
 =?us-ascii?q?mBkscM6WGWqBjXWdUfsJfaUP6bHfToLnCel7YSNDUSxratDokeLcXQ3EthIg15?=
 =?us-ascii?q?kYnREE3XXvhGojdmaw4ppQNK6ncoHT574F7sdg74uCxbLvWzhBNjz1ImOek=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AFAACCcwhch0O0hNFkGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUQYBAQELAYFVBYEPgQIng3qIGV+NOxSXOIFzEwEYDQYBgUuGCCI0CQ0?=
 =?us-ascii?q?BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmEBAQEBAgEBAiAEGQEBNwEEAQkBA?=
 =?us-ascii?q?QoLCQQCAiYCAgMfEgEFARwGARIFgxwBgXkIBQqaQzyKHXB8M4J2AQEFhykIEnm?=
 =?us-ascii?q?LExeBQD+DbjWDHgSBPwEBgyKCV4krB4cBUI9VCYIkhF+KPxiCKIc4h0+JCYFwg?=
 =?us-ascii?q?nmKZQIEAgQFAgUPIYElgg0zGggoCGwGgjUJghIMF38BCIdWhWAfMgEBgQMBAYg?=
 =?us-ascii?q?bgj4BAQ?=
X-IPAS-Result: =?us-ascii?q?A0AFAACCcwhch0O0hNFkGwEBAQEDAQEBBwMBAQGBUQYBAQE?=
 =?us-ascii?q?LAYFVBYEPgQIng3qIGV+NOxSXOIFzEwEYDQYBgUuGCCI0CQ0BAwEBAQEBAQIBE?=
 =?us-ascii?q?wEBAQgNCQgpIwyCNiQBgmEBAQEBAgEBAiAEGQEBNwEEAQkBAQoLCQQCAiYCAgM?=
 =?us-ascii?q?fEgEFARwGARIFgxwBgXkIBQqaQzyKHXB8M4J2AQEFhykIEnmLExeBQD+DbjWDH?=
 =?us-ascii?q?gSBPwEBgyKCV4krB4cBUI9VCYIkhF+KPxiCKIc4h0+JCYFwgnmKZQIEAgQFAgU?=
 =?us-ascii?q?PIYElgg0zGggoCGwGgjUJghIMF38BCIdWhWAfMgEBgQMBAYgbgj4BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,320,1539673200"; 
   d="scan'208";a="65536929"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 05 Dec 2018 17:00:52 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728748AbeLFBAt (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 5 Dec 2018 20:00:49 -0500
Received: from mail-yb1-f195.google.com ([209.85.219.195]:35179 "EHLO
        mail-yb1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727358AbeLFBAt (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 5 Dec 2018 20:00:49 -0500
Received: by mail-yb1-f195.google.com with SMTP id z2-v6so9807263ybj.2
        for <linux-kernel@vger.kernel.org>; Wed, 05 Dec 2018 17:00:48 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=chromium.org; s=google;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=QnjHZKhyAx3sksD1sr0ATyG8f0Nyf47H3LTdhjZMYFg=;
        b=i6T4SG6jtxuH0WKI9P5a0SCWCpZx+0qDN1d8GHRmi0+Lzp8Bnxj8yeZkrK7SJh/AwU
         r2kyZBqBdWSm9m+FmFCR1QAFy8rBATqaS7a1gR8eU0kBk6tLFp+FQ7HHRtQRRyw2IBI4
         5F946ajOEy1+wOUHljPQkssRfJh5gx8PaT85Q=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=QnjHZKhyAx3sksD1sr0ATyG8f0Nyf47H3LTdhjZMYFg=;
        b=XDWIwYzff5QIfqax4zC3KEZGj89NOm2rwfq5m+8Yc+5uWxEkqrcM30Mb4B8G9iX5G8
         Yuadqzq8gVUSwRGwy2H3nkBz5GhYI8i6cEg4shbr2lxoxd9LcEOLeX1x5Zks53LdJT+4
         z0JrsmbndadsUF3HKRjiDDq5M+v2sWINV5x5TC+0CSEjjrKyECoKsp8a43GWzuO3KrC9
         oQl32PdOZhUnY7XasZJr4nih3EuqPXapg5qlS39z1q0kJSsFcTSm7vd34aMkHqXUdnaU
         mBIOYqVL7A1Um8zgdLuUTBD2mlOFNW5jR46erPAFCZzSXezNrYm05OQqVEEoVrb3Ofxh
         kq2Q==
X-Gm-Message-State: AA+aEWYEObnhh8J7SGW5XqXq605DQlVk/0RR3LnVQNXRm3GqdWwN5HB0
        ZV0L6sUs7hvDitQIBnA4YZ9+eR3tayA=
X-Google-Smtp-Source: AFSGD/XEzWSGoaoUWBRgEXv0AyJRZejU84OL7Fg9TCzZs0tVoxpo1gqlEhkl0LdEbwnHTDCDliJlpA==
X-Received: by 2002:a0d:c306:: with SMTP id f6mr4315064ywd.101.1544058047754;
        Wed, 05 Dec 2018 17:00:47 -0800 (PST)
Received: from mail-yb1-f172.google.com (mail-yb1-f172.google.com. [209.85.219.172])
        by smtp.gmail.com with ESMTPSA id n4sm7051408ywc.89.2018.12.05.17.00.46
        for <linux-kernel@vger.kernel.org>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Wed, 05 Dec 2018 17:00:46 -0800 (PST)
Received: by mail-yb1-f172.google.com with SMTP id x144so5646194ybg.10
        for <linux-kernel@vger.kernel.org>; Wed, 05 Dec 2018 17:00:46 -0800 (PST)
X-Received: by 2002:a81:2f0f:: with SMTP id v15mr27653659ywv.124.1544058045804;
 Wed, 05 Dec 2018 17:00:45 -0800 (PST)
MIME-Version: 1.0
References: <20181112171144.GI3645@cisco> <87efbqi1xa.fsf@xmission.com>
 <20181112185538.GK3645@cisco> <20181112192443.GL3645@cisco>
 <20181127232126.GA23658@cisco> <CAGXu5jLw0m8pG16u3huThNM2fYGjKoB2-5baUmg_FH6Z=L2SAg@mail.gmail.com>
 <CAGXu5jJaZAOzP1qFz66tYrtbuywqb+UN2SOA1VLHpCCOiYvYeg@mail.gmail.com>
 <87zhtthkuy.fsf@xmission.com> <CAGXu5jJv+TG8hovHi3Z5kTccz+Cx-keu=KZf032mCz2VRpc=Og@mail.gmail.com>
 <87k1ktqoe5.fsf@xmission.com>
In-Reply-To: <87k1ktqoe5.fsf@xmission.com>
From: Kees Cook <keescook@chromium.org>
Date: Wed, 5 Dec 2018 17:00:34 -0800
X-Gmail-Original-Message-ID: <CAGXu5jJgFrWajK5m8ev72DV9ueznLnbGV2-UGECnz0iZ_EFDUg@mail.gmail.com>
Message-ID: <CAGXu5jJgFrWajK5m8ev72DV9ueznLnbGV2-UGECnz0iZ_EFDUg@mail.gmail.com>
Subject: Re: siginfo pid not populated from ptrace?
To: "Eric W. Biederman" <ebiederm@xmission.com>,
        Linus Torvalds <torvalds@linux-foundation.org>
Cc: Tycho Andersen <tycho@tycho.ws>,
        Thomas Gleixner <tglx@linutronix.de>,
        Oleg Nesterov <oleg@redhat.com>,
        LKML <linux-kernel@vger.kernel.org>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Sat, Dec 1, 2018 at 7:04 AM Eric W. Biederman <ebiederm@xmission.com> wrote:
>
> Kees Cook <keescook@chromium.org> writes:
>
> > On Tue, Nov 27, 2018 at 8:44 PM Eric W. Biederman <ebiederm@xmission.com> wrote:
> >>
> >> Kees Cook <keescook@chromium.org> writes:
> >>
> >> > On Tue, Nov 27, 2018 at 4:38 PM, Kees Cook <keescook@chromium.org> wrote:
> >> >> On Tue, Nov 27, 2018 at 3:21 PM, Tycho Andersen <tycho@tycho.ws> wrote:
> >> >>> On Mon, Nov 12, 2018 at 12:24:43PM -0700, Tycho Andersen wrote:
> >> >>>> On Mon, Nov 12, 2018 at 11:55:38AM -0700, Tycho Andersen wrote:
> >> >>>> > I haven't manage to reproduce it on stock v4.20-rc2, unfortunately.
> >> >>>>
> >> >>>> Ok, now I have,
> >> >>>>
> >> >>>> seccomp_bpf.c:2736:global.syscall_restart:Expected getpid() (1493) == info._sifields._kill.si_pid (0)
> >> >>>> global.syscall_restart: Test failed at step #22
> >> >>>
> >> >>> Seems like this is still happening on v4.20-rc4,
> >> >>>
> >> >>> [ RUN      ] global.syscall_restart
> >> >>> seccomp_bpf.c:2736:global.syscall_restart:Expected getpid() (1901) == info._sifields._kill.si_pid (0)
> >> >>> global.syscall_restart: Test failed at step #22
> >> >>
> >> >> This fails every time for me -- is it still racey for you?
> >> >>
> >> >> I'm attempting a bisect, hoping it doesn't _become_ racey for me. ;)
> >> >
> >> > This bisects to here for me:
> >> >
> >> > commit f149b31557446aff9ca96d4be7e39cc266f6e7cc
> >> > Author: Eric W. Biederman <ebiederm@xmission.com>
> >> > Date:   Mon Sep 3 09:50:36 2018 +0200
> >> >
> >> >     signal: Never allocate siginfo for SIGKILL or SIGSTOP
> >> >
> >> >     The SIGKILL and SIGSTOP signals are never delivered to userspace so
> >> >     queued siginfo for these signals can never be observed.  Therefore
> >> >     remove the chance of failure by never even attempting to allocate
> >> >     siginfo in those cases.
> >> >
> >> >     Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
> >> >     Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
> >> >
> >> > They are certainly visible via seccomp ;)
> >>
> >> Well SIGSTOP is visible via PTRACE_GETSIGINFO.
> >>
> >> I see what is happening now.  Since we don't have queued siginfo
> >> we generate some as:
> >>                 /*
> >>                  * Ok, it wasn't in the queue.  This must be
> >>                  * a fast-pathed signal or we must have been
> >>                  * out of queue space.  So zero out the info.
> >>                  */
> >>                 clear_siginfo(info);
> >>                 info->si_signo = sig;
> >>                 info->si_errno = 0;
> >>                 info->si_code = SI_USER;
> >>                 info->si_pid = 0;
> >>                 info->si_uid = 0;
> >>
> >> Which allows last_signfo to be set,
> >> so despite not really having any siginfo PTRACE_GET_SIGINFO
> >> has something to return so does not return -EINVAL.
> >>
> >> Reconstructing my context that was part of removing SEND_SIG_FORCED
> >> so this looks like it will take a little more than a revert to fix
> >> this.
> >>
> >> This is definitely a change that is visible to user space.  The logic in
> >> my patch was definitely wrong with respect to SIGSTOP and
> >> PTRACE_GETSIGINFO.  Is there something in userspace that actually cares?
> >> AKA is the idiom that the test seccomp_bpf.c is using something that
> >> non-test code does?
> >
> > I think this would be needed by any ptracer that handled multiple
> > threads. It needs to figure out which pid stopped. I think it's worth
> > fixing, yes.
> >
> >> The change below should restore the old behavior.  I am just wondering
> >> if this is something we want to do.  siginfo is allocated with
> >> GFP_ATOMIC so if your machine is under memory pressure there is a real
> >> chance the allocation can fail.  Which would cause whatever is breaking
> >> now to break less deterministically then.
> >
> > I think memory pressure that would block a 128 byte GFP_ATOMIC
> > allocation would mean the system was about to seriously fall over.
> > Given the user-facing behavior change and that an existing test was
> > already checking for this means we need to fix it.
>
> That sounds good but it is all rubbish.
> A) It doesn't matter for tracing multiple processes because ptrace
>    only works on a single signal at a time.  AKA if by the time you
>    are calling PTRACE_GETSIGINFO you already know which process you are
>    working against.
> B) Not every signal includes si_pid so even if you didn't know who you
>    were talking to this would be an issue.
> C) For a non-rt signal we only every try and queue up a signal signal.
>    We don't even attempt to queue siginfo otherwise.

Fair enough, all true.

> So what is the real world use case?

A quick search didn't show anything I could find (looking for
combinations of PTRACE_GETSIGINFO and si_pid use around a SIGSTOP).
That doesn't mean it doesn't exist, though. The reason seccomp's
selftests are so extensive is because we've had some very
corner-case[1] bugs in real-world software.

> The most useful I can think of is the whole check if this tracer was the
> one who sent SIGSTOP.  But that is fundamentally unreliable because we
> only queue a single signal anyway.  We must to that to preserve
> compatibility for non-rt signals as otherwise there are cases we could
> queue the same signal twice.  So with two simultaneous SIGSTOPs it is a
> race condition which siginfo is made available.

Understood. However, the point of the seccomp test is for making sure
that the ordering of the controlled test gets us the right pattern of
events across a syscall interruption when seccomp is filtering. This
is about making sure nothing around the restart changes since this
could impact seccomp filters in the wild.

> Right now we are on the edge of letting test cases for debug
> infrastructure prevent obvious optimizations/improvements to the code.
> So if we can find something other than our seccomp_bpf.c test case that
> fails I am happy to go with the change I posted.  Otherwise I think we
> just need to fix seccomp_bpf.c.

I wouldn't call this "debug infrastructure": they are behavioral test
cases for seccomp, syscall, and ptrace interaction, and even this one
has found bugs (see the "FIXME" note a few lines down, that remains
unsolved[2] in arm32).

If this actually doesn't count as breaking userspace, then okay, sure,
I'll drop the sanity check in the seccomp selftest. But it feels wrong
to me.

-Kees

[1] 485a252a5559 ("seccomp: Fix tracer exit notifications during fatal signals")
[2] http://lkml.kernel.org/r/CAGXu5jKzif=vp6gn5ZtrTx-JTN367qFphobnt9s=awbaafwoUw@mail.gmail.com

--
Kees Cook
