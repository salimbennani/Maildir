Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 06 Dec 2018 08:55:11 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 458E6580433;
	Wed,  5 Dec 2018 08:02:13 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 05 Dec 2018 08:02:12 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AUn5h5hVaf84hsb4PlFf5ZpAEE1/V8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhCPvKdThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGo2y?=
 =?us-ascii?q?YYsRAeQcPuhYoYbyqEcTohS8CwasH/vvxz1Ti3/qwaE3yfgtHR3c0QA+Gd8FrX?=
 =?us-ascii?q?TarM/yNKcXSe271rPHzSvdYPNSxDzz9pLHcgw7rvGXXbJwcMzRwlQoGgPdlFqQ?=
 =?us-ascii?q?sozlMCmP2uQRqWeb8/BvVfmvi24mrQF8uSOvxsAoiobXmI0VzErI+jl+wIYwPN?=
 =?us-ascii?q?C1TlNwb928EJZIqS2WK497Ttk/T2xmpio20KAKtJ2ncCQQyZkqxQbTZvObf4SS?=
 =?us-ascii?q?/x7vSeScLS1miH55e7+znQu+/Eu9xuD6S8K6ykxFrjBfndnJrn0N1wLc6syASv?=
 =?us-ascii?q?Zl4Eeh1iiA1xrJ5uFHP080j6zbJIAlwrIqkZoTq0vDEjf3mEXwkqCWal0p9va0?=
 =?us-ascii?q?5+njeLnqu5GRO5Fuhg3jMakihtazDOU6PwQWWmiU4+W81Lnt/U3jR7VKi+U7kq?=
 =?us-ascii?q?3YsJDcOMQaqbe1AwxL3YY57RawETOm3M0fnXgJKlJKZgiHgpP3O1HBPv/4F+2z?=
 =?us-ascii?q?g1eynzdxwfDJILnhDo/KLnjZn7ftZax95FJEyAov0dBf4IpZCrUAIPLwRED9rt?=
 =?us-ascii?q?PZDgIiPgywwubnDsh914wEVWKOBK+ZLL3dsVuS6u0zJOmMYZcfuCzhJPg9+/7u?=
 =?us-ascii?q?kXg5lEcdfaaz3JsXdGq3HvN8L0WZfHrjmNEBEWgRswo6TezqjkCCUDFJa3azWa?=
 =?us-ascii?q?I8+i80CIa8AYjfQYCthaSL3D2nEZ1OemBGFleMHG/qd4WDRfgAciGSIshnkjwC?=
 =?us-ascii?q?UrisUIsh1RCotA/nxLtrNOvU+isEtZ390Nh5/fHclRY39TZsFcSSz3mNT31onm?=
 =?us-ascii?q?MPXzI5xrt/oUx6yleAy6R4meZXFd5I6vNNUwc6M4PczuNgB9DzXALBYsmGSFK8?=
 =?us-ascii?q?Ttq6BjExS8o7w8USbEZlB9WikhfD0jKpA7APkbyHHpg08qPG0Hj3KMZw0HLG1K?=
 =?us-ascii?q?gnj1k7TcpDL2ymhqhj9wfNA47FiVmWl6Gvda4Exi7C6H+DzXaSvEFfSAN/TL/K?=
 =?us-ascii?q?XW4BaUfMrdT2/EXCT6SwBrQhNQdBzc2CKq5OatDyiVVGRfHjOMnRYm6rmmewAw?=
 =?us-ascii?q?qIya2IbIbwZ2od2yDdAlAekw8P5XaGKRQ+BiC5rm3DFjNuC0zgb1ns8eZkrnO7?=
 =?us-ascii?q?VVE7zweRYk1l1rq1/AMVhPOGR/MS2LIEpDkuqzFuEFmh2NLWDsKKpxB9c6VEfd?=
 =?us-ascii?q?M9/FBH2HrFtwx8O5ygKLxihl4ecghto0PizRJ3Cp9EkcgrqnMqwxF/KaaZ0FNH?=
 =?us-ascii?q?ajOZ0or8OrzRKmnu4h+vb7Ta1U3Z0NaT4q0P8ug3q03/vAG1EUov629o091L3H?=
 =?us-ascii?q?qT+JrLDBAeXonsUkkq7Rd6obLaYi4j547P0X1sMK+0siLN2t4zBeslzAqgcMlb?=
 =?us-ascii?q?MK+eCADyFMgaDdC0KOM2g1ipcg4EPOdK+a80IsOqbeeJ1LSqPeZghj2mi2tH7Z?=
 =?us-ascii?q?t50kKN8Sp8V+HJ04wEw/GewguISTP8gE29vcDwnIBOfSsSEXanySj4GI5RYbV/?=
 =?us-ascii?q?fZwKCWiyOcK33Mhxh5n3V35e6lGjHVIG1Na1dhWIa1zywBNf1V4QoXyhgia4yz?=
 =?us-ascii?q?10kzc0rquQxiDOwuLidAYZNW5PXmVtkVDsIY2shdAAQEeodxQplAei5Uvix6lb?=
 =?us-ascii?q?pb5zLmnJTUdTYij2KXpvUq+xtrqEfs5O54kksSRRUOSgf1+aTqTxrAcd0yPmB2?=
 =?us-ascii?q?Fe3iw0dym2upXlmBx3kGCdI2xprHraesFwwg3T5MfGSv5S3ToGRS94hifRBlWn?=
 =?us-ascii?q?O9mp/NOUl4rMs+ykVmKhUIFTfjfvzY+aqCS74mhqCwWln/+vgt3nDRQ60Sjj2t?=
 =?us-ascii?q?hqTyrIqwzwYovq16S8Ku9nekhoBFnh68t1AI1+k40whI0O1ngenJma4X0HkWLr?=
 =?us-ascii?q?O9VBxa3+dGYNRSIMw9PN4wjqwkxjImiJx4LkTHqdxMRhasK+YmMX3CI98s9LBL?=
 =?us-ascii?q?2V7LxCgSt6vF64oRjNbvh6mzcX0eEu52ICg+EVpAotyT2QArUTHUlbJyPgjRqJ?=
 =?us-ascii?q?4M6lrKVLemmva6O/21RkndCuF7yCpgBcWHDkepYtByNw78N/ME7S33338I3rZN?=
 =?us-ascii?q?7QbdcLvB2OjxjAl/RVKI42lvcSmSpnPmf9sWckyuEhixxuwIq6vJOGK2h2+KK5?=
 =?us-ascii?q?AxhYNiD6Zs8J+zHti7pekdiS34y1ApphHTALVoPyTf20CDISqejnNwGWHTInsH?=
 =?us-ascii?q?ibHr7fHRKF5EdisnLCCJSrN3CRJHkEwtRuXhidJEpDgA8KWDU2hII2FgevxMb5?=
 =?us-ascii?q?akd2+igR5kLkqhtL0u9oNQPwUmLBqwezcDs0VIKTLBlL7gFB+kfVN9aR7vloEi?=
 =?us-ascii?q?Fc/52hqhGNK2OBawRJC2EJRlKLB1T5Mray4tnA9vCSBvCiIPvWfbWOteteWu+I?=
 =?us-ascii?q?xJKoz4tm5iuMOd+JPnV4FP073UxDXX9iFsTdmjUPTTEXli3XY86aohe85jN4rs?=
 =?us-ascii?q?Sl/Pv3XwLv4JOFC6FOPtV35xC2naCDOvaQhClnKDZY1ZAMxX7SxLgcxl4SjC5u?=
 =?us-ascii?q?eCe3EbQdri7AV6bQmq5RDx4GZCJ/LspI76Qg3gZTPc7XkM/61rl9jvQtEVdKSU?=
 =?us-ascii?q?Thmt21ZcwNO2yyLk7HC12RNLuYJTzH2cX3YaKnRL1UjeVUsQCwuDmBH0/iODSD?=
 =?us-ascii?q?iyfmVxS1Pe5QiyGbOQRUuJuhfRZ1FWjjUNXmZwWnMN92iD0626E7imnWOm4cLz?=
 =?us-ascii?q?d8dVhArrmR7SNen/V+FHZN7ntjLemYhSmZ6/PUJYoRsftuGi50jf5V4Gwmy7tJ?=
 =?us-ascii?q?6yFJXPx0lzHUrt5rolGmlPGAyztnUBVUrDZLi5mGvUFjOaXf65lBVmzI/BML7W?=
 =?us-ascii?q?WMFRsKo8FpBcHou6BVmZDzk/fWIS1Ju+DF+8QdCtKcfMeOKnFnIwvvFz/ZFiMM?=
 =?us-ascii?q?VzvtPmba0R9zivaXo0WcsJU+4qTlhJMVSr5dHAgtH+gaAwJ5FcALO5d2WBs/lr?=
 =?us-ascii?q?qWgchO7n27+kqCDP5Gt4zKA6rBSc7kLyyU2PwdP0MF?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAADH9Qdch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2snjBKMDoINFJc4gXEUAQEYEwGHUyI0CQ0BAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQgNCQgpIwyCNiQBgmIBAgMBAjcGAQE3AQUJAQEKGAklAwwlAQUBHAYTBYMcg?=
 =?us-ascii?q?gIDApoDPIodgh+CdgEBBYcjCBKKcIEcghaEI4pciRGXRwcCkTcLGIlgh0+YVwY?=
 =?us-ascii?q?CCQcPIYElgg1NI4M8ghuDbYpTQDKBBQEBilwBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ANAADH9Qdch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?njBKMDoINFJc4gXEUAQEYEwGHUyI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCN?=
 =?us-ascii?q?iQBgmIBAgMBAjcGAQE3AQUJAQEKGAklAwwlAQUBHAYTBYMcggIDApoDPIodgh+?=
 =?us-ascii?q?CdgEBBYcjCBKKcIEcghaEI4pciRGXRwcCkTcLGIlgh0+YVwYCCQcPIYElgg1NI?=
 =?us-ascii?q?4M8ghuDbYpTQDKBBQEBilwBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,318,1539673200"; 
   d="scan'208";a="65449601"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 05 Dec 2018 08:02:10 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728393AbeLEQCF (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 5 Dec 2018 11:02:05 -0500
Received: from mail-qk1-f194.google.com ([209.85.222.194]:44817 "EHLO
        mail-qk1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727620AbeLEQCE (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 5 Dec 2018 11:02:04 -0500
Received: by mail-qk1-f194.google.com with SMTP id n12so12128792qkh.11
        for <linux-kernel@vger.kernel.org>; Wed, 05 Dec 2018 08:02:03 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=soleen.com; s=google;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=Q63NP6HHv8MmLXxuAIzKXrKWfuE1xKbiTqkCNXb9RGw=;
        b=AJblSxBh6qa0ivGrrvlx7jfgkSEqUZpnF5+m/gHsll81N+WTkvBL/+26tQ2C+MHKfG
         4TUfaRVpRRYK/OqnoQ+PmgCKzdqg+iX7IEEs8QQMsd4X2zYBJ4Mcs+Mw+BhS7fk/L4Mu
         I4bSjcxrFt7QofF1LhXElnIu3svO/RWDxm0Zfm8EDOri/0lavK5IqrheFyNrnHjGvwgh
         Mh5pxXS4yPM8jCp2tYR2vXmsNwJuUNvV/GvYrTV0EKwIm4bi6nVieDZRcURis8SFu0kX
         T2NGgFjzsFHi9eLTKm0dCID/XGv+xCPRCh4WOOtthnATSL+hgrSurmkG3f9j0f8357Jl
         Njug==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:cc:subject:message-id:references
         :mime-version:content-disposition:in-reply-to:user-agent;
        bh=Q63NP6HHv8MmLXxuAIzKXrKWfuE1xKbiTqkCNXb9RGw=;
        b=LNoP70Nr/ZoP/T0wFNjo6GJfVcPo6Hr8y3IQPpRffEwrqH+8YPzsvmLPM+nfGQjlwc
         +DYd0SiJ7Oi0ZPTT4y7diOva1HifCm274dRK/pq+v/t0f+jqtHyaP6UDmQil/7JBKVcz
         gKJCFlVW72cxLMf+w661DsqdmOFuryjYgZcvs+l713dX/49+snkjwxwWeZggDx9yrgOH
         j3++4pcpOVXw70n+5qhO4h8p4NKjWKtNrSo9AGlnlNHK3XiTTCRl9ClyEBHLsM/jfg1y
         MXLVE0SDPzYHyjNMfmZIPxR8w9PoeQCQPAjAyJMuy/hb67sFy+XAXBrKp4a5ioCiy+Pf
         jmng==
X-Gm-Message-State: AA+aEWZhCffhhyrQpAOZTRvqkCPmF1MqxH1Fq/uPQrwv/AJ5VaBkm3py
        AcBBu5Zf1++Zt/GV4/E1mGhiXw==
X-Google-Smtp-Source: AFSGD/WXASXlWCPCtfJgJzLkQJFNd+29a5HpSHF2hcpSNlm5NwF5/SumXGrVcWxucHB1Gx46wRG+pw==
X-Received: by 2002:a37:9181:: with SMTP id t123mr22081025qkd.187.1544025722700;
        Wed, 05 Dec 2018 08:02:02 -0800 (PST)
Received: from soleen.tm1wkky2jk1uhgkn0ivaxijq1c.bx.internal.cloudapp.net ([40.117.208.181])
        by smtp.gmail.com with ESMTPSA id p47sm14181745qta.36.2018.12.05.08.02.00
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Wed, 05 Dec 2018 08:02:01 -0800 (PST)
Date: Wed, 5 Dec 2018 16:01:59 +0000
From: Pavel Tatashin <pasha.tatashin@soleen.com>
To: Marc Zyngier <marc.zyngier@arm.com>
Cc: Will Deacon <will.deacon@arm.com>, catalin.marinas@arm.com,
        akpm@linux-foundation.org, rppt@linux.vnet.ibm.com,
        mhocko@suse.com, ard.biesheuvel@linaro.org, andrew.murray@arm.com,
        james.morse@arm.com, sboyd@kernel.org,
        linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org
Subject: Re: [PATCH v2 1/1] arm64: Early boot time stamps
Message-ID: <20181205160159.qetplipng3bhrgnb@soleen.tm1wkky2jk1uhgkn0ivaxijq1c.bx.internal.cloudapp.net>
References: <20181120144340.30201-1-pasha.tatashin@soleen.com>
 <20181120144340.30201-2-pasha.tatashin@soleen.com>
 <20181121174706.GC9801@arm.com>
 <20181121175841.if3vyumzvw3yoovi@soleen.tm1wkky2jk1uhgkn0ivaxijq1c.bx.internal.cloudapp.net>
 <86lg5lrygq.wl-marc.zyngier@arm.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <86lg5lrygq.wl-marc.zyngier@arm.com>
User-Agent: NeoMutt/20180716
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 18-11-22 14:14:29, Marc Zyngier wrote:
> On Wed, 21 Nov 2018 17:58:41 +0000,
> Pavel Tatashin <pasha.tatashin@soleen.com> wrote:
> > 
> > On 18-11-21 17:47:07, Will Deacon wrote:
> > > > +	/*
> > > > +	 * The arm64 boot protocol mandates that CNTFRQ_EL0 reflects
> > > > +	 * the timer frequency. To avoid breakage on misconfigured
> > > > +	 * systems, do not register the early sched_clock if the
> > > > +	 * programmed value if zero. Other random values will just
> > > > +	 * result in random output.
> > > > +	 */
> > > > +	if (!freq)
> > > > +		return;
> > > > +
> > > > +	arch_timer_read_counter = arch_counter_get_cntvct;
> > > 
> > > Why do you need to assign this here?
> > > 
> > > > +	sched_clock_register(arch_timer_read_counter, ARCH_TIMER_NBITS, freq);
> > > 
> > > arch_timer_read_counter can be reassigned once the arm_arch_timer driver
> > > has probed; what stops this from being unused as the sched_clock after that
> > > has happened? I worry that toggling the function pointer could lead to
> > > sched_clock() going backwards.
> > 
> > No reason, I will revert it back to use a local variable.
> 
> I think the issue is that you are doing an assignment for something
> that the kernel has already statically initialized.
> 
> > I agree, time can go backward for a period of time while we switch
> > to permanent clock later, if that clock is different.
> 
> It is worse than that. You're setting up sched_clock with an
> unreliable clock source which can go backward at any point, not just
> at handover time.
> 
> I'd rather we have the timestamping code be able to use another souce
> than sched_clock, and eventually switch to it once sched_clock is
> registered (and properly corrected.

Hi Marc,

The early sched clock is implemented the same way on SPARC and x86: it
uses the sched_clock() interface to get timestamps. In addition it can
be used be engineers to precisely measure and debug early boot problems
by directly inserting cheap sched_clock() calls into code. Ftrace might
also be extended in future to support early boot.

I am not sure it is a good idea to invent a different interface that
would be used by printk() only for timestamping early in boot.

During the hang over from unstable to stable the sched_clock_register()
does the right thing and calculates the offset where the last clock
ended and new started.

In unlikely even if on some broken chips time goes backward, it will
happen during early boot only. Do you know if there are arm64 chips
exist where time may go backward? We can either don't do early boot
clock on those chips, or modify sched_clock() to check for the last
return value, and make sure that it is always smaller than the new
return value.

Thank you,
Pasha
