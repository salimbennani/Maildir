Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 05 Dec 2018 08:44:16 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id ACD1F58014B;
	Tue,  4 Dec 2018 12:36:55 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 04 Dec 2018 12:36:55 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ABweP+hGWJdwTR09xrEEsBZ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75o8mzbnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJSyNODZ6y?=
 =?us-ascii?q?YYsNAOQPMuhWrIf9qUUJoxulHQmhBvjiyiNRhn/zwaE60/gtHAPA0Qc9H9wOqn?=
 =?us-ascii?q?PUrNDtOakKS++60bPHzSveZP5K3Df96ZTIeQ0mrPGKR71/bNDeyVc1Gwzfi1WQ?=
 =?us-ascii?q?qJDlMiia1uQIqWeb7u5gWfizhG4grgF8uz6izdovhInRno8Z1EzI+CFjzIooK9?=
 =?us-ascii?q?C0VlR3bcOnHZdMrS2XNol7Tts8T210uys20LkLtYOhcCQU0pgr2hjSYOGdfYeS?=
 =?us-ascii?q?+BLsTuORLC94hH17fLK/gA6/8VavyuLiTMm4ylVKoTRfktnKqH8N0wbf6s+dSv?=
 =?us-ascii?q?ty5kuh2DCP2B7P6uxcP0w4ia7WJ4Q8zrM+iJYfq1nPEyzqlEnsjaKbdF0o+u2y?=
 =?us-ascii?q?5OTmZrXmqIWcN4hxigzmNqQum8q/Afk3MwQXXGiU5/681Lv98k39WblKifM3kq?=
 =?us-ascii?q?/Hv5DAPskbuKG5DBFP0oo56BawES2m0NIGknkDNl5FfwiHj4fxN1HUPP/4Feu/?=
 =?us-ascii?q?g0irkDpzw/DGP77hDYvXInnMjbfsZrJ9609ayAouwtFT/ZNUCrcdIP3tXk/9rs?=
 =?us-ascii?q?DXDhg8Mwas2eboFM191p8CWWKIGqKZMLndsV6U5u01JOmAfo8VuCvnJPgj6P7j?=
 =?us-ascii?q?lns5mV4bfam00pobcnG4HvJ6I0qHZXrgmMsOEWAPvgAmVuzllEWCUSJPZ3a1R6?=
 =?us-ascii?q?885DY7B5y8AYfAQYCthrqB3CCgE51SZ2BGDE2MEHjye4WFXfcMdDydIst7njMY?=
 =?us-ascii?q?UrihTpcr1Quyuw/i17pnMu3U9zUCupL41Nh14O7TmQso9TNuDcSQyGWNT2Bynm?=
 =?us-ascii?q?MVSD46xqF/oUphylid1ah0meBXFdtW5/lRSAc1KYbcz/BmC9D1Qg/Bfc2GSFC8?=
 =?us-ascii?q?TtWiADE+VNQxw9AVbkZ5GtWiiA3D3iWwD78UkbyLGII78qbG03ftIMZ9zm7M1L?=
 =?us-ascii?q?M9gFk+XstPKWqmi7Zi+AfJGY7GjV+Vl6aweqQaxy7C6mGDwW2KvEFbVQ5wVb7I?=
 =?us-ascii?q?XXQeZkvQsNT46VnOT76oCbQ7LARBzdSOJbdNat3slV9GXuvsOMzCY2KtnGe9HQ?=
 =?us-ascii?q?uHyamSbIX0YWkd3D/SCE4fkw8N+3aLLgw+Biano2LDAz1iD1PvY0Xw8eZgrHO3?=
 =?us-ascii?q?VFM7zwaPb0d5zbq65gYVheCAS/MUxr8EpCYhqzBzHFah39LXC8CMpxZ7cKVbe9?=
 =?us-ascii?q?M95FZH1WTWtwFmOpygLqZihkMRcghtvkPu0Ql3BZtEkcQwsHwqyw9yI7qC0Fxd?=
 =?us-ascii?q?bzOYwYzwOrrPJ2bo+BCgdaHX1U/e0dqM4agP9ek3pE/lvAGqEUoi7W5q091U03?=
 =?us-ascii?q?ua+5XLAxAeUZP3UkYr6Rd6o6vWbTU654PRzXdsK7W7sife29I1A+so0hahf8pF?=
 =?us-ascii?q?PKyYDgPzEs0aCNKoKOwlgFWpahMEPOZP9K87Jc+mdv2G2LK1M+Zkhj6pkWNH4I?=
 =?us-ascii?q?Vl2EKW6yV8UvLI34oCw/yAxAuHVivzg027ss/qnoBIfzcSEXSlySjlHYJeerd9?=
 =?us-ascii?q?fYIWBmiwOc23wdN+ioXpW35Z8l6jGlwH1NWoeRqUc1zywwlQ2V4LrnygnCuy1y?=
 =?us-ascii?q?Z0nC0xrqqDwCzOxPzvdRoGOmJRRGhul0zsIZWyj90BWEiobg4plAaq5Ergxqhb?=
 =?us-ascii?q?orh/IHfXQUtSYyf2KGRiWLOqtrWee85P9I8osSJPXeS+e1+aUL39oxgd0y/5BG?=
 =?us-ascii?q?tR3jM7dzKrupX/gRN6jnmQLHJyrHrfZMFxyg3T5N3aRf5NwDUGQDN0hiXQBli5?=
 =?us-ascii?q?J9Op58mbl4/fsuCiUGKsTp1SfjPszY+atiu75GtqDAa7n/CynN3nDAc73TX619?=
 =?us-ascii?q?lsSSXHshL8bpP32KS9NOJtZlNoC0Pk68pmBoF+lZM9hJIK1ngbnJmV/WcHnn31?=
 =?us-ascii?q?MdVUwq/+aHsNRTgWw9/a+gTl2UtjLm6XyIL9THmS3sxhZ9yiaGMMxi0999xKCL?=
 =?us-ascii?q?uT7LFcmCt1o1m4ohjLbflzgDgd0ucu52AAg+4SpgUt1CqdD6sWHUlZOyzsihuJ?=
 =?us-ascii?q?48q/rKVReGagb7yw2FBiktCmCbGIuhtcV2rhepc+AS9w6d1yME7L0H328I3lec?=
 =?us-ascii?q?PfbdQOth2PiBfAjvNYKJYwlvoMmCpmNnjxvXwjy+4nkxNu2Yu2s5SAK2Vo5Ki5?=
 =?us-ascii?q?GAJXNiXpZ8MP/THglb1RkdyR34CrA5VtADELXIbzQPKsETISs+nnNgmUHD09rH?=
 =?us-ascii?q?ebBaTQHQuF5Eh6qHLPFoihN2uLK3kB0dViWB6dKVRdgA8OWTU1gIU5Ghq2xMD7?=
 =?us-ascii?q?c0d5+zMR5kP+qhRW0eJlLB3/UmbZpAe1ZTY4UpmfLBxK7g5c40fZK9CR7uV2Hy?=
 =?us-ascii?q?tA5J2usBSNKnCHZwRPFWwIWkuEB036Prmz/9bA9fKUBvG5L/vIbrWDsuheV/aO?=
 =?us-ascii?q?xZKy3Ypq5TeMNsOTPnZ8C/03wFZMXXd8G87BgTUAVzQXlz7Rb86cvBq8+jN4rs?=
 =?us-ascii?q?G88PToWQLj/4iPC6FVMdVg5R+2m7qDN/WLiSZ9KDZY0I4MxHDSxLge2l4Slz9h?=
 =?us-ascii?q?dz23Hbscsi7NSbramrVLAB4DdyNzKMxI4rom0QlQIsHbkM36175igv4xCldITl?=
 =?us-ascii?q?jhmsCvZcwXLGCxLlLHBECXNLuYIT3H2d34YaS5SbdIluVbqwWwuSqHE0/kJjmD?=
 =?us-ascii?q?izjpVxW1Pe5Qli2UIBxet5+7cht2DWjjTdTmagC0MdNtjD02x6E0iW3ONWIGLT?=
 =?us-ascii?q?d8dEZNpKWK7SxEmvV/B3BB7n19IOiEgSmZ6ezYKpcQsfRzAyV0l/hV4HI1y7ZO?=
 =?us-ascii?q?6CFERfp1mDbdr9J0olGmlPWPxSRjUBZUtjlLg4eL7g1ePvCT25VPVH3D+RgAqS?=
 =?us-ascii?q?2qCh8J7+MvQon1uqtTjMCJma78JTxF9tjZ1coaG8XQbsmANSxyHwDuHWvyBQcM?=
 =?us-ascii?q?U3aCMGDDzxhbmf2b6Ducq5kmgpfpkZsKDLRcUQpmRbshFk15EYlac99MVTQ+nO?=
 =?us-ascii?q?ve1ZZQ6A=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0APAQDJ5AZch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBZYNsJ4N5lCeCDRSJDm6NTYFfEgEBGBMBhECDDCI4EgEDAQEBAQEBAgETAQE?=
 =?us-ascii?q?BCA0JCCkjDII2JAGCYQEBAQECAQECIB0BGx0BAwEBCQEBBQULDQICJgICAyARA?=
 =?us-ascii?q?QUBHAYTBRaDBoFpAQMNCAWZRzyLDYESBQEXgncFhEEKGScNXYE3AgYSeYsTgVc?=
 =?us-ascii?q?/gTgfgh4uhGkYgwQxgiYCiyCFD5AaBwKCIASPHRiBW4URgm8QhzuVc4JdAgQCB?=
 =?us-ascii?q?AUCBQ8hgTyBdjMaI3oBBoI7PoFdDBeDSop0HzIBgQQBAYphAQE?=
X-IPAS-Result: =?us-ascii?q?A0APAQDJ5AZch0O0hNFkHAEBAQQBAQcEAQGBZYNsJ4N5lCe?=
 =?us-ascii?q?CDRSJDm6NTYFfEgEBGBMBhECDDCI4EgEDAQEBAQEBAgETAQEBCA0JCCkjDII2J?=
 =?us-ascii?q?AGCYQEBAQECAQECIB0BGx0BAwEBCQEBBQULDQICJgICAyARAQUBHAYTBRaDBoF?=
 =?us-ascii?q?pAQMNCAWZRzyLDYESBQEXgncFhEEKGScNXYE3AgYSeYsTgVc/gTgfgh4uhGkYg?=
 =?us-ascii?q?wQxgiYCiyCFD5AaBwKCIASPHRiBW4URgm8QhzuVc4JdAgQCBAUCBQ8hgTyBdjM?=
 =?us-ascii?q?aI3oBBoI7PoFdDBeDSop0HzIBgQQBAYphAQE?=
X-IronPort-AV: E=Sophos;i="5.56,315,1539673200"; 
   d="scan'208";a="140764555"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 04 Dec 2018 12:36:53 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726296AbeLDUgv (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 4 Dec 2018 15:36:51 -0500
Received: from mail-pg1-f194.google.com ([209.85.215.194]:35878 "EHLO
        mail-pg1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725866AbeLDUgu (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 4 Dec 2018 15:36:50 -0500
Received: by mail-pg1-f194.google.com with SMTP id n2so7906530pgm.3;
        Tue, 04 Dec 2018 12:36:49 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:subject:from:in-reply-to:date:cc
         :content-transfer-encoding:message-id:references:to;
        bh=DrIB/V2f5SlA/8MKxmeUyqbWCQ3Npnh309oIdZQ46mc=;
        b=okHJzn3AsdfRRAx8H8nfGVcfn6tWSeBOGa5N7uv3pADUlTPKpYq77rUnjeafSeqByD
         vrj/31xSLe9oQlKLxSoxz9kdnIRhHaIRqoRFOh8xAN5u2OxEmDhZLq3aGfCbRNG93rE7
         PudYf1XaJY51/eULo/Ke6h3kNmsnCzGg14JukEiZ0vYtjf+imKY6MBzz0+WmN9rykEhS
         0ezQBYFa5mGwbO52nr+ExqNRbjLTdZnEfir+sld6Rd4KPcIuKHWbJhIfVbAmoRZm9GmZ
         Gvgf3poa8FV4DOHoEUJBhZNb5izJthCjKv67z67BBqd3Nlez6w5M1VIFBQc+MU7cikUc
         jblQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:subject:from:in-reply-to:date:cc
         :content-transfer-encoding:message-id:references:to;
        bh=DrIB/V2f5SlA/8MKxmeUyqbWCQ3Npnh309oIdZQ46mc=;
        b=H425t4v5CZ2oDlTU8b6SjzoXZgxgxwgbIM781sP8rmBT4wypx4/dHRApYDwh9Sfthx
         6qXKjcdzKB2kK4HegJ75gNUI+TgPtLx+cQNSWcjMgpn5TmkcF85wwbVSvAvCVq8jutwf
         qfxGLuHD0XRS7V+8ZQ5ceehuMPvSkCFyopy/578CIFA9kSpuPY6wJRo9IV5P8jUrFw1Z
         ySwpZCtKfolnFgVK/oc+/X2eLdVxAXrTS6kSgi0+6JNLzE/R6f6+WZhL3qXwuYQGoyYf
         HVdQY4ip4IoeKAzhlF9OBsbOefeUcF4Dt7b4Pqws1aVxMqd5RkvuSwSqQjggzZbOsWXC
         NKGw==
X-Gm-Message-State: AA+aEWbFuMYRsAPT0ZN6waO+vYdxlS9lZeT3sW35XFYWm7IS9z71RdH3
        rZhirs3mdqM+gGPXsyQjDlk=
X-Google-Smtp-Source: AFSGD/XpeStNACC+ZvdERn1ObeRbkKfsGpLejM+Tc8ooh8osNb8uj9u8Oql6zmBvMTM1nuXEhF+17g==
X-Received: by 2002:a63:e711:: with SMTP id b17mr17449457pgi.363.1543955808349;
        Tue, 04 Dec 2018 12:36:48 -0800 (PST)
Received: from [10.2.19.70] ([208.91.2.1])
        by smtp.gmail.com with ESMTPSA id i123sm35116036pfg.164.2018.12.04.12.36.45
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 04 Dec 2018 12:36:46 -0800 (PST)
Content-Type: text/plain;
        charset=utf-8
Mime-Version: 1.0 (Mac OS X Mail 12.1 \(3445.101.1\))
Subject: Re: [PATCH 1/2] vmalloc: New flag for flush before releasing pages
From: Nadav Amit <nadav.amit@gmail.com>
In-Reply-To: <51281e69a3722014f718a6840f43b2e6773eed90.camel@intel.com>
Date: Tue, 4 Dec 2018 12:36:44 -0800
Cc: "will.deacon@arm.com" <will.deacon@arm.com>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        "daniel@iogearbox.net" <daniel@iogearbox.net>,
        "jeyu@kernel.org" <jeyu@kernel.org>,
        "rostedt@goodmis.org" <rostedt@goodmis.org>,
        "ast@kernel.org" <ast@kernel.org>,
        "ard.biesheuvel@linaro.org" <ard.biesheuvel@linaro.org>,
        "linux-mm@kvack.org" <linux-mm@kvack.org>,
        "jannh@google.com" <jannh@google.com>,
        "Dock, Deneen T" <deneen.t.dock@intel.com>,
        "peterz@infradead.org" <peterz@infradead.org>,
        "kristen@linux.intel.com" <kristen@linux.intel.com>,
        "akpm@linux-foundation.org" <akpm@linux-foundation.org>,
        "mingo@redhat.com" <mingo@redhat.com>,
        "luto@kernel.org" <luto@kernel.org>,
        "Keshavamurthy, Anil S" <anil.s.keshavamurthy@intel.com>,
        "kernel-hardening@lists.openwall.com" 
        <kernel-hardening@lists.openwall.com>,
        "mhiramat@kernel.org" <mhiramat@kernel.org>,
        "naveen.n.rao@linux.vnet.ibm.com" <naveen.n.rao@linux.vnet.ibm.com>,
        "davem@davemloft.net" <davem@davemloft.net>,
        "netdev@vger.kernel.org" <netdev@vger.kernel.org>,
        "Hansen, Dave" <dave.hansen@intel.com>
Content-Transfer-Encoding: quoted-printable
Message-Id: <A5ABCA50-12F0-4A19-B499-3927D59BF589@gmail.com>
References: <20181128000754.18056-1-rick.p.edgecombe@intel.com>
 <20181128000754.18056-2-rick.p.edgecombe@intel.com>
 <4883FED1-D0EC-41B0-A90F-1A697756D41D@gmail.com>
 <20181204160304.GB7195@arm.com>
 <51281e69a3722014f718a6840f43b2e6773eed90.camel@intel.com>
To: "Edgecombe, Rick P" <rick.p.edgecombe@intel.com>
X-Mailer: Apple Mail (2.3445.101.1)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

> On Dec 4, 2018, at 12:02 PM, Edgecombe, Rick P =
<rick.p.edgecombe@intel.com> wrote:
>=20
> On Tue, 2018-12-04 at 16:03 +0000, Will Deacon wrote:
>> On Mon, Dec 03, 2018 at 05:43:11PM -0800, Nadav Amit wrote:
>>>> On Nov 27, 2018, at 4:07 PM, Rick Edgecombe =
<rick.p.edgecombe@intel.com>
>>>> wrote:
>>>>=20
>>>> Since vfree will lazily flush the TLB, but not lazily free the =
underlying
>>>> pages,
>>>> it often leaves stale TLB entries to freed pages that could get =
re-used.
>>>> This is
>>>> undesirable for cases where the memory being freed has special =
permissions
>>>> such
>>>> as executable.
>>>=20
>>> So I am trying to finish my patch-set for preventing transient W+X =
mappings
>>> from taking space, by handling kprobes & ftrace that I missed =
(thanks again
>>> for
>>> pointing it out).
>>>=20
>>> But all of the sudden, I don=E2=80=99t understand why we have the =
problem that this
>>> (your) patch-set deals with at all. We already change the mappings =
to make
>>> the memory writable before freeing the memory, so why can=E2=80=99t =
we make it
>>> non-executable at the same time? Actually, why do we make the module =
memory,
>>> including its data executable before freeing it???
>>=20
>> Yeah, this is really confusing, but I have a suspicion it's a =
combination
>> of the various different configurations and hysterical raisins. We =
can't
>> rely on module_alloc() allocating from the vmalloc area (see nios2) =
nor
>> can we rely on disable_ro_nx() being available at build time.
>>=20
>> If we *could* rely on module allocations always using vmalloc(), then
>> we could pass in Rick's new flag and drop disable_ro_nx() altogether
>> afaict -- who cares about the memory attributes of a mapping that's =
about
>> to disappear anyway?
>>=20
>> Is it just nios2 that does something different?
>>=20
>> Will
>=20
> Yea it is really intertwined. I think for x86, set_memory_nx =
everywhere would
> solve it as well, in fact that was what I first thought the solution =
should be
> until this was suggested. It's interesting that from the other thread =
Masami
> Hiramatsu referenced, set_memory_nx was suggested last year and would =
have
> inadvertently blocked this on x86. But, on the other architectures I =
have since
> learned it is a bit different.
>=20
> It looks like actually most arch's don't re-define set_memory_*, and =
so all of
> the frob_* functions are actually just noops. In which case allocating =
RWX is
> needed to make it work at all, because that is what the allocation is =
going to
> stay at. So in these archs, set_memory_nx won't solve it because it =
will do
> nothing.
>=20
> On x86 I think you cannot get rid of disable_ro_nx fully because there =
is the
> changing of the permissions on the directmap as well. You don't want =
some other
> caller getting a page that was left RO when freed and then trying to =
write to
> it, if I understand this.
>=20
> The other reasoning was that calling set_memory_nx isn't doing what we =
are
> actually trying to do which is prevent the pages from getting released =
too
> early.
>=20
> A more clear solution for all of this might involve refactoring some =
of the
> set_memory_ de-allocation logic out into __weak functions in either =
modules or
> vmalloc. As Jessica points out in the other thread though, modules =
does a lot
> more stuff there than the other module_alloc callers. I think it may =
take some
> thought to centralize AND make it optimal for every =
module_alloc/vmalloc_exec
> user and arch.
>=20
> But for now with the change in vmalloc, we can block the executable =
mapping
> freed page re-use issue in a cross platform way.

Please understand me correctly - I didn=E2=80=99t mean that your patches =
are not
needed.

All I did is asking - how come the PTEs are executable when they are =
cleared
they are executable, when in fact we manipulate them when the module is
removed.

I think I try to deal with a similar problem to the one you encounter -
broken W^X. The only thing that bothered me in regard to your patches =
(and
only after I played with the code) is that there is still a time-window =
in
which W^X is broken due to disable_ro_nx().

