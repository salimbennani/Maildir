Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 10 Dec 2018 20:35:18 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id D77855807C6
	for <like.xu@linux.intel.com>; Mon, 10 Dec 2018 03:43:29 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 03:43:29 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3ADZwbuxZgS2eMNekMT1S/wrb/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpsy7Yx7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyJPDIOi?=
 =?us-ascii?q?YYUMAeoOMvpXoJT/qFQAohWwGBGsCeHtxDJHm3P707E23Po6EQzdwAwgBsgDvG?=
 =?us-ascii?q?jIoNjvKasfV/2+wqnSzTXEavNbwTnx5obSchw7vPqCU6h/cdTQyUYyCgjIklGQ?=
 =?us-ascii?q?ppbjPziI1+oNsmyb4PF+WuK1l24rpRx6rz+yyccji4nJgpkaxU7e9SVl24s1P8?=
 =?us-ascii?q?O3R1N7YdG+DJtcrT2VN4xzQs47RWxjpSU0yqUetJKlYCQHy44rywPCZ/GEaYSE?=
 =?us-ascii?q?/BzuWeaLLTtlhn9pYKyziwq2/ES61+HxWNe43ExXoidGnNTArG4B2h/V58OaUP?=
 =?us-ascii?q?Vy5F2h1iyK1w3L6uFLP0Q0la3DJp4lw74wjYYTsV/ZEi/5nkX2kbWadkI++uin?=
 =?us-ascii?q?8+jnY7PmqYGAN4JslA3yLqcjltaiDeglMQUCRXaX9Oq82bH54EH0Qq1Gjvgsna?=
 =?us-ascii?q?nYtJDaK94bpqm8AwJNy4Ys9RO/Dyq/3NsFg3YHMkxKeBaeg4fyPFHOPfb4Auuh?=
 =?us-ascii?q?jFS3lztrw/HGPr7/DZnXIXnDja/sfbJ8605a1QoywspT55NSCrEdPv3zXlX9u8?=
 =?us-ascii?q?DfDh88KAG0xeHnCNNy1oMYRGKDGKiZMLndsVOQ/OIgP/GMZJMJuDb6M/Ul4//u?=
 =?us-ascii?q?jXwnllMHcqipwIAaaHS5HvRgPkWYbmDggtYHEWcWoAU+SPbmh0GFUT5WND6PWb?=
 =?us-ascii?q?kh7GQ7FJ6+FtWEAYSsm6CamiG8GJJQeyZBEF/LFH7pc4CNXbALcD6TJcl61SUJ?=
 =?us-ascii?q?UKXkR4I/2BX9iQnh1rAyK+PV/jEf54vu0cUw6+DNmBV37zFtEsmGz0mLSGd7mH?=
 =?us-ascii?q?5OQCU5i7tiq05wwUvWzK5jnvZDHsZS7f4abgBvDZ7dy+1iE926fwvdftaEVROK?=
 =?us-ascii?q?S8iqgHllVtIwx9oCS1xwF9WrklbI2C/8UJEPkLneTrAutOrw1mbwK45Uz3/AnI?=
 =?us-ascii?q?Ygi1MrWNcFfTmqia97/QXJG6bTnkmZnrrsfqMZin2evFyfxHaD6RkLGDV7Vr/I?=
 =?us-ascii?q?CDVGPhPb?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AIAAAlUQ5cmBHrdtBjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBVAIBAQEBCwGBMIJPE4xyiy+CDY4eiUeBXxQYFIQ3CYMsIjcGDQE?=
 =?us-ascii?q?DAQEBAQEBAgETAQEBAQEICwsGGw4vgjYFAgMaAQaCVwUBAgMBAiQfCikDAwECB?=
 =?us-ascii?q?gEBChgJHQgDAQsFSRMFMIJsUYExAQSlcjOKH4g3g2oRBoFAP4ERgxKEaRiDNYI?=
 =?us-ascii?q?mAosphBSROAcCAopBhwEjColch1cslVODMYFcgXhwFYMngicXjh1BMYEHHIo2g?=
 =?us-ascii?q?XcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AIAAAlUQ5cmBHrdtBjGgEBAQEBAgEBAQEHAgEBAQGBVAI?=
 =?us-ascii?q?BAQEBCwGBMIJPE4xyiy+CDY4eiUeBXxQYFIQ3CYMsIjcGDQEDAQEBAQEBAgETA?=
 =?us-ascii?q?QEBAQEICwsGGw4vgjYFAgMaAQaCVwUBAgMBAiQfCikDAwECBgEBChgJHQgDAQs?=
 =?us-ascii?q?FSRMFMIJsUYExAQSlcjOKH4g3g2oRBoFAP4ERgxKEaRiDNYImAosphBSROAcCA?=
 =?us-ascii?q?opBhwEjColch1cslVODMYFcgXhwFYMngicXjh1BMYEHHIo2gXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,338,1539673200"; 
   d="scan'208";a="56233445"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 10 Dec 2018 03:43:28 -0800
Received: from localhost ([::1]:60351 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gWJyC-0006Vf-6y
	for like.xu@linux.intel.com; Mon, 10 Dec 2018 06:43:28 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:60744)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <dgilbert@redhat.com>) id 1gWJxz-0006Tf-OM
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 06:43:17 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <dgilbert@redhat.com>) id 1gWJxv-0001Uy-AJ
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 06:43:15 -0500
Received: from mx1.redhat.com ([209.132.183.28]:52894)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <dgilbert@redhat.com>) id 1gWJxu-0001Ru-Tp
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 06:43:11 -0500
Received: from smtp.corp.redhat.com (int-mx06.intmail.prod.int.phx2.redhat.com
	[10.5.11.16])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id EE10630832CF
	for <qemu-devel@nongnu.org>; Mon, 10 Dec 2018 11:43:05 +0000 (UTC)
Received: from work-vm (unknown [10.36.118.21])
	by smtp.corp.redhat.com (Postfix) with ESMTPS id 970205C1B4;
	Mon, 10 Dec 2018 11:42:57 +0000 (UTC)
Date: Mon, 10 Dec 2018 11:42:54 +0000
From: "Dr. David Alan Gilbert" <dgilbert@redhat.com>
To: Philippe =?iso-8859-1?Q?Mathieu-Daud=E9?= <philmd@redhat.com>
Message-ID: <20181210114254.GB2372@work-vm>
References: <20181207170400.5129-1-philmd@redhat.com>
	<20181207170400.5129-6-philmd@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
In-Reply-To: <20181207170400.5129-6-philmd@redhat.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.16
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.44]);
	Mon, 10 Dec 2018 11:43:06 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH 5/6] hw/nvram/fw_cfg: Add HMP 'info fw_cfg'
 command
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Eduardo Habkost <ehabkost@redhat.com>,
	"Michael S . Tsirkin" <mst@redhat.com>, qemu-devel@nongnu.org,
	Gerd Hoffmann <kraxel@redhat.com>, Igor Mammedov <imammedo@redhat.com>,
	Laszlo Ersek <lersek@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

* Philippe Mathieu-Daud=E9 (philmd@redhat.com) wrote:
> $ qemu-system-x86_64 -S -monitor stdio
> (qemu) info fw_cfg
>         Type    Perm    Size    Specific   Order   Info
>    signature      RO       4                       QEMU
>           id      RO       4                       0x00000003
>         uuid      RO      16                       00000000-0000-0000-0=
000-000000000000
>     ram_size      RO       8                       0x0000000008000000
>    nographic      RO       2                       0x0000
>      nb_cpus      RO       2                       0x0001
>         numa      RO      16
>    boot_menu      RO       2                       0x0000
>     max_cpus      RO       2                       0x0001
>     file_dir      RO    2052
>  file (id 1)      RO      36                 160   etc/acpi/rsdp
>  file (id 2)      RO  131072                 130   etc/acpi/tables
>  file (id 3)      RO       4                  15   etc/boot-fail-wait
>  file (id 4)      RO      20                  40   etc/e820
>  file (id 5)      RO      31                  30   etc/smbios/smbios-an=
chor
>  file (id 6)      RO     320                  20   etc/smbios/smbios-ta=
bles
>  file (id 7)      RO       6                  90   etc/system-states
>  file (id 8)      RO    4096                 140   etc/table-loader
> file (id 10)      RO    9216                  55   genroms/kvmvapic.bin
>         uuid      RO       4  (arch spec)          01000000-0000-0000-0=
000-000000000000
>     ram_size      RO     324  (arch spec)
>    nographic      RO     121  (arch spec)
> (qemu)
>=20
> Signed-off-by: Philippe Mathieu-Daud=E9 <philmd@redhat.com>
> ---
>  hmp-commands-info.hx      |  14 +++++
>  hw/nvram/fw_cfg.c         | 115 ++++++++++++++++++++++++++++++++++++++
>  include/hw/nvram/fw_cfg.h |   2 +
>  3 files changed, 131 insertions(+)
>=20
> diff --git a/hmp-commands-info.hx b/hmp-commands-info.hx
> index cbee8b944d..9e86dceeb4 100644
> --- a/hmp-commands-info.hx
> +++ b/hmp-commands-info.hx
> @@ -916,6 +916,20 @@ STEXI
>  @item info sev
>  @findex info sev
>  Show SEV information.
> +ETEXI
> +
> +    {
> +        .name       =3D "fw_cfg",
> +        .args_type  =3D "",
> +        .params     =3D "",
> +        .help       =3D "Display the table of the fw_cfg entries regis=
tered",
> +        .cmd        =3D hmp_info_fw_cfg,
> +    },
> +
> +STEXI
> +@item info fw_cfg
> +@findex info fw_cfg
> +Show roms.
>  ETEXI
> =20
>  STEXI
> diff --git a/hw/nvram/fw_cfg.c b/hw/nvram/fw_cfg.c
> index 582653f07e..50525ec1dd 100644
> --- a/hw/nvram/fw_cfg.c
> +++ b/hw/nvram/fw_cfg.c
> @@ -36,6 +36,7 @@
>  #include "qemu/config-file.h"
>  #include "qemu/cutils.h"
>  #include "qapi/error.h"
> +#include "monitor/monitor.h"
> =20
>  #define FW_CFG_FILE_SLOTS_DFLT 0x20
> =20
> @@ -1164,3 +1165,117 @@ static void fw_cfg_register_types(void)
>  }
> =20
>  type_init(fw_cfg_register_types)
> +
> +static const char *fw_cfg_wellknown_entries[0x20] =3D {

That magic 0x20 is a shame; we should probably have a #define
for that max, or perhaps it can just be removed.

> +    [FW_CFG_SIGNATURE] =3D "signature",
> +    [FW_CFG_ID] =3D "id",
> +    [FW_CFG_UUID] =3D "uuid",
> +    [FW_CFG_RAM_SIZE] =3D "ram_size",
> +    [FW_CFG_NOGRAPHIC] =3D "nographic",
> +    [FW_CFG_NB_CPUS] =3D "nb_cpus",
> +    [FW_CFG_MACHINE_ID] =3D "machine_id",
> +    [FW_CFG_KERNEL_ADDR] =3D "kernel_addr",
> +    [FW_CFG_KERNEL_SIZE] =3D "kernel_size",
> +    [FW_CFG_KERNEL_CMDLINE] =3D "kernel_cmdline",
> +    [FW_CFG_INITRD_ADDR] =3D "initrd_addr",
> +    [FW_CFG_INITRD_SIZE] =3D "initdr_size",
> +    [FW_CFG_BOOT_DEVICE] =3D "boot_device",
> +    [FW_CFG_NUMA] =3D "numa",
> +    [FW_CFG_BOOT_MENU] =3D "boot_menu",
> +    [FW_CFG_MAX_CPUS] =3D "max_cpus",
> +    [FW_CFG_KERNEL_ENTRY] =3D "kernel_entry",
> +    [FW_CFG_KERNEL_DATA] =3D "kernel_data",
> +    [FW_CFG_INITRD_DATA] =3D "initrd_data",
> +    [FW_CFG_CMDLINE_ADDR] =3D "cmdline_addr",
> +    [FW_CFG_CMDLINE_SIZE] =3D "cmdline_size",
> +    [FW_CFG_CMDLINE_DATA] =3D "cmdline_data",
> +    [FW_CFG_SETUP_ADDR] =3D "setup_addr",
> +    [FW_CFG_SETUP_SIZE] =3D "setup_size",
> +    [FW_CFG_SETUP_DATA] =3D "setup_data",
> +    [FW_CFG_FILE_DIR] =3D "file_dir",
> +};
> +
> +void hmp_info_fw_cfg(Monitor *mon, const QDict *qdict)
> +{
> +    FWCfgState *s =3D fw_cfg_find();
> +    int arch, key;
> +
> +    monitor_printf(mon, "%12s %5s %7s %9s %6s %-24s\n",
> +                   "Type", "Perm", "Size", "Specific", "Order", "Info"=
);
> +    for (arch =3D 0; arch < ARRAY_SIZE(s->entries); ++arch) {
> +        for (key =3D 0; key < fw_cfg_max_entry(s); ++key) {
> +            FWCfgEntry *e =3D &s->entries[arch][key];
> +            const char *perm =3D e->allow_write ? "RW" : "RO";
> +            const char *arch_spec =3D arch ? "arch_spec" : "";
> +            char *type, *info =3D NULL;
> +
> +            if (!e->len) {
> +                continue;
> +            }
> +            if (key >=3D FW_CFG_FILE_FIRST) {
> +                int id =3D key - FW_CFG_FILE_FIRST;
> +                const char *path =3D s->files->f[id].name;
> +
> +                type =3D g_strdup_printf("file (id %d)", id);
> +                monitor_printf(mon, "%12s %5s %7d %10s %5d %-24s\n",
> +                               type, perm, e->len, arch_spec,
> +                               get_fw_cfg_order(s, path), path);
> +                g_free(type);
> +                continue;
> +            }
> +            type =3D g_strdup(fw_cfg_wellknown_entries[key]);
> +            if (!type) {
> +                type =3D g_strdup_printf("entry_%d", key);
> +            }
> +
> +            switch (key) {
> +            case FW_CFG_SIGNATURE:
> +                info =3D g_strndup((const gchar *)e->data, e->len);
> +                break;
> +            case FW_CFG_UUID:
> +                info =3D qemu_uuid_unparse_strdup((const QemuUUID *)e-=
>data);
> +                break;

It seems odd to encode the type of each entry in this switch;  I guess
it's OK if no one else needs it, else perhaps there should be a type
array.

Other than that, it's fine from the HMP side, but I agree it should
either have a QMP equivalent (in which case the structure is a bit
different) or a good justification of if it's really debug only.

Dave

> +            case FW_CFG_ID:
> +            case FW_CFG_NOGRAPHIC:
> +            case FW_CFG_NB_CPUS:
> +            case FW_CFG_BOOT_MENU:
> +            case FW_CFG_MAX_CPUS:
> +            case FW_CFG_RAM_SIZE:
> +            case FW_CFG_KERNEL_ADDR:
> +            case FW_CFG_KERNEL_SIZE:
> +            case FW_CFG_KERNEL_CMDLINE:
> +            case FW_CFG_KERNEL_ENTRY:
> +            case FW_CFG_KERNEL_DATA:
> +            case FW_CFG_INITRD_ADDR:
> +            case FW_CFG_INITRD_SIZE:
> +            case FW_CFG_INITRD_DATA:
> +            case FW_CFG_CMDLINE_ADDR:
> +            case FW_CFG_CMDLINE_SIZE:
> +            case FW_CFG_CMDLINE_DATA:
> +            case FW_CFG_SETUP_ADDR:
> +            case FW_CFG_SETUP_SIZE:
> +            case FW_CFG_SETUP_DATA:
> +                switch (e->len) {
> +                case 2:
> +                    info =3D g_strdup_printf("0x%04x", lduw_le_p(e->da=
ta));
> +                    break;
> +                case 4:
> +                    info =3D g_strdup_printf("0x%08x", ldl_le_p(e->dat=
a));
> +                    break;
> +                case 8:
> +                    info =3D g_strdup_printf("0x%016" PRIx64, ldq_le_p=
(e->data));
> +                    break;
> +                default:
> +                    break;
> +                }
> +                break;
> +            default:
> +                break;
> +            }
> +            monitor_printf(mon, "%12s %5s %7d %10s %5s %-24s\n",
> +                           type, perm, e->len, arch_spec, "", info ? i=
nfo : "");
> +            g_free(type);
> +            g_free(info);
> +        }
> +    }
> +}
> diff --git a/include/hw/nvram/fw_cfg.h b/include/hw/nvram/fw_cfg.h
> index f5a6895a74..28630b2f26 100644
> --- a/include/hw/nvram/fw_cfg.h
> +++ b/include/hw/nvram/fw_cfg.h
> @@ -226,4 +226,6 @@ FWCfgState *fw_cfg_init_mem_wide(hwaddr ctl_addr,
>  FWCfgState *fw_cfg_find(void);
>  bool fw_cfg_dma_enabled(void *opaque);
> =20
> +void hmp_info_fw_cfg(Monitor *mon, const QDict *qdict);
> +
>  #endif
> --=20
> 2.17.2
>=20
--
Dr. David Alan Gilbert / dgilbert@redhat.com / Manchester, UK

