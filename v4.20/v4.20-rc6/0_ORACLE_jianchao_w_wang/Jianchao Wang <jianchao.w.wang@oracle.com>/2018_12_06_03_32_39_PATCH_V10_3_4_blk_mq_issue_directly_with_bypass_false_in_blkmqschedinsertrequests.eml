Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 08:40:58 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 39B57580375;
	Wed,  5 Dec 2018 19:33:50 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga005-1.jf.intel.com with ESMTP; 05 Dec 2018 19:33:50 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A/zMk4BET5+ymTTKSa4CchZ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75o824bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjmk8qxlSgLniD?=
 =?us-ascii?q?0fOjA57m/Zl8J+gqFcrh2jqRx/2JbUbYOOOfZiYq/QZ88WSHBdUspNUSFKH4Oy?=
 =?us-ascii?q?b5EID+oEJetWq4j9qEEIrRSiBQmjHuTvwSJIiXDs26063PkqHAbE3AwhBd0Otm?=
 =?us-ascii?q?jbrNXvO6cVS+y0wrPEzDvZYPNQ1jfw84/Icgo7rv6QWbJ/b9DdxlUoFwPAl1id?=
 =?us-ascii?q?r5HuMTCN1ukVrWSX8+5tWfiyh2MptQ19uCWjy8QwhoXTh48YyEjI+Th2zYooP9?=
 =?us-ascii?q?G0VUF2bN++HJdNqi2XNpF6T8EkTmp1oig10KcGtoS+fCUSyJQo2Rrfa/uffoiW?=
 =?us-ascii?q?7RLsSvyRLS17hH17YrK/gQi98Uy6xu37TMm0305GritDktbSqnAAzwLf5tSDR/?=
 =?us-ascii?q?dn40us1yiD2xrO5uxHPUw4j6vWJpw5zr41jJUTsEDDHiHsmEXxia+bbkEk+umu?=
 =?us-ascii?q?6+T6bbTqv5ycOJFuigH4LKsuntWzAeM2MwgIQWeb4/+x1KPs/ULnWrVGlP42nb?=
 =?us-ascii?q?fDsJDcO8sborS1AwhP0oYs8xq/FSup0MwEnXkbK1JIYBaHj4nqO17QOvz5Auq/?=
 =?us-ascii?q?jk+okDdqwfDGI7LgDo/MLnjFjLfuY7J951RAxwo0yNBV/4hUBa0ZIPLvRk/xs8?=
 =?us-ascii?q?TVDh8jPAy13+boEtJ92pkeWWKSGKCZNqzSvESM5uIuJemMeYAUtCz8K/gj+/7h?=
 =?us-ascii?q?k3s5lUUBcqmu2JsdcGq4Eeh+I0WFfXrshc8MEWUNvgUgVuDqi1qCUThVZ3a1RK?=
 =?us-ascii?q?884jA7CIS7DYbMXIytgbqB3DulEZ1SfGxJFleMEXLwfYWeR/gMcD6SItNmkjEc?=
 =?us-ascii?q?T7ehUI8h1RattAPg0bpoNOjU9zYctZLi0th1+uLSmQsz9TxyE8SSzWWNQ3tokW?=
 =?us-ascii?q?MPQj88xLp/rlBlylefzah4hORVFd9J6PNPSAs6MZ/cwPZ8C9D9QQ/BetaJSFC7?=
 =?us-ascii?q?QtSpGz0xT9Qxw8MQbEZ5AdmtkhfD3y+yCb8Pi7OLHIA08r7b33XpOsly0WjG27?=
 =?us-ascii?q?c7g1kmWMRPM3amibB59wTUA47JkECZl6KxeKQY3S7N8nqDzGWUsEFZVg5wTbvK?=
 =?us-ascii?q?XXQFakTKqtT541vIT6WyBrQ/LgtB1cmCJ7NXZdLzk1VJWu3vONTEbGK3gGe/Gx?=
 =?us-ascii?q?CIy6iIbIrrfWUdwSrcBFIFkwAV4XaJKww+Cj29rGLZCTxkDUjvbF/08elitHO7?=
 =?us-ascii?q?SVc5zx2Lb01k0Lq15h4VhPyGR/MPxL4Evz0hqzF1HFa70NLbEN6ApwtnfKVBbt?=
 =?us-ascii?q?Ix+lZH1WTFtwNjOpysNbxthlkbcw5vpUPhyw13CplckcgttH4l1g5yJryX0Vxf?=
 =?us-ascii?q?dzKUx4v/OqDKJWbo+hCvaKnW2k/F3daS+6cP7uk4qlr5sAGoEEoi72to091P33?=
 =?us-ascii?q?SA4ZXKCRIYUYjtXUYv6xh6u7babzE95oPJz3FjLbO4sz7C290zAuslxQ2tf9Ne?=
 =?us-ascii?q?MKOCCQ/zHNcWB8moKOw2hVepaggIM/xV9K4xJ8mmbeeJ2La3POZ8mzKrlX5H4I?=
 =?us-ascii?q?Fh3U2W7SpzV+nI04wDw/6GxAuHVi7wg0u7vcDzhI9LeysSHm25ySX/AI5RZ6ty?=
 =?us-ascii?q?fZsECGu0Is23wMl+iIDpW3JC6FGjAFYG0tezeRWOd1z9wRFQ1UMPrH2nmCu01T?=
 =?us-ascii?q?x1nysyrqqC2izD2ODidBsBOm5WS2hul1bsIY6oj98EWEikdRQmlByg5Uzi3ahU?=
 =?us-ascii?q?uLx/L3XPQUdPZyX2LXttUrGztrqBZM5D8ogovj9UUOS/YFCaTKDyox0B3iPnHm?=
 =?us-ascii?q?tewi07dj6wtpX4mRx6lHySLHJpoHXFfsFwwA/V5MbASv5JwjoGWC54hCHXB1em?=
 =?us-ascii?q?ONml59eUl5bFsu2lU2KhV5tTcTTkzI+atSu743FqDgO7n/yphtLnFg062zfh19?=
 =?us-ascii?q?Z2TSXIsAr8Yo7z2qS5K+1nf1NkBF/h68VgHIF+nZA9hJUR2Xgcm5WU8mALkWb1?=
 =?us-ascii?q?MdVHx63+aGABSiIMw97Q+ALlwlFsLmqVx4LlUXWQ2s5hZ9i5YmwMwC484d5FCL?=
 =?us-ascii?q?yI7LNahyt6uUS3rRjeYfVmmjcdyP0u6GMVgu0TuQotyDmdDa4WHUVCISPskBGI?=
 =?us-ascii?q?5cikrKpLfGavbaSw1E1mkNC9C7GCpxtQWXfjdZckAC9w9d5/MFPX3X3364Hkfs?=
 =?us-ascii?q?TQbN0Juh2VlRfAk/ZaKJYrmvUWgipnPHr3vWc5xO4jkRxuwZa6sZCcJGp3+6K5?=
 =?us-ascii?q?BgNYOifxZ8MO4TztiadensCL34GgBJlhGzMLXIf2QvKsCj4dqfPnNwOWGj0mtn?=
 =?us-ascii?q?ibAabfHROY6Ep+rXLACZWrOG+MJHUD0dVuXhqdJFFcgAAJWjU1hIU5GxuuxMzg?=
 =?us-ascii?q?dkd5+z8Q6kT5qhtK1uJnKR3/Xn3Dqwevbzc+UIKfIwZO7gFe+0fVNtST7+J0Hy?=
 =?us-ascii?q?FF552hsRaCKmqBawRTCmEJXEOECkvnPrmv49nA7ueZCvC/L/vIfbWBt+heW+2U?=
 =?us-ascii?q?ypKo14ts5yyMOdmXPnl+E/073VJOXXBnFMTYmDUPSC0XmzjOb86Boxe89TN4rt?=
 =?us-ascii?q?qi8PTwQw/v4YqPC71PMdRg4Ry2gKGDN/KOiyZ9MzpXypQMxXrQwrgFwFESkz1u?=
 =?us-ascii?q?dyWqEbkYryHNUbnfmrVJAB8bcS9zMMpI4rk43glMP87bl9z02qR5jv4zF1dKS1?=
 =?us-ascii?q?jhltu1aswNJmG3LEnHC1qTNLSaOT3LxNn6Yb+9Sb1Vlulbqwe8tiqbE0D9ODSO?=
 =?us-ascii?q?jD3pVxGpMeFRgyCXJh1euIehchlzDWjvVs7pahq+MNVvlz053aU0hm/WNW4bKT?=
 =?us-ascii?q?V9c1lCrruV7SNZhPVwA21A7np/IumClCaU9O3YKpcQsft2DSV4jeNa4HImy7RL?=
 =?us-ascii?q?6CFIXuB6mCzXro0mn1bzm/mFzTdPUxdUrDtPwo6I7mt4PqCM1JhJX33E9RVF0m?=
 =?us-ascii?q?yWBFxepdpsDNbvsqcW1Z7QnaT8ADBY+tnQ8I0XAM2Ce5HPC2YoLRe8QG2cNwAC?=
 =?us-ascii?q?VzP+bWw=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ACAACPlwhch0O0hNFkGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBg2snjBNfi1eBPzmSP4R5gXEUAQEYEwGHUyI?=
 =?us-ascii?q?0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiKCZQMDAQIkGQEBNwEFCQEBUANUG?=
 =?us-ascii?q?QWDHIICBAGlFoFsM4J2AQEFgkOEZwiHb4QveoEcgUSILYUOiTEEhn2QJgcCgiS?=
 =?us-ascii?q?PHgIWkS8smCsCBAIEBQITAYFGgg0zGgQfUIJsghsMFxKDOIgtgjNlAYEEAQGKW?=
 =?us-ascii?q?QEB?=
X-IPAS-Result: =?us-ascii?q?A0ACAACPlwhch0O0hNFkGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBg2snjBNfi1eBPzmSP4R5gXEUAQEYEwGHUyI0CQ0BAwEBAQEBA?=
 =?us-ascii?q?QIBEwEBAQgNCQgpIwyCNiKCZQMDAQIkGQEBNwEFCQEBUANUGQWDHIICBAGlFoF?=
 =?us-ascii?q?sM4J2AQEFgkOEZwiHb4QveoEcgUSILYUOiTEEhn2QJgcCgiSPHgIWkS8smCsCB?=
 =?us-ascii?q?AIEBQITAYFGgg0zGgQfUIJsghsMFxKDOIgtgjNlAYEEAQGKWQEB?=
X-IronPort-AV: E=Sophos;i="5.56,320,1539673200"; 
   d="scan'208";a="56304356"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 05 Dec 2018 19:33:48 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729062AbeLFDdq (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 5 Dec 2018 22:33:46 -0500
Received: from userp2120.oracle.com ([156.151.31.85]:54780 "EHLO
        userp2120.oracle.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728975AbeLFDdb (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 5 Dec 2018 22:33:31 -0500
Received: from pps.filterd (userp2120.oracle.com [127.0.0.1])
        by userp2120.oracle.com (8.16.0.22/8.16.0.22) with SMTP id wB63SZsR083179;
        Thu, 6 Dec 2018 03:33:27 GMT
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=oracle.com; h=from : to : cc :
 subject : date : message-id : in-reply-to : references; s=corp-2018-07-02;
 bh=VkHWEWBL2xy3ouN6+TGqQRRKF/pe1MXujxRWfmmGosA=;
 b=YOdCEa+T17eFNqTeD5o5wJs5fT7nC6jKVZSKkOfDwMFK0rWNvBO5D4CNGruQ4Q3OnlA3
 weEO0c1d+aGX/5gVJXXwutdyYIRIUQlt26dCT4K52UivQ5XFBC4EF0qG3TsSnnjX4Cq1
 ryAp3Ktfc87oiemYbFIHrDH/OSRan/aV0CuNAdSHqTOdV7AIruJem/zw2EQ2g0LSIuHs
 JXefcPIAVMojYJW4f5XLmUnwm+Uq9Z32aH+3YMuVAMlCiPkjGnPQISOf2TXburza4aQu
 bmimtRAhFgD6sDfQxxTzf8947qck+AyjFpZunkpU8HvxDQOMAE+++oRGdcIuJ/DUyAtv 4g== 
Received: from aserv0022.oracle.com (aserv0022.oracle.com [141.146.126.234])
        by userp2120.oracle.com with ESMTP id 2p3jxrnux9-1
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
        Thu, 06 Dec 2018 03:33:27 +0000
Received: from aserv0121.oracle.com (aserv0121.oracle.com [141.146.126.235])
        by aserv0022.oracle.com (8.14.4/8.14.4) with ESMTP id wB63XQHV012041
        (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
        Thu, 6 Dec 2018 03:33:26 GMT
Received: from abhmp0001.oracle.com (abhmp0001.oracle.com [141.146.116.7])
        by aserv0121.oracle.com (8.14.4/8.13.8) with ESMTP id wB63XQWl017257;
        Thu, 6 Dec 2018 03:33:26 GMT
Received: from will-ThinkCentre-M93p.cn.oracle.com (/10.182.70.234)
        by default (Oracle Beehive Gateway v4.0)
        with ESMTP ; Wed, 05 Dec 2018 19:33:26 -0800
From: Jianchao Wang <jianchao.w.wang@oracle.com>
To: axboe@kernel.dk
Cc: ming.lei@redhat.com, linux-block@vger.kernel.org,
        linux-kernel@vger.kernel.org
Subject: [PATCH V10 3/4] blk-mq: issue directly with bypass 'false' in  blk_mq_sched_insert_requests
Date: Thu,  6 Dec 2018 11:32:39 +0800
Message-Id: <1544067160-20564-4-git-send-email-jianchao.w.wang@oracle.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1544067160-20564-1-git-send-email-jianchao.w.wang@oracle.com>
References: <1544067160-20564-1-git-send-email-jianchao.w.wang@oracle.com>
X-Proofpoint-Virus-Version: vendor=nai engine=5900 definitions=9098 signatures=668679
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0 suspectscore=1 malwarescore=0
 phishscore=0 bulkscore=0 spamscore=0 mlxscore=0 mlxlogscore=999
 adultscore=0 classifier=spam adjust=0 reason=mlx scancount=1
 engine=8.0.1-1810050000 definitions=main-1812060030
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

It is not necessary to issue request directly with bypass 'true'
in blk_mq_sched_insert_requests and handle the non-issued requests
itself. Just set bypass to 'false' and let blk_mq_try_issue_directly
handle them totally. Remove the blk_rq_can_direct_dispatch check,
because blk_mq_try_issue_directly can handle it well.

With respect to commit_rqs hook, we only need to care about the last
request's result. If it is inserted, invoke commit_rqs.

Signed-off-by: Jianchao Wang <jianchao.w.wang@oracle.com>
---
 block/blk-mq-sched.c |  8 +++-----
 block/blk-mq.c       | 26 +++++++++-----------------
 2 files changed, 12 insertions(+), 22 deletions(-)

diff --git a/block/blk-mq-sched.c b/block/blk-mq-sched.c
index f096d898..5b4d52d 100644
--- a/block/blk-mq-sched.c
+++ b/block/blk-mq-sched.c
@@ -417,12 +417,10 @@ void blk_mq_sched_insert_requests(struct blk_mq_hw_ctx *hctx,
 		 * busy in case of 'none' scheduler, and this way may save
 		 * us one extra enqueue & dequeue to sw queue.
 		 */
-		if (!hctx->dispatch_busy && !e && !run_queue_async) {
+		if (!hctx->dispatch_busy && !e && !run_queue_async)
 			blk_mq_try_issue_list_directly(hctx, list);
-			if (list_empty(list))
-				return;
-		}
-		blk_mq_insert_requests(hctx, ctx, list);
+		else
+			blk_mq_insert_requests(hctx, ctx, list);
 	}
 
 	blk_mq_run_hw_queue(hctx, run_queue_async);
diff --git a/block/blk-mq.c b/block/blk-mq.c
index a1cccdd..dd07fe1 100644
--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@ -1896,32 +1896,24 @@ blk_status_t blk_mq_request_issue_directly(struct request *rq, bool last)
 void blk_mq_try_issue_list_directly(struct blk_mq_hw_ctx *hctx,
 		struct list_head *list)
 {
+	blk_qc_t unused;
+	blk_status_t ret = BLK_STS_OK;
+
 	while (!list_empty(list)) {
-		blk_status_t ret;
 		struct request *rq = list_first_entry(list, struct request,
 				queuelist);
 
-		if (!blk_rq_can_direct_dispatch(rq))
-			break;
-
 		list_del_init(&rq->queuelist);
-		ret = blk_mq_request_issue_directly(rq, list_empty(list));
-		if (ret != BLK_STS_OK) {
-			if (ret == BLK_STS_RESOURCE ||
-					ret == BLK_STS_DEV_RESOURCE) {
-				list_add(&rq->queuelist, list);
-				break;
-			}
-			blk_mq_end_request(rq, ret);
-		}
+		ret = blk_mq_try_issue_directly(hctx, rq, &unused, false,
+						list_empty(list));
 	}
 
 	/*
-	 * If we didn't flush the entire list, we could have told
-	 * the driver there was more coming, but that turned out to
-	 * be a lie.
+	 * We only need to care about the last request's result,
+	 * if it is inserted, kick the hardware with commit_rqs hook.
 	 */
-	if (!list_empty(list) && hctx->queue->mq_ops->commit_rqs)
+	if ((ret == BLK_STS_RESOURCE || ret == BLK_STS_DEV_RESOURCE) &&
+	    hctx->queue->mq_ops->commit_rqs)
 		hctx->queue->mq_ops->commit_rqs(hctx);
 }
 
-- 
2.7.4

