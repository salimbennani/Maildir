Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 09 Dec 2018 18:54:17 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E78EF58052C;
	Fri,  7 Dec 2018 16:41:02 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 07 Dec 2018 16:41:02 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AgO4X4xajizIsxBqLA2DsU7j/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpci+bB7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTzBODYyh?=
 =?us-ascii?q?YYUPDeUPM+lWoYrzp1UQqhW+HhGsCeH0xz9Un3/22LE20+Q9HQzE2gErAtIAsG?=
 =?us-ascii?q?7TrNXwLKocSfq6w7TSwjXdcvhbxTL96InUchs8pvyMW6h/ftfLxkkxDQ/KlFCQ?=
 =?us-ascii?q?qY35Pz6O2eQNtnKU7+tkVe61l2EnrARxryGpy8wxiYfJnpoYxk7Y+Sh92oo5ON?=
 =?us-ascii?q?O1RFBhbdK5E5ZcqzuWOop0T886XW1kpCU3xqcCtJKmZiQG1o4rywPZZveaaYaH?=
 =?us-ascii?q?+AjjW/yUITpghHJqZra/hxGq/Ei+xe3zSNO03ExJriVbiNnMsG4C1xjJ5siAUP?=
 =?us-ascii?q?t98V+t2TeJ1w/N9uFJOV44mbbfJpI737I9mIQfvV7eEiL1hEn6lq6be0c89uit?=
 =?us-ascii?q?8evnY7HmppGGN49zjwHzKqAums25AeQlPQkCRmub9vqm1L3l40L5RKxGjvo4k6?=
 =?us-ascii?q?nfrp/aP98WprC2AwBLyIYv8RW/ACm80NQeg3YHKEhJeBWdj4jmI13OOuz3De+j?=
 =?us-ascii?q?g1Swlzdm3/TGPrziAprTNHTCn6rhcK15605dzgoz0N9e64hVCrEHPPL8REvxuM?=
 =?us-ascii?q?bEAR8+Ngy+2/znB8ll1oMCRWKPBbeUMKPIvl+J+uIgOe6MaJUVuDbgMfcl4fHu?=
 =?us-ascii?q?gGQ9mV8ce6mpwJQWZGq5HvRgP0WWf37sjs0dHmcNuwo0VPbqh0GaUT5Pe3ayWL?=
 =?us-ascii?q?ox5jM8CI24F4vDRYetgLqH3Ce8BZBWYmFGClaREXbnbYmEWvEMaD6MLc9liDAL?=
 =?us-ascii?q?Sb+hS4o53xG0qAD606ZnLvbT+iAAr53jz9h15+rQlR0o7zx7Fcad3nqJT2F1mG?=
 =?us-ascii?q?MIWjA30Lp+oUx71leMz6x4j+ZEGtxU4vNDSh06OoLEz+xmF9DyXRrMftSTR1ag?=
 =?us-ascii?q?WNmmBTAxQcg3w98BeEt9H9Sijhbe3yulGbMVlrqLBIAq/aLYxXT+O8F9y3Pe3q?=
 =?us-ascii?q?k7k1YmWtdPNXGhhqNn6gfcHZDJnFuDm6aqb6sc2jXN+3mFzWaJuEFYUwtwUaHe?=
 =?us-ascii?q?UHAbZ0vWq8n550zYQ7+vD7QnLhVOycqYJqRWbd3piE1MRO3/N9TGf2Kxh2CwCA?=
 =?us-ascii?q?6VybyWcorlZX8R3CXHB0gCiAAc43CGOBM6BiegpWLeETNvGUjuY0Pq7elxtne7?=
 =?us-ascii?q?QlUowAGNak1rz6C19QINhfyAV/MT2aoJuDsgqzVxG1a9w9LWCtqaqwp9ZqlcZs?=
 =?us-ascii?q?k94FNG1WLfuAxwJZigL6Fkhl4DfAV7pULu1xNrCopelcgmtm8lzA13KaiAylNO?=
 =?us-ascii?q?ayuY3YzsOr3QMmT95hSvZLDZ217A0Nea4LwA6OklpFr5ugGpFU0i82t83tlR0n?=
 =?us-ascii?q?uc4IjKDQUIXZLwVEY36wZ1p7XAbiYh4IPU0GVmMbOovT/ax9IpGOwlxw6gftdC?=
 =?us-ascii?q?Kq+LCBX+EswaB8e0LuwqlEOkbhYFPOBU6a41MNmqd/qA2K63IulgmCiqgnhA4I?=
 =?us-ascii?q?B4ykiM7TZzSvbU35YZxPGVxhGHVzbgg1i7qMD4hIdEaSsUHmWh0yjkBZddabFo?=
 =?us-ascii?q?coYPFGihPde3xtJ4h5P2X35Y9VijB04J2cOzeBqSaUD90hNU1UgNvXOnni64xS?=
 =?us-ascii?q?Rukz41tqqfwDDOw+P6eRsHO25HXmljgU33IYipidAXR0yobwkvlBu46kf23alb?=
 =?us-ascii?q?pKJjL2bNRUdEZTT5L2ZnUqGorLqNf9ZP6I80sSVQSOm8Y0qVSqT+oxsZ1CPvBX?=
 =?us-ascii?q?Beyyo4dzGpu5X5mQJ1iGSGIXZ3rXrZf9xwxBjF6NzdQ/5RwiQJRC1ihTbLAVi8?=
 =?us-ascii?q?OsGj/c+ImJfbruC+S2WhW4VTcCbxyoOMrim75WxsARCkm/Czm9vnERU10CPh1t?=
 =?us-ascii?q?lqUznIowj4YoXxy6u6NudndFFyBFDg88p6Bp1+kowoiZETw3cah4+Z/XoakWjp?=
 =?us-ascii?q?N9Vb1rnzbH4MRT4N3t7U7xLp2ExlLnKV2Y35Um+RzddmZ9m/emkWwD4y79hWCK?=
 =?us-ascii?q?eI67xJhS51olu7rQ3Le/R8kCkSyeAy6HEEmeEGoxQizj+SAr0JGUlYPCrslwmH?=
 =?us-ascii?q?7tykraVXYnqvfqa01EZkgd+hC7SCqBlGWHnlYpciATNw7sJnPVLQ133z75voed?=
 =?us-ascii?q?jKYtIVqx2UiAzAj+lOJZI1l/oKgzdnOG3nsX0kze47kQJh3ZWgsIebLGVt+bqz?=
 =?us-ascii?q?AgREOT3te8MT5jbtgL5FkcmM2ICvGohhFi8PXJv1Vv+oFDMStfL6NweBCjE8q3?=
 =?us-ascii?q?GbGabBEg+b8ktps3XPE5WzPXGNOHYZ1cliRAWaJEFHggAbRjA6kYAiFgyw2Mzt?=
 =?us-ascii?q?akR55i0S5l7lrBtD0PloOgL7Umfeogeodzg1RIKeLBpQ8gFN+UPVPdaC4eJ0Gi?=
 =?us-ascii?q?FS5oehoxCVKmyHewRICnkEW0yDB1D+J7mu+MPP8+6CCuqlKPvOZ7qOpPdaV/eJ?=
 =?us-ascii?q?w5Kvz4Rn8yyNNsWJInltEfk71lBfUnB+HsTTgy8PRDAPlyLRc86bow+x+i1poc?=
 =?us-ascii?q?C+8/TrWwPv6ZGMC7tINtVv9A65gb2eN+6Lnyt5LTdY1pURxX7H0rQf3VgSiz1w?=
 =?us-ascii?q?eDmpC7gPqSnNTKfIkK9NExEbcz9zNNdP768kxAZNJNXUisnr2b94lPI1D1ZFWE?=
 =?us-ascii?q?flmsGoY8wKPm68OEnGBEaNKLSJOznLz9vrbqO7TL1alP9UuAGouTaHD0/jOSyO?=
 =?us-ascii?q?lyXoVxCqK+1DkDuXMwBeuI6jdBZgEmzjTNPgah2mP957lzw2wbsohnzUMW4QKy?=
 =?us-ascii?q?Rzc0RIrreI9yNXnu1/G3Bd7npiNeSFmzyW7+/dKpYXt/tkGiV1l+JA73Q8xLtY?=
 =?us-ascii?q?9yVERP1zmCvPod9iuVCmku+TyjV5VBpCsCpEhIWOvRYqBaKMzpRcVGyMzhMP6X?=
 =?us-ascii?q?6MER1C88NoFtD1qYhRzNbVna7+ITsE9Mjbq5gyHc/RfeSOPHM/eTPsGSKcWA0M?=
 =?us-ascii?q?QTe1c2jahlB1n/Sb93nTpZ8//Mu/0KESQ6NWAQRmXsgRDV5oSZlbeM96?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AHAAA5Egtch0O0hNFkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBVAIBAQEBCwGDayeDepQqgWglFIkPkB8SAQEYEwGHXSI3Bg0BAwE?=
 =?us-ascii?q?BAQEBAQIBEwEBAQoLCQgpIwyCNiQBgmEBAQICAQECIAQZARsdAQMBAQkBAQUQD?=
 =?us-ascii?q?QICJgICAx4CEQEFARwGEwUWgwaBaQEDDQgFmg48iw18FgUBF4J3BYQ9ChknDV2?=
 =?us-ascii?q?BNwIGEnmLF4FXP4E4DBOFI4UuMYImAoZwhDeFEJACLgcCgWg5BIs6PYMvGIFci?=
 =?us-ascii?q?AcQJoQngngsjmOHCIJdAgQCBAUCBQ8hgTuBdzMaIy9LAQaCOz6BXQkDF4NKinQ?=
 =?us-ascii?q?fMoEFAQGKXQEB?=
X-IPAS-Result: =?us-ascii?q?A0AHAAA5Egtch0O0hNFkGgEBAQEBAgEBAQEHAgEBAQGBVAI?=
 =?us-ascii?q?BAQEBCwGDayeDepQqgWglFIkPkB8SAQEYEwGHXSI3Bg0BAwEBAQEBAQIBEwEBA?=
 =?us-ascii?q?QoLCQgpIwyCNiQBgmEBAQICAQECIAQZARsdAQMBAQkBAQUQDQICJgICAx4CEQE?=
 =?us-ascii?q?FARwGEwUWgwaBaQEDDQgFmg48iw18FgUBF4J3BYQ9ChknDV2BNwIGEnmLF4FXP?=
 =?us-ascii?q?4E4DBOFI4UuMYImAoZwhDeFEJACLgcCgWg5BIs6PYMvGIFciAcQJoQngngsjmO?=
 =?us-ascii?q?HCIJdAgQCBAUCBQ8hgTuBdzMaIy9LAQaCOz6BXQkDF4NKinQfMoEFAQGKXQEB?=
X-IronPort-AV: E=Sophos;i="5.56,328,1539673200"; 
   d="scan'208";a="55056844"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 07 Dec 2018 16:41:01 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726126AbeLHAk6 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 7 Dec 2018 19:40:58 -0500
Received: from mail-pf1-f194.google.com ([209.85.210.194]:35976 "EHLO
        mail-pf1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726041AbeLHAk5 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 7 Dec 2018 19:40:57 -0500
Received: by mail-pf1-f194.google.com with SMTP id b85so2701806pfc.3
        for <linux-kernel@vger.kernel.org>; Fri, 07 Dec 2018 16:40:56 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:subject:from:in-reply-to:date:cc
         :content-transfer-encoding:message-id:references:to;
        bh=rdsRmF4WQnETxwYL1tK8P25bz6qzwmQ6m4WA7kOJymI=;
        b=J+/ONAEZV13neSlpK/mhKeG3jtuolcyex4VPvCAT3NhNagfAOgkFtvPDZ2n9x7JySD
         gWJn1R+I7X6UNlch+xreRV/ktsnLALNrZCRb68MrWpxruuqgN5MFz8jxPCwT+tnafZjq
         1acHQBdgWJ79tVHpG4fvWZYa4RZIZuNVWZ1MHWvoesPhFhHVwAPIAS3hFmMRaKGPyh6F
         AjSvX9KnD/m/p+9+RWHrRBqDQAcm5Os/zcHiop1O3Dq/dNKuvcp7LXkhA3BACrGrrAhM
         4Wgxbc/+gjUtDZdgi3O5gb6LkH4wFe1gAbFm7ygNrq+GWbmjwph9y2V6oyTrebjETFPC
         hp+A==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:subject:from:in-reply-to:date:cc
         :content-transfer-encoding:message-id:references:to;
        bh=rdsRmF4WQnETxwYL1tK8P25bz6qzwmQ6m4WA7kOJymI=;
        b=frpDHz31PcVI5v1aDe2fPK3faXJzZ39Tf2ME4w4IAVCW2mjnobuu2rtX3b7EgweAe7
         iWuV4UOFTLVIZDHcDCslZRAGf8khOaQWo6p2KlY9idFXoCy51UgOggT+t8YtV0+uk0Uk
         dm5OnUKP5NCN1MyjH8QBuM+qRKV7S/Jp85jQ/5RAn6G1WVBK5JW02oJueY7rKzdYfsTq
         zwhBPmwq4tGx1GWOeyPKfH4Y6kRmsLx3inMUJjxoNbPQ+Vjv1nSzLGPU6Dy6fMEB/T0v
         c9QnISk39nwmor+Kjf1PJ4hkgFD8bUzOseO3QSrb8v9yWFMfmZrhQoQhu7mok+rteeHb
         WEeg==
X-Gm-Message-State: AA+aEWbxd2oTRgGfpo32UgRdzABzfxAiIZbK3iOAEQL1lUkpWHGDlxE6
        TH59Ic+dv2rUyQLXDb8qGGs=
X-Google-Smtp-Source: AFSGD/WpcO1xXCAGI7AfFj4i9GCZ+idkbhi654kN0Id00ZYp1a6CuyrIblIiGwSBb1bsP9LjSoUx0A==
X-Received: by 2002:a63:4b60:: with SMTP id k32mr3745849pgl.186.1544229655385;
        Fri, 07 Dec 2018 16:40:55 -0800 (PST)
Received: from [10.2.19.70] ([208.91.2.1])
        by smtp.gmail.com with ESMTPSA id d11sm4501923pgi.25.2018.12.07.16.40.53
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Fri, 07 Dec 2018 16:40:54 -0800 (PST)
Content-Type: text/plain;
        charset=utf-8
Mime-Version: 1.0 (Mac OS X Mail 12.1 \(3445.101.1\))
Subject: Should this_cpu_read() be volatile?
From: Nadav Amit <nadav.amit@gmail.com>
In-Reply-To: <C29C792A-3F47-482D-B0D8-99EABEDF8882@gmail.com>
Date: Fri, 7 Dec 2018 16:40:52 -0800
Cc: Matthew Wilcox <willy@infradead.org>,
        Vlastimil Babka <vbabka@suse.cz>,
        Linux-MM <linux-mm@kvack.org>,
        LKML <linux-kernel@vger.kernel.org>, X86 ML <x86@kernel.org>,
        Ingo Molnar <mingo@redhat.com>,
        Thomas Gleixner <tglx@linutronix.de>
Content-Transfer-Encoding: quoted-printable
Message-Id: <C064896E-268A-4462-8D51-E43C1CF10104@gmail.com>
References: <20181128140136.GG10377@bombadil.infradead.org>
 <3264149f-e01e-faa2-3bc8-8aa1c255e075@suse.cz>
 <20181203161352.GP10377@bombadil.infradead.org>
 <4F09425C-C9AB-452F-899C-3CF3D4B737E1@gmail.com>
 <20181203224920.GQ10377@bombadil.infradead.org>
 <C377D9EF-A0F4-4142-8145-6942DC29A353@gmail.com>
 <EB579DAE-B25F-4869-8529-8586DF4AECFF@gmail.com>
 <20181206102559.GG13538@hirez.programming.kicks-ass.net>
 <55B665E1-3F64-4D87-B779-D1B4AFE719A9@gmail.com>
 <20181207084550.GA2237@hirez.programming.kicks-ass.net>
 <C29C792A-3F47-482D-B0D8-99EABEDF8882@gmail.com>
To: Peter Zijlstra <peterz@infradead.org>
X-Mailer: Apple Mail (2.3445.101.1)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

[Resend, changing title & adding lkml and some others ]

On Dec 7, 2018, at 3:12 PM, Nadav Amit <nadav.amit@gmail.com> wrote:

[ We can start a new thread, since I have the tendency to hijack =
threads. ]

> On Dec 7, 2018, at 12:45 AM, Peter Zijlstra <peterz@infradead.org> =
wrote:
>=20
> On Thu, Dec 06, 2018 at 09:26:24AM -0800, Nadav Amit wrote:
>>> On Dec 6, 2018, at 2:25 AM, Peter Zijlstra <peterz@infradead.org> =
wrote:
>>>=20
>>> On Thu, Dec 06, 2018 at 12:28:26AM -0800, Nadav Amit wrote:
>>>> [ +Peter ]
>>>>=20

[snip]

>>>>=20
>>>> *But* there is one thing that may require some attention - patch
>>>> b59167ac7bafd ("x86/percpu: Fix this_cpu_read()=E2=80=9D) set =
ordering constraints
>>>> on the VM_ARGS() evaluation. And this patch also imposes, it =
appears,
>>>> (unnecessary) constraints on other pieces of code.
>>>>=20
>>>> These constraints are due to the addition of the volatile keyword =
for
>>>> this_cpu_read() by the patch. This affects at least 68 functions in =
my
>>>> kernel build, some of which are hot (I think), e.g., =
finish_task_switch(),
>>>> smp_x86_platform_ipi() and select_idle_sibling().
>>>>=20
>>>> Peter, perhaps the solution was too big of a hammer? Is it possible =
instead
>>>> to create a separate "this_cpu_read_once()=E2=80=9D with the =
volatile keyword? Such
>>>> a function can be used for native_sched_clock() and other seqlocks, =
etc.
>>>=20
>>> No. like the commit writes this_cpu_read() _must_ imply READ_ONCE(). =
If
>>> you want something else, use something else, there's plenty other
>>> options available.
>>>=20
>>> There's this_cpu_op_stable(), but also __this_cpu_read() and
>>> raw_this_cpu_read() (which currently don't differ from =
this_cpu_read()
>>> but could).
>>=20
>> Would setting the inline assembly memory operand both as input and =
output be
>> better than using the =E2=80=9Cvolatile=E2=80=9D?
>=20
> I don't know.. I'm forever befuddled by the exact semantics of gcc
> inline asm.
>=20
>> I think that If you do that, the compiler would should the =
this_cpu_read()
>> as something that changes the per-cpu-variable, which would make it =
invalid
>> to re-read the value. At the same time, it would not prevent =
reordering the
>> read with other stuff.
>=20
> So the thing is; as I wrote, the generic version of this_cpu_*() is:
>=20
> 	local_irq_save();
> 	__this_cpu_*();
> 	local_irq_restore();
>=20
> And per local_irq_{save,restore}() including compiler barriers that
> cannot be reordered around either.
>=20
> And per the principle of least surprise, I think our primitives should
> have similar semantics.

I guess so, but as you=E2=80=99ll see below, the end result is ugly.

> I'm actually having difficulty finding the this_cpu_read() in any of =
the
> functions you mention, so I cannot make any concrete suggestions other
> than pointing at the alternative functions available.


So I got deeper into the code to understand a couple of differences. In =
the
case of select_idle_sibling(), the patch (Peter=E2=80=99s) increase the =
function
code size by 123 bytes (over the baseline of 986). The per-cpu variable =
is
called through the following call chain:

	select_idle_sibling()
	=3D> select_idle_cpu()
	=3D> local_clock()
	=3D> raw_smp_processor_id()

And results in 2 more calls to sched_clock_cpu(), as the compiler =
assumes
the processor id changes in between (which obviously wouldn=E2=80=99t =
happen). There
may be more changes around, which I didn=E2=80=99t fully analyze. But =
the very least
reading the processor id should not get =E2=80=9Cvolatile=E2=80=9D.

As for finish_task_switch(), the impact is only few bytes, but still
unnecessary. It appears that with your patch preempt_count() causes =
multiple
reads of __preempt_count in this code:

       if (WARN_ONCE(preempt_count() !=3D 2*PREEMPT_DISABLE_OFFSET,
                     "corrupted preempt_count: %s/%d/0x%x\n",
                     current->comm, current->pid, preempt_count()))
               preempt_count_set(FORK_PREEMPT_COUNT);

Again, this is unwarranted, as the preemption count should not be =
changed in
any interrupt.


