Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 06 Dec 2018 08:47:32 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 40CC5580443;
	Wed,  5 Dec 2018 00:57:57 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga003-1.jf.intel.com with ESMTP; 05 Dec 2018 00:57:57 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Aitt6NRwsyw1OGbjXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e4UI/ad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWVOXshTWCJBDI2y?=
 =?us-ascii?q?bJYBAfQdMuZDt4nwpUADrQeiCQS2GO/j1iNEi33w0KYn0+ohCwbG3Ak4EtwUrn?=
 =?us-ascii?q?vUsMv6NL0PWu2rzKnH0zPDZO5R1Df96YnIag4uoe2SUrJqbcXRyVcgFwXeg1Wf?=
 =?us-ascii?q?rIzqJTKV1uAXv2eH6OpgUPuihmg6oA9yujii3tkghpXNi44P11zJ+zt1zJwoKd?=
 =?us-ascii?q?C7VEJ3e9+pHZlIuy2EK4d7RtkuTmJotSog17ELuJ+2cDILxZkmwRPUduaJfJKS?=
 =?us-ascii?q?4h35UeacOTd4i2xheLK4nxuy70egxfPmVsWu01ZFsDBFkt/SuXAJzRDT7dKHSv?=
 =?us-ascii?q?Rl8keg3zaAyRzT5/laLUwokafXMYMtz7AumpYJrEjOHTP6lF/3gaKUbkkk//Kn?=
 =?us-ascii?q?6+XjYrXovJ+cMIp0hxn6MqQvnMy/HOs5PhENX2eF4+S80qPs/UngTLVNgPw2lL?=
 =?us-ascii?q?fWsIrBKMQFqa62HRVV3pwg6xmhFTem1soXnX0dIFJCYhKHgJDlO0vSL/DgEfe/?=
 =?us-ascii?q?n1OsnS9vx/DHPb3uHI/BL3fekLr6ebZ96khcyBc8zNxF5pJUDK0BL+z3WkPrqN?=
 =?us-ascii?q?PYCRo5ORSuw+n7ENV9yp8eWWWXD6+ZKqzSsEOI6fgoI+WWZI8VpSzyK/4q5/P1?=
 =?us-ascii?q?iX85mFkdfbSm3JcNaXC4GOhmLFudYXb2ntgBFmIKtBIkTOP2kF2CTSJTZ3GqUq?=
 =?us-ascii?q?I+4TE0FpiqDYTERoCrhryB2zy2HplXZmBAF1CNHm3kd4SCW/cQdi2SJtVtnSAD?=
 =?us-ascii?q?VbikU4Uhzw2htBfmy7p7KerZ4jcXtYnj1Nhy5O3fjwsy+iZ2D8mG12GNTmd0nn?=
 =?us-ascii?q?4HRjMs3aB/p1B9xUmH0aRin/NYEtlT7etTUggmLZ7c0/B6C9fqVwLCZNiJTkyq?=
 =?us-ascii?q?QtGnAT4rSNIxzMQDY0J8G9WkkxDC0DCmA74Tl7yXGpM09rjQ0GT2J8Z403zGzr?=
 =?us-ascii?q?Uuj0E6QstTMm2rnrNw+BLNB4HXiUmZl7yldaIH3CHT8mePym6OvEJdUA50SqjF?=
 =?us-ascii?q?WXEfZk3LrdX2/E/CTrmuCag5PQtF08KNNqxKatjxh1VcWPjjIMjeY362m2qoGB?=
 =?us-ascii?q?mH3K2MY5Twd2UdxirdDlMEnB4V/XudMQg+ByGho3/RDTB0FFLvZV/s/vd6qH+h?=
 =?us-ascii?q?UkA0yASKZVV717Wp4h4VmeCcS/QL07IYuSchrjJ0HEq939PWEdaAuxBtfKJGYd?=
 =?us-ascii?q?M54VdH023Zuhd5PpyhKaBim1Effx52v0PoyxV4FIFAndI2o3MtyQp4MbiY309Z?=
 =?us-ascii?q?dzOEwZDwPaXaJXP2/B+xZK/ZxFHf3MyN9acS9fs3sVPjvAKuFko86Hhn19hV03?=
 =?us-ascii?q?2B5pTFFgYSUJTxUlop+Bh+vb3Vfi4954bM3312Laa0qiPC284uBOY9yhegYs1T?=
 =?us-ascii?q?P7+eGA7zE80VHc6uKOMxllitbxIEOv1S9aEuM8OncfuGxLCkPOJ6kD26imRH5Z?=
 =?us-ascii?q?h30liQ+CpkVu7Iw5EFzumC3guGSzjzlk2hvd3wmYxeYzEdAHC/ySn9CIFNfKJy?=
 =?us-ascii?q?eZsEBnm0I82wwNVznJrtW39e9F6+CFIKws6peRyOb1Pj2Q1cz1gYoXuimSGg1T?=
 =?us-ascii?q?x7jykprraD3CzJ2+njdBsHNnRLRWV4llfsPI60gsseXEipaQgpiRSk6Vz7x6hd?=
 =?us-ascii?q?uKRwMW3TTV1UcCjxKmFoSrGwuaaaY85T9JMotj1aUOamblCASb79oBwa3zn4H2?=
 =?us-ascii?q?RExzA7dDCqupPnkBx8k2+dKHdzrHzEecB/3xvf5drcReJP0ToCXiV3lT7XBl2k?=
 =?us-ascii?q?Ndmz4dqUj4vDsvy5V2+5Vpxcay7rwZmCtCu6421nGhm/n/G1mt36Hgk2yy7719?=
 =?us-ascii?q?92VSrWqBbweJXk16O/Meh/ZElnGEf869ZmGoF5ioYwh4sf2XkAipWV4HoIi2Hz?=
 =?us-ascii?q?MdpA1KL6bXoNQyMLwtHP7Ajk3k1jMmyGx4bjWnqBxcthYsGwYnkK1SIl88BKFK?=
 =?us-ascii?q?CU4aRBnSt0oVq3txjdYPZjkTcG1fsh9mQajPoXtwo3wSWQGbQSHUhePSzxmBWE?=
 =?us-ascii?q?9dG+rKNLZGmxdbi8zlZxndekDLuauAFTRG75eos+HS939sh/LFXM0Hjp5oDlYt?=
 =?us-ascii?q?bQa88TtgaPkxfBlOVVLJMxlvwXhStoI279vHsly/Ilghxqx521oI+HK2B19qKj?=
 =?us-ascii?q?HhFYLiH1Z98U+jz1lqlRhMGW34SyHpl7HjULQYDlTfapEDIUqPTmOByCEDw6qn?=
 =?us-ascii?q?eHB7XfGRWT51thr3LKC5qrLW2YJGEFzdV+QxmQPE5fjxoRXDokhZ41DByqyNbi?=
 =?us-ascii?q?cEdk5TAR+1j4pQFXyu9zMxn/U2HfpBqnazsuSZifKgZW4R9G50vPLcOe6edzFT?=
 =?us-ascii?q?lC/pK9tAyNNnCbZwNQAGAJXUyEGknjPqS06tnG6eSYHe2+L/3BYbiVrexeVvGI?=
 =?us-ascii?q?xY+g04d8/jaMMNmPMWdmD/EhxkVDWnV5EdzDmzoTUywXiz7Nb8mDqRe85CJ3r8?=
 =?us-ascii?q?O/8PfqWA715ouPEbxSMdpx9BCsnKeDLPWdhCJ4KTZey5MNymXEyLkZ3F4OlS5u?=
 =?us-ascii?q?cyOhHqgHtS7IVKjQgLNYDwYHayNvM8tF97gz3hRWNs7BlNz01qR0jvo0C1peUV?=
 =?us-ascii?q?zhm8epZdEFIm2nNVPHAlqLO6qCJTHR3873Zqa8Q6VKjOpIrx2wpSqbE0j7MzSf?=
 =?us-ascii?q?ljnpUgqjPv1WgC6HPBxRpoe9fw1pCWjiStLmdxK6PMV2jT0w3b07mHfKOXQAPj?=
 =?us-ascii?q?h7dkNHtqeQ4j9AgvVjB2xB6WJoLOmelCaf6unYK5AWvuNqAyR0je1a5ns6xqBR?=
 =?us-ascii?q?7CFFQvx1hSTTosRvo1GgjumA1D5nXABSpTZMgYLY9XllbL/e+ZRaQF7Y/VQG6m?=
 =?us-ascii?q?DDJQ4Noo5dB8Hioeh7ytXJ3PbzOi9P79/O9ssRAeDbLcuGNDwqNh+/S22cNxcM?=
 =?us-ascii?q?UTP+bTKXvEdaivzHsyTN9pU=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CVBgDdkQdch0O0hNFkHQEBHwUBBgGBT?=
 =?us-ascii?q?AKDaieDeYN7kjkUiQ9ujTsUgV8sEwGHTiI0CQ0BAwEBAQEBAQIBEwEBAQgNCQg?=
 =?us-ascii?q?pIwyCNiQBgmIBAgMBAiAEGQEbHQEDAgkBAQUFCw0CAiYCAgMfAREBBQEcGQWDH?=
 =?us-ascii?q?IFpAQMVBZk1PIsNfBYFAReCdwWEPQoZJw1dgTcCBhJ5ixMXgX+BEYMShEaDP4J?=
 =?us-ascii?q?XAokOIIcBkCAJkUEYkSyYajCBJYINMxojgQGCO4InF4NKimAyM4EFAQGLJwEB?=
X-IPAS-Result: =?us-ascii?q?A0CVBgDdkQdch0O0hNFkHQEBHwUBBgGBTAKDaieDeYN7kjk?=
 =?us-ascii?q?UiQ9ujTsUgV8sEwGHTiI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmIBA?=
 =?us-ascii?q?gMBAiAEGQEbHQEDAgkBAQUFCw0CAiYCAgMfAREBBQEcGQWDHIFpAQMVBZk1PIs?=
 =?us-ascii?q?NfBYFAReCdwWEPQoZJw1dgTcCBhJ5ixMXgX+BEYMShEaDP4JXAokOIIcBkCAJk?=
 =?us-ascii?q?UEYkSyYajCBJYINMxojgQGCO4InF4NKimAyM4EFAQGLJwEB?=
X-IronPort-AV: E=Sophos;i="5.56,317,1539673200"; 
   d="scan'208";a="56158196"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 05 Dec 2018 00:57:29 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727372AbeLEI5Z (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 5 Dec 2018 03:57:25 -0500
Received: from mail-io1-f66.google.com ([209.85.166.66]:36057 "EHLO
        mail-io1-f66.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726102AbeLEI5Z (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 5 Dec 2018 03:57:25 -0500
Received: by mail-io1-f66.google.com with SMTP id m19so16053809ioh.3;
        Wed, 05 Dec 2018 00:57:23 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=zERybKQJd2x47hfhSLTf44xTTD9wdxtlCkhng0jSipg=;
        b=kU4oxF7Au11Hb3CwmCYodQDJp54822xanGFsv3ZDtfifvmi9ZYr5KzJGJe1RMWAzGU
         I54ZBK7tEKkPbYbI5v471BxJwJN8WsmwB4iLN+hSrdZqb5xZ0l42o0WYgd4iWTNjwUK8
         5nHXTiU0uVzmTWKiryfQO5No942WnSCM8TerHwOyg17JQo/82Bw7yPxy8+5JFpd1iZTM
         spVSZBPnsAKgfm1BY2u3fROL2Gw6EAeFOr7FObSo3/6JAZ0HYrlu2tfvaOmzNSzsvF6F
         fkm6sbjKnvgpheNI2s/R7PdqIwHqxzAXVe1pe+xXxhp3/y9QL5YddfaA6C8IBJk+fT9+
         200Q==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=zERybKQJd2x47hfhSLTf44xTTD9wdxtlCkhng0jSipg=;
        b=t+Jrd/q/DpD7ivZzF21kz7l4JWixpP2g79/xT8zfkwB9DxNaQqwmEXimkGMp5czfpd
         hm8ukwMQJQzeDjjVNhZ/C9xu99i+vKl+kgx785KxPc+BPNZj3Jo5YbfEovx3T4tnIELV
         AFotIhmDDtQNVBUZX/nJ3SGb3aR93xZOKRIcAMWQO6Ulsv3RRjwUcpXMFgnNYKtwchL2
         RZaiDLhOGpzfXeGemWmSKpRvexPPe9ZP92JeWsm4EgasUXPQtezcMYt+CHy//hUu3Hvp
         KrJkd+lAQbuBoYmE7hYN90MJMj4SqIFA0xIAnzL7OxnHDmquoks850qskFidNvV1fBJ6
         khPQ==
X-Gm-Message-State: AA+aEWZRPGb1LPq5gSNdZyjCDn+aaO2aOS8h9oKyKvJXgTuszgem63Wh
        cnJ8xetwadXbRwLqAodLdPHLfWWQMqVg9x9Wi/4=
X-Google-Smtp-Source: AFSGD/XfXY6LkhTIe776Y1LWSm62+8xBj5DN70c4gOjmjwTZzRPHmAM4kYv7RSeUQOI7HqzoA+PDjViEMYKMRnlkCKU=
X-Received: by 2002:a6b:8b0a:: with SMTP id n10mr19425414iod.2.1544000243348;
 Wed, 05 Dec 2018 00:57:23 -0800 (PST)
MIME-Version: 1.0
References: <1542535751-16079-1-git-send-email-pawell@cadence.com>
 <1542535751-16079-5-git-send-email-pawell@cadence.com> <5BF7E5E8.3090406@ti.com>
 <CAL411-rWc23fbP0Ny9Kfdpe9ESUSVt5X00G1uFjJf+rj-2jWzg@mail.gmail.com> <5C065AEE.4010205@ti.com>
In-Reply-To: <5C065AEE.4010205@ti.com>
From: Peter Chen <hzpeterchen@gmail.com>
Date: Wed, 5 Dec 2018 16:57:12 +0800
Message-ID: <CAL411-rdMjjWBB0sKV690kpGdqiTPpMTaKsJ6aEaABgzig=cFw@mail.gmail.com>
Subject: Re: [RFC PATCH v2 04/15] usb:cdns3: Driver initialization code.
To: rogerq@ti.com
Cc: pawell@cadence.com, devicetree@vger.kernel.org,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        linux-usb@vger.kernel.org, lkml <linux-kernel@vger.kernel.org>,
        adouglas@cadence.com, jbergsagel@ti.com, nsekhar@ti.com, nm@ti.com,
        sureshp@cadence.com, peter.chen@nxp.com, pjez@cadence.com,
        kurahul@cadence.com
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

>
>
>
> On 04/12/18 10:50, Peter Chen wrote:
> >>> + * Cadence USBSS DRD Driver.
> >>> + *
> >>> + * Copyright (C) 2018 Cadence.
> >>> + *
> >>> + * Author: Peter Chen <peter.chen@nxp.com>
> >>> + *         Pawel Laszczak <pawell@cadence.com>
> >>> + */
> >>> +
> >>> +#include <linux/module.h>
> >>> +#include <linux/kernel.h>
> >>> +#include <linux/platform_device.h>
> >>> +#include <linux/interrupt.h>
> >>> +#include <linux/io.h>
> >>> +#include <linux/pm_runtime.h>
> >>> +
> >>> +#include "gadget.h"
> >>> +#include "core.h"
> >>> +
> >>> +static inline struct cdns3_role_driver *cdns3_get_current_role_driver(struct cdns3 *cdns)
> >>> +{
> >>> +     WARN_ON(cdns->role >= CDNS3_ROLE_END || !cdns->roles[cdns->role]);
> >>> +     return cdns->roles[cdns->role];
> >>> +}
> >>> +
> >>> +static inline int cdns3_role_start(struct cdns3 *cdns, enum cdns3_roles role)
> >>> +{
> >>> +     int ret;
> >>> +
> >>> +     if (role >= CDNS3_ROLE_END)
> >>
> >> WARN_ON()?
> >>
> >>> +             return 0;
> >>> +
> >>> +     if (!cdns->roles[role])
> >>> +             return -ENXIO;
> >>> +
> >>> +     mutex_lock(&cdns->mutex);
> >>> +     cdns->role = role;
> >>> +     ret = cdns->roles[role]->start(cdns);
> >>> +     mutex_unlock(&cdns->mutex);
> >>> +     return ret;
> >>> +}
> >>> +
> >>> +static inline void cdns3_role_stop(struct cdns3 *cdns)
> >>> +{
> >>> +     enum cdns3_roles role = cdns->role;
> >>> +
> >>> +     if (role == CDNS3_ROLE_END)
> >>
> >> WARN_ON(role >= CNDS3_ROLE_END) ?
> >>
> >>> +             return;
> >>> +
> >>> +     mutex_lock(&cdns->mutex);
> >>> +     cdns->roles[role]->stop(cdns);
> >>> +     cdns->role = CDNS3_ROLE_END;
> >>
> >> Why change the role here? You are just stopping the role not changing it.
> >> I think cdns->role should remain unchanged, so we can call cdns3_role_start()
> >> if required without error.
> >>
> >
> > The current version of this IP has some issues to detect vbus status correctly,
> > we have to force vbus status accordingly, so we need a status to indicate
> > vbus disconnection, and add some code to let controller know vbus
> > removal, in that case, the controller's state machine can be correct.
> > So, we increase one role 'CDNS3_ROLE_END' to for this purpose.
> >
> > CDNS3_ROLE_GADGET: gadget mode and VBUS on
> > CDNS3_ROLE_HOST: host mode and VBUS on
> > CDNS3_ROLE_END: VBUS off, eg either host or device cable on the port.
> >
> > So, we may start role from CDNS3_ROLE_END at probe when nothing is connected,
> > and need to set role as CDNS3_ROLE_END at ->stop for further handling at
> > role switch routine.
>
> OK. but still this (changing to ROLE_END) must be moved to the role switch routine
> and the explanation you just mentioned must be added there.
>

If we use host part as separate driver, something may need to change.
The ROLE_END
may need to add at role switch routine as your said.

> >
> >>> +     mutex_unlock(&cdns->mutex);
> >>> +}
> >>> +
> >>> +static enum cdns3_roles cdns3_get_role(struct cdns3 *cdns)
> >>> +{
> >>> +     if (cdns->roles[CDNS3_ROLE_HOST] && cdns->roles[CDNS3_ROLE_GADGET]) {
> >>> +             //TODO: implements selecting device/host mode
> >>> +             return CDNS3_ROLE_HOST;
> >>> +     }
> >>> +     return cdns->roles[CDNS3_ROLE_HOST]
> >>> +             ? CDNS3_ROLE_HOST
> >>> +             : CDNS3_ROLE_GADGET;
> >>
> >> Why not just
> >>         return cdns->role;
> >>
> >> I'm wondering if we really need this function.
> >
> > cdns->role gets from cdns3_get_role, and this API tells role at the runtime.
> > If both roles are supported, the role is decided by external
> > conditions, eg, vbus/id
> > or external connector. If only single role is supported, only one role structure
> > is allocated, cdns->roles[CDNS3_ROLE_HOST] or cdns->roles[CDNS3_ROLE_GADGET]
> >
>
> How about adding this description in function documentation.
>

Sure, but may need to redesign it due to host part as a standalone driver.


> >>
> >> Then you can move cdns3_role_start() as well to core_init_role().
> >>
> >
> > Usually, we request irq after hardware initialization has finished, if not,
> > there may unexpected interrupt.
>
> Doesn't kernel warn if interrupt happens and there is no handler?
> To avoid that I was suggesting to request_irq first.
>

The interrupt will not happen (related bit at GIC is masked) until we
call request_irq.
And we don't want to handle interrupts until hardware initialization, don't we?

Peter
