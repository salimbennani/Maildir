Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 09 Dec 2018 18:49:09 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 7C38A5803E4;
	Fri,  7 Dec 2018 05:14:30 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 07 Dec 2018 05:14:30 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ARFiqihfVbkPPPGTJV24tmPz+lGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc6+YhSN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRPDI28?=
 =?us-ascii?q?cYUBEukPPehXoIbhulQBrxWxBRK0BO7t0TJIiWP60Lcg3ug9CwzKwgotFM8Ovn?=
 =?us-ascii?q?TOq9X1Mb8fX+evw6nSzjXIcu5b2S366InGdBAqvPaBUqlqccrWzkkvEQLFgUuL?=
 =?us-ascii?q?pIzmITyVzOINvHaf7+Z6UuKvkWEnphh3rzOyxckskpHEipwJxl3A7yl13Yg4Kc?=
 =?us-ascii?q?OiREJmYtOoDIFcuiCYOoduQc4uXXtktSg4x7EcpJK2fSsHxI4oyhPdbfGMbpKG?=
 =?us-ascii?q?7Qj5VOmLJDd1nHJld6y7hxa16UWg1OL8Wdeu0FpQrSpKjMPMtnYT2BzX8MSHTe?=
 =?us-ascii?q?F9/ki51TaO0QDc9P1ELFgqmabHL5Mt2KM8m5QNvUjZAyP7m1n6gLWXe0gm4uSo?=
 =?us-ascii?q?7v7oYrTipp+SLY90jQT+P7wqmsy+B+Q4LwcPU3GY+euizr3j+1P2QLFTgv0xnK?=
 =?us-ascii?q?jZto7VJd4Aq66nDA9azJwj5wy8Dzi4ytQYm2cILFZfdBKAlYjpNEnCIOrkAven?=
 =?us-ascii?q?n1SsjDBryujCPr3gAZXCMGLPkbj8fbtm705cyQwzzc1Q5p5OC7EBJu7zVVH1tN?=
 =?us-ascii?q?DCEhA5NAm0yf79CNphzoMeRX6PAqiBPaPSq1CI5/4vLPOLZIMPuDb9NuIq5/jh?=
 =?us-ascii?q?jXIinV8dfK+p3YYYaXyiH/RmJVmZbmTogtsbDWgKuQ8+RvTwiFKeST5Te2qyX6?=
 =?us-ascii?q?Uk6zE5D4KpE53PRoOqgLyH2ie7GYZbZmRHClCKDHfpeJ+IW/YKaCKOPMBhliYI?=
 =?us-ascii?q?WqSmS48kzRuurhP1y6J7LurI/S0VrYjs1MN15+3UlhE+7yZ0AN6f02yWS2F0n2?=
 =?us-ascii?q?UIRyI53axloEx9zEuD3rZ8g/BCCdNT4PZJWB8gNZHA1+x6F8zyWgXZc9eKUlmm?=
 =?us-ascii?q?RM+qATUwTt0rxd8ObF1wG9GjjhDFwiqrDKUZl72NBJwo7K3c22L9KNp6y3bDzK?=
 =?us-ascii?q?MhlUUpQtNTNW26ga5y7xXcCJTXk0qHjaqqdb4T3CjW9Gidy2qCu0VYUA11UaXB?=
 =?us-ascii?q?Rn0fYkrWrdLk5kLNVbOuCLInMhdfxs6GMKdFdtrpjVBeTvf5JNvee36xm3u3BR?=
 =?us-ascii?q?uQ27yDdpTqdHsH0CXdEkcElRsT8miANQUlAiehomTeDCFhFF71YkPs9/V+p22/?=
 =?us-ascii?q?TkMu0w6KaEhh3aKv+hEJnfycV+8T3rUctSc9qjV0GVG9387WC9uAvQZhYL9QYd?=
 =?us-ascii?q?Qn4FdD1GLZsQN9M4ekL6BjgF4ebgt2s1nv1xVxFoVPj8wqoGk2wwp1LKKSyElB?=
 =?us-ascii?q?eC+A3ZDsJr3XLXH/8wqra6HI1VDRztaX9r0U5/QltlrspgepFkkl83V5yNRV13?=
 =?us-ascii?q?qc5pPXDAsdS57xU0A39wRkqLHeeCUy+4TU1Xh0O6murjDCw84pBPciyhu4f9Zf?=
 =?us-ascii?q?LbmIGxPoH8wbB8ihMuoqm1eyYxIAPeBS8rM0Psy8e/uH3q6rIPhvnDa8gWtb54?=
 =?us-ascii?q?B911qG9zBgRe7Qw5YF3/aY0xOdVzf9kFiuqNr3lp1DZT0IGGqw1zLkBI9IaqJu?=
 =?us-ascii?q?Z4kLDXqhLNOtxtV5gZ7gQHpY9F+lB1Mb186lYxuSb1rh3QJO0UQbu2ComSy9zz?=
 =?us-ascii?q?ZsiTEmsrKf3DDSw+TlbBcGOm9LSHNijFv2Ooi0ktYaUVOsbwgokhul+En7y7Ja?=
 =?us-ascii?q?pKR5M2ncX0NIczLqIGFlV6u6rqCCbNJX6JM0rSVXV/yxYVKARb7noBsa0CTjE3?=
 =?us-ascii?q?FFxD8hdDGquZT5nxpkh2KbN3tzqHvZecdtxRbQ/tDcRPhR3iYYSyl8kzXYGl+8?=
 =?us-ascii?q?P9yx99WOi5jDqvy+V36mVpBLcSjk14SAuDG55W1rBx2yhPSzmtzhEQgn3i73zd?=
 =?us-ascii?q?hqVSPUrBniZonnzbi1MeVifkNwHl/z99J6Gp1ikos3nJwQ2mIVhpSP8XoHjGf8?=
 =?us-ascii?q?K9Nb2a3lYXoJRD4LxcPV4Qf/1E1iKHKJ25z2VnGHzsR9YNm6Z3sc2jgh4MBSFK?=
 =?us-ascii?q?eU8LtEkDNwolq5rgLee+JxnzkDxvs19H4VnfsJtxEzwSWHDbAfBk1YPS3qlxSV?=
 =?us-ascii?q?4NGytqRXZGCzcbeu0Epyh8yuDLaHogtEQnb2Zo8iHTNs7sV4KF/MzHrz6oT+dN?=
 =?us-ascii?q?jRd90TsACUkwzbj+hUM58xkvsKhSx6OWPyp3Elyug7jQBw0pG+poSIN2Jt/Keh?=
 =?us-ascii?q?CB5CKjL1f98T+i3qjatGhcmZxYevHpF8GjkRWJvoUOmlEDYTtfThKgaPHycwqn?=
 =?us-ascii?q?adGbrDAwCf7F1qoG7IE5CuL3uXPmUWzc1+RBmBI0xSmAIUUy8/npEnDQCm3tDh?=
 =?us-ascii?q?fF165jAM5V74tx1MxfhzNxTkVmffpQGoaio7SZSFLRpW6B1C6FnRMcCE8u1zGC?=
 =?us-ascii?q?RY9IW7rAORMmybexhIDWYRV02EAFDjI6Cu5cTa/OieHOa+NPzOYbOBqeFFU/eI?=
 =?us-ascii?q?xJSv0pZp/jqWN8WPOGViAOM/2kZZQX95HMHZkS0VSyMLjyLNc9KbpBCk9y13sM?=
 =?us-ascii?q?+/8ffrWAHu5YeVCLtSK9Jv+x+ojqeZKu6Qnz10KTJZ1pMK2H/Jx6IT3F8UiyFy?=
 =?us-ascii?q?aTatFa4MujLKTKLVgqVXFQIUaztvNMtU6KIxxhNCOdPAhdPvyLF5juQ5C1NEVV?=
 =?us-ascii?q?H6nsGpZMoKI3yyNV/dBUaLMqiGKiPPw83tfay8TrhQhv1OtxKsoTabD1PjPjOb?=
 =?us-ascii?q?mjn1VhCvNPtAgz2BMBNCuIGybBBtBHPnTNLnbB27LdB2gSc3wb0ymnPFK2ocPS?=
 =?us-ascii?q?JgfENKq72a9TlYjelnG2xd8nplKvGJmiaD4OneL5YWsP1rDTx1luJa+ns6zbRV?=
 =?us-ascii?q?4TpARPx0nivSs9Fvr0unkumJ1jpoTh5OpixXi4KMuEUxcZneo7xJRWrFtCwE7H?=
 =?us-ascii?q?mMChIHoZMxD9Tzp6EW1NHOiL7yLjpE29zVu9EbB83ZNdiAKHdnOh3sTm36FgwA?=
 =?us-ascii?q?GBuiL2KXrVZaj/faonePqZ88q5XEm5cUTLJfElsvGaVJWQxeANUeLcIvDXsfmr?=
 =?us-ascii?q?mBgZtNvCLmoQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAAA5cQpch0O0hNFjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGDayeME1+LMVIGgTUUiQyOL4ICMAGHWyI0CQ0BAwE?=
 =?us-ascii?q?BAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmEBAQEBAgEBAiQZAQE3AQQBCQEBChgJE?=
 =?us-ascii?q?xIDDAUYMRiDHAGBdAUIBAGkFYFsM4J2AQEFhyEHCIJtiTIXeIEHgRGDEoRag1y?=
 =?us-ascii?q?CJokVIZczCZFACxiBXIUWgyeHH5phgg0zGggoCIMnghsMF4tEgllAMoEFAQGHc?=
 =?us-ascii?q?4JNAQE?=
X-IPAS-Result: =?us-ascii?q?A0ABAAA5cQpch0O0hNFjGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGDayeME1+LMVIGgTUUiQyOL4ICMAGHWyI0CQ0BAwEBAQEBAQIBEwEBA?=
 =?us-ascii?q?QgNCQgpIwyCNiQBgmEBAQEBAgEBAiQZAQE3AQQBCQEBChgJExIDDAUYMRiDHAG?=
 =?us-ascii?q?BdAUIBAGkFYFsM4J2AQEFhyEHCIJtiTIXeIEHgRGDEoRag1yCJokVIZczCZFAC?=
 =?us-ascii?q?xiBXIUWgyeHH5phgg0zGggoCIMnghsMF4tEgllAMoEFAQGHc4JNAQE?=
X-IronPort-AV: E=Sophos;i="5.56,326,1539673200"; 
   d="asc'?scan'208";a="55959232"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 07 Dec 2018 05:14:28 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726061AbeLGNOZ (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 7 Dec 2018 08:14:25 -0500
Received: from heliosphere.sirena.org.uk ([172.104.155.198]:34044 "EHLO
        heliosphere.sirena.org.uk" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726021AbeLGNOY (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 7 Dec 2018 08:14:24 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
        d=sirena.org.uk; s=20170815-heliosphere; h=In-Reply-To:Content-Type:
        MIME-Version:References:Message-ID:Subject:Cc:To:From:Date:Sender:Reply-To:
        Content-Transfer-Encoding:Content-ID:Content-Description:Resent-Date:
        Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:
        List-Help:List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
         bh=Upfsh2ISMrxgIWIY+1n7+VcOCg+DGiiuqer2zsX05sE=; b=lgm93w8HxBPNB8PBIEHT5DXlZ
        x6MHkVtnv5hvJ2omdaYtaFlonmf3Z5hil0YtzcGqWKs1yL6yvO8mw2Fdj01kB1nGIHyky4CqguhgJ
        mDh5A6TXL14xvIOgOnhp5WE59aQP1JcdBkSXk3lK4SKmDkN/gEsmRVXxoifD1Pi3U4Fh4=;
Received: from cpc102320-sgyl38-2-0-cust46.18-2.cable.virginm.net ([82.37.168.47] helo=debutante.sirena.org.uk)
        by heliosphere.sirena.org.uk with esmtpa (Exim 4.89)
        (envelope-from <broonie@sirena.org.uk>)
        id 1gVFxS-0003dN-TK; Fri, 07 Dec 2018 13:14:18 +0000
Received: by debutante.sirena.org.uk (Postfix, from userid 1000)
        id 6A1EF11253E4; Fri,  7 Dec 2018 13:14:18 +0000 (GMT)
Date: Fri, 7 Dec 2018 13:14:18 +0000
From: Mark Brown <broonie@kernel.org>
To: Matti Vaittinen <matti.vaittinen@fi.rohmeurope.com>
Cc: gregkh@linuxfoundation.org, rafael@kernel.org,
        linux-kernel@vger.kernel.org
Subject: Re: [RFC] regmap-irq: add "main register" and level-irq support
Message-ID: <20181207131418.GB6510@sirena.org.uk>
References: <20181130085908.GA24983@localhost.localdomain>
 <20181204172137.GE6809@sirena.org.uk>
 <20181205082251.GE31204@localhost.localdomain>
 <20181205172701.GH6205@sirena.org.uk>
 <20181207075829.GA24940@localhost.localdomain>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha512;
        protocol="application/pgp-signature"; boundary="JYK4vJDZwFMowpUq"
Content-Disposition: inline
In-Reply-To: <20181207075829.GA24940@localhost.localdomain>
X-Cookie: Obey all traffic laws.
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org


--JYK4vJDZwFMowpUq
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

On Fri, Dec 07, 2018 at 09:58:29AM +0200, Matti Vaittinen wrote:
> On Wed, Dec 05, 2018 at 05:27:01PM +0000, Mark Brown wrote:

> > If they're full subdevices you'd be pointing at the relevant platform
> > device anyway.

> I am not sure if I have explained me well enough =3D) When we look at
> regmap_add_irq_chip we see that it creates the IRQ domains. And we
> further see:
>=20
> 		d->domain =3D irq_domain_add_linear(map->dev->of_node,
> 						  chip->num_irqs,
> 						  &regmap_domain_ops, d);

> where map->dev->of_node points the node added to regmap. And as we
> really want to use the i2c to access registers, we should have done the
> regmap using:

> devm_regmap_init_i2c(i2c, &regmap);

> where the i2c is the struct i2c_client *. The dev in i2c_client is the
> i2c device - which has of_node pointing at the "main i2c node" - not the
> sub block nodes. Hence all irq chips created by regmap_add_irq_chip for
> this physical i2c slave device will point to the same DT node.=20

Hrm, right.  You'd need to have a proxy regmap for the child devices for
that.  Not ideal.

> 	bool mask_writeonly:1;
> +	bool no_of:1;
>=20
> and in the regmap_add_irq_chip do:

> 		node =3D (chip->no_of) ? NULL : map->dev->of_node;
> 		d->domain =3D irq_domain_add_linear(node, chip->num_irqs,
> 						  &regmap_domain_ops, d);

> Then we could have chip->no_of set for the 'main irq chip' and for those
> chips we don't wan't to expose via DT. In my case I would leave no_of
> unset only for the irq-chip which I created for the GPIO? Is this a
> silly idea?

That's worth a shot, yes - I'd need to see it fully fleshed out I think
but it looks sensible (no ternery operator please).

> > The mapping isn't guaranteed to be a 1:1 mapping - one way this hardware
> > gets structured is that the central interrupt controller is saying which
> > IP block is flagging an interrupt rather than which register has an
> > interrupt set in it.  You can then have either more than one detailed
> > status register for that IP

> Correct. But I guess the IP blocks often have limited set of registers fo=
r the
> "sub interrupts". For such cases my idea would work, right. My RFC
> handled case where there is many 'sub registers' to read for one 'main
> bit.

Your idea definitely works for the current case, yes - I'm just thinking
about future edge and extension cases.

> > or several smaller IPs reporting through a
> > single detailed status register.

> I think that if we have more than two layers of irqs (main and sub) -
> then we should do cascaded controllers.

Yeah, and my first thought here is that we should just be using cascaded
controllers all the time (but like I say I'm not 100% certain on that).

> > Right, it's about working out which subregister to read - the point is
> > you can do this by adding a link in either direction, I'm suggesting
> > doing it from the individual interrupt to the main register since we
> > already have individual data structures for those and it feels less
> > likely to run into hard to represent corner cases.

> I see your point now. But as I said, I am not sure we should add the
> overhead of 'main irq bit description' for simple cases just to cover
> the corner cases. Yet I can try seeing what I can come up with if you
> think this is the way to go.

If you could take a look that'd be great.

> > >  * @main_status: Optional base main status register address. Some chi=
ps have
> > >  *		 "main status register(s)" which indicate actual irq registers
> > >  *		 with unhandled interrupts. Provide main status register
> > >  *		 address here to avoid reading irq registers with no
> > >  *		 active interrupts. Mapping from main status value to
> > >  *		 interrupt register can be provided in sub_reg_offsets.

> > > Perhaps this would clarify that the status_base, mask_base, ack_base,
> > > etc. should still be used normally?

> > Probably.

> I am not sure this means I was able to convince you or if this is the
> polite way to tell me not to bother =3D) I am Finnish guy who does not
> understand small talk or polite hints ;)

I mean that probably if you add clarifications like you suggest that
might do it.  It's one of these things where you can't 100% tell how
things will look until you see the actual thing.

--JYK4vJDZwFMowpUq
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQEzBAABCgAdFiEEreZoqmdXGLWf4p/qJNaLcl1Uh9AFAlwKcikACgkQJNaLcl1U
h9BkrAf8CFu+3ZdlY/D0Fwi2KgBBLx48NDOIXLhucgnWPEAvYDjVuivkCa7HGjTi
o1/CZD8lxTUwHM35z8QbtnrELQb6JrArwkxxAxtKIt0V7XFMqkkz1xAfxrWkwuj2
28nV0HmSOxHmDKvaITPu3Jer5jK5bs5YIWReex/jaAHAW1mrEoAT5TJA4GNSCRD9
mI4HDd0XjYPcHIjhwc17P2xegM7uswXCUFGbEUyfJPPG4VsUT9GkO8w/Srxd4AgZ
7jIfmrUGfyaa5z4hlNSvlfUu4U05zWTtt7vdYnm//YGHNPV8Tj87wMcfO4WHV5hV
CSPUBPu93nFiBcPNZ+NRteeraspn3Q==
=glZu
-----END PGP SIGNATURE-----

--JYK4vJDZwFMowpUq--
