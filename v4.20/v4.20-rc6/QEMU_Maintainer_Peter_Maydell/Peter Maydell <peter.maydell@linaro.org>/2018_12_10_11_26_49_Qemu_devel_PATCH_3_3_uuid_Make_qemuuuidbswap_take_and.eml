Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 10 Dec 2018 19:36:18 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id CA5BC580297
	for <like.xu@linux.intel.com>; Mon, 10 Dec 2018 03:28:26 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga001-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 03:28:26 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A0yKtyBNDullbc+VQR0Ml6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0I/v9rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZXshfSSJPDIC7?=
 =?us-ascii?q?YYQNAeoOMulWoZTlp1YMrxWzChSgCe3zxjBWnX/7xrE23uc7HA3axgEsA84CvX?=
 =?us-ascii?q?LJp9v1LqcSVuW1wbHSwzrdc/NZxy3945XPfB87ofCDQKx/cc7VyUIyEA7Flkuf?=
 =?us-ascii?q?qZD7MDOPzOgNtnKU7up9Wu2xj24nrxp8ojyuxscqkIbJnIUVxkrD9SVjz4Y4PN?=
 =?us-ascii?q?u1Q1N4b968CJZcqT2WOohsTs8/Xm1luzw2xqMItJO7ZiQG1ZYqywbBZ/Cbb4SE?=
 =?us-ascii?q?/xfuWeWKLjtkgX9pZa+wiwq3/EWl1OHxUNS/3kxQoSpfiNbMs2gA1xzN5ciDTf?=
 =?us-ascii?q?tw5kOh2TeU1wDP8eFIO080lazGK5I7xb4wjJUTvVzCHi/whkr2kLebels49uWr?=
 =?us-ascii?q?8ejrf6jqq5yGO4NqhAzzMr4iltG9DOggNwgBRWmb+eCy1L35+k35Ra1HjuQona?=
 =?us-ascii?q?ncrZDWPNkUqbCnAwBL1oYv8g2wDzC70NQegXYIMklFdBWDj4joOFHBPur0DPii?=
 =?us-ascii?q?g1m0lDdrxvbGPqDuA5nXL3jDlqvhcqh560JG1AUzytVf6olSCrEGJvLzVUnxtM?=
 =?us-ascii?q?HCAh8+KQy0zP7rCM9h2YMGRWKPHqiZPbvWsV+J5eIgPfOAZYAIuDvmL/gl5vju?=
 =?us-ascii?q?jWI2mFMHfKmp24cXZ268Hvh8P0qZZn/s0Z88F3wXtF8+UPDykw/FFjpSfGqpGa?=
 =?us-ascii?q?Q74D49FcShF4iEQ4mshLmI2mC8BoFXYWZdTUmBFGqte4iaVvNfVSSJP8U0lzUF?=
 =?us-ascii?q?UaSmGZYs0AzruALkxr4iNOfN5yADqbrl09564fCVkgs9oidpBcaQ2H3YUmdvg2?=
 =?us-ascii?q?kTTCU31q0snUso01qGzO10juJVEfRV4PVGVBp8MoTTnMJgDNWnYg/dc83BbV+3?=
 =?us-ascii?q?TtiiBXllVt8tzsVIZk9sF9imijjH3iyjGbhTkKaEUs9nupnA1mT8cp4ug03N07?=
 =?us-ascii?q?Ms2hx/GpNC?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0APAABjTA5cmBHrdtBjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTAqgjiME1+LLplegXMUGBSHaiI0CQ0BAwEBAQEBAQIBEwEBAQE?=
 =?us-ascii?q?BCAsLBhsOL4I2BQIDGgEGglwDAwECJAsBEwopAwMBAgYBAUgIAwFTGQWDHIICA?=
 =?us-ascii?q?QSlbjOFQIRfh3KEL4FXP4ERjW4CiSeCApVMBwKCIQSIHocBCxiRPSyZBIFGgg4?=
 =?us-ascii?q?zGjCDL4InFxJtAQKNG0ExgQeKUoF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0APAABjTA5cmBHrdtBjHAEBAQQBAQcEAQGBUQcBAQsBgTA?=
 =?us-ascii?q?qgjiME1+LLplegXMUGBSHaiI0CQ0BAwEBAQEBAQIBEwEBAQEBCAsLBhsOL4I2B?=
 =?us-ascii?q?QIDGgEGglwDAwECJAsBEwopAwMBAgYBAUgIAwFTGQWDHIICAQSlbjOFQIRfh3K?=
 =?us-ascii?q?EL4FXP4ERjW4CiSeCApVMBwKCIQSIHocBCxiRPSyZBIFGgg4zGjCDL4InFxJtA?=
 =?us-ascii?q?QKNG0ExgQeKUoF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,338,1539673200"; 
   d="scan'208";a="44280128"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 10 Dec 2018 03:27:49 -0800
Received: from localhost ([::1]:60264 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gWJih-0007Lr-3i
	for like.xu@linux.intel.com; Mon, 10 Dec 2018 06:27:27 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:54645)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <pm215@archaic.org.uk>) id 1gWJiL-0007KS-4I
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 06:27:06 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <pm215@archaic.org.uk>) id 1gWJiK-00065S-3U
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 06:27:05 -0500
Received: from orth.archaic.org.uk ([2001:8b0:1d0::2]:53332)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <pm215@archaic.org.uk>)
	id 1gWJiJ-0005ya-Qe; Mon, 10 Dec 2018 06:27:04 -0500
Received: from pm215 by orth.archaic.org.uk with local (Exim 4.89)
	(envelope-from <pm215@archaic.org.uk>)
	id 1gWJi8-0008D0-5Y; Mon, 10 Dec 2018 11:26:52 +0000
From: Peter Maydell <peter.maydell@linaro.org>
To: qemu-devel@nongnu.org
Date: Mon, 10 Dec 2018 11:26:49 +0000
Message-Id: <20181210112649.11581-4-peter.maydell@linaro.org>
X-Mailer: git-send-email 2.19.2
In-Reply-To: <20181210112649.11581-1-peter.maydell@linaro.org>
References: <20181210112649.11581-1-peter.maydell@linaro.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2001:8b0:1d0::2
Subject: [Qemu-devel] [PATCH 3/3] uuid: Make qemu_uuid_bswap() take and
 return a QemuUUID
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Kevin Wolf <kwolf@redhat.com>, Fam Zheng <famz@redhat.com>,
	qemu-block@nongnu.org, Ben Warren <ben@skyportsystems.com>,
	"Michael S. Tsirkin" <mst@redhat.com>,
	Stefan Weil <sw@weilnetz.de>, patches@linaro.org,
	Max Reitz <mreitz@redhat.com>, Igor Mammedov <imammedo@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Currently qemu_uuid_bswap() takes a pointer to the QemuUUID to
be byte-swapped. This means it can't be used when the UUID
to be swapped is in a packed member of a struct. It's also
out of line with the general bswap*() functions we provide
in bswap.h, which take the value to be swapped and return it.

Make qemu_uuid_bswap() take a QemuUUID and return the swapped version.

This fixes some clang warnings about taking the address of
a packed struct member in block/vdi.c.

Signed-off-by: Peter Maydell <peter.maydell@linaro.org>
---
 include/qemu/uuid.h  |  2 +-
 block/vdi.c          | 16 ++++++++--------
 hw/acpi/vmgenid.c    |  6 ++----
 tests/vmgenid-test.c |  2 +-
 util/uuid.c          | 10 +++++-----
 5 files changed, 17 insertions(+), 19 deletions(-)

diff --git a/include/qemu/uuid.h b/include/qemu/uuid.h
index 09489ce5c5e..037357d990b 100644
--- a/include/qemu/uuid.h
+++ b/include/qemu/uuid.h
@@ -56,6 +56,6 @@ char *qemu_uuid_unparse_strdup(const QemuUUID *uuid);
 
 int qemu_uuid_parse(const char *str, QemuUUID *uuid);
 
-void qemu_uuid_bswap(QemuUUID *uuid);
+QemuUUID qemu_uuid_bswap(QemuUUID uuid);
 
 #endif
diff --git a/block/vdi.c b/block/vdi.c
index 4cc726047c3..0c34f6bae46 100644
--- a/block/vdi.c
+++ b/block/vdi.c
@@ -203,10 +203,10 @@ static void vdi_header_to_cpu(VdiHeader *header)
     header->block_extra = le32_to_cpu(header->block_extra);
     header->blocks_in_image = le32_to_cpu(header->blocks_in_image);
     header->blocks_allocated = le32_to_cpu(header->blocks_allocated);
-    qemu_uuid_bswap(&header->uuid_image);
-    qemu_uuid_bswap(&header->uuid_last_snap);
-    qemu_uuid_bswap(&header->uuid_link);
-    qemu_uuid_bswap(&header->uuid_parent);
+    header->uuid_image = qemu_uuid_bswap(header->uuid_image);
+    header->uuid_last_snap = qemu_uuid_bswap(header->uuid_last_snap);
+    header->uuid_link = qemu_uuid_bswap(header->uuid_link);
+    header->uuid_parent = qemu_uuid_bswap(header->uuid_parent);
 }
 
 static void vdi_header_to_le(VdiHeader *header)
@@ -227,10 +227,10 @@ static void vdi_header_to_le(VdiHeader *header)
     header->block_extra = cpu_to_le32(header->block_extra);
     header->blocks_in_image = cpu_to_le32(header->blocks_in_image);
     header->blocks_allocated = cpu_to_le32(header->blocks_allocated);
-    qemu_uuid_bswap(&header->uuid_image);
-    qemu_uuid_bswap(&header->uuid_last_snap);
-    qemu_uuid_bswap(&header->uuid_link);
-    qemu_uuid_bswap(&header->uuid_parent);
+    header->uuid_image = qemu_uuid_bswap(header->uuid_image);
+    header->uuid_last_snap = qemu_uuid_bswap(header->uuid_last_snap);
+    header->uuid_link = qemu_uuid_bswap(header->uuid_link);
+    header->uuid_parent = qemu_uuid_bswap(header->uuid_parent);
 }
 
 static void vdi_header_print(VdiHeader *header)
diff --git a/hw/acpi/vmgenid.c b/hw/acpi/vmgenid.c
index d78b579a201..02717a8b0dc 100644
--- a/hw/acpi/vmgenid.c
+++ b/hw/acpi/vmgenid.c
@@ -30,8 +30,7 @@ void vmgenid_build_acpi(VmGenIdState *vms, GArray *table_data, GArray *guid,
      * first, since that's what the guest expects
      */
     g_array_set_size(guid, VMGENID_FW_CFG_SIZE - ARRAY_SIZE(guid_le.data));
-    guid_le = vms->guid;
-    qemu_uuid_bswap(&guid_le);
+    guid_le = qemu_uuid_bswap(vms->guid);
     /* The GUID is written at a fixed offset into the fw_cfg file
      * in order to implement the "OVMF SDT Header probe suppressor"
      * see docs/specs/vmgenid.txt for more details
@@ -149,8 +148,7 @@ static void vmgenid_update_guest(VmGenIdState *vms)
              * however, will expect the fields to be little-endian.
              * Perform a byte swap immediately before writing.
              */
-            guid_le = vms->guid;
-            qemu_uuid_bswap(&guid_le);
+            guid_le = qemu_uuid_bswap(vms->guid);
             /* The GUID is written at a fixed offset into the fw_cfg file
              * in order to implement the "OVMF SDT Header probe suppressor"
              * see docs/specs/vmgenid.txt for more details.
diff --git a/tests/vmgenid-test.c b/tests/vmgenid-test.c
index 0a6fb55f2eb..98db43f5a65 100644
--- a/tests/vmgenid-test.c
+++ b/tests/vmgenid-test.c
@@ -110,7 +110,7 @@ static void read_guid_from_memory(QemuUUID *guid)
     /* The GUID is in little-endian format in the guest, while QEMU
      * uses big-endian.  Swap after reading.
      */
-    qemu_uuid_bswap(guid);
+    *guid = qemu_uuid_bswap(*guid);
 }
 
 static void read_guid_from_monitor(QemuUUID *guid)
diff --git a/util/uuid.c b/util/uuid.c
index ebf06c049ad..5787f0978c1 100644
--- a/util/uuid.c
+++ b/util/uuid.c
@@ -110,10 +110,10 @@ int qemu_uuid_parse(const char *str, QemuUUID *uuid)
 
 /* Swap from UUID format endian (BE) to the opposite or vice versa.
  */
-void qemu_uuid_bswap(QemuUUID *uuid)
+QemuUUID qemu_uuid_bswap(QemuUUID uuid)
 {
-    assert(QEMU_PTR_IS_ALIGNED(uuid, sizeof(uint32_t)));
-    bswap32s(&uuid->fields.time_low);
-    bswap16s(&uuid->fields.time_mid);
-    bswap16s(&uuid->fields.time_high_and_version);
+    bswap32s(&uuid.fields.time_low);
+    bswap16s(&uuid.fields.time_mid);
+    bswap16s(&uuid.fields.time_high_and_version);
+    return uuid;
 }
-- 
2.19.2


