Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 08:41:10 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 2D60A580375;
	Wed,  5 Dec 2018 20:22:51 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga001-1.jf.intel.com with ESMTP; 05 Dec 2018 20:22:51 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AL7HCVRTK2ogNQ7zpnSpcUKi+ytpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YBKEt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZDI2y?=
 =?us-ascii?q?b5UBAfcCM+ZWoIbyu0YBohmwCgm3HOPiyCRFhmPq0aAgz+gtDRvL0BImEtkTsH?=
 =?us-ascii?q?rUttL1NKIKXO+6zanI1yvMb+hW2Tzg7YbIbxUhruuWXbltdsfR10gvFxnbgVWL?=
 =?us-ascii?q?qYzpJTCV1vkIs2eB9eptTuavi28hqw5ruDivwd0gio7ThoIa013J8zhyzoUtJd?=
 =?us-ascii?q?CgVkJ3fdqpHIFNuyyUKYd6WN4uTmJ0tCogy7ALu4a3cDUUxJg53RLTdv6Kf5aS?=
 =?us-ascii?q?7h79WuudOyl0iXZjdbminRi961Kgxff5VsSs0FZFsC5Fkt7Uu3AT2Bzc9NKHRu?=
 =?us-ascii?q?F+/ki/wzaP0R7c6uVeLUAzj6rbJIYtwr82lpUNrUTOBjH6lFnygaOMa0kp9Pak?=
 =?us-ascii?q?5/76brjlupOQLY55hwPmPqQrgMO/AOA4MgYUX2ic/OSxzLnj/Uz/QLVXgfw6i6?=
 =?us-ascii?q?rZv47AJcQduKG5BxZZ0oEt6ha5ETimys8VnWcILF1bYhKLlYvpNE/UIPD+E/i/?=
 =?us-ascii?q?h06gkDBxx/DJJrHhGInCLmDfkLf9erZw80pcyAswzd9B/Z5VBawBLen3Wk/wst?=
 =?us-ascii?q?zYExA4Pxa1w+bhFNVyyIceVXiTDa+eNaPYqUWI6f43I+mQeI8Vvy7wK/g/6P7v?=
 =?us-ascii?q?kX82g1gdcbOp3ZsKcn+4GPtmLl6dYXrthNcBDGgLshA/TOzslF2NTzpTa2yuUK?=
 =?us-ascii?q?I74zExEJimApvbRoCxnLyB2z+2Hp9RZm9YEFyMEnDod4OCW/cLcy+SJs5hkjoZ?=
 =?us-ascii?q?VbmuUYMh1BeutBPkxLpjNObb5ioYtZf73thv++LTjQ0y9SBzD8mFyW6NVGF0nm?=
 =?us-ascii?q?QLRzMsxqBwu059x0yH0ah5hfxYCNNS6+lIUgc8KZ7T0eh6B8ruVQLGe9eDUEym?=
 =?us-ascii?q?Tcm+ATEtUtIxxMcDY0VnFNWklBzD2yuqDKUTl7yEH5E09qPc337sJ8dy0XrG1a?=
 =?us-ascii?q?8hj0U4TctLL2Gpmql/9w3LDY7Tj0qZj7qqdbgb3CPV6WiM13SOs19CXA5wS6rF?=
 =?us-ascii?q?W2sfaVXQrdj+4kPCTLquCbA8PwtFyM6CLLZKa9LzgVVHQvfjJMrRY2arl2isAh?=
 =?us-ascii?q?aIw6uGbJD2dGUFwCXdFE8EnhgO8nmcKwgxGD2to2LEAzxoDlLgfUXs/PJ6qHO6?=
 =?us-ascii?q?SE800g6LY1dg17qz5h4am/icR+kP0bIDvScrsy90E0ql39LKF9qAoBJsfLldYd?=
 =?us-ascii?q?M451dHyWLZtgxnMpy8NaxigUQecwB2v0Po2BV6EYFAkcksrHM3wwt+M6OY0FVd?=
 =?us-ascii?q?dzyG2ZD8IKHYKm73/Bq3ca7Zxkne0MqK+qcI8Pk3sVHjsx+mF0U883RrycJa02?=
 =?us-ascii?q?aB6ZrQCgoSUpXxUlgs+hh+prHaZDQ95ozO2X1tN6m0riHN29YzCOQ5zRages9V?=
 =?us-ascii?q?MLmYGw/qD80aG8+uJfQqmli0dB4LIPpe9a80P8y8cfuG17WmPOJhnDKgkGRG75?=
 =?us-ascii?q?px0kOK9ypgVOHI24wJzO2f3guCTz38lkuustjrmYBYYjEfBnC/ySn4C4FLfK19?=
 =?us-ascii?q?YIELBX2oI8Kp3NV+hofhVGJC+16nGlwJxtWpeR2Ub1Hm2Q1Q1EIXoWGomCeizj?=
 =?us-ascii?q?x0lS0pobSb3CDU3+vicx8HMHZRRGZ+lVfsPZS0j9cCUUmobggljhuk6Vzhx6hG?=
 =?us-ascii?q?oqRyNG3TQUZOfyjrIGBuSKqwtryeY8FR7JMkqzlYUOO5YVqCUL7yvwMa0z//H2?=
 =?us-ascii?q?tZ3D07dSuluo/6nxx5j2KRNm1zo2DaecFzxBff4sLTRfhK0zoCRSl4jyTXB1em?=
 =?us-ascii?q?M9mo+9WUi4nMsuSkW229UZ1TdDHhzZmcuyuj+W1qHRq/kuizm9L9Fgg2yy3719?=
 =?us-ascii?q?hsVSjTqBb8Y4/r17m1MO59f0loAkP85NR+Go1kjoQwg5QQ02AAhpqJ5XoHjXvz?=
 =?us-ascii?q?MdJD1KL9dnUNRCQHw97I4Af/3k1jIWmEx4b4VnWb38tgaMO2YmIQ2iIh8c9KDL?=
 =?us-ascii?q?2Y46BDnStwulC4tx7eYeBhnjcBzvsj8Hsag+AKuAU31CmcDK4dHVJEPSPyjRSH?=
 =?us-ascii?q?9M6xrL9YZGu0dbiw1Ux+nc2uDb2YowFcXmr5dYkmHSNq8sp/N1fM2mXp6o74YN?=
 =?us-ascii?q?nQcc4TthqMnhfciOhVLYg9l/sQiiphJGL9pmYly+8ggBxq3JG6upWHKmp38KK4?=
 =?us-ascii?q?BB5YKiP6Z8cJ9j7xiqZem96c35qzEZV5BjULQJzoQOqzHz0IsvTnMxuOHCc4qn?=
 =?us-ascii?q?eGArffGQ6f6EF7r3PACZyrNneXJGUHwtVmXhWSOEtfgAUMVjUggpE5DhyqxNDm?=
 =?us-ascii?q?cEph5DAe/Fv4pQVXyu5yKxnzSGTfpBqrajcpTpiQNgFW4xpG50fUN8ye8+1yEz?=
 =?us-ascii?q?tZ/p2nsAyCNGibax5UAmEOX0yOH0rjMaW25dnc7+iYAfKzLvvJYbWTsOxeSu2H?=
 =?us-ascii?q?xZS13ot9+DaMMMqPM2JmD/063EpDQH94F97YmzUJVywYiSbNY9SHqxe7/y19tt?=
 =?us-ascii?q?q//+jzWALz+YuPDKNfMdVx9BC3gqeDNO+QiDx6KTZC0ZMMymHHyKIC3F4JkCxu?=
 =?us-ascii?q?czitEbIdtS/CVq7Qm6lXDwIFZCN3LsdH86U83gxVM87Bltz1zqJ4juIyC1pdT1?=
 =?us-ascii?q?Phh9qmZdYULGC9Ll/HAEeLOa+CJT3KxcH3fKy9RadRjOVSqx2/pzKbH1X/MTSE?=
 =?us-ascii?q?kjnjTwqvPv1UjCGHIBxev5mwcgpsCWjmVt7pdge3P8N3jTIox705nXfKNW8aMT?=
 =?us-ascii?q?hhfEJBtLyQ7SVEgvphH2xN9GZqLe6BmyyB9enXNo4Wsed3AiRzj+9b4G41y71Q?=
 =?us-ascii?q?7CFFQvx6gCrTrt50rFGgnemC0T5nUBtIqjZWi4OHp0RiOaPF9pZeXXbI5g4C7W?=
 =?us-ascii?q?KVC0dCm9wwMcHio6BdzJDlk7P/YGNZ+dXF8eMfCtLSJcbBN2AuZ0nHAjnRWTUE?=
 =?us-ascii?q?VzOwNSn8mklUirnG6HyPo4M67JvxnZMUYrtaUlUvEbUdEEszT49KG4t+Qj5xye?=
 =?us-ascii?q?3Tt8UP/3fr6UCJHMg=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAABKowhch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2snjBOOGhSXOIIFAQErAYdTIjQJDQEDAQEBAQEBAgETAQEBCA0?=
 =?us-ascii?q?JCCkjDII2JAGCYgECAwECJBMGAQE3AQUJAQEKDgoJJQMMJQEFARwGCw2DHIIBA?=
 =?us-ascii?q?QWaLDyKHYFsM4J2AQEFhyoIEopwgRyBVz+BEYMSilyJKwqGAntRj1UHAoIgBI8?=
 =?us-ascii?q?TIwoCgU+IBTaHGZhXAgQCBAUCBQ8hgSWCDTMaMIMvghsMF4hehUc4MoECAwEBI?=
 =?us-ascii?q?ROKJQEB?=
X-IPAS-Result: =?us-ascii?q?A0ANAABKowhch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?njBOOGhSXOIIFAQErAYdTIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCY?=
 =?us-ascii?q?gECAwECJBMGAQE3AQUJAQEKDgoJJQMMJQEFARwGCw2DHIIBAQWaLDyKHYFsM4J?=
 =?us-ascii?q?2AQEFhyoIEopwgRyBVz+BEYMSilyJKwqGAntRj1UHAoIgBI8TIwoCgU+IBTaHG?=
 =?us-ascii?q?ZhXAgQCBAUCBQ8hgSWCDTMaMIMvghsMF4hehUc4MoECAwEBIROKJQEB?=
X-IronPort-AV: E=Sophos;i="5.56,320,1539673200"; 
   d="scan'208";a="56307299"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 05 Dec 2018 20:22:49 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728842AbeLFEWq (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 5 Dec 2018 23:22:46 -0500
Received: from mail-pg1-f195.google.com ([209.85.215.195]:39882 "EHLO
        mail-pg1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727695AbeLFEWq (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 5 Dec 2018 23:22:46 -0500
Received: by mail-pg1-f195.google.com with SMTP id w6so10029096pgl.6
        for <linux-kernel@vger.kernel.org>; Wed, 05 Dec 2018 20:22:45 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=tWLLtHt/pS70icpqst2a5YeU4v537QLET21z/QMRNYA=;
        b=C3FusRNgvDTeYC779vgrCRYDhqGefhCxdgNnRe6yHe3tiEblRmeyQGkyg7kxng56N0
         6Vn/9mdfF78vfI/c1PdDJ1xPSD+99+DOyWa0dRr1oA3jree3D2gvMcrS3g8ObVZL0F6q
         +3F3iAaffSbzWzRi7kqmx7JRicdaKj5UWjmIU=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:cc:subject:message-id:references
         :mime-version:content-disposition:in-reply-to:user-agent;
        bh=tWLLtHt/pS70icpqst2a5YeU4v537QLET21z/QMRNYA=;
        b=Be+9yhM4knL2iIlQWddlSawY0GdAZrxw/TnMQo4AVcUDmRYBfalY6thoUr1VGkYYyY
         4TLNPBeqr//dxkJ4xP3PvKgKK30WVxPiHr9b6x78z/krUNkR9G9jOhA+yBHyoGoAMCk+
         yDinT7D2LdunQ14/9fLm6rw/e5gD/Rog9Et2uPIo1Qw7Kp2Im9Gg+dVTKOtUSSeA2NMq
         xE0G/lihbawa6bq1WOQfCggj6hDLIAmVGUsWKwt5mPMprXe69f8uRcV+V98iyQ5hop8T
         /T2hKPaeK9s7e9TodGRfSmNC3Ngphm8QvODl+qGSkOCqmUsz9oLa4V7btD93MDQn5twf
         wtRA==
X-Gm-Message-State: AA+aEWZCfNkQpsNA7DFOLr0UQeLHQUpnBMQey/pyYEFCllelL1olBx7G
        4c9ZhbHnTlHhHo5zD+Yd+VcCMA==
X-Google-Smtp-Source: AFSGD/XMXONizL1drGQMzwkaSzwHGuXES3roxbafxX5ng3tWh7sESRHD2kHUtZs4RfyneWIbK/p68A==
X-Received: by 2002:a63:5407:: with SMTP id i7mr22708026pgb.413.1544070165224;
        Wed, 05 Dec 2018 20:22:45 -0800 (PST)
Received: from localhost ([122.172.23.29])
        by smtp.gmail.com with ESMTPSA id r83sm47908196pfc.115.2018.12.05.20.22.44
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Wed, 05 Dec 2018 20:22:44 -0800 (PST)
Date: Thu, 6 Dec 2018 09:52:42 +0530
From: Viresh Kumar <viresh.kumar@linaro.org>
To: Stephen Boyd <sboyd@kernel.org>
Cc: Taniya Das <tdas@codeaurora.org>,
        "Rafael J. Wysocki" <rjw@rjwysocki.net>,
        linux-kernel@vger.kernel.org, linux-pm@vger.kernel.org,
        Rajendra Nayak <rnayak@codeaurora.org>,
        devicetree@vger.kernel.org, robh@kernel.org,
        skannan@codeaurora.org, linux-arm-msm@vger.kernel.org,
        evgreen@google.com
Subject: Re: [PATCH v11 2/2] cpufreq: qcom-hw: Add support for QCOM cpufreq
 HW driver
Message-ID: <20181206042242.pzhkkfs4ew36nsnq@vireshk-i7>
References: <1543722903-10989-1-git-send-email-tdas@codeaurora.org>
 <1543722903-10989-3-git-send-email-tdas@codeaurora.org>
 <20181204051231.mm5ixli7ckpfzvd4@vireshk-i7>
 <154396249199.88331.1800559141437859959@swboyd.mtv.corp.google.com>
 <154396472692.88331.13742924031474269133@swboyd.mtv.corp.google.com>
 <49139ae4-4373-9e70-02ad-80f7bbc4494c@codeaurora.org>
 <20181205061600.7zglbpkgbktn27am@vireshk-i7>
 <154402920660.88331.5729780274488650479@swboyd.mtv.corp.google.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <154402920660.88331.5729780274488650479@swboyd.mtv.corp.google.com>
User-Agent: NeoMutt/20180323-120-3dd1ac
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 05-12-18, 09:00, Stephen Boyd wrote:
> Here's a patch to squash in to fix those tiny problems. I left it as
> devm_ioremap_resource() because that has all the nice features of
> resource requesting inside and it didn't seem too bad to devm_iounmap()
> on the exit path.
> 
> ---------8<--------------
> 
>  drivers/cpufreq/qcom-cpufreq-hw.c | 37 ++++++++++++++++++++++++++-----------
>  1 file changed, 26 insertions(+), 11 deletions(-)
> 
> diff --git a/drivers/cpufreq/qcom-cpufreq-hw.c b/drivers/cpufreq/qcom-cpufreq-hw.c
> index bcf9bb37298a..1e865e216839 100644
> --- a/drivers/cpufreq/qcom-cpufreq-hw.c
> +++ b/drivers/cpufreq/qcom-cpufreq-hw.c
> @@ -10,6 +10,7 @@
>  #include <linux/module.h>
>  #include <linux/of_address.h>
>  #include <linux/of_platform.h>
> +#include <linux/slab.h>
>  
>  #define LUT_MAX_ENTRIES			40U
>  #define LUT_SRC				GENMASK(31, 30)
> @@ -77,8 +78,7 @@ static int qcom_cpufreq_hw_read_lut(struct device *dev,
>  	unsigned int max_cores = cpumask_weight(policy->cpus);
>  	struct cpufreq_frequency_table	*table;
>  
> -	table = devm_kcalloc(dev, LUT_MAX_ENTRIES + 1,
> -				sizeof(*table), GFP_KERNEL);
> +	table = kcalloc(LUT_MAX_ENTRIES + 1, sizeof(*table), GFP_KERNEL);
>  	if (!table)
>  		return -ENOMEM;
>  
> @@ -144,7 +144,7 @@ static void qcom_get_related_cpus(int index, struct cpumask *m)
>  
>  		ret = of_parse_phandle_with_args(cpu_np, "qcom,freq-domain",
>  						 "#freq-domain-cells", 0,
> -						  &args);
> +						 &args);
>  		of_node_put(cpu_np);
>  		if (ret < 0)
>  			continue;
> @@ -170,7 +170,6 @@ static int qcom_cpufreq_hw_cpu_init(struct cpufreq_policy *policy)
>  	ret = of_parse_phandle_with_args(cpu_np, "qcom,freq-domain",
>  			"#freq-domain-cells", 0, &args);
>  	of_node_put(cpu_np);
> -
>  	if (ret)
>  		return ret;
>  
> @@ -184,13 +183,15 @@ static int qcom_cpufreq_hw_cpu_init(struct cpufreq_policy *policy)
>  	/* HW should be in enabled state to proceed */
>  	if (!(readl_relaxed(base + REG_ENABLE) & 0x1)) {
>  		dev_err(dev, "Domain-%d cpufreq hardware not enabled\n", index);
> -		return -ENODEV;
> +		ret = -ENODEV;
> +		goto error;
>  	}
>  
>  	qcom_get_related_cpus(index, policy->cpus);
>  	if (!cpumask_weight(policy->cpus)) {
>  		dev_err(dev, "Domain-%d failed to get related CPUs\n", index);
> -		return -ENOENT;
> +		ret = -ENOENT;
> +		goto error;
>  	}
>  
>  	policy->driver_data = base + REG_PERF_STATE;
> @@ -198,11 +199,25 @@ static int qcom_cpufreq_hw_cpu_init(struct cpufreq_policy *policy)
>  	ret = qcom_cpufreq_hw_read_lut(dev, policy, base);
>  	if (ret) {
>  		dev_err(dev, "Domain-%d failed to read LUT\n", index);
> -		return ret;
> +		goto error;
>  	}
>  
>  	policy->fast_switch_possible = true;
>  
> +	return 0;
> +
> +error:
> +	devm_iounmap(dev, base);
> +	return ret;
> +}
> +
> +static int qcom_cpufreq_hw_cpu_exit(struct cpufreq_policy *policy)
> +{
> +	void __iomem *base = policy->driver_data - REG_PERF_STATE;
> +
> +	kfree(policy->freq_table);
> +	devm_iounmap(&global_pdev->dev, base);
> +
>  	return 0;
>  }
>  
> @@ -219,6 +234,7 @@ static struct cpufreq_driver cpufreq_qcom_hw_driver = {
>  	.target_index	= qcom_cpufreq_hw_target_index,
>  	.get		= qcom_cpufreq_hw_get,
>  	.init		= qcom_cpufreq_hw_cpu_init,
> +	.exit		= qcom_cpufreq_hw_cpu_exit,
>  	.fast_switch    = qcom_cpufreq_hw_fast_switch,
>  	.name		= "qcom-cpufreq-hw",
>  	.attr		= qcom_cpufreq_hw_attr,
> @@ -248,12 +264,11 @@ static int qcom_cpufreq_hw_driver_probe(struct platform_device *pdev)
>  	ret = cpufreq_register_driver(&cpufreq_qcom_hw_driver);
>  	if (ret) {
>  		dev_err(&pdev->dev, "CPUFreq HW driver failed to register\n");
> -		return ret;
> +	} else {
> +		dev_dbg(&pdev->dev, "QCOM CPUFreq HW driver initialized\n");
>  	}
>  
> -	dev_dbg(&pdev->dev, "QCOM CPUFreq HW driver initialized\n");
> -
> -	return 0;
> +	return ret;
>  }
>  
>  static int qcom_cpufreq_hw_driver_remove(struct platform_device *pdev)

LGTM

-- 
viresh
