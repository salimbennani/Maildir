Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 06 Dec 2018 08:58:14 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id D98A1580375;
	Wed,  5 Dec 2018 11:48:20 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 05 Dec 2018 11:48:20 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AfwhxDhXmlxtdNPIpu4O8ipZi2hXV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhGFu6dThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmTgLjhi?=
 =?us-ascii?q?UaOD4j6GzZitJ+gr9VrhyioBJwwYDUYJqNNPd8Za7RYc8WSHBdUstLSyBNHoWx?=
 =?us-ascii?q?ZJYPAeobOuZYqpHwqUUUohu6BAmnGfnhxSFShn/s3awxzuMsER3c0wwkHtICqm?=
 =?us-ascii?q?zUo8vvNKcIUeG50bLFzTrGb/xM2Df97JLEfQwmofGJRL99d9fax0o3Fw7dkFmc?=
 =?us-ascii?q?tYjoMymI2ukDrWSX9fdsWOGzh2I9qgx8oCCjytkxhoXXnI4Z11TJ+CFjzIooJ9?=
 =?us-ascii?q?C1SlR3bcCkHZZWqiqULZF5Qtk4TGFtoCs6yqMJuZq8fCUS1pQnyADQa+adf4iL?=
 =?us-ascii?q?/B3jTuCRLil8hH5/f7K/nRmy/VChyu36SMa0zE5HojRZntTIrHwByhLe5tadRv?=
 =?us-ascii?q?dg/UqtxSyD2gHR5+1cJEA7j6vbK5ovwr4qkZoTtFzOHiv3mEXwka+XeVwo+uu2?=
 =?us-ascii?q?5OT9ZLXpuJucO5ZzigDwNKQhhNa/DP8mMggBQWeb4/6w1L798k3jRrVFkPk2nr?=
 =?us-ascii?q?PesJDAKsQXvrS5DBNN0oY/9xa/CC+r0NAZnXkEMl1JYh2Gj5XyNlHKIfD4C+q/?=
 =?us-ascii?q?glu2nDdqwfDGIqPuApHXInffl7fheK5361RAxwor0dBf+5VUB6kBIP3pW0/xqM?=
 =?us-ascii?q?bXDhgjPwy03uboEtN91owFVGKLA6+ZNr7SsFCS6uIuJemMeJEauDLnJ/c54P7u?=
 =?us-ascii?q?iGczmUUBcqmxwZsXdHe4E+xkI0Wef3XgmNQBEWAMvgo4S+znk1mCUT9VZ3avUK?=
 =?us-ascii?q?Mw/DA7CIS6DYjdQoChmqCO3CC+HpdOfGBJFkiMEWv0d4WDQ/oDcjmSIs9mkjwH?=
 =?us-ascii?q?T7ShUZUu1RO1uQ/+yrpnKPfU+yICuZLi0th1+/PclRUo+TNoCMSd1nmHT3tokW?=
 =?us-ascii?q?MQWz82wKd/rFR+yliZ16h0mfhYFd1J6PNPXQc3Lprcz+18C9DvVQPNZNaJSFC6?=
 =?us-ascii?q?Qtq4BTE9VM4+w9gLY0xlAdWtkgjD3za2A78Sj7GEGYY78rzC0HTrJ8Zy0XDG1L?=
 =?us-ascii?q?I/gFkgRcdPMW6mhqt79wXIA47JkkOZl7uldKgG3S7N8nuDwnSKvE1CTAFwVqDF?=
 =?us-ascii?q?V2gFZkTKtdT5+l/CT7i2BLs6KARB19CNJrFKatLzi1VGX+nsONLFbmK1mmewAw?=
 =?us-ascii?q?uIx7yWYIrrfWUdwDvSCEwenw8P+naGMBA0Bj29rGLGEDxuCVXvblvw8el/rXO7?=
 =?us-ascii?q?SVM0zwGKbkF7y7q54BkVheaYS/MS2LIEtzwsqzF1HFa7wtLXBMCMpwtnfKVAf9?=
 =?us-ascii?q?w95E1L2n7etwx4JpagNbxthkYCcwRruEPjzw94CoFensklsnwrzBB+JrmF0Fxc?=
 =?us-ascii?q?bTyY25PwOrrJKmTp+BCvaqjW2kzR0dqM+6cP7ug4pEvnvA2zCkUi9HBn2cFP03?=
 =?us-ascii?q?SA/pXKEBYSUZXpX0c36hh2va3VbjM85oPUz3JsN6a0vyTG29IoAusl1xmhc81e?=
 =?us-ascii?q?MKOCCA/9DckaC9KyJ+wtnlijdggEM/xK9K4oI8OmcOOL2LSqPOl8hj2ml3lI4I?=
 =?us-ascii?q?dn3kKK6SV8UO/I048ZzP6C2guISinzjE2mssDxgo1EYTASHmyiySnrHoJRZ6ty?=
 =?us-ascii?q?fZoVBmeqOcG42tJ+h5v1UX5C6FGjH08G2NOueReKb1393Bdc1EQNrXy8hCu4yS?=
 =?us-ascii?q?d5kzUorqqZwSzPzP7udBsBOm5XWmZiiU3gLpSzj9AfREKodRQmlAO55UbmwKhW?=
 =?us-ascii?q?vKZ/IHPJQUdLfCj2KHtuUrCqubqBYM5P6ZUovjtRUOmnZVCaS7j9owYV0i/5Hm?=
 =?us-ascii?q?tewiw7eC+uupnjgxN6j2edJm5prHXFYcFw2Qvf5NvESP9RxDUGQzN0iTvWBli6?=
 =?us-ascii?q?JNSp+dSUl5HesuGxTW6hV5tTcTX1woOErie0+WpqARinlfCphtLnCRQ60TP819?=
 =?us-ascii?q?RyViXHthf8bpPr16SnK+1neEZoCUT468p7HIF+j4QxiIsR2XgcmpWa434HnX3v?=
 =?us-ascii?q?PtVc3KL0dGANSiITw97J/Ajl31VuLneIx4L6THqR2MVgaMehYmMKxC099dtFB7?=
 =?us-ascii?q?mO7LxLhiZ1plu4rQTMYflyhDsdyP0u6GIEjOENogYi0iKdArUKF0lCISPsjwiI?=
 =?us-ascii?q?78y5rKhPeGavdr2w2FB/nN+7CrGCvxpcWG34epo5GS9w78N/ME/D0XHp64Hkfs?=
 =?us-ascii?q?XQYswXthGOjxjAiO1VIoorlvUWnSpnJX79vXo9xuEglxNu2pW6vJWdJ2Vp4aK0?=
 =?us-ascii?q?GRpYNjzzZ8MO9TDhl6densCK34+xGpVtACkEXJztTfiwCjIdqeznNxqSED07sn?=
 =?us-ascii?q?qbG6DQHQqB50d9tX7PD4qnN3KKJHka0NViQgOSJFdEjQAQXTU6mIM5Fw+wyMzg?=
 =?us-ascii?q?dkd5+i4e5lriphRQzeJoMgH1Un3Dqwewdjc0VJ+fIQJW7wFF+kfVKNGe4fh1Hy?=
 =?us-ascii?q?1C5Z2hqwqNKmOAagRMDGEJXFGEBl/5Mrmv49nA7/aXBu6kI/TSZrWOrPRUV+2U?=
 =?us-ascii?q?ypK3zotm4zGMO92PPnZ8Dv072UlDXXFjF8TagTUPTCMXmDzXb86Gvxex4Sl3rs?=
 =?us-ascii?q?G58PT2VwPj/4qPC71OMdpx/xC6m7uMN+mVhCxhMzZXyosMxWPUyLgYxFMdkTxu?=
 =?us-ascii?q?eCK3EbsetS/BVqbQmq5MAh4faiNzMtZI7q0m0glMP87bls361rpigvEpDFdFUE?=
 =?us-ascii?q?Trmtu1aswSP2G9KFTHCV6XNLSHID3H2d34bbmgRr1QkupUsQa9uTKaE0/lIzSC?=
 =?us-ascii?q?mCPlVxGpMeFQki6bOAZSt526chZoEWLjVs7pagWnMN9rij072b01iWnMNW4ZMD?=
 =?us-ascii?q?h8dVtCr7yQ7SxChPV/FHdM7n5kLemChiaY4PPUKpcQsft3HCt0k/hW72g9y7tQ?=
 =?us-ascii?q?v2l4Q6l8hircr8VupligzbGnxT9uUR4IoTFOwMqXuExjPKLfqcZoVnPN/RZL5m?=
 =?us-ascii?q?KVT1wUqt15F8fik69XzdfLmeT4LzIGu8PJ8M0aL8fTL82DPTwqNh+tUDTOAQ0J?=
 =?us-ascii?q?RDirNG7QhkpGuP6V8XKRo94xrZ2o0J8SV6VCSVEpCv4yAE10GN0IOpoxVTQh1f?=
 =?us-ascii?q?aAhskZ6VK9oQPXScEcuYrIBdyIBvC6FD+djPF8agES0PusMY0XN8vj1lZ4ewBS?=
 =?us-ascii?q?k4HDGk6WVtdI9H4yJjQoqVlApSAtBlY43FjoP1ug?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AaAADUKghch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUgYBAQsBg2uNGIsvgiGJD26NO4IyAYdTIjUIDQEDAQEBAQEBAgETAQEBCA0?=
 =?us-ascii?q?JCCkvgjYigmUDAwECJDUdBgkBARU7AyAJKwcXgxyBaQEYBAGnLRYFAReHNwoZg?=
 =?us-ascii?q?RGBP4dvhC+CFoERjW4CgSoBh3YIhgyBTI9VBgECgVVPjxMLGIFbiDuHGYkJkTw?=
 =?us-ascii?q?BggszGiOBAW2BT4ImF44fPoE3AQGKTwMBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AaAADUKghch0O0hNFkHAEBAQQBAQcEAQGBUgYBAQsBg2u?=
 =?us-ascii?q?NGIsvgiGJD26NO4IyAYdTIjUIDQEDAQEBAQEBAgETAQEBCA0JCCkvgjYigmUDA?=
 =?us-ascii?q?wECJDUdBgkBARU7AyAJKwcXgxyBaQEYBAGnLRYFAReHNwoZgRGBP4dvhC+CFoE?=
 =?us-ascii?q?RjW4CgSoBh3YIhgyBTI9VBgECgVVPjxMLGIFbiDuHGYkJkTwBggszGiOBAW2BT?=
 =?us-ascii?q?4ImF44fPoE3AQGKTwMBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,319,1539673200"; 
   d="scan'208";a="55689647"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 05 Dec 2018 11:48:18 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728712AbeLETsO (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 5 Dec 2018 14:48:14 -0500
Received: from 212.199.177.27.static.012.net.il ([212.199.177.27]:55911 "EHLO
        herzl.nuvoton.co.il" rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org
        with ESMTP id S1728653AbeLETru (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 5 Dec 2018 14:47:50 -0500
Received: from taln60.nuvoton.co.il (ntil-fw [212.199.177.25])
        by herzl.nuvoton.co.il (8.13.8/8.13.8) with ESMTP id wB5JHVXm013011;
        Wed, 5 Dec 2018 21:17:31 +0200
Received: by taln60.nuvoton.co.il (Postfix, from userid 20088)
        id 5C5F162DA6; Wed,  5 Dec 2018 21:47:29 +0200 (IST)
From: Tali Perry <tali.perry1@gmail.com>
To: avifishman70@gmail.com, tmaimon77@gmail.com, venture@google.com,
        yuenn@google.com, brendanhiggins@google.com,
        mturquette@baylibre.com, sboyd@kernel.org
Cc: openbmc@lists.ozlabs.org, linux-clk@vger.kernel.org,
        linux-kernel@vger.kernel.org, Tali Perry <tali.perry1@gmail.com>
Subject: [PATCH v1 1/1] clk: npcm: get fixed input clks from DT
Date: Wed,  5 Dec 2018 21:47:02 +0200
Message-Id: <20181205194702.257430-3-tali.perry1@gmail.com>
X-Mailer: git-send-email 2.14.1
In-Reply-To: <20181205194702.257430-1-tali.perry1@gmail.com>
References: <20181205194702.257430-1-tali.perry1@gmail.com>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

---
 drivers/clk/clk-npcm7xx.c | 64 +++++++++++++++++++++++++++++++++++++++--------
 1 file changed, 53 insertions(+), 11 deletions(-)

diff --git a/drivers/clk/clk-npcm7xx.c b/drivers/clk/clk-npcm7xx.c
index 27a86b7a34db..25f8ccaa3d2f 100644
--- a/drivers/clk/clk-npcm7xx.c
+++ b/drivers/clk/clk-npcm7xx.c
@@ -8,17 +8,23 @@
  */
 
 #include <linux/module.h>
+#include <linux/clk.h>
 #include <linux/clk-provider.h>
+#include <linux/device.h>
 #include <linux/io.h>
 #include <linux/kernel.h>
 #include <linux/of.h>
+#include <linux/of_device.h>
+#include <linux/of_platform.h>
 #include <linux/of_address.h>
+#include <linux/platform_device.h>
 #include <linux/slab.h>
 #include <linux/err.h>
+#include <linux/rational.h>
 #include <linux/bitfield.h>
-
 #include <dt-bindings/clock/nuvoton,npcm7xx-clock.h>
 
+
 struct npcm7xx_clk_pll {
 	struct clk_hw	hw;
 	void __iomem	*pllcon;
@@ -44,7 +50,8 @@ static unsigned long npcm7xx_clk_pll_recalc_rate(struct clk_hw *hw,
 	u64 ret;
 
 	if (parent_rate == 0) {
-		pr_err("%s: parent rate is zero", __func__);
+		pr_err("%s: parent rate is zero. reg=%s\n", __func__,
+		       hw->init->name);
 		return 0;
 	}
 
@@ -65,9 +72,10 @@ static const struct clk_ops npcm7xx_clk_pll_ops = {
 	.recalc_rate = npcm7xx_clk_pll_recalc_rate,
 };
 
-static struct clk_hw *
-npcm7xx_clk_register_pll(void __iomem *pllcon, const char *name,
-			 const char *parent_name, unsigned long flags)
+static struct clk_hw *npcm7xx_clk_register_pll(void __iomem *pllcon,
+					       const char *name,
+					       const char *parent_name,
+					       unsigned long flags)
 {
 	struct npcm7xx_clk_pll *pll;
 	struct clk_init_data init;
@@ -544,12 +552,14 @@ static void __init npcm7xx_clk_init(struct device_node *clk_np)
 	void __iomem *clk_base;
 	struct resource res;
 	struct clk_hw *hw;
+	struct clk *clk;
 	int ret;
 	int i;
 
+	clk_base = NULL;
 	ret = of_address_to_resource(clk_np, 0, &res);
 	if (ret) {
-		pr_err("%pOFn: failed to get resource, ret %d\n", clk_np,
+		pr_err("%s: failed to get resource, ret %d\n", clk_np->name,
 			ret);
 		return;
 	}
@@ -558,9 +568,10 @@ static void __init npcm7xx_clk_init(struct device_node *clk_np)
 	if (!clk_base)
 		goto npcm7xx_init_error;
 
-	npcm7xx_clk_data = kzalloc(struct_size(npcm7xx_clk_data, hws,
-				   NPCM7XX_NUM_CLOCKS), GFP_KERNEL);
-	if (!npcm7xx_clk_data)
+	npcm7xx_clk_data = kzalloc(sizeof(*npcm7xx_clk_data->hws) *
+		NPCM7XX_NUM_CLOCKS + sizeof(npcm7xx_clk_data), GFP_KERNEL);
+
+	if (!npcm7xx_clk_data->hws)
 		goto npcm7xx_init_np_err;
 
 	npcm7xx_clk_data->num = NPCM7XX_NUM_CLOCKS;
@@ -568,6 +579,31 @@ static void __init npcm7xx_clk_init(struct device_node *clk_np)
 	for (i = 0; i < NPCM7XX_NUM_CLOCKS; i++)
 		npcm7xx_clk_data->hws[i] = ERR_PTR(-EPROBE_DEFER);
 
+	/* Read fixed clocks. These 3 clocks must be defined in DT */
+	clk = of_clk_get_by_name(clk_np, NPCM7XX_CLK_S_REFCLK);
+	if (IS_ERR(clk)) {
+		pr_err("failed to find external REFCLK on device tree, err=%ld\n",
+			PTR_ERR(clk));
+		clk_put(clk);
+		goto npcm7xx_init_fail_no_clk_on_dt;
+	}
+
+	clk = of_clk_get_by_name(clk_np, NPCM7XX_CLK_S_SYSBYPCK);
+	if (IS_ERR(clk)) {
+		pr_err("failed to find external SYSBYPCK on device tree, err=%ld\n",
+			PTR_ERR(clk));
+		clk_put(clk);
+		goto npcm7xx_init_fail_no_clk_on_dt;
+	}
+
+	clk = of_clk_get_by_name(clk_np, NPCM7XX_CLK_S_MCBYPCK);
+	if (IS_ERR(clk)) {
+		pr_err("failed to find external MCBYPCK on device tree, err=%ld\n",
+			PTR_ERR(clk));
+		clk_put(clk);
+		goto npcm7xx_init_fail_no_clk_on_dt;
+	}
+
 	/* Register plls */
 	for (i = 0; i < ARRAY_SIZE(npcm7xx_plls); i++) {
 		const struct npcm7xx_clk_pll_data *pll_data = &npcm7xx_plls[i];
@@ -646,11 +682,17 @@ static void __init npcm7xx_clk_init(struct device_node *clk_np)
 
 	return;
 
+npcm7xx_init_fail_no_clk_on_dt:
+	pr_err("see Documentation/devicetree/bindings/clock/");
+	pr_err("nuvoton,npcm750-clk.txt  for details\n");
 npcm7xx_init_fail:
-	kfree(npcm7xx_clk_data->hws);
+	if (npcm7xx_clk_data->num)
+		kfree(npcm7xx_clk_data->hws);
 npcm7xx_init_np_err:
-	iounmap(clk_base);
+	if (clk_base != NULL)
+		iounmap(clk_base);
 npcm7xx_init_error:
 	of_node_put(clk_np);
+	pr_err("clk setup fail\n");
 }
 CLK_OF_DECLARE(npcm7xx_clk_init, "nuvoton,npcm750-clk", npcm7xx_clk_init);
-- 
2.14.1

