Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 05 Dec 2018 08:43:55 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B120F58014B;
	Tue,  4 Dec 2018 11:53:44 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by fmsmga001-1.fm.intel.com with ESMTP; 04 Dec 2018 11:53:44 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ARHrD9Rx8eOIzBw7XCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e4eKPad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWlPUNtRWSJfDI2z?=
 =?us-ascii?q?bYUPAPYGM+lXoIf9vEMOoBmlCAmwBu7i0CNEi2Xq0aA41ekqDAHI3BYnH9ILqH?=
 =?us-ascii?q?nastL1NKIPWu+21qbIyyjDb+hN2Tf89YPFdREgruuKXbJtasrR0kgvGhjGjlqO?=
 =?us-ascii?q?s4zlOS2a1uAXv2ic9epgWvuihmg6oA9/pTivw90jiojPho8N1FDL7z95zJwzJd?=
 =?us-ascii?q?KiTU50f9ipG4ZTuSGCL4Z6XN8uTmVytConxLAKp4S3cDUJxZg73RLSav6Kf5CM?=
 =?us-ascii?q?7x/gTuqdPyl0iG5/dL6hiRu/8lKsx+7hWsSyzV1EtDBKksPWuXAIzxHT6taISv?=
 =?us-ascii?q?96/kq5xzaP2B7c6vteLUA3i6XbMZghzaA0lpYJtkTDBCD2lF33jK+QaEok5vCl?=
 =?us-ascii?q?5/r7brjivJOQKoF5hh/kPqgzmcGzHf40PwkMUmSD/OSzzrzj/Un3QLVQif02l7?=
 =?us-ascii?q?HUsJTbJcQdu664DBZZ0oU95BalCTepztAYkWAALFNLfhKIkZLpNkrQIPD3E/i/?=
 =?us-ascii?q?mU6gkDR1yPDcOL3uHJHNImLEkLf7crZx81RcxxYrzdBD+5JUDakMIPbyWk/yqt?=
 =?us-ascii?q?PUFBA4MxGvzubjCdV90J4eWG2VDq+YNqPSrUGH5uY1L+aQY48VvS73K+I56P72?=
 =?us-ascii?q?kX85hVgdcLGp3ZQNaXC4Au5pI0KDbXrsn9cOC2EKvgUlQezuiV2CVyNTZnmoU6?=
 =?us-ascii?q?I94DE7FJypDYPZSo+xh7yB2T+xHodKaWBeFlCMDXDoep2GW/cLdi2eOMxhkjsC?=
 =?us-ascii?q?VbinTI8szhWutA78y7p6IevY4CwYtZT/1Ndr4+3fjw099TtxD86FyWGCU3l0nn?=
 =?us-ascii?q?8URz8xxK1wu1d9yleE0ah7mfBYD8Zc5/FSXwc+NJ7cyfF6Ct/oVgLAeNeJVEip?=
 =?us-ascii?q?QtG8DT4tSdIxxscEY1xhFNW6khDDwy2qDqcWl7ORApw46Kbc33nrKMZ7xHbLz6?=
 =?us-ascii?q?0hj1ggQstSOmyqnK9/9w7PB4HXl0WVjbqldaMZ3CTV7meM0XKOvF1EUA53SajK?=
 =?us-ascii?q?QGoQZlXIotjj5kPNVbmuCa85PQtHzsKCLqhKatjtjVhdQPfjOdLeY3++mmuqBB?=
 =?us-ascii?q?aIwK+MY5Tue2kHwCrdD00EmRgJ/XmaLQg+Gjuho2XGATNzD13vfV3j/fN+qHyh?=
 =?us-ascii?q?SE801B+Fb0t62rqx+x4Vg+GcSvwJ0rIFvichtyt7HFKn093KDNqAohJrfL9Abt?=
 =?us-ascii?q?Ml/FdHyWXZuhRhPpyhKqBigUIecwR3vk/0yxV7EIJAkdIurHMrygpyJrmV0FdA?=
 =?us-ascii?q?dzOewJDxNafbKmj0/BCzdaHW3kvS38qR+qcK8P44sUnsvBm1Fko+9HVqy8Na03?=
 =?us-ascii?q?+C6ZTFEgUTUYj9XV0q9xdnvb7aZCo954TK1XB3Nam0sznC288mBec/yxagectf?=
 =?us-ascii?q?P72AFAPoD8IaAM2uIvQwm1e1dhIEIPxS9KksMsKmavuKwrKkMPxhnTKml2tH5o?=
 =?us-ascii?q?9931mI9yp9TO7IwpkEz+uZ3guBSzfzklOhvtrrloBDYDEYBnC/xjT8BI5Neq1y?=
 =?us-ascii?q?ep4GCX2vI8Kr3Np+nYPiW3lC+F6lGVwGws6pdQOOYFPn2Q1fyFoYoWagmSu+1D?=
 =?us-ascii?q?F0lzAprqyC3C3B2ejidRwHOnJVS2lml1vjPY+0j9UCVkiycwcpjAel5Vr9x6VD?=
 =?us-ascii?q?pKV/LnPfQEdScyjtMmFiVLC9tr6DY85J9ZMpvj9bUOW6YVCGVLH9pwEW3D/kH2?=
 =?us-ascii?q?tb3Do7bS2luo3lnxxmj2KQNHRzo2DDecFzxhff48bQReVL0ToFRyl4iD/XCUa6?=
 =?us-ascii?q?P9Sy+dWUlpHDsv2xVm67V51TdzXrwp2EtCeh+WJqBhi/leipmtL7CQg6zTP719?=
 =?us-ascii?q?5yWCTIthn8ZZPn16a7MeJhZURoAF7868xnGoBxiIcwhZcQ2WQEiZWR53YIjWDz?=
 =?us-ascii?q?MdBD06LkcHUNXSILw8LS4AX9201sNHOJy5j5VnWA2MRhYda6b3gS2iI86cBKFa?=
 =?us-ascii?q?iV4KZFnStzvlq3swbRbeJhkTcazPsk8GQajP0RuAox0iWdBagfHUxZPSzvjRuE?=
 =?us-ascii?q?9d6/o7tMZGazb7ewzlFxks67DLGNuQxcXHf5epE/HS5/9Ml/MVTM0GHt5YHgYt?=
 =?us-ascii?q?XfcdUTthiMmRfak+dVMI4xluYNhSd/JWL9unglx/Q6jBN025G6oZOHK35s/K+i?=
 =?us-ascii?q?Bh5YNzv1Z94c+z33jKZemNqW0J6rHpl7BjoLW57oR+qyED0OrfTnKxqOEDokp3?=
 =?us-ascii?q?iAA7XfGguf6Fp8o3LLDpCmLHWXJHgfzdV/SxiRPk1fgAYIXDokmp41DBylxMvk?=
 =?us-ascii?q?cE1h/DAe+kb4qgdQyuJvLxT/UH3QpAK2ZTcvUpSfMABa7gJf50fWLMye6Ph8Hz?=
 =?us-ascii?q?pD852lrQyNLHGbZgtSAWEIXEyEG07sPr206dbc9OiYA/K0L+HSbrWWtexeS/CI?=
 =?us-ascii?q?yIqv04th4jaML9iPMWNkD/EhwUpDWnZ5G8vCljULSiwXkT/NbsGBqBe9/C13st?=
 =?us-ascii?q?6w8PDxVA3z4ouPDqNYMc9z9BCunaeDK+mQiT55KTlG15MMxnzIyLkF0F4RkSFu?=
 =?us-ascii?q?cDatHqoatS7QV6LdgatXDx8dayNuO8pE9aM83g9ROcHFjtP5zKJ3jvkwC11dT1?=
 =?us-ascii?q?zuhtmpZdAWI2G6LF7IHluLO6+cJTLVw8D7e6e8SbxLgeVQth2wvyubEkD5MjSC?=
 =?us-ascii?q?kTnpSw6gMeVWgC6HOxxevZm3cgxxBmj7UNLmdhq7PcdrjT03xL04nG/FOXQAPj?=
 =?us-ascii?q?h8bUxNqKad7SdZgvV5BmxA4WBpLeiCmyaF8ebYLowavudsAiRxj+ha+mg1y6NJ?=
 =?us-ascii?q?7CFYQ/x4gCvTocRoo1Gjk+mPzCJoURtOqjlRgoKLsl5vOaHY9plGRHbF8wgB7W?=
 =?us-ascii?q?SWCxQWudRlDsfjtLxXytjKx+rPL2Jk+tfU7NYaCID3KcfPZHwoNBr4BTjbJAgI?=
 =?us-ascii?q?VzimMSfYnUMLw9+I8XjAkp8/4qrlnocVUb4TAE48EO4BEUVNH9EYJppzGDQ+nu?=
 =?us-ascii?q?jI34Yz+XOioUyJF41htZfdW6fXWK23JQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CJAQDa2gZch0O0hNFkHQEBBQEHBQGBZ?=
 =?us-ascii?q?YFbghEUE4N5iHiLL4INFJdJgV8UGBMBh0wiOBIBAwEBAQEBAQIBEwEBAQgNCQg?=
 =?us-ascii?q?pIwyCNiQBgmEBAQEBAgEBAiAEGQEBNwEFCQEBChUDAgImAgIDVAYTBYJRS4F6C?=
 =?us-ascii?q?AWkEXB8M4J2AQEFgkSEZAiBC4l3gRwXgX+BEYMShGmDHIJXiS+GBUY3kBoJkUE?=
 =?us-ascii?q?YgVuFEQWDIIcVmHeBXYF2TTAIgyeCGwwXiF6FXiEyAYEEAQEhikABAQ?=
X-IPAS-Result: =?us-ascii?q?A0CJAQDa2gZch0O0hNFkHQEBBQEHBQGBZYFbghEUE4N5iHi?=
 =?us-ascii?q?LL4INFJdJgV8UGBMBh0wiOBIBAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmEBA?=
 =?us-ascii?q?QEBAgEBAiAEGQEBNwEFCQEBChUDAgImAgIDVAYTBYJRS4F6CAWkEXB8M4J2AQE?=
 =?us-ascii?q?FgkSEZAiBC4l3gRwXgX+BEYMShGmDHIJXiS+GBUY3kBoJkUEYgVuFEQWDIIcVm?=
 =?us-ascii?q?HeBXYF2TTAIgyeCGwwXiF6FXiEyAYEEAQEhikABAQ?=
X-IronPort-AV: E=Sophos;i="5.56,315,1539673200"; 
   d="scan'208";a="56078657"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 04 Dec 2018 11:53:42 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726322AbeLDTxi (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 4 Dec 2018 14:53:38 -0500
Received: from mail.kernel.org ([198.145.29.99]:48618 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725882AbeLDTxh (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 4 Dec 2018 14:53:37 -0500
Received: from tzanussi-mobl (c-98-220-238-81.hsd1.il.comcast.net [98.220.238.81])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 1B6EC20878;
        Tue,  4 Dec 2018 19:53:36 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1543953217;
        bh=X/zdaUkNUY6L5NHayOuRZVhi3YroeoSyi3nlIlFZLvY=;
        h=Subject:From:To:Cc:Date:In-Reply-To:References:From;
        b=c9heAXVy5h0INkJXqUOnVd7Rr/YMWNBSFHJGPM5cIDAOiP6aGLjRawUYKbHslrzmC
         Xl5KMQD+Scbxi7Roe+3kOnSQrxmQRZ4Bbd9Rpnj7RNkf4KFYztoMvNFPM36hF+NCzR
         qMydQaissk7vBtpcfYj8irJpJPfXMSUG8o4wk6aM=
Message-ID: <1543953214.2790.14.camel@kernel.org>
Subject: Re: [PATCH v7 05/16] tracing: Generalize hist trigger onmax and
 save action
From: Tom Zanussi <zanussi@kernel.org>
To: Namhyung Kim <namhyung@kernel.org>
Cc: rostedt@goodmis.org, tglx@linutronix.de, mhiramat@kernel.org,
        vedang.patel@intel.com, bigeasy@linutronix.de,
        joel@joelfernandes.org, mathieu.desnoyers@efficios.com,
        julia@ni.com, linux-kernel@vger.kernel.org,
        linux-rt-users@vger.kernel.org, kernel-team@lge.com
Date: Tue, 04 Dec 2018 13:53:34 -0600
In-Reply-To: <20181204072549.GA16733@sejong>
References: <cover.1542221862.git.tom.zanussi@linux.intel.com>
         <9baa2b4a9b708791b39f176e3b63c207163d8c3b.1542221863.git.tom.zanussi@linux.intel.com>
         <20181123025000.GC25952@sejong> <1543875722.2018.22.camel@kernel.org>
         <20181204072549.GA16733@sejong>
Content-Type: text/plain; charset="UTF-8"
X-Mailer: Evolution 3.26.1-1 
Mime-Version: 1.0
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Namhyung,

On Tue, 2018-12-04 at 16:25 +0900, Namhyung Kim wrote:
> On Mon, Dec 03, 2018 at 04:22:02PM -0600, Tom Zanussi wrote:
> > Hi Namhyung,
> > 
> > On Fri, 2018-11-23 at 11:50 +0900, Namhyung Kim wrote:
> > > Hi Tom,
> > > 
> > > On Wed, Nov 14, 2018 at 02:18:02PM -0600, Tom Zanussi wrote:
> > > > From: Tom Zanussi <tom.zanussi@linux.intel.com>
> > > > 
> > 
> > [snip]
> > 
> > > > 
> > 
> >  enum handler_id {
> > > >  	HANDLER_ONMATCH = 1,
> > > >  	HANDLER_ONMAX,
> > > > @@ -349,14 +358,18 @@ struct action_data {
> > > >  
> > > >  		struct {
> > > >  			char			*var_str;
> > > > -			unsigned int		max_var_re
> > > > f_idx;
> > > > -			struct hist_field	*max_var;
> > > > -			struct hist_field	*var;
> > > > -		} onmax;
> > > > +			struct hist_field	*var_ref;
> > > > +			unsigned int		var_ref_id
> > > > x;
> > > 
> > > I have a question.  It's confusing for me there are many indexes
> > > for
> > > a
> > > variable (ref).  The hist_field already has var.idx, var_idx and
> > > var_ref_idx in it.  But you also added an external var_ref_idx
> > > along
> > > with the var_ref.  Also I see another var_ref_idx in the action
> > > data.
> > > Is all that really needed?  Could you please add some comment
> > > then?
> > > 
> > 
> > Below is a patch with some comments I'll merge into the next
> > version
> > that I hope will help make things more clear.  Basically, the
> > hist_field.var_idx isn't used so I've removed it and therefore that
> 
> Thanks!
> 
> 
> > source of confusion, while var.idx is the variable's unique
> > 'handle' in
> > the tracing_map, used when getting and setting the variable.  And
> > then
> > there are the several versions of var_ref_idx used for different
> > purposes depending on the context, but all of them are indices into
> > the
> > array of variable values collected when a trigger is hit.  For
> > example,
> 
> So IIUC field->var_ref_idx is an index to the val_ref_vals array,
> right?  Then if we keep the all hist_fields we don't need to have a
> separate var_ref_idx IMHO.
> 

hist_field_var_ref() needs to be be able to retrieve var_ref_idx given
the field alone, so I'm not sure this can be removed.

> 
> > the var_ref_idx defined inside track_data is the index that points
> > to
> > the tracked var value, which the action can use directly, and the
> 
> I guess the track_data.var_ref_idx is always same as the
> track_data.track_var.var_ref_idx, no?  If so we can get rid of it.
> 

Yes, you're right, that seems to be redundant in the code, will remove
it.

> 
> > var_ref_idx alongside the synth fields in action_data is the index
> > of
> > the first param used when generating a synthetic event, and so on.
> 
> For synth event, we have hist_data->synth_var_refs[] but it's not
> passed to trace_synth() so no way to know original var_ref_idx and
> I'm
> ok with having action_data.var_ref_idx.
> 
> But I don't see where hist_data->synth_var_refs is used other than
> find_var_ref().  And for that purpose, I guess it's more efficient to
> use hist_data->var_refs[] so that we can remove synth_var_refs.
> 

It's also used to destroy hist_fields in destroy_synth_var_refs(), but
this points out something that should be cleaned up too - because of
the way the code developed over time, we now have separate sets of
fields like this that should be unified - I'll add some patches to do
that.  And that will get rid of the separate synth_var_refs and use
hist_data->var_refs, which as you correctly point out will be more
efficient.

> 
> > 
> > Tom 
> > 
> > diff --git a/kernel/trace/trace_events_hist.c
> > b/kernel/trace/trace_events_hist.c
> > index 818944391d97..5310ef73f023 100644
> > --- a/kernel/trace/trace_events_hist.c
> > +++ b/kernel/trace/trace_events_hist.c
> > @@ -39,6 +39,16 @@ enum field_op_id {
> >  	FIELD_OP_UNARY_MINUS,
> >  };
> >  
> > +/*
> > + * A hist_var (histogram variable) contains variable information
> > for
> > + * hist_fields having the HIST_FIELD_FL_VAR or
> > HIST_FIELD_FL_VAR_REF
> > + * flag set.  A hist_var has a variable name e.g. ts0, and is
> > + * associated with a given histogram trigger, as specified by
> > + * hist_data.  The hist_var idx is the unique index assigned to
> > the
> > + * variable by the hist trigger's tracing_map.  The idx is what is
> > + * used to set a variable's value and, by a variable reference, to
> > + * retrieve it.
> > + */
> >  struct hist_var {
> >  	char				*name;
> >  	struct hist_trigger_data	*hist_data;
> > @@ -60,7 +70,15 @@ struct hist_field {
> >  	char				*system;
> >  	char				*event_name;
> >  	char				*name;
> > -	unsigned int			var_idx;
> > +
> > +	/*
> > +	 * When a histogram trigger is hit, if it has any
> > references
> > +	 * to variables, the values of those variables are
> > collected
> > +	 * into a var_ref_vals array by resolve_var_refs().  The
> > +	 * current value of each variable is read from the
> > tracing_map
> > +	 * using the hist field's hist_var.idx and entered into
> > the
> > +	 * var_ref_idx entry i.e. var_ref_vals[var_ref_idx].
> > +	 */
> >  	unsigned int			var_ref_idx;
> >  	bool                            read_once;
> >  };
> > @@ -350,6 +368,14 @@ struct action_data {
> >  	unsigned int		n_params;
> >  	char			*params[SYNTH_FIELDS_MAX];
> >  
> > +	/*
> > +	 * When a histogram trigger is hit, the values of any
> > +	 * references to variables, including variables being
> > passed
> > +	 * as parameters to synthetic events, are collected into a
> > +	 * var_ref_vals array.  This var_ref_idx is the index of
> > the
> > +	 * first param in the array to be passed to the synthetic
> > +	 * event invocation.
> > +	 */
> >  	unsigned int		var_ref_idx;
> >  	struct synth_event	*synth_event;
> >  	bool			use_trace_keyword;
> > @@ -362,10 +388,29 @@ struct action_data {
> >  		} match_data;
> >  
> >  		struct {
> > +			/*
> > +			 * var_str and var_ref refer to the
> > variable
> > +			 * being tracked e.g onmax($var).
> > +			 */
> >  			char			*var_str;
> 
> Can it be different from var_ref->var.name?
> 

Well, it's slightly different in that it still has the '$' prefix -
it's used for printing the action, but there's no reason not to get rid
of it and use var_ref instead.

Thanks for the useful comments,

Tom

