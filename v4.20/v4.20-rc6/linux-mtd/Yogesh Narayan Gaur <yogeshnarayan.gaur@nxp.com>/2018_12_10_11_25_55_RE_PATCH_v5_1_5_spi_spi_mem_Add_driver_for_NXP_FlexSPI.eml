Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 10 Dec 2018 19:36:15 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 411D8580310;
	Mon, 10 Dec 2018 03:26:46 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 03:26:45 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Aw9kKxh2iZikltZqasmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segTI//xwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJBUMhPSiJBHo2y?=
 =?us-ascii?q?YYgBD+UDPOZXs4bzqFQVrRumBwShH//vyiZUinPqwaE2z/otHAfb1wIgBdIOt3?=
 =?us-ascii?q?HUoc33O6cVXuC60rLIzTXeZP1Owzj98pLHcxA7rvGKQLl+cNDeyVQ1FwjYiViR?=
 =?us-ascii?q?qYvlPzyL2eQWs2ib6fBvVfi1hG8nsQ5xpCKjxsg2hYnUnIIY0VbE9CphwIovOd?=
 =?us-ascii?q?K4T0t7bMeiHZBNuS+aMI52TdkjQ2FuoCs10aAGuZChcCgLzpQqwQPUZf+fc4WQ?=
 =?us-ascii?q?/B7vSOKcLS1liH9rZr6znQu+/Eu8xuHmV8S50k5GojdKn9XWq3wA2ALf5tKaRv?=
 =?us-ascii?q?Z+/EqtwyuD2gHS5+1cL0A7i6nWJ4Ikz7M1lpcetUTOETXzlUjyj6Kbclko9+2r?=
 =?us-ascii?q?5unpZrjrpJqROo9phQz+L6gjnNG0D/4iPQgURWeb/Pyx1L398k39R7VHluM2kq?=
 =?us-ascii?q?bHv5DAP8gbpbC2AxVT0ok97xazFTCm0M4XnXUfLVJFfgyIj5TxNl3QPPz1Ce2z?=
 =?us-ascii?q?j0minTt13fzKI77sDonXInXCkrrtZbN95FRdyAo3w9Bf/ZVUCrQZLfL3W0/xss?=
 =?us-ascii?q?HYDxAgPwy33ennEtN92Z0aWW6WBa+YPqXSvkGS5u80PemMa5EauCznJ/gm+fHu?=
 =?us-ascii?q?l3k5lkEZfaWz2psXcn+4Eux8I0qFeXrsnssBEWASswo6Tezqi0ONXSRcZnavRK?=
 =?us-ascii?q?884jA7CIS7DYbMXIytgbqB3DulEZ1SfGxJFleMEXLwfYWeR/gMcD6SItNmkjEc?=
 =?us-ascii?q?VbiuUY4h1Q20uw/90bZnLvfU9TcetZLsz9V14+zTlRcv9T17Fcid0meNT31qkW?=
 =?us-ascii?q?MMXTM5wKd/oUllwFeZzad4m+BYFcBU5/5RUAc6MoDTw/Z5C9D1XALBeNCJRU2i?=
 =?us-ascii?q?QtWnBzExU90wz8UPY0Z7B9WtkBTD0zC2DL8SkryBHIY0/b7E33jtO8Z9zG7L27?=
 =?us-ascii?q?M6j1kmRctPNneqhrRl+AjRHIPJl0SZl6C3daUTxiLN9WGDzXaQs0FcSgJ/TaLF?=
 =?us-ascii?q?XXUHbEvMsdv5/l/CT6OpCbk/MQtO08iCJrFOat3ol1pGQvjjNc/aY2KwnWewGB?=
 =?us-ascii?q?mJyqmNbIrsZ2USwiHdBFIYnAAU+HaMLRI+CTu5o2LCEDxuEkribF72/ulgtny3?=
 =?us-ascii?q?VE80wBuMb016ybW1/BkZhfifS/MW2rIJoyMhqzRyHFag0NPaEduApwx9fKpCZd?=
 =?us-ascii?q?Mx+ktI1WXctwZlJJyvM7hihkICcwRwp07hyg94CptensQwrHMl1gxyKbmG31NH?=
 =?us-ascii?q?bD6Y2ZHwOrvKKmj95hyvaqjW2k3A39aS4KsA9PM4q1D7tgGzCkUi62ln08VS03?=
 =?us-ascii?q?aE+pXKDQ8SUZXtUkY39xl2va3abjM654PO0X1sMK+0sjDZ1tItBeslzAugfthF?=
 =?us-ascii?q?PKOFEg/yD9MVB8y0JOM2nFipawoOPPpO+64sI8Oma/yG1baxM+Zkgj2ngnpI4Y?=
 =?us-ascii?q?Bn3k2X6ipzV/TH35AGw/GfwAuKTDP8jFanssDqloFIfzASHmyjySf6AI5dfLF9?=
 =?us-ascii?q?fYEOCW22Oc242s1+h4LxW35f7FOiB04G1NW1dhaIbl393Rdf1UIYoXG8nSu4zj?=
 =?us-ascii?q?p0kywmr6aF3SzOxfjiewQDOmJRWGZiilLsK5Cuj98GREiocxQplBy96EbgxqhU?=
 =?us-ascii?q?uL5wL3POTkdPZST2KX9tUrGxtrabf8FA8pcovjhJX+SmZlCaTKXwox8b0yPlAm?=
 =?us-ascii?q?tfyyo3dzCsupXlgRN6jHiRI2p0rHrcYctw3wvQ5MTARf5N2ToLXCl5iTjNClm8?=
 =?us-ascii?q?JdWp5siUl5HYv+C6VmKhUIBTcCbxwYOBsiu7+XNlARmlk/+vnd3nFBAw0TXn2N?=
 =?us-ascii?q?lySSXIsBH8b5Hp16ugK+JnfUpoBFjm58phAI5+kYgwhJAW2XcEgJWY5n4HkWb1?=
 =?us-ascii?q?MdVG1qPydnsNRTgXw9HL5AjpwlFsLnWMx4jhTHWS3tNhZ8WmYmMRwi8879pFCK?=
 =?us-ascii?q?CO4LxGnCt1pEG1rQbQYfh7gzccxuEi6H8cg+EVpgUtyj+RDawVHUldJSbsjQiH?=
 =?us-ascii?q?78iirKVLY2aiabuw21B/ndy7DLGCvxtTWHD2epo5GS9w78N/ME/D0XHp64Hkfs?=
 =?us-ascii?q?XQYswXthGOjxjAiO1VIoorlvUWnSpnJX79vXo9xu4+jBxu3ou1sJKJKmpz56K5?=
 =?us-ascii?q?HgBXNifuaMwN4DHtgr1TnsKX34CpA5VgFS8HXJruTfK0Dj0Sse7rOBqJED05sn?=
 =?us-ascii?q?2bA6bQHReD6Ed6qHLCC4yrN3aSJHUDzNRtXh+dJFFEgAAPXTU3hZo5FgGsxMz8?=
 =?us-ascii?q?f0Z1/DER5ljkqhRSzuJkLQXwUmDapA2wcDc7VICfLAZK7gFF/0raKtaR7uV3Hy?=
 =?us-ascii?q?FF5JGhqBGNJ3efZwRJC2EJR0OFC0riPrmo+dnP7eyYCvCiIPvJZLWEsfZeWOuQ?=
 =?us-ascii?q?xZKzzotm+C6BNseVMXlnEfI7wVBPXWxjF8TahjUPSDEXlyTXYM6Avxq8/ix3rs?=
 =?us-ascii?q?ai8PXkQg7v5I2PC6dMPtVr4Ry5naCDN+uIjiZjNTlYzo8MxWPPyLUH3F8SjDxu?=
 =?us-ascii?q?dyCwEbsasy7BVrnQmqhRDx4UcC5zMMpI76Qh3ghCI8Lbi9X11qJmgf4xEVtKSV?=
 =?us-ascii?q?vhmsSxb8wQP269LE/HBFqMNLmeJT3E3cD3YaC/Sb1RlulUtAewuTGUE0D9JDSD?=
 =?us-ascii?q?iiLpWgurMeFNiiGbIRNftJu8chZrFWjsUtbmZgenP99wiD082ac0iW/SNW4ALT?=
 =?us-ascii?q?h8dFtAoaeN7SxDmPVwBWxA4mBhLemFgCuZ6+jYKpALsfpkGCh0luRa4GgkxLtR?=
 =?us-ascii?q?9i1LWPt1mC7KpN50v16mivWPyiZgUBdWtjZLhYeLsV9+NqnD6pZAWWjL/BQW4G?=
 =?us-ascii?q?WUChQKocZlC9L1t6BRzNjPiLz8KDNY/93I+sscAtDeKNibP3o5LRrpBDnUARMF?=
 =?us-ascii?q?TDGxM2Hfgk1dkPeK+XyUrpg1sJ7smJUVR79fVVw1EO4aC0t/ENwDJpd3Qi0rkb?=
 =?us-ascii?q?qBgMEU4nq+qUqZeMIPlJfdV+naK+/iOjedib5CL08Cxqn5NsIZLIDp2khmbV9S?=
 =?us-ascii?q?loPNB07RW5ZGpSg3PSEup0AYwX9xQ3Yzk2TscAq86XlbOvephFZimwxxbP8t8j?=
 =?us-ascii?q?726kY+IBzFrTYquE8hgZPuhjXHI225F7u5QYwDU3m8jEM2KJ6uBl8tNQA=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ADAABjTA5ch0O0hNFjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUwMBAQEBCwGBMCUrgVwECycKhzcDkBJKgg0UaIgWjj+BcxMBGBM?=
 =?us-ascii?q?BhEACgygiNgcNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkAYJhAQEBAQMBAiQTB?=
 =?us-ascii?q?gEBNwEFBgMBAQEBCBEEAQEBHgkHAx4HChQJCAIEDgUFA4MZgWoDFAEBAgKZeQK?=
 =?us-ascii?q?KB4FsM4J2AQEFhHkNghQIjCGCFoERRoIXNYJXggSDW4ImiWeBRJUeLgcCjTBwg?=
 =?us-ascii?q?0eBXIhAhyGPI4lmAgQCBAUCDQEBBYFNCoF9MxojgzyCGwkag0qKU3KBBQEBIYl?=
 =?us-ascii?q?cgS0BgR4BAQ?=
X-IPAS-Result: =?us-ascii?q?A0ADAABjTA5ch0O0hNFjGgEBAQEBAgEBAQEHAgEBAQGBUwM?=
 =?us-ascii?q?BAQEBCwGBMCUrgVwECycKhzcDkBJKgg0UaIgWjj+BcxMBGBMBhEACgygiNgcNA?=
 =?us-ascii?q?QMBAQEBAQECARMBAQEIDQkIKSMMgjYkAYJhAQEBAQMBAiQTBgEBNwEFBgMBAQE?=
 =?us-ascii?q?BCBEEAQEBHgkHAx4HChQJCAIEDgUFA4MZgWoDFAEBAgKZeQKKB4FsM4J2AQEFh?=
 =?us-ascii?q?HkNghQIjCGCFoERRoIXNYJXggSDW4ImiWeBRJUeLgcCjTBwg0eBXIhAhyGPI4l?=
 =?us-ascii?q?mAgQCBAUCDQEBBYFNCoF9MxojgzyCGwkag0qKU3KBBQEBIYlcgS0BgR4BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,338,1539673200"; 
   d="scan'208";a="141465655"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 10 Dec 2018 03:26:44 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727424AbeLJL0k (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 10 Dec 2018 06:26:40 -0500
Received: from mail-eopbgr50047.outbound.protection.outlook.com ([40.107.5.47]:42443
        "EHLO EUR03-VE1-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726847AbeLJL0k (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 10 Dec 2018 06:26:40 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=nxp.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=iifPecrc5rcI9plxnmpcWAC9fBqBKmozW/pDurNwLnQ=;
 b=IaXzOQKsN0MHsCAXjkWGMKhsNLZrH++Ul+doEdywAD+nagvNdhzC4BKgARjxNZ/+pLUMBbB46vaVpaijRTA38/NTvzE00ndXCse1dz9DflYY0pjiHwQQIQ0ys6hZyfB6l6khWsuZb1UY9kkJR67o7vVKH6Clww3OPtTaoS87CTw=
Received: from VI1PR04MB5726.eurprd04.prod.outlook.com (20.178.127.24) by
 VI1PR04MB1312.eurprd04.prod.outlook.com (10.162.121.30) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.1404.17; Mon, 10 Dec 2018 11:25:55 +0000
Received: from VI1PR04MB5726.eurprd04.prod.outlook.com
 ([fe80::595a:9890:8397:5d51]) by VI1PR04MB5726.eurprd04.prod.outlook.com
 ([fe80::595a:9890:8397:5d51%4]) with mapi id 15.20.1404.026; Mon, 10 Dec 2018
 11:25:55 +0000
From: Yogesh Narayan Gaur <yogeshnarayan.gaur@nxp.com>
To: Boris Brezillon <boris.brezillon@bootlin.com>
CC: Schrempf Frieder <frieder.schrempf@kontron.de>,
        "linux-mtd@lists.infradead.org" <linux-mtd@lists.infradead.org>,
        "marek.vasut@gmail.com" <marek.vasut@gmail.com>,
        "broonie@kernel.org" <broonie@kernel.org>,
        "linux-spi@vger.kernel.org" <linux-spi@vger.kernel.org>,
        "devicetree@vger.kernel.org" <devicetree@vger.kernel.org>,
        "robh@kernel.org" <robh@kernel.org>,
        "mark.rutland@arm.com" <mark.rutland@arm.com>,
        "shawnguo@kernel.org" <shawnguo@kernel.org>,
        "linux-arm-kernel@lists.infradead.org" 
        <linux-arm-kernel@lists.infradead.org>,
        "computersforpeace@gmail.com" <computersforpeace@gmail.com>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>
Subject: RE: [PATCH v5 1/5] spi: spi-mem: Add driver for NXP FlexSPI
 controller
Thread-Topic: [PATCH v5 1/5] spi: spi-mem: Add driver for NXP FlexSPI
 controller
Thread-Index: AQHUfZ10PwLsFrd7X0a81BAspcUxiKVxj0sAgAZCwzCAABZKgIAAALyggAAH5ICAAAC6EIAABLGAgAADIQA=
Date: Mon, 10 Dec 2018 11:25:55 +0000
Message-ID: <VI1PR04MB57269A32C1FF1592F117B97799A50@VI1PR04MB5726.eurprd04.prod.outlook.com>
References: <1542366701-16065-1-git-send-email-yogeshnarayan.gaur@nxp.com>
        <1542366701-16065-2-git-send-email-yogeshnarayan.gaur@nxp.com>
        <eb8a31d8-2ba6-f27c-addf-545c77921b77@kontron.de>
        <VI1PR04MB57267D9F69719B4BEF38BF8699A50@VI1PR04MB5726.eurprd04.prod.outlook.com>
        <20181210111909.35384eee@bbrezillon>
        <VI1PR04MB57268740CA806FFB164780EB99A50@VI1PR04MB5726.eurprd04.prod.outlook.com>
        <20181210115001.6c7af1d7@bbrezillon>
        <VI1PR04MB5726F0DDAC84F1AEC20B56DF99A50@VI1PR04MB5726.eurprd04.prod.outlook.com>
 <20181210120925.3c6336f6@bbrezillon>
In-Reply-To: <20181210120925.3c6336f6@bbrezillon>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
authentication-results: spf=none (sender IP is )
 smtp.mailfrom=yogeshnarayan.gaur@nxp.com; 
x-originating-ip: [14.142.187.166]
x-ms-publictraffictype: Email
x-microsoft-exchange-diagnostics: 1;VI1PR04MB1312;6:3DwW/KgV+umXoiZBJkXGl+7Vt93nEv2BB3FbVmfyCxxH+CftHVbPbnbpSMW4UDsMkzwQzvA1PL8IB8vlqnnW/TuKGOpirS+39ZgpfDfAL0kibYRH0WXVvh4lESLacAB436QRC7HZWSQKb2l/QwqR0hpEYlNg8+BkcJDxg9lNPkaU/jGN6gkpcgV5P9tdUwVfDE/99IDS5lmMqM7oaAWv91NIBv7ymYd0AfsReEFt1mtij7fQxTikssKbga5CbVOojq9mn1p5rw+5qCSPvczhN/tvGhu8c7O31lSpR/eg2Irq+S0LTgLg5SxorS48j4GRRpR+rEarGucdsiA42tYUag2W9ZGDGj9/0XXgLxVe63bhsGAOdUSB42vPCWyPxGmmCSnimbhdLhK5IayyJR/hETkUl6qhYdKGQ7v7Sx5RKbBstmS7adqvfeFIsvjYrsTCnhOTxXywlecuoWEkU63+70kQOnZ/yq+U1g7RKjZfbl0=;5:QU1WcahuZ3v25i0QO0R6uXoCob/rDWEwbNiH4uFRRs9z7rQZQIPjeGBJz4zB8w9RXVRKkxy3rnCSioowzY710vjV9cNqxproSIGyr7wNrdXV1utEqABUaEsNBzjgwRxxj2dro3wOt7H7GYktj1ZLzeJKyTpvJAceGTBsbdBN96o=;7:f8mY0yKcmzoojqiRd/oyqkBeqo6h164n9IAKzk5lskHHEVRhue//KYMDhXBTcM8v5XaLYcTfizDzyxBgD7B1AzudjP7SUo+uMbwMkvcDcOpqhJoi6p2T4zqfNq5CAgHTUCVsjF6F7IfaK9gZebW2PA==
x-ms-exchange-antispam-srfa-diagnostics: SOS;
x-ms-office365-filtering-correlation-id: 621f0ad3-b3e4-4c85-e63b-08d65e924030
x-ms-office365-filtering-ht: Tenant
x-microsoft-antispam: BCL:0;PCL:0;RULEID:(2390098)(7020095)(4652040)(8989299)(4534185)(7168020)(4627221)(201703031133081)(201702281549075)(8990200)(5600074)(711020)(4618075)(2017052603328)(7153060)(7193020);SRVR:VI1PR04MB1312;
x-ms-traffictypediagnostic: VI1PR04MB1312:
x-microsoft-antispam-prvs: <VI1PR04MB131242E7338A8DB34F19166899A50@VI1PR04MB1312.eurprd04.prod.outlook.com>
x-ms-exchange-senderadcheck: 1
x-exchange-antispam-report-cfa-test: BCL:0;PCL:0;RULEID:(8211001083)(3230017)(999002)(6040522)(2401047)(5005006)(8121501046)(93006095)(93001095)(10201501046)(3002001)(3231472)(944501520)(52105112)(6055026)(148016)(149066)(150057)(6041310)(201703131423095)(201702281528075)(20161123555045)(201703061421075)(201703061406153)(20161123564045)(20161123562045)(20161123558120)(20161123560045)(201708071742011)(7699051)(76991095);SRVR:VI1PR04MB1312;BCL:0;PCL:0;RULEID:;SRVR:VI1PR04MB1312;
x-forefront-prvs: 08828D20BC
x-forefront-antispam-report: SFV:NSPM;SFS:(10009020)(366004)(396003)(136003)(376002)(39860400002)(346002)(13464003)(189003)(199004)(5660300001)(2906002)(33656002)(93886005)(229853002)(6916009)(76176011)(7696005)(446003)(11346002)(99286004)(14454004)(68736007)(78486014)(25786009)(6116002)(186003)(55016002)(3846002)(8936002)(8676002)(81156014)(81166006)(55236004)(26005)(6436002)(6506007)(53546011)(102836004)(74316002)(39060400002)(106356001)(6246003)(478600001)(316002)(4326008)(86362001)(9686003)(53936002)(54906003)(7416002)(105586002)(305945005)(71190400001)(71200400001)(486006)(7736002)(66066001)(476003)(97736004)(256004)(14444005);DIR:OUT;SFP:1101;SCL:1;SRVR:VI1PR04MB1312;H:VI1PR04MB5726.eurprd04.prod.outlook.com;FPR:;SPF:None;LANG:en;PTR:InfoNoRecords;MX:1;A:1;
x-microsoft-antispam-message-info: LtAa9nW95tatN0l59/JO4EW+DzX7Xhp4Igd5Py980cUs8SyVfAQvwwRaMKe37TdNCqz4jO6yH/TjaXKaco+QbtLf7ZfT0HXhkY3l0D6F+df+nIH2QTWZAFVJy2QdTrdMyuncb42XxrxKsLVxhDQXueReum0NaJsx4UVUn/bwj5qpcSgdlnt1jkzUT9vbbcRK66dYMISnzaOSul3tyojRX+JNkzBdnWlc2hBXnF+qkBcv5j5jmtW92wyio6DAgriZoOxUwVLWzd4tbeX9HktokPD2UvlttLEe4mSYf0o4gPVWU1/74qH+Rql87cVIOYYY
spamdiagnosticoutput: 1:99
spamdiagnosticmetadata: NSPM
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
X-OriginatorOrg: nxp.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 621f0ad3-b3e4-4c85-e63b-08d65e924030
X-MS-Exchange-CrossTenant-originalarrivaltime: 10 Dec 2018 11:25:55.3485
 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 686ea1d3-bc2b-4c6f-a92c-d99c5c301635
X-MS-Exchange-Transport-CrossTenantHeadersStamped: VI1PR04MB1312
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Boris,

> -----Original Message-----
> From: Boris Brezillon [mailto:boris.brezillon@bootlin.com]
> Sent: Monday, December 10, 2018 4:39 PM
> To: Yogesh Narayan Gaur <yogeshnarayan.gaur@nxp.com>
> Cc: Schrempf Frieder <frieder.schrempf@kontron.de>; linux-
> mtd@lists.infradead.org; marek.vasut@gmail.com; broonie@kernel.org; linux=
-
> spi@vger.kernel.org; devicetree@vger.kernel.org; robh@kernel.org;
> mark.rutland@arm.com; shawnguo@kernel.org; linux-arm-
> kernel@lists.infradead.org; computersforpeace@gmail.com; linux-
> kernel@vger.kernel.org
> Subject: Re: [PATCH v5 1/5] spi: spi-mem: Add driver for NXP FlexSPI cont=
roller
>=20
> On Mon, 10 Dec 2018 10:59:54 +0000
> Yogesh Narayan Gaur <yogeshnarayan.gaur@nxp.com> wrote:
>=20
> > Hi Boris,
> >
> > > -----Original Message-----
> > > From: Boris Brezillon [mailto:boris.brezillon@bootlin.com]
> > > Sent: Monday, December 10, 2018 4:20 PM
> > > To: Yogesh Narayan Gaur <yogeshnarayan.gaur@nxp.com>
> > > Cc: Schrempf Frieder <frieder.schrempf@kontron.de>; linux-
> > > mtd@lists.infradead.org; marek.vasut@gmail.com; broonie@kernel.org;
> > > linux- spi@vger.kernel.org; devicetree@vger.kernel.org;
> > > robh@kernel.org; mark.rutland@arm.com; shawnguo@kernel.org;
> > > linux-arm- kernel@lists.infradead.org; computersforpeace@gmail.com;
> > > linux- kernel@vger.kernel.org
> > > Subject: Re: [PATCH v5 1/5] spi: spi-mem: Add driver for NXP FlexSPI
> > > controller
> > >
> > > On Mon, 10 Dec 2018 10:43:56 +0000
> > > Yogesh Narayan Gaur <yogeshnarayan.gaur@nxp.com> wrote:
> > >
> > > > > > Thus, in LUT preparation we have assigned only the base address=
.
> > > > > > Now if I have assigned ahb_buf_size to FSPI_FLSHXXCR0 register
> > > > > > then for
> > > > > read/write data beyond limit of ahb_buf_size offset I get data co=
rruption.
> > > > >
> > > > > Why would you do that? We have the ->adjust_op_size() exactly
> > > > > for this reason, so, if someone tries to do a spi_mem_op with
> > > > > data.nbytes > ahb_buf_size you should return an error.
> > > > >
> > > > Let me explain my implementation with example. If I have to write
> > > > data of size
> > > 0x100 bytes at offset 0x1200 for CS1, I would program as below:
> > > > In func nxp_fspi_select_mem(), would set value of controller
> > > > address space
> > > size, memmap_phy_size, to FSPI_FLSHA2CR0 and rest all FSPI_FLSHXXCR0 =
as
> 0.
> > > > Value of memmap_phy_size is 0x10000000 i.e. 256 MB for my
> > > > LX2160ARDB
> > > target.
> > > > Then in nxp_fspi_prepare_lut(), I would prepare LUT ADDR with
> > > > address length
> > > requirement 3/4 byte for NOR or 1/2/3/4 bytes for NAND flash.
> > > > Also for LUT_NXP_WRITE would program data bytes as 0.
> > > >
> > > > Then inside func nxp_fspi_do_op(), set register FSPI_IPCR0 as the
> > > > address offset i.e. 0x1200 and in register FSPI_IPCR1 program the
> > > > data size to write i.e. 0x100
> > > >
> > > > If, as suggested if I tries to mark value of register
> > > > FSPI_FLSHA2CR0 equal to
> > > ahb_buf_size (0x800), then access for address 0x1200 gives me wrong
> > > data. This is because as per the controller specification access to
> > > flash connected at CS1 can be performed under range of FSPI_ FLSHA1CR=
0
> and FSPI_ FLSHA2CR0.
> > >
> > > Don't you have a way to set an offset to apply to the address
> > > accessed through the AHB? And if you don't, how will it work if your
> > > mapping is smaller than the flash size?
> >
> > Write operations are triggered using IP commands instead of AHB command=
.
> > For Read AHB command is used and in this we are adding the offset when
> performing memcpy_fromIO operation
> >       memcpy_fromio(op->data.buf.in, (f->ahb_addr + op->addr.val),
> > len);
> >
> > AHB/IP operations are independent of the way how CS got selected. CS
> selection depends, e.g. CS1 on the value of register FSPI_FLSHA1CR0 and
> FSPI_FLSHA2CR0.
> >
> > Mapping can never going to be smaller than the connected flash size as =
per
> discussion with the Board design team and if it's possible by user manual=
ly
> changes the non-soldered part then flash area beyond complete mapping is =
not
> accessible.
> > On LX2160ARDB, with mapping of 256MB, for now we are having 4 flash
> devices connected with size as 64 MB. If user wants he can have only one =
single
> flash with flash size of 256MB.
>=20
> Given that the dirmap interface has now been merged and the MTD side of
> things is soon to be merged, I'd recommend you to implement it in your
> v6 and only use non-AHB accesses for the ->exec_op() implementation.

This would going to be performance hit if I would use non-AHB accesses for =
->exec_op().
In read in v5 I am using AHB mode for read if read data size is greater tha=
n rxfifo size and if its less than rxfifo then use IP mode for read.

--
Regards
Yogesh Gaur
