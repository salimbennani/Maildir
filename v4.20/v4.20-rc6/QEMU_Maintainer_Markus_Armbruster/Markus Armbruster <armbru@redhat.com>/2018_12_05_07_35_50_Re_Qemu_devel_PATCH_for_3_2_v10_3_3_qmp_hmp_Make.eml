Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 06 Dec 2018 08:46:21 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id BA432580443
	for <like.xu@linux.intel.com>; Tue,  4 Dec 2018 23:36:21 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by fmsmga002-1.fm.intel.com with ESMTP; 04 Dec 2018 23:36:21 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AZapG0hJ4D0faenonGdmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgfI/3xwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJBUMhPWSxPDIGz?=
 =?us-ascii?q?YYgBAOUOIelWspH9qlkMoxaxGAWhCv/jxSFThnLtwa02z/4sHR3a0AE6A94Dtm?=
 =?us-ascii?q?nfotXvNKcVVOC41K7Gwi/Zb/NVxDf985XDfww7ofGJRr1wa9fRyVIzFwzblFWb?=
 =?us-ascii?q?tIvoMCmP1uQIqGeb9fdgWPm1i2E5tg5xoiKgxts2hobVgYIVz0nJ+CNky4g2Pd?=
 =?us-ascii?q?21UFB3bcKnHZdKqi2WKoh7Ttk8T2xmuCs20KAKtJyjcCQU1JgqwwTTZ+GJfoSW?=
 =?us-ascii?q?+B7vSeWcLDliiH57e7+ygQu5/1K6xe3mTMa01U5HripbndnIsXAAzxjT6smcSv?=
 =?us-ascii?q?th5UetwzmP1wbO6u1eJkA0j6XbJ4Ygwr42iJUTrVzOEjHqlEj1lqOaa1go9+uy?=
 =?us-ascii?q?5+j5bLjrpoWQO5J2hw3mN6QhgM2/AeA2MggUWGib/Pyx1KT98k38XbVGl+A5nb?=
 =?us-ascii?q?fHsJ/EIcQXv7W2AwhI0oYl9xmwESym3NMcnXkGL1JKZgiLjof0O1zWJPD4DPG/?=
 =?us-ascii?q?g0mjkTtxxvDGOKHhDYvJLnTZjLjherN95lVayAo0y9Bf6JRUCqwbLPL0QE/xu8?=
 =?us-ascii?q?TUDgUlPAys3+bnFNJ925saWWKOAa+WLrnesFCV5u80J+mMZYkVuCvyKvQ/5v7u?=
 =?us-ascii?q?i2M5lkEZfaWzwZQXb3W4TbxbJV6Eay/snssZCjVN+Q4/V/DxzluFVzFVejC1Ra?=
 =?us-ascii?q?174zg6DIevC8DEXpysh7qamz62G4ATam1YB1TfLHHzao/RXv4NbD6VcNZslyFB?=
 =?us-ascii?q?WbW/Rotkzxy3qQLh15JhKezb/DBesojsg8No7e/eng1n6DpvEs6G2HuMRWwnom?=
 =?us-ascii?q?RdazYw3a176WxwzE2CyLV1y9ZRD9ZU9foBBgszM5/Ry+xwV4mpcg3Ed9aNDl2h?=
 =?us-ascii?q?R4P1Lys2S4cUysUNfl01Ms+nhArexDanGfdBnqaODoYp2rjR03j4O4B2zHOQh/?=
 =?us-ascii?q?pptEUvXsYabT7uvaV47QWGQteRy0g=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AkAAALfwdchxHrdtBdBxwBAQEEAQEHB?=
 =?us-ascii?q?AEBgVEHAQELAQGBLyqCOIwSX4t/AQEGgTWJEg6OLIFzFBgUh00iNAkNAQMBAQE?=
 =?us-ascii?q?BAQECARMBAQEKCwkIGw4vQgEQAYFiBQIDGgEGglsBAQEBAgEBAiQfCikDAgEBA?=
 =?us-ascii?q?gYBAQoYCRoDCAMBCwEEDQsxEwWCUUuBagMIBQgBBKVrM4gDDYIcjB4XeIEHgRG?=
 =?us-ascii?q?DEoJXgheFbgKgIS4JjhODLhiJYIdMLI5RiXyBRoINcBWDJ4InFxKODEAxAYEGH?=
 =?us-ascii?q?IIHhjcpLYF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0AkAAALfwdchxHrdtBdBxwBAQEEAQEHBAEBgVEHAQELAQG?=
 =?us-ascii?q?BLyqCOIwSX4t/AQEGgTWJEg6OLIFzFBgUh00iNAkNAQMBAQEBAQECARMBAQEKC?=
 =?us-ascii?q?wkIGw4vQgEQAYFiBQIDGgEGglsBAQEBAgEBAiQfCikDAgEBAgYBAQoYCRoDCAM?=
 =?us-ascii?q?BCwEEDQsxEwWCUUuBagMIBQgBBKVrM4gDDYIcjB4XeIEHgRGDEoJXgheFbgKgI?=
 =?us-ascii?q?S4JjhODLhiJYIdMLI5RiXyBRoINcBWDJ4InFxKODEAxAYEGHIIHhjcpLYF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,317,1539673200"; 
   d="scan'208";a="56150094"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 04 Dec 2018 23:36:20 -0800
Received: from localhost ([::1]:60736 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gURjH-0006wz-SK
	for like.xu@linux.intel.com; Wed, 05 Dec 2018 02:36:19 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:37067)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <armbru@redhat.com>) id 1gURj0-0006wg-B7
	for qemu-devel@nongnu.org; Wed, 05 Dec 2018 02:36:03 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <armbru@redhat.com>) id 1gURiu-0000zX-OC
	for qemu-devel@nongnu.org; Wed, 05 Dec 2018 02:36:01 -0500
Received: from mx1.redhat.com ([209.132.183.28]:48010)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <armbru@redhat.com>) id 1gURiu-0000yD-81
	for qemu-devel@nongnu.org; Wed, 05 Dec 2018 02:35:56 -0500
Received: from smtp.corp.redhat.com (int-mx02.intmail.prod.int.phx2.redhat.com
	[10.5.11.12])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 0B6C13001DB7;
	Wed,  5 Dec 2018 07:35:54 +0000 (UTC)
Received: from blackfin.pond.sub.org (ovpn-116-56.ams2.redhat.com
	[10.36.116.56])
	by smtp.corp.redhat.com (Postfix) with ESMTPS id 8BF9618838;
	Wed,  5 Dec 2018 07:35:51 +0000 (UTC)
Received: by blackfin.pond.sub.org (Postfix, from userid 1000)
	id 222D5113860E; Wed,  5 Dec 2018 08:35:50 +0100 (CET)
From: Markus Armbruster <armbru@redhat.com>
To: Daniel Henrique Barboza <danielhb413@gmail.com>
References: <20181109173309.25212-1-danielhb413@gmail.com>
	<20181109173309.25212-4-danielhb413@gmail.com>
	<87bm689ien.fsf@dusky.pond.sub.org>
	<87va4f4st9.fsf@dusky.pond.sub.org>
	<2883a083-81a4-f29c-7c3c-df80853ce06b@gmail.com>
	<20181204191506.GI18284@habkost.net>
	<e0a475be-4f80-c5d8-f411-2e513499ea79@gmail.com>
Date: Wed, 05 Dec 2018 08:35:50 +0100
In-Reply-To: <e0a475be-4f80-c5d8-f411-2e513499ea79@gmail.com> (Daniel Henrique
	Barboza's message of "Tue, 4 Dec 2018 17:57:53 -0200")
Message-ID: <87d0qg2zop.fsf@dusky.pond.sub.org>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/26.1 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.12
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.44]);
	Wed, 05 Dec 2018 07:35:54 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH for-3.2 v10 3/3] qmp hmp: Make
 system_wakeup check wake-up support and run state
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-devel@nongnu.org, imammedo@redhat.com, mst@redhat.com,
	Eduardo Habkost <ehabkost@redhat.com>, mdroth@linux.vnet.ibm.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Daniel Henrique Barboza <danielhb413@gmail.com> writes:

> On 12/4/18 5:15 PM, Eduardo Habkost wrote:
>> On Tue, Dec 04, 2018 at 04:36:56PM -0200, Daniel Henrique Barboza wrote:
>>>
>>> On 11/29/18 4:55 PM, Markus Armbruster wrote:
>>>> One more thing...
>>>>
>>>> Markus Armbruster <armbru@redhat.com> writes:
>>>>
>>>>> Daniel Henrique Barboza <danielhb413@gmail.com> writes:
>>>>>
>>>>>> The qmp/hmp command 'system_wakeup' is simply a direct call to
>>>>>> 'qemu_system_wakeup_request' from vl.c. This function verifies if
>>>>>> runstate is SUSPENDED and if the wake up reason is valid before
>>>>>> proceeding. However, no error or warning is thrown if any of those
>>>>>> pre-requirements isn't met. There is no way for the caller to
>>>>>> differentiate between a successful wakeup or an error state caused
>>>>>> when trying to wake up a guest that wasn't suspended.
>>>>>>
>>>>>> This means that system_wakeup is silently failing, which can be
>>>>>> considered a bug. Adding error handling isn't an API break in this
>>>>>> case - applications that didn't check the result will remain broken,
>>>>>> the ones that check it will have a chance to deal with it.
>>>>>>
>>>>>> Adding to that, the commit before previous created a new QMP API called
>>>>>> query-current-machine, with a new flag called wakeup-suspend-support,
>>>>>> that indicates if the guest has the capability of waking up from suspended
>>>>>> state. Although such guest will never reach SUSPENDED state and erroring
>>>>>> it out in this scenario would suffice, it is more informative for the user
>>>>>> to differentiate between a failure because the guest isn't suspended versus
>>>>>> a failure because the guest does not have support for wake up at all.
>>>>>>
>>>>>> All this considered, this patch changes qmp_system_wakeup to check if
>>>>>> the guest is capable of waking up from suspend, and if it is suspended.
>>>>>> After this patch, this is the output of system_wakeup in a guest that
>>>>>> does not have wake-up from suspend support (ppc64):
>>>>>>
>>>>>> (qemu) system_wakeup
>>>>>> wake-up from suspend is not supported by this guest
>>>>>> (qemu)
>>>>>>
>>>>>> And this is the output of system_wakeup in a x86 guest that has the
>>>>>> support but isn't suspended:
>>>>>>
>>>>>> (qemu) system_wakeup
>>>>>> Unable to wake up: guest is not in suspended state
>>>>>> (qemu)
>>>>>>
>>>>>> Reported-by: Balamuruhan S <bala24@linux.vnet.ibm.com>
>>>>>> Signed-off-by: Daniel Henrique Barboza <danielhb413@gmail.com>
>>>>>> ---
>>>>>>    hmp.c                   |  5 ++++-
>>>>>>    hw/acpi/core.c          |  4 +++-
>>>>>>    hw/char/serial.c        |  3 ++-
>>>>>>    hw/input/ps2.c          |  9 ++++++---
>>>>>>    hw/timer/mc146818rtc.c  |  3 ++-
>>>>>>    include/sysemu/sysemu.h |  3 ++-
>>>>>>    migration/migration.c   |  7 +++++--
>>>>>>    qapi/misc.json          |  8 +++++++-
>>>>>>    qmp.c                   | 13 ++++++++++++-
>>>>>>    vl.c                    |  6 ++++--
>>>>>>    10 files changed, 47 insertions(+), 14 deletions(-)
>>>>>>
>>>>>> diff --git a/hmp.c b/hmp.c
>>>>>> index 7828f93a39..0f5d943413 100644
>>>>>> --- a/hmp.c
>>>>>> +++ b/hmp.c
>>>>>> @@ -1220,7 +1220,10 @@ void hmp_cont(Monitor *mon, const QDict *qdict)
>>>>>>    void hmp_system_wakeup(Monitor *mon, const QDict *qdict)
>>>>>>    {
>>>>>> -    qmp_system_wakeup(NULL);
>>>>>> +    Error *err = NULL;
>>>>>> +
>>>>>> +    qmp_system_wakeup(&err);
>>>>>> +    hmp_handle_error(mon, &err);
>>>>>>    }
>>>>>>    void hmp_nmi(Monitor *mon, const QDict *qdict)
>>>>>> diff --git a/hw/acpi/core.c b/hw/acpi/core.c
>>>>>> index 52e18d7810..a7073dd435 100644
>>>>>> --- a/hw/acpi/core.c
>>>>>> +++ b/hw/acpi/core.c
>>>>>> @@ -514,7 +514,9 @@ static uint32_t acpi_pm_tmr_get(ACPIREGS *ar)
>>>>>>    static void acpi_pm_tmr_timer(void *opaque)
>>>>>>    {
>>>>>>        ACPIREGS *ar = opaque;
>>>>>> -    qemu_system_wakeup_request(QEMU_WAKEUP_REASON_PMTIMER);
>>>>>> +    Error *err = NULL;
>>>>>> +
>>>>>> +    qemu_system_wakeup_request(QEMU_WAKEUP_REASON_PMTIMER, &err);
>>>>>>        ar->tmr.update_sci(ar);
>>>>>>    }
>>>> Leaks the error object when qemu_system_wakeup_request() fails.
>>>>
>>>> If it cannot fail here, pass &error_abort.
>>>>
>>>> If it can fail, but you want to ignore failure, pass NULL.
>>> Good point. I'll simply pass NULL to all callers that didn't care
>>> for the error prior to this change.
>> Most times I saw QEMU code ignoring errors, it actually didn't
>> expect any errors to happen and was supposed to be using
>> &error_abort instead.
>>
>> This makes NULL errp always look like a bug to be fixed.  If you
>> are sure you really want to ignore an error, I'd recommend adding
>> a comment making your intention explicit.

I agree the "ignore errors" feature is widely abused.  I don't agree
with adding "I mean it" comments.  I think the proper remedy is to flag
abuses in patch review, and clean them up wherever we find them.

> In this particular case, the existing code wouldn't be expecting
> errors because
> qemu_system_wakeup_request wasn't reporting any. Prior to this patch,
> the function
> would either change the runstate and notify the wake up event or fail
> silently.
>
> The idea of the patch is to add the extra Error pointer into
> qemu_system_wakeup_request,
> so qmp_system_wakeup can propagate the runstate_check error back to
> hmp_system_wakeup,
> instead of duplicating this runstate verification inside
> qmp_system_wakeup (like I was
> doing in some earlier version). With this idea in mind, passing NULL
> in the errp
> of the remaining qemu_system_wakeup_request calls will not improve the
> existing usage
> or fix potential bugs, sure, but doesn't make it worse either.
>
> I don't see any problems with re-evaluating every existing
> qemu_system_wakeup_request
> call and judge f qemu should error_abort out of it in case of
> error. It's just out of scope of
> this patch series, IMO.

Okay.  I asked you to eliminate the code duplication, and I don't want
to punish your good deed there by demanding further cleanup.  That said,
further cleanup is always welcome :)

