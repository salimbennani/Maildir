Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 10 Dec 2018 18:14:57 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 3822B5804A8
	for <like.xu@linux.intel.com>; Mon, 10 Dec 2018 00:51:21 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 00:51:21 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AXbIPxB8MCzeysf9uRHKM819IXTAuvvDOBiVQ1KB+?=
 =?us-ascii?q?0+kXIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CRWRPQMhRWSJDDY2/?=
 =?us-ascii?q?YYQAAPYOM+lFoYnlpVYArxSzCRSiCe/z1DBInWT73bEj0+k7DQ3KwBYtEtAIvX?=
 =?us-ascii?q?/JrNv1LqASUeWtwafP1zrDdfBW2Srm6IPVbh0hu/SMUqlqccrM0kkvCx3Kjk+N?=
 =?us-ascii?q?ooHiJTyVzOENvHOB7+p9Tu+vkXAopBxxoje12scgkJXGhoUQyl3d8yhy3Yg7Jd?=
 =?us-ascii?q?q9SEFhYN6kFoNdtyedN4twTcMiRXxotDw9yr0ctp62ejUBxpc/xxPHdfCLb4uF?=
 =?us-ascii?q?7gj+WOqMIjp0nmxpdby/ihqo7EStyPXwWteo3FtOtCZJj9fBum4X2xDO6cWKRO?=
 =?us-ascii?q?Fx8lmi1DuJygvd8PtLIVoumqreM5MhwqA/lp4UsUnbGi/2mV72jLONdkk+9eio?=
 =?us-ascii?q?7fnnbq/hpp+GOI94kgD+MqIwlcyjGek0LBQCUmuB9eihybHu/lf1TKtEg/A2iK?=
 =?us-ascii?q?XVrZLXKdwepqGjAg9V1ogj6wy4DzejyNkYhGcILFdYeB6ekofmJU/OL+78Dfum?=
 =?us-ascii?q?mFuslyprx/baMbL/GZXBKXzDkLbifblj8UJdxxczwMhb55JVDLEBPf3yVlXwtN?=
 =?us-ascii?q?zeEh82LQi0z/z7B9V604MTQmSPAqifMKPdt1+I+/gjI+6WZI8aoDr9MeQq5+by?=
 =?us-ascii?q?jX8lnl8QZa2p3ZoUaH+mBPhnLFiZbGHogtcAF2cKowU/QPbriF2ETT5ceXKyU7?=
 =?us-ascii?q?gg6TE8DYL1RbrFXZ2n1bydwD+gTNoRYmFdFkvKF3DueIOZHfAWZ2WXK85llzUC?=
 =?us-ascii?q?Er+5V44m0wrprQL/1v9rI/TZ/n4ls4n+3o1w7uzXiRZg7DFxEoGR3n+ASyRuk3?=
 =?us-ascii?q?oVSiQq9KZ4p0N71xGEy6cvmOFSF9FY+6ZUVBwnP4XX1e1wBoPOXVfkd82CDX+g?=
 =?us-ascii?q?Ts8nSRUsVN843pdaZk9nENykggrOmS63GbIcipSRCZA0+76a1H/0cZVT0XHDgY?=
 =?us-ascii?q?wolVo7WYNmL2isnLNk6wXJT9rAiUCTjbuCb6kQ3CfRsmyEyDzd7wljTAdsXPCd?=
 =?us-ascii?q?DjgkbUzMoIG8vxuaQg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CtAQAiKA5cmBHrdtBjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBZYExgTmBFhODeoh4iy6CDYkgkCQUGAsJhECDKiI4EgEDAQEBAQEBAgETAQE?=
 =?us-ascii?q?BAQEICwsGGw4jDII2BQIDGgEGglsBAQEBAgEBAiAjCikDAgEBAgYBAQoYAgIFH?=
 =?us-ascii?q?QQCAgMBCwEEFAQxEwWDHAGBdAUIAQQKpFqBL4QtAQMCDEKFHoELixYXgX+EI4M?=
 =?us-ascii?q?eAQICgV6DBIJXAo89hjeLAQmHCIYohB8YgimHPYdXLI1pixuBXYF3cBU7gmwJi?=
 =?us-ascii?q?xNRhG9AMQGBBhyKNoF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0CtAQAiKA5cmBHrdtBjHAEBAQQBAQcEAQGBZYExgTmBFhO?=
 =?us-ascii?q?Deoh4iy6CDYkgkCQUGAsJhECDKiI4EgEDAQEBAQEBAgETAQEBAQEICwsGGw4jD?=
 =?us-ascii?q?II2BQIDGgEGglsBAQEBAgEBAiAjCikDAgEBAgYBAQoYAgIFHQQCAgMBCwEEFAQ?=
 =?us-ascii?q?xEwWDHAGBdAUIAQQKpFqBL4QtAQMCDEKFHoELixYXgX+EI4MeAQICgV6DBIJXA?=
 =?us-ascii?q?o89hjeLAQmHCIYohB8YgimHPYdXLI1pixuBXYF3cBU7gmwJixNRhG9AMQGBBhy?=
 =?us-ascii?q?KNoF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,337,1539673200"; 
   d="scan'208";a="55661653"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 10 Dec 2018 00:51:19 -0800
Received: from localhost ([::1]:59773 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gWHHb-0006hV-65
	for like.xu@linux.intel.com; Mon, 10 Dec 2018 03:51:19 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:37193)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <armbru@redhat.com>) id 1gWHHL-0006hJ-6W
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 03:51:05 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <armbru@redhat.com>) id 1gWHHH-00081B-Qr
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 03:51:03 -0500
Received: from mx1.redhat.com ([209.132.183.28]:41122)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <armbru@redhat.com>) id 1gWHHH-00080c-G5
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 03:50:59 -0500
Received: from smtp.corp.redhat.com (int-mx08.intmail.prod.int.phx2.redhat.com
	[10.5.11.23])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 543DC3164677
	for <qemu-devel@nongnu.org>; Mon, 10 Dec 2018 08:50:58 +0000 (UTC)
Received: from blackfin.pond.sub.org (ovpn-116-56.ams2.redhat.com
	[10.36.116.56])
	by smtp.corp.redhat.com (Postfix) with ESMTPS id 5CD6E19C7C;
	Mon, 10 Dec 2018 08:50:54 +0000 (UTC)
Received: by blackfin.pond.sub.org (Postfix, from userid 1000)
	id D27AB113860E; Mon, 10 Dec 2018 09:50:52 +0100 (CET)
From: Markus Armbruster <armbru@redhat.com>
To: =?utf-8?Q?Marc-Andr=C3=A9?= Lureau <marcandre.lureau@redhat.com>
References: <20180706105753.26700-1-marcandre.lureau@redhat.com>
	<20180706105753.26700-16-marcandre.lureau@redhat.com>
	<87lg53olyf.fsf@dusky.pond.sub.org>
	<CAMxuvaxENFTV9SV0jF9Q9qcf2p5vAdPZ5t8BumQLVXvqP9knrA@mail.gmail.com>
Date: Mon, 10 Dec 2018 09:50:52 +0100
In-Reply-To: <CAMxuvaxENFTV9SV0jF9Q9qcf2p5vAdPZ5t8BumQLVXvqP9knrA@mail.gmail.com>
	(=?utf-8?Q?=22Marc-Andr=C3=A9?= Lureau"'s message of "Sat, 8 Dec 2018
	15:20:18 +0400")
Message-ID: <8736r5n4sz.fsf@dusky.pond.sub.org>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/26.1 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.23
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.41]);
	Mon, 10 Dec 2018 08:50:58 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH v6 15/27] qapi: rename allow_dict to
 allow_implicit
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-devel <qemu-devel@nongnu.org>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com> writes:

> On Wed, Dec 5, 2018 at 10:41 PM Markus Armbruster <armbru@redhat.com> wro=
te:
>>
>> Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com> writes:
>>
>> > This makes it a bit clearer what is the intent of the dictionnary for
>>
>> dictionary
>
> sigh, this must be a very common misspell (dictionnaire in french)

Muscle memory...

>> > the check_type() function, since there was some confusion on a
>> > previous iteration of this series.
>>
>> I don't remember... got a pointer to that confusion handy?
>
> https://lists.nongnu.org/archive/html/qemu-devel/2017-12/msg01584.html

Thanks!

My review comment was

    > diff --git a/scripts/qapi.py b/scripts/qapi.py
    > index df2a304e8f..15711f96fa 100644
    > --- a/scripts/qapi.py
    > +++ b/scripts/qapi.py
    > @@ -696,7 +696,15 @@ def check_type(info, source, value, allow_array=
=3DFalse,
    >          return
    >=20=20
    >      if not allow_dict:
    > -        raise QAPISemError(info, "%s should be a type name" % source)
    > +        if isinstance(value, dict) and 'type' in value:
    > +            check_type(info, source, value['type'], allow_array,
    > +                       allow_dict, allow_optional, allow_metas)
    > +            if 'if' in value:
    > +                check_if(value, info)
    > +            check_unknown_keys(info, value, {'type', 'if'})
    > +            return
    > +        else:
    > +            raise QAPISemError(info, "%s should be a type name" % so=
urce)

    @allow_dict becomes a misnomer: dictionaries are now always allowed, but
    they have different meaning (implicit type vs. named type with
    additional attributes).

    Rename to @allow_implicit?

As far as I can tell, it's not an issue in the current version of your
patches anymore:

    def check_type(info, source, value, allow_array=3DFalse,
                   allow_implicit=3DFalse, allow_optional=3DFalse,
                   allow_metas=3D[]):
        global all_names

        if value is None:
            return

        # Check if array type for value is okay
        if isinstance(value, list):
            if not allow_array:
                raise QAPISemError(info, "%s cannot be an array" % source)
            if len(value) !=3D 1 or not isinstance(value[0], str):
                raise QAPISemError(info,
                                   "%s: array type must contain single type=
 name" %
                                   source)
            value =3D value[0]

        # Check if type name for value is okay
        if isinstance(value, str):
            if value not in all_names:
                raise QAPISemError(info, "%s uses unknown type '%s'"
                                   % (source, value))
            if not all_names[value] in allow_metas:
                raise QAPISemError(info, "%s cannot use %s type '%s'" %
                                   (source, all_names[value], value))
            return

        if not allow_implicit:
            raise QAPISemError(info, "%s should be a type name" % source)

        if not isinstance(value, OrderedDict):
            raise QAPISemError(info,
                               "%s should be a dictionary or type name" % s=
ource)

        # value is a dictionary, check that each member is okay
        for (key, arg) in value.items():
            check_name(info, "Member of %s" % source, key,
                       allow_optional=3Dallow_optional)
            if c_name(key, False) =3D=3D 'u' or c_name(key, False).startswi=
th('has_'):
                raise QAPISemError(info, "Member of %s uses reserved name '=
%s'"
                                   % (source, key))
            # Todo: allow dictionaries to represent default values of
            # an optional argument.
            if isinstance(arg, dict):
                check_known_keys(info, "member '%s' of %s" % (key, source),
                                 arg, ['type'], ['if'])
                typ =3D arg['type']
            else:
                typ =3D arg
            check_type(info, "Member '%s' of %s" % (key, source),
                       typ, allow_array=3DTrue,
                       allow_metas=3D['built-in', 'union', 'alternate', 'st=
ruct',
                                    'enum'])


>> > Suggested-by: Markus Armbruster <armbru@redhat.com>
>> > Signed-off-by: Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com>

