Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 09 Dec 2018 18:50:27 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 053585803E4
	for <like.xu@linux.intel.com>; Fri,  7 Dec 2018 07:38:43 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 07 Dec 2018 07:38:43 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A5jXl0RCJ0yIrnDAtWTRZUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP37psuwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95PWSxPAo2y?=
 =?us-ascii?q?bIUBAOQOMulas4bzqEYArQO8CAeuC+7j1zFFimPo0q0hyOkhDQLL0RY8E94Svn?=
 =?us-ascii?q?nZrtP4P7oSX+Cvy6nIyC3OYelW2Tf87IjIcwghoemSUr1odsTe01UvFwPEjlqO?=
 =?us-ascii?q?tIzpJj2b2f4Qs2eG9e1rSOWii3YnqwFwpjivw9ojh5LTho0L11/E9T92wJovKd?=
 =?us-ascii?q?KkT057ZMepHZ1NvC+ZL4t7Wt0uT31rtSog17EKpJ22cDIUxJkpxxPTceGLfoqQ?=
 =?us-ascii?q?7h/gV+udOyl0iG9/dL6hmxq+71KsxvD+W8Wq1ltBszBLncPWtn8X0hze8siHRe?=
 =?us-ascii?q?V5/kemwTuP0wHT6vpYIUAvj6bbJJghwqMqmpoUq0TDETf6mETwjKCIakUp4vak?=
 =?us-ascii?q?5/jkb7n8u5OQKox5hhvgPqkgmsGzG/k0PwoWU2ie4+u81bnj/UPjQLVNi/07ir?=
 =?us-ascii?q?DZv47fJcQGv6K2HhFa0pg95Ba7Fjupy9MYnWQBLF1ZZh2HlI/lO1XPIPD7E/iz?=
 =?us-ascii?q?mVutkCpzyvDCP73hBIjNL3fZnLfge7Z991BTyA4pwd9D4JJUD6oMIPT0Wk/3u9?=
 =?us-ascii?q?zYCAI5Pxazw+b9B9VxzpkeVn6XAq+FLKPStkeF5uYuI+mPeoAZojn8K+U+6v7q?=
 =?us-ascii?q?jH85n0IdfKaz0ZsWbnC4AuppI0GDbXXwhdcBFDRCgwwlUea/iEGeSSUBIDG2Xr?=
 =?us-ascii?q?kg/Xc9D4SpC5qFQZqix7mI3SO+F5sRYXhaC1eKCjDxeoCZHvsBdi+WcfJniSEO?=
 =?us-ascii?q?AL2oSos90kO3uQrnjrZqMOfQvzcVrI/uz8Rd4erVmhcvsztuAJOGzmuPQmpoy3?=
 =?us-ascii?q?4OXCI8x6tloEZwmWuEhIxxnuZVE8Ab2fJXUwogfcrY0e1kCt3ochjMcteAVBCt?=
 =?us-ascii?q?RdDwRXkoQ9cshtMDfUt5M9OliB/FwmytGbBGuaaMAckM8qPY3mDpKvFYwmrG1a?=
 =?us-ascii?q?Q8ynUvX8fOfTm+hq978gT7HYPFk0yF0a2tcPJPj2b26G6fwD/W7wljWwlqXPCA?=
 =?us-ascii?q?BChHaw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AVAAAfkwpcmBHrdtBjGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUwQBAQELAYEwgTyBExODeoh4izKBYC18llOBcxIBARgUh10iNgcNAQM?=
 =?us-ascii?q?BAQEBAQECARMBAQEBAQgLCwYbDi+CNgUCAxoBBoJcAQIDAQIgBAsBEwopAwMBA?=
 =?us-ascii?q?gYBAQoOCgICIgQCAgMBMAEFARwGAQkDBgIBAQGDHIF1DQEDAZl6PIsNfDOJIYE?=
 =?us-ascii?q?NEnmLFxeBf4ERJ4I2NYgFglcCiTeGBJEsCZFFBhiBXIgHECaHH4kQj2QCBAIEB?=
 =?us-ascii?q?QIFDyGBKwGCBjMiGxWDJ4InFxKODHGBB4hugXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AVAAAfkwpcmBHrdtBjGwEBAQEDAQEBBwMBAQGBUwQBAQE?=
 =?us-ascii?q?LAYEwgTyBExODeoh4izKBYC18llOBcxIBARgUh10iNgcNAQMBAQEBAQECARMBA?=
 =?us-ascii?q?QEBAQgLCwYbDi+CNgUCAxoBBoJcAQIDAQIgBAsBEwopAwMBAgYBAQoOCgICIgQ?=
 =?us-ascii?q?CAgMBMAEFARwGAQkDBgIBAQGDHIF1DQEDAZl6PIsNfDOJIYENEnmLFxeBf4ERJ?=
 =?us-ascii?q?4I2NYgFglcCiTeGBJEsCZFFBhiBXIgHECaHH4kQj2QCBAIEBQIFDyGBKwGCBjM?=
 =?us-ascii?q?iGxWDJ4InFxKODHGBB4hugXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,326,1539673200"; 
   d="scan'208";a="55974395"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 07 Dec 2018 07:38:42 -0800
Received: from localhost ([::1]:46776 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gVIDB-0005Mx-Sr
	for like.xu@linux.intel.com; Fri, 07 Dec 2018 10:38:41 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:58811)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <philmd@redhat.com>) id 1gVICw-0005FZ-6A
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 10:38:27 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <philmd@redhat.com>) id 1gVICs-0002z3-T0
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 10:38:26 -0500
Received: from mail-wm1-f65.google.com ([209.85.128.65]:38083)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <philmd@redhat.com>) id 1gVICm-0001e1-4N
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 10:38:18 -0500
Received: by mail-wm1-f65.google.com with SMTP id m22so4978300wml.3
	for <qemu-devel@nongnu.org>; Fri, 07 Dec 2018 07:38:07 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:subject:to:cc:references:from:openpgp:message-id
	:date:user-agent:mime-version:in-reply-to:content-language
	:content-transfer-encoding;
	bh=89m/Ax+HDxi8ojMBEs/gRs2+AIYRog0xHxwQkmFdZbA=;
	b=IPSDqIaUvMEI5ra01AYaCMCp80ZtvLO/WUp60EWFjH+oxl994YKE5c3br4c7CTbYqU
	cKq2IAqRp6zdb32w/PHeuATz4kcbcHHXrnu2domNxZoPQKNqmA/7dXLu/3/i0Jl9sTF+
	4/LtNnYGTwRLXoSk8e4KYLHyRC7qDtrv0P3cTccOE7mTDJ+7Anz38WeCXeOLlFAFsVzh
	XXDQ7gw38s07Mim6A4A5go6kIJsbIK1O+JENRXY0MLm9Az8vVGaxngQbwip1223E6j69
	dHnHGmyNBbvAMPAJ1akTmpUvfYx62P0CfpK8IsbYCIAgg1JwOsP4k/C2FbIX4tFfjeVc
	gnRQ==
X-Gm-Message-State: AA+aEWasOMSoJ32kasSWOvJLK+uLkNPWQnvSOYkdztV36k/5R8jtJuh9
	k2ft6M/dyOJOdQ88Qgoe3M7oCg==
X-Google-Smtp-Source: AFSGD/WDS/d6RuFiIuKUYhRQmaWXvOOWNMhxjqIIVVpQqr/MeNyLGG/0QE5TN2PHBNfGPrTbAKKOCg==
X-Received: by 2002:a7b:c5d1:: with SMTP id n17mr2653162wmk.152.1544197086984; 
	Fri, 07 Dec 2018 07:38:06 -0800 (PST)
Received: from [192.168.1.34] (172.red-88-21-202.staticip.rima-tde.net.
	[88.21.202.172])
	by smtp.gmail.com with ESMTPSA id l15sm3465581wrw.4.2018.12.07.07.38.05
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Fri, 07 Dec 2018 07:38:06 -0800 (PST)
To: Laurent Vivier <lvivier@redhat.com>, qemu-devel@nongnu.org
References: <20181207131732.21073-1-lvivier@redhat.com>
	<20181207131732.21073-2-lvivier@redhat.com>
From: =?UTF-8?Q?Philippe_Mathieu-Daud=c3=a9?= <philmd@redhat.com>
Openpgp: id=89C1E78F601EE86C867495CBA2A3FD6EDEADC0DE;
	url=http://pgp.mit.edu/pks/lookup?op=get&search=0xA2A3FD6EDEADC0DE
Message-ID: <4ba28b6f-37d4-f070-1e7d-e57ec22e49ad@redhat.com>
Date: Fri, 7 Dec 2018 16:38:05 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.1
MIME-Version: 1.0
In-Reply-To: <20181207131732.21073-2-lvivier@redhat.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 8bit
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.85.128.65
Subject: Re: [Qemu-devel] [PATCH 2/2] scsi-generic: Convert from DPRINTF()
 macro to trace events
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Fam Zheng <fam@euphon.net>, Paolo Bonzini <pbonzini@redhat.com>,
	=?UTF-8?Q?Philippe_Mathieu-Daud=c3=a9?= <f4bug@amsat.org>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On 12/7/18 2:17 PM, Laurent Vivier wrote:
> Signed-off-by: Laurent Vivier <lvivier@redhat.com>
> ---
>  hw/scsi/scsi-generic.c | 56 ++++++++++++++++++++----------------------
>  hw/scsi/trace-events   | 11 +++++++++
>  2 files changed, 37 insertions(+), 30 deletions(-)
> 
> diff --git a/hw/scsi/scsi-generic.c b/hw/scsi/scsi-generic.c
> index 7237b4162e..842f8e0893 100644
> --- a/hw/scsi/scsi-generic.c
> +++ b/hw/scsi/scsi-generic.c
> @@ -18,21 +18,10 @@
>  #include "hw/scsi/scsi.h"
>  #include "hw/scsi/emulation.h"
>  #include "sysemu/block-backend.h"
> +#include "trace.h"
>  
>  #ifdef __linux__
>  
> -//#define DEBUG_SCSI
> -
> -#ifdef DEBUG_SCSI
> -#define DPRINTF(fmt, ...) \
> -do { printf("scsi-generic: " fmt , ## __VA_ARGS__); } while (0)
> -#else
> -#define DPRINTF(fmt, ...) do {} while(0)
> -#endif
> -
> -#define BADF(fmt, ...) \
> -do { fprintf(stderr, "scsi-generic: " fmt , ## __VA_ARGS__); } while (0)
> -
>  #include <scsi/sg.h>
>  #include "scsi/constants.h"
>  
> @@ -98,8 +87,7 @@ static void scsi_command_complete_noio(SCSIGenericReq *r, int ret)
>          }
>      }
>  
> -    DPRINTF("Command complete 0x%p tag=0x%x status=%d\n",
> -            r, r->req.tag, status);
> +    trace_scsi_generic_command_complete_noio(r, r->req.tag, status);
>  
>      scsi_req_complete(&r->req, status);
>  done:
> @@ -259,7 +247,7 @@ static void scsi_read_complete(void * opaque, int ret)
>      }
>  
>      len = r->io_header.dxfer_len - r->io_header.resid;
> -    DPRINTF("Data ready tag=0x%x len=%d\n", r->req.tag, len);
> +    trace_scsi_generic_read_complete(r->req.tag, len);
>  
>      r->len = -1;
>  
> @@ -335,7 +323,7 @@ static void scsi_read_data(SCSIRequest *req)
>      SCSIDevice *s = r->req.dev;
>      int ret;
>  
> -    DPRINTF("scsi_read_data tag=0x%x\n", req->tag);
> +    trace_scsi_generic_read_data(req->tag);
>  
>      /* The request is used as the AIO opaque value, so add a ref.  */
>      scsi_req_ref(&r->req);
> @@ -356,7 +344,7 @@ static void scsi_write_complete(void * opaque, int ret)
>      SCSIGenericReq *r = (SCSIGenericReq *)opaque;
>      SCSIDevice *s = r->req.dev;
>  
> -    DPRINTF("scsi_write_complete() ret = %d\n", ret);
> +    trace_scsi_generic_write_complete(ret);
>  
>      assert(r->req.aiocb != NULL);
>      r->req.aiocb = NULL;
> @@ -371,7 +359,7 @@ static void scsi_write_complete(void * opaque, int ret)
>      if (r->req.cmd.buf[0] == MODE_SELECT && r->req.cmd.buf[4] == 12 &&
>          s->type == TYPE_TAPE) {
>          s->blocksize = (r->buf[9] << 16) | (r->buf[10] << 8) | r->buf[11];
> -        DPRINTF("block size %d\n", s->blocksize);
> +        trace_scsi_generic_write_complete_blocksize(s->blocksize);
>      }
>  
>      scsi_command_complete_noio(r, ret);
> @@ -388,7 +376,7 @@ static void scsi_write_data(SCSIRequest *req)
>      SCSIDevice *s = r->req.dev;
>      int ret;
>  
> -    DPRINTF("scsi_write_data tag=0x%x\n", req->tag);
> +    trace_scsi_generic_write_data(req->tag);
>      if (r->len == 0) {
>          r->len = r->buflen;
>          scsi_req_data(&r->req, r->len);
> @@ -411,6 +399,21 @@ static uint8_t *scsi_get_buf(SCSIRequest *req)
>      return r->buf;
>  }
>  
> +static void scsi_generic_command_dump(uint8_t *cmd, int len)
> +{
> +    int i;
> +    char *line_buffer, *p;
> +
> +    line_buffer = g_malloc(len * 5 + 1);
> +
> +    for (i = 0, p = line_buffer; i < len; i++) {
> +        p += sprintf(p, " 0x%02x", cmd[i]);
> +    }
> +    trace_scsi_generic_send_command(line_buffer);
> +
> +    g_free(line_buffer);
> +}
> +
>  /* Execute a scsi command.  Returns the length of the data expected by the
>     command.  This will be Positive for data transfers from the device
>     (eg. disk reads), negative for transfers to the device (eg. disk writes),
> @@ -422,16 +425,9 @@ static int32_t scsi_send_command(SCSIRequest *req, uint8_t *cmd)
>      SCSIDevice *s = r->req.dev;
>      int ret;
>  
> -#ifdef DEBUG_SCSI
> -    DPRINTF("Command: data=0x%02x", cmd[0]);
> -    {
> -        int i;
> -        for (i = 1; i < r->req.cmd.len; i++) {
> -            printf(" 0x%02x", cmd[i]);
> -        }
> -        printf("\n");
> +    if (trace_event_get_state_backends(TRACE_SCSI_GENERIC_SEND_COMMAND)) {
> +        scsi_generic_command_dump(cmd, r->req.cmd.len);
>      }
> -#endif
>  
>      if (r->req.cmd.xfer == 0) {
>          g_free(r->buf);
> @@ -693,7 +689,7 @@ static void scsi_generic_realize(SCSIDevice *s, Error **errp)
>  
>      /* define device state */
>      s->type = scsiid.scsi_type;
> -    DPRINTF("device type %d\n", s->type);
> +    trace_scsi_generic_realize_type(s->type);
>  
>      switch (s->type) {
>      case TYPE_TAPE:
> @@ -716,7 +712,7 @@ static void scsi_generic_realize(SCSIDevice *s, Error **errp)
>          break;
>      }
>  
> -    DPRINTF("block size %d\n", s->blocksize);
> +    trace_scsi_generic_realize_blocksize(s->blocksize);
>  
>      /* Only used by scsi-block, but initialize it nevertheless to be clean.  */
>      s->default_scsi_version = -1;
> diff --git a/hw/scsi/trace-events b/hw/scsi/trace-events
> index e9625f790c..3c2fd7f52f 100644
> --- a/hw/scsi/trace-events
> +++ b/hw/scsi/trace-events
> @@ -320,3 +320,14 @@ scsi_disk_emulate_command_UNKNOWN(int cmd, const char *name) "Unknown SCSI comma
>  scsi_disk_dma_command_READ(uint64_t lba, uint32_t len) "Read (sector %" PRId64 ", count %u)"
>  scsi_disk_dma_command_WRITE(const char *cmd, uint64_t lba, int len) "Write %s(sector %" PRId64 ", count %u)"
>  scsi_disk_new_request(uint32_t lun, uint32_t tag, const char *line) "Command: lun=%d tag=0x%x data=%s"
> +
> +# hw/scsi/scsi-generic.c
> +scsi_generic_command_complete_noio(void *req, uint32_t tag, int statuc) "Command complete %p tag=0x%x status=%d"
> +scsi_generic_read_complete(uint32_t tag, int len) "Data ready tag=0x%x len=%d"
> +scsi_generic_read_data(uint32_t tag) "scsi_read_data tag=0x%x"
> +scsi_generic_write_complete(int ret) "scsi_write_complete() ret = %d"
> +scsi_generic_write_complete_blocksize(int blocksize) "block size %d"
> +scsi_generic_write_data(uint32_t tag) "scsi_write_data tag=0x%x"
> +scsi_generic_send_command(const char *line) "Command: data=%s"
> +scsi_generic_realize_type(int type) "device type %d"
> +scsi_generic_realize_blocksize(int blocksize) "block size %d"
> 

Reviewed-by: Philippe Mathieu-Daudé <philmd@redhat.com>
Tested-by: Philippe Mathieu-Daudé <philmd@redhat.com>

