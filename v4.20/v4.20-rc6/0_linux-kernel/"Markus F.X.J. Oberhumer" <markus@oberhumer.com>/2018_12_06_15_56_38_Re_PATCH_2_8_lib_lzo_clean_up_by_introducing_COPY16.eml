Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 08:49:45 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C8C5D58042F;
	Thu,  6 Dec 2018 07:56:51 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 06 Dec 2018 07:56:50 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AvTRMhxTNIzGvF7F1sECt1Z6xZ9psv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YhyCt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZH42y?=
 =?us-ascii?q?cYUPAeoGPehboYfyqVQBohmiCgejH+Pv0j1Fi2Tq3aA4yestDR3K0QIgEt8IrX?=
 =?us-ascii?q?/arM/1NKAXUe2twqXGyi/Mb+lV2Tfg84jDbxAvreuNUr5qdcTd01QkGRregVqO?=
 =?us-ascii?q?s4zlPy6V1uETvGiB4eZrSOWii2s9pAFroTiv29wsh5LOho0O1F/E7yV5wJswJd?=
 =?us-ascii?q?KmUk53e8KrEJxVtyyDMYZ9X80sQ2ZtuCkgy70Gv4a2fC8Rx5s53R7fa+GHc42W?=
 =?us-ascii?q?7RL5TuqePTB4hHd9dLK8mRmy606gxfP4VsWu11ZKtCVFn9/RvX4Ozxze8taLRu?=
 =?us-ascii?q?d580u7xDqC2R7f5vtZLU03iabXMZ8sz7wompcQrEjPBDL6lFnsgKOIaEkp+fKk?=
 =?us-ascii?q?5/n5brjloJKXKpV6hRvkMqs0n8yyGeQ4PRYKX2ic4em8yrLj8lPjQLlQjf05jL?=
 =?us-ascii?q?PZsJbEKsQfvKK5BBVV0ok75xa+CTepzsgYkGEZIF5ZfB+LlZXlNl/QLPziEPuy?=
 =?us-ascii?q?gEignC1qyv3EJrHhB4/CLnnHkLfvZ7Z97EtcxRI3zdBe4ZJUF74ALOvwWkDvrt?=
 =?us-ascii?q?zYCAE2Mwitz+bgBtR90J0RWXiUD6+HP6Pdr0WI6vgsI+aSfo8VvijyK/w/6/7p?=
 =?us-ascii?q?l385lkcRfbO10psPdHC4AvNmLl2dYXrtgdcOD30GvwUjTOHxjF2CUDhTZ2u9Xq?=
 =?us-ascii?q?4m5zE7Dp6mApnHRoy3nLOB2yK7FIVMZm9aElCMDWvod4KcVvcMci2SI9NhnSYD?=
 =?us-ascii?q?VbS7S48hyAuhtAn1y7d8KurU+ysYtY/s1dRv5u3Tkw0y+iJwD8iHz26NSGR0lH?=
 =?us-ascii?q?sSRzAqxKB/vVB9ylCb3Kh6hPxXC8Zf5/BOUgc8M57cyPd3C9TzWgLHY9eIR0yq?=
 =?us-ascii?q?QtSgATEtUN0xx8UCbFp6G9WnlhrDxTalA6cJl7yXA5w56rjT32PxJ8Z6yHbKzr?=
 =?us-ascii?q?MhgEMkQsZUMW2mh6h/9xXcBoLTkkWZkbqqeroY3CLX6GiDym+OtllCUAFsSaXF?=
 =?us-ascii?q?QWwfZkzOoNT6/EzCSaWiCbAmMgRbz86CJbBHatnojVVAWffiN87SY2O3m2esGx?=
 =?us-ascii?q?mIwqmAY5bte2UYxC/dElQLkxgP/XaaMggzHjqurHjADDNwD17vY1nj8e9lqHyl?=
 =?us-ascii?q?SE84yAWKb05k17qx4RMVgf2cS/UO3rMLoishqjN0HEqj0NLSEdaPuw1hfKBEa9?=
 =?us-ascii?q?Mn/FhHzX7ZtxB6PpG4Mq9tnEAefBpts0PuzRp3DJ5AntYsrH4xyApyKKSY0E5O?=
 =?us-ascii?q?dj+C3JDwPKHXJXf2/By1d6HW3VTe2s6M+qgT8PQ4t0njvAaxG0o+8nVn1t5V02?=
 =?us-ascii?q?ec5pTKFgYSTYj9UkEt9xh+prHaZCY96pjQ1X1tN6m0rzDD18goBOsj1havYdNf?=
 =?us-ascii?q?PLmYGw/1Fs0QH9KuJ/Aym1i1chIEO/hf+7QwP8y4ePqJxq6qMPx7kzK7kGtI+o?=
 =?us-ascii?q?Z90kGL9ypiUePI25cFw/eF3gqITTv8jVGhstzploBAfz0dAm2/yS38Do5LeqJy?=
 =?us-ascii?q?ZZoLCXupI8CvxtR+moThVGJC+F+iB1MJwsmpeRWJYlz53A1Q01kXoHO9lSu5yT?=
 =?us-ascii?q?x0jy8mrq6F0CPSxOTicQINOnRXS2l6kVfsPY+0gsgAXEipcwcmjgGl6lv9x6RB?=
 =?us-ascii?q?oqRwMXPTQUZRcyfqNW5iVra/uaSYY85I7pMlqiFXUOW6YVCHRb/xuRoa0yX/H2?=
 =?us-ascii?q?RAwDA3bS2lupL8nxZikmKSMG5zrGbFecF33Rre5N3cSeRR3zYcXyl4lD/XC0O4?=
 =?us-ascii?q?P9mo+9WUipjCvvq/V2KnSp1cby3rwZmcuyu84G1gGQe/kOyrmt37DQg61jf219?=
 =?us-ascii?q?twWiXSrxb8YY7r276hMe19fUloB17868xkFYF4iYYwgJAQ2X4HhpSa53YHkGHz?=
 =?us-ascii?q?MclF1qL6dnYCWTkLw9vN6gj/xEJjNm6Jx57+VniFwspufd66bnkU2iI86cBHE6?=
 =?us-ascii?q?OU7L1CnStorVu0twPRYf5hnjgDzfsi8mIVg+YMuAA11CWSHqgSHVVEPSzrjxmI?=
 =?us-ascii?q?7MqxrKRNaGavbLi/zkx+nd+6AbGGowFcXmv5e5g4ES9x6MV/LEzD0Hnp5o74f9?=
 =?us-ascii?q?nQaMoZtgeInBfYk+hVNJUxm+IPhSpmOmLyp2cpyuAlghx1wZG1opKHJH5z86Kj?=
 =?us-ascii?q?DR5VLTn1Z8IV+jHwgqdShMeW34azHpp/HjUHRofnTfWtEDgKr/ToKx6OECEgqn?=
 =?us-ascii?q?ecAbffAQif6EJ8o3POCZ+rMWyXJGICzdVjXxSdIE1fgAYJXDQ1hJI5FwaqxND/?=
 =?us-ascii?q?f0d9/Dwe+ln4qh5UwOJyKxb/SnvfpBuvajosU5eQNh1W7gVf50vPNcye8/l+Hy?=
 =?us-ascii?q?VZ/p2nsQyMJXaXZwVODWEVREOEA0rvMaWp5dnF6+KYHPaxL+PSYbWSruxTT/WI?=
 =?us-ascii?q?yoiq0oR45DaALNmPMmNhD/0m2UpDQHZ5FN7CmzgUTywXliTNb9OUpRum+y13qN?=
 =?us-ascii?q?y//+rvWA71+YSPDL5SO811+x+qmaeDK/KQhCFhJDdY0ZMM2GbIyKUF014UkS1u?=
 =?us-ascii?q?bD6tEbIPtSPWSKLQm6lXDwMUai9pNctI6b480RdJOcLBltz10bt4hOYvC1hZTV?=
 =?us-ascii?q?zhht2pZcsSLmG9KlzHBUWLNLeHJTHRwMH3e6S8SbJOg+VOqh2woi2WE0viPjSF?=
 =?us-ascii?q?ijnoWAqjMeBKjCGHIhNevJuxfQpqCWjmVNjmcAG0MMdrjT0qxr05nmnFNXMHPj?=
 =?us-ascii?q?hmbUxMrqec7SdZgvhkH2xB73xlLfSLmiqD7unYLIoWvuVvAihui+1a53E6waNP?=
 =?us-ascii?q?7C5YXPx1hDfSrtl2rlG6k+mPzyBrXwZUpjlXhIKEo0NiNL7d9plBX3bE4R0M4X?=
 =?us-ascii?q?+RCxQMu9tqFNnvt7pMxdjIkaL5MC1C/M7M/csAG8jUL9qKMXo7PhrvHT7UDQ0F?=
 =?us-ascii?q?QiaqNGHfnUNdlv6S+2aRrpg7rJjshZUPRqVaVFwzCvMVFEBlEMYeL5dwWzN32Y?=
 =?us-ascii?q?Kc2eIB+3f2lh7dS8BTuNiTWvuMDLP1LzqWiLBCTxISxPXzKoFFcsWx301kd0k/?=
 =?us-ascii?q?n4nQHUfUdc5CrzcnbQIupkhJtn9kQSd7j0bkbB69pXweD/i5mjYohQZkJ+cg7j?=
 =?us-ascii?q?Hh5xEwPFWc4GN6mUopnP3hgDaMYHv/K7q2UYhKCi3y8U8rPdmzFw92dQiamU1i?=
 =?us-ascii?q?KSeBSbVMibdpaWFsjknbo5QZStBGSqgRKjoZ3/KKfL0Gl2QaiGPv4kVK/+vYDJ?=
 =?us-ascii?q?Z43kN+dJe2rG9b8wVpYcQ1OKndPuxCyV0G1fHGhTOhyu1kmFxWHE0K6m7HPXdQ?=
 =?us-ascii?q?4EE=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AzAAASRglch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUgYBAQsBgmkDfyeYIYINFIh+jjwUgRADTCwLCAGHVyI1CA0BAwEBAQEBAQI?=
 =?us-ascii?q?BEwEBAQgNCQgpIwyCNiQBgmEBAQEBAwECPQEBNgEBBQkBAQoHDgMJFg8DBgMCA?=
 =?us-ascii?q?QIBDzYGAQwGAgEBAYMcAYFpAxUEAQqkfYIRDoJ2AQEFgTABgRKCQA2CFAiMHxE?=
 =?us-ascii?q?GgX+DJX6CV4F3hg6JN4FvhFmQHBguBwIChwKHFINGgVxNhEiDAYdEiQ6BcYJ7g?=
 =?us-ascii?q?Q6LKiEBajBxcBWDJwkKgggJAxeDSoUUgzOCDT8BMQEBAYECAQGKOgEB?=
X-IPAS-Result: =?us-ascii?q?A0AzAAASRglch0O0hNFjHAEBAQQBAQcEAQGBUgYBAQsBgmk?=
 =?us-ascii?q?DfyeYIYINFIh+jjwUgRADTCwLCAGHVyI1CA0BAwEBAQEBAQIBEwEBAQgNCQgpI?=
 =?us-ascii?q?wyCNiQBgmEBAQEBAwECPQEBNgEBBQkBAQoHDgMJFg8DBgMCAQIBDzYGAQwGAgE?=
 =?us-ascii?q?BAYMcAYFpAxUEAQqkfYIRDoJ2AQEFgTABgRKCQA2CFAiMHxEGgX+DJX6CV4F3h?=
 =?us-ascii?q?g6JN4FvhFmQHBguBwIChwKHFINGgVxNhEiDAYdEiQ6BcYJ7gQ6LKiEBajBxcBW?=
 =?us-ascii?q?DJwkKgggJAxeDSoUUgzOCDT8BMQEBAYECAQGKOgEB?=
X-IronPort-AV: E=Sophos;i="5.56,322,1539673200"; 
   d="scan'208";a="54113510"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 06 Dec 2018 07:56:49 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726119AbeLFP4p (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 6 Dec 2018 10:56:45 -0500
Received: from mail.servus.at ([193.170.194.20]:51026 "EHLO mail.servus.at"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725849AbeLFP4p (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 6 Dec 2018 10:56:45 -0500
Received: from localhost (localhost [127.0.0.1])
        by mail.servus.at (Postfix) with ESMTP id 38AE73000692;
        Thu,  6 Dec 2018 16:56:44 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=oberhumer.com; h=
        content-transfer-encoding:content-type:content-type:in-reply-to
        :mime-version:user-agent:date:date:message-id:organization:from
        :from:references:subject:subject:received:received; s=main; t=
        1544111801; x=1545926202; bh=lusPzV2J21zrgkYgt8BeLqy09YeAfsM2KA+
        w6hcI8MM=; b=NgWIP6tyhvQ2XCxCx3AConzVoUpf7+X1f+wQySxaMurA5TT0/Bb
        hqZCQsqKgAykOaDmGTqXWjSlqTTcXWZXrS8uKpOjrd/Y3MYVwQKy10zoZgQjRhjl
        W6geX/aD1SA+4AF54CgnCdsTWWfll1I8WVL5iY3fRa4j5mdJalA6seuM=
X-Virus-Scanned: amavisd-new at servus.at
Received: from mail.servus.at ([127.0.0.1])
        by localhost (mail.servus.at [127.0.0.1]) (amavisd-new, port 10024)
        with ESMTP id Im8cKxdUIRkb; Thu,  6 Dec 2018 16:56:41 +0100 (CET)
Received: from [192.168.216.53] (unknown [81.10.228.128])
        (Authenticated sender: oh_markus)
        by mail.servus.at (Postfix) with ESMTPSA id 7623C3000694;
        Thu,  6 Dec 2018 16:56:38 +0100 (CET)
Subject: Re: [PATCH 2/8] lib/lzo: clean-up by introducing COPY16
To: Dave Rodgman <dave.rodgman@arm.com>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        "akpm@linux-foundation.org" <akpm@linux-foundation.org>
References: <20181130142600.13782-1-dave.rodgman@arm.com>
 <20181130142600.13782-3-dave.rodgman@arm.com>
Cc: "herbert@gondor.apana.org.au" <herbert@gondor.apana.org.au>,
        "davem@davemloft.net" <davem@davemloft.net>,
        Matt Sealey <Matt.Sealey@arm.com>,
        "nitingupta910@gmail.com" <nitingupta910@gmail.com>,
        "minchan@kernel.org" <minchan@kernel.org>,
        "sergey.senozhatsky.work@gmail.com" 
        <sergey.senozhatsky.work@gmail.com>,
        "sonnyrao@google.com" <sonnyrao@google.com>,
        "gregkh@linuxfoundation.org" <gregkh@linuxfoundation.org>,
        nd <nd@arm.com>, "sfr@canb.auug.org.au" <sfr@canb.auug.org.au>
From: "Markus F.X.J. Oberhumer" <markus@oberhumer.com>
Organization: oberhumer.com
Message-ID: <5C0946B6.5010409@oberhumer.com>
Date: Thu, 6 Dec 2018 16:56:38 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101
 Thunderbird/38.3.0
MIME-Version: 1.0
In-Reply-To: <20181130142600.13782-3-dave.rodgman@arm.com>
Content-Type: text/plain; charset=windows-1252
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

*NOT* acked by Markus Oberhumer, original author of the LZO data compression
library and author of the current Linux kernel LZO implementation.

Please see my email reply to the patch series header for more info.


On 2018-11-30 15:26, Dave Rodgman wrote:
> From: Matt Sealey <matt.sealey@arm.com>
> 
> Most compilers should be able to merge adjacent loads/stores of sizes
> which are less than but effect a multiple of a machine word size (in
> effect a memcpy() of a constant amount). However the semantics of the
> macro are that it just does the copy, the pointer increment is in the
> code, hence we see
> 
>     *a = *b
>     a += 8
>     b += 8
>     *a = *b
>     a += 8
>     b += 8
> 
> This introduces a dependency between the two groups of statements which
> seems to defeat said compiler optimizers and generate some very strange
> sequences of addition and subtraction of address offsets (i.e. it is
> overcomplicated).
> 
> Since COPY8 is only ever used to copy amounts of 16 bytes (in pairs),
> just define COPY16 as COPY8,COPY8. We leave the definition to preserve
> the need to do unaligned accesses to machine-sized words per the
> original code intent, we just don't use it in the code proper.
> 
> COPY16 then gives us code like:
> 
>     *a = *b
>     *(a+8) = *(b+8)
>     a += 16
>     b += 16
> 
> This seems to allow compilers to generate much better code by using
> base register writeback or simply positively incrementing offsets which
> seems to positively affect performance. It is, at least, fewer
> instructions to do the same job.
> 
> Link: http://lkml.kernel.org/r/20181127161913.23863-3-dave.rodgman@arm.com
> Signed-off-by: Matt Sealey <matt.sealey@arm.com>
> Signed-off-by: Dave Rodgman <dave.rodgman@arm.com>
> Cc: David S. Miller <davem@davemloft.net>
> Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
> Cc: Herbert Xu <herbert@gondor.apana.org.au>
> Cc: Markus F.X.J. Oberhumer <markus@oberhumer.com>
> Cc: Minchan Kim <minchan@kernel.org>
> Cc: Nitin Gupta <nitingupta910@gmail.com>
> Cc: Richard Purdie <rpurdie@openedhand.com>
> Cc: Sergey Senozhatsky <sergey.senozhatsky.work@gmail.com>
> Cc: Sonny Rao <sonnyrao@google.com>
> Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
> Signed-off-by: Stephen Rothwell <sfr@canb.auug.org.au>
> ---
>  lib/lzo/lzo1x_compress.c        |  9 +++------
>  lib/lzo/lzo1x_decompress_safe.c | 18 ++++++------------
>  lib/lzo/lzodefs.h               |  3 +++
>  3 files changed, 12 insertions(+), 18 deletions(-)
> 
> diff --git a/lib/lzo/lzo1x_compress.c b/lib/lzo/lzo1x_compress.c
> index 236eb21167b5..82fb5571ce5e 100644
> --- a/lib/lzo/lzo1x_compress.c
> +++ b/lib/lzo/lzo1x_compress.c
> @@ -60,8 +60,7 @@ lzo1x_1_do_compress(const unsigned char *in, size_t in_len,
>  				op += t;
>  			} else if (t <= 16) {
>  				*op++ = (t - 3);
> -				COPY8(op, ii);
> -				COPY8(op + 8, ii + 8);
> +				COPY16(op, ii);
>  				op += t;
>  			} else {
>  				if (t <= 18) {
> @@ -76,8 +75,7 @@ lzo1x_1_do_compress(const unsigned char *in, size_t in_len,
>  					*op++ = tt;
>  				}
>  				do {
> -					COPY8(op, ii);
> -					COPY8(op + 8, ii + 8);
> +					COPY16(op, ii);
>  					op += 16;
>  					ii += 16;
>  					t -= 16;
> @@ -255,8 +253,7 @@ int lzo1x_1_compress(const unsigned char *in, size_t in_len,
>  			*op++ = tt;
>  		}
>  		if (t >= 16) do {
> -			COPY8(op, ii);
> -			COPY8(op + 8, ii + 8);
> +			COPY16(op, ii);
>  			op += 16;
>  			ii += 16;
>  			t -= 16;
> diff --git a/lib/lzo/lzo1x_decompress_safe.c b/lib/lzo/lzo1x_decompress_safe.c
> index a1c387f6afba..aa95d3066b7d 100644
> --- a/lib/lzo/lzo1x_decompress_safe.c
> +++ b/lib/lzo/lzo1x_decompress_safe.c
> @@ -86,12 +86,9 @@ int lzo1x_decompress_safe(const unsigned char *in, size_t in_len,
>  					const unsigned char *ie = ip + t;
>  					unsigned char *oe = op + t;
>  					do {
> -						COPY8(op, ip);
> -						op += 8;
> -						ip += 8;
> -						COPY8(op, ip);
> -						op += 8;
> -						ip += 8;
> +						COPY16(op, ip);
> +						op += 16;
> +						ip += 16;
>  					} while (ip < ie);
>  					ip = ie;
>  					op = oe;
> @@ -187,12 +184,9 @@ int lzo1x_decompress_safe(const unsigned char *in, size_t in_len,
>  			unsigned char *oe = op + t;
>  			if (likely(HAVE_OP(t + 15))) {
>  				do {
> -					COPY8(op, m_pos);
> -					op += 8;
> -					m_pos += 8;
> -					COPY8(op, m_pos);
> -					op += 8;
> -					m_pos += 8;
> +					COPY16(op, m_pos);
> +					op += 16;
> +					m_pos += 16;
>  				} while (op < oe);
>  				op = oe;
>  				if (HAVE_IP(6)) {
> diff --git a/lib/lzo/lzodefs.h b/lib/lzo/lzodefs.h
> index 497f9c9f03a8..e1b3cf6459a9 100644
> --- a/lib/lzo/lzodefs.h
> +++ b/lib/lzo/lzodefs.h
> @@ -23,6 +23,9 @@
>  		COPY4(dst, src); COPY4((dst) + 4, (src) + 4)
>  #endif
>  
> +#define COPY16(dst, src) \
> +	do { COPY8(dst, src); COPY8((dst) + 8, (src) + 8); } while (0)
> +
>  #if defined(__BIG_ENDIAN) && defined(__LITTLE_ENDIAN)
>  #error "conflicting endian definitions"
>  #elif defined(CONFIG_X86_64)
> 


-- 
Markus Oberhumer, <markus@oberhumer.com>, http://www.oberhumer.com/
