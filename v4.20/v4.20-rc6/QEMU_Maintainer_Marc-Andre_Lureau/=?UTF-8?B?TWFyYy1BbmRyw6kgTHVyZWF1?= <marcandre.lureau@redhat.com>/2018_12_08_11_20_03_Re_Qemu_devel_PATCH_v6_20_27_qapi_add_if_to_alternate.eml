Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 09 Dec 2018 18:55:40 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 2AC5C58052F
	for <like.xu@linux.intel.com>; Sat,  8 Dec 2018 03:37:48 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga001-1.jf.intel.com with ESMTP; 08 Dec 2018 03:37:48 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3ADiTfahBARXLzxMQ6JvbIUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP37psiwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95eWCxPAIyy?=
 =?us-ascii?q?b4UBAekfM+lEoIfzukMOoBm8CwSjGe/ixCNEiWHt3aAhz+QhCBvL0BA8E94Ssn?=
 =?us-ascii?q?nZqsj+OqcIUeCyyanF1TLNYOlM2Tjh8YTFbhYhruyWXbVqbMHfz1QvFxnbgVqK?=
 =?us-ascii?q?tIzuIjSY1uEXvGiB8+VvT+SvhHM9qw5vuDSvwtosipPXiY0P11DJ7j95z5goKt?=
 =?us-ascii?q?24UkF7fcSoH4dXtyGfLoZ7RN4pTWJwuCsi1LEKpZ22cDIXxJg6xBPTceKLfoaI?=
 =?us-ascii?q?7x75SeqcIy90iGx5dL+7nRq/8kitxvfhWsS1zFpGtDdJn93Nu30Lyhfd8NKISu?=
 =?us-ascii?q?Fn8UekwTuP1x7c6uVDIU0skarbKoUhwqIrlpYJvkTDGDL2lF/xjK+MeUUo4umo?=
 =?us-ascii?q?6+L5bbX6vpKQKZN4hwLkPqgzh8CyAv40PhYAUmWb4+iwyb/u8VX8QLpQj/02lq?=
 =?us-ascii?q?fZsIrdJcQevqO5GhFa0oM+6xqmEjipzsoYkmcDLF5cYx2HiJXpO1fSL//mFvez?=
 =?us-ascii?q?hFCskDZox//YJLHgDYjNI2DHkLfge7Z99kFdxBAyzdBZ+5JbFLUBLOjvVU/2sd?=
 =?us-ascii?q?zVFRk5Mwuyw+boDtV9y5kSWWWVAq+WKK/Sq0OH5vozI+mQY48YoDL9K/km5/Hw?=
 =?us-ascii?q?l3M4lkIdcLKt3ZsWbnC4A/tnL1+YYXrqntcOD2MKshAiQ+ztjV3RGQNVfGu4Cq?=
 =?us-ascii?q?Ig+ikgWsXhCYbYWpvrhruH0yGmWJpMaSdDA1GIFH7uMIKcR/YLbjnVO8Jkj3kI?=
 =?us-ascii?q?WKasT9wc0wqzvlr/wrtjMu2G4yAdqNfv2cZ446jJmAgv+CdoJ8Ka1W6LUidzhG?=
 =?us-ascii?q?xfXCI83q10vRlgzEye27Nzmf1SGI9v4KYDex0/P4TB1PB3EZS6fwvbfcqSAh7y?=
 =?us-ascii?q?S8+jCyssZsg8z98HfwB2HND03T7Z2C//JrYPnPmiApAuc+r4wmL8Lts1n3PPzq?=
 =?us-ascii?q?IoiVU8T41LKHerj7NX7QXfB4fV1U6ekvD5JuwnwCfR+TLbniK1t0ZCXVs1CP2d?=
 =?us-ascii?q?UA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ATAACorAtcmBHrdtBkHgEGBwaBUggLA?=
 =?us-ascii?q?YEwgTmBFhODeoh4izGCDYd3ghGNSYFzFBgDEYRAgx0iNQgNAQMBAQEBAQECARM?=
 =?us-ascii?q?BAQEBAQgLCwYbDiMMgjYFAgMaAQaCWwEBAQECAQECIAQfCikDAwECBgEBCgsNA?=
 =?us-ascii?q?gIiBAICAwEeEgEFARwGEwWDHAGBeQgBBJsqPIsNfDOJI4EOEnmLFoIWgRGDEoU?=
 =?us-ascii?q?BgwSCVwKPPXqQPgcChwiKRxiCKY8UmSEPIYEnAoIKMxojUDEGgjUJi2SEczwxg?=
 =?us-ascii?q?QeJUYF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0ATAACorAtcmBHrdtBkHgEGBwaBUggLAYEwgTmBFhODeoh?=
 =?us-ascii?q?4izGCDYd3ghGNSYFzFBgDEYRAgx0iNQgNAQMBAQEBAQECARMBAQEBAQgLCwYbD?=
 =?us-ascii?q?iMMgjYFAgMaAQaCWwEBAQECAQECIAQfCikDAwECBgEBCgsNAgIiBAICAwEeEgE?=
 =?us-ascii?q?FARwGEwWDHAGBeQgBBJsqPIsNfDOJI4EOEnmLFoIWgRGDEoUBgwSCVwKPPXqQP?=
 =?us-ascii?q?gcChwiKRxiCKY8UmSEPIYEnAoIKMxojUDEGgjUJi2SEczwxgQeJUYF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,330,1539673200"; 
   d="scan'208";a="43265551"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 08 Dec 2018 03:37:47 -0800
Received: from localhost ([::1]:50448 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gVava-0007Ns-F4
	for like.xu@linux.intel.com; Sat, 08 Dec 2018 06:37:46 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:60692)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <mlureau@redhat.com>) id 1gVaei-0000H3-SF
	for qemu-devel@nongnu.org; Sat, 08 Dec 2018 06:20:24 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <mlureau@redhat.com>) id 1gVaed-0005Ls-AJ
	for qemu-devel@nongnu.org; Sat, 08 Dec 2018 06:20:20 -0500
Received: from mail-qt1-f196.google.com ([209.85.160.196]:42483)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <mlureau@redhat.com>) id 1gVaed-0005Li-4y
	for qemu-devel@nongnu.org; Sat, 08 Dec 2018 06:20:15 -0500
Received: by mail-qt1-f196.google.com with SMTP id d19so7418059qtq.9
	for <qemu-devel@nongnu.org>; Sat, 08 Dec 2018 03:20:15 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:mime-version:references:in-reply-to:from:date
	:message-id:subject:to:cc:content-transfer-encoding;
	bh=AI7AtLW6BWLbUSdq+Qid5cC/Q3FTck8jzJUBUap/KBw=;
	b=QJYP+NZzw3L5x+Sao5Unhds+UMO6q1r9oDC7Rk5ZyTdXZNtQ3qbP8g2OPkPWhLDPXl
	aAwLWWu4/mvzN4xdyzkZ7UchmSxIn2kPWmtLcp3PBVfy1yXyR12Qr4dufUl/JsHa7U62
	2HWnYQiWYBn0qaGQuJ/kk6MQ0gvDhHlKhj6MDCveycw712s3T3l4Jl+n9nDSr8bPHvu6
	hHbSA+HDqc34e5mewH25l5EHWqMzPBb2iwo0079ncg/9PVFDdVNDQH539W51KwInuhI0
	scnk9MiCTGKsFAusGD/5YWWswZ5cPiTBBeKHkwYBOeabttYj2BHaEEG2nUmjEhZc8cIc
	oJBg==
X-Gm-Message-State: AA+aEWbj24ipRUXHN2QYgO+cD8QNoG+hkbHTgzBK1w2LzXNNUw4Wah/a
	+4wNuXege9yMG4s5TIoOMRWQURN3cuuqTx9w0KAIOQ==
X-Google-Smtp-Source: AFSGD/UeOEpEAG46L8T+FDoLfAQYxV2B3HrMgClp/uIQSM0ZsFrrbPmkINkEu2S3VEl8xfZN9G0oQDoh07OqGnOn1EI=
X-Received: by 2002:aed:2603:: with SMTP id z3mr5325069qtc.120.1544268014693; 
	Sat, 08 Dec 2018 03:20:14 -0800 (PST)
MIME-Version: 1.0
References: <20180706105753.26700-1-marcandre.lureau@redhat.com>
	<20180706105753.26700-21-marcandre.lureau@redhat.com>
	<87woom8v6i.fsf@dusky.pond.sub.org>
In-Reply-To: <87woom8v6i.fsf@dusky.pond.sub.org>
From: =?UTF-8?B?TWFyYy1BbmRyw6kgTHVyZWF1?= <marcandre.lureau@redhat.com>
Date: Sat, 8 Dec 2018 15:20:03 +0400
Message-ID: <CAMxuvazmSM7ir=-BW2=828T2LNJdw7QXCva+oOifx6QgxGnqhQ@mail.gmail.com>
To: "Armbruster, Markus" <armbru@redhat.com>
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.85.160.196
Subject: Re: [Qemu-devel] [PATCH v6 20/27] qapi: add 'if' to alternate
 members
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-devel <qemu-devel@nongnu.org>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Hi
On Thu, Dec 6, 2018 at 8:41 PM Markus Armbruster <armbru@redhat.com> wrote:
>
> Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com> writes:
>
> > Add 'if' key to alternate members:
> >
> > { 'alternate': 'TestIfAlternate', 'data':
> >   { 'alt': { 'type': 'TestStruct', 'if': 'COND' } } }
> >
> > Generated code is not changed by this patch but with "qapi: add #if
> > conditions to generated code".
> >
> > Signed-off-by: Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com>
> > ---
> >  scripts/qapi/common.py                  | 10 +++++-----
> >  tests/qapi-schema/qapi-schema-test.json |  6 +++++-
> >  tests/qapi-schema/qapi-schema-test.out  |  9 ++++++++-
> >  3 files changed, 18 insertions(+), 7 deletions(-)
> >
> > diff --git a/scripts/qapi/common.py b/scripts/qapi/common.py
> > index e1bd9a22ba..b3b64a60bf 100644
> > --- a/scripts/qapi/common.py
> > +++ b/scripts/qapi/common.py
> > @@ -843,7 +843,7 @@ def check_alternate(expr, info):
> >      for (key, value) in members.items():
> >          check_name(info, "Member of alternate '%s'" % name, key)
> >          source =3D "member '%s' of alternate '%s'" % (key, name)
> > -        check_known_keys(info, source, value, ['type'], [])
> > +        check_known_keys(info, source, value, ['type'], ['if'])
> >          typ =3D value['type']
> >
> >          # Ensure alternates have no type conflicts.
> > @@ -1774,8 +1774,8 @@ class QAPISchema(object):
> >                                                self._make_members(data,=
 info),
> >                                                None))
> >
> > -    def _make_variant(self, case, typ):
> > -        return QAPISchemaObjectTypeVariant(case, typ)
> > +    def _make_variant(self, case, typ, ifcond):
> > +        return QAPISchemaObjectTypeVariant(case, typ, ifcond)
> >
> >      def _make_simple_variant(self, case, typ, ifcond, info):
> >          if isinstance(typ, list):
> > @@ -1798,7 +1798,7 @@ class QAPISchema(object):
> >                  name, info, doc, ifcond,
> >                  'base', self._make_members(base, info))
> >          if tag_name:
> > -            variants =3D [self._make_variant(key, value['type'])
> > +            variants =3D [self._make_variant(key, value['type'], value=
.get('if'))
> >                          for (key, value) in data.items()]
> >              members =3D []
> >          else:
> > @@ -1819,7 +1819,7 @@ class QAPISchema(object):
> >          name =3D expr['alternate']
> >          data =3D expr['data']
> >          ifcond =3D expr.get('if')
> > -        variants =3D [self._make_variant(key, value['type'])
> > +        variants =3D [self._make_variant(key, value['type'], value.get=
('if'))
> >                      for (key, value) in data.items()]
> >          tag_member =3D QAPISchemaObjectTypeMember('type', 'QType', Fal=
se)
> >          self._def_entity(
> > diff --git a/tests/qapi-schema/qapi-schema-test.json b/tests/qapi-schem=
a/qapi-schema-test.json
> > index 6d3c6c0b53..df3edf9d89 100644
> > --- a/tests/qapi-schema/qapi-schema-test.json
> > +++ b/tests/qapi-schema/qapi-schema-test.json
> > @@ -216,9 +216,13 @@
> >  { 'command': 'TestIfUnionCmd', 'data': { 'union_cmd_arg': 'TestIfUnion=
' },
> >    'if': 'defined(TEST_IF_UNION)' }
> >
> > -{ 'alternate': 'TestIfAlternate', 'data': { 'foo': 'int', 'bar': 'Test=
Struct' },
> > +{ 'alternate': 'TestIfAlternate', 'data':
> > +  { 'foo': 'int', 'alt_bar': { 'type': 'TestStruct', 'if': 'defined(TE=
ST_IF_ALT_BAR)'} },
>
> Let's break the long line betwen the members.

ok

>
> Why rename member 'bar' to 'alt_bar'?

no reason I remember, dropped

>
> >    'if': 'defined(TEST_IF_ALT) && defined(TEST_IF_STRUCT)' }
> >
> > +{ 'command': 'TestIfAlternateCmd', 'data': { 'alt_cmd_arg': 'TestIfAlt=
ernate' },
>
> Another long line.  And I'm feeling dense again: why does this change
> belong to this patch?

No reason I remember, let's split it

>
> > +  'if': 'defined(TEST_IF_ALT)' }
> > +
> >  { 'command': 'TestIfCmd', 'data':
> >    { 'foo': 'TestIfStruct',
> >      'bar': { 'type': 'TestIfEnum', 'if': 'defined(TEST_IF_CMD_BAR)' } =
},
> > diff --git a/tests/qapi-schema/qapi-schema-test.out b/tests/qapi-schema=
/qapi-schema-test.out
> > index ac1069cf1f..cdbd5b87cc 100644
> > --- a/tests/qapi-schema/qapi-schema-test.out
> > +++ b/tests/qapi-schema/qapi-schema-test.out
> > @@ -297,8 +297,15 @@ command TestIfUnionCmd q_obj_TestIfUnionCmd-arg ->=
 None
> >  alternate TestIfAlternate
> >      tag type
> >      case foo: int
> > -    case bar: TestStruct
> > +    case alt_bar: TestStruct
> > +        if ['defined(TEST_IF_ALT_BAR)']
> >      if ['defined(TEST_IF_ALT) && defined(TEST_IF_STRUCT)']
> > +object q_obj_TestIfAlternateCmd-arg
> > +    member alt_cmd_arg: TestIfAlternate optional=3DFalse
> > +    if ['defined(TEST_IF_ALT)']
> > +command TestIfAlternateCmd q_obj_TestIfAlternateCmd-arg -> None
> > +   gen=3DTrue success_response=3DTrue boxed=3DFalse oob=3DFalse precon=
fig=3DFalse
> > +    if ['defined(TEST_IF_ALT)']
> >  object q_obj_TestIfCmd-arg
> >      member foo: TestIfStruct optional=3DFalse
> >      member bar: TestIfEnum optional=3DFalse

