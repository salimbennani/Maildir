Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 08:54:22 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id CA385580375;
	Thu,  6 Dec 2018 13:51:25 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga004-1.jf.intel.com with ESMTP; 06 Dec 2018 13:51:25 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AuBIdbREDd9kJhRIKaOHvr51GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75osm4bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJWSJPAp2y?=
 =?us-ascii?q?YZYMAeoPMulXs5TyqVQMohSwHgmsHOHixyRUhnL1x6A2z/gtHBvb0AEmAtkAsG?=
 =?us-ascii?q?7UrNLwNKoKVe660rPIzTLGb/xIxDzz6YzIchE6ofGXQ717bM3cyUsgFwPBj1WQ?=
 =?us-ascii?q?spflMC2O2+QXrWeU8upgWvizi2I9tw5xpT2vy94qh4LUiIwVzVXE+j94wIYzPd?=
 =?us-ascii?q?C4R097YcKkEJtNrC6WLZd5QsQnQ21wpCo216cKuZmhfCgFzpks2h3Ra+SffoSW?=
 =?us-ascii?q?/h7uUPydLSp2iX57Yr6zmhW//VS6xuD9VMS4yEhGojZBn9XWq3wA2QLf5tKaRv?=
 =?us-ascii?q?Z+8EqtwyiD2gPV5+pZO047j7DbJIQkwrMolpocr0DDHijulUXog6+ZaF8k9vKr?=
 =?us-ascii?q?6+v5eLXmoIGTN4tuhgH5KKQuldSzAeU+MgcQQ2iW4fqw2KHn8EHjXblHgOM6nr?=
 =?us-ascii?q?PEvJ3ZOcgXvK+0Dg1N3oYm8Rm/DjOm0NoCnXkAKVJIYBaHj4nvO1HTL/H0FPS/?=
 =?us-ascii?q?jEq2kDdt2f/GOqTtApLDL3jFjrjhZ61w61BTyAUt19BT/ZFUBa8bIPL1REDxsM?=
 =?us-ascii?q?bUDhgjMwy72+rnEsly1psCWWKTBa+UKKfSsV6L5u0xOeWNa5IVtS35K/gk4f7u?=
 =?us-ascii?q?kHA4lUUcfamvwZsYdnS4Eu56LEWeZHrmms0BHnsSvgoiUOzqj0WPUT5JaHazQ6?=
 =?us-ascii?q?Iz/DY7BJimDYfeXI+thrOB0Ty/Hp1XYGBGF1+NHW3pd4WCR/cDdiaSLtV9nTwD?=
 =?us-ascii?q?ULirU5Uh2g22tA/m17pnKfLZ+i8ftZ39ztR15OrTlRc09TxzFMmd12CNT2dpnm?=
 =?us-ascii?q?IHXTM23aZ/oVBjxVeHy6R3n/tYFdlL7fNTTgg6LYLcz/B9C93qQA3BZdeJSFGl?=
 =?us-ascii?q?Qtm8GzE+VNAxzsQKY0Z8HdWikx/C0zCrA78Ti7yEGpg0/rjA0Hj2IsZ302zG27?=
 =?us-ascii?q?U5j1k6XstPMnWrhq1l+AjVHYLJl0SZmLysdaQTxyPN8GaDzWyTvEBXSgJwUKPF?=
 =?us-ascii?q?XWwBaUvSt9j2+kTCT7q2A7Q9LgRB0dKCKrdNatDxkFpJXunjN8rEb2KxgWiwAw?=
 =?us-ascii?q?2Iya2KbIbtf2Ud3yDdCEwfngAX/HaGMxU+Byi7r2LfCjxuCUzgY0f2/eZir3O7?=
 =?us-ascii?q?S1c+zxuWYE15y7q15hkViOSBRPwJwLILpj0tqzVuE1a7xNLZFdyAqhFlfKVdZ9?=
 =?us-ascii?q?M9/VhG2XjYtwx7IpyvMaRiikQCfARwukPkzw93BZlYkcg2sHMqyxJ/Kb6Z0FNE?=
 =?us-ascii?q?cDOYwZDwO73NJmnu5hyvbLTW2lXf0NaQ9acC8/A4q1TlvAG0GUsu6XRn099J03?=
 =?us-ascii?q?SC4pXGFhYdUZX0Ukwv7Rh1u6naYjUh54PTzXBjK620vSHN2t03BOop0A2vf8pC?=
 =?us-ascii?q?P6yeEg/yEMoaB9a1JewumlipaA8EPe9I+K41OcOma+WJ2KqxMOl8mzKmiHxN4J?=
 =?us-ascii?q?ph3UKU6yp8VunI0o4FwvGFxAeISy3wjVahss/tn4BEaiofHm6+ySjiGY5Qabd+?=
 =?us-ascii?q?fYcNCWeyPcK3ws9yiILqW35d7FSjHU8J2Ne1eRqOaFzwxRdQ1UULrnO9gyu30j?=
 =?us-ascii?q?t0nysvrqWBxizOwv3uewYdNW5PWWZtk03sIY+yj90BWEiobg4plAaq5Ergxqhb?=
 =?us-ascii?q?orh/IHfXQUtSYyf2KGRiWLOqtrWee85P9I8osSJPXeW8YFCWUL78rwEB0yP+GW?=
 =?us-ascii?q?tT3zQ7dzCsupXkkB12kmOdLHBvrHXHfcF83wvQ5NvZRfRJxDoJWDF4iSXLBli7?=
 =?us-ascii?q?J9Sp/8+bl43AsuC9UGKtTIZTfjPozYODtSu743NlARukkvC3m93nFxU60CDh29?=
 =?us-ascii?q?lrUyXIsAjzYo3x26umNuJne1FiBEXg5MpiBoF+jowwiYkQ2HcAgZWZ53gHkWb1?=
 =?us-ascii?q?MdhA3aL+bXwNRSMEwtLP4Qjl3lFjIWyNx47jSnqdxc5hbcGgYmwKwiI989xKCK?=
 =?us-ascii?q?CM4bxHhyR1o0C0rQLMYfdnmDcdxuAj6Hobg+EPpQoswT+RArEUHUlEIyPskw6E?=
 =?us-ascii?q?4My5rKVSfGyva6S/1FJindC9C7GPugRcWHf6epg4ByNx4NtwMEnQ0HLt8IHrY8?=
 =?us-ascii?q?ffbcgcthCPlxfAju5VKI8+l/YQhCpnP379smMhy+IhkRNu2pS6tpCdK2px5KK5?=
 =?us-ascii?q?HgJYNjrtasMP/THtiLxSn8eM0ICpA5VhAS4LXJrzQPKsETISs+nnNgmUHD09rH?=
 =?us-ascii?q?ebBaTQHQuF5Eh6qHLPFoihN2uLK3kB0dViWB6dKVREjw8OWzU6moM5GhquxMz8?=
 =?us-ascii?q?a0p54jER5ljlqhpD0O5oNh//UnvBqwescDs7VJ+fLB9O5AFY+0jVKdCe7v50Hy?=
 =?us-ascii?q?xA/J2utgmNJXKAZwhSEWEFQE+EB03gPrmz49nP6fOYC/G6L/vPZ7WOtONfW+2J?=
 =?us-ascii?q?xZKpzotp4TKMOt+TMXllCv0xwlBDUmxhG8TFhzUPTDQaliLKb86GvRe85zd4rs?=
 =?us-ascii?q?al/PTwXwLv44SPBqBWMdVu/RC2nKiCO/SRhCZ/NTZXyJcMyWXUx7gY2V4Ykztu?=
 =?us-ascii?q?eCW1EbQcqS7NS7rdmq9JAB4aaCNzN8pI47g/3glXPs7bhc361qRljv4uEFpFUV?=
 =?us-ascii?q?3hmse0Zc0FOW29NVXHBFqVO7SCPzHE38b3YaakQ71KkOpUrwGwuSqcE0L7JDuD?=
 =?us-ascii?q?iiLmVwqxPuBMli2bOB1etZq5chZsD2jjUd3nZge6MN9xkT0537k0imnWOm4bND?=
 =?us-ascii?q?h2a1lNoaGI7SNEnvV/HHRM7mZkLemBgSqW8/PUJYoWsfR1BCR5jOZa4HU8y7tI?=
 =?us-ascii?q?4yBIXv11mC3OrtFwp1GqiPWAyj1iUBBWsDZEmJqLvVl+OaXe7pRBWWzL/BQI7W?=
 =?us-ascii?q?WRDRQFv9pkCt31tKBWxdjCj6bzKDZE89LJ8soQHcnUKMSbMHU/NRrlAiLbDAwA?=
 =?us-ascii?q?TW3jCWaKrkpRivyNvliStIQ9rNC4kZkWT5dfVVooBrYUDVljENUeIZBxGDQ+nu?=
 =?us-ascii?q?jfxM0C+Hu6oFHNSd5G9orAXPWOSaHrKy6xjL9Yah9OyrT9e9c9LIr+jm5vcF5/?=
 =?us-ascii?q?kczlH0vLRt0F9i9uag4vu0hl6nVyTmQvnUnib1X+szcoCfeok0tu2UNFauM3+W?=
 =?us-ascii?q?Kpug9vKw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAAADmQlch0O0hNFjGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBgVqBD4ECJ4wTX4swgg0UlzqBcxQYDwQBhEC?=
 =?us-ascii?q?DFyI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmIBAgMBAgkbCwFGBgkBA?=
 =?us-ascii?q?QoOCgklAwwFFBUgAReCUUsBggEFCqc4M4QtAYV8jB8XgUA/gRGDEoMeAgOBSkC?=
 =?us-ascii?q?DCYImAoskhCRrkCwJhwSGJIQTCxiBXE2ESIJxh1QsiGKEbIsSgUaCDTMaCBsVg?=
 =?us-ascii?q?ycJgh4XEoM4hCNxhV0hAQExgQUBARyHUoJMAQE?=
X-IPAS-Result: =?us-ascii?q?A0ABAAADmQlch0O0hNFjGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBgVqBD4ECJ4wTX4swgg0UlzqBcxQYDwQBhECDFyI0CQ0BAwEBA?=
 =?us-ascii?q?QEBAQIBEwEBAQgNCQgpIwyCNiQBgmIBAgMBAgkbCwFGBgkBAQoOCgklAwwFFBU?=
 =?us-ascii?q?gAReCUUsBggEFCqc4M4QtAYV8jB8XgUA/gRGDEoMeAgOBSkCDCYImAoskhCRrk?=
 =?us-ascii?q?CwJhwSGJIQTCxiBXE2ESIJxh1QsiGKEbIsSgUaCDTMaCBsVgycJgh4XEoM4hCN?=
 =?us-ascii?q?xhV0hAQExgQUBARyHUoJMAQE?=
X-IronPort-AV: E=Sophos;i="5.56,323,1539673200"; 
   d="scan'208";a="56443432"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 06 Dec 2018 13:51:24 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1725986AbeLFVvV (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 6 Dec 2018 16:51:21 -0500
Received: from mx1.redhat.com ([209.132.183.28]:52396 "EHLO mx1.redhat.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725935AbeLFVvV (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 6 Dec 2018 16:51:21 -0500
Received: from smtp.corp.redhat.com (int-mx03.intmail.prod.int.phx2.redhat.com [10.5.11.13])
        (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
        (No client certificate requested)
        by mx1.redhat.com (Postfix) with ESMTPS id 45A80307EA9F;
        Thu,  6 Dec 2018 21:51:20 +0000 (UTC)
Received: from redhat.com (ovpn-122-74.rdu2.redhat.com [10.10.122.74])
        by smtp.corp.redhat.com (Postfix) with ESMTPS id C8781608C4;
        Thu,  6 Dec 2018 21:51:17 +0000 (UTC)
Date: Thu, 6 Dec 2018 16:51:16 -0500
From: Jerome Glisse <jglisse@redhat.com>
To: Andrew Morton <akpm@linux-foundation.org>,
        kbuild test robot <lkp@intel.com>
Cc: kbuild-all@01.org, linux-mm@kvack.org,
        Andrew Morton <akpm@linux-foundation.org>,
        linux-kernel@vger.kernel.org,
        Matthew Wilcox <mawilcox@microsoft.com>,
        Ross Zwisler <zwisler@kernel.org>, Jan Kara <jack@suse.cz>,
        Dan Williams <dan.j.williams@intel.com>,
        Paolo Bonzini <pbonzini@redhat.com>,
        Radim =?utf-8?B?S3LEjW3DocWZ?= <rkrcmar@redhat.com>,
        Michal Hocko <mhocko@kernel.org>,
        Christian Koenig <christian.koenig@amd.com>,
        Felix Kuehling <felix.kuehling@amd.com>,
        Ralph Campbell <rcampbell@nvidia.com>,
        John Hubbard <jhubbard@nvidia.com>, kvm@vger.kernel.org,
        linux-rdma@vger.kernel.org, linux-fsdevel@vger.kernel.org,
        dri-devel@lists.freedesktop.org
Subject: Re: [PATCH 3/3] mm/mmu_notifier: contextual information for event
 triggering invalidation
Message-ID: <20181206215115.GF3544@redhat.com>
References: <20181203201817.10759-4-jglisse@redhat.com>
 <201812070514.QdWdUWIj%fengguang.wu@intel.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <201812070514.QdWdUWIj%fengguang.wu@intel.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.13
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16 (mx1.redhat.com [10.5.110.44]); Thu, 06 Dec 2018 21:51:20 +0000 (UTC)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Should be all fixed in v2 i built with and without mmu notifier and
did not had any issue in v2.

On Fri, Dec 07, 2018 at 05:19:21AM +0800, kbuild test robot wrote:
> Hi Jérôme,
> 
> I love your patch! Yet something to improve:
> 
> [auto build test ERROR on linus/master]
> [also build test ERROR on v4.20-rc5]
> [cannot apply to next-20181206]
> [if your patch is applied to the wrong git tree, please drop us a note to help improve the system]
> 
> url:    https://github.com/0day-ci/linux/commits/jglisse-redhat-com/mmu-notifier-contextual-informations/20181207-031930
> config: x86_64-randconfig-x017-201848 (attached as .config)
> compiler: gcc-7 (Debian 7.3.0-1) 7.3.0
> reproduce:
>         # save the attached .config to linux build tree
>         make ARCH=x86_64 
> 
> All errors (new ones prefixed by >>):
> 
>    fs///proc/task_mmu.c: In function 'clear_refs_write':
>    fs///proc/task_mmu.c:1099:29: error: storage size of 'range' isn't known
>       struct mmu_notifier_range range;
>                                 ^~~~~
> >> fs///proc/task_mmu.c:1147:18: error: 'MMU_NOTIFY_SOFT_DIRTY' undeclared (first use in this function); did you mean 'CLEAR_REFS_SOFT_DIRTY'?
>        range.event = MMU_NOTIFY_SOFT_DIRTY;
>                      ^~~~~~~~~~~~~~~~~~~~~
>                      CLEAR_REFS_SOFT_DIRTY
>    fs///proc/task_mmu.c:1147:18: note: each undeclared identifier is reported only once for each function it appears in
>    fs///proc/task_mmu.c:1099:29: warning: unused variable 'range' [-Wunused-variable]
>       struct mmu_notifier_range range;
>                                 ^~~~~
> 
> vim +1147 fs///proc/task_mmu.c
> 
>   1069	
>   1070	static ssize_t clear_refs_write(struct file *file, const char __user *buf,
>   1071					size_t count, loff_t *ppos)
>   1072	{
>   1073		struct task_struct *task;
>   1074		char buffer[PROC_NUMBUF];
>   1075		struct mm_struct *mm;
>   1076		struct vm_area_struct *vma;
>   1077		enum clear_refs_types type;
>   1078		struct mmu_gather tlb;
>   1079		int itype;
>   1080		int rv;
>   1081	
>   1082		memset(buffer, 0, sizeof(buffer));
>   1083		if (count > sizeof(buffer) - 1)
>   1084			count = sizeof(buffer) - 1;
>   1085		if (copy_from_user(buffer, buf, count))
>   1086			return -EFAULT;
>   1087		rv = kstrtoint(strstrip(buffer), 10, &itype);
>   1088		if (rv < 0)
>   1089			return rv;
>   1090		type = (enum clear_refs_types)itype;
>   1091		if (type < CLEAR_REFS_ALL || type >= CLEAR_REFS_LAST)
>   1092			return -EINVAL;
>   1093	
>   1094		task = get_proc_task(file_inode(file));
>   1095		if (!task)
>   1096			return -ESRCH;
>   1097		mm = get_task_mm(task);
>   1098		if (mm) {
> > 1099			struct mmu_notifier_range range;
>   1100			struct clear_refs_private cp = {
>   1101				.type = type,
>   1102			};
>   1103			struct mm_walk clear_refs_walk = {
>   1104				.pmd_entry = clear_refs_pte_range,
>   1105				.test_walk = clear_refs_test_walk,
>   1106				.mm = mm,
>   1107				.private = &cp,
>   1108			};
>   1109	
>   1110			if (type == CLEAR_REFS_MM_HIWATER_RSS) {
>   1111				if (down_write_killable(&mm->mmap_sem)) {
>   1112					count = -EINTR;
>   1113					goto out_mm;
>   1114				}
>   1115	
>   1116				/*
>   1117				 * Writing 5 to /proc/pid/clear_refs resets the peak
>   1118				 * resident set size to this mm's current rss value.
>   1119				 */
>   1120				reset_mm_hiwater_rss(mm);
>   1121				up_write(&mm->mmap_sem);
>   1122				goto out_mm;
>   1123			}
>   1124	
>   1125			down_read(&mm->mmap_sem);
>   1126			tlb_gather_mmu(&tlb, mm, 0, -1);
>   1127			if (type == CLEAR_REFS_SOFT_DIRTY) {
>   1128				for (vma = mm->mmap; vma; vma = vma->vm_next) {
>   1129					if (!(vma->vm_flags & VM_SOFTDIRTY))
>   1130						continue;
>   1131					up_read(&mm->mmap_sem);
>   1132					if (down_write_killable(&mm->mmap_sem)) {
>   1133						count = -EINTR;
>   1134						goto out_mm;
>   1135					}
>   1136					for (vma = mm->mmap; vma; vma = vma->vm_next) {
>   1137						vma->vm_flags &= ~VM_SOFTDIRTY;
>   1138						vma_set_page_prot(vma);
>   1139					}
>   1140					downgrade_write(&mm->mmap_sem);
>   1141					break;
>   1142				}
>   1143	
>   1144				range.start = 0;
>   1145				range.end = -1UL;
>   1146				range.mm = mm;
> > 1147				range.event = MMU_NOTIFY_SOFT_DIRTY;
>   1148				mmu_notifier_invalidate_range_start(&range);
>   1149			}
>   1150			walk_page_range(0, mm->highest_vm_end, &clear_refs_walk);
>   1151			if (type == CLEAR_REFS_SOFT_DIRTY)
>   1152				mmu_notifier_invalidate_range_end(&range);
>   1153			tlb_finish_mmu(&tlb, 0, -1);
>   1154			up_read(&mm->mmap_sem);
>   1155	out_mm:
>   1156			mmput(mm);
>   1157		}
>   1158		put_task_struct(task);
>   1159	
>   1160		return count;
>   1161	}
>   1162	
> 
> ---
> 0-DAY kernel test infrastructure                Open Source Technology Center
> https://lists.01.org/pipermail/kbuild-all                   Intel Corporation


