Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 08:59:21 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C813058014B;
	Mon,  3 Dec 2018 15:36:30 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 03 Dec 2018 15:36:30 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Amuk3yBQkOkC0fi7yOVvNU/gQitpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64Zx2Ht8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZAo2y?=
 =?us-ascii?q?cZYBAeQCM+laoYnyqEcBoxSlBQm0Bu7i0SNIi3zs0KEmz+gtDQPL0Qo9FNwOqn?=
 =?us-ascii?q?TUq9D1Ob8QUeC6yKnIzC7Db+hI1jrm8ojHbA0uofGWUrJsa8be1U4vFwbDg16N?=
 =?us-ascii?q?qoLlJyuY2voRv2Wf9eZsSOyih3A9pw1soTWj2t0gh4jLi44N1FzI6SF0zJwoKd?=
 =?us-ascii?q?C2VkJ3e8OoHZheui2AKYd7QcUvSHxytikg0L0Jo5u7cTAKyJs5wx7fbOSKc5aH?=
 =?us-ascii?q?4h39TuadOzR4i2x/eLK5mRmy9VKsyurmVsm7yFpKryxFncfQtn0VyRDf9syKRu?=
 =?us-ascii?q?Fg8kqvxzqDzR3f5+JYLUwulKfWKYYtwrsqmZoStUTDEDX2mELzjKKOckUk++6o?=
 =?us-ascii?q?6/noY7n/pZ+TKZV0igfgPaQqg8C/Buo5Mg4QUGiB4um8yrLj8lPjQLlQjf05jL?=
 =?us-ascii?q?PZsJbEKsQfvKK5BBVV0ok75xalEzimyMgYnWUALF9dfBKHjovpNE/ULPH3EPey?=
 =?us-ascii?q?mFCskDZtx/DbMbztGJTNLn7fkLj/ebZx8VJTyA02zdpH/ZJbFqkBIO7vWk/2rN?=
 =?us-ascii?q?HYDgU2Mw2ow+n9D9VxzIMeWX+VDa+fP6PfqluI5uMpI+mRa44Zojf9K/455/Hw?=
 =?us-ascii?q?iX81g0MSfa6s3ZEPcnC3AuxmI1mFYXrrmtoBE2AKsRQkQOzpj12CVzhTZ3GpUq?=
 =?us-ascii?q?I45zE7Dp+mDIjZSoCshryBwDm0HplMam9aDVCMFG/id5+YVPcUdCKSPshhnyQe?=
 =?us-ascii?q?Wri6S48h0hKuuBXgy7V9LOrZ4SkYtZPl1Nho6OzfjxAy9TpoD8uD12GBVX17nm?=
 =?us-ascii?q?QNRzUuxqBwvVR9ykuf0ah/m/FYFsZc5/VTXgc+NJ7T1ep6C9/pVwLFf9eJTkum?=
 =?us-ascii?q?Q9q8DTEwSNIx38EBY0JnF9q+iRDD2jKgA6UJmLyTGJw07qXc0mDsKMln1XbJyr?=
 =?us-ascii?q?Mtj1k8TctJLm2pmKh/+w/XB47KlkWZk72ndaAd3C7L6WeCwnCCvEBeUA5sT6rF?=
 =?us-ascii?q?WWoTaVfRrdT8/knCVaOhCaw7Mgtdzs6PMrZFZcf3jVpYXvvjOM7RY2Sqm2iuAx?=
 =?us-ascii?q?aF3beMbIvse2UA0yTREkkEkwYP/XmYMQgyHDuuo2XbDDZ2D1Lgf1vs8fViqHO8?=
 =?us-ascii?q?VkI00wCKb0hm17qp+h4UheaQS+8J0rIDoichrzR0HFCy39/ND9qApgxhfLhTYN?=
 =?us-ascii?q?8n4VdH037ZuBJ5PpC6M69igVseeRxtv0zyzxV3FplAkc8yoXwwyAp9N62Z301B?=
 =?us-ascii?q?dj+Cxp/wJ6DYJXP0/BCsbK7WxErT0NKX+qcJ9fQ5pE/vvACvFko+7Xpn18NZ3G?=
 =?us-ascii?q?eb5pXPFAASS47+Ul4r9xhmoLHXeik8557O2XJwK6W1sz/C1MgvBOsq0Ruge9Zf?=
 =?us-ascii?q?MKWZFA79CcEaBs6uKPA0lFitdB4LIOdS9KssNcO8a/SGwLKrPPpnnD++l2RH4Z?=
 =?us-ascii?q?xy3ViW9yVhTe7ExZAFzO+C3guGTjvzkE2ussTqlo9afzESGWy/xDPgBI5QYK1y?=
 =?us-ascii?q?YIkKBX2vI82x2tVxmZrtV2RE+16kAlMMwNWpdgaKb1zhwQ1Q0lwaoHymmSeizz?=
 =?us-ascii?q?14iSoprreZ3CHVx+TidRwHOnNERWV4jFfsJ5S0gM4eXESycwcpkx6l717gx6dH?=
 =?us-ascii?q?vKR/M3XTQUBQcij0NW5iSKiwtrmFY8JV85MnqyZXUOe9YVCcVLH9pQAX0yfiH2?=
 =?us-ascii?q?tY2TA6eCumupT/nxxmlm2dKGx/o2beecF13R3f/sDTReZN3joaQyl1kTnWCUK7?=
 =?us-ascii?q?P9Wz/9WUlpHDv/u6V2KgUJ1TbCbqwZmBtCu9+W1lHxm/k+qvld3gFAgwyTX72M?=
 =?us-ascii?q?VyVSXUsBb8ZZHm16egPuJmZEVoBEL85NB8GoFxiYYwgJAQ2X4HhpSa53YHkGHz?=
 =?us-ascii?q?MclF1qL6dnYCWTkLw9vN6gj/xEJjNm6Jx57+VniFx8thZtq6bXkM1iMz8c9KE7?=
 =?us-ascii?q?uU46JenSRuvFW4tw3RbON5njccz/su9XEbj/sIuAor0iWSHLQSEVNEMizrkhSC?=
 =?us-ascii?q?98q+o7lPZGazbbiw01JzncymDLGHuA1dWWz2epE/HS9r9cV/MUnB0Hny6oHiZd?=
 =?us-ascii?q?nRYsgfthySkxfckedVLIg9meYNhSpiIWj9p2Eqy/YnjRxy2pG3pJOIJH9q/KK9?=
 =?us-ascii?q?Hx5ULDn1Z94I9zHpjKZemNuW3o+1EpVgHDULQIXnTfayHD0OsvTnMh6EECcgpX?=
 =?us-ascii?q?eDBbrfAQif5V9kr33VFpCkKWqXKGMFzdl4RxmdOU9fgB0SXDoghZ40DQSqxM3n?=
 =?us-ascii?q?cEdk6TEd/F/4qh1Qyu12MxnzSHvQpACtaj0sUpiQMAJW7h1e50fSKcGf7uVzHz?=
 =?us-ascii?q?xB/p28tgONLHaXZx9PDWEPVUyJHFTjPrio5dnd/OmUHOu+L/3SYbqQrexSTeuH?=
 =?us-ascii?q?xZWq0oF+5TaDKt2PPmV+D/08wkdDXW52G8XamzUMSiwbjSHNb9ScpBez5CJ3tN?=
 =?us-ascii?q?2/8O/wVQLr5IuPDaZSMNp19xC3h6eDK/CfhCJjJTlE0ZMMwGfCyKID014KlyFu?=
 =?us-ascii?q?az6tHKwaui7QV63QgLFYDh4BZyN3NctF9KY83ghLOc7GhdL5zL94jvgpC1hbUV?=
 =?us-ascii?q?ztgN2mZcsPI2ulLlPIGF6LNKiaJT3M28z3faK8SbhKgOpIrRG/pTabHFHlPjmY?=
 =?us-ascii?q?kznpVhavMfxDjS2BPRxevp29fQhpCWT5UN3mbRi7OsdtjTIq2b00mm/KNWkEPD?=
 =?us-ascii?q?l8aUxNqLiQ7SJegvpnGm1B7mBqLe+LmyuC6+nYK5AWseZkAyhuluJa5mg6xKVR?=
 =?us-ascii?q?7C1eWPN1ny7S/ZZSpASik++S2n9iVTJNtD9Ah8SMp0oxF7/e88xCVnLF5wkAxX?=
 =?us-ascii?q?+dBxQDu51uDdi86Ohr1tHTmfere395+NXO8J5ZXpCMJQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A9AAAhvQVch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBVAQBAQsBg2sngzo/iHeNPRRomD8UGBMBhECDSSI3Bg0BAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQoLCQgpL4I2JAGCYgMDAQIJFwQLAUYGCQEBCBcFAiYCAgNUGQWDHIICBYo1m?=
 =?us-ascii?q?1B8M4kCgSyBC4hNgkQXgX+BEYJdhVOCZ4JXAosfhQuQFgmGQYpwCxiJW4dLmG2?=
 =?us-ascii?q?BXIF3cFCCbJB5IQEBMQGBBAEBHIo+AQE?=
X-IPAS-Result: =?us-ascii?q?A0A9AAAhvQVch0O0hNFjHAEBAQQBAQcEAQGBVAQBAQsBg2s?=
 =?us-ascii?q?ngzo/iHeNPRRomD8UGBMBhECDSSI3Bg0BAwEBAQEBAQIBEwEBAQoLCQgpL4I2J?=
 =?us-ascii?q?AGCYgMDAQIJFwQLAUYGCQEBCBcFAiYCAgNUGQWDHIICBYo1m1B8M4kCgSyBC4h?=
 =?us-ascii?q?NgkQXgX+BEYJdhVOCZ4JXAosfhQuQFgmGQYpwCxiJW4dLmG2BXIF3cFCCbJB5I?=
 =?us-ascii?q?QEBMQGBBAEBHIo+AQE?=
X-IronPort-AV: E=Sophos;i="5.56,312,1539673200"; 
   d="scan'208";a="54755573"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 03 Dec 2018 15:36:29 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726274AbeLCXg0 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 3 Dec 2018 18:36:26 -0500
Received: from mx1.redhat.com ([209.132.183.28]:60264 "EHLO mx1.redhat.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726260AbeLCXgX (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 3 Dec 2018 18:36:23 -0500
Received: from smtp.corp.redhat.com (int-mx01.intmail.prod.int.phx2.redhat.com [10.5.11.11])
        (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
        (No client certificate requested)
        by mx1.redhat.com (Postfix) with ESMTPS id 78B5D307EA90;
        Mon,  3 Dec 2018 23:36:22 +0000 (UTC)
Received: from localhost.localdomain.com (ovpn-120-188.rdu2.redhat.com [10.10.120.188])
        by smtp.corp.redhat.com (Postfix) with ESMTP id 296FE60566;
        Mon,  3 Dec 2018 23:36:19 +0000 (UTC)
From: jglisse@redhat.com
To: linux-mm@kvack.org
Cc: Andrew Morton <akpm@linux-foundation.org>,
        linux-kernel@vger.kernel.org,
        =?UTF-8?q?J=C3=A9r=C3=B4me=20Glisse?= <jglisse@redhat.com>,
        "Rafael J . Wysocki" <rafael@kernel.org>,
        Ross Zwisler <ross.zwisler@linux.intel.com>,
        Dan Williams <dan.j.williams@intel.com>,
        Dave Hansen <dave.hansen@intel.com>,
        Haggai Eran <haggaie@mellanox.com>,
        Balbir Singh <balbirs@au1.ibm.com>,
        "Aneesh Kumar K . V" <aneesh.kumar@linux.ibm.com>,
        Benjamin Herrenschmidt <benh@kernel.crashing.org>,
        Felix Kuehling <felix.kuehling@amd.com>,
        Philip Yang <Philip.Yang@amd.com>,
        =?UTF-8?q?Christian=20K=C3=B6nig?= <christian.koenig@amd.com>,
        Paul Blinzer <Paul.Blinzer@amd.com>,
        Logan Gunthorpe <logang@deltatee.com>,
        John Hubbard <jhubbard@nvidia.com>,
        Ralph Campbell <rcampbell@nvidia.com>,
        Michal Hocko <mhocko@kernel.org>,
        Jonathan Cameron <jonathan.cameron@huawei.com>,
        Mark Hairgrove <mhairgrove@nvidia.com>,
        Vivek Kini <vkini@nvidia.com>,
        Mel Gorman <mgorman@techsingularity.net>,
        Dave Airlie <airlied@redhat.com>,
        Ben Skeggs <bskeggs@redhat.com>,
        Andrea Arcangeli <aarcange@redhat.com>
Subject: [RFC PATCH 12/14] mm/hbind: add migrate command to hbind() ioctl
Date: Mon,  3 Dec 2018 18:35:07 -0500
Message-Id: <20181203233509.20671-13-jglisse@redhat.com>
In-Reply-To: <20181203233509.20671-1-jglisse@redhat.com>
References: <20181203233509.20671-1-jglisse@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.11
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16 (mx1.redhat.com [10.5.110.44]); Mon, 03 Dec 2018 23:36:22 +0000 (UTC)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Jérôme Glisse <jglisse@redhat.com>

This patch add migrate commands to hbind() ioctl, user space can use
this commands to migrate a range of virtual address to list of target
memory.

This does not change the policy for the range, it also ignores any of
the existing policy range, it does not changes the policy for the
range.

Signed-off-by: Jérôme Glisse <jglisse@redhat.com>
Cc: Rafael J. Wysocki <rafael@kernel.org>
Cc: Ross Zwisler <ross.zwisler@linux.intel.com>
Cc: Dan Williams <dan.j.williams@intel.com>
Cc: Dave Hansen <dave.hansen@intel.com>
Cc: Haggai Eran <haggaie@mellanox.com>
Cc: Balbir Singh <balbirs@au1.ibm.com>
Cc: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
Cc: Felix Kuehling <felix.kuehling@amd.com>
Cc: Philip Yang <Philip.Yang@amd.com>
Cc: Christian König <christian.koenig@amd.com>
Cc: Paul Blinzer <Paul.Blinzer@amd.com>
Cc: Logan Gunthorpe <logang@deltatee.com>
Cc: John Hubbard <jhubbard@nvidia.com>
Cc: Ralph Campbell <rcampbell@nvidia.com>
Cc: Michal Hocko <mhocko@kernel.org>
Cc: Jonathan Cameron <jonathan.cameron@huawei.com>
Cc: Mark Hairgrove <mhairgrove@nvidia.com>
Cc: Vivek Kini <vkini@nvidia.com>
Cc: Mel Gorman <mgorman@techsingularity.net>
Cc: Dave Airlie <airlied@redhat.com>
Cc: Ben Skeggs <bskeggs@redhat.com>
Cc: Andrea Arcangeli <aarcange@redhat.com>
---
 include/uapi/linux/hbind.h |  9 ++++++++
 mm/hms.c                   | 43 ++++++++++++++++++++++++++++++++++++++
 2 files changed, 52 insertions(+)

diff --git a/include/uapi/linux/hbind.h b/include/uapi/linux/hbind.h
index 7bb876954e3f..ededbba22121 100644
--- a/include/uapi/linux/hbind.h
+++ b/include/uapi/linux/hbind.h
@@ -57,6 +57,15 @@ struct hbind_params {
  */
 #define HBIND_CMD_BIND 1
 
+/*
+ * HBIND_CMD_MIGRATE move existing memory to use listed target memory. This is
+ * a best effort.
+ *
+ * Additional dwords:
+ *      [0] result ie number of pages that have been migrated.
+ */
+#define HBIND_CMD_MIGRATE 2
+
 
 #define HBIND_IOCTL		_IOWR('H', 0x00, struct hbind_params)
 
diff --git a/mm/hms.c b/mm/hms.c
index 6be6f4acdd49..6764908f47bf 100644
--- a/mm/hms.c
+++ b/mm/hms.c
@@ -368,6 +368,39 @@ static int hbind_bind(struct mm_struct *mm, struct hbind_params *params,
 }
 
 
+static int hbind_migrate(struct mm_struct *mm, struct hbind_params *params,
+			 const uint32_t *targets, uint32_t *atoms)
+{
+	unsigned long size, npages;
+	int ret = -EINVAL;
+	unsigned i;
+
+	size = PAGE_ALIGN(params->end) - (params->start & PAGE_MASK);
+	npages = size >> PAGE_SHIFT;
+
+	for (i = 0; params->ntargets; ++i) {
+		struct hms_target *target;
+
+		target = hms_target_find(targets[i]);
+		if (target == NULL)
+			continue;
+
+		ret = target->hbind->migrate(target, mm, params->start,
+					     params->end, params->natoms,
+					     atoms);
+		hms_target_put(target);
+
+		if (ret)
+			continue;
+
+		if (atoms[0] >= npages)
+			break;
+	}
+
+	return ret;
+}
+
+
 static long hbind_ioctl(struct file *file, unsigned cmd, unsigned long arg)
 {
 	uint32_t *targets, *_dtargets = NULL, _ftargets[HBIND_FIX_ARRAY];
@@ -458,6 +491,16 @@ static long hbind_ioctl(struct file *file, unsigned cmd, unsigned long arg)
 			if (ret)
 				goto out_mm;
 			break;
+		case HBIND_CMD_MIGRATE:
+			if (ndwords != 2) {
+				ret = -EINVAL;
+				goto out_mm;
+			}
+			ret = hbind_migrate(current->mm, &params,
+					    targets, atoms);
+			if (ret)
+				goto out_mm;
+			break;
 		default:
 			ret = -EINVAL;
 			goto out_mm;
-- 
2.17.2

