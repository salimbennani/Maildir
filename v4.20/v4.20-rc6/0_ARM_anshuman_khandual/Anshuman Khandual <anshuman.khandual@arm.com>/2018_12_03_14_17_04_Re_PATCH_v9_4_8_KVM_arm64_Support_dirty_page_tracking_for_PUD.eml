Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 08:53:07 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga008.fm.intel.com (fmsmga008.fm.intel.com [10.253.24.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 68F88580117;
	Mon,  3 Dec 2018 06:17:05 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga008-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 03 Dec 2018 06:17:05 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AxtwBlRawKw40YXAEeuBC8Lv/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpcm4Zh7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTzFPDJ2y?=
 =?us-ascii?q?b4UPDOQPM+hXoIb/qFQSohW+HhGsCeH0xz9UhHL7x7E23/gvHAzE2gErAtIAsG?=
 =?us-ascii?q?7TrNXwLKofTea1zLLIzTXeavNZwzH945XNfBAhu/6MW69/cdfLxkkrCgjIiU+f?=
 =?us-ascii?q?qYr+PzOVy+QNtnKU7+x6WeKsi24osQdxrSWyxsg2jonEnZgaykrB9Slj3Ik1It?=
 =?us-ascii?q?i4RVd9bNW5E5VQrzmXO5VqTs4mWW1kpSg3xqMctZKmfyUG1I4ryh/dZvCfbYSE?=
 =?us-ascii?q?/xDuWPyMLTp3mH5pYq+ziwqv/US6yODwSs+520tQoCVfiNnDrHUN2gTT6seZTv?=
 =?us-ascii?q?t9+V+s2SiA1w/N8OFIO0M0mrTBK54n3LEwkoAfsUPZHi/5gEn2jamWeVs4+uWw?=
 =?us-ascii?q?9ejrfrHrqoWBO4J6lA3yKLkil8+jDegiMwUDXXCX+eGm273i+U35Tq9Kjvozkq?=
 =?us-ascii?q?TBtJDaJMIbprO2AgNM0YYs9Qy/DzG439QchHUHK1xEeBSZgIjzIFzOPv/4Auml?=
 =?us-ascii?q?g1i2kzdk2erGPrv/DZXJNHTDl63hfbll505G1AUz1cxf545TCrwZJPLzW0zxu8?=
 =?us-ascii?q?LCAh42Lgy52OLnCNR71oMDVmODGK6ZMKXOsVCW4uIjOfWDZIgQuDzlMfgq++bu?=
 =?us-ascii?q?jWMlmV8aZaSp3YEYaHGkHvt8JEWVe3rsgsobHmcMsQozV+jqiFyEUT5OaHe+Ra?=
 =?us-ascii?q?M85jcnCI24CYfPXJyigLuE3C2jBJ1ZenhGCkyQEXfvb4iEWfAMZzyILs9ilTwE?=
 =?us-ascii?q?U76hS4g62BGqtQ/6zadnL+XO9i0Zs5LjyMZ65+nJmR4u8jx0CtyX03uRQGFsgm?=
 =?us-ascii?q?MIWzg20bhlrkxmyleD1qt4j+ZCFdNJ5fNESQM6NZ/az+xnBNH+QAPBftGVSFm4?=
 =?us-ascii?q?RtWqGy0+TtU0w9UWeUZyB82ijgzf3yqtG7IVlKaEBJou/qLY3nj+PcB9y3nd2a?=
 =?us-ascii?q?kljlkmRNZPNGK8iq5+8QjTG5DGk0GDm6m2cqQc2TbH9H2fwmqWoEFYTAlwXL3Y?=
 =?us-ascii?q?Un8FeEvZs8715kPYQL+oErQoLA1BxcmGKqtJb93piU5LRPPiONTYfmKwlH28BR?=
 =?us-ascii?q?eOxrOQcoXqf38R0znaCEgBiwoT52qJNRAiBie9pGLTFCFhGkjxY0zy6+V+qGm0?=
 =?us-ascii?q?Tkkvzw6UaU1szL61+h8ThfyBRPIfxLMEuCE9qzpqGFaxxc7ZC92FpwB5ZqVTfc?=
 =?us-ascii?q?s94Etb1WLerwF9Ip2gL6Vlhl4CcwR2v1ni1wltBoVHi8gqqHIqzAx9Ka+D1FNB?=
 =?us-ascii?q?djWY3Y3/O7HNK2ny+gyvZLDS2l3EzNmW/aIP4uwiq1r/pAGpClYi83J/3tZP13?=
 =?us-ascii?q?uT+JrLAxQSUJ7rSUk36gV1qKvcYik+4IPUy2ZhMa21sj/ExtIoC/Epyhemf9dD?=
 =?us-ascii?q?LqyEEBX+HNEdB8irMOYqgUSmbgoYPOBO8645J8Ond+ac1KG3JuphnTKmgn5B4I?=
 =?us-ascii?q?ByyU+M8yt8SujV35cK2f2Y3w2HVyvig1elqMz4hYdEZTQKFGql1SfkHJJRZrF1?=
 =?us-ascii?q?fYsTE2euItG4yc9kh5HwXH5U7lijCE0c2M+oYBadc0by3QlN2ksJu3ynni24wi?=
 =?us-ascii?q?dwkzEoqKqfwSPPz/7jdBoBJm5EWm1igU3wLoizitAQRFKoYBQxlBu5+Ub6wLBW?=
 =?us-ascii?q?paR+L2XJQUZEZTP2L3xkUqarsrqCYshP6I4nsClNUeS8Z0yaRaD5oxcAzyzjGG?=
 =?us-ascii?q?5ezighdz62opX5gwB6iGWFIXZxtnXZY8JwxRTY5NDGXv5exDkGRCp5iTnRGFe8?=
 =?us-ascii?q?OcKk/dGVl5fFr+C/WHitVpxVcSn304yAsDG36nFtAR26h/qzgMHoERAm0S/n0N?=
 =?us-ascii?q?lnTSXJowz7YoXx1aS6MORnc1JsBF/97cp6B45/npExhJEWxXgVmJGV8WAbnmf0?=
 =?us-ascii?q?NNVRwbj+Y2YVRT4X397V5xDo2E55IXKI3Y75VmidzdFnZ9m1eW4W3iM978ZXCK?=
 =?us-ascii?q?ab9rBEnC11okamogLVe/RygjAdyf424n4An+4JoBYtzjmaAr0KGElYPC/smA6S?=
 =?us-ascii?q?49GwsqpXf3qvfqaq1EVlg9+hFr6CrxpYWHb4fJciACBx4t9+MFLKzH389IXkdM?=
 =?us-ascii?q?PMYtIUsx2eiw3AgPRNKJItivoKgjJqOX76vX0g0eI6jAZh3ZenvIicMGVt/bm0?=
 =?us-ascii?q?AhpZNj3zesMS9SvhjadYnsaKwY+vGo9tFSkMXJvtVfioCi4dtez7NwaSFz0xsm?=
 =?us-ascii?q?yUFqDYHQ+b9UdqtXbPE42wOnGTJXkZy8hiRRaHKExehgAUQCs1npojGg+2w8zh?=
 =?us-ascii?q?dV9z5ioN6V7gthtM1uVoOgH9UmjFoQendCw0RIKDLBZM7QFC+kTVMdGY7u1pBC?=
 =?us-ascii?q?FV5ZmhrA2LKmyGaAVEF2AJWkqYB1/9Ormi/8XP8++dBuCmNfvBfa2OqfBCV/eP?=
 =?us-ascii?q?3Z+u0oxm/yuVNsWSJHZiCec32lFEXXB/FMTUgDEPSy0RlyLQYM+Xvha8+itrrs?=
 =?us-ascii?q?+h9PTnQh7g5YyKC7FKK9Vg5wi2gbufN+6XnCt5KShX1pIPxX/LybgTxl0Siztp?=
 =?us-ascii?q?dzmiD7sArzPNTLnLl69TDh4bbT5zNcRS46I92AlNJdDUitfv2rFkif41Dk9PVU?=
 =?us-ascii?q?b9lcGxecwKP2a9OUvdC0aWL7uGPyPEwsHtbaO4SL1dl+FUtxy2uTaGHE7vJDWD?=
 =?us-ascii?q?lz/1Vx+xNeFAlj2UPBtbuIulaBZiFXDjTM76ah28KNJ3kTw2wbguinzWL2ITLT?=
 =?us-ascii?q?h8fF1LrrCL6SNYg/N/G3FO73Z/LOmEnTqZ4PfcKpoMrfRrBSF0nfpA4Hsm07tV?=
 =?us-ascii?q?8D1ERPttlSrStNFupVSmkuiJyjV/URtOqixEhISEvUh5PaXZ959AWWvL/R4X7G?=
 =?us-ascii?q?WQDQgKqMVhCtH1p69Qzd3Px+rPL2J67tTV4YM1CNLdN8uDeC45LBzoBHjdAxEM?=
 =?us-ascii?q?UjevHWjFggpWl/TEsjWWsJ0zsJ3EnJsVVqQdX0dzHfQeF0FvHdVELZtqDR0+lr?=
 =?us-ascii?q?vOpcgT5We7pR+ZZ8VTuJzaX/baVfzpMzaEiLBCIRgIyLX0MI0XHoTh3gppbVws?=
 =?us-ascii?q?z9eCIFbZQd0Y+n4pVQQzukgYtSEmFmA=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AOAAB5OQVch0O0hNFiDg4BAQEEAQEHB?=
 =?us-ascii?q?AEBgVEHAQELAYNrFBODeYgYjAqBYAglFJc0gXMsEwGICCI0CQ0BAwEBAQEBAQI?=
 =?us-ascii?q?BEwEBAQoLCQgpL4I2JAGCYgECAwECIFEFBgkBAQoYAgImAgIDVAYBCgIGAgEBA?=
 =?us-ascii?q?YMcggIEAaUngS+FQIRfgQuLEYFXP4ERJwyCMS6IBYJXAo90NZAXBwKCHwSPEx6?=
 =?us-ascii?q?Ja4c7iQSRL4INTSODPIInF41iQzcBATGBBQEBilcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AOAAB5OQVch0O0hNFiDg4BAQEEAQEHBAEBgVEHAQELAYN?=
 =?us-ascii?q?rFBODeYgYjAqBYAglFJc0gXMsEwGICCI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgpL?=
 =?us-ascii?q?4I2JAGCYgECAwECIFEFBgkBAQoYAgImAgIDVAYBCgIGAgEBAYMcggIEAaUngS+?=
 =?us-ascii?q?FQIRfgQuLEYFXP4ERJwyCMS6IBYJXAo90NZAXBwKCHwSPEx6Ja4c7iQSRL4INT?=
 =?us-ascii?q?SODPIInF41iQzcBATGBBQEBilcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,310,1539673200"; 
   d="scan'208";a="140523656"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 03 Dec 2018 06:17:03 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726546AbeLCOSL (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 3 Dec 2018 09:18:11 -0500
Received: from foss.arm.com ([217.140.101.70]:38192 "EHLO foss.arm.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725914AbeLCOSK (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 3 Dec 2018 09:18:10 -0500
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
        by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id EDE6B1682;
        Mon,  3 Dec 2018 06:16:59 -0800 (PST)
Received: from [10.1.37.145] (p8cg001049571a15.cambridge.arm.com [10.1.37.145])
        by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id 3F2B53F614;
        Mon,  3 Dec 2018 06:16:58 -0800 (PST)
Subject: Re: [PATCH v9 4/8] KVM: arm64: Support dirty page tracking for PUD
 hugepages
To: Punit Agrawal <punit.agrawal@arm.com>, kvmarm@lists.cs.columbia.edu
Cc: suzuki.poulose@arm.com, marc.zyngier@arm.com,
        Catalin Marinas <catalin.marinas@arm.com>, will.deacon@arm.com,
        linux-kernel@vger.kernel.org, Russell King <linux@armlinux.org.uk>,
        punitagrawal@gmail.com, linux-arm-kernel@lists.infradead.org
References: <20181031175745.18650-1-punit.agrawal@arm.com>
 <20181031175745.18650-5-punit.agrawal@arm.com>
From: Anshuman Khandual <anshuman.khandual@arm.com>
Message-ID: <0d5f2d45-b09d-d43e-4320-98113d79cb18@arm.com>
Date: Mon, 3 Dec 2018 19:47:04 +0530
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101
 Thunderbird/52.9.1
MIME-Version: 1.0
In-Reply-To: <20181031175745.18650-5-punit.agrawal@arm.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org



On 10/31/2018 11:27 PM, Punit Agrawal wrote:
> In preparation for creating PUD hugepages at stage 2, add support for
> write protecting PUD hugepages when they are encountered. Write
> protecting guest tables is used to track dirty pages when migrating
> VMs.
> 
> Also, provide trivial implementations of required kvm_s2pud_* helpers
> to allow sharing of code with arm32.
> 
> Signed-off-by: Punit Agrawal <punit.agrawal@arm.com>
> Reviewed-by: Christoffer Dall <christoffer.dall@arm.com>
> Reviewed-by: Suzuki K Poulose <suzuki.poulose@arm.com>
> Cc: Marc Zyngier <marc.zyngier@arm.com>
> Cc: Russell King <linux@armlinux.org.uk>
> Cc: Catalin Marinas <catalin.marinas@arm.com>
> Cc: Will Deacon <will.deacon@arm.com>
> ---
>  arch/arm/include/asm/kvm_mmu.h   | 15 +++++++++++++++
>  arch/arm64/include/asm/kvm_mmu.h | 10 ++++++++++
>  virt/kvm/arm/mmu.c               | 11 +++++++----
>  3 files changed, 32 insertions(+), 4 deletions(-)
> 
> diff --git a/arch/arm/include/asm/kvm_mmu.h b/arch/arm/include/asm/kvm_mmu.h
> index e6eff8bf5d7f..37bf85d39607 100644
> --- a/arch/arm/include/asm/kvm_mmu.h
> +++ b/arch/arm/include/asm/kvm_mmu.h
> @@ -87,6 +87,21 @@ void kvm_clear_hyp_idmap(void);
>  
>  #define kvm_pmd_mkhuge(pmd)	pmd_mkhuge(pmd)
>  
> +/*
> + * The following kvm_*pud*() functions are provided strictly to allow
> + * sharing code with arm64. They should never be called in practice.
> + */
> +static inline void kvm_set_s2pud_readonly(pud_t *pud)
> +{
> +	BUG();
> +}
> +
> +static inline bool kvm_s2pud_readonly(pud_t *pud)
> +{
> +	BUG();
> +	return false;
> +}

As arm32 does not support direct manipulation of PUD entries.

> +
>  static inline pte_t kvm_s2pte_mkwrite(pte_t pte)
>  {
>  	pte_val(pte) |= L_PTE_S2_RDWR;
> diff --git a/arch/arm64/include/asm/kvm_mmu.h b/arch/arm64/include/asm/kvm_mmu.h
> index 13d482710292..8da6d1b2a196 100644
> --- a/arch/arm64/include/asm/kvm_mmu.h
> +++ b/arch/arm64/include/asm/kvm_mmu.h
> @@ -251,6 +251,16 @@ static inline bool kvm_s2pmd_exec(pmd_t *pmdp)
>  	return !(READ_ONCE(pmd_val(*pmdp)) & PMD_S2_XN);
>  }
>  
> +static inline void kvm_set_s2pud_readonly(pud_t *pudp)
> +{
> +	kvm_set_s2pte_readonly((pte_t *)pudp);
> +}
> +
> +static inline bool kvm_s2pud_readonly(pud_t *pudp)
> +{
> +	return kvm_s2pte_readonly((pte_t *)pudp);
> +}
> +
>  #define hyp_pte_table_empty(ptep) kvm_page_empty(ptep)
>  
>  #ifdef __PAGETABLE_PMD_FOLDED
> diff --git a/virt/kvm/arm/mmu.c b/virt/kvm/arm/mmu.c
> index fb5325f7a1ac..1c669c3c1208 100644
> --- a/virt/kvm/arm/mmu.c
> +++ b/virt/kvm/arm/mmu.c
> @@ -1347,9 +1347,12 @@ static void  stage2_wp_puds(struct kvm *kvm, pgd_t *pgd,
>  	do {
>  		next = stage2_pud_addr_end(kvm, addr, end);
>  		if (!stage2_pud_none(kvm, *pud)) {
> -			/* TODO:PUD not supported, revisit later if supported */
> -			BUG_ON(stage2_pud_huge(kvm, *pud));
> -			stage2_wp_pmds(kvm, pud, addr, next);
> +			if (stage2_pud_huge(kvm, *pud)) {
> +				if (!kvm_s2pud_readonly(pud))
> +					kvm_set_s2pud_readonly(pud);
> +			} else {
> +				stage2_wp_pmds(kvm, pud, addr, next);
> +			}

As this series is enabling PUD related changes in multiple places, it is
reasonable to enable PGD level support as well even if it might not be
used much at the moment. I dont see much extra code to enable PGD, then
why not ? Even just to make the HugeTLB support matrix complete.
