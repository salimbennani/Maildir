Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 03 Dec 2018 20:26:10 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 2F9FD580117;
	Mon,  3 Dec 2018 03:35:28 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga002-1.jf.intel.com with ESMTP; 03 Dec 2018 03:35:28 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AO84H9RMyi2V9N1wEPZMl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0Kf/9oMbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRsZfWTJcDIOg?=
 =?us-ascii?q?YYUBDOQBMuRZr4bhqFUBogC+BRGuCe701j9In2X70bEm3+g9DA3L2hErEdIUsH?=
 =?us-ascii?q?TTqdX4LLsfUOCvw6nO0D7NbelZ2TPg54fWaBAqvPaBUK5wcMXLz0kjDQHLgU+U?=
 =?us-ascii?q?qYP4ITyVzP8AvHKB7+plT+6gl2knqwRorzWp28wiiZHJi5oLxlzY8Sh12ps5KN?=
 =?us-ascii?q?OmREJhfNKpE4dcuzubOoZ0Ws8uXXxktSQgxrEbtpO3YDIGxIk7yxPecfCKc4iF?=
 =?us-ascii?q?7grtVOmPIjp0mHdodbe8ihu28EWv0OjxW8up3FpWqydJjMPDu3MR2BHW9MeLVP?=
 =?us-ascii?q?V98V2n1D2SzQ7c8PtELloxlafDK54u3Lowlp0LvETdES/5hl/2gLWVdko64Oio?=
 =?us-ascii?q?7froYrH8qp+bLY90hRnyMqUomsOhHeQ1KhYCU3Sf9OimybHu81P1TK9XgvA1jq?=
 =?us-ascii?q?XVqpHXKMYDqq68GQBV04Ij6xilDzeh1dQVhX0HLFNDeBKagInlIlLOL+7iDfe5?=
 =?us-ascii?q?nVuslC5nx/fIP73nHJrNNGPOkKnufblj8U5Q0gkzws5F55JSFL4BJOj/WkjrtN?=
 =?us-ascii?q?zXFhM5KRC7w/77CNVh0YMTQWaPAq6aMKzMq1OJ6f8vLvKIZI8Uvjb9Nvck6+Tv?=
 =?us-ascii?q?jX8/hV8SY62p0YELZ3C/G/RsO1+Zbmb0gtcdDWcKuRIzTOzwh12DTT5cfXGyU7?=
 =?us-ascii?q?g85jEmEo2mC4jDS5upgLyA2ie7A5JXanpHClCKDXfnaYGEV+0QZyKVJ89riiYE?=
 =?us-ascii?q?WqS5S489yRGusxf3y7hgLuXK4CEYtpXj1N5z5+3Ujhwy8T10D8KA02CCVW10n2?=
 =?us-ascii?q?UIRyMo06B7u0By1lCD0a1gifxCCdNT/+9JUhs9NZPE1eN6ENDyWgXCftuTUlap?=
 =?us-ascii?q?WNemDCo1TtIwxd8Ofkl8F8+jjhDFwyqlHbsVm6aXC5wz96LWx2LxKNply3bayK?=
 =?us-ascii?q?khiEErQshVOm2gnKJ/8wnTCJTPk0WWjKuqcaUc3CjQ9GaM12aOvUdYUBJuXqXB?=
 =?us-ascii?q?R3wQekzWrdHh7EPYU7CuEagnMhdGycOaN6RFcMPpgktcSPfjItveZXmxlHm2BR?=
 =?us-ascii?q?qPwrOMb4/qe2EG0SXZCUgElR0T/HmcOQg/ACehv3zRDDh0GV3zZEPs9PF0qGmn?=
 =?us-ascii?q?QU8s0wGKc0ph2qKo9REPm/yTVekf3rIetycnsDV7AlC90snSC9qBoQphYapdbc?=
 =?us-ascii?q?k84FdByWLWqQh9Moa8IKBlg14Uax53sF/21xVrFoVAltAnrG8rzAp3LqKYzFNB?=
 =?us-ascii?q?djOC0ZDsILHXLXPy/BSua67Q1VHTy9KW+qYJ6PQlpFTvpgCpFkw+83p519lZyW?=
 =?us-ascii?q?eT5pLPDAAKS5L+Tl439wRmp7HdeiQy/YfU2mNjMKaqsj7OwckmBPY4xRm6eddf?=
 =?us-ascii?q?M6SEFBHpHs0eBsiuLvEqmlezYhIFOuBS6LA7P8e8e/Sa366rOf5qnCi6gmRf/I?=
 =?us-ascii?q?B9zkWM+jJ8S+7VxZoK3+uU3wqHVzjmilehvdv6mYRFZTEUA2q+xjLoBI9XZq1u?=
 =?us-ascii?q?Y4kLDX2iLNGwxtV7n5TtQWJX9Ea/B1Ma38+kYQCSb13h0gJKz0QYvHunlTG+zz?=
 =?us-ascii?q?NqiTEpr7OT0zDUzOTmaRUIJHRLRG5kjVr3JYi0jtYaXFWnbgQzlRul41r6yLZf?=
 =?us-ascii?q?pKhlM2bTRkJIdTDsL25+SquwqqaCY8lX5ZIosCVbSuS9bUqBSr7gpRsXyCfjH2?=
 =?us-ascii?q?pYxDAmeDCmoJT5nxpmiG2DKHZ/tmbWecZ1xR3H/tzTWeZR3iYaRCl/kTTXBEKz?=
 =?us-ascii?q?P8Oq/dWXkJfPqPu+WHiiVp1QcCnry52PtC2g6G1uAB2/me2zm9L9HQg71y/7y8?=
 =?us-ascii?q?dlVSHSoBngZYnr0rywMfh7cUlwGF/89816F5l+k4Qqg5Ecw3oahpST/XcclWfz?=
 =?us-ascii?q?MNNb2b/xbXYXRD4LxcLV7xbh2EF5Mn2JwIf5XG2HwsR9f9m6fn8W2iUl4sBJEq?=
 =?us-ascii?q?iU7aZInStoolWiqwLRbuNwnjMcyfso9X4bjPsFuAsrziWBHL8SGVNUMjDrlxSN?=
 =?us-ascii?q?99q+trlYZH6zcbis00pzhdWhDLCBog5GQnr4dIktHTRs7sphKlLDy2P86pvreN?=
 =?us-ascii?q?TLadITtxuUkwrPjuRPKZIxkOYKijRjOW7noXIlzOs7hwR03Z6mpIiHN3lt/KWh?=
 =?us-ascii?q?Dx5EMT31Ytkf+zD3gqZYg8aWxJuvHpR6FzUPXZvoS++oET0IufTmMQaODCMzqn?=
 =?us-ascii?q?OBFbXDGg+f7V9sr2jTHJCzK3GXOH4ZwM15SxaHI0xfhB0UUC8+np4kDQ2qwM3h?=
 =?us-ascii?q?cEFk5jEe/FL4qx1Myv52OBn7SGvQuACoajIsQpiFMBVW9h1C51vSMcGG7OJ8BS?=
 =?us-ascii?q?RY8YO6rACXNmyXfQdIDXwKWkyZAVDsJKKu6MLE8+iZAOq+MvTPba+PqexYS/eH?=
 =?us-ascii?q?25av3pF68DaLM8WFJmNiAOEj2kpfQXB5HNzUmjUISywKjiLNctSUpBGm9i1sqc?=
 =?us-ascii?q?C/9vvrVRnr5YuODbtSLNpu9wq3gaeFK+6fmiJ5JSxE2ZMLwH/C0KIf00IKiyFy?=
 =?us-ascii?q?azmtFqwNtS7TQ6LRma9XDB8bZzlwNMtS6KI80RdCOdTGitPuzbN4iv81C1FYVV?=
 =?us-ascii?q?3ugM2pZMoKI32jO1PDHkqEKLOGJTjTycHtfay8UaFQjPlTtxCoozmbDlTsPi6d?=
 =?us-ascii?q?mDjpTRyvNeBMgTqfPBxfvoG9bxlsBXLiTNLgdh20Ltt3gScqzr0zg3PALXQcPi?=
 =?us-ascii?q?Rkc0NRsr2Q6jtVgul+G2xE9HZqMfOIlDqZ7+bGLJYbqv9rAiVyl+JH73U20bpV?=
 =?us-ascii?q?7CdYRPNrnCvetMJho1ajkuOX0DpoTAJOqipXhIKMpUhjOb/W9p9FWXbF+hIC9W?=
 =?us-ascii?q?SRCxQQqNtjBd3ioKRQytnJlKLuJzZO6dPU/c0AB8fKLMKLKmYuMR3sGG2cMAxQ?=
 =?us-ascii?q?ZC+iMyn/jkhRnevaolSEp558ipHolJcUYrZBURo+EfZMTgxBHcIDPd9bQz8tjP?=
 =?us-ascii?q?bPqM8W5Gf4gATdTdhyt4rCEPmVBKOrYByDjLBCLyAUyKn7IJVbYqfh2kVkLGJm?=
 =?us-ascii?q?lZ7JFlv4VMpI5CZma1lw6A9I+Xx/QnUb1UX+cUWk+npVHvmx1FZijwJ6YOg13D?=
 =?us-ascii?q?nr+ExxL0DP4iA3lR910Z/sgCqVcTP9BKOxW5xGTSv5/QBlO5LhRwd4YSW2nEp5?=
 =?us-ascii?q?JHHFSuQVx/Fsb2EuhALCtJ9nHf9HUbYCbgUdyP2afPY01kwarT+ojwcT6fHETJ?=
 =?us-ascii?q?dvigYuWZqttG5bnQx5YdM5KLfTOK1RiF9KifTK9mWs1+Ys0EodKlwL/We6ZiEF?=
 =?us-ascii?q?ogoLO6MgKi7u+fZjo0TWnzpFZXhJVPcwpP9u3l0yNv7GzC/61bNHbEerOLrbZ+?=
 =?us-ascii?q?mcsnjBkMPOWFIo31kEv0NC+qRy0MFleE2RHQh7ybKBFhEEc9DDMQhPY+JY83/P?=
 =?us-ascii?q?eSeI9+7KxMQxd8+mG+nuZfeJs7wQkwS+AQBjV9AX480HNoGr11vcPIH9MbhTjV?=
 =?us-ascii?q?1n4Q3iPkmICrJNcRSIkDAduN2XyJ5xwJkbJzcBDGE7OiKyrP6DowYjmuaOWpEy?=
 =?us-ascii?q?a3EZXoweLW4eXMy8hj4fvnJcAT3x2eUcnkzKpTT7vC7dEBH4cNwlYvqIL1s4A9?=
 =?us-ascii?q?as8zgj26ypjxjR/4mIYymwMN9it9/G46ABrpOcFvVbZbpwqUHRn89fXXPgGzrK?=
 =?us-ascii?q?Gt64J5H6KJIlaMfpDHmSUVGljT8xCcDrM4DpZuKHmwznRoZ8tIidwSAtMtK7Gj?=
 =?us-ascii?q?gCGhB24eYZ6+g0MQIZbpU4YTbstgIjJ6K4PQGU28mvRGDrLiFZGb0Xh+mzebFS?=
 =?us-ascii?q?5yYlcOK/zHwuUtc8wvX9uRoBTY8HiznSzOiuYo1ZXzS1HHFBLUGH7yM6j21JMu?=
 =?us-ascii?q?c03/d6zhTVt1UVLzGMcqpucmMO94U1BkuXCXF3DHcoAlGbkIzP6xKt2LZU+DFS?=
 =?us-ascii?q?yZIcm+tEu3/6t4SZbj+2QqGDrJTeqS0rbdk+5aZ2NMards2Hv5TalyeZQpTKqA?=
 =?us-ascii?q?CtVS+xDf1RmtlIZilfRa8M0SssI8oKkYNb70Y7EMszbfQbAbMqqpijczxoB2ge?=
 =?us-ascii?q?wHldH8mE3TofkqKw3LDyiBidatIhPQYCvZEEhcESGWYiZiIYub/mW4Ldv3GLR3?=
 =?us-ascii?q?JNIwoJ6wlIogUamdkjUPri5d/hXZZKgx5fp/55SGOfP4hh8R3bQ2WajELQQe+k?=
 =?us-ascii?q?1eeu2FQBn7rXztAHVUsnWgBmzOFMmx5tcekvJg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AXAABDFAVch0O0hNFiHgEGBwaBUQkLA?=
 =?us-ascii?q?YEwUIFcBAsVEgqHNgOQDoJrlzQUgRADShUBGBMBiAMiNAkNAQMBAQEBAQECARM?=
 =?us-ascii?q?BAQEKCwkIKSMMgjYkAYJiAwMBAiQZAQERJgEFCQEBAQFDCwMvJQIEAQ0FBYMcg?=
 =?us-ascii?q?WoDFQECAQGZewKKB4FsM4J2AQEFgQQBAYNyGIIJCIwcgVc/gRGHe4Vzj3WQTQc?=
 =?us-ascii?q?CgiOPGxaRJiyIWI9CAgQCBAUCDQEBBYFGgg0zGiNQgmyCGzWDOIocATZygQUBA?=
 =?us-ascii?q?SGJLAGBHgEB?=
X-IPAS-Result: =?us-ascii?q?A0AXAABDFAVch0O0hNFiHgEGBwaBUQkLAYEwUIFcBAsVEgq?=
 =?us-ascii?q?HNgOQDoJrlzQUgRADShUBGBMBiAMiNAkNAQMBAQEBAQECARMBAQEKCwkIKSMMg?=
 =?us-ascii?q?jYkAYJiAwMBAiQZAQERJgEFCQEBAQFDCwMvJQIEAQ0FBYMcgWoDFQECAQGZewK?=
 =?us-ascii?q?KB4FsM4J2AQEFgQQBAYNyGIIJCIwcgVc/gRGHe4Vzj3WQTQcCgiOPGxaRJiyIW?=
 =?us-ascii?q?I9CAgQCBAUCDQEBBYFGgg0zGiNQgmyCGzWDOIocATZygQUBASGJLAGBHgEB?=
X-IronPort-AV: E=Sophos;i="5.56,310,1539673200"; 
   d="scan'208";a="55821387"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 03 Dec 2018 03:35:26 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726532AbeLCLdB (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 3 Dec 2018 06:33:01 -0500
Received: from mail-eopbgr20052.outbound.protection.outlook.com ([40.107.2.52]:21376
        "EHLO EUR02-VE1-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726386AbeLCLdA (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 3 Dec 2018 06:33:00 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=armh.onmicrosoft.com;
 s=selector1-arm-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=8lZ19rx6NW6HVZDz+P5umcZxHL6dLRSBK296k+VrcoQ=;
 b=NK3AAZBAvqvruFhAweKcGtlugwM3Yqlv8O52YVQLDEDX74rCK7k2aVj5Bnq0fal2AIAIjxrfd+LtxsGFxf8jE0zMOCWX8JHpJqcKWuG234WJzmrnKPzBYUfHP+N9gME/HoByF0STdSxhzDexUuIEiiex8SSpRngbX/Y7KD3hB4Q=
Received: from AM0PR08MB3891.eurprd08.prod.outlook.com (20.178.82.147) by
 AM0PR08MB3491.eurprd08.prod.outlook.com (20.177.108.222) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.1382.18; Mon, 3 Dec 2018 11:32:06 +0000
Received: from AM0PR08MB3891.eurprd08.prod.outlook.com
 ([fe80::896a:710:2a8c:e2fa]) by AM0PR08MB3891.eurprd08.prod.outlook.com
 ([fe80::896a:710:2a8c:e2fa%6]) with mapi id 15.20.1382.020; Mon, 3 Dec 2018
 11:32:06 +0000
From: Ayan Halder <Ayan.Halder@arm.com>
To: Ayan Halder <Ayan.Halder@arm.com>,
        Liviu Dudau <Liviu.Dudau@arm.com>,
        Brian Starkey <Brian.Starkey@arm.com>,
        "malidp@foss.arm.com" <malidp@foss.arm.com>,
        "airlied@linux.ie" <airlied@linux.ie>,
        "dri-devel@lists.freedesktop.org" <dri-devel@lists.freedesktop.org>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        "maxime.ripard@bootlin.com" <maxime.ripard@bootlin.com>,
        "sean@poorly.run" <sean@poorly.run>,
        "maarten.lankhorst@linux.intel.com" 
        <maarten.lankhorst@linux.intel.com>,
        "corbet@lwn.net" <corbet@lwn.net>,
        "mchehab+samsung@kernel.org" <mchehab+samsung@kernel.org>,
        "gregkh@linuxfoundation.org" <gregkh@linuxfoundation.org>,
        "davem@davemloft.net" <davem@davemloft.net>,
        "akpm@linux-foundation.org" <akpm@linux-foundation.org>,
        "nicolas.ferre@microchip.com" <nicolas.ferre@microchip.com>,
        "arnd@arndb.de" <arnd@arndb.de>,
        "linux-doc@vger.kernel.org" <linux-doc@vger.kernel.org>
CC: nd <nd@arm.com>
Subject: [RFC v3 AFBC 12/12] drm/arm/malidp: Added support for AFBC modifiers
 for all layers except DE_SMART
Thread-Topic: [RFC v3 AFBC 12/12] drm/arm/malidp: Added support for AFBC
 modifiers for all layers except DE_SMART
Thread-Index: AQHUivvSLomXscPgB0i325VFKObs8Q==
Date: Mon, 3 Dec 2018 11:32:06 +0000
Message-ID: <1543836703-8491-13-git-send-email-ayan.halder@arm.com>
References: <1543836703-8491-1-git-send-email-ayan.halder@arm.com>
In-Reply-To: <1543836703-8491-1-git-send-email-ayan.halder@arm.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-clientproxiedby: LO2P265CA0279.GBRP265.PROD.OUTLOOK.COM
 (2603:10a6:600:a1::27) To AM0PR08MB3891.eurprd08.prod.outlook.com
 (2603:10a6:208:109::19)
authentication-results: spf=none (sender IP is )
 smtp.mailfrom=Ayan.Halder@arm.com; 
x-ms-exchange-messagesentrepresentingtype: 1
x-originating-ip: [217.140.106.55]
x-ms-publictraffictype: Email
x-microsoft-exchange-diagnostics: 1;AM0PR08MB3491;6:CsVb8wgtaGzlyYKk/imgC6yFLmA4Xdc+WNtWGe7ng3L+CEDoGspLIcHJLT3u/x51BBkprKQ6/frarKBgsIQg07EOiBCxiqCB4d44+Hmj767MGJv1Jw1bzA+fRNmw5sSsjA5ANx56moHwVX9E3i/Ngo4HHOTDfZ+ZrGPB0Azcp3gncoeHl5M+ejWnK8a+dJf/kbSk8j3ptyluLG8r0ePqHalv7i6T9uJKLaMEB1SyUFOVX7AdEM/CnjHTz63YGg/J+YQp0RXLcAwyGpc/9L2KYFzLBPN/anbaa75DvFVdfHy8ThDGIki5ouSycwtzoesGCFeprlV5le+obJdKZ4T3VUDoHitdgydLuPPiS9ffbUPsVPHgo2EOOoCVnyI5Xn+cdD3En3c8g5cL9NOFulyiGzr4gr/8HSAMpqwOHYXpjGYdQH6tAaFJa19JxFJRMF3OwVRAPajme6TuskQNJvHysg==;5:uNHRSODbZzm1hnI0jVxlziiSqIW3Npqqe01xpBw9A/a3fTQJbng+evHdtRcjCDVVp1nE+ogHzfCqKMeR6EYKqLpxbM3yz2my8nzBaARKQcQr/21MbGF/7S6nCGn5ZK34Wj8k5yJSiwI0cPqwtyKl0Z1ZS0pr8XATnfOW4Tddvxs=;7:P802OWlbHRZkzHMA4Dg7iWcru78Tj+VroGuRFSZDQ/GckQFCqJ8a/7ZHxCdnC2hFsqFbcDtqxsUr8V39AIQhobmELvqhxTfdD8a90ixx1RiSmL8lbJ9ybtw+v0yIEGVaT+ZluiIF2YalF42O+olhdg==
x-ms-office365-filtering-correlation-id: 05c9071b-0e5b-45cb-061a-08d65912f463
x-ms-office365-filtering-ht: Tenant
x-microsoft-antispam: BCL:0;PCL:0;RULEID:(2390098)(7020095)(4652040)(8989299)(5600074)(711020)(4618075)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(2017052603328)(7153060)(7193020);SRVR:AM0PR08MB3491;
x-ms-traffictypediagnostic: AM0PR08MB3491:
nodisclaimer: True
x-microsoft-antispam-prvs: <AM0PR08MB34912A39FD0327E1CBC66EB9E4AE0@AM0PR08MB3491.eurprd08.prod.outlook.com>
x-ms-exchange-senderadcheck: 1
x-exchange-antispam-report-cfa-test: BCL:0;PCL:0;RULEID:(8211001083)(6040522)(2401047)(8121501046)(5005006)(3002001)(10201501046)(3231455)(999002)(944501493)(52105112)(93006095)(93001095)(6055026)(148016)(149066)(150057)(6041310)(201703131423095)(201702281528075)(20161123555045)(201703061421075)(201703061406153)(20161123560045)(20161123564045)(20161123562045)(20161123558120)(201708071742011)(7699051)(76991095);SRVR:AM0PR08MB3491;BCL:0;PCL:0;RULEID:;SRVR:AM0PR08MB3491;
x-forefront-prvs: 08756AC3C8
x-forefront-antispam-report: SFV:NSPM;SFS:(10009020)(396003)(39860400002)(376002)(136003)(346002)(366004)(199004)(189003)(99286004)(4326008)(71190400001)(97736004)(36756003)(71200400001)(106356001)(6486002)(68736007)(72206003)(256004)(14454004)(66066001)(478600001)(7416002)(5660300001)(81166006)(8936002)(7736002)(25786009)(2201001)(81156014)(305945005)(3846002)(6116002)(26005)(102836004)(316002)(186003)(6436002)(11346002)(486006)(2906002)(2501003)(8676002)(2616005)(44832011)(476003)(6512007)(105586002)(53936002)(52116002)(446003)(386003)(6506007)(86362001)(110136005)(76176011)(921003)(1121003);DIR:OUT;SFP:1101;SCL:1;SRVR:AM0PR08MB3491;H:AM0PR08MB3891.eurprd08.prod.outlook.com;FPR:;SPF:None;LANG:en;PTR:InfoNoRecords;A:1;MX:1;
x-microsoft-antispam-message-info: Q806ioVTDDfJp/rfq4Irj2xP0cjJTJBeVXzUmd9grXDkSIG37VjmBtCmA4mRMi2xnpY+l2uxKHNNl2XaVzkq6vTafWDLebeg3CRWpXkgdwhUgepwK6ReW5Rle06ss8gixPEkBLeDoGTdWjAQVAqcm0VvujOuZ0t6Xpx/pG1x9KiqVRd1vHj1H6nODqbpk7ghebm4rM6SCIjn9n980bG6IFMfGpS6pGNTLu5WhwgknxKelPjTlNFNHQ/dvwkXfujnbkPK/xt54l0V9B2YaeMYy8iRR38KKBmnnLHwZc31stkMJMlB+T75xK2T1PTtTGXxym+wMd9G2XxDS6FZ3XdIyh/dy8b9S3lZmX6TJFh9Sv8=
spamdiagnosticoutput: 1:99
spamdiagnosticmetadata: NSPM
Content-Type: text/plain; charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
X-OriginatorOrg: arm.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 05c9071b-0e5b-45cb-061a-08d65912f463
X-MS-Exchange-CrossTenant-originalarrivaltime: 03 Dec 2018 11:32:06.8470
 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: f34e5979-57d9-4aaa-ad4d-b122a662184d
X-MS-Exchange-Transport-CrossTenantHeadersStamped: AM0PR08MB3491
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

The list of modifiers to be supported for each plane has been dynamically g=
enerated
from 'malidp_format_modifiers[]' and 'malidp_hw_regmap->features'.

Changes from v1:-
1. Replaced DRM_ERROR() with DRM_DEBUG_KMS() in malidp_format_mod_supported=
()
to report unsupported modifiers.

Changes from v2:-
1. Removed malidp_format_mod_supported() from the current patch. This has b=
een added
in "PATCH 7/12"
2. Dynamically generate the list of modifiers (to be supported for each pla=
ne) from
'malidp_format_modifiers' and features.

Signed-off-by: Ayan Kumar halder <ayan.halder@arm.com>
---
 drivers/gpu/drm/arm/malidp_drv.c    |  1 +
 drivers/gpu/drm/arm/malidp_planes.c | 28 ++++++++++++++++++++++++++--
 2 files changed, 27 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/arm/malidp_drv.c b/drivers/gpu/drm/arm/malidp_=
drv.c
index b2b97db..be45703 100644
--- a/drivers/gpu/drm/arm/malidp_drv.c
+++ b/drivers/gpu/drm/arm/malidp_drv.c
@@ -388,6 +388,7 @@ static int malidp_init(struct drm_device *drm)
 	drm->mode_config.max_height =3D hwdev->max_line_size;
 	drm->mode_config.funcs =3D &malidp_mode_config_funcs;
 	drm->mode_config.helper_private =3D &malidp_mode_config_helpers;
+	drm->mode_config.allow_fb_modifiers =3D true;
=20
 	ret =3D malidp_crtc_init(drm);
 	if (ret)
diff --git a/drivers/gpu/drm/arm/malidp_planes.c b/drivers/gpu/drm/arm/mali=
dp_planes.c
index eec0442..01037d0 100644
--- a/drivers/gpu/drm/arm/malidp_planes.c
+++ b/drivers/gpu/drm/arm/malidp_planes.c
@@ -934,6 +934,25 @@ int malidp_de_planes_init(struct drm_device *drm)
 				  BIT(DRM_MODE_BLEND_COVERAGE);
 	u32 *formats;
 	int ret, i, j, n;
+	u64 supported_modifiers[MODIFIERS_COUNT_MAX];
+	const u64 *modifiers;
+
+	modifiers =3D malidp_format_modifiers;
+
+	if (!(map->features & MALIDP_DEVICE_AFBC_SUPPORT_SPLIT)) {
+		/*
+		 * Since our hardware does not support SPLIT, so build the list of
+		 * supported modifiers excluding SPLIT ones.
+		 */
+		while (*modifiers !=3D DRM_FORMAT_MOD_INVALID) {
+			if (!(*modifiers & AFBC_SPLIT))
+				supported_modifiers[j++] =3D *modifiers;
+
+			modifiers++;
+		}
+		supported_modifiers[j++] =3D DRM_FORMAT_MOD_INVALID;
+		modifiers =3D supported_modifiers;
+	}
=20
 	formats =3D kcalloc(map->n_pixel_formats, sizeof(*formats), GFP_KERNEL);
 	if (!formats) {
@@ -958,9 +977,14 @@ int malidp_de_planes_init(struct drm_device *drm)
=20
 		plane_type =3D (i =3D=3D 0) ? DRM_PLANE_TYPE_PRIMARY :
 					DRM_PLANE_TYPE_OVERLAY;
+
+		/*
+		 * All the layers except smart layer supports AFBC modifiers.
+		 */
 		ret =3D drm_universal_plane_init(drm, &plane->base, crtcs,
-					       &malidp_de_plane_funcs, formats,
-					       n, NULL, plane_type, NULL);
+				&malidp_de_plane_funcs, formats, n,
+				(id =3D=3D DE_SMART) ? NULL : modifiers, plane_type, NULL);
+
 		if (ret < 0)
 			goto cleanup;
=20
--=20
2.7.4

