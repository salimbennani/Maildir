Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 10 Nov 2018 00:58:07 -0000
Received: from icoremail.net (unknown [209.85.210.177])
	by mail-app2 (Coremail) with SMTP id by_KCgCn31xCIuZbR0drAQ--.33055S3;
	Sat, 10 Nov 2018 08:11:47 +0800 (CST)
Received: from mail-pf1-f177.google.com (unknown [209.85.210.177])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBnS0dAIuZbN7skAA--.3291S3;
	Sat, 10 Nov 2018 08:11:44 +0800 (CST)
Received: by mail-pf1-f177.google.com with SMTP id x2-v6so1630536pfm.7
        for <xuliker@zju.edu.cn>; Fri, 09 Nov 2018 16:11:44 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:date:from:to:cc
         :subject:message-id:references:mime-version:content-disposition
         :in-reply-to:user-agent:sender:precedence:list-id;
        bh=J5Jvj73F2OJxF8pYqHlzYl8k/fLkRvGWTuiq9gfQ9SQ=;
        b=KYw+mcJyKBPQAtpcsyd9XP5c+Rtyt5ErCsExQiO+iAouEUVjv+EDyem+Et7lVmE7GS
         OEEHTITt48K3MtU+1ndsskgErG8sG3hK6Z0HT0mkqZHYHUq802Ol/4nvDVgSR8CYSVyC
         IMG/A6fbSTRwkKX8fH06STOh/ETaTTUeZRt/MUfApS8X0jEjWVVopm8IXRUcaT8CY4C1
         qXBVzAzsA+lUTvBYdVcciY8LB1H4iyQqheyIHHjBwXJZNdeDjLoRMmmDwUVzMBey0eGC
         xmKR2WM8fwSgX2q//wKFEWnzBVDOMZEt6kLWdgYU67dmuFoqu5MInHxVOUU0pwOSqWXN
         AePQ==
X-Gm-Message-State: AGRZ1gL27u4RF/UfBaEq6MZbO6giuQgRIbQJcwQzjdFgZ80geHQ0KR7+
	oBhGdcu3jtGMRyC2FxMDYqzqRCVsVpOIFpyg0VGeCwrcJBqGare8tg==
X-Received: by 2002:a63:cd17:: with SMTP id i23mr9268151pgg.13.1541808703058;
        Fri, 09 Nov 2018 16:11:43 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp543377pjt;
        Fri, 9 Nov 2018 16:11:42 -0800 (PST)
X-Google-Smtp-Source: AJdET5cwDta88ivDVd7CUTs98rnE5J5aYbvwU6aAvrcz39OOJJDd5/P51+Votx173wlfgfSu3IVN
X-Received: by 2002:a63:1b48:: with SMTP id b8mr9411692pgm.187.1541808702280;
        Fri, 09 Nov 2018 16:11:42 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541808702; cv=none;
        d=google.com; s=arc-20160816;
        b=JTyAp6uUeAHYgrCeZXuxLoU3XZIUBxzeFmcJyYfoyVDwMY+g6e51tRbTtEIsfHrHnl
         Xd2SxnpRVeS3m1aubO5ZDeZrFrrslLeNQdY4VpWOVKOD+4a7eZrEXdhybMMbxqfRo1jM
         K+VYNcCi5/n+4V1KkTPx4VKhCpQU4F9t3CEeWuVUxt9yqbRnLIhqt4/z0g4ik09l4z1x
         5dweqsoJ9GMA/WMhiMP/OQTt7nAfk16pH4A4R/2NBEyFuTRRPC+zdb7R3PYA9N9/M2d2
         gmeHo/f0IWDZaKnwOpV5fYTdLMWmYtNkx5VVqrcXYTZqMYsw2s+S3HWY4/gR120oqeXs
         9fHA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:in-reply-to
         :content-disposition:mime-version:references:message-id:subject:cc
         :to:from:date:dkim-signature;
        bh=J5Jvj73F2OJxF8pYqHlzYl8k/fLkRvGWTuiq9gfQ9SQ=;
        b=if3XN/TcQxXjobh15eI5MisXoW6nm0sao87vtUSNdrRKraMohvbzBme8EvgCh4g9AH
         6L/Wuds/IJbunyKyOBhRK9yICHdh8qBXQxz04FKCAH+MUR26ziq4vCgs0x+WESBES1mQ
         r8ZE7YMn93zWDWxLJ+cqY6IYdy5KU5H6JGaa/Ud+KEtURN75/H2oMPOvckWt+ubmbPNF
         hlb2KZwWfYFNMI1km63FRYNbYCp4RMN8A9AoiroreGs2T25geA7lYyHVg++MNHuqBV2h
         ukMoPafAdmPs7peR/7MxDKvbNPneBlMnJw2GeKBrN7LHWtKJY/+qFw1AoTTizck0ZlyE
         BzAg==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@soleen.com header.s=google header.b=k305i34X;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=REJECT sp=REJECT dis=NONE) header.from=soleen.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id v16-v6si9004660plo.417.2018.11.09.16.11.26;
        Fri, 09 Nov 2018 16:11:42 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728257AbeKJJyS (ORCPT <rfc822;tomnomnom1@gmail.com>
        + 99 others); Sat, 10 Nov 2018 04:54:18 -0500
Received: from mail-qk1-f193.google.com ([209.85.222.193]:41644 "EHLO
        mail-qk1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728046AbeKJJyR (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 10 Nov 2018 04:54:17 -0500
Received: by mail-qk1-f193.google.com with SMTP id 189so4761588qkj.8
        for <linux-kernel@vger.kernel.org>; Fri, 09 Nov 2018 16:11:19 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=soleen.com; s=google;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=J5Jvj73F2OJxF8pYqHlzYl8k/fLkRvGWTuiq9gfQ9SQ=;
        b=k305i34XHAzBF/fXeIjdUMxlXdKD/NLhksmeRQvwjynJvjtcGV4uTxe2HXS8yDSJjR
         n8tFFzTekbIW+xql2fhwSdKq4tFjRfKlsVvRpGtzdHHlCsAm6XdN+VTSPnyZwN0W5MwB
         Rcq7/eP9PXm9B975gNngeEU8rU6eBDTGuTzrX6EvuvPC2gC1LMbrswvVz6uWxeH3EJPq
         n4Yt1u+HejCzvE1SLyPFEGVM3B7RZHJgB8GBHaLGM04OhBcieWRZ8Gvqa1MKoOR6h7jL
         cL/dU4Ul1iKMl0qZCDsKtThwheX11RL73I37n8dxyx/2l5qHDclEOYhhVrE7waKOvCig
         2vvw==
X-Received: by 2002:ac8:74d7:: with SMTP id j23mr10841803qtr.369.1541808679457;
        Fri, 09 Nov 2018 16:11:19 -0800 (PST)
Received: from xakep.localdomain (c-73-69-118-222.hsd1.nh.comcast.net. [73.69.118.222])
        by smtp.gmail.com with ESMTPSA id u199-v6sm4844999qka.47.2018.11.09.16.11.17
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Fri, 09 Nov 2018 16:11:18 -0800 (PST)
Date: Fri, 9 Nov 2018 19:11:16 -0500
From: Pavel Tatashin <pasha.tatashin@soleen.com>
To: Alexander Duyck <alexander.h.duyck@linux.intel.com>
Cc: akpm@linux-foundation.org, linux-mm@kvack.org,
        sparclinux@vger.kernel.org, linux-kernel@vger.kernel.org,
        linux-nvdimm@lists.01.org, davem@davemloft.net,
        pavel.tatashin@microsoft.com, mhocko@suse.com, mingo@kernel.org,
        kirill.shutemov@linux.intel.com, dan.j.williams@intel.com,
        dave.jiang@intel.com, rppt@linux.vnet.ibm.com, willy@infradead.org,
        vbabka@suse.cz, khalid.aziz@oracle.com, ldufour@linux.vnet.ibm.com,
        mgorman@techsingularity.net, yi.z.zhang@linux.intel.com
Subject: Re: [mm PATCH v5 3/7] mm: Implement new zone specific memblock
 iterator
Message-ID: <20181110001116.gtg7vxz2erbrnxc2@xakep.localdomain>
References: <154145268025.30046.11742652345962594283.stgit@ahduyck-desk1.jf.intel.com>
 <154145278071.30046.9022571960145979137.stgit@ahduyck-desk1.jf.intel.com>
 <20181109232654.bi37bdkrqbogbdcx@xakep.localdomain>
 <d511ee6a18da13b9543557db783e6ff3327ca87b.camel@linux.intel.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <d511ee6a18da13b9543557db783e6ff3327ca87b.camel@linux.intel.com>
User-Agent: NeoMutt/20180716
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBnS0dAIuZbN7skAA--.3291S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW7CF1DZry8JF4xGFy7ZryDAwb_yoW8uw4fpw
	s3KF92kw4kXry0k34Ivrs3KF1Fy348Jr43JFsxX34xAFZ8trnaqF98tr4Yqr17ArZ3XFWY
	vw4jqr9xGF98Z3DanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPFb7Iv0xC_Zr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK
	6IIF6w1lc2IjII80xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26r1I6r4UMxvI42IY6x
	IIjxv20xvEc7CjxVAFwI0_Jr0_Gr1lcIIF0xvEx4A2jsIE14v26r4UJVWxJr1lcIIF0xvE
	x4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26cxK6c
	8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v26r1j
	6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_GFv_WrylIxkGc2Ij64
	vIr41lIxAIcVCF04k26cxKx2IYs7xG6Fyj6rWUJbIYCTnIWIevJa73UjIFyTuYvjxUgq2N
	DUUUU

> > > +		unsigned long epfn = PFN_DOWN(epa);
> > > +		unsigned long spfn = PFN_UP(spa);
> > > +
> > > +		/*
> > > +		 * Verify the end is at least past the start of the zone and
> > > +		 * that we have at least one PFN to initialize.
> > > +		 */
> > > +		if (zone->zone_start_pfn < epfn && spfn < epfn) {
> > > +			/* if we went too far just stop searching */
> > > +			if (zone_end_pfn(zone) <= spfn)
> > > +				break;
> > 
> > Set *idx = U64_MAX here, then break. This way after we are outside this
> > while loop idx is always equals to U64_MAX.
> 
> Actually I think what you are asking for is the logic that is outside
> of the while loop we are breaking out of. So if you check at the end of
> the function there is the bit of code with the comment "signal end of
> iteration" where I end up setting *idx to ULLONG_MAX, *out_spfn to
> ULONG_MAX, and *out_epfn to 0.
> 
> The general idea I had with the function is that you could use either
> the index or spfn < epfn checks to determine if you keep going or not.

Yes, I meant to remove that *idx = U64_MAX after the loop, it is
confusing to have a loop:

while (*idx != U64_MAX) {
	...
}

*idx = U64_MAX;


So, it is better to set idx to U643_MAX inside the loop before the
break.

> 
> > 
> > > +
> > > +			if (out_spfn)
> > > +				*out_spfn = max(zone->zone_start_pfn, spfn);
> > > +			if (out_epfn)
> > > +				*out_epfn = min(zone_end_pfn(zone), epfn);
> > 
> > Don't we need to verify after adjustment that out_spfn != out_epfn, so
> > there is at least one PFN to initialize?
> 
> We have a few checks that I believe prevent that. Before we get to this
> point we have verified the following:
> 	zone->zone_start < epfn
> 	spfn < epfn
> 
> The other check that should be helping to prevent that is the break
> statement above that is forcing us to exit if spfn is somehow already
> past the end of the zone, that essentially maps out:
> 	spfn < zone_end_pfn(zone)
> 
> So the only check we don't have is:
> 	zone->zone_start < zone_end_pfn(zone)
> 
> If I am not mistaken that is supposed to be a given is it not? I would
> assume we don't have any zones that are completely empty or inverted
> that would be called here do we?


if (zone_end_pfn(zone) <= spfn) won't break

Equal sign in <= here takes care of the case I was thinking. Yes, logic looks good.

Thank you
Pasha
