Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 12 Nov 2018 00:46:04 -0000
Received: from icoremail.net (unknown [209.85.210.172])
	by mail-app2 (Coremail) with SMTP id by_KCgD3__sBxuhb9uZ4AQ--.36609S3;
	Mon, 12 Nov 2018 08:14:58 +0800 (CST)
Received: from mail-pf1-f172.google.com (unknown [209.85.210.172])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBn4Ez_xehbK8wuAA--.1232S3;
	Mon, 12 Nov 2018 08:14:55 +0800 (CST)
Received: by mail-pf1-f172.google.com with SMTP id u3-v6so732007pfm.4
        for <xuliker@zju.edu.cn>; Sun, 11 Nov 2018 16:14:55 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=4pbU0HnWFds+4LHqY+ZC4fpU4ICIhQIy8hSGmjCBXTc=;
        b=ierSbwH1Cfshjq/2in+pRhTGv0GRILFLLZ7zR2Yyn7E1zLSHJcTyVM34smGkUr3/Rf
         zqsSTNF9OO2PLO/HSiBrYlhYAXilKgAk6GGUuMTfP2BfvSw+jnwyXwlGPMnpH7kZ77zo
         D7P0ajBDQR08zYNc1mpAwWHi3MbtE2FzVq9IHUxoRWopLC1OXnPtcw3K2T3f9MwE8wE0
         MIwCtj9c3QfSBzDwmMjMVt65byQWYtnQBEqyFSPttlsli4Ar4ZCKkKRxfpgekrvKmrl+
         OmavwfQe0+XwUIMWoL9kyMkYpYo8HYcrF3J+MTrflUJEJr8nPHf1Vu+K4oK3WvQHVNZw
         e7KQ==
X-Gm-Message-State: AGRZ1gJxiQzWE8bEC5esTlxdM4ku1Gyck3wjHARjGUVugp5lbXsjnuFv
	ih+D8RAm0QJfyIWQk3l9lcmE7OerQPMYFWbGLGTeaXlLLXite5I=
X-Received: by 2002:a62:6241:: with SMTP id w62-v6mr6029347pfb.69.1541981695521;
        Sun, 11 Nov 2018 16:14:55 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp2594382pjt;
        Sun, 11 Nov 2018 16:14:54 -0800 (PST)
X-Google-Smtp-Source: AJdET5eNngKha5IctGrP4Xj9uUN2plq3aF4PgkGVGFuHBTGotgOuhPhHRv+V79qpozImmxEDL3hL
X-Received: by 2002:a63:ef47:: with SMTP id c7mr15714557pgk.386.1541981694202;
        Sun, 11 Nov 2018 16:14:54 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541981694; cv=none;
        d=google.com; s=arc-20160816;
        b=FVDP4x1q/wz6B87QgRS1gKuQ0RLh6FltBOQuGL572N8KpOQAzKHQNp0p/aXuP+VX+t
         TQi5nchwaA3LUICFX82eoBpZ99dd5u1AGBAwChIDPazkYgnaUfIN/SAfOBj8n1qz3su8
         bXbGZPKNQUdaFOH1mnAr3i8D9xzT2y8jJLFZzeTkkInYhYvT6VBgfzSOPU17OHn9/sat
         igp+Sv1fLvJssikx8gQGo+oklR5BB90Lk24Hm8y5pJr0ok+JwdmNCqmM6VBRsqGZQdOt
         nY9KlPmicJvCdh1QSFCjBZcKsjX4ESFNdXfSWiUlTHY0ssPq77kjVVo3MmT71rtneaX+
         QJhA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=4pbU0HnWFds+4LHqY+ZC4fpU4ICIhQIy8hSGmjCBXTc=;
        b=aOgxoGO03bdjEEVINWLBIgpwB9ABXwumRL40Y0oWEwWVYNyx7BDgjPUi+bTt3zp7+y
         CEBplC4jIkJu25Zx+v9xLn+xDBCAK2yr7TGk1FtgmX9sihDMxcsP/Zlszk39W/Ib2YvN
         OyH5Ka16i5028T4vb6BucuTpgINvQWFjDPB1iYoPlJRjraubJlPHNAySkzylvYnD+sOF
         cZq8Fp2lVYH6lBcZXbddSDfIWsEpSNjfrMqTi9oRzqb52RVG60ZdXULwVedFEsYWUQWp
         4EoCG1Ry0HgrW54QlysDhQjDJ2FrnKRQy92FqCebTkIM/GlmAVpBVThVQ135TzRIq9Zz
         z4PA==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b=h7D6KKAm;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id a4-v6si17325381pln.67.2018.11.11.16.14.39;
        Sun, 11 Nov 2018 16:14:54 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730417AbeKLIRN (ORCPT <rfc822;berg.ding@gmail.com> + 99 others);
        Mon, 12 Nov 2018 03:17:13 -0500
Received: from mail.kernel.org ([198.145.29.99]:59922 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1730203AbeKLIRM (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 12 Nov 2018 03:17:12 -0500
Received: from localhost (unknown [206.108.79.134])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 1F390223CB;
        Sun, 11 Nov 2018 22:27:17 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1541975237;
        bh=x6QAcJOEGBa61Bd+4mtno+kSNyRpjWJKCdKf+wMZhsY=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=h7D6KKAmjT/eHcjw/a6TGWVT9c0gtUvJM8j4K5huZR0KmcWT9juYBhk0yYyXPjy4y
         7ELtpBGaUBYM0vKYiGwIMsR8TcxSQAcRScJuXi/uFfre5ZYk+Z3beckRisboIpF3O8
         a6o7BW714oUikoVcE5aN3UiNkk/SxrZXhiotZXH8=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Shaul Triebitz <shaul.triebitz@intel.com>,
        Luca Coelho <luciano.coelho@intel.com>,
        Sasha Levin <sashal@kernel.org>
Subject: [PATCH 4.19 073/361] iwlwifi: pcie: avoid empty free RB queue
Date: Sun, 11 Nov 2018 14:17:00 -0800
Message-Id: <20181111221630.228724642@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181111221619.915519183@linuxfoundation.org>
References: <20181111221619.915519183@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBn4Ez_xehbK8wuAA--.1232S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxGw4kGrykXrWxWr18tw1xAFb_yoWrGFykpr
	43C34akFn5XrsrurnxAa1rC3Z8Xan3WF1DWFZagwn3ur95Ar1rGa97JF10vFy8AF4xXrW5
	uF1jvw4fCF4UZ37anT9S1TB71UUUUUJqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUmFb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26rxl6s0DM28EF7xvwVC2z280aVCY1x0267AKxVW0oVCq3wAaw2AFwI0_Jr
	v_JF1le2I262IYc4CY6c8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E
	2Ix0cI8IcVAFwI0_JF0_Jw1lYx0Ex4A2jsIE14v26F4j6r4UJwAm72CE4IkC6x0Yz7v_Jr
	0_Gr1lF7xvr2IYc2Ij64vIr41l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAv
	wVCFzxkY4VCF77xAMxkIecxEwVCI4VWDMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2
	IY67AKxVWDJVCq3wCYIxAIcVC0I7IYx2IY6xkF7I0E14v26r4UJVWxJr1lcIIF0xvEx4A2
	jsIE14v26rxl6s0DMxvI42IY6I8E87Iv6xkF7I0E14v26rxl6s0DMxAIw28IcxkI7VAKI4
	8JMxAIw28IcVAKzI0EY4vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4U
	MI8I3I0E5I8CrVAFwI0_Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67
	AKxVWUAVWUtwCIc40Y0x0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Jr0_JF7vcSsGvfC2
	KfnxnUUI43ZEXa7IUOm_MDUUUUU==

4.19-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Shaul Triebitz <shaul.triebitz@intel.com>

[ Upstream commit 868a1e863f95183f00809363fefba6d4f5bcd116 ]

If all free RB queues are empty, the driver will never restock the
free RB queue.  That's because the restocking happens in the Rx flow,
and if the free queue is empty there will be no Rx.

Although there's a background worker (a.k.a. allocator) allocating
memory for RBs so that the Rx handler can restock them, the worker may
run only after the free queue has become empty (and then it is too
late for restocking as explained above).

There is a solution for that called 'emergency': If the number of used
RB's reaches half the amount of all RB's, the Rx handler will not wait
for the allocator but immediately allocate memory for the used RB's
and restock the free queue.

But, since the used RB's is per queue, it may happen that the used
RB's are spread between the queues such that the emergency check will
fail for each of the queues
(and still run out of RBs, causing the above symptom).

To fix it, move to emergency mode if the sum of *all* used RBs (for
all Rx queues) reaches half the amount of all RB's

Signed-off-by: Shaul Triebitz <shaul.triebitz@intel.com>
Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
Signed-off-by: Sasha Levin <sashal@kernel.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---
 drivers/net/wireless/intel/iwlwifi/pcie/rx.c |   32 +++++++++++++++++----------
 1 file changed, 21 insertions(+), 11 deletions(-)

--- a/drivers/net/wireless/intel/iwlwifi/pcie/rx.c
+++ b/drivers/net/wireless/intel/iwlwifi/pcie/rx.c
@@ -1144,6 +1144,14 @@ void iwl_pcie_rx_free(struct iwl_trans *
 	kfree(trans_pcie->rxq);
 }
 
+static void iwl_pcie_rx_move_to_allocator(struct iwl_rxq *rxq,
+					  struct iwl_rb_allocator *rba)
+{
+	spin_lock(&rba->lock);
+	list_splice_tail_init(&rxq->rx_used, &rba->rbd_empty);
+	spin_unlock(&rba->lock);
+}
+
 /*
  * iwl_pcie_rx_reuse_rbd - Recycle used RBDs
  *
@@ -1175,9 +1183,7 @@ static void iwl_pcie_rx_reuse_rbd(struct
 	if ((rxq->used_count % RX_CLAIM_REQ_ALLOC) == RX_POST_REQ_ALLOC) {
 		/* Move the 2 RBDs to the allocator ownership.
 		 Allocator has another 6 from pool for the request completion*/
-		spin_lock(&rba->lock);
-		list_splice_tail_init(&rxq->rx_used, &rba->rbd_empty);
-		spin_unlock(&rba->lock);
+		iwl_pcie_rx_move_to_allocator(rxq, rba);
 
 		atomic_inc(&rba->req_pending);
 		queue_work(rba->alloc_wq, &rba->rx_alloc);
@@ -1396,10 +1402,18 @@ restart:
 		IWL_DEBUG_RX(trans, "Q %d: HW = SW = %d\n", rxq->id, r);
 
 	while (i != r) {
+		struct iwl_rb_allocator *rba = &trans_pcie->rba;
 		struct iwl_rx_mem_buffer *rxb;
-
-		if (unlikely(rxq->used_count == rxq->queue_size / 2))
+		/* number of RBDs still waiting for page allocation */
+		u32 rb_pending_alloc =
+			atomic_read(&trans_pcie->rba.req_pending) *
+			RX_CLAIM_REQ_ALLOC;
+
+		if (unlikely(rb_pending_alloc >= rxq->queue_size / 2 &&
+			     !emergency)) {
+			iwl_pcie_rx_move_to_allocator(rxq, rba);
 			emergency = true;
+		}
 
 		rxb = iwl_pcie_get_rxb(trans, rxq, i);
 		if (!rxb)
@@ -1421,17 +1435,13 @@ restart:
 			iwl_pcie_rx_allocator_get(trans, rxq);
 
 		if (rxq->used_count % RX_CLAIM_REQ_ALLOC == 0 && !emergency) {
-			struct iwl_rb_allocator *rba = &trans_pcie->rba;
-
 			/* Add the remaining empty RBDs for allocator use */
-			spin_lock(&rba->lock);
-			list_splice_tail_init(&rxq->rx_used, &rba->rbd_empty);
-			spin_unlock(&rba->lock);
+			iwl_pcie_rx_move_to_allocator(rxq, rba);
 		} else if (emergency) {
 			count++;
 			if (count == 8) {
 				count = 0;
-				if (rxq->used_count < rxq->queue_size / 3)
+				if (rb_pending_alloc < rxq->queue_size / 3)
 					emergency = false;
 
 				rxq->read = i;

