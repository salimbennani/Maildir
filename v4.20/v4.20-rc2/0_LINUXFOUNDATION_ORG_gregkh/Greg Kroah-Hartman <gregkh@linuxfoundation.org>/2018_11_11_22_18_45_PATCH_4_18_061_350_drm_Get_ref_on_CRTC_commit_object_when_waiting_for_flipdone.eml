Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 12 Nov 2018 00:44:55 -0000
Received: from icoremail.net (unknown [209.85.210.174])
	by mail-app2 (Coremail) with SMTP id by_KCgD3_ycVvuhbJb54AQ--.36603S3;
	Mon, 12 Nov 2018 07:41:10 +0800 (CST)
Received: from mail-pf1-f174.google.com (unknown [209.85.210.174])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBnTUkTvuhb+7IuAA--.6157S3;
	Mon, 12 Nov 2018 07:41:07 +0800 (CST)
Received: by mail-pf1-f174.google.com with SMTP id g7-v6so3374113pfo.10
        for <xuliker@zju.edu.cn>; Sun, 11 Nov 2018 15:41:07 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=1ZAt2rl/IGofuepuYI+89OlpOTHeAYN0vMhHTs92kGI=;
        b=KlK+ISlY/kJUxvSJHgnZOa+LhOSw6gJ++4NF5mo38eQOFhafMP4zCnwEWk1TjbWkMY
         AoJy2po0WUgOcRMu1B5VYTQcYT3KCSOukDRak+VcfzKuKsFPypckcYlVVdteJs1p1kKY
         LP6fbbgFW+a3hijuQgRVvcbZIkrSn16zGUe0gTtc5R3KQOkiY1XeTFS0VsUKuoikowBY
         +Q6V8OmMgJm6GY9lRapCt7p5QuGJIMflcKoXRO3CNOXR2g/tKH3gtMwQ7bmpNAEPbY+P
         lbgORBy1H6LAB5Fmiqi37Wir2LnAaDp0l9B6aOnF1sVhvuZ64pGqpe00Ckr+wG5FdiJl
         j8xA==
X-Gm-Message-State: AGRZ1gKSp6+Rt4jGo0PqDrMxJOlXjl62miaKRBHbaY+ivRlX5avG+6Ck
	cbJBeyNegO2Kx7UI8RRUxWHoBIbl8TfbcdSHZuLkqQghMfEw7to=
X-Received: by 2002:a63:1d10:: with SMTP id d16-v6mr14997037pgd.228.1541979667409;
        Sun, 11 Nov 2018 15:41:07 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp2570428pjt;
        Sun, 11 Nov 2018 15:41:06 -0800 (PST)
X-Google-Smtp-Source: AJdET5ePSBp5lO7/767XTHlfoV7mplUBPw8MdIN2oA+kL3qso56U0nDQThyHlZ3BuhccmSl0hShN
X-Received: by 2002:a17:902:7c0a:: with SMTP id x10-v6mr10527447pll.263.1541979666558;
        Sun, 11 Nov 2018 15:41:06 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541979666; cv=none;
        d=google.com; s=arc-20160816;
        b=cwKX3b25NcyYDXj0mQr4MICJP+EOk/8aY1Hd+Wh/ISN90Q711rz1n6BfuoKKuBvGcp
         RDcClPFZlHNtJjMEzYsOkm5Sx+phIH7wcZpWbJUaNaZtTDISVfBpQbp98zsFiehUtHLA
         Y+6/NJ/oxerifjSVHbw0DWOh3ZH97f/MpSNuM5waDgtRQnyTE4H/wCYGmoy4jkQYUo/u
         7dVeyNlGYoIZP4zsrk4cbMiTa8Ze/M1/4CWV8ZUL/oV5+urBfkGxzmJlQJzLYITJSKzS
         IlV0qaaaerUz4H8llXksRmIHU1sGr/OlNCgYKgzbNt1+Z/9aTkYhK33+EhKLTyO51j3E
         yBRA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=1ZAt2rl/IGofuepuYI+89OlpOTHeAYN0vMhHTs92kGI=;
        b=KP7Y3ECTGO6w/HpyWERmnYTaMcGDOiOtiymoXN9aANAOp4Kp2xmwJflO4U3G2V/rmG
         MsMvRXD5jnd4YKTRXZE+g0pBnfOuN1xbyp2YC2yTUUxjYalPIvyksJLqYaiRxN12JCdJ
         Sn/eAnshIhylW56e1E+7hWs+GVKytN5HmCFK+jxvtBieJaz2endlCLRp/uULV8ExmYmj
         TPsIwE0APBBKVzmoLk9XSbIEiTVaCDjIEJaAzzzZJkMTUqr7rDtn4c3oxIsQivGJE3i6
         1D5X5RDQiafhW679/Mr8KRkqR5rH8OIUeUq6/JKHRHVvpil0pSSiVsNNbxyFikIW9/q4
         xZ5A==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b=XwbIdcGv;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id j20si14903963pgh.224.2018.11.11.15.40.51;
        Sun, 11 Nov 2018 15:41:06 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2388123AbeKLJbB (ORCPT <rfc822;berg.ding@gmail.com> + 99 others);
        Mon, 12 Nov 2018 04:31:01 -0500
Received: from mail.kernel.org ([198.145.29.99]:41548 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S2387904AbeKLITl (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 12 Nov 2018 03:19:41 -0500
Received: from localhost (unknown [206.108.79.134])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 1FB292154B;
        Sun, 11 Nov 2018 22:29:45 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1541975385;
        bh=aB+UJ66iSgjK+b8I4lwRWcrg/IApkOR3Hff6KCjuZL8=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=XwbIdcGvUJhaLNz+tcJ6rwDCat28WV8aLwAdZxmmluU3HdV8oe3GvpoNS/Ed3+0YB
         DUiyLeIOUvtbCUBxt0Kh7KiHNhyVLZ5RIJYJLEzm7zx83xXruhTo0BAZHZ2HYvITE2
         Ckj9amqHZjmdHDYIccOvZkPz82QXoKspCsnVkjec=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Leo Li <sunpeng.li@amd.com>,
        Daniel Vetter <daniel.vetter@ffwll.ch>,
        Harry Wentland <harry.wentland@amd.com>,
        Sasha Levin <sashal@kernel.org>
Subject: [PATCH 4.18 061/350] drm: Get ref on CRTC commit object when waiting for flip_done
Date: Sun, 11 Nov 2018 14:18:45 -0800
Message-Id: <20181111221709.703299916@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181111221707.043394111@linuxfoundation.org>
References: <20181111221707.043394111@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBnTUkTvuhb+7IuAA--.6157S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3Gw4rZF1DKr1DZryfGrWrAFb_yoW7AryrpF
	W3G347Kw4FqF4jyF9rJ3WI9as8CanIy347WrWUtw1fZr4kKr1rGFZ7trsxZFWDArZ7J345
	tF1Iyrya9w4j9rUanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPIb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26rxl6s0DM28EF7xvwVC2z280aVCY1x0267AKxVW0oVCq3wAS0I0E0xvYzx
	vE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AKxVWU
	AVWUtwAv7VC2z280aVAFwI0_Gr0_Cr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcxkI7V
	AKI48JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE44CYbxCE4x80FwCY
	02Avz4vEIxC_uwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_tr0E3s1lcI
	IF0xvE2Ix0cI8IcVCY1x0267AKxVW8Jr0_Cr1UMxvI42IY6I8E87Iv67AKxVW0oVCq3wCY
	IxAIcVC2z280aVCY1x0267AKxVW0oVCq3wCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26c
	xK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v2
	6r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_Jw0_GFylIxkGc2
	Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6r1j6r1xYxBIdaVFxhVjvjDU0xZFpf9x07bL
	xRgUUUUU=

4.18-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Leo Li <sunpeng.li@amd.com>

[ Upstream commit 4364bcb2cd21d042bde4776448417ddffbc54045 ]

This fixes a general protection fault, caused by accessing the contents
of a flip_done completion object that has already been freed. It occurs
due to the preemption of a non-blocking commit worker thread W by
another commit thread X. X continues to clear its atomic state at the
end, destroying the CRTC commit object that W still needs. Switching
back to W and accessing the commit objects then leads to bad results.

Worker W becomes preemptable when waiting for flip_done to complete. At
this point, a frequently occurring commit thread X can take over. Here's
an example where W is a worker thread that flips on both CRTCs, and X
does a legacy cursor update on both CRTCs:

        ...
     1. W does flip work
     2. W runs commit_hw_done()
     3. W waits for flip_done on CRTC 1
     4. > flip_done for CRTC 1 completes
     5. W finishes waiting for CRTC 1
     6. W waits for flip_done on CRTC 2

     7. > Preempted by X
     8. > flip_done for CRTC 2 completes
     9. X atomic_check: hw_done and flip_done are complete on all CRTCs
    10. X updates cursor on both CRTCs
    11. X destroys atomic state
    12. X done

    13. > Switch back to W
    14. W waits for flip_done on CRTC 2
    15. W raises general protection fault

The error looks like so:

    general protection fault: 0000 [#1] PREEMPT SMP PTI
    **snip**
    Call Trace:
     lock_acquire+0xa2/0x1b0
     _raw_spin_lock_irq+0x39/0x70
     wait_for_completion_timeout+0x31/0x130
     drm_atomic_helper_wait_for_flip_done+0x64/0x90 [drm_kms_helper]
     amdgpu_dm_atomic_commit_tail+0xcae/0xdd0 [amdgpu]
     commit_tail+0x3d/0x70 [drm_kms_helper]
     process_one_work+0x212/0x650
     worker_thread+0x49/0x420
     kthread+0xfb/0x130
     ret_from_fork+0x3a/0x50
    Modules linked in: x86_pkg_temp_thermal amdgpu(O) chash(O)
    gpu_sched(O) drm_kms_helper(O) syscopyarea sysfillrect sysimgblt
    fb_sys_fops ttm(O) drm(O)

Note that i915 has this issue masked, since hw_done is signaled after
waiting for flip_done. Doing so will block the cursor update from
happening until hw_done is signaled, preventing the cursor commit from
destroying the state.

v2: The reference on the commit object needs to be obtained before
    hw_done() is signaled, since that's the point where another commit
    is allowed to modify the state. Assuming that the
    new_crtc_state->commit object still exists within flip_done() is
    incorrect.

    Fix by getting a reference in setup_commit(), and releasing it
    during default_clear().

Signed-off-by: Leo Li <sunpeng.li@amd.com>
Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
Signed-off-by: Harry Wentland <harry.wentland@amd.com>
Link: https://patchwork.freedesktop.org/patch/msgid/1539611200-6184-1-git-send-email-sunpeng.li@amd.com
Signed-off-by: Sasha Levin <sashal@kernel.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---
 drivers/gpu/drm/drm_atomic.c        |    5 +++++
 drivers/gpu/drm/drm_atomic_helper.c |   12 ++++++++----
 include/drm/drm_atomic.h            |   11 +++++++++++
 3 files changed, 24 insertions(+), 4 deletions(-)

--- a/drivers/gpu/drm/drm_atomic.c
+++ b/drivers/gpu/drm/drm_atomic.c
@@ -173,6 +173,11 @@ void drm_atomic_state_default_clear(stru
 		state->crtcs[i].state = NULL;
 		state->crtcs[i].old_state = NULL;
 		state->crtcs[i].new_state = NULL;
+
+		if (state->crtcs[i].commit) {
+			drm_crtc_commit_put(state->crtcs[i].commit);
+			state->crtcs[i].commit = NULL;
+		}
 	}
 
 	for (i = 0; i < config->num_total_plane; i++) {
--- a/drivers/gpu/drm/drm_atomic_helper.c
+++ b/drivers/gpu/drm/drm_atomic_helper.c
@@ -1384,15 +1384,16 @@ EXPORT_SYMBOL(drm_atomic_helper_wait_for
 void drm_atomic_helper_wait_for_flip_done(struct drm_device *dev,
 					  struct drm_atomic_state *old_state)
 {
-	struct drm_crtc_state *new_crtc_state;
 	struct drm_crtc *crtc;
 	int i;
 
-	for_each_new_crtc_in_state(old_state, crtc, new_crtc_state, i) {
-		struct drm_crtc_commit *commit = new_crtc_state->commit;
+	for (i = 0; i < dev->mode_config.num_crtc; i++) {
+		struct drm_crtc_commit *commit = old_state->crtcs[i].commit;
 		int ret;
 
-		if (!commit)
+		crtc = old_state->crtcs[i].ptr;
+
+		if (!crtc || !commit)
 			continue;
 
 		ret = wait_for_completion_timeout(&commit->flip_done, 10 * HZ);
@@ -1906,6 +1907,9 @@ int drm_atomic_helper_setup_commit(struc
 		drm_crtc_commit_get(commit);
 
 		commit->abort_completion = true;
+
+		state->crtcs[i].commit = commit;
+		drm_crtc_commit_get(commit);
 	}
 
 	for_each_oldnew_connector_in_state(state, conn, old_conn_state, new_conn_state, i) {
--- a/include/drm/drm_atomic.h
+++ b/include/drm/drm_atomic.h
@@ -153,6 +153,17 @@ struct __drm_planes_state {
 struct __drm_crtcs_state {
 	struct drm_crtc *ptr;
 	struct drm_crtc_state *state, *old_state, *new_state;
+
+	/**
+	 * @commit:
+	 *
+	 * A reference to the CRTC commit object that is kept for use by
+	 * drm_atomic_helper_wait_for_flip_done() after
+	 * drm_atomic_helper_commit_hw_done() is called. This ensures that a
+	 * concurrent commit won't free a commit object that is still in use.
+	 */
+	struct drm_crtc_commit *commit;
+
 	s32 __user *out_fence_ptr;
 	u64 last_vblank_count;
 };

