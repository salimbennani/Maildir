Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 12 Nov 2018 00:43:25 -0000
Received: from icoremail.net (unknown [209.85.210.175])
	by mail-app2 (Coremail) with SMTP id by_KCgDXv35ssuhbJYN4AQ--.37138S3;
	Mon, 12 Nov 2018 06:51:24 +0800 (CST)
Received: from mail-pf1-f175.google.com (unknown [209.85.210.175])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwDnvTlpsuhbcpcuAA--.6146S3;
	Mon, 12 Nov 2018 06:51:21 +0800 (CST)
Received: by mail-pf1-f175.google.com with SMTP id v9-v6so3349812pff.2
        for <xuliker@zju.edu.cn>; Sun, 11 Nov 2018 14:51:21 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=+VB1+ktnymKG+GbvJ3CVLNxY0oogZBhMar9GQfqzvQo=;
        b=uju/b4F5q7H5+rZkWOoBUCHOE15L0EJyx5L2mrAw+ANHoFdANXlpTzSrIJbxBg5CVg
         xJ6BPIFsv8Asl616YiDQfAXz+lCpAwYuO3smnaNh+RByFuXp+x2oCTJbLwcXLoOL1mY5
         bhh/ZzFH2HUbEcgoa1hchR7Vc2C4T80iioZkR3E0W8ol35wwEpIe4rnJJ6UkYSIpWE2Y
         cWZn1jwH3NYC5DKeWsiZZRBZepFHun9u5JRSTdPhPuUi/TAv3ldpYAq20ynsDImeLz1v
         1fykW7MaPT59anbuMjNCQKh2DeOwBHorXgCgtTZjRxs4TZhXY7CwwL8yMN6gStlq3E/M
         WBoQ==
X-Gm-Message-State: AGRZ1gLJ6iRk4D4jNC/72NtqWUNhd3KIt0EazgFbNqrtWiljFo1f4xON
	ClQn+LktfrtQpghKmzrCWiAJFlB8ontcfr86FujQLorKGZL9/G4=
X-Received: by 2002:a63:2315:: with SMTP id j21mr15520190pgj.297.1541976681284;
        Sun, 11 Nov 2018 14:51:21 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp2535439pjt;
        Sun, 11 Nov 2018 14:51:20 -0800 (PST)
X-Google-Smtp-Source: AJdET5dxTiRcpIemv7q62WFNXhfWC5PiK7HxUrDSeRfWxEk4X3rluekyQF7eEf6EJBtuFaFAaU/9
X-Received: by 2002:a17:902:887:: with SMTP id 7-v6mr9784931pll.283.1541976680531;
        Sun, 11 Nov 2018 14:51:20 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541976680; cv=none;
        d=google.com; s=arc-20160816;
        b=CsxlVtH3LtdDl+VvS8YFKRae0m/ye2HfBWNxVyGkcOozEx49SzsgQB3xwyLKL0aCTn
         AnV9U9OgIfUIxgrUow/W1wcigqGLm65OwwE5snBrs7cXt6DJM/BICnRK8oZHewaZ6C0M
         +74a7AVnWsaorCEsHrpuf20KdmBqUKg+bCy3wHq4TDSDfDADOO2Ewg1dTl4lcvGhm5Pb
         xtTG6eRIOn1Zvm6egqsKdoWMyR5GWMkXkD0qs2//a7/ZNuk/hC4gLruY8NxzN8knew67
         gdGQWLeqGE9g6KbiF2kWxuC+i5xC7jmw6aQsWYwUGt2QMRug+PKoFz3ua1gllcue+iiq
         yMyg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=+VB1+ktnymKG+GbvJ3CVLNxY0oogZBhMar9GQfqzvQo=;
        b=EWStQPRskDrkl5DW7jEJetIh7Tt0iazFjiZMBXcQuZ9OgZgx8HIyiSQIk4AzmjZahk
         QLOTdksV2JLpamAIxOj/m6pururp9k+PK9RFO2nI4xzlGrWCdWloUBgdqs/lctgt2GHL
         56IYhDAyitPqczC6gmK/GER+iM2xpxJiO54sdfT4SQqIepZ/CsHblESQ6GfojVr+XesS
         7vAZQToCdgVwZfr+PYd2kappRyBpMrjDiwct9hNtq1mt0NPhk33Hiob4mSqaROArKO/6
         aqAi0On11DUqi0durtogaM7z/mQNnnxjH04S0uNKQsS8ctSYk49q3Yq7z8DCPZaECRYE
         lCiw==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b=qegODw9+;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id o186-v6si17376926pfo.236.2018.11.11.14.51.05;
        Sun, 11 Nov 2018 14:51:20 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2404196AbeKLIXI (ORCPT <rfc822;berg.ding@gmail.com> + 99 others);
        Mon, 12 Nov 2018 03:23:08 -0500
Received: from mail.kernel.org ([198.145.29.99]:54672 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S2404173AbeKLIXH (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 12 Nov 2018 03:23:07 -0500
Received: from localhost (unknown [206.108.79.134])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id E053E223D8;
        Sun, 11 Nov 2018 22:33:09 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1541975590;
        bh=XCgKS9PQP3X9G2Zl/lVFMGAB4jZDGZsrsV35lZ52LPo=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=qegODw9+zu4xV9/KbWLeZu3fAtr1jH3/Mt11yg0AlNYTALoIJ5q2QcZ7cmCw3Hvmx
         Y6VjFKtBCJIlMULtuZrfMU40dyn5mp1fyuAxJsUbGysInuD7OxLWsQ2dDM43J+OwFj
         PZN+aL/aprOsuRSgQOQTkArmh0BfrGpGhP8glu/4=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Chris Murphy <lists@colorremedies.com>,
        Qu Wenruo <wqu@suse.com>, David Sterba <dsterba@suse.com>
Subject: [PATCH 4.14 200/222] btrfs: Enhance btrfs_trim_fs function to handle error better
Date: Sun, 11 Nov 2018 14:24:57 -0800
Message-Id: <20181111221704.644686691@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181111221647.665769131@linuxfoundation.org>
References: <20181111221647.665769131@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwDnvTlpsuhbcpcuAA--.6146S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxAF47JF4kZF4rCF1xCr15urg_yoWrAFyfpF
	ZIk3ZxKr4rW3s7G3WfGw1Fqw1rK3ykGa15G3sxG34S9343GryYgrZFyw1ruryrKFykJF47
	XF4UZ34rKFnFkrJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPSb7Iv0xC_KF4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26rxl6s0DM28EF7xvwVC2z280aVCY1x0267AKxVW0oVCq3wAS0I0E0xvYzx
	vE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AKxVWU
	AVWUtwAv7VC2z280aVAFwI0_Gr0_Cr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcxkI7V
	AKI48JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE44CYbxCE4x80FwCY
	02Avz4vEIxC_ZwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_tr0E3s1lcI
	IF0xvE2Ix0cI8IcVCY1x0267AKxVW8Jr0_Cr1UMxvI42IY6I8E87Iv67AKxVWxJr0_GcWl
	cIIF0xvEx4A2jsIEc7CjxVAFwI0_Cr1j6rxdMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI
	0EY4vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAF
	wI0_Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUAVWUtwCIc4
	0Y0x0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_JFI_GrUvcSsGvfC2KfnxnUUI43ZEXa7I
	U56xR3UUUUU==

4.14-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Qu Wenruo <wqu@suse.com>

commit 93bba24d4b5ad1e5cd8b43f64e66ff9d6355dd20 upstream.

Function btrfs_trim_fs() doesn't handle errors in a consistent way. If
error happens when trimming existing block groups, it will skip the
remaining blocks and continue to trim unallocated space for each device.

The return value will only reflect the final error from device trimming.

This patch will fix such behavior by:

1) Recording the last error from block group or device trimming
   The return value will also reflect the last error during trimming.
   Make developer more aware of the problem.

2) Continuing trimming if possible
   If we failed to trim one block group or device, we could still try
   the next block group or device.

3) Report number of failures during block group and device trimming
   It would be less noisy, but still gives user a brief summary of
   what's going wrong.

Such behavior can avoid confusion for cases like failure to trim the
first block group and then only unallocated space is trimmed.

Reported-by: Chris Murphy <lists@colorremedies.com>
CC: stable@vger.kernel.org # 4.4+
Signed-off-by: Qu Wenruo <wqu@suse.com>
Reviewed-by: David Sterba <dsterba@suse.com>
[ add bg_ret and dev_ret to the messages ]
Signed-off-by: David Sterba <dsterba@suse.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

---
 fs/btrfs/extent-tree.c |   49 ++++++++++++++++++++++++++++++++++++++-----------
 1 file changed, 38 insertions(+), 11 deletions(-)

--- a/fs/btrfs/extent-tree.c
+++ b/fs/btrfs/extent-tree.c
@@ -11037,6 +11037,15 @@ static int btrfs_trim_free_extents(struc
 	return ret;
 }
 
+/*
+ * Trim the whole filesystem by:
+ * 1) trimming the free space in each block group
+ * 2) trimming the unallocated space on each device
+ *
+ * This will also continue trimming even if a block group or device encounters
+ * an error.  The return value will be the last error, or 0 if nothing bad
+ * happens.
+ */
 int btrfs_trim_fs(struct btrfs_fs_info *fs_info, struct fstrim_range *range)
 {
 	struct btrfs_block_group_cache *cache = NULL;
@@ -11047,6 +11056,10 @@ int btrfs_trim_fs(struct btrfs_fs_info *
 	u64 end;
 	u64 trimmed = 0;
 	u64 total_bytes = btrfs_super_total_bytes(fs_info->super_copy);
+	u64 bg_failed = 0;
+	u64 dev_failed = 0;
+	int bg_ret = 0;
+	int dev_ret = 0;
 	int ret = 0;
 
 	/*
@@ -11057,7 +11070,7 @@ int btrfs_trim_fs(struct btrfs_fs_info *
 	else
 		cache = btrfs_lookup_block_group(fs_info, range->start);
 
-	while (cache) {
+	for (; cache; cache = next_block_group(fs_info, cache)) {
 		if (cache->key.objectid >= (range->start + range->len)) {
 			btrfs_put_block_group(cache);
 			break;
@@ -11071,13 +11084,15 @@ int btrfs_trim_fs(struct btrfs_fs_info *
 			if (!block_group_cache_done(cache)) {
 				ret = cache_block_group(cache, 0);
 				if (ret) {
-					btrfs_put_block_group(cache);
-					break;
+					bg_failed++;
+					bg_ret = ret;
+					continue;
 				}
 				ret = wait_block_group_cache_done(cache);
 				if (ret) {
-					btrfs_put_block_group(cache);
-					break;
+					bg_failed++;
+					bg_ret = ret;
+					continue;
 				}
 			}
 			ret = btrfs_trim_block_group(cache,
@@ -11088,28 +11103,40 @@ int btrfs_trim_fs(struct btrfs_fs_info *
 
 			trimmed += group_trimmed;
 			if (ret) {
-				btrfs_put_block_group(cache);
-				break;
+				bg_failed++;
+				bg_ret = ret;
+				continue;
 			}
 		}
-
-		cache = next_block_group(fs_info, cache);
 	}
 
+	if (bg_failed)
+		btrfs_warn(fs_info,
+			"failed to trim %llu block group(s), last error %d",
+			bg_failed, bg_ret);
 	mutex_lock(&fs_info->fs_devices->device_list_mutex);
 	devices = &fs_info->fs_devices->alloc_list;
 	list_for_each_entry(device, devices, dev_alloc_list) {
 		ret = btrfs_trim_free_extents(device, range->minlen,
 					      &group_trimmed);
-		if (ret)
+		if (ret) {
+			dev_failed++;
+			dev_ret = ret;
 			break;
+		}
 
 		trimmed += group_trimmed;
 	}
 	mutex_unlock(&fs_info->fs_devices->device_list_mutex);
 
+	if (dev_failed)
+		btrfs_warn(fs_info,
+			"failed to trim %llu device(s), last error %d",
+			dev_failed, dev_ret);
 	range->len = trimmed;
-	return ret;
+	if (bg_ret)
+		return bg_ret;
+	return dev_ret;
 }
 
 /*

