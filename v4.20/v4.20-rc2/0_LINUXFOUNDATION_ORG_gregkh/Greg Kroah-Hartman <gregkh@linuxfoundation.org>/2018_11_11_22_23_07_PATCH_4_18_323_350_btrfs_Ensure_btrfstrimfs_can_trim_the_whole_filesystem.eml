Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 12 Nov 2018 00:44:08 -0000
Received: from icoremail.net (unknown [209.85.215.182])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH9IRuOhbap54AQ--.36542S3;
	Mon, 12 Nov 2018 07:15:30 +0800 (CST)
Received: from mail-pg1-f182.google.com (unknown [209.85.215.182])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwC3m0cPuOhb76QuAA--.854S3;
	Mon, 12 Nov 2018 07:15:27 +0800 (CST)
Received: by mail-pg1-f182.google.com with SMTP id 80so3178245pge.4
        for <xuliker@zju.edu.cn>; Sun, 11 Nov 2018 15:15:27 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=SYvzifnwqa+b1qXCaou4DIBNUImT+lY8EwfvcSbkeQU=;
        b=rv+EYPw268rHFStVd/A/e9UWyOaVY0lA2BJO0sJKd/XXrGUie8UUANtI/q6dXJoDaX
         y/37jn2a7fmGRIm0fKep3weFHMWjeEALs2A5LpeUx4xDIVufHT+XJNdDp+vDRaHhztvN
         GS9k1J1E/zeqmeHigWhc88WOTeb4xyCQQDL9tmjb/bhGVsSjz0NpfEdu+OfoLadW0fCS
         e2lvchfnZeUuh7IZEhvR2/TOoUfzJXEaewm3Hd/0TUaGsIz6cI+QOPrjkHhuFKWEuSpV
         dJkaUoLZI5aaY46MHHh1n7CrXE+vMMObqMO3QjfdcVrpXahLxI02lHWopg5v9puprBFk
         6brg==
X-Gm-Message-State: AGRZ1gKTaVbXM4EVFMYyWaCaZWwqkcEzAqbAHsQkQREjb/C0B/cmnwVC
	U6jDoL3Z5wF4sjTKh/EScZhg2iFBPJ6ufs4gTx3eL5IPDFmFGhI=
X-Received: by 2002:a62:42dc:: with SMTP id h89-v6mr18404364pfd.0.1541978127414;
        Sun, 11 Nov 2018 15:15:27 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp2552826pjt;
        Sun, 11 Nov 2018 15:15:26 -0800 (PST)
X-Google-Smtp-Source: AJdET5esjYH1dIquHoyxPALZcjIAk2v/WL+6wEs/vcK0Dof1h8bhD6iO0lRmxsvMtF7q14BuM2bd
X-Received: by 2002:a63:7f4f:: with SMTP id p15mr1993975pgn.296.1541978126612;
        Sun, 11 Nov 2018 15:15:26 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541978126; cv=none;
        d=google.com; s=arc-20160816;
        b=ioLWZ2nLOsloetSaJS0A5a9XlRFdslnW0pubENvgfBxiuOoo51yj058/1fXMDrMBW0
         BFuMwjHJ0n7d7mgh/Nts9np4uOxAQf73EqxiWn9NsyZElsG77L+KbO41xSqjAPKo+Dbb
         O0CJ7S4lGf1v8ATcIjTeJ9wGatJEhl7EE1iXVCbfffh25o8dJSlN8GR4GWI5hT0gWCeV
         CGkneodz5tc0TSglWg1gctowHC//dWgpzcO5w20WrXmoX2inc054wmGmbBxEJzTeIuam
         o+0k3jacAXSc380eMDehGmhfHttZcSzN7LihdMoEqEPP4EtcPRAtnjLsb5ZCO7ksESWk
         +kgA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=SYvzifnwqa+b1qXCaou4DIBNUImT+lY8EwfvcSbkeQU=;
        b=lHFCHhWkiTdEbBz5bO+W8K0yDlCbNyAMqXxLNcnQYagELeuDrGvYntNmB/KYFM4V/0
         d8FsT4K260PzOxGgSibWJX4bU3KLxqeIRYwHM0zNUkLdnpxK4HmcJ6HXdZlWQ/MPvQYT
         4TeTfzX/qyagCNmPFtaxrGFp3qxl5SD6715STYlxFpbTAFBdGRk2BQH3JJ7HjGNEWpi2
         u/xYq/4SFvCzTiGE+hOEO1vUVd9TI6UmK+POB83/DGdxpdwzmMMCf4fTTtNgi+mTdG40
         KIXdZn/Uu+avcAFYuJDiA8TGdNIkiuDKrN1QEKQWmJTLVsJbHaXpYJq8H4jeCAVWVLr2
         nWZA==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b=wjzk1uEw;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id 15-v6si16645905pfr.242.2018.11.11.15.15.12;
        Sun, 11 Nov 2018 15:15:26 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2389970AbeKLJFJ (ORCPT <rfc822;berg.ding@gmail.com> + 99 others);
        Mon, 12 Nov 2018 04:05:09 -0500
Received: from mail.kernel.org ([198.145.29.99]:49358 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S2389848AbeKLIVm (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 12 Nov 2018 03:21:42 -0500
Received: from localhost (unknown [206.108.79.134])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id C6011224E0;
        Sun, 11 Nov 2018 22:31:44 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1541975504;
        bh=GFxQaXkPknXLXowH7xr7qDCAh9P/w813ftUsdWVUglU=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=wjzk1uEwwmCmb302emms2xXg19mpVFnC22KIzHgwH3rOob9xK+LvgdXqhblfQevpF
         yjT3lOOl0/DmlSwWwBCbEJBc3uZkhNxoFll/P5i9maEP1j/rYMrnRihxwCBSCc8KIg
         TkoHFhJ/iPsGLROqG948pF0XyXlLiViMvM6gWJLU=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Chris Murphy <lists@colorremedies.com>,
        Qu Wenruo <wqu@suse.com>, Nikolay Borisov <nborisov@suse.com>,
        David Sterba <dsterba@suse.com>
Subject: [PATCH 4.18 323/350] btrfs: Ensure btrfs_trim_fs can trim the whole filesystem
Date: Sun, 11 Nov 2018 14:23:07 -0800
Message-Id: <20181111221721.583962138@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181111221707.043394111@linuxfoundation.org>
References: <20181111221707.043394111@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwC3m0cPuOhb76QuAA--.854S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxZw4kZrWxAryfJr17Jr13Arb_yoW5tryfpw
	43C3ZxK3y8X3yUGF18G3WFvw1fG34v9a18GrZxJrna9ayayrWYgr97K340kFW7GrykJr1U
	Z3WjvayYka1qyF7anT9S1TB71UUUUU7qnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPIb7Iv0xC_tr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26rxl6s0DM28EF7xvwVC2z280aVCY1x0267AKxVW0oVCq3wAS0I0E0xvYzx
	vE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AKxVWU
	XVWUAwAv7VC2z280aVAFwI0_Gr0_Cr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcxkI7V
	AKI48JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE44CYbxCE4x80FwCY
	02Avz4vEIxC_uwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_tr0E3s1lcI
	IF0xvE2Ix0cI8IcVCY1x0267AKxVW8Jr0_Cr1UMxvI42IY6I8E87Iv67AKxVW0oVCq3wCY
	IxAIcVC2z280aVCY1x0267AKxVW0oVCq3wCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26c
	xK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v2
	6r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_Jw0_GFylIxkGc2
	Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6r4j6FyUYxBIdaVFxhVjvjDU0xZFpf9x07b5
	9a9UUUUU=

4.18-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Qu Wenruo <wqu@suse.com>

commit 6ba9fc8e628becf0e3ec94083450d089b0dec5f5 upstream.

[BUG]
fstrim on some btrfs only trims the unallocated space, not trimming any
space in existing block groups.

[CAUSE]
Before fstrim_range passed to btrfs_trim_fs(), it gets truncated to
range [0, super->total_bytes).  So later btrfs_trim_fs() will only be
able to trim block groups in range [0, super->total_bytes).

While for btrfs, any bytenr aligned to sectorsize is valid, since btrfs
uses its logical address space, there is nothing limiting the location
where we put block groups.

For filesystem with frequent balance, it's quite easy to relocate all
block groups and bytenr of block groups will start beyond
super->total_bytes.

In that case, btrfs will not trim existing block groups.

[FIX]
Just remove the truncation in btrfs_ioctl_fitrim(), so btrfs_trim_fs()
can get the unmodified range, which is normally set to [0, U64_MAX].

Reported-by: Chris Murphy <lists@colorremedies.com>
Fixes: f4c697e6406d ("btrfs: return EINVAL if start > total_bytes in fitrim ioctl")
CC: <stable@vger.kernel.org> # v4.4+
Signed-off-by: Qu Wenruo <wqu@suse.com>
Reviewed-by: Nikolay Borisov <nborisov@suse.com>
Reviewed-by: David Sterba <dsterba@suse.com>
Signed-off-by: David Sterba <dsterba@suse.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

---
 fs/btrfs/extent-tree.c |   10 +---------
 fs/btrfs/ioctl.c       |   11 +++++++----
 2 files changed, 8 insertions(+), 13 deletions(-)

--- a/fs/btrfs/extent-tree.c
+++ b/fs/btrfs/extent-tree.c
@@ -10984,21 +10984,13 @@ int btrfs_trim_fs(struct btrfs_fs_info *
 	u64 start;
 	u64 end;
 	u64 trimmed = 0;
-	u64 total_bytes = btrfs_super_total_bytes(fs_info->super_copy);
 	u64 bg_failed = 0;
 	u64 dev_failed = 0;
 	int bg_ret = 0;
 	int dev_ret = 0;
 	int ret = 0;
 
-	/*
-	 * try to trim all FS space, our block group may start from non-zero.
-	 */
-	if (range->len == total_bytes)
-		cache = btrfs_lookup_first_block_group(fs_info, range->start);
-	else
-		cache = btrfs_lookup_block_group(fs_info, range->start);
-
+	cache = btrfs_lookup_first_block_group(fs_info, range->start);
 	for (; cache; cache = next_block_group(fs_info, cache)) {
 		if (cache->key.objectid >= (range->start + range->len)) {
 			btrfs_put_block_group(cache);
--- a/fs/btrfs/ioctl.c
+++ b/fs/btrfs/ioctl.c
@@ -496,7 +496,6 @@ static noinline int btrfs_ioctl_fitrim(s
 	struct fstrim_range range;
 	u64 minlen = ULLONG_MAX;
 	u64 num_devices = 0;
-	u64 total_bytes = btrfs_super_total_bytes(fs_info->super_copy);
 	int ret;
 
 	if (!capable(CAP_SYS_ADMIN))
@@ -520,11 +519,15 @@ static noinline int btrfs_ioctl_fitrim(s
 		return -EOPNOTSUPP;
 	if (copy_from_user(&range, arg, sizeof(range)))
 		return -EFAULT;
-	if (range.start > total_bytes ||
-	    range.len < fs_info->sb->s_blocksize)
+
+	/*
+	 * NOTE: Don't truncate the range using super->total_bytes.  Bytenr of
+	 * block group is in the logical address space, which can be any
+	 * sectorsize aligned bytenr in  the range [0, U64_MAX].
+	 */
+	if (range.len < fs_info->sb->s_blocksize)
 		return -EINVAL;
 
-	range.len = min(range.len, total_bytes - range.start);
 	range.minlen = max(range.minlen, minlen);
 	ret = btrfs_trim_fs(fs_info, &range);
 	if (ret < 0)

