Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 12 Nov 2018 00:45:09 -0000
Received: from icoremail.net (unknown [209.85.210.178])
	by mail-app2 (Coremail) with SMTP id by_KCgD3_yfMv+hbwsZ4AQ--.36617S3;
	Mon, 12 Nov 2018 07:48:29 +0800 (CST)
Received: from mail-pf1-f178.google.com (unknown [209.85.210.178])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCXd0PKv+hbLLguAA--.1012S3;
	Mon, 12 Nov 2018 07:48:26 +0800 (CST)
Received: by mail-pf1-f178.google.com with SMTP id v76-v6so561649pfa.5
        for <xuliker@zju.edu.cn>; Sun, 11 Nov 2018 15:48:26 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=q+BAdaquwXA6E0ifsEG/RHyB2GzgunivGkeSODSZJvo=;
        b=ewjbE4btrEFYptNFRF2sgQTbHFkA1ueoW2B8qZvP/rlhsU4DGVdI6fbinCL1UMGR2B
         3vC7xVuovyoBycGhZ4PJivKUS7B39fGI4JzekkhMTnACeJ+PSfkWZKkJowqQib5hoaNN
         G7UDmJIWGeV7lTiZTyjgMgVYpirrL+NXd9D2vbNBypcOTNk6+Bo8rYWqWzOWe2cOo1k4
         NfZuRudSuppqWtgzkg+uvtUFqU2UEDUktzbIQlVZVU9vydd4ph7bahwJ5jftp5EDnJUf
         1Ian2rxcvPKs40tqyCIEQHMwOby8vMboUPqYJ9SRVs5djY1eeKL/Y0JDReLENl6mN83A
         HtJw==
X-Gm-Message-State: AGRZ1gI5ZnFtAly7JtU78HFdD4+qc6iu5wFTMqZehXFVbMCa2LmQozV2
	QGkSPRtD8vDARDROypw/xaCJWjLgOP8QeVG4XAZcCwAUWv++vYg=
X-Received: by 2002:a63:5816:: with SMTP id m22-v6mr15255953pgb.332.1541980106216;
        Sun, 11 Nov 2018 15:48:26 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp2574851pjt;
        Sun, 11 Nov 2018 15:48:25 -0800 (PST)
X-Google-Smtp-Source: AJdET5eNgnNnYs680DPo5PqpdCoRCg97GaKPcrpJmo3ybKpZjtm/LdSaeq0X0vg0+mh85j/dce2b
X-Received: by 2002:a17:902:5a03:: with SMTP id q3-v6mr264417pli.186.1541980105440;
        Sun, 11 Nov 2018 15:48:25 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541980105; cv=none;
        d=google.com; s=arc-20160816;
        b=x8wqfj8vVl5OB7ix9GCWKAS5v++kywUpyf4l9ioSCn/mr3iUrEk3FBZFIjeW1nouHZ
         Uz2rWa3seDXiK4OkyaLQachttiipyMx8OXKeDOmvmenUPUPbjee+iaa16JtiE+6PlxHZ
         VDETes2PXbWGOzPv1Xr7x8VxcvzxIFg98649tk4c3Uu8Z7E+iNe6r9fcJkWaHkH+YllE
         40482ZzetFkY9Ow9QUO+FFQJMGNf6cz0cOOo4MNvW9z+sASLFOy+SkrI5vEaWGxiRUDq
         iU2KjB9xIL+kU0DxwVVHrhjCGIs6+YmntQzRRyPLNQiff7xG/0nOiDf/NlU8OwWHA/rE
         qe5w==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=q+BAdaquwXA6E0ifsEG/RHyB2GzgunivGkeSODSZJvo=;
        b=yRwpK11yjmA3P7fTLVXftn1CkZUirF7Ik1/Aii703Nb4H9B9TZmidehLk8U4Lp43pA
         V5C06hkionyeYf9rPapqPLM7fZyOI2HcipNXKlrDoAubxC5ClJ5GjKxiFjMDMjSdaQY9
         LaTiGxQcLgdPz7pMxMqonWP1c3WQbghQGS8JB564LdAFJccmJp1DZX9d3sCI+mJrybnW
         Qp7m7ne+5a3RCnWEV24JwQNH3dm1aueQnhRyRQjK1SwdkU+3bla8cKvJONhv/oRbP9NT
         UCam7XQqB9csQu4UezOIFWjqffJlFm4i69i2AhvyypUXrH9V/oJcsLDxprhKkznN28eF
         8MwA==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b=SxQ7y8k6;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id bf10-v6si15210920plb.200.2018.11.11.15.48.10;
        Sun, 11 Nov 2018 15:48:25 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1733127AbeKLISo (ORCPT <rfc822;berg.ding@gmail.com> + 99 others);
        Mon, 12 Nov 2018 03:18:44 -0500
Received: from mail.kernel.org ([198.145.29.99]:38824 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1733012AbeKLISl (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 12 Nov 2018 03:18:41 -0500
Received: from localhost (unknown [206.108.79.134])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 1338822503;
        Sun, 11 Nov 2018 22:28:45 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1541975325;
        bh=C0KyuaJgMyhpzjYj+YDAXJo1RjuYgY+UfGcFSU6zrzc=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=SxQ7y8k6C/j7hi+p+oHOm/WDrDXPTXoPLznH/F3zqywz0DVh9IBRyhwMo5zvMBJW0
         4iWi57rYQzJ7BcjrhaeqJfoNusiauZDaJD6F18uOzVZFQ/btMhU7fTQ+YKU+foyp/W
         2gjD9c81+NcxgLQr288ldmvt9UqOLSr+PoT2vt4U=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Chris Murphy <lists@colorremedies.com>,
        Qu Wenruo <wqu@suse.com>, David Sterba <dsterba@suse.com>
Subject: [PATCH 4.19 331/361] btrfs: Enhance btrfs_trim_fs function to handle error better
Date: Sun, 11 Nov 2018 14:21:18 -0800
Message-Id: <20181111221659.901768008@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181111221619.915519183@linuxfoundation.org>
References: <20181111221619.915519183@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwCXd0PKv+hbLLguAA--.1012S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxAF47JF4kZF4rCF1xCr15urg_yoWrAFyfpr
	ZIk3Z8KrWrWwn3G3WfG34Fqw1rK3ykGa15G3sxG34S9343GryYgrZFyw109F98KrykJF47
	XF4UZ34rGFnFkrJanT9S1TB71UUUUUDqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPIb7Iv0xC_KF4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26rxl6s0DM28EF7xvwVC2z280aVCY1x0267AKxVW0oVCq3wAS0I0E0xvYzx
	vE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AKxVWU
	AVWUtwAv7VC2z280aVAFwI0_Gr0_Cr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcxkI7V
	AKI48JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE44CYbxCE4x80FwCY
	02Avz4vEIxC_uwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_tr0E3s1lcI
	IF0xvE2Ix0cI8IcVCY1x0267AKxVW8Jr0_Cr1UMxvI42IY6I8E87Iv67AKxVW0oVCq3wCY
	IxAIcVC2z280aVCY1x0267AKxVW0oVCq3wCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26c
	xK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v2
	6r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_JF0_Jw1lIxkGc2
	Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6r4j6FyUYxBIdaVFxhVjvjDU0xZFpf9x07bY
	OzsUUUUU=

4.19-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Qu Wenruo <wqu@suse.com>

commit 93bba24d4b5ad1e5cd8b43f64e66ff9d6355dd20 upstream.

Function btrfs_trim_fs() doesn't handle errors in a consistent way. If
error happens when trimming existing block groups, it will skip the
remaining blocks and continue to trim unallocated space for each device.

The return value will only reflect the final error from device trimming.

This patch will fix such behavior by:

1) Recording the last error from block group or device trimming
   The return value will also reflect the last error during trimming.
   Make developer more aware of the problem.

2) Continuing trimming if possible
   If we failed to trim one block group or device, we could still try
   the next block group or device.

3) Report number of failures during block group and device trimming
   It would be less noisy, but still gives user a brief summary of
   what's going wrong.

Such behavior can avoid confusion for cases like failure to trim the
first block group and then only unallocated space is trimmed.

Reported-by: Chris Murphy <lists@colorremedies.com>
CC: stable@vger.kernel.org # 4.4+
Signed-off-by: Qu Wenruo <wqu@suse.com>
Reviewed-by: David Sterba <dsterba@suse.com>
[ add bg_ret and dev_ret to the messages ]
Signed-off-by: David Sterba <dsterba@suse.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

---
 fs/btrfs/extent-tree.c |   49 ++++++++++++++++++++++++++++++++++++++-----------
 1 file changed, 38 insertions(+), 11 deletions(-)

--- a/fs/btrfs/extent-tree.c
+++ b/fs/btrfs/extent-tree.c
@@ -10850,6 +10850,15 @@ static int btrfs_trim_free_extents(struc
 	return ret;
 }
 
+/*
+ * Trim the whole filesystem by:
+ * 1) trimming the free space in each block group
+ * 2) trimming the unallocated space on each device
+ *
+ * This will also continue trimming even if a block group or device encounters
+ * an error.  The return value will be the last error, or 0 if nothing bad
+ * happens.
+ */
 int btrfs_trim_fs(struct btrfs_fs_info *fs_info, struct fstrim_range *range)
 {
 	struct btrfs_block_group_cache *cache = NULL;
@@ -10860,6 +10869,10 @@ int btrfs_trim_fs(struct btrfs_fs_info *
 	u64 end;
 	u64 trimmed = 0;
 	u64 total_bytes = btrfs_super_total_bytes(fs_info->super_copy);
+	u64 bg_failed = 0;
+	u64 dev_failed = 0;
+	int bg_ret = 0;
+	int dev_ret = 0;
 	int ret = 0;
 
 	/*
@@ -10870,7 +10883,7 @@ int btrfs_trim_fs(struct btrfs_fs_info *
 	else
 		cache = btrfs_lookup_block_group(fs_info, range->start);
 
-	while (cache) {
+	for (; cache; cache = next_block_group(fs_info, cache)) {
 		if (cache->key.objectid >= (range->start + range->len)) {
 			btrfs_put_block_group(cache);
 			break;
@@ -10884,13 +10897,15 @@ int btrfs_trim_fs(struct btrfs_fs_info *
 			if (!block_group_cache_done(cache)) {
 				ret = cache_block_group(cache, 0);
 				if (ret) {
-					btrfs_put_block_group(cache);
-					break;
+					bg_failed++;
+					bg_ret = ret;
+					continue;
 				}
 				ret = wait_block_group_cache_done(cache);
 				if (ret) {
-					btrfs_put_block_group(cache);
-					break;
+					bg_failed++;
+					bg_ret = ret;
+					continue;
 				}
 			}
 			ret = btrfs_trim_block_group(cache,
@@ -10901,28 +10916,40 @@ int btrfs_trim_fs(struct btrfs_fs_info *
 
 			trimmed += group_trimmed;
 			if (ret) {
-				btrfs_put_block_group(cache);
-				break;
+				bg_failed++;
+				bg_ret = ret;
+				continue;
 			}
 		}
-
-		cache = next_block_group(fs_info, cache);
 	}
 
+	if (bg_failed)
+		btrfs_warn(fs_info,
+			"failed to trim %llu block group(s), last error %d",
+			bg_failed, bg_ret);
 	mutex_lock(&fs_info->fs_devices->device_list_mutex);
 	devices = &fs_info->fs_devices->alloc_list;
 	list_for_each_entry(device, devices, dev_alloc_list) {
 		ret = btrfs_trim_free_extents(device, range->minlen,
 					      &group_trimmed);
-		if (ret)
+		if (ret) {
+			dev_failed++;
+			dev_ret = ret;
 			break;
+		}
 
 		trimmed += group_trimmed;
 	}
 	mutex_unlock(&fs_info->fs_devices->device_list_mutex);
 
+	if (dev_failed)
+		btrfs_warn(fs_info,
+			"failed to trim %llu device(s), last error %d",
+			dev_failed, dev_ret);
 	range->len = trimmed;
-	return ret;
+	if (bg_ret)
+		return bg_ret;
+	return dev_ret;
 }
 
 /*

