Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 12 Nov 2018 00:45:13 -0000
Received: from icoremail.net (unknown [209.85.210.180])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH_omwOhbVsl4AQ--.36418S3;
	Mon, 12 Nov 2018 07:50:00 +0800 (CST)
Received: from mail-pf1-f180.google.com (unknown [209.85.210.180])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwA3FUEkwOhbOrkuAA--.32447S3;
	Mon, 12 Nov 2018 07:49:56 +0800 (CST)
Received: by mail-pf1-f180.google.com with SMTP id u10-v6so3375866pfn.9
        for <xuliker@zju.edu.cn>; Sun, 11 Nov 2018 15:49:56 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=btvHeIKzAsvkrg24BsLSS5p7rExUxHL8prmyVAuQILM=;
        b=U4LtJ6OcKzJ0SBwlvI1IixGdCHgzW/6v09NV+xKKaJsZpvnFYcEbiIoKVb6VnVtCJV
         rLI0V7u7TBfhJSEWExLyD9NQvWS6ZRlDzrHDCnMw710HBl51h4/xi3VDEVwoLLan54Bp
         ADrChn3wDycj2z/U0YLGHuImiGmHxBobTqGySjz7YtP4MI/QW7OA2lb+TJqAz74lsd+S
         nKsMdT3c203/Go8YycPKNPYJJC5d0ZFsccZtvyuRAnNAOQh4wMAeDlHstMP6cV4/VXgf
         knryAY/7VL9yesKnxgAj03icBTBhytKNlYeZbP52RMDDt+3iFvQ867Pf7yBf/dVG/Skp
         3hAw==
X-Gm-Message-State: AGRZ1gK33QtkFXoTiM/j4GPHmXX+eIDKafHfJSzxMsYZoM39h3hI63pl
	e+P+c8ukw8nYx3smPFpbsb5qwtz8whrpcnKgFdXbgNmh7oGztQ0=
X-Received: by 2002:a63:2c0e:: with SMTP id s14mr15862428pgs.132.1541980196070;
        Sun, 11 Nov 2018 15:49:56 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp2575801pjt;
        Sun, 11 Nov 2018 15:49:55 -0800 (PST)
X-Google-Smtp-Source: AJdET5fFPlsDTyZAsvNFrxbrihjZr1l0GoQhZnPlDrL7/T8waZ5+wf1nIMI1/FuLKN6FyTJviADD
X-Received: by 2002:a17:902:187:: with SMTP id b7-v6mr17864464plb.150.1541980195258;
        Sun, 11 Nov 2018 15:49:55 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541980195; cv=none;
        d=google.com; s=arc-20160816;
        b=HOrEHCKEilSdzJ7t3Ije76oH0PXsQPfrUBcCcacM8GD8GMwfKxXIc0Fqgptfh8t85b
         0RPfeQXs8NDl5scux9wldggSNKsUFXA3RdbONTxeIGUZlyS+mgT4wFLqlgpakNv40XPD
         jjV7WGXwz2oiyuzy3GePzuPL1ryo/A/WqVgmU+6jd1iLJUzsJG/JlYO59Q877Em4mxDB
         pOxzi7HbnESVhBveKZf63dvni9nBQ5+R3OG1ZjzTtF5qO5XbshAaYZf77EiyujC8QjsF
         o0DhxwE7FvTJ57XQEYGFlwXZdyaDZp7eS9TpVCPKXzKquA0G6T4pCQ0ROlx8Ul9bQTik
         0VdA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=btvHeIKzAsvkrg24BsLSS5p7rExUxHL8prmyVAuQILM=;
        b=h3q6GoA0DU+gTji/6KivnE04YfIIUqHoBJBcnEht0OlD0y21I4Ucas+2iYRBEH1wXa
         droM3CBqoDeqzhpwlgnfQWPxwRxj6E5pB03Kfm6t0pyT+QWYVQk6au/H4IjmMjmr7mkm
         TeHr5EqMGhdjHMVXFXNk67DtGVXxhNwJOHtUYn86Vxqg4H2dF4wQ5KQFZFcq0nB5RXt+
         JhLpBepIZ41EOjoTLB+14x42ePFbuWV3h2AKkHkNAGFQhQaWIZbQLNvFfvFQicSMUJAJ
         t557ZLhnFQLCOq2Twt0SZQX9fVZ/V4vHkW6U7lpqNf2yXYTVZf97efmtPAlvtrOYfJQz
         GRyQ==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b=P5QDJjJM;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id 129-v6si17322620pfy.164.2018.11.11.15.49.40;
        Sun, 11 Nov 2018 15:49:55 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1733113AbeKLISn (ORCPT <rfc822;berg.ding@gmail.com> + 99 others);
        Mon, 12 Nov 2018 03:18:43 -0500
Received: from mail.kernel.org ([198.145.29.99]:38848 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1733055AbeKLISm (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 12 Nov 2018 03:18:42 -0500
Received: from localhost (unknown [206.108.79.134])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 6B09E21707;
        Sun, 11 Nov 2018 22:28:45 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1541975325;
        bh=GDLb0FvJVwosa3sIGuSIdPc0VLyr6S6YLrkVdBIZvRk=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=P5QDJjJM/vozuoBMMkUhd6Qt5oCsJ6P9R/11IwK3cTVebKV5Ga2GCe+LdKiT7MhE8
         /dM9/BamKfIyDGD9bFcnlJhUdpe02/FseEJRfd6J0ZSJqfzit2dob/PyJ2OV0G4+o6
         3U2rSAY6UKxaaghpCbNpqqNXqiYokZDMv80D6bpo=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Chris Murphy <lists@colorremedies.com>,
        Qu Wenruo <wqu@suse.com>, Nikolay Borisov <nborisov@suse.com>,
        David Sterba <dsterba@suse.com>
Subject: [PATCH 4.19 332/361] btrfs: Ensure btrfs_trim_fs can trim the whole filesystem
Date: Sun, 11 Nov 2018 14:21:19 -0800
Message-Id: <20181111221659.986765206@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181111221619.915519183@linuxfoundation.org>
References: <20181111221619.915519183@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwA3FUEkwOhbOrkuAA--.32447S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxZw4kZrWxAryfJr17Jr13Arb_yoW5tryfpw
	43C3ZxK3yrX3yUGF18G3WFvw1fG34v9a18GrZ3Jrna9ayayrWYgr97K340kFZ7GrykJr1U
	Z3Wjva45Ca1qyF7anT9S1TB71UUUUUDqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUU9ab7Iv0xC_tr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26rxl6s0DM28EF7xvwVC2z280aVCY1x0267AKxVW0oVCq3wAS0I0E0xvYzx
	vE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AKxVWU
	AVWUtwAv7VC2z280aVAFwI0_Gr0_Cr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcxkI7V
	AKI48JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkI7II2jI8vz4vEwIxGrwCYIxAI
	cVC0I7IYx2IY67AKxVWDJVCq3wCYIxAIcVC0I7IYx2IY6xkF7I0E14v26r4UJVWxJr1lcI
	IF0xvEx4A2jsIE14v26rxl6s0DMxvI42IY6I8E87Iv6xkF7I0E14v26rxl6s0DMxAIw28I
	cxkI7VAKI48JMxAIw28IcVAKzI0EY4vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4
	AY6r1j6r4UMI8I3I0E5I8CrVAFwI0_Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE
	17CEb7AF67AKxVWUtVW8ZwCIc40Y0x0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_JFI_Gr
	UvcSsGvfC2KfnxnUUI43ZEXa7IUnRuWJUUUUU==

4.19-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Qu Wenruo <wqu@suse.com>

commit 6ba9fc8e628becf0e3ec94083450d089b0dec5f5 upstream.

[BUG]
fstrim on some btrfs only trims the unallocated space, not trimming any
space in existing block groups.

[CAUSE]
Before fstrim_range passed to btrfs_trim_fs(), it gets truncated to
range [0, super->total_bytes).  So later btrfs_trim_fs() will only be
able to trim block groups in range [0, super->total_bytes).

While for btrfs, any bytenr aligned to sectorsize is valid, since btrfs
uses its logical address space, there is nothing limiting the location
where we put block groups.

For filesystem with frequent balance, it's quite easy to relocate all
block groups and bytenr of block groups will start beyond
super->total_bytes.

In that case, btrfs will not trim existing block groups.

[FIX]
Just remove the truncation in btrfs_ioctl_fitrim(), so btrfs_trim_fs()
can get the unmodified range, which is normally set to [0, U64_MAX].

Reported-by: Chris Murphy <lists@colorremedies.com>
Fixes: f4c697e6406d ("btrfs: return EINVAL if start > total_bytes in fitrim ioctl")
CC: <stable@vger.kernel.org> # v4.4+
Signed-off-by: Qu Wenruo <wqu@suse.com>
Reviewed-by: Nikolay Borisov <nborisov@suse.com>
Reviewed-by: David Sterba <dsterba@suse.com>
Signed-off-by: David Sterba <dsterba@suse.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

---
 fs/btrfs/extent-tree.c |   10 +---------
 fs/btrfs/ioctl.c       |   11 +++++++----
 2 files changed, 8 insertions(+), 13 deletions(-)

--- a/fs/btrfs/extent-tree.c
+++ b/fs/btrfs/extent-tree.c
@@ -10868,21 +10868,13 @@ int btrfs_trim_fs(struct btrfs_fs_info *
 	u64 start;
 	u64 end;
 	u64 trimmed = 0;
-	u64 total_bytes = btrfs_super_total_bytes(fs_info->super_copy);
 	u64 bg_failed = 0;
 	u64 dev_failed = 0;
 	int bg_ret = 0;
 	int dev_ret = 0;
 	int ret = 0;
 
-	/*
-	 * try to trim all FS space, our block group may start from non-zero.
-	 */
-	if (range->len == total_bytes)
-		cache = btrfs_lookup_first_block_group(fs_info, range->start);
-	else
-		cache = btrfs_lookup_block_group(fs_info, range->start);
-
+	cache = btrfs_lookup_first_block_group(fs_info, range->start);
 	for (; cache; cache = next_block_group(fs_info, cache)) {
 		if (cache->key.objectid >= (range->start + range->len)) {
 			btrfs_put_block_group(cache);
--- a/fs/btrfs/ioctl.c
+++ b/fs/btrfs/ioctl.c
@@ -491,7 +491,6 @@ static noinline int btrfs_ioctl_fitrim(s
 	struct fstrim_range range;
 	u64 minlen = ULLONG_MAX;
 	u64 num_devices = 0;
-	u64 total_bytes = btrfs_super_total_bytes(fs_info->super_copy);
 	int ret;
 
 	if (!capable(CAP_SYS_ADMIN))
@@ -515,11 +514,15 @@ static noinline int btrfs_ioctl_fitrim(s
 		return -EOPNOTSUPP;
 	if (copy_from_user(&range, arg, sizeof(range)))
 		return -EFAULT;
-	if (range.start > total_bytes ||
-	    range.len < fs_info->sb->s_blocksize)
+
+	/*
+	 * NOTE: Don't truncate the range using super->total_bytes.  Bytenr of
+	 * block group is in the logical address space, which can be any
+	 * sectorsize aligned bytenr in  the range [0, U64_MAX].
+	 */
+	if (range.len < fs_info->sb->s_blocksize)
 		return -EINVAL;
 
-	range.len = min(range.len, total_bytes - range.start);
 	range.minlen = max(range.minlen, minlen);
 	ret = btrfs_trim_fs(fs_info, &range);
 	if (ret < 0)

