Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 12 Nov 2018 00:43:26 -0000
Received: from icoremail.net (unknown [209.85.214.181])
	by mail-app2 (Coremail) with SMTP id by_KCgDXv+6Zsuhb6oN4AQ--.36465S3;
	Mon, 12 Nov 2018 06:52:10 +0800 (CST)
Received: from mail-pl1-f181.google.com (unknown [209.85.214.181])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwDnvTmXsuhb3JcuAA--.6149S3;
	Mon, 12 Nov 2018 06:52:08 +0800 (CST)
Received: by mail-pl1-f181.google.com with SMTP id r3-v6so2616356pls.12
        for <xuliker@zju.edu.cn>; Sun, 11 Nov 2018 14:52:07 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=aClKMm690c2Cp/Til1rDtpHKiRGhn8p8D6fkX/XRv0g=;
        b=uG4YcD9tmoqUrcm26fOrqlQWVFD2yG6Ny4jC569g54d1G+X88OAvzpgbkmBiYlUyHx
         fbe/HRCF/HqM7hC4YkkTfHaXmCMPqRJ5bbOviiEg2tCoTjoMtUSm33rf+pvesRIi82u7
         R0grXDG9Q5+8ZBw/C3e5WNzhCGf/KrYnBk67X5fMallVxJ33AcMddtPANhfQWQ/mYTl1
         pHQ4p1zrm6eFnAIjk5SRbEkBpBAO21m0aaDorA9z2DzLWv6q+wIrJVfvd9/0+p2F2mCj
         ed+OCGs9/YmTj4eybyZSsT4seXH+UIjqJmMDjo6eLc5rwghpQzqKMyFHPymS2FCgVQZD
         4bTg==
X-Gm-Message-State: AGRZ1gKc3XUPuLxpB7l4YRwhYnVoR4YX3YjOeiFNSa2m6L4gme0jKFvh
	UNl3M8T9VVa3NL3go5J3K+h//QG7Syw5CCqcQ0lD/r9lzLjMAnw=
X-Received: by 2002:a17:902:166:: with SMTP id 93-v6mr17292295plb.68.1541976727650;
        Sun, 11 Nov 2018 14:52:07 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp2535896pjt;
        Sun, 11 Nov 2018 14:52:06 -0800 (PST)
X-Google-Smtp-Source: AJdET5eYhp4IffGZ+iE7zE+5JyRgewjOeO/zO3rWD5NqWRpSSU4P3WzmDb3sv4ooXBJoUiZQN7K4
X-Received: by 2002:a17:902:b592:: with SMTP id a18-v6mr17161780pls.248.1541976726785;
        Sun, 11 Nov 2018 14:52:06 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541976726; cv=none;
        d=google.com; s=arc-20160816;
        b=Thur0PBWizOjL4IwKujve+EBX7dzS6ZFzztqTmy6aOEIqmgLjsT6p3Q03GxmrpC3Oa
         5KtKxgvRyq2BpQ4MzhuSgjC2ADDmT77nMYAKmzL5HxGuSkF8N2qPm28Gk9PagSWQ90C0
         buYcowLzc/Pvd+gAFWY7eH1pq0/map7bxZrHJ65m42lklB25X8VrxTLfiFJwpwWoPXmj
         ees3dkBvW4JrgsS/ee36GErOy/cJVeYHpRr03TgttE0/99rKPcNYPV7eA0up6MSeOy7Z
         TVa5xyyZIfPEsp/XRJ2m7qM82n7XOO7zlHey8l7tWPNph/LVthc3bSORC0vThlm5EILu
         Rbrg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=aClKMm690c2Cp/Til1rDtpHKiRGhn8p8D6fkX/XRv0g=;
        b=clegyZrnbwNZtcHdchQ0722DI+aAYXiAHWL+MXZ4vOJ14nLXdt5FlXlLRGURH9g8f0
         737lE3hSCu0JsNHFAKullM3zY+CUPezYQ/i5I8sb/qLq0Gmg8xMyiropz95dlV+yxfO9
         XwfeXRYVPoYd5HwKXMIaMKAJyLAda7B6Pxbv4gGIC81sobmPOy6yc4AHqjRe5TLDV1xU
         L5nlSbHABQJlakxw2xeFjcj/TMJle8nH1gzXiOLF+FWSZCBGze+PliAilv375MAKbS4C
         jKrICS0Ut0UVivBOOsZb8zMuCvX3rSBjYS4CWFUR7DVFzoVCeX0/6XVjhi9JXc+jzXUC
         FsyQ==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b=PMkdNe7J;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id w5-v6si17408277pfl.241.2018.11.11.14.51.52;
        Sun, 11 Nov 2018 14:52:06 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2404236AbeKLIlp (ORCPT <rfc822;berg.ding@gmail.com> + 99 others);
        Mon, 12 Nov 2018 03:41:45 -0500
Received: from mail.kernel.org ([198.145.29.99]:54620 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S2404154AbeKLIXG (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 12 Nov 2018 03:23:06 -0500
Received: from localhost (unknown [206.108.79.134])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id D9C1421780;
        Sun, 11 Nov 2018 22:33:08 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1541975588;
        bh=FLdygPX7ypcFDLD/kL5uVnIyR/0wwsGBK7MEy+6ca/g=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=PMkdNe7J35mQwITs4FEtyY1p20wGh+GeuI0rs51jTn9h16SrGiO2CDiIjTB2LytDm
         jsyocxfnzGfGlIlCD2Mv9EkYWfGm5ZgckcQrIgrFHstBghxojKA6V1QRdwRD5n5aMy
         laWQ8nugEtnYooqgeCAx4wsyHMOvE8xmIcr2zckY=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Xu Wen <wen.xu@gatech.edu>,
        Qu Wenruo <wqu@suse.com>, David Sterba <dsterba@suse.com>
Subject: [PATCH 4.14 197/222] btrfs: Handle owner mismatch gracefully when walking up tree
Date: Sun, 11 Nov 2018 14:24:54 -0800
Message-Id: <20181111221704.415752862@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181111221647.665769131@linuxfoundation.org>
References: <20181111221647.665769131@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwDnvTmXsuhb3JcuAA--.6149S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxZw18tw1xAr4rXF1fCF45Jrb_yoWrWryfpr
	1akas8J3WrJw15CFs7KF4F9w4fK3WkXw4xXws3u3y0ga4DJr1aqa4Sk3W8CFyUGrZ5JFWU
	Za1jg345GFnFvFJanT9S1TB71UUUUU7qnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUB2b7Iv0xC_KF4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26rxl6s0DM28EF7xvwVC2z280aVCY1x0267AKxVW0oVCq3wAS0I0E0xvYzx
	vE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AKxVWU
	AVWUtwAv7VC2z280aVAFwI0_Gr0_Cr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcxkI7V
	AKI48JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkIecxEwVCI4VW3MxkI7II2jI8v
	z4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWDJVCq3wCYIxAIcVC0I7IYx2IY6xkF7I0E14
	v26r4UJVWxJr1lcIIF0xvEx4A2jsIE14v26F4UJVW0owCYIxAIcVC2z280aVCY1x0267AK
	xVWxJr0_GcWl42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwVAq07x20xyl4x8a6x804x
	Wl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG67AKxVWUJVWUGwC20s026x8GjcxK
	67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r126r1DMIIYrxkI7VAKI48JMIIF0xvE42xK8V
	AvwI8IcIk0rVW8JVW3JbIYCTnIWIevJa73UjIFyTuYvjxUDHmhUUUUU

4.14-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Qu Wenruo <wqu@suse.com>

commit 65c6e82becec33731f48786e5a30f98662c86b16 upstream.

[BUG]
When mounting certain crafted image, btrfs will trigger kernel BUG_ON()
when trying to recover balance:

  kernel BUG at fs/btrfs/extent-tree.c:8956!
  invalid opcode: 0000 [#1] PREEMPT SMP NOPTI
  CPU: 1 PID: 662 Comm: mount Not tainted 4.18.0-rc1-custom+ #10
  RIP: 0010:walk_up_proc+0x336/0x480 [btrfs]
  RSP: 0018:ffffb53540c9b890 EFLAGS: 00010202
  Call Trace:
   walk_up_tree+0x172/0x1f0 [btrfs]
   btrfs_drop_snapshot+0x3a4/0x830 [btrfs]
   merge_reloc_roots+0xe1/0x1d0 [btrfs]
   btrfs_recover_relocation+0x3ea/0x420 [btrfs]
   open_ctree+0x1af3/0x1dd0 [btrfs]
   btrfs_mount_root+0x66b/0x740 [btrfs]
   mount_fs+0x3b/0x16a
   vfs_kern_mount.part.9+0x54/0x140
   btrfs_mount+0x16d/0x890 [btrfs]
   mount_fs+0x3b/0x16a
   vfs_kern_mount.part.9+0x54/0x140
   do_mount+0x1fd/0xda0
   ksys_mount+0xba/0xd0
   __x64_sys_mount+0x21/0x30
   do_syscall_64+0x60/0x210
   entry_SYSCALL_64_after_hwframe+0x49/0xbe

[CAUSE]
Extent tree corruption.  In this particular case, reloc tree root's
owner is DATA_RELOC_TREE (should be TREE_RELOC), thus its backref is
corrupted and we failed the owner check in walk_up_tree().

[FIX]
It's pretty hard to take care of every extent tree corruption, but at
least we can remove such BUG_ON() and exit more gracefully.

And since in this particular image, DATA_RELOC_TREE and TREE_RELOC share
the same root (which is obviously invalid), we needs to make
__del_reloc_root() more robust to detect such invalid sharing to avoid
possible NULL dereference as root->node can be NULL in this case.

Link: https://bugzilla.kernel.org/show_bug.cgi?id=200411
Reported-by: Xu Wen <wen.xu@gatech.edu>
CC: stable@vger.kernel.org # 4.4+
Signed-off-by: Qu Wenruo <wqu@suse.com>
Reviewed-by: David Sterba <dsterba@suse.com>
Signed-off-by: David Sterba <dsterba@suse.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

---
 fs/btrfs/extent-tree.c |   18 ++++++++++++------
 fs/btrfs/relocation.c  |    2 +-
 2 files changed, 13 insertions(+), 7 deletions(-)

--- a/fs/btrfs/extent-tree.c
+++ b/fs/btrfs/extent-tree.c
@@ -9028,15 +9028,14 @@ static noinline int walk_up_proc(struct
 	if (eb == root->node) {
 		if (wc->flags[level] & BTRFS_BLOCK_FLAG_FULL_BACKREF)
 			parent = eb->start;
-		else
-			BUG_ON(root->root_key.objectid !=
-			       btrfs_header_owner(eb));
+		else if (root->root_key.objectid != btrfs_header_owner(eb))
+			goto owner_mismatch;
 	} else {
 		if (wc->flags[level + 1] & BTRFS_BLOCK_FLAG_FULL_BACKREF)
 			parent = path->nodes[level + 1]->start;
-		else
-			BUG_ON(root->root_key.objectid !=
-			       btrfs_header_owner(path->nodes[level + 1]));
+		else if (root->root_key.objectid !=
+			 btrfs_header_owner(path->nodes[level + 1]))
+			goto owner_mismatch;
 	}
 
 	btrfs_free_tree_block(trans, root, eb, parent, wc->refs[level] == 1);
@@ -9044,6 +9043,11 @@ out:
 	wc->refs[level] = 0;
 	wc->flags[level] = 0;
 	return 0;
+
+owner_mismatch:
+	btrfs_err_rl(fs_info, "unexpected tree owner, have %llu expect %llu",
+		     btrfs_header_owner(eb), root->root_key.objectid);
+	return -EUCLEAN;
 }
 
 static noinline int walk_down_tree(struct btrfs_trans_handle *trans,
@@ -9097,6 +9101,8 @@ static noinline int walk_up_tree(struct
 			ret = walk_up_proc(trans, root, path, wc);
 			if (ret > 0)
 				return 0;
+			if (ret < 0)
+				return ret;
 
 			if (path->locks[level]) {
 				btrfs_tree_unlock_rw(path->nodes[level],
--- a/fs/btrfs/relocation.c
+++ b/fs/btrfs/relocation.c
@@ -1334,7 +1334,7 @@ static void __del_reloc_root(struct btrf
 	struct mapping_node *node = NULL;
 	struct reloc_control *rc = fs_info->reloc_ctl;
 
-	if (rc) {
+	if (rc && root->node) {
 		spin_lock(&rc->reloc_root_tree.lock);
 		rb_node = tree_search(&rc->reloc_root_tree.rb_root,
 				      root->node->start);

