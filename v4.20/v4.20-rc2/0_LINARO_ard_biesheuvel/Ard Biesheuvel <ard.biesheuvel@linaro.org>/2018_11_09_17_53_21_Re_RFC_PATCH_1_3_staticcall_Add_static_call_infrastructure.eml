Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 10 Nov 2018 00:55:32 -0000
Received: from icoremail.net (unknown [209.85.214.179])
	by mail-app2 (Coremail) with SMTP id by_KCgDXvwq8yeVbPnRpAQ--.32200S3;
	Sat, 10 Nov 2018 01:54:05 +0800 (CST)
Received: from mail-pl1-f179.google.com (unknown [209.85.214.179])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwDXsDy2yeVbRJYjAA--.4467S3;
	Sat, 10 Nov 2018 01:53:58 +0800 (CST)
Received: by mail-pl1-f179.google.com with SMTP id w22-v6so1271586plk.0
        for <xuliker@zju.edu.cn>; Fri, 09 Nov 2018 09:53:58 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:mime-version
         :in-reply-to:references:from:date:message-id:subject:to:cc:sender
         :precedence:list-id;
        bh=XTY12vXA7XYaAuO9OtQgJnKFSQxposuOzbrrHwRbAHY=;
        b=c4kHpegBuSVdq7Kzy/IbrluOWw7SpbCkSF4JJrlJYPRRC0NmMSCpHBfqkrSRLK/ggB
         BjJavyHHXTLRc28qTiWPAi5ke9I1wDe1LQfvtCeTRySdAEe7MfluTVS72YNLkLiHUVVF
         N5o/gMMzjXpOnlTyHQvw6vkZ/LKDPzguySVmOt0uUQj7Gf9ft1OGrK0hZtWPe4ezS75J
         Q5/TnEGr85AY0WbBChXWFUnC1wEG0GfpKQAvh2JCohWm0Sx5idrUlg2agOl5RWa8hyy8
         6a/FWkUm0XIO6/O4L3TmCdzhV5g3YyEhiwOCJODWtmNWqT8yO8awCmu58n404QO3wZf8
         /M9g==
X-Gm-Message-State: AGRZ1gJfmjrbeUINiYC6tzPTdsiT+CmPY16H2nM6SPpLqExJ3MMmSHFA
	UZr2MRnieSY5p6k1DbVUj5cJYDNNCqUoUlEWGmWWSkXhNlWuDJfl5Q==
X-Received: by 2002:a17:902:7082:: with SMTP id z2-v6mr9915234plk.78.1541786037790;
        Fri, 09 Nov 2018 09:53:57 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp191906pjt;
        Fri, 9 Nov 2018 09:53:56 -0800 (PST)
X-Google-Smtp-Source: AJdET5f267MYp16dMJ3BYKHD54/7/M1f1C/Io55y2pli5emfYlbvYjoXkYuCZMAZWdRCNnkxmh5D
X-Received: by 2002:a63:2141:: with SMTP id s1mr5753693pgm.148.1541786036786;
        Fri, 09 Nov 2018 09:53:56 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541786036; cv=none;
        d=google.com; s=arc-20160816;
        b=wz2WMBoxk5QegyeJ5l3O/ivvwNtpdVIXmH2W4yJoxBFHYzcRmIZ7jADgFz52ykWJND
         rX+wbcI7z+RSLujvwgWUthcqz8aZz+b66DbIn6GLCZrgz3E7Xs1aZZeG3yOcJGFtnZyN
         RJQ78fcpx3Hh0f0CCZWGhJ79zhdBJEUIvD/Wdtr/OUzpyA617HvbQemtNACHdYKz0+tG
         JIMBJJyqNEGBuDrokInTnpS9hA+IjFbTImdEH40ibOnNIzp8msE23kyPxr3ghjtQqNP/
         mdXp1mlwSZ7Shytyo1UaXbgJw5WqFQ5jol1BY5+Lo6QAxK23+O0CHzK1vcdU8MmwxLFn
         5HzQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:cc:to:subject:message-id:date:from
         :references:in-reply-to:mime-version:dkim-signature;
        bh=XTY12vXA7XYaAuO9OtQgJnKFSQxposuOzbrrHwRbAHY=;
        b=egURnvkDbc3DMCNk4BvL4HkfIx9QKf/fHMC4IyuklINnaQMwum4WorgsLwlIPHzBgT
         bb7pHGCTXhBxF5YvYu2BjtiY9DrjDrsrYOI2yoiRJ5UE2aNVDYRxPbzXNWOkF7QSaSi0
         utmy9J/qGsFcqe1QHwjgUS39exvMxtrNJzm0esGOmOG2sBDX5Xw6D0nqaNAZ/2zqrEZs
         /vvXTqW6wEzN/apEgnysIeQRLrRwiknO4iJIkU3tYZX6rDOgKTxFC6mg+P4dpx5aPpT3
         KBhaHljUbaDitZAPkeiVkilFdlo+6sMuv6cbVTzEIWnm9dVlo/j2TxtaXNRUpBKCKxXT
         9YLg==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@linaro.org header.s=google header.b=OBSZVuIT;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=linaro.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id e1-v6si9064018pln.242.2018.11.09.09.53.41;
        Fri, 09 Nov 2018 09:53:56 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728548AbeKJDfB (ORCPT <rfc822;tu.k.phung@gmail.com>
        + 99 others); Fri, 9 Nov 2018 22:35:01 -0500
Received: from mail-io1-f68.google.com ([209.85.166.68]:42259 "EHLO
        mail-io1-f68.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728108AbeKJDfB (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 9 Nov 2018 22:35:01 -0500
Received: by mail-io1-f68.google.com with SMTP id h19-v6so1855998iog.9
        for <linux-kernel@vger.kernel.org>; Fri, 09 Nov 2018 09:53:22 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc;
        bh=XTY12vXA7XYaAuO9OtQgJnKFSQxposuOzbrrHwRbAHY=;
        b=OBSZVuITrHPRPdyopuniyWsHRA/vgZL/bh0nXdE/cE5hAHQqrx1VtDStc+U16vXHu6
         KS30YOFc0+xUX1+3OpFUs4/0jMiB6hv8APvRuDzWvagtcHPUelsOaGPDok+zhfdue9Gh
         xwWIF38vlCZPy/m2H+y1tpOPxYOM2Oqt//yXI=
X-Received: by 2002:a6b:37c2:: with SMTP id e185-v6mr7855956ioa.173.1541786001791;
 Fri, 09 Nov 2018 09:53:21 -0800 (PST)
MIME-Version: 1.0
Received: by 2002:a6b:4f16:0:0:0:0:0 with HTTP; Fri, 9 Nov 2018 09:53:21 -0800 (PST)
In-Reply-To: <CAKv+Gu8b1KbRtJPrbXk3+K=1uRV6OcvB+zEMYk-UK3sFxKzsgQ@mail.gmail.com>
References: <cover.1541711457.git.jpoimboe@redhat.com> <3cf04e113d71c9f8e4be95fb84a510f085aa4afa.1541711457.git.jpoimboe@redhat.com>
 <CAKv+Gu9bMkFEx_GxH3uLm0gveQurp7ELDi6C5NvpugufPFMbRA@mail.gmail.com>
 <20181109151028.faifw66enzye32gg@treble> <CAKv+Gu_J1b30+pMNRF0icEpyew4TM_VP3ShG=4HkLnk=fRL9zg@mail.gmail.com>
 <CAKv+Gu-DOW2WT=h8C0x5igbCDAc2bp3mTRM6U_wTJST+RnVicg@mail.gmail.com>
 <20181109173106.kbghzsdsu7oachl6@treble> <CAKv+Gu-9XYOwAPJ5m6F4Cn9Uo6dvbtEG9p0knX+_XcjHp2QKGA@mail.gmail.com>
 <20181109174608.eahqh4fkyl3k2gvs@treble> <CAKv+Gu8b1KbRtJPrbXk3+K=1uRV6OcvB+zEMYk-UK3sFxKzsgQ@mail.gmail.com>
From: Ard Biesheuvel <ard.biesheuvel@linaro.org>
Date: Fri, 9 Nov 2018 18:53:21 +0100
Message-ID: <CAKv+Gu9iJAyZ1u5AjPjTyxP4QJYOjMsMBi1eoMahtUjnLwqSHQ@mail.gmail.com>
Subject: Re: [RFC PATCH 1/3] static_call: Add static call infrastructure
To: Josh Poimboeuf <jpoimboe@redhat.com>
Cc: Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        "the arch/x86 maintainers" <x86@kernel.org>,
        Andy Lutomirski <luto@kernel.org>,
        Steven Rostedt <rostedt@goodmis.org>,
        Peter Zijlstra <peterz@infradead.org>,
        Ingo Molnar <mingo@kernel.org>,
        Thomas Gleixner <tglx@linutronix.de>,
        Linus Torvalds <torvalds@linux-foundation.org>,
        Masami Hiramatsu <mhiramat@kernel.org>,
        Jason Baron <jbaron@akamai.com>, Jiri Kosina <jkosina@suse.cz>,
        David Laight <David.Laight@aculab.com>,
        Borislav Petkov <bp@alien8.de>
Content-Type: text/plain; charset="UTF-8"
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwDXsDy2yeVbRJYjAA--.4467S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxXw4fCF45Ar17ArWUuryUJrb_yoWrXF13pr
	y8GF15AF4DJr18AFn2vw1jgF9Ivw17JrWUWrn0kr1Fk3Z0qry7tr4UGrWYkFy5C3y8Wr4j
	vr4UZFy7CFn8A37anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPCb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26F4UJVW0owA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_Cr1j6rxdM2AIxVAIcx
	kEcVAq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v2
	6r1j6r18McIj6I8E87Iv67AKxVWUJVW8JwAm72CE4IkC6x0Yz7v_Jr0_Gr1l7I0Y6sxI4w
	CY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkIecxEwVCI4VW8MxkI
	7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWUCVW8JwCYIxAIcVC0I7IYx2IY6x
	kF7I0E14v26r1j6r4UMxvI42IY6I8E87Iv67AKxVW8Jr0_Cr1UMxvI42IY6I8E87Iv6xkF
	7I0E14v26r4UJVWxJr1l42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwVAq07x20xyl4x
	8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1l4IxYO2xFxVAFwI0_JF0_Jw1lx2IqxVAq
	x4xG67AKxVWUJVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r1q6r
	43MIIYrxkI7VAKI48JMIIF0xvE42xK8VAvwI8IcIk0rVW3JVWrJrUvcSsGvfC2KfnxnUUI
	43ZEXa7IUOkMa5UUUUU==

On 9 November 2018 at 18:52, Ard Biesheuvel <ard.biesheuvel@linaro.org> wrote:
> On 9 November 2018 at 18:46, Josh Poimboeuf <jpoimboe@redhat.com> wrote:
>> On Fri, Nov 09, 2018 at 06:33:03PM +0100, Ard Biesheuvel wrote:
>>> On 9 November 2018 at 18:31, Josh Poimboeuf <jpoimboe@redhat.com> wrote:
>>> > On Fri, Nov 09, 2018 at 06:25:24PM +0100, Ard Biesheuvel wrote:
>>> >> On 9 November 2018 at 16:14, Ard Biesheuvel <ard.biesheuvel@linaro.org> wrote:
>>> >> > On 9 November 2018 at 16:10, Josh Poimboeuf <jpoimboe@redhat.com> wrote:
>>> >> >> On Fri, Nov 09, 2018 at 02:39:17PM +0100, Ard Biesheuvel wrote:
>>> >> >>> > +       for (site = start; site < stop; site++) {
>>> >> >>> > +               struct static_call_key *key = static_call_key(site);
>>> >> >>> > +               unsigned long addr = static_call_addr(site);
>>> >> >>> > +
>>> >> >>> > +               if (list_empty(&key->site_mods)) {
>>> >> >>> > +                       struct static_call_mod *mod;
>>> >> >>> > +
>>> >> >>> > +                       mod = kzalloc(sizeof(*mod), GFP_KERNEL);
>>> >> >>> > +                       if (!mod) {
>>> >> >>> > +                               WARN(1, "Failed to allocate memory for static calls");
>>> >> >>> > +                               return;
>>> >> >>> > +                       }
>>> >> >>> > +
>>> >> >>> > +                       mod->sites = site;
>>> >> >>> > +                       list_add_tail(&mod->list, &key->site_mods);
>>> >> >>> > +
>>> >> >>> > +                       /*
>>> >> >>> > +                        * The trampoline should no longer be used.  Poison it
>>> >> >>> > +                        * it with a BUG() to catch any stray callers.
>>> >> >>> > +                        */
>>> >> >>> > +                       arch_static_call_poison_tramp(addr);
>>> >> >>>
>>> >> >>> This patches the wrong thing: the trampoline is at key->func not addr.
>>> >> >>
>>> >> >> If you look at the x86 implementation, it actually does poison the
>>> >> >> trampoline.
>>> >> >>
>>> >> >> The address of the trampoline isn't actually known here.  key->func
>>> >> >> isn't the trampoline address; it's the destination func address.
>>> >> >>
>>> >> >> So instead I passed the address of the call instruction.  The arch code
>>> >> >> then reads the instruction to find the callee (the trampoline).
>>> >> >>
>>> >> >> The code is a bit confusing.  To make it more obvious, maybe we should
>>> >> >> add another arch function to read the call destination.  Then this code
>>> >> >> can pass that into arch_static_call_poison_tramp().
>>> >> >>
>>> >> >
>>> >> > Ah right, so I am basically missing a dereference in my
>>> >> > arch_static_call_poison_tramp() code if this breaks.
>>> >> >
>>> >>
>>> >> Could we call it 'defuse' rather than 'poision'? On arm64, we will
>>> >> need to keep it around to bounce function calls that are out of range,
>>> >> and replace it with a PLT sequence.
>>> >
>>> > Ok, but doesn't that defeat the purpose of the inline approach?
>>> >
>>>
>>> It does. But this only occurs when a module is loaded far away, and
>>> this will only happen if you have 2 GB range KASLR enabled, or your
>>> 128 MB module region gets exhausted for some reason, so the majority
>>> of calls should use a single relative branch.
>>
>> Makes sense.  Do you also account for the possibility that the original
>> call emitted by GCC was far away and thus used the PLT?
>>
>
> That doesn't really happen. vmlinux is never over 128 MB, and the
> modules are only partially linked, so the linker never gets to the
> stage where it needs to emit veneers.
>
> It's a bit fiddly since inline and out-of-line both use
> arch_static_call_transform(), but what I need to do is basically:
>
> - for out-of-line, the trampoline needs to be patched into a
> movn/movk/movk/br sequence if the target is too far
> - for inline, the trampoline itself needs to be patched from
> adrp/ldr/br (which does a load and a indirect branch) to
> movn/movk/movk/br (which uses immediates), and the call sites need to
> be patched into calls to the veneer if the target is out of range.
>
> So arch_static_call_transform() needs to know where the trampoline is
> for this use case, so could we perhaps add a 'void *orig' in the key
> struct that keeps track of the original value of 'addr' ?

... and pass it to arch_static_call_transform
