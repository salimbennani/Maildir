Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 10 Nov 2018 00:55:09 -0000
Received: from icoremail.net (unknown [209.85.214.172])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH7ZPwuVbGEtpAQ--.32244S3;
	Sat, 10 Nov 2018 01:22:24 +0800 (CST)
Received: from mail-pl1-f172.google.com (unknown [209.85.214.172])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAH6ENNwuVbF3wjAA--.4315S3;
	Sat, 10 Nov 2018 01:22:21 +0800 (CST)
Received: by mail-pl1-f172.google.com with SMTP id w22-v6so1237194plk.0
        for <xuliker@zju.edu.cn>; Fri, 09 Nov 2018 09:22:21 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:mime-version:content-transfer-encoding:sender
         :precedence:list-id;
        bh=ytS6uxOcV99jAW8dOhmzJXuNQTkloeOsNiy+jM2ANyI=;
        b=cEQxxONLoHywGGEd7j7NveSenwtjH71mETKmRRaJnKHJcZWE/ZZT+O44JJ46gRb1QK
         4u8axftgoeqlxNMTcIGlaW2PrI4h8gI7AC/Pc/Zz0otUoNEBdGpCmO6nBgMWMAPdXmIV
         YE/AaLQ0FgaBwrsNDS7j7dpiBgTHjRUQMWRj9LyanXQjp2CWHaHgdjVo33G6NL7ofl03
         0k8rpS64MPwAxYh6e7vjMh42Pt11fkegYlariPEmZ8tWl9LJw5FXIlQZ50aA1m+FPm/l
         9R7avlO3QoxeLKOenLy9caL5xOgtayv1ekc/nuZoRYVBvE4+2UF/O5XS0vLYZ6CbWFJk
         8jag==
X-Gm-Message-State: AGRZ1gK1ydf55w/rYlz1nfgEEZ/2j2MXD/kAFBLGB/EoU+oCCYQEc/8E
	IwSjiu3MMvrYIwmgmkDEbtMeqVKKsEEBOgZONYbqb8FXKsIxD16Qhw==
X-Received: by 2002:a17:902:a9:: with SMTP id a38-v6mr9834909pla.7.1541784141633;
        Fri, 09 Nov 2018 09:22:21 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp159268pjt;
        Fri, 9 Nov 2018 09:22:20 -0800 (PST)
X-Google-Smtp-Source: AJdET5c24/g5qNme5poKRw0kE4D2N8SE1q8NIiArF0E9NKmvglnphmJHFb0KT4gflNv9xKJQufQE
X-Received: by 2002:a63:4c23:: with SMTP id z35-v6mr8292710pga.312.1541784140911;
        Fri, 09 Nov 2018 09:22:20 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541784140; cv=none;
        d=google.com; s=arc-20160816;
        b=P6MXdKcGehQhN0aEVaCwM/ygwfRUZrsqKt9emg+g7EZqOJjcmKJqcNxXzrFaDa7qQq
         DZusRYR2/aKDyC63wrhLAODYDfQW2TQdpa8YajL3EMqtNR/4t8Omtje6KP6soPQodehL
         CJcHlBwj/h7eJ+pWKAlElZbFbOHi1zeA0bNfnfkaSF6W/SN2GfXupB0ZoQrk7mqO2gBE
         GF5d8wMnhsMwQ5VZd5SE1fwG3HSGw6Pf+nRKZTvqaKGOrwi0fUDrLWikdHZKRYo2E1bO
         H9FVISxQ5C+axE3cEX6LXXJJTdt8jnNkcrhEP/3hd90wYI1Zg2+nyGjG9dsQjjao2O5w
         ITrw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :message-id:date:subject:cc:to:from:dkim-signature;
        bh=ytS6uxOcV99jAW8dOhmzJXuNQTkloeOsNiy+jM2ANyI=;
        b=1Idg+7Vtf9iPIO0vlaW8HQ8lWEL1vIYh1boO8xdJaWmo85q+x2BLz4LccElusKV1dP
         axprQcwGcjpF8uaNGWO9e9tOkbb+WC0UckMqxxLU6SHbcNKrTiV5RXTe8taGYbuvUui7
         Gi1VBsMI/qMR9hYDxckYxgg9O/0YwDN1hvWWIfB1U7X2SHce2giw4Bzraf0ECqfrz9qQ
         dll8dWeH/qDBkuV9xkoJZ6d1WCF+se0O8tBW+QgSMsgT7fK//i0tJw6mJc+eLtbZQIYc
         0gUnKPe0y83par+7pLSl3zGBXAxxRy3g1TZbGepyX5JKJeItaoSUNlT+eLQLM3k3vLX5
         MdiA==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@bgdev-pl.20150623.gappssmtp.com header.s=20150623 header.b=1PFnXvZ9;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id q24si6871775pgi.334.2018.11.09.09.22.00;
        Fri, 09 Nov 2018 09:22:20 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728548AbeKJDDH (ORCPT <rfc822;tu.k.phung@gmail.com>
        + 99 others); Fri, 9 Nov 2018 22:03:07 -0500
Received: from mail-wr1-f67.google.com ([209.85.221.67]:38471 "EHLO
        mail-wr1-f67.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727995AbeKJDDH (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 9 Nov 2018 22:03:07 -0500
Received: by mail-wr1-f67.google.com with SMTP id e3-v6so2704354wrs.5
        for <linux-kernel@vger.kernel.org>; Fri, 09 Nov 2018 09:21:35 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=bgdev-pl.20150623.gappssmtp.com; s=20150623;
        h=from:to:cc:subject:date:message-id:mime-version
         :content-transfer-encoding;
        bh=ytS6uxOcV99jAW8dOhmzJXuNQTkloeOsNiy+jM2ANyI=;
        b=1PFnXvZ9XUZx3pfDZ5VdhqhNDqDP1spNnV4oiKbCVDEyqqmREOR9QkoCQRaIkLFUFu
         d9ju0RTop6XK5vFUu1PwUP9C09OCB/A+AgMZGLsWg/gLClaK9dXWKj9JsVMX85h9nITC
         00aa2VxLszWpk8Y38b8DrxQUN4DitFeA8wcCBl3/yiU/Vr35DefJy1WSlkGlSVubmUBB
         Wk4fEoWOMrWdwdcAcBG5afcicWxpCq7f2FytJ1rJ9IY0rZgmbo0aekk0496OX2YoGkEK
         oYDcQYZkWaRfvsRfyfZI3Bvh8UNb/7Zb3pABvLrNYWLAnxB2TF0/zssxHaE6W3U96T2y
         VzUA==
X-Received: by 2002:a5d:620b:: with SMTP id y11-v6mr8744379wru.105.1541784095016;
        Fri, 09 Nov 2018 09:21:35 -0800 (PST)
Received: from localhost.localdomain (lfbn-mar-1-609-89.w90-118.abo.wanadoo.fr. [90.118.185.89])
        by smtp.gmail.com with ESMTPSA id r3-v6sm2864699wmd.25.2018.11.09.09.21.33
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Fri, 09 Nov 2018 09:21:34 -0800 (PST)
From: Bartosz Golaszewski <brgl@bgdev.pl>
To: Thomas Gleixner <tglx@linutronix.de>,
        =?UTF-8?q?Uwe=20Kleine-K=C3=B6nig?= 
        <u.kleine-koenig@pengutronix.de>
Cc: linux-kernel@vger.kernel.org, Bartosz Golaszewski <brgl@bgdev.pl>
Subject: [PATCH] irq/irq_sim: store multiple interrupt offsets in a bitmap
Date: Fri,  9 Nov 2018 18:21:32 +0100
Message-Id: <20181109172132.30939-1-brgl@bgdev.pl>
X-Mailer: git-send-email 2.19.1
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAH6ENNwuVbF3wjAA--.4315S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxJFyxWF4fXFy3Gry7AF43KFg_yoW5Ww4DpF
	Z8Gr1Svr4xX3W2grZ3Gw4DArySgw15Gw17CrZ5WryfGrWUtrnavas7Jr4YqF1Fvrs5uF1U
	ArWrKa18Cr1UJr7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPqb7Iv0xC_tr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_Cr1j6rxdM28EF7xvwVC2z280aVCY1x0267AKxVWxJr0_GcWle2I262IYc4
	CY6c8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_
	Jr0_Jr4lYx0Ex4A2jsIE14v26r1j6r4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvY0x
	0EwIxGrwCjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44l
	c2xSY4AK6IIF6r4lc2IjII80xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26r4j6ryUMx
	vI42IY6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1lcIIF0xvEx4A2jsIE14v26r4UJVWxJr1l
	cIIF0xvEx4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwCF04k20xvY0x0EwIxGrwCF04k20xvEw4
	C26cxK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E
	14v26r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_JF0_Jw1lIx
	kGc2Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6r4j6FyUYxBIdaVFxhVjvjDU0xZFpf9x
	07b1XdbUUUUU=

Two threads can try to fire the irq_sim with different offsets and will
end up fighting for the irq_work asignment. Thomas Gleixner suggested a
solution based on a bitfield where we set a bit for every offset
associated with an interrupt that should be fired and then iterate over
all set bits in the interrupt handler.

This is a slightly modified solution using a bitmap so that we don't
impose a limit on the number of interrupts one can allocate with
irq_sim.

Suggested-by: Thomas Gleixner <tglx@linutronix.de>
Signed-off-by: Bartosz Golaszewski <brgl@bgdev.pl>
---
 include/linux/irq_sim.h |  2 +-
 kernel/irq/irq_sim.c    | 23 +++++++++++++++++++++--
 2 files changed, 22 insertions(+), 3 deletions(-)

diff --git a/include/linux/irq_sim.h b/include/linux/irq_sim.h
index 630a57e55db6..4500d453a63e 100644
--- a/include/linux/irq_sim.h
+++ b/include/linux/irq_sim.h
@@ -16,7 +16,7 @@
 
 struct irq_sim_work_ctx {
 	struct irq_work		work;
-	int			irq;
+	unsigned long		*pending;
 };
 
 struct irq_sim_irq_ctx {
diff --git a/kernel/irq/irq_sim.c b/kernel/irq/irq_sim.c
index dd20d0d528d4..98a20e1594ce 100644
--- a/kernel/irq/irq_sim.c
+++ b/kernel/irq/irq_sim.c
@@ -34,9 +34,20 @@ static struct irq_chip irq_sim_irqchip = {
 static void irq_sim_handle_irq(struct irq_work *work)
 {
 	struct irq_sim_work_ctx *work_ctx;
+	unsigned int offset = 0;
+	struct irq_sim *sim;
+	int irqnum;
 
 	work_ctx = container_of(work, struct irq_sim_work_ctx, work);
-	handle_simple_irq(irq_to_desc(work_ctx->irq));
+	sim = container_of(work_ctx, struct irq_sim, work_ctx);
+
+	while (!bitmap_empty(work_ctx->pending, sim->irq_count)) {
+		offset = find_next_bit(work_ctx->pending,
+				       sim->irq_count, offset);
+		clear_bit(offset, work_ctx->pending);
+		irqnum = irq_sim_irqnum(sim, offset);
+		handle_simple_irq(irq_to_desc(irqnum));
+	}
 }
 
 /**
@@ -63,6 +74,13 @@ int irq_sim_init(struct irq_sim *sim, unsigned int num_irqs)
 		return sim->irq_base;
 	}
 
+	sim->work_ctx.pending = bitmap_zalloc(num_irqs, GFP_KERNEL);
+	if (!sim->work_ctx.pending) {
+		kfree(sim->irqs);
+		irq_free_descs(sim->irq_base, num_irqs);
+		return -ENOMEM;
+	}
+
 	for (i = 0; i < num_irqs; i++) {
 		sim->irqs[i].irqnum = sim->irq_base + i;
 		sim->irqs[i].enabled = false;
@@ -89,6 +107,7 @@ EXPORT_SYMBOL_GPL(irq_sim_init);
 void irq_sim_fini(struct irq_sim *sim)
 {
 	irq_work_sync(&sim->work_ctx.work);
+	bitmap_free(sim->work_ctx.pending);
 	irq_free_descs(sim->irq_base, sim->irq_count);
 	kfree(sim->irqs);
 }
@@ -143,7 +162,7 @@ EXPORT_SYMBOL_GPL(devm_irq_sim_init);
 void irq_sim_fire(struct irq_sim *sim, unsigned int offset)
 {
 	if (sim->irqs[offset].enabled) {
-		sim->work_ctx.irq = irq_sim_irqnum(sim, offset);
+		set_bit(offset, sim->work_ctx.pending);
 		irq_work_queue(&sim->work_ctx.work);
 	}
 }
-- 
2.19.1
