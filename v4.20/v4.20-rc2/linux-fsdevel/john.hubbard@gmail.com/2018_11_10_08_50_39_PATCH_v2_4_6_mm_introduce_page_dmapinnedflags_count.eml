Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 11 Nov 2018 15:02:36 -0000
Received: from icoremail.net (unknown [209.85.210.170])
	by mail-app2 (Coremail) with SMTP id by_KCgD3__snnOZbAcdtAQ--.33677S3;
	Sat, 10 Nov 2018 16:51:51 +0800 (CST)
Received: from mail-pf1-f170.google.com (unknown [209.85.210.170])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBXP0slnOZbkzomAA--.6398S3;
	Sat, 10 Nov 2018 16:51:49 +0800 (CST)
Received: by mail-pf1-f170.google.com with SMTP id v68-v6so2023900pfk.0
        for <xuliker@zju.edu.cn>; Sat, 10 Nov 2018 00:51:49 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=RQzYRGwRvGy0wTzTibOwCgnjvzX67G4/Egjyof1ACX0=;
        b=NsTLkdKIIBmFFIVarshCroFZsjxP+hYkR/C2xKyKmMw1NhAj8qpW+Brd5DPL1gOZ4X
         odl2VzAF33hXMnDJNt9ZNAhFuEBCK0m09bEE7lQw3RmYPe8NLMuh7llWvis0EX/ROBCB
         BJm7PNKkEJjHOVWomQzP3Z6xfenzYMQVJJ56YpsTfSX+PO2Hb7oDLWC0vhn2D4E8rIEU
         clvG1dPnTOn7lIL2d450tZoTgeGoViFzBnWSGl3gb/BzeTHDUd9uI3RjTp4Jd0eq34CR
         WW9HbRcAkYiQm4ABezCCYUuCEcHJ+xLocXu2cajVLIuybtNnz7KnADT092Vxv8Nkrnd/
         x/7Q==
X-Gm-Message-State: AGRZ1gJQxYLh35VehEwhlnq39U2RHo7FAaYJDjxK8jrhUxCNioTaQMeF
	/7OFu7nK+ZHSfoMuUqJbtmLqN0NaW8JWYQLk2XjqTnZxZ+f6upU=
X-Received: by 2002:a65:66ce:: with SMTP id c14mr10355217pgw.450.1541839909613;
        Sat, 10 Nov 2018 00:51:49 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp892213pjt;
        Sat, 10 Nov 2018 00:51:48 -0800 (PST)
X-Google-Smtp-Source: AJdET5c9LecqF8n91DKMpqX00MTA4dDxyUav9Hgve3uLrJRxoZNie67i/0xzFSLpQN0ZrpQaZkpA
X-Received: by 2002:a17:902:b498:: with SMTP id y24-v6mr12445400plr.179.1541839908886;
        Sat, 10 Nov 2018 00:51:48 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541839908; cv=none;
        d=google.com; s=arc-20160816;
        b=IFu6erZZs6zAz/dy7TRlBk7WurtM2MfAq/d6cL1jIl1FKd0dcxNB1AjK5FWllCAk8p
         O6uIemHU9lBMbxDbfroid/0IEt+OryjG50ZNJvR5K6e62PUX/BcEFWE21ldJF+FA4Y68
         E+xrv6isK18XTxFPe2SKk7G6Ec6h2v3bGIcfsEbhrnqqCuC5mZKaj7c7zj/SWfCeg3YA
         2Hzt2TK6Mk8AncYgO/+dbx1Gr2F1CamJJUTb6CSjKZKHgp58VbuBR6bL72mCs/ITbdEP
         TkkIpjPqCHlteWQM/8N8xpPoYCG6xJ/wRly01pWba5u/wyZ5/48DlCa4gZz/oiNlIaZE
         qlFQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :references:in-reply-to:message-id:date:subject:cc:to:from
         :dkim-signature;
        bh=RQzYRGwRvGy0wTzTibOwCgnjvzX67G4/Egjyof1ACX0=;
        b=lkbRo4USY1Z6up1RGYHAAjmoJT/efFcMLNd+loB/91MaP2OVRYYsy4TnwyefilQsQ1
         Z5PInABypKyQdCTJtd6Rc0y+iqB30JlAvrgV13ciBDohkA4hQ/9AZiXg14Mp2kRP20FG
         q7FqMiHGpzlklHx4fna+KuNLGHNup/CjERR62QRxdN+skgrcR2ACk3mHz4xK5aqAVaqq
         t5dkOS6f/3t7JycjYgxkM6fDmObwTunL8QUbPwhN20wbJpNEOvh+HLns+WbN/tkByZqI
         Hnh3ijs1ZlPcijyK9+FAZxEJFFVt4x4UOynRnSW2Rj9bQzuWAhrIqPEVmWWkGcdtLXAR
         dD3g==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@gmail.com header.s=20161025 header.b=Nk1YTnRF;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=NONE sp=QUARANTINE dis=NONE) header.from=gmail.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id t7-v6si10098868plo.191.2018.11.10.00.51.34;
        Sat, 10 Nov 2018 00:51:48 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729093AbeKJSfQ (ORCPT <rfc822;tu.k.phung@gmail.com>
        + 99 others); Sat, 10 Nov 2018 13:35:16 -0500
Received: from mail-ot1-f66.google.com ([209.85.210.66]:36518 "EHLO
        mail-ot1-f66.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728791AbeKJSfP (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 10 Nov 2018 13:35:15 -0500
Received: by mail-ot1-f66.google.com with SMTP id k98so3842864otk.3;
        Sat, 10 Nov 2018 00:51:02 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=RQzYRGwRvGy0wTzTibOwCgnjvzX67G4/Egjyof1ACX0=;
        b=Nk1YTnRFfBampYP+ABeK+Un57RtMYNfo/3F2nSHiwhJFjzIBleqVo+73lk8MB51Izy
         vHTKQSxOcRzd5GKuK+ZuneQVBj5LhakzxqRIWpcWkFsK+2Y4/6/HhKVCoCGjtTKnQme0
         mxw6kxocbuOt1uKg8Dou8OrX9zu7rmMpaGcQ1MHUNA17SCR+ZKPtd/dFtnDRolbMq+2y
         Iiz5jP3c5s1/Ro3JX46aJRWBJ02ZdoTR7tWR5TGujgjNh3n5geS07IGo7h7sMLjGRQx1
         zZQdIHUtZSCDAoH8wKvyNWNYcl+ub5HJWTS7RiuGA2HMdhyVSwUC1dNoYjeI4ovOahLJ
         uljw==
X-Received: by 2002:a9d:2007:: with SMTP id n7mr6641465ota.157.1541839861680;
        Sat, 10 Nov 2018 00:51:01 -0800 (PST)
Received: from sandstorm.nvidia.com ([2600:1700:43b0:3120:feaa:14ff:fe9e:34cb])
        by smtp.gmail.com with ESMTPSA id c7-v6sm3908683oia.58.2018.11.10.00.50.59
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Sat, 10 Nov 2018 00:51:00 -0800 (PST)
From: john.hubbard@gmail.com
X-Google-Original-From: jhubbard@nvidia.com
To: linux-mm@kvack.org
Cc: Andrew Morton <akpm@linux-foundation.org>,
        LKML <linux-kernel@vger.kernel.org>,
        linux-rdma <linux-rdma@vger.kernel.org>,
        linux-fsdevel@vger.kernel.org, John Hubbard <jhubbard@nvidia.com>,
        Matthew Wilcox <willy@infradead.org>,
        Michal Hocko <mhocko@kernel.org>,
        Christopher Lameter <cl@linux.com>,
        Jason Gunthorpe <jgg@ziepe.ca>,
        Dan Williams <dan.j.williams@intel.com>,
        Jan Kara <jack@suse.cz>, Balbir Singh <bsingharora@gmail.com>
Subject: [PATCH v2 4/6] mm: introduce page->dma_pinned_flags, _count
Date: Sat, 10 Nov 2018 00:50:39 -0800
Message-Id: <20181110085041.10071-5-jhubbard@nvidia.com>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181110085041.10071-1-jhubbard@nvidia.com>
References: <20181110085041.10071-1-jhubbard@nvidia.com>
MIME-Version: 1.0
X-NVConfidentiality: public
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBXP0slnOZbkzomAA--.6398S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxur1xKrW7Jw1DGry5JFW3GFg_yoWrur4UpF
	ZIkFyYkF47JFnI9a42vFsFkr43Xws5u3y7A3sxGwsYya45trWrZrn3Wr45Gr1rWr42kF18
	WF43KF90kFWUJFUanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUm0b7Iv0xC_KF4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_JrI_
	JrylYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvY0x0EwI
	xGrwAKzVCY07xG64k0F24l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCF
	zxkY4VCF77xAMxkIecxEwVCI4VW8ZwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcV
	AFwI0_Gr0_Xr1lcIIF0xvE2Ix0cI8IcVCY1x0267AKxVW8JVWxJwCYIxAIcVC2z280aVAF
	wI0_Cr1j6rxdMxvI42IY6I8E87Iv6xkF7I0E14v26F4UJVW0owCF04k20xvY0x0EwIxGrw
	CF04k20xvEw4C26cxK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC2
	0s026c02F40E14v26r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI
	0_Jw0_GFylIxkGc2Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6r4j6FyUYxBIdaVFxhVj
	vjDU0xZFpf9x07bYo7tUUUUU=

From: John Hubbard <jhubbard@nvidia.com>

Add two struct page fields that, combined, are unioned with
struct page->lru. There is no change in the size of
struct page. These new fields are for type safety and clarity.

Also add page flag accessors to test, set and clear the new
page->dma_pinned_flags field.

The page->dma_pinned_count field will be used in upcoming
patches.

Cc: Matthew Wilcox <willy@infradead.org>
Cc: Michal Hocko <mhocko@kernel.org>
Cc: Christopher Lameter <cl@linux.com>
Cc: Jason Gunthorpe <jgg@ziepe.ca>
Cc: Dan Williams <dan.j.williams@intel.com>
Cc: Jan Kara <jack@suse.cz>
Cc: Balbir Singh <bsingharora@gmail.com>
Signed-off-by: John Hubbard <jhubbard@nvidia.com>
---
 include/linux/mm_types.h   | 22 ++++++++++----
 include/linux/page-flags.h | 61 ++++++++++++++++++++++++++++++++++++++
 2 files changed, 77 insertions(+), 6 deletions(-)

diff --git a/include/linux/mm_types.h b/include/linux/mm_types.h
index 5ed8f6292a53..017ab82e36ca 100644
--- a/include/linux/mm_types.h
+++ b/include/linux/mm_types.h
@@ -78,12 +78,22 @@ struct page {
 	 */
 	union {
 		struct {	/* Page cache and anonymous pages */
-			/**
-			 * @lru: Pageout list, eg. active_list protected by
-			 * zone_lru_lock.  Sometimes used as a generic list
-			 * by the page owner.
-			 */
-			struct list_head lru;
+			union {
+				/**
+				 * @lru: Pageout list, eg. active_list protected
+				 * by zone_lru_lock.  Sometimes used as a
+				 * generic list by the page owner.
+				 */
+				struct list_head lru;
+				/* Used by get_user_pages*(). Pages may not be
+				 * on an LRU while these dma_pinned_* fields
+				 * are in use.
+				 */
+				struct {
+					unsigned long dma_pinned_flags;
+					atomic_t      dma_pinned_count;
+				};
+			};
 			/* See page-flags.h for PAGE_MAPPING_FLAGS */
 			struct address_space *mapping;
 			pgoff_t index;		/* Our offset within mapping. */
diff --git a/include/linux/page-flags.h b/include/linux/page-flags.h
index 50ce1bddaf56..3190b6b6a82f 100644
--- a/include/linux/page-flags.h
+++ b/include/linux/page-flags.h
@@ -437,6 +437,67 @@ static __always_inline int __PageMovable(struct page *page)
 				PAGE_MAPPING_MOVABLE;
 }
 
+/*
+ * Because page->dma_pinned_flags is unioned with page->lru, any page that
+ * uses these flags must NOT be on an LRU. That's partly enforced by
+ * ClearPageDmaPinned, which gives the page back to LRU.
+ *
+ * PageDmaPinned is checked without knowing whether it is a tail page or a
+ * PageDmaPinned page. For that reason, PageDmaPinned avoids PageTail (the 0th
+ * bit in the first union of struct page), and instead uses bit 1 (0x2),
+ * rather than bit 0.
+ *
+ * PageDmaPinned can only be used if no other systems are using the same bit
+ * across the first struct page union. In this regard, it is similar to
+ * PageTail, and in fact, because of PageTail's constraint that bit 0 be left
+ * alone, bit 1 is also left alone so far: other union elements (ignoring tail
+ * pages) put pointers there, and pointer alignment leaves the lower two bits
+ * available.
+ *
+ * So, constraints include:
+ *
+ *     -- Only use PageDmaPinned on non-tail pages.
+ *     -- Remove the page from any LRU list first.
+ */
+#define PAGE_DMA_PINNED		0x2UL
+#define PAGE_DMA_PINNED_WAS_LRU	0x4UL
+
+static __always_inline int PageDmaPinned(struct page *page)
+{
+	VM_BUG_ON(page != compound_head(page));
+	return test_bit(PAGE_DMA_PINNED, &page->dma_pinned_flags);
+}
+
+static __always_inline void SetPageDmaPinned(struct page *page)
+{
+	VM_BUG_ON(page != compound_head(page));
+	set_bit(PAGE_DMA_PINNED, &page->dma_pinned_flags);
+}
+
+static __always_inline void ClearPageDmaPinned(struct page *page)
+{
+	VM_BUG_ON(page != compound_head(page));
+	clear_bit(PAGE_DMA_PINNED, &page->dma_pinned_flags);
+}
+
+static __always_inline int PageDmaPinnedWasLru(struct page *page)
+{
+	VM_BUG_ON(page != compound_head(page));
+	return test_bit(PAGE_DMA_PINNED_WAS_LRU, &page->dma_pinned_flags);
+}
+
+static __always_inline void SetPageDmaPinnedWasLru(struct page *page)
+{
+	VM_BUG_ON(page != compound_head(page));
+	set_bit(PAGE_DMA_PINNED_WAS_LRU, &page->dma_pinned_flags);
+}
+
+static __always_inline void ClearPageDmaPinnedWasLru(struct page *page)
+{
+	VM_BUG_ON(page != compound_head(page));
+	clear_bit(PAGE_DMA_PINNED_WAS_LRU, &page->dma_pinned_flags);
+}
+
 #ifdef CONFIG_KSM
 /*
  * A KSM page is one of those write-protected "shared pages" or "merged pages"
-- 
2.19.1
