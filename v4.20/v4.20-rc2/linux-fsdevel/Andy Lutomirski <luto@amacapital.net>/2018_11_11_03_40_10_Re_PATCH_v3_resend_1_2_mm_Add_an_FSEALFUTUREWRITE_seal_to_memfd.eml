Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 11 Nov 2018 15:04:33 -0000
Received: from icoremail.net (unknown [209.85.215.177])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH+bCpOdbmMhyAQ--.34582S3;
	Sun, 11 Nov 2018 11:40:52 +0800 (CST)
Received: from mail-pg1-f177.google.com (unknown [209.85.215.177])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCnfTm_pOdbIOspAA--.3173S3;
	Sun, 11 Nov 2018 11:40:47 +0800 (CST)
Received: by mail-pg1-f177.google.com with SMTP id f8-v6so2529584pgq.5
        for <xuliker@zju.edu.cn>; Sat, 10 Nov 2018 19:40:47 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:mime-version:subject
         :from:in-reply-to:date:cc:content-transfer-encoding:message-id
         :references:to:sender:precedence:list-id;
        bh=sZ96Is/d5syZBZkdOpq6Hnx5+R2Fhp/VLiozhOlKGJk=;
        b=RjKYCJSplA1pdeXiACYx0G/p8xE7gk26Vdxw800MAncvMAt71+3XNfQWTJiXZydc+d
         4jQSHvvkL09inqHUAnQ7hE03SfNRlzQYtvm0S0W4papNHW9MsS9bdcU6kfyCPm5nyTOv
         LM+nFhuwDxfaijxTqQnJqJmr3B6ekKoLkTP4igBkb8x72RyMvYY9rlrXHzkkEJcXzeis
         pqZPHKgVsP6mDz/sZRw/xkWKSoUFURPo2sdYaWc7tY0pqqUTNYs41QEQyDsIjUh10+lb
         Jai2TQu9DqbHMrO0BMV3ZKFEYnDkrmdqa+kJIF+BpC347FZBwb5Vr4KBFe3GrTtJ1yXj
         YyZA==
X-Gm-Message-State: AGRZ1gIWBjX7F/p7YNXKnDFGX3xEwgsNYO1dgIjh0yWcOSoQ90FkKA3b
	oWTIQocb09KkQ+eApp5F+AnqkjWzhx+PlUD6SLHdAtfyclkdhg8=
X-Received: by 2002:a63:bc02:: with SMTP id q2mr8692566pge.116.1541907647083;
        Sat, 10 Nov 2018 19:40:47 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp1723929pjt;
        Sat, 10 Nov 2018 19:40:45 -0800 (PST)
X-Google-Smtp-Source: AJdET5eG4lOQxrz4GPQOFJgKRkwFXBevqnWm0U3QGXiYC5kXf9vObmDCWhHHApHN08H1/otJQ/Vw
X-Received: by 2002:a63:a612:: with SMTP id t18-v6mr12830179pge.338.1541907645674;
        Sat, 10 Nov 2018 19:40:45 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541907645; cv=none;
        d=google.com; s=arc-20160816;
        b=LI2/uW55Wfp0q2sopjbY9V2LlwEg8V5Zz1APbdvH1yCTH5P7n1Ss585q4FawnrxyhY
         oAencAOL/D5fLsTr6M0cSdJ0239aRYfUWQVzku1/C+t6jfAhStVw5JMAkTqtjZRlI1SE
         GMEqaMKsvGwVcHtaoA6DW6ZitesoA82vZsO1+nO5keopnjPCF75SjGpEwLb+jtdzS3JA
         ofDZJR64GeYs/e7roDzRPLigKzajlsknm/cqoXyFhiiPtyThrcDhwdPQalVNR8V+MTG7
         Y8kQw4l5WB7YBF/968yCWULwxGi+EGLwzbgkgDVV3jikarq9NyZ4eAIkaBnX1CKXIxFm
         CJzQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:to:references:message-id
         :content-transfer-encoding:cc:date:in-reply-to:from:subject
         :mime-version:dkim-signature;
        bh=sZ96Is/d5syZBZkdOpq6Hnx5+R2Fhp/VLiozhOlKGJk=;
        b=DkumcbC9AWn0unu81yaEeLyBBg3Dxhi5SjvjlMSBwvCTJjGItjnvxNs4U3ZZ+sLfF+
         k/ci7toJ56HuaHl6/H6Ja7ZMMKlLc2Zkpgo45AAIGcrEychkMpyZ/0xUnYqtrD/9xENJ
         YC4rDrlu6OLEscnvJpCD9NBaxj+K16GFT6+bMIaxr0x1MbwecaeBVTBTez/A7OeQCLWZ
         XuFgpR/Ts/klDYnqj1q6Sll6w//8vU+lUA7PYTiHsUFQry1mwfojQP5ESRL2bGN3JIrp
         Wy4wLT/wxZOs22AMEuxftG7H+0sIBaNSwfj7SDyv6aIWZz/f6PRfECDfGPlqiZuT0gMo
         VNLQ==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@amacapital-net.20150623.gappssmtp.com header.s=20150623 header.b=0WLJUr6N;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id y2-v6si12311947pgc.430.2018.11.10.19.40.17;
        Sat, 10 Nov 2018 19:40:45 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727402AbeKKN1b (ORCPT <rfc822;tu.k.phung@gmail.com>
        + 99 others); Sun, 11 Nov 2018 08:27:31 -0500
Received: from mail-pf1-f196.google.com ([209.85.210.196]:33584 "EHLO
        mail-pf1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727260AbeKKN1a (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sun, 11 Nov 2018 08:27:30 -0500
Received: by mail-pf1-f196.google.com with SMTP id v68-v6so2699065pfk.0
        for <linux-kernel@vger.kernel.org>; Sat, 10 Nov 2018 19:40:13 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=amacapital-net.20150623.gappssmtp.com; s=20150623;
        h=mime-version:subject:from:in-reply-to:date:cc
         :content-transfer-encoding:message-id:references:to;
        bh=sZ96Is/d5syZBZkdOpq6Hnx5+R2Fhp/VLiozhOlKGJk=;
        b=0WLJUr6NbfhBLLjDB50qU+85f0kvf6oHa2CXNxh26aB71AMrjl23qovG8khpKopCwY
         r74KJ8uDW8IKZx+Z6gSwOXgysAB48fFosHirTK+7hJSyste9m3hbs3dsPRMKau1PNJla
         p6DhjcZYS/MmYYj5Oj9A+/Xj3/lzNswSE2uJkAKfQc3YIeaZczHHIivcIo1ygtv5w4Za
         a1WSES4hVwG1zD1mWf01HSI0G7D2lxTgmDaSnhqvSvKO64y5eXwKCP65EBSWPavWrSFJ
         5Up28m1xDQVEZRV+ePGtvu502J0hUZ7PWF5/kuUshZYCnk5xOtHNKQ2GyFYgTFe5KuBc
         GzKw==
X-Received: by 2002:a63:790e:: with SMTP id u14mr12908007pgc.452.1541907612936;
        Sat, 10 Nov 2018 19:40:12 -0800 (PST)
Received: from ?IPv6:2600:1010:b026:ccca:748f:8cd2:cbf4:9038? ([2600:1010:b026:ccca:748f:8cd2:cbf4:9038])
        by smtp.gmail.com with ESMTPSA id f6-v6sm15382058pfg.128.2018.11.10.19.40.11
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Sat, 10 Nov 2018 19:40:11 -0800 (PST)
Content-Type: text/plain;
        charset=utf-8
Mime-Version: 1.0 (1.0)
Subject: Re: [PATCH v3 resend 1/2] mm: Add an F_SEAL_FUTURE_WRITE seal to memfd
From: Andy Lutomirski <luto@amacapital.net>
X-Mailer: iPhone Mail (16A404)
In-Reply-To: <20181111023808.GA174670@google.com>
Date: Sat, 10 Nov 2018 19:40:10 -0800
Cc: Daniel Colascione <dancol@google.com>,
        Jann Horn <jannh@google.com>,
        kernel list <linux-kernel@vger.kernel.org>,
        John Reck <jreck@google.com>,
        John Stultz <john.stultz@linaro.org>,
        Todd Kjos <tkjos@google.com>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Christoph Hellwig <hch@infradead.org>,
        Al Viro <viro@zeniv.linux.org.uk>,
        Andrew Morton <akpm@linux-foundation.org>,
        Bruce Fields <bfields@fieldses.org>,
        Jeff Layton <jlayton@kernel.org>,
        Khalid Aziz <khalid.aziz@oracle.com>, Lei.Yang@windriver.com,
        linux-fsdevel@vger.kernel.org, linux-kselftest@vger.kernel.org,
        Linux-MM <linux-mm@kvack.org>, marcandre.lureau@redhat.com,
        Mike Kravetz <mike.kravetz@oracle.com>,
        Minchan Kim <minchan@kernel.org>,
        Shuah Khan <shuah@kernel.org>,
        Valdis Kletnieks <valdis.kletnieks@vt.edu>,
        Hugh Dickins <hughd@google.com>,
        Linux API <linux-api@vger.kernel.org>
Content-Transfer-Encoding: quoted-printable
Message-Id: <543A5181-3A16-438E-B372-97BEC48A74F8@amacapital.net>
References: <20181108041537.39694-1-joel@joelfernandes.org> <CAG48ez1h=v-JYnDw81HaYJzOfrNhwYksxmc2r=cJvdQVgYM+NA@mail.gmail.com> <CAG48ez0kQ4d566bXTFOYANDgii-stL-Qj-oyaBzvfxdV=PU-7g@mail.gmail.com> <20181110032005.GA22238@google.com> <69CE06CC-E47C-4992-848A-66EB23EE6C74@amacapital.net> <20181110182405.GB242356@google.com> <CAKOZuesQXRtthJTEr86LByH3gPpAdT-PQM0d1jqr131=zZNRKw@mail.gmail.com> <CAKOZueum8MtNvJ5P=W7_pRw62TdQdCgyjCwwbG1wezNboC1cxQ@mail.gmail.com> <20181110220933.GB96924@google.com> <907D942E-E321-4BD7-BED7-ACD1D96A3643@amacapital.net> <20181111023808.GA174670@google.com>
To: Joel Fernandes <joel@joelfernandes.org>
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwCnfTm_pOdbIOspAA--.3173S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxKF1xtF4rAw1UWFWfWrWDtwb_yoWxXr1kpF
	W5G3WYkr4kJFyUArn2yF18JFWrtr48Jr47Xrn0gryjvwn0vr1Sgr4rJr4j9FyxZr4xGw4j
	vrWjyryxZFyUA3DanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUU9vb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r1j6r4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvY0x0EwI
	xGrwCjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE
	2Ix0cI8IcVAFwI0_Jr0_JF4lcIIF0xvE2Ix0cI8IcVCY1x0267AKxVWUJVW8JwCYIxAIcV
	C2z280aVAFwI0_Gr1j6F4UJwCYIxAIcVC2z280aVCY1x0267AKxVW8Jr0_Cr1UMxAIw28I
	cxkI7VAKI48JMxAIw28IcVAKzI0EY4vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4
	AY6r1j6r4UMI8I3I0E5I8CrVAFwI0_Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE
	17CEb7AF67AKxVW8ZVWrXwCIc40Y0x0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Wr1j6r
	W3JrUvcSsGvfC2KfnxnUUI43ZEXa7IUYd8n5UUUUU==



> On Nov 10, 2018, at 6:38 PM, Joel Fernandes <joel@joelfernandes.org> wrote=
:
>=20
>> On Sat, Nov 10, 2018 at 02:18:23PM -0800, Andy Lutomirski wrote:
>>=20
>>>> On Nov 10, 2018, at 2:09 PM, Joel Fernandes <joel@joelfernandes.org> wr=
ote:
>>>>=20
>>>>> On Sat, Nov 10, 2018 at 11:11:27AM -0800, Daniel Colascione wrote:
>>>>>> On Sat, Nov 10, 2018 at 10:45 AM, Daniel Colascione <dancol@google.co=
m> wrote:
>>>>>> On Sat, Nov 10, 2018 at 10:24 AM, Joel Fernandes <joel@joelfernandes.=
org> wrote:
>>>>>> Thanks Andy for your thoughts, my comments below:
>>>> [snip]
>>>>>> I don't see it as warty, different seals will work differently. It wo=
rks
>>>>>> quite well for our usecase, and since Linux is all about solving real=

>>>>>> problems in the real work, it would be useful to have it.
>>>>>>=20
>>>>>>> - causes a probably-observable effect in the file mode in F_GETFL.
>>>>>>=20
>>>>>> Wouldn't that be the right thing to observe anyway?
>>>>>>=20
>>>>>>> - causes reopen to fail.
>>>>>>=20
>>>>>> So this concern isn't true anymore if we make reopen fail only for WR=
ITE
>>>>>> opens as Daniel suggested. I will make this change so that the securi=
ty fix
>>>>>> is a clean one.
>>>>>>=20
>>>>>>> - does *not* affect other struct files that may already exist on the=
 same inode.
>>>>>>=20
>>>>>> TBH if you really want to block all writes to the file, then you want=

>>>>>> F_SEAL_WRITE, not this seal. The usecase we have is the fd is sent ov=
er IPC
>>>>>> to another process and we want to prevent any new writes in the recei=
ver
>>>>>> side. There is no way this other receiving process can have an existi=
ng fd
>>>>>> unless it was already sent one without the seal applied.  The propose=
d seal
>>>>>> could be renamed to F_SEAL_FD_WRITE if that is preferred.
>>>>>>=20
>>>>>>> - mysteriously malfunctions if you try to set it again on another st=
ruct
>>>>>>> file that already exists
>>>>>>>=20
>>>>>>=20
>>>>>> I didn't follow this, could you explain more?
>>>>>>=20
>>>>>>> - probably is insecure when used on hugetlbfs.
>>>>>>=20
>>>>>> The usecase is not expected to prevent all writes, indeed the usecase=

>>>>>> requires existing mmaps to continue to be able to write into the memo=
ry map.
>>>>>> So would you call that a security issue too? The use of the seal want=
s to
>>>>>> allow existing mmap regions to be continue to be written into (I ment=
ioned
>>>>>> more details in the cover letter).
>>>>>>=20
>>>>>>> I see two reasonable solutions:
>>>>>>>=20
>>>>>>> 1. Don=E2=80=99t fiddle with the struct file at all. Instead make th=
e inode flag
>>>>>>> work by itself.
>>>>>>=20
>>>>>> Currently, the various VFS paths check only the struct file's f_mode t=
o deny
>>>>>> writes of already opened files. This would mean more checking in all t=
hose
>>>>>> paths (and modification of all those paths).
>>>>>>=20
>>>>>> Anyway going with that idea, we could
>>>>>> 1. call deny_write_access(file) from the memfd's seal path which decr=
ements
>>>>>> the inode::i_writecount.
>>>>>> 2. call get_write_access(inode) in the various VFS paths in addition t=
o
>>>>>> checking for FMODE_*WRITE and deny the write (incase i_writecount is n=
egative)
>>>>>>=20
>>>>>> That will prevent both reopens, and writes from succeeding. However I=
 worry a
>>>>>> bit about 2 not being too familiar with VFS internals, about what the=

>>>>>> consequences of doing that may be.
>>>>>=20
>>>>> IMHO, modifying both the inode and the struct file separately is fine,=

>>>>> since they mean different things. In regular filesystems, it's fine to=

>>>>> have a read-write open file description for a file whose inode grants
>>>>> write permission to nobody. Speaking of which: is fchmod enough to
>>>>> prevent this attack?
>>>>=20
>>>> Well, yes and no. fchmod does prevent reopening the file RW, but
>>>> anyone with permissions (owner, CAP_FOWNER) can just fchmod it back. A
>>>> seal is supposed to be irrevocable, so fchmod-as-inode-seal probably
>>>> isn't sufficient by itself. While it might be good enough for Android
>>>> (in the sense that it'll prevent RW-reopens from other security
>>>> contexts to which we send an open memfd file), it's still conceptually
>>>> ugly, IMHO. Let's go with the original approach of just tweaking the
>>>> inode so that open-for-write is permanently blocked.
>>>=20
>>> Agreed with the idea of modifying both file and inode flags. I was think=
ing
>>> modifying i_mode may do the trick but as you pointed it probably could b=
e
>>> reverted by chmod or some other attribute setting calls.
>>>=20
>>> OTOH, I don't think deny_write_access(file) can be reverted from any
>>> user-facing path so we could do that from the seal to prevent the future=

>>> opens in write mode. I'll double check and test that out tomorrow.
>>>=20
>>>=20
>>=20
>> This seems considerably more complicated and more fragile than needed. Ju=
st
>> add a new F_SEAL_WRITE_FUTURE.  Grep for F_SEAL_WRITE and make the _FUTUR=
E
>> variant work exactly like it with two exceptions:
>>=20
>> - shmem_mmap and maybe its hugetlbfs equivalent should check for it and a=
ct
>> accordingly.
>=20
> There's more to it than that, we also need to block future writes through
> write syscall, so we have to hook into the write path too once the seal is=

> set, not just the mmap. That means we have to add code in mm/shmem.c to do=

> that in all those handlers, to check for the seal (and hope we didn't miss=
 a
> file_operations handler). Is that what you are proposing?

The existing code already does this. That=E2=80=99s why I suggested grepping=
 :)

>=20
> Also, it means we have to keep CONFIG_TMPFS enabled so that the
> shmem_file_operations write handlers like write_iter are hooked up. Curren=
tly
> memfd works even with !CONFIG_TMPFS.

If so, that sounds like it may already be a bug.

>=20
>> - add_seals won=E2=80=99t need the wait_for_pins and mapping_deny_write l=
ogic.
>>=20
>> That really should be all that=E2=80=99s needed.
>=20
> It seems a fair idea what you're saying. But I don't see how its less
> complex.. IMO its far more simple to have VFS do the denial of the operati=
ons
> based on the flags of its datastructures.. and if it works (which I will t=
est
> to be sure it will), then we should be good.

I agree it=E2=80=99s complicated, but the code is already written.  You shou=
ld just need to adjust some masks.

>=20
> Btw by any chance, are you also coming by LPC conference next week?
>=20

No.  I=E2=80=99d like to, but I can=E2=80=99t make the trip this year.

> thanks!
>=20
> - Joel
>=20
