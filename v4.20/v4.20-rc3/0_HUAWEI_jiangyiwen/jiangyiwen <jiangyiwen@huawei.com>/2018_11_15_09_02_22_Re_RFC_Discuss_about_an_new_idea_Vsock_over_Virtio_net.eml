Return-Path: <kvm-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 15 Nov 2018 14:03:08 -0000
Received: from icoremail.net (unknown [209.85.214.175])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH8JRNu1bQJiYAQ--.45342S3;
	Thu, 15 Nov 2018 17:03:14 +0800 (CST)
Received: from mail-pl1-f175.google.com (unknown [209.85.214.175])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBHwExONu1bDOdCAA--.7529S3;
	Thu, 15 Nov 2018 17:03:10 +0800 (CST)
Received: by mail-pl1-f175.google.com with SMTP id a14so4579150plm.12
        for <xuliker@zju.edu.cn>; Thu, 15 Nov 2018 01:03:10 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :subject:to:references:cc:from:message-id:date:user-agent
         :mime-version:in-reply-to:content-transfer-encoding:sender
         :precedence:list-id;
        bh=mWfGxQUGH+nDUsVFvfKIujl7cXgqj5us8E3WyVEmj4o=;
        b=IxO2DrzoRKLfpy+3KpptiL5RDMcS99ZkVnNUEv+rhnTESodimFdXlD93L9VsR0rpBx
         WmWowFsyQOW526v1kVbSZBTWl1yh45n1Fl18YMDEWdpDwf/GBpb6Gt05sY2g+nes440u
         Kh3W2IcSLMjv2PKuzCumCiXlrkglA0WwIa1SPFjQLxOW7tRzLyioUPvzsjP6Fe+s89Dn
         q44+cc5OtMPqEnn1amiwVoFtSQKSxtJL58P/nlXCCDrFefWjSXi4xwS0Koe0Tc1Qn04i
         sQz1rofoSo+oJFAyc/CU41+6tpXC0mDfswyI8eG49xQzh6yjpt7Ftqp5SXMm053aHJxB
         wqbw==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of kvm-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=kvm-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gL/nPHu+KGhoIwZ4ANWgCAidl4AhEb8HyY75vmN9wl1ecgfmqd8
	RBYnR703yc/RTlclLsiDYJr+SQt1A3gAxKhqeEMpRYNFrfd7Z7u6oA==
X-Received: by 2002:a17:902:560f:: with SMTP id h15-v6mr5583340pli.160.1542272590193;
        Thu, 15 Nov 2018 01:03:10 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp306010pju;
        Thu, 15 Nov 2018 01:03:08 -0800 (PST)
X-Google-Smtp-Source: AJdET5etCdmo8eWzs8xotSwZ+6LZLkyhv+WgRmlxczeJv/HvB5QI1+ym0Nugwrb6YCwMnSzoV7ct
X-Received: by 2002:a62:8096:: with SMTP id j144mr5657431pfd.140.1542272588959;
        Thu, 15 Nov 2018 01:03:08 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542272588; cv=none;
        d=google.com; s=arc-20160816;
        b=d5NH3f2M6385BmkGIkfTD7dhLhfqDekwkfH/n7KJ3D9VQSlNWNhUnEY1lnHF5KKT5z
         InMxS+xmjAawN1JR72SOG6OGe18hJHsmlcXFq8bEGOCiFEfopUGQWJ+pyi+YoDKBZZWA
         lJ3uItU2TM65rEgbUUsJWiDhbRQucMk2yreXToO8kPcdZEkGYHqA8v7imhOEXK+3JVNH
         5GGom3Pm0+MeFM0QMFz79XF9fS+ZZfLQz38yudqMc/23bXVhnK8+i1UatcCdjAEAnuqS
         A4QV0WsOM1sobW3to1QpOrbsfv9CU2TSw9pLlUXJCbt/gwJlx0eA+hO2EwiyX9RjV2BA
         KWAw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:in-reply-to
         :mime-version:user-agent:date:message-id:from:cc:references:to
         :subject;
        bh=mWfGxQUGH+nDUsVFvfKIujl7cXgqj5us8E3WyVEmj4o=;
        b=KY5ZUwqE/4AxV9dScYmsXVJuwnDkPoBQyOhPvjg2NpvmJXdRilf9Ls2baEt4qWH6y9
         gtNcpMErDmUWwla6SSayr4I2q4VlUu/xDGdOtToUvZfBkTwsVSZ4HQKdg3uyG3cbA8wF
         s98EKuhcAxMUJQaYg1X31c8yve7M6745vTceMYgVz3bBc3zr5NEPxdV2xP8oXKGDZTH0
         9As0VTkIiKtdzTSiIcU2APGN8TZHbdq0StQ442a2xtv0VEuXr3Al43UUVlyCS2L/nWjY
         7K7+HMOsWbE9e91m16b28DyPni5H5n6l5g08a7WCoLkHo2RCrw9PN/gdc3muvutllkMm
         Wrnw==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of kvm-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=kvm-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id d16si14907163plj.104.2018.11.15.01.02.50;
        Thu, 15 Nov 2018 01:03:08 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of kvm-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729114AbeKOTJ0 (ORCPT <rfc822;nodee764@gmail.com> + 99 others);
        Thu, 15 Nov 2018 14:09:26 -0500
Received: from szxga06-in.huawei.com ([45.249.212.32]:42324 "EHLO huawei.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1728998AbeKOTJZ (ORCPT <rfc822;kvm@vger.kernel.org>);
        Thu, 15 Nov 2018 14:09:25 -0500
Received: from DGGEMS404-HUB.china.huawei.com (unknown [172.30.72.59])
        by Forcepoint Email with ESMTP id 15442E7295F2A;
        Thu, 15 Nov 2018 17:02:27 +0800 (CST)
Received: from [127.0.0.1] (10.177.16.168) by DGGEMS404-HUB.china.huawei.com
 (10.3.19.204) with Microsoft SMTP Server id 14.3.408.0; Thu, 15 Nov 2018
 17:02:24 +0800
Subject: Re: [RFC] Discuss about an new idea "Vsock over Virtio-net"
To: Jason Wang <jasowang@redhat.com>, <stefanha@redhat.com>,
        <stefanha@gmail.com>, <mst@redhat.com>
References: <5BECEE53.7090408@huawei.com>
 <88eaf53b-b148-7b27-491a-30706398ae06@redhat.com>
 <5BED162C.5070902@huawei.com>
 <015e1638-525f-7236-dbd9-38cced6b75db@redhat.com>
CC: <netdev@vger.kernel.org>, <kvm@vger.kernel.org>,
        <virtualization@lists.linux-foundation.org>
From: jiangyiwen <jiangyiwen@huawei.com>
Message-ID: <5BED361E.3090805@huawei.com>
Date: Thu, 15 Nov 2018 17:02:22 +0800
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:38.0) Gecko/20100101
 Thunderbird/38.5.1
MIME-Version: 1.0
In-Reply-To: <015e1638-525f-7236-dbd9-38cced6b75db@redhat.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 8bit
X-Originating-IP: [10.177.16.168]
X-CFilter-Loop: Reflected
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-CM-TRANSID: AQAAfwBHwExONu1bDOdCAA--.7529S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxKr18ZFy7GF4kGFW5Cw1fCrg_yoWxZw13pa
	43JF17tr1UJr1UJrnrtr4UXr12yr18Jr1UWr1UJryxXr1qyr1DJryUJrW8K347JryxJryj
	qryUJFy7Zr1UArJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUQqb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1Y
	6r17McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IY64vIr4
	1l7I0Y6sxI4wCYjI0SjxkI62AI1cAE67vIY487MxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik2
	6cxK6xAEc7vF6xCjj44lc2xSY4AK6IIF6r4fMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7
	IYx2IY67AKxVW5JVW7JwCYIxAIcVC0I7IYx2IY6xkF7I0E14v26r4j6F4UMxvI42IY6I8E
	87Iv67AKxVWxJr0_GcWlcIIF0xvEx4A2jsIEc7CjxVAFwI0_Cr1j6rxdMxAIw28IcxkI7V
	AKI48JMxAIw28IcVAKzI0EY4vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j
	6r4UMxCIbckI1I0E14v26r1q6r43MI8I3I0E5I8CrVAFwI0_Jr0_Jr4lx2IqxVCjr7xvwV
	AFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUtVW8ZwCIc40Y0x0EwIxGrwCI42IY6xAIw20E
	Y4v20xvaj40_Gr0_ZrUvcSsGvfC2KfnxnUUI43ZEXa7IUOHVbDUUUUU==

On 2018/11/15 16:19, Jason Wang wrote:
> 
> On 2018/11/15 下午2:46, jiangyiwen wrote:
>> On 2018/11/15 12:19, Jason Wang wrote:
>>> On 2018/11/15 上午11:56, jiangyiwen wrote:
>>>> Hi Stefan, Michael, Jason and everyone,
>>>>
>>>> Several days ago, I discussed with jason about "Vsock over Virtio-net".
>>>> This idea has two advantages:
>>>> First, it can use many great features of virtio-net, like batching,
>>>> mergeable rx buffer and multiqueue, etc.
>>>> Second, it can reduce many duplicate codes and make it easy to be
>>>> maintained.
>>>>
>>>> Before the implement, I want to discuss with everyone again, and
>>>> want to know everyone's suggestions.
>>>>
>>>> After the discussion, based on this point I will try to implement
>>>> this idea, but I am not familiar with the virtio-net, that is a
>>>> pity. :(
>>>
>>> I think we should have a new feature flag for this. E.g VIRTIO_NET_F_VSOCK. And host should fail the negotiation if guest doesn't support this to avoid confusion. When this feature is negotiated, we will use it only for VOSCK transport. This can simplify things somehow.
>>>
>>>
>>>> -------------------------Simple idea------------------------------
>>>>
>>>> 1. The packet layout will become as follows:
>>>>
>>>> +---------------------------------+
>>>> |        Virtio-net header        |
>>>> |(struct virtio_net_hdr_mrg_rxbuf)|
>>>> +---------------------------------+
>>>> |          Vsock header           |
>>>> |    (struct virtio_vsock_hdr)    |
>>>> +---------------------------------+
>>>> |             payload             |
>>>> |      (until end of packet)      |
>>>> +---------------------------------+
>>>>
>>>> 2. The Guest->Host basic code flow as follow:
>>>>                               +------------+
>>>>                               |   Client   |
>>>>                               +------------+
>>>>                                     |
>>>>                                     |
>>>> +------------------------------------------------------------------+
>>>> |VSOCK Core Module                                                 |
>>>> |ops->sendmsg; (vsock_stream_sendmsg)                              |
>>>> |  -> alloc_skb; /* it will packet a skb buffer, and include vsock |
>>>> |                 * hdr and payload */                             |
>>>> |  -> dev_queue_xmit(); /* it will call start_xmit(virtio-net.c) */|
>>>> |vsock hdr and payload, and then call                              |
>>>> +------------------------------------------------------------------+
>>>
>>> Note, if we've negotiated the feature, virtio-net driver must not use register_netdev to register it to network core. This can avoid lots of confusion.
>> Hi Jason,
>>
>> You mean we should not register netdev if use vsock, and in order to
>> avoid confusion, then I think whether we should keep vsock and export
>> some virtio-net's functions that can be shared. In this way, first, vsock
>> may keep existing architecture and will not affect virtio-net.
> 
> 
> At least it needs new feature bits which will be a functional duplication of virtio-net (e.g mrg_rxbuf).

Hi Jason,

Actually I mean only use some shared function to make vsock support these
features, in that way, guest see the device is still vsock device instead of
virtio-net device, in addition, it can have less codes and easier to be
compatible with old vsock version.

Thanks,
Yiwen.

> 
> 
>> In addition,
>> vsock doesn't need to use virtio_net header too, then it don't need to pack
>> skb structure.
> 
> 
> For mergeable rx buffer it need I think?

As said above, I will define the related structure in the virtio-vsock module.

> 
> 
>>
>> Thanks,
>> Yiwen.
>>
>>>
>>>>                                     |
>>>>                                     |
>>>> +------------------------------------------------------------------+
>>>> |Virtio-net Module                                                 |
>>>> |start_xmit                                                        |
>>>> |  -> add virtio_net_hdr and pack sg in ring desc, notify Host     |
>>>> +------------------------------------------------------------------+
>>>>                                     |
>>>>                                     |
>>>> +------------------------------------------------------------------+
>>>> |Vhost-net Module                                                  |
>>>> |handle_tx                                                         |
>>>> |  -> get tx buffer, skip virtio_net_hdr and call Vsock function.  |
>>>> | /* This point has some differences, vhost-net use ->sendmsg to   |
>>>> |  * forward information, however vsock only need to notify server |
>>>> |  * that data ready. */                                           |
>>>> +------------------------------------------------------------------+
>>>
>>> When VIRTIO_NET_F_VOSCK is negotiated, we know that it's a vsock transport, we can then forward it to vsock core.
>>>
>>>
>>>>                                     |
>>>>                                     |
>>>> +------------------------------------------------------------------+
>>>> |VSOCK Core Module                                                 |
>>>> |alloc_pkt, copy skb data to pkt.                                  |
>>>> |add pkt to rx_queue and notify server to get data.                |
>>>> +------------------------------------------------------------------+
>>>>
>>>> 3. To Host->Guest
>>>> I have a problem and difficult, mainly I know about virtio-net a little),
>>>> because I have been doing work related with storage and file system.
>>>>
>>>> The problem as follows:
>>>> we should monitor all of socket of vsock in handle_rx, when there are
>>>> data coming, and copy data to vq desc. Vhost-net use ->recvmsg to
>>>> get data, it is different with socket. To vsock, I think host will
>>>> not call ->recvmsg when it need to send message to guest. To net,
>>>> vhost-net only as forwarding layer.
>>> Know not much here, but is it possible to have a vsock(tap) to be passed to vhost_net and let vhost call its recvmgs()? Bascially it was a socket on host as well I believe?
>> For vsock, Host->Guest, it's code flow as follows:
>> Server call send()
>>    -> sendmsg(); (vsock_stream_sendmsg)
>>      -> virtio_trasnport_send_pkt_info
>>        -> alloc pkt, add pkt to send_pkt_list, wake up vhost_worker
>>
>> Vhost_worker
>>    -> vhost_transport_send_pkt_work
>>      -> get pkt from send_pkt_list
>>      -> get vq input desc and then fill data to desc addr
>>      -> update used ring and then signal guest
>>
>> In the whole process, host don't call recvmsg() because it is a net device, and
>> it also receives any messages.
> 
> 
> If I understand this correctly, there's no a socket object on host that represent vosck in guest? If yes, maybe we can invent one.
> 
> Thanks
> 

Sorry, I am not understanding you very much, vsock only a socket
channel, it does not have a network device entity, so it only
transmit the data between server and client, the data is only
saved in server and client. Instead of vhost-net, I feel it
has a network device that can saved the data, so when host
send message to guest, it can use recvmsg() from the
network device(tap). For Vsock, recvmsg() interface will
read message from tx vq.

> 
>>
>> For vhost-net, I understand it is a tap device, so it can receive messages
>> from other net device.
>>
>> This is my understanding, it may have some errors.
>>
>> Thanks.
>>
>>> If this doesn't work, we can have vsock specific receiving routine in vhost_net if VIRTIO_NET_F_VOSCK is negotiated.
>>>
>>> Generally, I think we should try out best to keep the exist sendmsg()/recvmsg() interfaces and only consider the alternatives if we meet some real blocker.
>>>
>>> Thanks
>>>
>>>
>>> .
>>>
>>
> 
> .
> 

