Return-Path: <kvm-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 16 Nov 2018 02:44:38 -0000
Received: from icoremail.net (unknown [209.85.215.182])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH+ZwLO5bHh+fAQ--.46859S3;
	Fri, 16 Nov 2018 10:33:21 +0800 (CST)
Received: from mail-pg1-f182.google.com (unknown [209.85.215.182])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAX+0ZuLO5b46dGAA--.3073S3;
	Fri, 16 Nov 2018 10:33:18 +0800 (CST)
Received: by mail-pg1-f182.google.com with SMTP id r9-v6so9893477pgv.6
        for <xuliker@zju.edu.cn>; Thu, 15 Nov 2018 18:33:18 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :subject:to:references:cc:from:message-id:date:user-agent
         :mime-version:in-reply-to:content-transfer-encoding:sender
         :precedence:list-id;
        bh=CXXBgIhSKEgBIxY2G3NZW2S434aPjIvrss7hM2Rcp2Y=;
        b=JR/hZbOeVhBtcKG1ohULqhEMEfQ6eCw6C0n5rZfxk+lkW+l//RjDRrFiWW+BJu4Qx1
         EL4etnwgx7wnaANd12ialdfZOSRVJMibt9T1FgdXiuJZSIgWB4eqf66awCpGEg6vI+4s
         LhVcpkbpbKh6xstmEi+1e362PKBWfVfIiOjdY2RbrOgCVyqNEvyAPAG2lMyQwD9yKi3E
         LoSwh/KPsHSlYHs/HrrFeC5ydAGi6vINPupGKE0JUtPhi0+CTtY9eBorMz8lUEAU/jUp
         OPKtYer/ihYNdLQwfYi0uuQ3jgLebPyPH846M5p897pdo5FKimkJ7zThJeaB7uTWOdRA
         WqFA==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of kvm-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=kvm-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gIvwjbpigZ1mI7rN8qBPVKhTXUy75/alT/8b/Pc0fRCbqVBqPaC
	9dAkgQdaPdcdUrxqa+8CZ9FP2tqdlznRQsSgSvHuJEUc14+BTrk=
X-Received: by 2002:a65:66ce:: with SMTP id c14mr8150355pgw.450.1542335597707;
        Thu, 15 Nov 2018 18:33:17 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp1350999pju;
        Thu, 15 Nov 2018 18:33:16 -0800 (PST)
X-Google-Smtp-Source: AJdET5fXHra/hFYH7TO/jrMR41lmZL5y3xT3Ybbi6Bceg3nkUkH11JCYEqsS2BJb4ds/qa4iR9Hy
X-Received: by 2002:a62:cc4:: with SMTP id 65-v6mr9104001pfm.127.1542335596146;
        Thu, 15 Nov 2018 18:33:16 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542335596; cv=none;
        d=google.com; s=arc-20160816;
        b=DgYAwYSlKRez8PpWEXPa+GwVp2oD4bbNA2zbbu30skR+XDs8IyS7C/7b2YUboYLp58
         MKma6sth8B7donKRikoSfY/qd141fVFoOoy3fz9vsX6Wzib94rGPWw6M9o/nwSzwXGML
         TVhRQ2ZvENCEcHSHNvKpd3sNcDpL3iWQAeyDmfpd0M0r2ckXJCi4UVXmM8qrUfOs6zGI
         dpembOBp4fl0M+eskvzJyL9Lil7uxv76p2SXyob9wr9+OmpGknaBCdGTW81a5V8zg7DN
         zee5naQGzpJPEKIuMByp+Qf4qHxPF4TTEemFtjTs5uViMS2zdOqaK/MlWgHt1rryLFNR
         t1kg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:in-reply-to
         :mime-version:user-agent:date:message-id:from:cc:references:to
         :subject;
        bh=CXXBgIhSKEgBIxY2G3NZW2S434aPjIvrss7hM2Rcp2Y=;
        b=dEU3n4YaRZ/VXcdqw40RwxJYkXF6N8zs2u8U2J9iU4E/SNHpwXsqmnqeI34YJXLbE9
         c8vh8GN0an2Z9ZKJhr+QvEQJEfg2AWn0ueRsZo8hpgEdLTb7K0nBBFlNQGLIYx00Fuxv
         PLN6G8U1HNMvEvoCMToxLnNnnDTTWkpU4SM9Sfeaew5KF7YcYlPz9YOfieY9moBIplWk
         DdmbCR+h38JvpKQzc1mNXKUmOJCazsa5PKfkcMt3x8WUXT97dUbbYPPxQOVyWeymAiSO
         Gmdul2fG/BinEuSSOCQzwy5u2eynpa+L8yOSkQfTYVd2R+myzERv96TC8LexM4oD2Qio
         TxKA==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of kvm-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=kvm-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id 63-v6si30559238pfe.182.2018.11.15.18.32.52;
        Thu, 15 Nov 2018 18:33:16 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of kvm-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727124AbeKPMmx (ORCPT <rfc822;nodee764@gmail.com> + 99 others);
        Fri, 16 Nov 2018 07:42:53 -0500
Received: from szxga05-in.huawei.com ([45.249.212.191]:14675 "EHLO huawei.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726518AbeKPMmx (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 16 Nov 2018 07:42:53 -0500
Received: from DGGEMS407-HUB.china.huawei.com (unknown [172.30.72.58])
        by Forcepoint Email with ESMTP id 269B23EC64CB6;
        Fri, 16 Nov 2018 10:32:18 +0800 (CST)
Received: from [127.0.0.1] (10.177.16.168) by DGGEMS407-HUB.china.huawei.com
 (10.3.19.207) with Microsoft SMTP Server id 14.3.408.0; Fri, 16 Nov 2018
 10:32:17 +0800
Subject: Re: [RFC] Discuss about an new idea "Vsock over Virtio-net"
To: Jason Wang <jasowang@redhat.com>, <stefanha@redhat.com>,
        <stefanha@gmail.com>, <mst@redhat.com>
References: <5BECEE53.7090408@huawei.com>
 <88eaf53b-b148-7b27-491a-30706398ae06@redhat.com>
 <5BED162C.5070902@huawei.com>
 <015e1638-525f-7236-dbd9-38cced6b75db@redhat.com>
 <5BED361E.3090805@huawei.com>
 <8c1543ca-6dd6-847a-606c-b4b0bb2cf55a@redhat.com>
CC: <netdev@vger.kernel.org>, <kvm@vger.kernel.org>,
        <virtualization@lists.linux-foundation.org>
From: jiangyiwen <jiangyiwen@huawei.com>
Message-ID: <5BEE2C30.1030007@huawei.com>
Date: Fri, 16 Nov 2018 10:32:16 +0800
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:38.0) Gecko/20100101
 Thunderbird/38.5.1
MIME-Version: 1.0
In-Reply-To: <8c1543ca-6dd6-847a-606c-b4b0bb2cf55a@redhat.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 8bit
X-Originating-IP: [10.177.16.168]
X-CFilter-Loop: Reflected
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-CM-TRANSID: AQAAfwAX+0ZuLO5b46dGAA--.3073S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3Wr4fZF4kZFWfJFWfAr4kCrg_yoWfWw4xpa
	43JF17tr4UJr1UXrn7tr4UJr12yr18Jr17Wr1UJryxWr1qyr1DJryUJrW8C347Jry8Jryj
	qryUJFy7Ar1UArJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUmqb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Gr0_Xr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxk0xIA0c2IEe2xFo4CEbIxvr21lc7CjxVAKzI0EY4vE52x082I5MxkFs20E
	Y4vE44CYbxCE4x80FwCY02Avz4vEIxC_Gr1lc2IjII80xcxEwVAKI48JMxvI42IY6xIIjx
	v20xvE14v26r1j6r1xMxvI42IY6xIIjxv20xvEc7CjxVAFwI0_Jr0_Gr1lcIIF0xvEx4A2
	jsIE14v26r4UJVWxJr1lcIIF0xvEx4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwCF04k20xvY0x
	0EwIxGrwCF04k20xvEw4C26cxK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWU
	JVW8JwC20s026c02F40E14v26r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67
	kF1VAFwI0_Jw0_GFylIxkGc2Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6Fyj6rWUJbIY
	CTnIWIevJa73UjIFyTuYvjxUHiZcUUUUU

On 2018/11/15 17:21, Jason Wang wrote:
> 
> On 2018/11/15 下午5:02, jiangyiwen wrote:
>> On 2018/11/15 16:19, Jason Wang wrote:
>>> On 2018/11/15 下午2:46, jiangyiwen wrote:
>>>> On 2018/11/15 12:19, Jason Wang wrote:
>>>>> On 2018/11/15 上午11:56, jiangyiwen wrote:
>>>>>> Hi Stefan, Michael, Jason and everyone,
>>>>>>
>>>>>> Several days ago, I discussed with jason about "Vsock over Virtio-net".
>>>>>> This idea has two advantages:
>>>>>> First, it can use many great features of virtio-net, like batching,
>>>>>> mergeable rx buffer and multiqueue, etc.
>>>>>> Second, it can reduce many duplicate codes and make it easy to be
>>>>>> maintained.
>>>>>>
>>>>>> Before the implement, I want to discuss with everyone again, and
>>>>>> want to know everyone's suggestions.
>>>>>>
>>>>>> After the discussion, based on this point I will try to implement
>>>>>> this idea, but I am not familiar with the virtio-net, that is a
>>>>>> pity. :(
>>>>> I think we should have a new feature flag for this. E.g VIRTIO_NET_F_VSOCK. And host should fail the negotiation if guest doesn't support this to avoid confusion. When this feature is negotiated, we will use it only for VOSCK transport. This can simplify things somehow.
>>>>>
>>>>>
>>>>>> -------------------------Simple idea------------------------------
>>>>>>
>>>>>> 1. The packet layout will become as follows:
>>>>>>
>>>>>> +---------------------------------+
>>>>>> |        Virtio-net header        |
>>>>>> |(struct virtio_net_hdr_mrg_rxbuf)|
>>>>>> +---------------------------------+
>>>>>> |          Vsock header           |
>>>>>> |    (struct virtio_vsock_hdr)    |
>>>>>> +---------------------------------+
>>>>>> |             payload             |
>>>>>> |      (until end of packet)      |
>>>>>> +---------------------------------+
>>>>>>
>>>>>> 2. The Guest->Host basic code flow as follow:
>>>>>>                                +------------+
>>>>>>                                |   Client   |
>>>>>>                                +------------+
>>>>>>                                      |
>>>>>>                                      |
>>>>>> +------------------------------------------------------------------+
>>>>>> |VSOCK Core Module                                                 |
>>>>>> |ops->sendmsg; (vsock_stream_sendmsg)                              |
>>>>>> |  -> alloc_skb; /* it will packet a skb buffer, and include vsock |
>>>>>> |                 * hdr and payload */                             |
>>>>>> |  -> dev_queue_xmit(); /* it will call start_xmit(virtio-net.c) */|
>>>>>> |vsock hdr and payload, and then call                              |
>>>>>> +------------------------------------------------------------------+
>>>>> Note, if we've negotiated the feature, virtio-net driver must not use register_netdev to register it to network core. This can avoid lots of confusion.
>>>> Hi Jason,
>>>>
>>>> You mean we should not register netdev if use vsock, and in order to
>>>> avoid confusion, then I think whether we should keep vsock and export
>>>> some virtio-net's functions that can be shared. In this way, first, vsock
>>>> may keep existing architecture and will not affect virtio-net.
>>>
>>> At least it needs new feature bits which will be a functional duplication of virtio-net (e.g mrg_rxbuf).
>> Hi Jason,
>>
>> Actually I mean only use some shared function to make vsock support these
>> features, in that way, guest see the device is still vsock device instead of
>> virtio-net device, in addition, it can have less codes and easier to be
>> compatible with old vsock version.
> 
> 
> Yes, I think we're talking about same thing. Both of us want to share codes. What you want is to export and share some common helpers between virtio-net and vsock. What I meant is to e.g probe vsock device and merge vsock specific codes into virtio-net driver. I agree it's not a small project. We can start from e.g patches that try to share the codes. This could also give us inspiration for how to unify them.
> 
> 

Then we have two ways to implement it.
1. For Guest, it is a virtio-net device(VIRTIO_ID_NET),
use a feature bit(e.g VIRTIO_NET_F_VSOCK) to distinguish
vsock special device and other virtio-net device. For old
vsock device, it still use old driver to drive it.

2. For Guest, it is a virtio-vsock device(VIRTIO_ID_VSOCK),
use virtio device id to distinguish them, it will integrate
old driver, but it may be more complicated, because it needs
to consider the compatibility with old vsock device.

>>
>> Thanks,
>> Yiwen.
>>
>>>
>>>> In addition,
>>>> vsock doesn't need to use virtio_net header too, then it don't need to pack
>>>> skb structure.
>>>
>>> For mergeable rx buffer it need I think?
>> As said above, I will define the related structure in the virtio-vsock module.
>>
>>>
>>>> Thanks,
>>>> Yiwen.
>>>>
>>>>>>                                      |
>>>>>>                                      |
>>>>>> +------------------------------------------------------------------+
>>>>>> |Virtio-net Module                                                 |
>>>>>> |start_xmit                                                        |
>>>>>> |  -> add virtio_net_hdr and pack sg in ring desc, notify Host     |
>>>>>> +------------------------------------------------------------------+
>>>>>>                                      |
>>>>>>                                      |
>>>>>> +------------------------------------------------------------------+
>>>>>> |Vhost-net Module                                                  |
>>>>>> |handle_tx                                                         |
>>>>>> |  -> get tx buffer, skip virtio_net_hdr and call Vsock function.  |
>>>>>> | /* This point has some differences, vhost-net use ->sendmsg to   |
>>>>>> |  * forward information, however vsock only need to notify server |
>>>>>> |  * that data ready. */                                           |
>>>>>> +------------------------------------------------------------------+
>>>>> When VIRTIO_NET_F_VOSCK is negotiated, we know that it's a vsock transport, we can then forward it to vsock core.
>>>>>
>>>>>
>>>>>>                                      |
>>>>>>                                      |
>>>>>> +------------------------------------------------------------------+
>>>>>> |VSOCK Core Module                                                 |
>>>>>> |alloc_pkt, copy skb data to pkt.                                  |
>>>>>> |add pkt to rx_queue and notify server to get data.                |
>>>>>> +------------------------------------------------------------------+
>>>>>>
>>>>>> 3. To Host->Guest
>>>>>> I have a problem and difficult, mainly I know about virtio-net a little),
>>>>>> because I have been doing work related with storage and file system.
>>>>>>
>>>>>> The problem as follows:
>>>>>> we should monitor all of socket of vsock in handle_rx, when there are
>>>>>> data coming, and copy data to vq desc. Vhost-net use ->recvmsg to
>>>>>> get data, it is different with socket. To vsock, I think host will
>>>>>> not call ->recvmsg when it need to send message to guest. To net,
>>>>>> vhost-net only as forwarding layer.
>>>>> Know not much here, but is it possible to have a vsock(tap) to be passed to vhost_net and let vhost call its recvmgs()? Bascially it was a socket on host as well I believe?
>>>> For vsock, Host->Guest, it's code flow as follows:
>>>> Server call send()
>>>>     -> sendmsg(); (vsock_stream_sendmsg)
>>>>       -> virtio_trasnport_send_pkt_info
>>>>         -> alloc pkt, add pkt to send_pkt_list, wake up vhost_worker
>>>>
>>>> Vhost_worker
>>>>     -> vhost_transport_send_pkt_work
>>>>       -> get pkt from send_pkt_list
>>>>       -> get vq input desc and then fill data to desc addr
>>>>       -> update used ring and then signal guest
>>>>
>>>> In the whole process, host don't call recvmsg() because it is a net device, and
>>>> it also receives any messages.
>>>
>>> If I understand this correctly, there's no a socket object on host that represent vosck in guest? If yes, maybe we can invent one.
>>>
>>> Thanks
>>>
>> Sorry, I am not understanding you very much, vsock only a socket
>> channel, it does not have a network device entity, so it only
>> transmit the data between server and client, the data is only
>> saved in server and client. Instead of vhost-net, I feel it
>> has a network device that can saved the data, so when host
>> send message to guest, it can use recvmsg() from the
>> network device(tap). For Vsock, recvmsg() interface will
>> read message from tx vq.
> 
> 
> So I understand the model is not a real socket pair on host which AF_UNIX did. Maybe it's better to have one. What I meant is, have a socket that represent  for each guest vsock device on host (guest socket). Then when you transfer packets from host to guest, you can queue the packets into the receive queue of the guest socket and wake up vhost-net and it will call recvmsg() for the guest socket. And when you want to transfer packets form guest to host, vhost_net will call sendmsg() to the guest socket on host then it can search the correct destination and queue packet on the receive of host socket. This can make vsock much more easier to be integrated with vhost_net.
> 
> Thanks
> 
>>
>>>> For vhost-net, I understand it is a tap device, so it can receive messages
>>>> from other net device.
>>>>
>>>> This is my understanding, it may have some errors.
>>>>
>>>> Thanks.
>>>>
>>>>> If this doesn't work, we can have vsock specific receiving routine in vhost_net if VIRTIO_NET_F_VOSCK is negotiated.
>>>>>
>>>>> Generally, I think we should try out best to keep the exist sendmsg()/recvmsg() interfaces and only consider the alternatives if we meet some real blocker.
>>>>>
>>>>> Thanks
>>>>>
>>>>>
>>>>> .
>>>>>
>>> .
>>>
>>
> 
> .
> 

