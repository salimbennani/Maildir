Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 17 Nov 2018 03:15:05 -0000
Received: from icoremail.net (unknown [209.85.214.178])
	by mail-app2 (Coremail) with SMTP id by_KCgDXv0JYTe9b8eOlAQ--.48839S3;
	Sat, 17 Nov 2018 07:06:01 +0800 (CST)
Received: from mail-pl1-f178.google.com (unknown [209.85.214.178])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCnjkpWTe9bM2dLAA--.2807S3;
	Sat, 17 Nov 2018 07:05:58 +0800 (CST)
Received: by mail-pl1-f178.google.com with SMTP id x21-v6so9082001pln.9
        for <xuliker@zju.edu.cn>; Fri, 16 Nov 2018 15:05:58 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:date:from:to:cc
         :subject:message-id:references:mime-version:content-disposition
         :in-reply-to:user-agent:sender:precedence:list-id;
        bh=CmU0ypN2uBNgVuQePI33oHrQC1mVLrfBCLqLPyWeIP0=;
        b=VVmFWdr8TOxl8wzn63+yc2tq2/pBJ8/3FdBAoY6DFfT2VJX+N4U6/bgEv1GEl9//ws
         p1i5BZM4NirJL2kLiqxtWE1l9R4OfxUQS2szjh32p17+egYyI2MMHm+dgraQqveHQxW5
         KT9p8Azhy9Wds+igRXvUySTuN9zHY2JIwnGulkEhMEpCEVS6McHRkdLezUd3KObExD++
         O5SRTDShsUtbbGOyKL3CWIEqnsGcCIcMfSX3dzCTwlUslVZJ95kgLAiQouMDuIYxj0IT
         8hIbOdaluTSDlkyjRvZgE2Zih6TR7As1NNE2odEt12QIn0T6PNmgzokZt2HqVxFLSRJQ
         XCXg==
X-Gm-Message-State: AGRZ1gKUS3lBTgf1XKcR7c5eGSB0Sf6rxtwVt/u58NpHou6BjRTLl7v8
	K+yXSvuxVruhLkOxIoSwcAG213QQfF9tsP2e1pT2xbC//ZeQ3f0=
X-Received: by 2002:a17:902:50e3:: with SMTP id c32-v6mr12717778plj.39.1542409557894;
        Fri, 16 Nov 2018 15:05:57 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp1014803pju;
        Fri, 16 Nov 2018 15:05:57 -0800 (PST)
X-Google-Smtp-Source: AJdET5c6eBWiIgxGG9z07899m+UX7XK+E1VbI7F2Y7KEai96iMQc09ZdYYJs+itcnK87/fwqezJ2
X-Received: by 2002:a63:2109:: with SMTP id h9mr11537363pgh.277.1542409556949;
        Fri, 16 Nov 2018 15:05:56 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542409556; cv=none;
        d=google.com; s=arc-20160816;
        b=lUcR5Nmi7D2YDxOF/tZPs0VzsFzy5w+xIixnsy31jVlGJmLdUq/CBMaN0tuHfl4OlO
         oznnf9wf8f38Xtg9waG46Nvbclj0HawyOiCK/PPytciFabvatiJzMKud1dSvN9hq6+cc
         xa01FxJ0uUqBIpqlJnFvKgVJHGf+AYX/KnDmZpLQkeiw0H6OFzwwSDHpLlKQbFg4IoFq
         ZpzL4EdD2iNcjq7vENar0ejgjFnHOGSvin/bkwnYq2DFWau1UEj49iBk3O3wITlNr8Cc
         jlqIOBC7VAefVMt9XQuHkfJSW6lgMhmYx9ue2POzqg2NpXMrNfd2/zSTzsiyi8XAnGAp
         RHxw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:in-reply-to
         :content-disposition:mime-version:references:message-id:subject:cc
         :to:from:date:dkim-signature;
        bh=CmU0ypN2uBNgVuQePI33oHrQC1mVLrfBCLqLPyWeIP0=;
        b=l+ePNZa09hm4nElgXeQatJNW35IxTf0PZMhcbPsHf4V44xN5CKgwM6eLNZQZb7FTV+
         hoHaH3uV6/4IFDuwpjnEchPdm2Oaw+ZL7Oqb/s7Ybfn7L+yprQK9tvzVXf9E2y9ZECjC
         lnLw4Dq99OmUhL7zCkaQbs9M8KLzxvIS4EVIdMIOW9JJ7RB8qAXh0SIcHjMK7y16sRFp
         /yw3DT63culcUZx3+2WrPZwlCg3LdHiAVKX3cnOnP1MFYGxYYIb2EEMFAQYoDsYSJwRK
         wz2kLWqxtYNf1Y9J4KRJ4vbo79hnzGW/VxFF9jvuPAPMTe08nYTI4gvbCbZBGVbSa6Wt
         zC0Q==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@linaro.org header.s=google header.b=LAH+U5vf;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=linaro.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id x15-v6si31539425pll.41.2018.11.16.15.05.42;
        Fri, 16 Nov 2018 15:05:56 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730343AbeKQJTd (ORCPT <rfc822;xjxyklwx@gmail.com> + 99 others);
        Sat, 17 Nov 2018 04:19:33 -0500
Received: from mail-pg1-f194.google.com ([209.85.215.194]:46031 "EHLO
        mail-pg1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725819AbeKQJTd (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 17 Nov 2018 04:19:33 -0500
Received: by mail-pg1-f194.google.com with SMTP id y4so11206945pgc.12
        for <linux-kernel@vger.kernel.org>; Fri, 16 Nov 2018 15:05:15 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=CmU0ypN2uBNgVuQePI33oHrQC1mVLrfBCLqLPyWeIP0=;
        b=LAH+U5vfSQvoEjYUOCEfCIK5GQRvvSpIrmhtTViTlXY4d7+ZyOYmtM9OJw1dpkGdEz
         /t08vyd/CVEw1y/d5RvIyZ0peuS+oSKucEjQiI9csaYwWhKSm28epo29UPj9w7yWCMb2
         fhWt9XREPQd/KZbIKuah31Ob04dX89TQ3knWQ=
X-Received: by 2002:a63:1258:: with SMTP id 24mr11572361pgs.114.1542409514846;
        Fri, 16 Nov 2018 15:05:14 -0800 (PST)
Received: from xps15 (S0106002369de4dac.cg.shawcable.net. [68.147.8.254])
        by smtp.gmail.com with ESMTPSA id c127-v6sm34822429pfa.31.2018.11.16.15.05.13
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Fri, 16 Nov 2018 15:05:14 -0800 (PST)
Date: Fri, 16 Nov 2018 16:05:11 -0700
From: Mathieu Poirier <mathieu.poirier@linaro.org>
To: Leo Yan <leo.yan@linaro.org>
Cc: Arnaldo Carvalho de Melo <acme@kernel.org>,
        Alexander Shishkin <alexander.shishkin@linux.intel.com>,
        Jiri Olsa <jolsa@redhat.com>,
        Namhyung Kim <namhyung@kernel.org>,
        linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org,
        Mike Leach <mike.leach@linaro.org>,
        Robert Walker <robert.walker@arm.com>,
        Al Grant <Al.Grant@arm.com>,
        Coresight ML <coresight@lists.linaro.org>
Subject: Re: [PATCH v1 2/5] perf cs-etm: Avoid stale branch samples when
 flush packet
Message-ID: <20181116230511.GB25258@xps15>
References: <1541912383-19915-1-git-send-email-leo.yan@linaro.org>
 <1541912383-19915-3-git-send-email-leo.yan@linaro.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <1541912383-19915-3-git-send-email-leo.yan@linaro.org>
User-Agent: Mutt/1.5.24 (2015-08-30)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwCnjkpWTe9bM2dLAA--.2807S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxGF1fCw17WrWrWFWruFyfZwb_yoWruF45pr
	45GF13ta1DtF1Svwn7Zw4v9r1ftw40vFW7Xa4rX3yYkws8Zr4Ygryfta9YgFWUAF1Yv3yI
	qFWDJr4xCF4jy3JanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPYb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r1j6r4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK
	6IIF6FWlc2IjII80xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26r4j6ryUMxvI42IY6x
	IIjxv20xvEc7CjxVAFwI0_Gr0_Cr1lcIIF0xvEx4A2jsIE14v26r4UJVWxJr1lcIIF0xvE
	x4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26cxK6c
	8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v26r1j
	6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_Jw0_GFylIxkGc2Ij64
	vIr41lIxAIcVCF04k26cxKx2IYs7xG6r4j6FyUYxBIdaVFxhVjvjDU0xZFpf9x07bHNtsU
	UUUU=

On Sun, Nov 11, 2018 at 12:59:40PM +0800, Leo Yan wrote:
> At the end of trace buffer handling, function cs_etm__flush() is invoked
> to flush any remaining branch stack entries.  As a side effect, it also
> generates branch sample, because the 'etmq->packet' doesn't contains any
> new coming packet but point to one stale packet after packets swapping,
> so it wrongly makes synthesize branch samples with stale packet info.
> 
> We could review below detailed flow which causes issue:
> 
>   Packet1: start_addr=0xffff000008b1fbf0 end_addr=0xffff000008b1fbfc
>   Packet2: start_addr=0xffff000008b1fb5c end_addr=0xffff000008b1fb6c
> 
>   step 1: cs_etm__sample():
> 	sample: ip=(0xffff000008b1fbfc-4) addr=0xffff000008b1fb5c
> 
>   step 2: flush packet in cs_etm__run_decoder():
> 	cs_etm__run_decoder()
> 	  `-> err = cs_etm__flush(etmq, false);
> 	sample: ip=(0xffff000008b1fb6c-4) addr=0xffff000008b1fbf0
> 
> Packet1 and packet2 are two continuous packets, when packet2 is the new
> coming packet, cs_etm__sample() generates branch sample for these two
> packets and use [packet1::end_addr - 4 => packet2::start_addr] as branch
> jump flow, thus we can see the first generated branch sample in step 1.
> At the end of cs_etm__sample() it swaps packets so 'etm->prev_packet'=
> packet2 and 'etm->packet'=packet1, so far it's okay for branch sample.
> 
> If packet2 is the last one packet in trace buffer, even there have no
> any new coming packet, cs_etm__run_decoder() invokes cs_etm__flush() to
> flush branch stack entries as expected, but it also generates branch
> samples by taking 'etm->packet' as a new coming packet, thus the branch
> jump flow is as [packet2::end_addr - 4 =>  packet1::start_addr]; this
> is the second sample which is generated in step 2.  So actually the
> second sample is a stale sample and we should not generate it.
> 
> This patch is to add new argument 'new_packet' for cs_etm__flush(), we
> can pass 'true' for this argument if there have a new packet, otherwise
> it will pass 'false' for the purpose of only flushing branch stack
> entries and avoid to generate sample for stale packet.

Very good explanation, thanks for taking the time to write this.

> 
> Signed-off-by: Leo Yan <leo.yan@linaro.org>
> ---
>  tools/perf/util/cs-etm.c | 20 +++++++++++++++++---
>  1 file changed, 17 insertions(+), 3 deletions(-)
> 
> diff --git a/tools/perf/util/cs-etm.c b/tools/perf/util/cs-etm.c
> index fe18d7b..f4fa877 100644
> --- a/tools/perf/util/cs-etm.c
> +++ b/tools/perf/util/cs-etm.c
> @@ -955,7 +955,7 @@ static int cs_etm__sample(struct cs_etm_queue *etmq)
>  	return 0;
>  }
>  
> -static int cs_etm__flush(struct cs_etm_queue *etmq)
> +static int cs_etm__flush(struct cs_etm_queue *etmq, bool new_packet)
>  {
>  	int err = 0;
>  	struct cs_etm_auxtrace *etm = etmq->etm;
> @@ -989,6 +989,20 @@ static int cs_etm__flush(struct cs_etm_queue *etmq)
>  
>  	}
>  
> +	/*
> +	 * If 'new_packet' is false, this time call has no a new packet
> +	 * coming and 'etmq->packet' contains the stale packet which is
> +	 * set at the previous time with packets swapping.  In this case
> +	 * this function is invoked only for flushing branch stack at
> +	 * the end of buffer handling.
> +	 *
> +	 * Simply to say, branch samples should be generated when every
> +	 * time receive one new packet; otherwise, directly bail out to
> +	 * avoid generate branch sample with stale packet.
> +	 */
> +	if (!new_packet)
> +		return 0;
> +
>  	if (etm->sample_branches &&
>  	    etmq->prev_packet->sample_type == CS_ETM_RANGE) {
>  		err = cs_etm__synth_branch_sample(etmq);
> @@ -1075,7 +1089,7 @@ static int cs_etm__run_decoder(struct cs_etm_queue *etmq)
>  					 * Discontinuity in trace, flush
>  					 * previous branch stack
>  					 */
> -					cs_etm__flush(etmq);
> +					cs_etm__flush(etmq, true);
>  					break;
>  				case CS_ETM_EMPTY:
>  					/*
> @@ -1092,7 +1106,7 @@ static int cs_etm__run_decoder(struct cs_etm_queue *etmq)
>  
>  		if (err == 0)
>  			/* Flush any remaining branch stack entries */
> -			err = cs_etm__flush(etmq);
> +			err = cs_etm__flush(etmq, false);

I understand what you're doing and it will yield the correct results.  What I'm
not sure about is if we wouldn't be better off splitting cs_etm__flush()
in order to reduce the complexity of the main decoding loop.  That is rename
cs_etm__flush() to something like cs_etm__trace_on() and spin off a new
cs_etm__end_block().  

It does introduce a little bit of code duplication but I think we'd win in terms
of readability and flexibility.

Thanks,
Mathieu


>  	}
>  
>  	return err;
> -- 
> 2.7.4
> 
