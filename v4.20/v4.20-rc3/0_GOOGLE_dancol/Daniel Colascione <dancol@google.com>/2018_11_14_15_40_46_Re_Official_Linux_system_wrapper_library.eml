Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 15 Nov 2018 00:41:15 -0000
Received: from icoremail.net (unknown [209.85.214.175])
	by mail-app2 (Coremail) with SMTP id by_KCgDnX98xQuxbBD2RAQ--.43565S3;
	Wed, 14 Nov 2018 23:41:39 +0800 (CST)
Received: from mail-pl1-f175.google.com (unknown [209.85.214.175])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwDHqEQmQuxbaVQ_AA--.58S3;
	Wed, 14 Nov 2018 23:41:26 +0800 (CST)
Received: by mail-pl1-f175.google.com with SMTP id x21-v6so5241332pln.9
        for <xuliker@zju.edu.cn>; Wed, 14 Nov 2018 07:41:26 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:mime-version
         :in-reply-to:references:from:date:message-id:subject:to:cc:sender
         :precedence:list-id;
        bh=qhXBUPYPE3l/6xSc85gdUJMtEaXW+SdKf9Phc9De/B8=;
        b=n3+0CGC2Bax9+G4Lx0Lr5tP6tP6CiIQW/gu/HrkbCl04HzsRoSLUCegtv09r/nWh5P
         MU9pU8jV/b8YWHBEjgh7xLYSAm/Ybr5BU2q9L0uk52iDOvGhSc/rZsJN9LE7/Be98J+w
         1+gOdjmir2jAXryO3La6TNCFB007pzIt8ScsZ/ZOeTfI66wPsU8FCKuOuZuKZ3phaoqt
         Jad/Sd9JXg5C5pvpKbSVmCDoKcdbVp+JEZVvUAWhdok3BlL80H7YXYJ9UnfTGSqCGrEf
         OZZmDtygivbtj26OfIOrbbQcJJ3XbV+oIz6XGlqkYeUkLU3TjPFQmBfct1oONPPtxVvc
         U2wg==
X-Gm-Message-State: AGRZ1gJyvCB5/mEFqwO2YrZkysofkt16m2L8uG4F/WnxIl2LXYDnJH7i
	CuZgi/2Q0zwYsygzvrWB7PVh4KSlA9OJmLVe92dmMhmq1Y7PBBb3Tw==
X-Received: by 2002:a17:902:887:: with SMTP id 7-v6mr2427032pll.283.1542210086480;
        Wed, 14 Nov 2018 07:41:26 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp5962445pjt;
        Wed, 14 Nov 2018 07:41:25 -0800 (PST)
X-Google-Smtp-Source: AJdET5ef+r7UcYAj8ITYRavjahGgplchMIUu1Hjy1Ak0oZnTlnFLy7J34fqzoWd3VbtGwIETEyWT
X-Received: by 2002:a63:ec13:: with SMTP id j19mr2198799pgh.6.1542210085340;
        Wed, 14 Nov 2018 07:41:25 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542210085; cv=none;
        d=google.com; s=arc-20160816;
        b=TX8VZlzzXL9yU1/euhu1qlFF9m0c08I/GTuB2ALd9O9MRYd2607uW45O+Sf1E5sFNk
         OykHSY0FMmH0dGhLNNDNEsAVGnkFHFNHXM/aLfweepuPb0gbITOD6SnxWBDDluufGp37
         1oAIt4v+LlwaArhvm5wXsyguvczEcO0wEY+qtsyPOgYl5mF784WQ5AqZCP4xPg6iZYrF
         jsqV0sOJ6TDdGSSw5iWLXCcWstphnjcdqk5sx5u7yeiAxT7f8WOJrcIB79pm3q1qSYPn
         fWbH5Gj8p8HoLypzQRyy3TeC9DAZp/P+wpnSUb68KQ6R9dd0spLJzjsebPrQQvqs+nbJ
         mMTw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:cc:to:subject:message-id:date:from
         :references:in-reply-to:mime-version:dkim-signature;
        bh=qhXBUPYPE3l/6xSc85gdUJMtEaXW+SdKf9Phc9De/B8=;
        b=NrIj+qjxOWfJE473Ilr6SPXgIQos4g3wdXNZByYBTEJg+4i5vFtfxRL4t+cI9zAzmr
         AlBQ+s8K23JjGQ2B8buMnDnKWcpqDfhaX+k3PnWUkNSBKdyvoddg6e+8+aX/E6ada6Yq
         D1KZ2BVCX8wL4F+H4JsH/EHFp9kYPvXlASCKnmuXaOBElWpPuauwvxL/O3eF227N+WTI
         DhONRt42fnxJs8dyOzb2R9a7x2PPD0ymATgkSRCsCm7byS+SyqqAK/xvInXbMKSKbT8s
         I8G0ZcjZ1hXJu2cfKK25NBj/JCUklnHyiOS7dU7MXQxv84ex25fwpKQCSjYiTZwV3cod
         99Yw==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@google.com header.s=20161025 header.b=O5tHoxOb;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=REJECT sp=REJECT dis=NONE) header.from=google.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id n1-v6si24063904pld.378.2018.11.14.07.41.10;
        Wed, 14 Nov 2018 07:41:25 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1732450AbeKOBof (ORCPT <rfc822;docz2a@gmail.com> + 99 others);
        Wed, 14 Nov 2018 20:44:35 -0500
Received: from mail-vs1-f66.google.com ([209.85.217.66]:33716 "EHLO
        mail-vs1-f66.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728000AbeKOBof (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 14 Nov 2018 20:44:35 -0500
Received: by mail-vs1-f66.google.com with SMTP id p74so9781503vsc.0
        for <linux-kernel@vger.kernel.org>; Wed, 14 Nov 2018 07:40:49 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc;
        bh=qhXBUPYPE3l/6xSc85gdUJMtEaXW+SdKf9Phc9De/B8=;
        b=O5tHoxOb0xZT1oFMWnJLBbZgy8YpwssA8vPupJzplmRUhPvshHurejuvgNIRI4C2no
         7AqjCTWtHwx8YP/HNBlcOeXt9hO3k3Bbj7RJoANiQvMmb2BApeiX3KPEjGaFjll5xd4H
         SAuyV1xFsEHsc/AoBjaAIcKCkP7ZvstN+iFEfAVD4UsTCNzkbr6JmlALsqPUe15y4TEO
         ercIpwGXe+okX2fqPFh7JxUTTsghAfsLvUCaMcERPrN9LBPMPSXs/W0cGVdne/cGjnqK
         bhiZE2nnArjNRzZCy/XXZwu1fqgcyTJKBfSRminnQMugfVlp46i2PqOVkWj6wgPEXJsC
         7W+Q==
X-Received: by 2002:a67:6e87:: with SMTP id j129mr1055506vsc.171.1542210048344;
 Wed, 14 Nov 2018 07:40:48 -0800 (PST)
MIME-Version: 1.0
Received: by 2002:a67:f48d:0:0:0:0:0 with HTTP; Wed, 14 Nov 2018 07:40:46
 -0800 (PST)
In-Reply-To: <5853c297-9d84-86e5-dede-aa2957562c6b@arm.com>
References: <CAKOZuesB4R=dCz4merWQN0FSCGrXmOgUUr4ienSbStBJguNv8g@mail.gmail.com>
 <bbc12da5-830e-99a7-95e3-d9da42947dc9@gmail.com> <877ehjx447.fsf@oldenburg.str.redhat.com>
 <CAKOZues5SEESpJU=6MDTrPXTA1KTZFGNQE4Lw4t0fO-WBTU62w@mail.gmail.com>
 <875zx2vhpd.fsf@oldenburg.str.redhat.com> <CAKOZuetdgk1QYhx1538-98rFpogMin=8DkPnCtU9_=ip23Vk7w@mail.gmail.com>
 <20181113193859.GJ3505@e103592.cambridge.arm.com> <5853c297-9d84-86e5-dede-aa2957562c6b@arm.com>
From: Daniel Colascione <dancol@google.com>
Date: Wed, 14 Nov 2018 07:40:46 -0800
Message-ID: <CAKOZuesta_V=doXsVLc2E6WCQvywdur3F+u2pFKaPN+CEQd+ZQ@mail.gmail.com>
Subject: Re: Official Linux system wrapper library?
To: Szabolcs Nagy <Szabolcs.Nagy@arm.com>
Cc: Dave P Martin <Dave.Martin@arm.com>, nd <nd@arm.com>,
        Florian Weimer <fweimer@redhat.com>,
        "Michael Kerrisk (man-pages)" <mtk.manpages@gmail.com>,
        linux-kernel <linux-kernel@vger.kernel.org>,
        Joel Fernandes <joelaf@google.com>,
        Linux API <linux-api@vger.kernel.org>,
        Willy Tarreau <w@1wt.eu>, Vlastimil Babka <vbabka@suse.cz>,
        "Carlos O'Donell" <carlos@redhat.com>,
        "libc-alpha@sourceware.org" <libc-alpha@sourceware.org>
Content-Type: text/plain; charset="UTF-8"
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwDHqEQmQuxbaVQ_AA--.58S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3AF48JryxtF1fAr4fAr15twb_yoW7Xr18pF
	WUKFWjyrWDJw4fCw4kZ3W09a4rWr1xGa13Cr1fKrW8Awn0gryavr4xta4a9Fy7Aws3Ww1j
	qrWjva4Dua4DZFJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPab7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1Y
	6r17McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1l7I0Y6sxI4wCY1x
	0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkIecxEwVCI4VW5WwCY0x0I
	x7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_Xr0_Ar1lcIIF0xvE2Ix0cI8IcVCY1x
	0267AKxVW8JVWxJwCYIxAIcVC2z280aVAFwI0_GcCE3s1lcIIF0xvEx4A2jsIEc7CjxVAF
	wI0_GcCE3s1l42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwVAq07x20xyl4x8a6x804x
	Wl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1l4IxYO2xFxVAFwI0_Jrv_JF1lx2IqxVAqx4xG67AK
	xVWUJVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r1q6r43MIIYrx
	kI7VAKI48JMIIF0xvE42xK8VAvwI8IcIk0rVW8JVW3JbIYCTnIWIevJa73UjIFyTuYvjxU
	HmhFUUUUU

On Wed, Nov 14, 2018 at 3:58 AM, Szabolcs Nagy <Szabolcs.Nagy@arm.com> wrote:
> On 13/11/18 19:39, Dave Martin wrote:
>> On Mon, Nov 12, 2018 at 05:19:14AM -0800, Daniel Colascione wrote:
>>> We should adopt a similar approach. Shipping a lower-level
>>> "liblinux.so" tightly bound to the kernel would not only let the
>>> kernel bypass glibc's "editorial discretion" in exposing new
>>> facilities to userspace, but would also allow for tighter user-kernel
>>> integration that one can achieve with a simplistic syscall(2)-style
>>> escape hatch. (For example, for a long time now, I've wanted to go
>>> beyond POSIX and improve the system's signal handling API, and this
>>> improvement requires userspace cooperation.) The vdso is probably too
>>> small and simplistic to serve in this role; I'd want a real library.
>>
>> Can you expand on your reasoning here?
>
> such lib creates a useless abi+api layer that
> somebody has to maintain and document (with or
> without vdso).

People already maintain the kernel man pages and are very good.

> it obviously cannot work together with a posix
> conform libc implementation for which it would
> require knowledge about

You're incorrect on this point. See programs cobbled together out of
syscall(2) invocations today: despite lack of libc integration, things
do mostly work in practice. Calling through a library can't possible
be worse, and in many ways can be much better.

> thread cancellation internals,

As I mentioned upthread, the only thing a libc needs in order to
support cancellation properly (at least the way glibc does it)
is a way to ask the kernel-provided userspace library whether a
particular program counter address belongs to a certain code sequence
immediately before the system call instruction, whatever that is.
Providing this facility is doable without deep knowledge of libc's
internals, and libc can use it without a deep knowledge of the
interface library.

> potentially TLS
> for errno

As someone else mentioned, errno is a libc construct. It's not *hard*
to support setting errno though: libc could just be required to supply
a well-defined libc_set_errno symbol that the kernel ABI library would
then use as needed.

> know libc types even ones that are
> based on compile time feature macros

This library would not have to do the things that libc does. Why would
it have to support libc's feature test macros at all?

> (and expose
> them in headers in a way that does not collide
> with libc headers)

The kernel should have a set of types and a symbol namespace
completely disjoint from libc's, with no compatibility hacks or macros
needed. (That might take some renaming kernel-side.) If libc wants to
provide a POSIX API, it can take on the responsibility for mapping the
kernel's structures to libc's, but within its namespace, the kernel
should be able to add types without fear of conflict.

> abi variants the libc supports
> (e.g. softfp, security hardened abi), libc
> internal signals (for anything that's changing
> signal masks), thread internals for syscalls that
> require coordination between all user created
> threads

Most proposed new system calls do not create threads, manipulate
signal masks, or muck with other internals, so these concerns just
don't apply. That's why syscall(2) mostly works in practice. Even if a
few new system calls *do* involve these internal details and require
closer libc coordination, the majority (e.g., the new mount API,
termios2) don't, and so can be exposed directly from the kernel
project without being blocked by glibc.

> (setxid),

A kernel-side fix here would be the cleanest approach.

> libc internal state for syscalls
> that create/destroy threads.
>
> and thus such lib does not solve the problems
> of users who actually requested wrappers for
> new syscalls (since they want to call into libc
> and create threads).
>
> there is a lot of bikesheding here by people who
> don't understand the constraints nor the use-cases.

Conversely, there's a lot of doubt-sowing from the other side that
makes shipping a kernel-provided interface library seem harder than it
is. Most new system calls do not bear on the integration concerns that
you and others are raising, and whatever problems remain can be solved
with a narrow interface between libc and a new interface library, one
that would let both evolve independently.

> an actual proposal in the thread that i think is
> worth considering is to make the linux syscall
> design process involve libc devs so the c api is
> designed together with the syscall abi.

After looking at the history of settid, signal multi-handler
registration, and other proposed improvements running into the brick
wall of glibc's API process, I think it's clear that requiring glibc
signoff on new kernel interfaces would simply lead to stagnation. It's
not as if we're approaching the problem from a position of ignorance.
The right answer is a move to an approximation of the BSD model and
bring the primary interface layer in-house.
 There's a lot of evidence that this model works.
