Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 19 Nov 2018 00:47:52 -0000
Received: from icoremail.net (unknown [209.85.210.180])
	by mail-app2 (Coremail) with SMTP id by_KCgCn3_iaBPJbKVa0AQ--.53741S3;
	Mon, 19 Nov 2018 08:32:27 +0800 (CST)
Received: from mail-pf1-f180.google.com (unknown [209.85.210.180])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwB3VkKXBPJb19VTAA--.17819S3;
	Mon, 19 Nov 2018 08:32:24 +0800 (CST)
Received: by mail-pf1-f180.google.com with SMTP id h3so7412582pfg.1
        for <xuliker@zju.edu.cn>; Sun, 18 Nov 2018 16:32:24 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:mime-version
         :in-reply-to:references:from:date:message-id:subject:to:cc:sender
         :precedence:list-id;
        bh=J9jWcfM1lf5Nw19hr8EfJaBkuFiDFUVblfNS2Vd9O1k=;
        b=kibe3oGdPtyyCeHa1k6WgnuwJT+MxltsMgMJYUF/q4Jdyy62r4e5ifFk1ey/+uI81f
         yhuRVFIKfYI8m62uaCRBH5W4dMLpCmDjkadZ7+MhxsPvhqGO4EUqn2jCrttE7wq8Jser
         t1nC/HNV+oG4jI0upVhijOQFNCC7JY7BzsZvtYXAlBrXTPwEynVMDLa5bbOpexfkv4gu
         7O+7k6I71RB+elM5+3NNSDRHQ60y0ESRSFziE4vnBGoWje8P/Df+01M+dC1HaYIFhxPC
         /kgr4mRhAj5pr5l4Xatd9RpuigHKnwOi4b6iCqCBckMp060/f3ubufc6Povy9JBlkXM3
         MACA==
X-Gm-Message-State: AGRZ1gJZaaLOlDyb9bi5m22IGKd0pTF9/5X9GedSQ8yBAUFZVBjcfhcW
	nOM80S0buOhOENYKNOj+agpGToWXmX6gBtUiPcja3zLcdPptPAY=
X-Received: by 2002:a63:a91a:: with SMTP id u26mr17883066pge.349.1542587543386;
        Sun, 18 Nov 2018 16:32:23 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp2039557pju;
        Sun, 18 Nov 2018 16:32:22 -0800 (PST)
X-Google-Smtp-Source: AJdET5e8gMiLQ6DoadeOgIW4WDbhRoilzk3gFuUQBDYfnZAXxNHlRcL16WF/wbXpFSUdkp8k6BoV
X-Received: by 2002:aa7:8354:: with SMTP id z20mr20515381pfm.81.1542587542451;
        Sun, 18 Nov 2018 16:32:22 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542587542; cv=none;
        d=google.com; s=arc-20160816;
        b=upQ7nQoYDB00z/GV74NPpxZV9PhoOW88Cve7nR16XD5nlJ7xRxZEtHEOmcqcI2RxDF
         +FFpHgi4a6jYFmZOsIbQNV5pieN4BcFQbXVOlkmJY2nxj4/QLpqOg+QT2QToO1CJZzIP
         sFjsJVqb8BaMpS21JyH2gF28tqp9OVhWeplG+6cN8NynQJiW5uNaljQnwOwvaJvvFlDd
         0TKhbWnRUvTrTlQr770/zM8vBtpdKFvMp1+Y605RyLrYIwlP70mu3R9nT92AiFBDwvQp
         zCNelz1frOPgMjoJ/VFpEFLOVXi7MEoi7V7PGVLVFEjfrVU+CSlwePRUgBICt4ZTCXEs
         /LkA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:cc:to:subject:message-id:date:from
         :references:in-reply-to:mime-version:dkim-signature;
        bh=J9jWcfM1lf5Nw19hr8EfJaBkuFiDFUVblfNS2Vd9O1k=;
        b=KcTQRCra4tA0nF87vPoNrihOknF+tBTDFhaNJKxQNKGyPMAmKlnbctgm812kNOtbFH
         T8sdCfC+NtRO8aIRg+E4e549ZBzOgzcbSxywXogctx1a/0q7PyHfVXKg9QBeHlpsNDik
         UMKzTyPVbMZgpRS+jNz1mqDMqTslqZSJyDV4qqgTFvEjzVikc3kIFa3NEPm+iRONrvM4
         r1jC9jb9OPqJt+26G0QUQLADi4NBHk+vBcM+V2+keif/FT9u0il5cR++LK0NJTFQMsaV
         +r2HpiW5jm2v3fnpacQjCHkvMLQx44IbpBLiZCdXpZ8hoUKBesQvFyAY3RPxa+tizWS8
         FBYg==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@google.com header.s=20161025 header.b=EMnhyVtK;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=REJECT sp=REJECT dis=NONE) header.from=google.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id y24-v6si40466419pfm.141.2018.11.18.16.32.08;
        Sun, 18 Nov 2018 16:32:22 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728018AbeKSKxP (ORCPT <rfc822;piyush.popli@gmail.com>
        + 99 others); Mon, 19 Nov 2018 05:53:15 -0500
Received: from mail-vs1-f67.google.com ([209.85.217.67]:38609 "EHLO
        mail-vs1-f67.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727223AbeKSKxO (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 19 Nov 2018 05:53:14 -0500
Received: by mail-vs1-f67.google.com with SMTP id x64so16794140vsa.5
        for <linux-kernel@vger.kernel.org>; Sun, 18 Nov 2018 16:31:24 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc;
        bh=J9jWcfM1lf5Nw19hr8EfJaBkuFiDFUVblfNS2Vd9O1k=;
        b=EMnhyVtK1+EPIhTkuWH9jZquX1YryPdAH9BWE8aur4SQcSI0IkTrrItGCjdc5IhHOB
         8TtW3lp7UbMF7NJ6SAcCzvcMXFfDsALslnGlXnk2m52JPSHYAw5jw57xI0LnoyNaRsKo
         woRpIVcDgBrRzjxtx7atH22htgAi62juqUP2nLfWn4hyBdanZGe8L4BpvsBFDEuxmvls
         1EJAQcT34pU5ug6GbgZlir0lVY5uBavTh4JpkElbUhUvlqeQr8tPf15fdl655RnblSQw
         mrDI3eisWxS1JvyE2lCiq+S1qQMJtKrKAuv8d1VEUGS+0PQhkHjrxU3Ax4E1YwaQlekJ
         2E7g==
X-Received: by 2002:a67:b44:: with SMTP id 65mr8165388vsl.77.1542587483477;
 Sun, 18 Nov 2018 16:31:23 -0800 (PST)
MIME-Version: 1.0
Received: by 2002:a67:f48d:0:0:0:0:0 with HTTP; Sun, 18 Nov 2018 16:31:22
 -0800 (PST)
In-Reply-To: <20181118213021.24asgwkci3do6oby@brauner.io>
References: <CALCETrUeNZPfrSYa9vH5Ukrk1Y+Kb9GkZOh6LkqG6Z9NpK5P0w@mail.gmail.com>
 <CAKOZuevVk_aH_2TuiNcmxgMa+gHXMBXz6Uu5a6TDjoxjhaE36g@mail.gmail.com>
 <CALCETrVscRwQG55-j1SKc2TmSb1-=5861804ojUuviNzdyDOrA@mail.gmail.com>
 <CAKOZuevRq-igh06zS_nsGG400zXrKFCtajpEG9-xgU2+Rtb2Pw@mail.gmail.com>
 <20181118190504.ixglsqbn6mxkcdzu@yavin> <CAKOZuetfqvn1uVqKJ=16iEzG4g449YOjC_tLM60eKBSkv9u+bQ@mail.gmail.com>
 <608F2959-800D-46EE-A7CD-8C972ACD2F02@amacapital.net> <20181118204317.seaztq7fqmysucns@brauner.io>
 <CAKOZueuWzu2GuJ-w3yb01P9uyO1WniKG+i=BUsweVdA-KgEjhw@mail.gmail.com>
 <20181118212336.53hh3qbjughrtc2l@brauner.io> <20181118213021.24asgwkci3do6oby@brauner.io>
From: Daniel Colascione <dancol@google.com>
Date: Sun, 18 Nov 2018 16:31:22 -0800
Message-ID: <CAKOZuetT8mzZJR-K_W0VM7Dg1c1SnH8tW-HXxMT77yS0DE453w@mail.gmail.com>
Subject: Re: [PATCH] proc: allow killing processes via file descriptors
To: Christian Brauner <christian@brauner.io>
Cc: Andy Lutomirski <luto@amacapital.net>,
        Aleksa Sarai <cyphar@cyphar.com>,
        Andy Lutomirski <luto@kernel.org>,
        Randy Dunlap <rdunlap@infradead.org>,
        "Eric W. Biederman" <ebiederm@xmission.com>,
        LKML <linux-kernel@vger.kernel.org>,
        "Serge E. Hallyn" <serge@hallyn.com>, Jann Horn <jannh@google.com>,
        Andrew Morton <akpm@linux-foundation.org>,
        Oleg Nesterov <oleg@redhat.com>,
        Al Viro <viro@zeniv.linux.org.uk>,
        Linux FS Devel <linux-fsdevel@vger.kernel.org>,
        Linux API <linux-api@vger.kernel.org>,
        Tim Murray <timmurray@google.com>,
        Kees Cook <keescook@chromium.org>,
        Jan Engelhardt <jengelh@inai.de>
Content-Type: text/plain; charset="UTF-8"
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwB3VkKXBPJb19VTAA--.17819S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxXF1UGryfAw4fZFykWw13XFb_yoWrGw4Upa
	18JF18KFW8Ja4vkr1Igws8XFyFgry3Gr15Wwsxta12yr4qvFyFqrnxJrW5uFn5Crs7Cw1U
	AFW0v39xuw18AFUanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUvmb7Iv0xC_KF4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r1j6r4UMcvjeVCFs4IE7xkEbVWUJVW8JwCjxxvEa2IrMxkF7I
	0Ew4C26cxK6c8Ij28IcwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_Jr0_
	JF4lcIIF0xvE2Ix0cI8IcVCY1x0267AKxVWUJVW8JwCYIxAIcVC2z280aVAFwI0_Gr1j6F
	4UJwCYIxAIcVC2z280aVCY1x0267AKxVW8Jr0_Cr1UMxAIw28IcxkI7VAKI48JMxAIw28I
	cVAKzI0EY4vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I
	8CrVAFwI0_Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVW8ZVWr
	XwCIc40Y0x0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Wr1j6rW3JrUvcSsGvfC2KfnxnU
	UI43ZEXa7IUnLXo7UUUUU==

On Sun, Nov 18, 2018 at 1:30 PM, Christian Brauner <christian@brauner.io> wrote:
> On Sun, Nov 18, 2018 at 10:23:36PM +0100, Christian Brauner wrote:
>> On Sun, Nov 18, 2018 at 12:54:10PM -0800, Daniel Colascione wrote:
>> > On Sun, Nov 18, 2018 at 12:43 PM, Christian Brauner
>> > <christian@brauner.io> wrote:
>> > > On Sun, Nov 18, 2018 at 01:28:41PM -0700, Andy Lutomirski wrote:
>> > >>
>> > >>
>> > >> > On Nov 18, 2018, at 12:44 PM, Daniel Colascione <dancol@google.com> wrote:
>> > >> >
>> > >>
>> > >> >
>> > >> > That is, I'm proposing an API that looks like this:
>> > >> >
>> > >> > int process_kill(int procfs_dfd, int signo, const union sigval value)
>> > >> >
>> > >> > If, later, process_kill were to *also* accept process-capability FDs,
>> > >> > nothing would break.
>> > >>
>> > >> Except that this makes it ambiguous to the caller as to whether their current creds are considered.  So it would need to be a different syscall or at least a flag.  Otherwise a lot of those nice theoretical properties go away.
>> > >
>> > > I can add a flag argument
>> > > int process_signal(int procfs_dfd, int signo, siginfo_t *info, int flags)
>> > > The way I see it process_signal() should be equivalent to kill(pid, signal) for now.
>> > > That is siginfo_t is cleared and set to:
>> > >
>> > > info.si_signo = sig;
>> > > info.si_errno = 0;
>> > > info.si_code = SI_USER;
>> > > info.si_pid = task_tgid_vnr(current);
>> > > info.si_uid = from_kuid_munged(current_user_ns(), current_uid());
>> >
>> > That makes sense. I just don't want to get into a situation where
>> > callers feel that they *have* to use the PID-based APIs to send a
>> > signal because process_kill doesn't offer some bit of functionality.
>>
>> Yeah.
>>
>> >
>> > Are you imagining something like requiring info t be NULL unless flags
>> > contains some "I have a siginfo_t" value?
>>
>> Well, I was actually thinking about something like:
>>
>> /**
>>  *  sys_process_signal - send a signal to a process trough a process file descriptor
>>  *  @fd: the file descriptor of the process
>>  *  @sig: signal to be sent
>>  *  @info: the signal info
>>  *  @flags: future flags to be passed
>>  */
>> SYSCALL_DEFINE4(process_signal, int, fd, int, sig, siginfo_t __user *, info,
>>               int, flags)
>> {
>>       struct pid *pid;
>>       struct fd *f;
>>       kernel_siginfo_t kinfo;
>>
>>       /* Do not allow users to pass garbage. */
>>       if (flags)
>>               return -EINVAL;
>>
>>       int ret = __copy_siginfo_from_user(sig, &kinfo, info);
>>       if (unlikely(ret))
>>               return ret;
>>
>>       /* For now, enforce that caller's creds are used. */
>>       kinfo.si_pid = task_tgid_vnr(current);
>>       kinfo.si_uid = from_kuid_munged(current_user_ns(), current_uid());

How about doing it this way? If info is NULL, act like kill(2);
otherwise, act like rt_sigqueueinfo(2).

(Not actual working or compiled code.)

SYSCALL_DEFINE4(process_signal, int, fd, int, sig, siginfo_t __user *, info,
              int, flags)
{
        struct fd f = { 0 };
        kernel_siginfo_t kinfo;
        int ret;

        /* Make API extension possible.  */
        ret = -EINVAL;
        if (flags)
                goto out;

        ret = -EBADF;
        f = fdget(fd);
        if (!f.file)
                goto out;

        ret = mumble_mumble_check_real_proc_file(f.file);
        if (ret)
                goto out;

        /* Act like kill(2) or rt_sigqueueinfo(2) depending on whether
         * the user gave us a siginfo structure.
         */
        if (info) {
                ret = __copy_siginfo_from_user(sig, &kinfo, info);
                if (ret)
                        goto out;
                /* Combine this logic with rt_sigqueueinfo(2) */
                ret = -EPERM;
                if ((info->si_code >= 0 || info->si_code == SI_TKILL) &&
                    (task_pid_vnr(current) != pid))
                        goto out;

        } else {
                /* Combine this logic with kill(2) */
                clear_siginfo(&kinfo);
                kinfo.si_signo = sig;
                kinfo.si_errno = 0;
                kinfo.si_code = SI_USER;
                kinfo.si_pid = task_tgid_vnr(current);
                kinfo.si_uid = from_kuid_munged(current_user_ns(),
current_uid());
        }

        ret = kill_pid_info(sig, &kinfo, proc_pid(file_inode(f.file)));

out:
        if (f.file)
                fput(f);
        return ret;
}
