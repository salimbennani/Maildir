Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 16 Nov 2018 08:32:08 -0000
Received: from icoremail.net (unknown [209.85.210.177])
	by mail-app2 (Coremail) with SMTP id by_KCgDXv2Iidu5baP2gAQ--.48413S3;
	Fri, 16 Nov 2018 15:47:47 +0800 (CST)
Received: from mail-pf1-f177.google.com (unknown [209.85.210.177])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAH5UAedu5bMi1IAA--.620S3;
	Fri, 16 Nov 2018 15:47:42 +0800 (CST)
Received: by mail-pf1-f177.google.com with SMTP id g62so7742274pfd.12
        for <xuliker@zju.edu.cn>; Thu, 15 Nov 2018 23:47:42 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-filter:dkim-signature
         :mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc:sender:precedence:list-id;
        bh=mSIaM80lKQM6WnIT8smcqcoEF4UdZo3JtBe9nCPAxlg=;
        b=Krra5VQAUWl6+vnQwjw7A3ZNeyAGRkKsaBRmDhdj7q5pkiEgDgaWtCS87HPiJfovKx
         XsmytJ8yrgIfC2pO7ROtMhNk8DgU9Lc5KMMHFMCZhVPd1Mgf2BvVvRDsY1Nu7FoPgs9u
         IXgAqe4Qlo5JhkUus73gdOJ8CPhfji1nzdtOIR72GuQcYhc7LNixq25+vKuQVBA/n457
         VteDS0EGqUz2mBMVcEbzuHCsMVC6Z//p7XRveGrJkNY2AaapLhVQfCAL8nC02dfd1N0+
         Q1O6SLNov9yp0vG/uGZqhdU2k+89ZYkjnXWdyNms3+XDyIuuN42IKq7M32ZEajfuqT1I
         T4ew==
X-Gm-Message-State: AGRZ1gL8lnzkY0QR/YwH3o1dMcx8y63h6iYc0sCTvF0DEqn+f8p7Dw+r
	eGEL78ntwzkRzPZLX0wDAfUNTX1Zmf026w/06kEwQ7jIz83o6cs=
X-Received: by 2002:a63:460a:: with SMTP id t10-v6mr9066378pga.197.1542354462395;
        Thu, 15 Nov 2018 23:47:42 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp98605pju;
        Thu, 15 Nov 2018 23:47:41 -0800 (PST)
X-Google-Smtp-Source: AJdET5eNfEQr38L3zVLidYwDuZtVv511094CPXtM9xV7CUPMdxIaGGO4Iaz0hcM2aGWRSYyggH2Y
X-Received: by 2002:a62:75d1:: with SMTP id q200mr9964625pfc.254.1542354461553;
        Thu, 15 Nov 2018 23:47:41 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542354461; cv=none;
        d=google.com; s=arc-20160816;
        b=0GNjX9x+JdP1NJVIhe06EGQ+LeJ7K9qsizyX/f0B36GOt8Wv65Uwm5IA8avYyFGAWr
         /sJ9An/+7twhdmfmVeUXuKZWMxlgt+mQFdgxXznb1ArkfHt0s3rI54qGRH6s3sRcoW4G
         h2WbNaE+GcD+c13K2ijgWnzy1L0BXNugaKQA67yT2DqWvHI7OCA/0dqH3B0x2kemtXrP
         WaskQpGIEaVatUCtKB8iehFhZsPq8+l4xwzBvcwo3GRHDt1YWextBP4ZPwt/BqC6M8mW
         E4FUDQmU0Bg/yDk9KxyVTkvwCcttJ8WiOsvrkcM0mg70gsKsyNX70p9LuEaqef9GouOQ
         cgow==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:cc:to:subject:message-id:date:from
         :in-reply-to:references:mime-version:dkim-signature:dkim-filter;
        bh=mSIaM80lKQM6WnIT8smcqcoEF4UdZo3JtBe9nCPAxlg=;
        b=pcZdWuuWqB2Pn297Yio+BMjfOOa0hA3KTcMyUnMwMVMb1CTZMTE5q1s9YJQ/umqP9B
         IvRB/vVjRXJXHz4aVnh4ApXbyFLo8rSgU97pMzZNfwheycGe1p+M1LqSdSD2lf0+OdEk
         yfGuOf+wm1PndrGn+qCXEY05xz6qILL/Bpl4XZ1NwY211diGS3v91mJ0e/Dvi6NvSr43
         t70rIkzDuO6QBckD5SC6Hvz/pRK8s7O3hdfiF22IqNbtiCii941lSEME9VbL5FsJ2tsw
         nBRWG7spsTsZfLnFF6/8CcagvrnTL0gqnQyUBswymsZugJ2YqvYPODFpU3eheX9Jt9bB
         uYTg==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@nifty.com header.s=dec2015msa header.b=Jv7oQkw8;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id d13si19959159pgh.196.2018.11.15.23.47.26;
        Thu, 15 Nov 2018 23:47:41 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2389350AbeKPR5y (ORCPT <rfc822;jroi.martin@gmail.com>
        + 99 others); Fri, 16 Nov 2018 12:57:54 -0500
Received: from conssluserg-03.nifty.com ([210.131.2.82]:33344 "EHLO
        conssluserg-03.nifty.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727451AbeKPR5y (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 16 Nov 2018 12:57:54 -0500
Received: from mail-vs1-f47.google.com (mail-vs1-f47.google.com [209.85.217.47]) (authenticated)
        by conssluserg-03.nifty.com with ESMTP id wAG7kLIW001911;
        Fri, 16 Nov 2018 16:46:22 +0900
DKIM-Filter: OpenDKIM Filter v2.10.3 conssluserg-03.nifty.com wAG7kLIW001911
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=nifty.com;
        s=dec2015msa; t=1542354382;
        bh=mSIaM80lKQM6WnIT8smcqcoEF4UdZo3JtBe9nCPAxlg=;
        h=References:In-Reply-To:From:Date:Subject:To:Cc:From;
        b=Jv7oQkw8yx9Niwx/vTUumZb5e6uxNfxPcNfOmdwu/M2ZEb3Bd2HvQst8nkWScLEeb
         2E9GG204z/ZTpri4gH8wRw/rUgWG8lW+dsl56iqEOp5mPpl7UzyZhM3+7zyou46C/Z
         1oNG5vN72QglgazWqm8ixKp05nV19q6yTeyrT9Lds5j4ksZkgir5U+W5/Ib4ZqEjHs
         81qKD+y8iaOwTvmXyblZHbxHS8t3SdQHvjEZ+Y48Uyb3DWceoBhTQoUYIMA+ihBscG
         7dv2fk7bE75fR6wvgp4PbhBxNK2Ly4fms8cTlrI2EHCn/T6qHuo8l/D0km08lxBpU5
         xLuXJrklJezGQ==
X-Nifty-SrcIP: [209.85.217.47]
Received: by mail-vs1-f47.google.com with SMTP id g68so13221159vsd.11;
        Thu, 15 Nov 2018 23:46:22 -0800 (PST)
X-Received: by 2002:a67:5f03:: with SMTP id t3mr4170539vsb.155.1542354381242;
 Thu, 15 Nov 2018 23:46:21 -0800 (PST)
MIME-Version: 1.0
References: <20181114204309.18645-1-namit@vmware.com> <20181114204309.18645-2-namit@vmware.com>
In-Reply-To: <20181114204309.18645-2-namit@vmware.com>
From: Masahiro Yamada <yamada.masahiro@socionext.com>
Date: Fri, 16 Nov 2018 16:45:45 +0900
X-Gmail-Original-Message-ID: <CAK7LNAREF_Pcejq1LJ=3K7h0M4o4oSRLfbeJc73O+8HV420Ziw@mail.gmail.com>
Message-ID: <CAK7LNAREF_Pcejq1LJ=3K7h0M4o4oSRLfbeJc73O+8HV420Ziw@mail.gmail.com>
Subject: Re: [PATCH v2 1/2] Makefile: Fix distcc compilation with x86 macros
To: Nadav Amit <namit@vmware.com>
Cc: Ingo Molnar <mingo@redhat.com>,
        Michal Marek <michal.lkml@markovi.net>,
        Thomas Gleixner <tglx@linutronix.de>,
        Borislav Petkov <bp@alien8.de>,
        "H. Peter Anvin" <hpa@zytor.com>, X86 ML <x86@kernel.org>,
        Linux Kbuild mailing list <linux-kbuild@vger.kernel.org>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>
Content-Type: text/plain; charset="UTF-8"
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAH5UAedu5bMi1IAA--.620S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxGF47Zry8Xw4rKr48KF13XFb_yoWruryfpa
	92kan8GayDX39Yqrn7JFWrXa13Ars2kr4F9a17Kr4UXF9xJrs3CrZ2yFZ8Xayxuwn7Gry8
	XF1S9Fy7Gw1fJ3JanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUP0b7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_JrI_
	JrylYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK
	6IIF6r4xMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWUCVW8JwCYIxAIcV
	C0I7IYx2IY6xkF7I0E14v26r1j6r4UMxvI42IY6I8E87Iv67AKxVWxJr0_GcWlcIIF0xvE
	x4A2jsIEc7CjxVAFwI0_Cr1j6rxdMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI0EY4vE52
	x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAFwI0_Jr0_
	Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUtVW8ZwCIc40Y0x0EwI
	xGrwCI42IY6xAIw20EY4v20xvaj40_Gr0_ZrUvcSsGvfC2KfnxnUUI43ZEXa7IUOazutUU
	UUU==

On Thu, Nov 15, 2018 at 1:01 PM Nadav Amit <namit@vmware.com> wrote:
>
> Introducing the use of asm macros in c-code broke distcc, since it only
> sends the preprocessed source file. The solution is to break the
> compilation into two separate phases of compilation and assembly, and
> between the two concatenate the assembly macros and the compiled (yet
> not assembled) source file. Since this is less efficient, this
> compilation mode is only used when distcc or icecc are used.
>
> Note that the assembly stage should also be distributed, if distcc is
> configured using "CFLAGS=-DENABLE_REMOTE_ASSEMBLE".
>
> Reported-by: Logan Gunthorpe <logang@deltatee.com>
> Signed-off-by: Nadav Amit <namit@vmware.com>


Wow, this is so ugly.
I realized how much I hated this by now.

My question is, how long do we need to carry this?


As far as I understood from the long discussion
https://lkml.org/lkml/2018/10/7/92
people are trying to deal with it on the compiler side.
Is it right?


https://gcc.gnu.org/ml/gcc-patches/2018-10/msg01932.html

Once it is supported, what would happen on the kernel side?





> ---
>  Makefile               |  4 +++-
>  arch/x86/Makefile      |  7 +++++--
>  scripts/Makefile.build | 30 ++++++++++++++++++++++++++++--
>  3 files changed, 36 insertions(+), 5 deletions(-)
>
> diff --git a/Makefile b/Makefile
> index 9fce8b91c15f..c07349fc38c7 100644
> --- a/Makefile
> +++ b/Makefile
> @@ -743,7 +743,9 @@ KBUILD_CFLAGS   += $(call cc-option, -gsplit-dwarf, -g)
>  else
>  KBUILD_CFLAGS  += -g
>  endif
> -KBUILD_AFLAGS  += -Wa,-gdwarf-2
> +AFLAGS_DEBUG_INFO = -Wa,-gdwarf-2
> +export AFLAGS_DEBUG_INFO
> +KBUILD_AFLAGS  += $(AFLAGS_DEBUG_INFO)
>  endif
>  ifdef CONFIG_DEBUG_INFO_DWARF4
>  KBUILD_CFLAGS  += $(call cc-option, -gdwarf-4,)
> diff --git a/arch/x86/Makefile b/arch/x86/Makefile
> index f5d7f4134524..b5953cbcc9c8 100644
> --- a/arch/x86/Makefile
> +++ b/arch/x86/Makefile
> @@ -235,10 +235,13 @@ archscripts: scripts_basic
>  archheaders:
>         $(Q)$(MAKE) $(build)=arch/x86/entry/syscalls all
>
> +ASM_MACRO_FILE = arch/x86/kernel/macros.s
> +export ASM_MACRO_FILE
> +
>  archmacros:
> -       $(Q)$(MAKE) $(build)=arch/x86/kernel arch/x86/kernel/macros.s
> +       $(Q)$(MAKE) $(build)=arch/x86/kernel $(ASM_MACRO_FILE)
>
> -ASM_MACRO_FLAGS = -Wa,arch/x86/kernel/macros.s
> +ASM_MACRO_FLAGS = -Wa,$(ASM_MACRO_FILE)
>  export ASM_MACRO_FLAGS
>  KBUILD_CFLAGS += $(ASM_MACRO_FLAGS)
>
> diff --git a/scripts/Makefile.build b/scripts/Makefile.build
> index 6a6be9f440cf..b8d26bdf48b0 100644
> --- a/scripts/Makefile.build
> +++ b/scripts/Makefile.build
> @@ -155,8 +155,34 @@ $(obj)/%.ll: $(src)/%.c FORCE
>
>  quiet_cmd_cc_o_c = CC $(quiet_modtag)  $@
>
> +# If distcc (or icecc) are used, and when assembly macro files are needed, the
> +# compilation stage and the assembly stage needs to be separated. Providing the
> +# "IGNORE_DISTCC=y" option disables separate compilation and assembly.
> +
> +cmd_cc_o_c_direct = $(CC) $(c_flags) -c -o $(1) $<
> +
> +ifneq ($(if $(IGNORE_DISTCC),,$(shell $(CC) --version 2>&1 | head -n 1 | grep -E 'distcc|ICECC')),)
> +a_flags_no_debug = $(filter-out $(AFLAGS_DEBUG_INFO), $(a_flags))
> +c_flags_no_macros = $(filter-out $(ASM_MACRO_FLAGS), $(c_flags))
> +
> +cmd_cc_o_c_two_steps =                                                 \
> +       $(CC) $(c_flags_no_macros) $(DISABLE_LTO) -fverbose-asm -S      \
> +               -o $(@D)/.$(@F:.o=.s) $<;                               \
> +       cat $(ASM_MACRO_FILE) $(@D)/.$(@F:.o=.s) >                      \
> +               $(@D)/.tmp_$(@F:.o=.s);                                 \
> +       $(CC) $(a_flags_no_debug) -c -o $(1) $(@D)/.tmp_$(@F:.o=.s);    \
> +       rm -f $(@D)/.$(@F:.o=.s) $(@D)/.tmp_$(@F:.o=.s)                 \
> +
> +cmd_cc_o_c_helper =                                                    \
> +       $(if $(findstring $(ASM_MACRO_FLAGS),$(c_flags)),               \
> +               $(call cmd_cc_o_c_two_steps, $(1)),                     \
> +               $(call cmd_cc_o_c_direct, $(1)))
> +else
> +cmd_cc_o_c_helper = $(call cmd_cc_o_c_direct, $(1))
> +endif
> +
>  ifndef CONFIG_MODVERSIONS
> -cmd_cc_o_c = $(CC) $(c_flags) -c -o $@ $<
> +cmd_cc_o_c = $(call cmd_cc_o_c_helper,$@)
>
>  else
>  # When module versioning is enabled the following steps are executed:
> @@ -171,7 +197,7 @@ else
>  #   replace the unresolved symbols __crc_exported_symbol with
>  #   the actual value of the checksum generated by genksyms
>
> -cmd_cc_o_c = $(CC) $(c_flags) -c -o $(@D)/.tmp_$(@F) $<
> +cmd_cc_o_c = $(call cmd_cc_o_c_helper,$(@D)/.tmp_$(@F))
>
>  cmd_modversions_c =                                                            \
>         if $(OBJDUMP) -h $(@D)/.tmp_$(@F) | grep -q __ksymtab; then             \
> --
> 2.17.1
>


-- 
Best Regards
Masahiro Yamada
