Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 13 Nov 2018 15:24:31 -0000
Received: from icoremail.net (unknown [209.85.215.174])
	by mail-app2 (Coremail) with SMTP id by_KCgC3f9GdzupbumeGAQ--.40350S3;
	Tue, 13 Nov 2018 21:16:14 +0800 (CST)
Received: from mail-pg1-f174.google.com (unknown [209.85.215.174])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBn4EyczupbwYY4AA--.3829S3;
	Tue, 13 Nov 2018 21:16:12 +0800 (CST)
Received: by mail-pg1-f174.google.com with SMTP id w7so5669947pgp.13
        for <xuliker@zju.edu.cn>; Tue, 13 Nov 2018 05:16:12 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :from:to:cc:subject:date:message-id:sender:precedence:list-id;
        bh=BF8Ez1EVctfVc1HvoRkDalmVMnm+IAQamkFI1bB5Bcc=;
        b=uAh6Z7yCkOlhGt+ztcykEY7Av67hKSuGcuZ42jeae4vwBrZaxP8jlyNrdVhTfnxwKi
         dbYwyTfQtp6lnBJZVDQ6nxzZ2igac9uR5YlXlwlA50N2m9DedCNSPiTn+Yw53QZX5WYz
         9QyASeVivA7RgUbO8OVga5EXPBhi8OsxnCHkI0HHYBiwK8hV/OuPbnlwyKrgNIrL93N5
         T6g+B2qMe18IjAiVfZGFgm2iGj1fuOsY5bXrKOJFiciDm/sYYZynlUWzUuygW0b5n1IF
         xodxRONRPVjJnJUqHnLrcGWLmZ4wE/cskPbJm55sat/aijJSefD7goKwXxRCPkkaDsRP
         1cBQ==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gIArSLNeslCH3snkohZwA2WpNGwfI82Gq2LrDQKm3L1XeWHk9IF
	6JPI5xYD1nHBZWi2HN884wO1xfSIqqXF7nHQhQFb+gfnBYDnxeoU3Q==
X-Received: by 2002:a62:d084:: with SMTP id p126-v6mr5342583pfg.147.1542114972350;
        Tue, 13 Nov 2018 05:16:12 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp4452304pjt;
        Tue, 13 Nov 2018 05:16:11 -0800 (PST)
X-Google-Smtp-Source: AJdET5fkWHSdSGDUkABD+Iz/5By5A8ap/chdBgEDTp9ENRR+9HBCcluZJsdaTndD3/qJLBlHIXsB
X-Received: by 2002:a62:9302:: with SMTP id b2-v6mr5119452pfe.108.1542114971270;
        Tue, 13 Nov 2018 05:16:11 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542114971; cv=none;
        d=google.com; s=arc-20160816;
        b=RTsmRInZYrS8uG8n9BpGvMQZ27UwuUvUlwOYu89ciTxoQ+otWsb8YEQAQahcDEFqOq
         /lZyjsBlRhYapzukhTE3cXW5h5XCT42xtCuKlRRx9bj018siCy02vJkrDp0XoAS+khLa
         MUC4cVEzUA1XqcqbuTci7LzBQOA6K3gI+IqBQsMwxCE3zW8qTO+JaGvDLuErTAsNhcYr
         IxhjqIgwuzOp7/jLr45kWFU9B7sroWBveCAEVNVijMfNuz+f79Xl1QrFo9CHNDBMZxRA
         XCW49ZQiP7GmBcEd1gaj9SvfXiMvM/xS7EVr5GNKWKxswG7T0dyRNgJLq+yeGULVi/4y
         jQXQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:message-id:date:subject:cc:to:from;
        bh=BF8Ez1EVctfVc1HvoRkDalmVMnm+IAQamkFI1bB5Bcc=;
        b=SgeGC6bmxNNK56LNmeeprEqv7mMRKIwNVr7OWDZrCRRgCh7SkbxDrIKvzYqjHb8gCR
         p29fvK72i8Z57voSf2Nmag5MR8M02mt8olBLXAZHEK4dG3CqMz/qCiY53dHZtDeBq584
         up0ghxSXdlXJv1QnVd6TVofbYzOiV5t8fo3RenbI3GJABZiVYakcmeH3tBFr9xB7p9OH
         zfyAaMoEGO2n8Xots0TjozqTDisScR70l6vK542BbUEyNWSDtrLE5u2TJMlNgA7d2Hq0
         YiTv6W47/nDN0MEt3uOhtXLXXLUK1vKAWUcwXY8C4d7JpCXqQWN9vT/J6AZ/9QOUfl+b
         LSqw==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id b34-v6si21199604pld.276.2018.11.13.05.15.56;
        Tue, 13 Nov 2018 05:16:11 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2387499AbeKMXN1 (ORCPT <rfc822;vincent.riesop@gmail.com>
        + 99 others); Tue, 13 Nov 2018 18:13:27 -0500
Received: from albert.telenet-ops.be ([195.130.137.90]:57126 "EHLO
        albert.telenet-ops.be" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1732728AbeKMXN1 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 13 Nov 2018 18:13:27 -0500
Received: from ramsan.of.borg ([84.194.111.163])
        by albert.telenet-ops.be with bizsmtp
        id zRFK1y00L3XaVaC06RFKyX; Tue, 13 Nov 2018 14:15:19 +0100
Received: from rox.of.borg ([192.168.97.57])
        by ramsan.of.borg with esmtp (Exim 4.86_2)
        (envelope-from <geert@linux-m68k.org>)
        id 1gMYXH-00066m-Mm; Tue, 13 Nov 2018 14:15:19 +0100
Received: from geert by rox.of.borg with local (Exim 4.90_1)
        (envelope-from <geert@linux-m68k.org>)
        id 1gMYXH-0004l3-LD; Tue, 13 Nov 2018 14:15:19 +0100
From: Geert Uytterhoeven <geert+renesas@glider.be>
To: Eric Auger <eric.auger@redhat.com>,
        Alex Williamson <alex.williamson@redhat.com>
Cc: Philipp Zabel <p.zabel@pengutronix.de>, kvm@vger.kernel.org,
        linux-renesas-soc@vger.kernel.org, linux-kernel@vger.kernel.org,
        Geert Uytterhoeven <geert+renesas@glider.be>
Subject: [PATCH v5] vfio: platform: Add generic reset controller support
Date: Tue, 13 Nov 2018 14:15:08 +0100
Message-Id: <20181113131508.18246-1-geert+renesas@glider.be>
X-Mailer: git-send-email 2.17.1
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBn4EyczupbwYY4AA--.3829S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxKw4fur1Uuw15ur1DWF4kZwb_yoW7Xr1fpF
	4UGFyfJFW8Gr15Kw4Iyw4UZFW5uF1aq34xG3sxt3W2k34Yvr98JFyYkF1FqF9rAryUAay5
	GF47KF48ZF4Y9F7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPYb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_JrI_
	JrylYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvY0x0EwI
	xGrwCjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xS
	Y4AK6IIF6ry8MxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVW8JVW5JwCYIx
	AIcVC0I7IYx2IY6xkF7I0E14v26r4j6F4UMxvI42IY6I8E87Iv67AKxVW0oVCq3wCYIxAI
	cVC2z280aVCY1x0267AKxVW0oVCq3wCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26cxK6c
	8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v26r1j
	6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_Jw0_GFylIxkGc2Ij64
	vIr41lIxAIcVCF04k26cxKx2IYs7xG6r4j6FyUYxBIdaVFxhVjvjDU0xZFpf9x07bQv38U
	UUUU=

Vfio-platform requires dedicated reset support, provided either by ACPI,
or, on DT platforms, by a device-specific reset driver matching against
the device's compatible value.

On many SoCs, devices are connected to an SoC-internal reset controller.
If the reset hierarchy is described in DT using "resets" properties, or
in lookup tables in platform code, and devices have exactly one
dedicated reset each, such devices can be reset in a generic way through
the reset controller subsystem.  Hence add support for this, avoiding
the need to write device-specific reset drivers for each single device
on affected SoCs.

Devices that do require a more complex reset procedure can still provide
a device-specific reset driver, as that takes precedence.

Note that this functionality depends on CONFIG_RESET_CONTROLLER=y, and
becomes a no-op (as in: "No reset function found for device") if reset
controller support is disabled.

Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
Reviewed-by: Philipp Zabel <p.zabel@pengutronix.de>
Reviewed-by: Simon Horman <horms+renesas@verge.net.au>
---
This depends on "[PATCH] reset: Add reset_control_get_count()"
(https://lore.kernel.org/lkml/20181113124744.7769-1-geert+renesas@glider.be/).

v5:
  - Use reset_control_get_exclusive() instead of rejected
    reset_control_get_dedicated(), as exclusive already implies a
    dedicated reset line,
  - Ensure the device has exactly one reset,

v4:
  - Add Reviewed-by,
  - Use new RFC reset_control_get_dedicated() instead of
    of_reset_control_get_exclusive(), to (a) make it more generic, and
    (b) make sure the reset returned is really a dedicated reset, and
    does not affect other devices,

v3:
  - Add Reviewed-by,
  - Merge similar checks in vfio_platform_has_reset(),

v2:
  - Don't store error values in vdev->reset_control,
  - Use of_reset_control_get_exclusive() instead of
    __of_reset_control_get(),
  - Improve description.
---
 drivers/vfio/platform/vfio_platform_common.c  | 29 +++++++++++++++++--
 drivers/vfio/platform/vfio_platform_private.h |  1 +
 2 files changed, 28 insertions(+), 2 deletions(-)

diff --git a/drivers/vfio/platform/vfio_platform_common.c b/drivers/vfio/platform/vfio_platform_common.c
index c0cd824be2b767be..ce2aad8e0a8159f9 100644
--- a/drivers/vfio/platform/vfio_platform_common.c
+++ b/drivers/vfio/platform/vfio_platform_common.c
@@ -18,6 +18,7 @@
 #include <linux/module.h>
 #include <linux/mutex.h>
 #include <linux/pm_runtime.h>
+#include <linux/reset.h>
 #include <linux/slab.h>
 #include <linux/types.h>
 #include <linux/uaccess.h>
@@ -113,11 +114,14 @@ static bool vfio_platform_has_reset(struct vfio_platform_device *vdev)
 	if (VFIO_PLATFORM_IS_ACPI(vdev))
 		return vfio_platform_acpi_has_reset(vdev);
 
-	return vdev->of_reset ? true : false;
+	return vdev->of_reset || vdev->reset_control;
 }
 
 static int vfio_platform_get_reset(struct vfio_platform_device *vdev)
 {
+	struct reset_control *rstc;
+	int count;
+
 	if (VFIO_PLATFORM_IS_ACPI(vdev))
 		return vfio_platform_acpi_has_reset(vdev) ? 0 : -ENOENT;
 
@@ -128,8 +132,24 @@ static int vfio_platform_get_reset(struct vfio_platform_device *vdev)
 		vdev->of_reset = vfio_platform_lookup_reset(vdev->compat,
 							&vdev->reset_module);
 	}
+	if (vdev->of_reset)
+		return 0;
+
+	/* Generic reset handling needs a single, dedicated reset line */
+	count = reset_control_get_count(vdev->device);
+	if (count < 0)
+		return count;
+
+	if (count != 1)
+		return -EINVAL;
 
-	return vdev->of_reset ? 0 : -ENOENT;
+	rstc = reset_control_get_exclusive(vdev->device, NULL);
+	if (!IS_ERR(rstc)) {
+		vdev->reset_control = rstc;
+		return 0;
+	}
+
+	return PTR_ERR(rstc);
 }
 
 static void vfio_platform_put_reset(struct vfio_platform_device *vdev)
@@ -139,6 +159,8 @@ static void vfio_platform_put_reset(struct vfio_platform_device *vdev)
 
 	if (vdev->of_reset)
 		module_put(vdev->reset_module);
+
+	reset_control_put(vdev->reset_control);
 }
 
 static int vfio_platform_regions_init(struct vfio_platform_device *vdev)
@@ -218,6 +240,9 @@ static int vfio_platform_call_reset(struct vfio_platform_device *vdev,
 	} else if (vdev->of_reset) {
 		dev_info(vdev->device, "reset\n");
 		return vdev->of_reset(vdev);
+	} else if (vdev->reset_control) {
+		dev_info(vdev->device, "reset\n");
+		return reset_control_reset(vdev->reset_control);
 	}
 
 	dev_warn(vdev->device, "no reset function found!\n");
diff --git a/drivers/vfio/platform/vfio_platform_private.h b/drivers/vfio/platform/vfio_platform_private.h
index 85ffe5d9d1abd94e..a56e80ae5986540b 100644
--- a/drivers/vfio/platform/vfio_platform_private.h
+++ b/drivers/vfio/platform/vfio_platform_private.h
@@ -60,6 +60,7 @@ struct vfio_platform_device {
 	const char			*compat;
 	const char			*acpihid;
 	struct module			*reset_module;
+	struct reset_control		*reset_control;
 	struct device			*device;
 
 	/*
-- 
2.17.1
