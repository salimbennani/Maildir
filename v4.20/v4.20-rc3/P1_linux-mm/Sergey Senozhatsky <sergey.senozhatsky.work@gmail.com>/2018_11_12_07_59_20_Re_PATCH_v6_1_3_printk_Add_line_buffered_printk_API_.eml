Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 12 Nov 2018 15:13:40 -0000
Received: from icoremail.net (unknown [209.85.210.174])
	by mail-app2 (Coremail) with SMTP id by_KCgD3_48+M+lbX9l7AQ--.3537S3;
	Mon, 12 Nov 2018 16:01:03 +0800 (CST)
Received: from mail-pf1-f174.google.com (unknown [209.85.210.174])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwC3m0c8M+lblIgwAA--.4984S3;
	Mon, 12 Nov 2018 16:01:00 +0800 (CST)
Received: by mail-pf1-f174.google.com with SMTP id u10-v6so3917287pfn.9
        for <xuliker@zju.edu.cn>; Mon, 12 Nov 2018 00:01:00 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:date:from:to:cc
         :subject:message-id:references:mime-version:content-disposition
         :in-reply-to:user-agent:sender:precedence:list-id;
        bh=9bJ2xvaoOjUEvCPnKtc/KLOx7auJCTWflyYQx6oZMU4=;
        b=MyFOksaat+o3C1nYieG+AC5U/zjGUDvFFXhtKnOB8X2rlGct8dOyyXVq3PeyxRF+kd
         9uavVDiE3eTp/PvxQbSbKWT9Fzglqtph7BKupj6Q8iGRDJr86htSt/jvh3+2cDj3o/vU
         Y2Ei4Iu9niCBPF+MNlqf9aNyvzpKuSsvBfg4sxIK8VFm2VcLIONf1h9RcRxXKeALgvVg
         OFekMsqampCULrQfsgEHA798GIoglp8RmZ8YCzpjORjYd1OSTdXXV4sDUQvzvvKk2r1B
         1RBtdM9Tl2jhiEuYua80uJlUEz38YZ4fbGTrn+d5/fQhbepEuQW4vGcbHEPioxau2g03
         PBww==
X-Gm-Message-State: AGRZ1gLp+3TuAqy3Zs0IqmQ+eXD4dwcSiyyuag5B9spr0iQ9Y3ji4B7M
	AvH5lb1cIi3sdaZFM17TXvuQiqZQjG/4EymC9k0YEjYCna2YgX9vXA==
X-Received: by 2002:a63:4044:: with SMTP id n65mr16060570pga.90.1542009660512;
        Mon, 12 Nov 2018 00:01:00 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp2900615pjt;
        Mon, 12 Nov 2018 00:00:59 -0800 (PST)
X-Google-Smtp-Source: AJdET5fCFWw7niIiMjtldk4RKCEcBA19kUTnJwzPwFJMvNSTjV2J8uRwNXFwBR5JgqVG/1i0RtRP
X-Received: by 2002:a62:51c1:: with SMTP id f184-v6mr6380835pfb.101.1542009659491;
        Mon, 12 Nov 2018 00:00:59 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542009659; cv=none;
        d=google.com; s=arc-20160816;
        b=jJq6BW/YvhZfGrZvi3qqAjmsFTGqmrMzxWwO881VdFKSqkWvopLDT24d3kObYdTKK/
         MRSaUr03aUUblkyA0MZxnS3hyiFKxApYQhGjuUl6QechJWy2EV9UWQA61N1dlxf4ZyvA
         hvGFNYKA5HMbNxZFJGnEdwIn1bXLOswAwxFDGWQTS4eEJs87vOoexwWz0Kw5b1DmZf/z
         TEqZ2baAgrzzBdgi1ADFrEu16OWp1z3bsW78fs4m0bzpQPTz2Jcrzf/t3ISbJAibPdxP
         mBmeame8es4FFhjiwrCP0nAUoWw86kceTb+K/A4D4tlUyPvjSggdnVG+9fD+EUhw7FTY
         1eaA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:in-reply-to
         :content-disposition:mime-version:references:message-id:subject:cc
         :to:from:date:dkim-signature;
        bh=9bJ2xvaoOjUEvCPnKtc/KLOx7auJCTWflyYQx6oZMU4=;
        b=OUQwQntKv2O9BSoyW0373kMLZCLrojxy0fLcQd2RW0qJiZt4i/ox4AnmbpXJVYpAPi
         NouVRkZBRahQi2rbJMOhDDyMly9NEuUV8HsTw3dS7SxksQhy5ftZ4hnBB508JcAC14xH
         9eUvcU2ccF6pIKDPWUPiAPVxwfZxtZ00tNhE/ZOIgGLQ36L4nNwcPBCo69YBjcbc/q+Z
         NNOeFQmwl4YvkLLFGyWbHt/Da8GNTQLXvg2bYfNpY88XfDiPo4kRNOE+blCAicZajTn4
         OjBIHtC+UIs2EPxcEfJsolK7ucgRJClxs6FyLpcWDF4Ezmhyqk8Ll6P1PemF9C+2seuz
         zcCg==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@gmail.com header.s=20161025 header.b=QdAiapz3;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=NONE sp=QUARANTINE dis=NONE) header.from=gmail.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id d66-v6si17935055pfc.92.2018.11.12.00.00.44;
        Mon, 12 Nov 2018 00:00:59 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728559AbeKLRv3 (ORCPT <rfc822;tomnomnom1@gmail.com>
        + 99 others); Mon, 12 Nov 2018 12:51:29 -0500
Received: from mail-pg1-f193.google.com ([209.85.215.193]:42218 "EHLO
        mail-pg1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727000AbeKLRv3 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 12 Nov 2018 12:51:29 -0500
Received: by mail-pg1-f193.google.com with SMTP id d72so251995pga.9
        for <linux-kernel@vger.kernel.org>; Sun, 11 Nov 2018 23:59:25 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=9bJ2xvaoOjUEvCPnKtc/KLOx7auJCTWflyYQx6oZMU4=;
        b=QdAiapz3HmsjmyBkz4lpfeAHt37fGAj1nX8kkqRE1hnmMd0kScgEx0Qk33IKALLGtq
         VjuESuTRUtzqt/CBbop7qS1BkCbhRRw11vBBIfRxAc7EmTkq0/fN7ktJ33jcSCUIm//a
         pmwKFXi/ALkeQs8uouSsxuT20+/QP47JFIxLq3E2RXc3xzb9rrJk0l3ti/dVjzbiMfDO
         z0DYY8vLU9x6ebGROlVR/f20NW2w/nw2ufAwqnz4/+75dgDVvc7bUxmwTbJ5x6a0BGWb
         WsuylRaqzWO9MOvSEE3jJkg+TSD8bZBajovYOsvLuQ1MGKv5ekm1r6h9yqHWOptYyUiw
         JSjg==
X-Received: by 2002:a63:1c09:: with SMTP id c9mr2721754pgc.200.1542009565088;
        Sun, 11 Nov 2018 23:59:25 -0800 (PST)
Received: from localhost ([110.70.57.105])
        by smtp.gmail.com with ESMTPSA id q195sm16058791pgq.7.2018.11.11.23.59.23
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Sun, 11 Nov 2018 23:59:24 -0800 (PST)
Date: Mon, 12 Nov 2018 16:59:20 +0900
From: Sergey Senozhatsky <sergey.senozhatsky.work@gmail.com>
To: Petr Mladek <pmladek@suse.com>,
        Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
Cc: Sergey Senozhatsky <sergey.senozhatsky.work@gmail.com>,
        Sergey Senozhatsky <sergey.senozhatsky@gmail.com>,
        Dmitriy Vyukov <dvyukov@google.com>,
        Steven Rostedt <rostedt@goodmis.org>,
        Alexander Potapenko <glider@google.com>,
        Fengguang Wu <fengguang.wu@intel.com>,
        Josh Poimboeuf <jpoimboe@redhat.com>,
        LKML <linux-kernel@vger.kernel.org>,
        Linus Torvalds <torvalds@linux-foundation.org>,
        Andrew Morton <akpm@linux-foundation.org>, linux-mm@kvack.org,
        Ingo Molnar <mingo@redhat.com>,
        Peter Zijlstra <peterz@infradead.org>,
        Will Deacon <will.deacon@arm.com>
Subject: Re: [PATCH v6 1/3] printk: Add line-buffered printk() API.
Message-ID: <20181112075920.GA497@jagdpanzerIV>
References: <1541165517-3557-1-git-send-email-penguin-kernel@I-love.SAKURA.ne.jp>
 <20181106143502.GA32748@tigerII.localdomain>
 <20181107102154.pobr7yrl5il76be6@pathway.suse.cz>
 <20181108022138.GA2343@jagdpanzerIV>
 <20181108112443.huqkju4uwrenvtnu@pathway.suse.cz>
 <20181108123049.GA30440@jagdpanzerIV>
 <20181109141012.accx62deekzq5gh5@pathway.suse.cz>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181109141012.accx62deekzq5gh5@pathway.suse.cz>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwC3m0c8M+lblIgwAA--.4984S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxuF1kZr18Aw1DAr15Xr17GFg_yoWrWr43pF
	W5ta4fGr4kZr18Cr18JF1UXFy5Xws7Z3WUJrWUJw1fZF1UWr97Zr17trWYvFWUJr13Xryj
	vF1UJF1rt3Z8JaUanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPjb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_JrI_
	JrylYx0Ex4A2jsIE14v26F4j6r4UJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IY64vIr4
	1l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkIecxE
	wVCI4VW8ZwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_JFI_Gr1lcIIF0x
	vE2Ix0cI8IcVCY1x0267AKxVWUJVW8JwCYIxAIcVC2z280aVAFwI0_GcCE3s1lcIIF0xvE
	x4A2jsIEc7CjxVAFwI0_GcCE3s1l42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwVAq07
	x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG67AKxVWUJVWU
	GwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r4a6rW5MIIYrxkI7VAKI4
	8JMIIF0xvE42xK8VAvwI8IcIk0rVW8JVW3JbIYCTnIWIevJa73UjIFyTuYvjxUQUKVUUUU
	U

On (11/09/18 15:10), Petr Mladek wrote:
> > 
> > If I'm not mistaken, this is for the futute "printk injection" work.
> 
> The above code only tries to push complete lines to the main log buffer
> and consoles ASAP. It sounds like a Good Idea(tm).

Probably it is. So *quite likely* I'm wrong here.

Hmm... Thinking out loud.
At the same time, splitting a single logbuf entry gives a chance to other
events to mix in. Example:
	pr_cont("Foo:");
	pr_cont("\nbar");
	pr_cont("\n");

Previously it could been stored in one logbuf entry (one logstore,
one console_trylock_spinning), which means that it could have been
printed in one go:

	call_console_drivers()
		spin_trylock_irqsave(&port->lock, flags);
		uart_console_write(.... "Foo:\nbar\n");
		spin_unlock_irqrestore(&port->lock, flags);

While with buffered printk, it will be store in two logbuf entries,
and printed in two goes:

	call_console_drivers()
		spin_trylock_irqsave(&port->lock, flags);
		uart_console_write(.... "Foo:\nbar\n");
		spin_unlock_irqrestore(&port->lock, flags);

	<< ... console driver IRQ, TX port->state->xmit chars ... >>>

	call_console_drivers()
		spin_trylock_irqsave(&port->lock, flags);
		uart_console_write(.... "Foo:\nbar\n");
		spin_unlock_irqrestore(&port->lock, flags);

So, *technically*, we now let more events to happens between printk-s.

But, let's look at some of pr_cont() usage examples.
E.g. dump() from arch/h8300/kernel/traps.c. The code in question looks
as follows:

	pr_info("\nKERNEL STACK:");
	tp = ((unsigned char *) fp) - 0x40;
	for (sp = (unsigned long *) tp, i = 0; (i < 0x40);  i += 4) {
		if ((i % 0x10) == 0)
			pr_info("\n%08x: ", (int) (tp + i));
		pr_info("%08x ", (int) *sp++);
	}
	pr_info("\n");

dmesg

[   15.260099] 0000:    00000000  00000010  00000040  00000090
               0010:    00000100  00000190  00000240  00000310
               0020:    00000400  00000510  00000640  00000790
               0030:    00000900  00000a90  00000c40  00000e10

So we have the entire KERNEL STACK stored as a single line, in
a single logbuf entry.

cat /dev/kmsg

4,687,15260099,c;\x0a0000:    00000000  00000010  00000040  00000090  \x0a0010:    00000100  00000190  00000240  00000310  \x0a0020:    00000400  00000510  00000640  00000790  \x0a0030:    00000900  00000a90  00000c40  00000e10

Shall we consider this as a "reference" representation: data that
pr_cont(), ideally, would have stored as a single logbuf entry? And
then compare the "reference" representation and what buffered printk
does.

Buffered printk always stores this as several lines, IOW several
logbuf entries.

cat /dev/kmsg

4,690,15260152,-;0000:    00000000  00000010  00000040  00000090  
4,691,15260154,-;0010:    00000100  00000190  00000240  00000310  
4,692,15260157,-;0020:    00000400  00000510  00000640  00000790  
4,694,15260161,-;0030:    00000900  00000a90  00000c40  00000e10  

So if we will have concurrent printk()-s happening on other CPUs,
then the KERNEL STACK data block still can be a bit hard to read:

[   15.260152] 0000:    00000000  00000010  00000040  00000090  
<printk CPU1> ... foo bar foo bar
<printk CPU2> ... foo bar foo bar
...
[   15.260154] 0010:    00000100  00000190  00000240  00000310  
<printk CPU3> ... foo bar foo bar
<printk CPU2> ... foo bar foo bar
...
              ... and so on; you got the idea.

> No, please note that the for cycle searches for '\n' from the end
> of the string.

You are right, I didn't notice that. Indeed.


Tetsuo, lockdep report with buffered printks looks a bit different:

 kernel:  Possible unsafe locking scenario:
 kernel:        CPU0                    CPU1
 kernel:        ----                    ----
 kernel:   lock(bar_lock);
 kernel:                                lock(
 kernel: foo_lock);
 kernel:                                lock(bar_lock);
 kernel:   lock(foo_lock);
 kernel: 


> > 	len = vsprintf();
> > 	if (len && text[len - 1] == '\n' || overflow)
> > 		flush();
> 
> I had the same idea. Tetsuo ignored it. I looked for more arguments
> and found that '\n' is used in the middle of several pr_cont()
> calls

OK, so we probably can have that new semantics. But we might split
something that possibly was meant to be a single line with a bunch
of \n in the middle.

	-ss
