Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 12 Nov 2018 07:37:16 -0000
Received: from icoremail.net (unknown [209.85.215.171])
	by mail-app2 (Coremail) with SMTP id by_KCgC3f92vEOlb3tV6AQ--.37484S3;
	Mon, 12 Nov 2018 13:33:35 +0800 (CST)
Received: from mail-pg1-f171.google.com (unknown [209.85.215.171])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwC3kT2sEOlbqOwvAA--.8924S3;
	Mon, 12 Nov 2018 13:33:32 +0800 (CST)
Received: by mail-pg1-f171.google.com with SMTP id w3-v6so3506565pgs.11
        for <xuliker@zju.edu.cn>; Sun, 11 Nov 2018 21:33:32 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:cc:subject:date
         :message-id:in-reply-to:references:mime-version:spamdiagnosticoutput
         :spamdiagnosticmetadata:to:sender:precedence:list-id;
        bh=Tp7HEclraTkGRT3T+PPVhue20IIJzbgWXrHx5uEldTs=;
        b=DaqmvG1O5LKfTDRtheF1i53bijyHLtr/AStxJ3uvFVRAqyiQpMVJ6NlngQqK2r++Na
         PireRQ6inMy39v6mR2+761Q3785LowHbLX0VbtHjBnqAY+BolNkBzlx9zA0dOI/H2ePS
         kK/8Eb7Itfy2g9iy8who8CEZ7wymICHOwv+caeHXkMNj9ujMZC8+9P9MrJd/JoZLFkoA
         Qo+er9KFua6b8CycyreFMDcAQVIkdH5fJA9P6bDtLYZpSHT1RqPwgMOEHIKsi6AZ8yZE
         /t7kBV1X2u37a8pIHyStQ41GBXgYiZEZ/4hXWNNp47ZWT6CZW+/RRTvO9efrYCnBrl4W
         HhwA==
X-Gm-Message-State: AGRZ1gLCvUE11G9pjaeOuqRqkQ+H5XgcUsLAroYHJE0U2VO18F5Fo8dH
	rqh8IJBdT1xY/2Nud/vFVYrEol92jCIuTWeDD6Tc4psmyj33Y/D0DQ==
X-Received: by 2002:a63:1e17:: with SMTP id e23mr16040107pge.130.1542000811807;
        Sun, 11 Nov 2018 21:33:31 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp2796780pjt;
        Sun, 11 Nov 2018 21:33:30 -0800 (PST)
X-Google-Smtp-Source: AJdET5fA7a+SxtSz7d2llkoC9cC8hCHMQBAIQZN3Nu/0HlFesfn5yr0T+vlgv9snCCsE+Ez/h+Sg
X-Received: by 2002:a63:9306:: with SMTP id b6mr15665780pge.36.1542000810869;
        Sun, 11 Nov 2018 21:33:30 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542000810; cv=none;
        d=google.com; s=arc-20160816;
        b=oI/djcncBH1E3jUY6krvp1Bizphwr91Dy+fprAJyBepNcs1pCitw3Yl+i9sRHIA3PA
         3chIGlTx6eNE0vO5oU2h9gkJkAaXxggKU74ohZ2z5oMl9yWhO8P6sLBbI1SHw9fkajsh
         0VjTIOKaBPYbdIydUGfTxhVQvuH0A6g51ct8s+lxxXQBSZc3C3yT/MrmeRVAiKEr8UQF
         OHT6pHsiRT6DIT2C9VB+HUH3h8/JdC4nq7lj9aSy/U8W/5d74yHeuRE7SgUJXZnAqOn+
         pdH8N5KuLOVkk3FlUCzCKGt7yzJuv4nO7kXTLfAI1yJvXnmTSCjJBuZT5tJgpHw8c3mB
         qVgg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:to:spamdiagnosticmetadata
         :spamdiagnosticoutput:mime-version:references:in-reply-to:message-id
         :date:subject:cc:from:dkim-signature;
        bh=Tp7HEclraTkGRT3T+PPVhue20IIJzbgWXrHx5uEldTs=;
        b=Z0rLzNQB50hms/F1fxpkTKl3Za6srL8ClqBTnftTaDyHhIgEz6ZQ/YWxJkRC4qa4ul
         qi0WbhTgvyfGKqvJYOtUAxpjoQ2daFvJU2Duc7zDmxebDqmcGKdT3nMOmzC1a11pEpu/
         Jhm2fg3NcNrYPCYMcUkZdlQ2rjfI88gHis++tLCq8o10cmImoJQwVC6luvBPmU6L6Oa6
         CU04033IuovFu3pg3zYzNAJAMaDULpHn9nSUZ11BystUkWo5M+f9dTzzM4abpTjOUAP7
         oFx2VdlhgsKkYycYTCFLFyei8y1JmPFdjz4tsRn+mCNlEInNIracN3udxfPFMSDV+RLZ
         ppaw==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@amdcloud.onmicrosoft.com header.s=selector1-amd-com header.b=cz3HfFrz;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id 3-v6si17313326pll.361.2018.11.11.21.33.16;
        Sun, 11 Nov 2018 21:33:30 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1731143AbeKLPYZ (ORCPT <rfc822;tomnomnom1@gmail.com>
        + 99 others); Mon, 12 Nov 2018 10:24:25 -0500
Received: from mail-eopbgr810078.outbound.protection.outlook.com ([40.107.81.78]:29600
        "EHLO NAM01-BY2-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1730976AbeKLPYZ (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 12 Nov 2018 10:24:25 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=amdcloud.onmicrosoft.com; s=selector1-amd-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=Tp7HEclraTkGRT3T+PPVhue20IIJzbgWXrHx5uEldTs=;
 b=cz3HfFrz2O2gEa/cDfOc5L6DsmSphpVaVA84VKyXgJdeWc/Z/iIMQeaCTHWZ4XVtxS/Oi/2An6NZ6TFmdW7LNMdoEC+fMMT1jOZYak3Vr6Yvsg0m6SgOEBXfjSj6XY6Yaxx15zZ9nb1NmVbyvFz2Sb3Y3UucXdyPuTEP+58B+n8=
Received: from BN6PR1201CA0010.namprd12.prod.outlook.com
 (2603:10b6:405:4c::20) by CY1PR12MB0618.namprd12.prod.outlook.com
 (2a01:111:e400:c43c::12) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.1294.20; Mon, 12 Nov
 2018 05:32:41 +0000
Received: from CO1NAM03FT026.eop-NAM03.prod.protection.outlook.com
 (2a01:111:f400:7e48::201) by BN6PR1201CA0010.outlook.office365.com
 (2603:10b6:405:4c::20) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384) id 15.20.1294.21 via Frontend
 Transport; Mon, 12 Nov 2018 05:32:40 +0000
Received-SPF: None (protection.outlook.com: amd.com does not designate
 permitted sender hosts)
Received: from SATLEXCHOV01.amd.com (165.204.84.17) by
 CO1NAM03FT026.mail.protection.outlook.com (10.152.80.162) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384) id
 15.20.1339.10 via Frontend Transport; Mon, 12 Nov 2018 05:32:39 +0000
Received: from LinuxHost.amd.com (10.34.1.3) by SATLEXCHOV01.amd.com
 (10.181.40.71) with Microsoft SMTP Server id 14.3.389.1; Sun, 11 Nov 2018
 23:32:37 -0600
From: Vijendar Mukunda <Vijendar.Mukunda@amd.com>
CC: <vijendar.mukunda@amd.com>, <Alexander.Deucher@amd.com>,
        <Vishnuvardhanrao.Ravulapati@amd.com>,
        Vijendar Mukunda <Vijendar.Mukunda@amd.com>,
        Maruthi Bayyavarapu <maruthi.bayyavarapu@amd.com>,
        Liam Girdwood <lgirdwood@gmail.com>,
        "Mark Brown" <broonie@kernel.org>,
        Jaroslav Kysela <perex@perex.cz>,
        Takashi Iwai <tiwai@suse.com>,
        Sanju R Mehta <sanju.mehta@amd.com>,
        "moderated list:SOUND - SOC LAYER / DYNAMIC AUDIO POWER MANAGEM..." 
        <alsa-devel@alsa-project.org>,
        open list <linux-kernel@vger.kernel.org>
Subject: [PATCH 06/11] ASoC: amd: add acp3x pcm driver dma ops
Date: Mon, 12 Nov 2018 11:04:57 +0530
Message-ID: <1542000903-19020-7-git-send-email-Vijendar.Mukunda@amd.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1542000903-19020-1-git-send-email-Vijendar.Mukunda@amd.com>
References: <1542000903-19020-1-git-send-email-Vijendar.Mukunda@amd.com>
MIME-Version: 1.0
Content-Type: text/plain
X-EOPAttributedMessage: 0
X-MS-Office365-Filtering-HT: Tenant
X-Forefront-Antispam-Report: CIP:165.204.84.17;IPV:NLI;CTRY:US;EFV:NLI;SFV:NSPM;SFS:(10009020)(346002)(376002)(396003)(136003)(39860400002)(2980300002)(428003)(199004)(189003)(81166006)(8676002)(81156014)(8936002)(68736007)(47776003)(50226002)(106466001)(72206003)(39060400002)(305945005)(2906002)(6666004)(104016004)(356004)(36756003)(76176011)(11346002)(5660300001)(478600001)(426003)(1671002)(336012)(186003)(26005)(126002)(53416004)(50466002)(77096007)(14444005)(48376002)(7696005)(51416003)(86362001)(19627235002)(476003)(2616005)(53936002)(105586002)(16586007)(316002)(54906003)(446003)(4326008)(97736004)(109986005)(486006)(42413003)(266003)(32563001);DIR:OUT;SFP:1101;SCL:1;SRVR:CY1PR12MB0618;H:SATLEXCHOV01.amd.com;FPR:;SPF:None;LANG:en;PTR:InfoDomainNonexistent;A:1;MX:1;
X-Microsoft-Exchange-Diagnostics: 1;CO1NAM03FT026;1:uNnbUqtQaYBzPoIEW6J3bmxflO823VTG5WIRdeVCRyL2jTLg5CUnQ09VHk0XtfQ9Bcoui4d5IxkTSGGkQMS8SsTxYve8JqVObnzNZXdyJDCiKfiSPQ+7glyneSu+KaEa
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 0efa729d-1f70-46b3-6b80-08d648604317
X-Microsoft-Antispam: BCL:0;PCL:0;RULEID:(2390040)(7020095)(4652040)(8989299)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(5600074)(711020)(2017052603328)(7153060);SRVR:CY1PR12MB0618;
X-Microsoft-Exchange-Diagnostics: 1;CY1PR12MB0618;3:lr2h+4rVFHdQBUkX6NxA2XSGjnQ/ktHkCZRjLhctoiAmVaZDHZNGD8TmFGUX876IcrjAPr3ffQbkTw8XDmwLL4RLFwcH3mcoNgjTyNCLLlDzEj/eO+nyGLhqqCm2HrQL0L4XiPTxzmMMf1FeHPZNUv/rHTpEo/+SWkov3GaNe86bgHKHy7AJTo33eWbSiA5k+PvCWx1lvVPoE5J8k24G0N8pSvwt1FlEojF8zFJ8vC2bw0J7z92DmIKB5oKv7ycLWwWpg+yimfNDXu38U95JUJzpZrHCSz/AioWHzVxJPCGnnRVngPcde9uvvvSpX6MUiS066AoF9kTOegLJLi9Y5F+M8kjGg62LFtXlqTZXFhc=;25:Syg7H4QyZR8CxVzh7jv27XvvHwYhUEzwTVM1Kn2w7rHNWN82jyHFfRuHkEZxd+jbD6TtAtoHfYqYZ6wIup4C0PNFAVoVzNUbEH3jdXR7bWFGQRWQgxd8ubC1RvLaUny9yd4hHXKAubkcmWZZvM0jVFx3u48u+nscFVDApm64oQFJOpoQtiFxWUAdN2zg9/jutwkKKuZijl+N8Zh+qLpozT9W6ZVuVI6x6H8LfCAF/o0GcrOZ6VFSW+VAU0c5D/DCkrBfFd2vJPHpZy/vgZevvUyRg51Hl2W0TRH9gyGHewm61ZZQ60LDv3YZN8xMKPLnjTvkRg1nolsdviKrJDuRK15wOkUpdCbQk7GwDOk3Lq8=
X-MS-TrafficTypeDiagnostic: CY1PR12MB0618:
X-Microsoft-Exchange-Diagnostics: 1;CY1PR12MB0618;31:GAwdYL6eh/zOR1ZewkJadyTK0mnhHKIgI+lLk838NP2h+Z2i3wuvlTkKQOEvOBkPnO6kxs1jMbvSVlz0eqo/cD1QlqIrR+BfbsISpLDQR4jJ1a1vEsU9gYK3wjAiby1/YbeaaYJw2r4FdV0I0TwH7Ph4xK0rZYGFlCjaTeJkfXR4wyaN1qF3gIzodq2iAd4XsigPMcvD3HAhIg1q7Tx04YwpcYzAsM0yXbpHQUV5eeA=;20:OjTme/FI9Bi6SqCoPUOqxTLBqgNBRhOI+xRoYT72qecPdugzOO7sxGUYX22H5AIJ8x0HYXJNeC9Y02KBVUY2YDj69c6/rc8mYkJpHz9+RdTdcraTZ4MJPF/xBvya2cHhTaCBFDwjusAXT2iA3UhfJO/u9HpLQg8Ln2eNpTJF24uEVq1G5H1A74ect2bcf0W1zUsxd0Zy/ak9NR4NiLVvk9K2dkJSYkVZ46p+DrtnhDQrc6in7dzH5EYJmPv1LDTZeQu136JMq7D24haFwHWem2ryoHB2F/MGQU0zww8wcsP1zwngTHh/Fkhg9cEWjXv+oHUIwtRhvB/SPmPQVY2D/p0JAD5Y7Yl6FDAXwrV0+/TnaxgvVajUU9ZiQWgUmGYWsLcQdvihJ3rQIv+f5ieNYKd7/VS1mocf0XVtaS9OE+drUjAf37ON0quouemxjrrO9ongrGcrRZu2LenXCJMkW59UG93hx3/DEqo5H/Lnz1Rwz9X94yeeJaB+8LSwWiVo
X-Microsoft-Antispam-PRVS: <CY1PR12MB0618C46E9EAB45690A05894097C10@CY1PR12MB0618.namprd12.prod.outlook.com>
X-Exchange-Antispam-Report-Test: UriScan:(767451399110);
X-MS-Exchange-SenderADCheck: 1
X-Exchange-Antispam-Report-CFA-Test: BCL:0;PCL:0;RULEID:(8211001083)(6040522)(2401047)(5005006)(8121501046)(3231402)(944501410)(52105112)(93006095)(93003095)(10201501046)(3002001)(6055026)(148016)(149066)(150057)(6041310)(20161123564045)(20161123562045)(201703131423095)(201702281528075)(20161123555045)(201703061421075)(201703061406153)(20161123560045)(20161123558120)(201708071742011)(7699051)(76991095);SRVR:CY1PR12MB0618;BCL:0;PCL:0;RULEID:;SRVR:CY1PR12MB0618;
X-Microsoft-Exchange-Diagnostics: 1;CY1PR12MB0618;4:a6VmfmOb9/BmntC0c+d+apAwbOxcFJiDAL81H7r0SxLPH0pkkXEGCtK+vDb4BkgIcMNslEQINXHrExsINO/Go0yWTJTNoY69KrOBJ8hXxaZqRutb00zq+c118lM/SCAIp3S6ekwiFFJ2Elf96zu6z0on/6hV+e4sbBj7b5NASTXYj6TqNiK4Oi0ca9oHoS0AXUSIxhqLR4rXjzoCQgiP6G/yZS2QYP377WXqlLAyBzMXN6syM7I7WPPImCI8loHUwqljbuyDJwjXSSDYwcZKwe31FdJeTq0ky3nfKxY5ryawxe0ZRodSc7X2rM+TqBai
X-Forefront-PRVS: 0854128AF0
X-Microsoft-Exchange-Diagnostics: =?us-ascii?Q?1;CY1PR12MB0618;23:807sKDs6OjQVdpfq5UVp9KZCgKMj8e4WhGBPiCkF2?=
 =?us-ascii?Q?kQTo8wmfv2kb3I3w+1scsu4l4Yfb+2V50EpqV748fJIaxyLXlNbY9ZXK9Qii?=
 =?us-ascii?Q?Y8N8jQ29+rRX7HpB5xBE6HR0+cAAmi4eBMQB+YJNduE8ZhTjH8Yi7e4+OocF?=
 =?us-ascii?Q?hF38P6LfBoXOPwUOLbfczA36y3aGFmy8gXSVU1IWLXedVvwwHeSD2ocLKnMi?=
 =?us-ascii?Q?VukW5hqQ7R4gJsn3fcLa3RrCatNEYqM0gGzn23gxRQhvVpwYEOkChn0p5voH?=
 =?us-ascii?Q?+NOFqJ9ZVWHl0ULa/pwfQayQm4WjuVr0MLWECoJo5oziC24dj6yB4nrLQ7g8?=
 =?us-ascii?Q?Wp9SCZvM5seuEwlmfheP8DK2s8I9DKdjruTIGjsW0KNouJOsPRGcXwENkSem?=
 =?us-ascii?Q?/8U99ZI5M5kTi+KfOyiRjxJ5LompL0ag+sK4vigW7wM9iv9V0tebImoHYh8d?=
 =?us-ascii?Q?8f6nxhfO/VxkfwpVzH+NGeGc+6TlSdHPWahIAwC+CnDcT0DeBKk0mZ53ruGF?=
 =?us-ascii?Q?EVkPQimUhp4iWsnO68utGcRu6lt1qlM1lzMb+NGIBAhKVwxV3ysp/u30Mdt4?=
 =?us-ascii?Q?jtoX0mNMc+47Rp08onK5s0gwpbnXA1n/Wk6yc2O941+GP7rygzpEL26uS6wc?=
 =?us-ascii?Q?gsKWo/GrNKxK/lNZujAse//cIuAZ582X4/jI5d6QJmbo2ghWKRKB/D8cPWgk?=
 =?us-ascii?Q?K1AZafaGv5WWRsFmoyQWoYBZEWeC5oyc9pXP9DzrTUzOnlrAMnz1GtWqn1eo?=
 =?us-ascii?Q?HW+4ZO3dGDwves+74pfs1lw3A9f5SkqsuvrZB8/2SNsQq3O2lPIDlSyJsCbJ?=
 =?us-ascii?Q?WH/EWv0l9+RnuEfXIzzwtpe74OLQt6GoBEVtgG6r7AKBK8tw0HD9SHO15o1W?=
 =?us-ascii?Q?MvxUbJv6sRMzyg98gmTL9l10emq+WqguoktagT6L9ie4jrEdKHZ2NUz8Sce/?=
 =?us-ascii?Q?RED4Zb1va2S1FBm1ZRFfY5dNQMmdG4DYqxKC+OOFcOGBikfVCBY1evmOAih0?=
 =?us-ascii?Q?pNM0w8n9xwI96Fsz2zAnbMVHT+1CL/RyPix/KEcs+/JbKJTDhBZ/VXao8yl2?=
 =?us-ascii?Q?iE5fV2Okjwtfj1ZWKywd8N4ExKSejRLKDXqWDbehbkwbusZw3ePbqQBLGb48?=
 =?us-ascii?Q?AFDOybsSQwflvUfrAeB0a/ecJ8ZzJ/hUuLoAaEvM0Tl5r+zv+A94zQ8DYoNu?=
 =?us-ascii?Q?8ymqfKcZYsSSI5C6L9cChG2koPRZvrn5RRg0Ay4OLc5vyyOh7XYVBaAaMtEr?=
 =?us-ascii?Q?eJeqcoITnE49v5ZeoYbRR6krIPA6zGpbMv/wPbjyzQnLwvTGVmHJvrh7YAwN?=
 =?us-ascii?Q?+Vza0oUEaQP62R/70itVi0=3D?=
X-Microsoft-Antispam-Message-Info: uNAVd0A7TnoTKsLoQL2Z9sL94uNGcjV87t2AKK70IgmfT/rBVVj7UpUIcl4nloLuIBovclW6XCC68fT2+2RQD1JabLBntaqfyHrlbBXh9LE85RYJX//iQ1L39MZ3z2Zli1JoqkLyHWH1n1+qk+80Pp6QxrFpEDmOcnEAeRzwxacjFbf5ubBB136ecsZ/8owZcq4ifyhtq4yQ348MvOSoIsUFmw09B44SkPQiY894DDvAhmPS5oUtpZu0NUobdfrGbLp/SUv9LcVBKlXkN0XEU8k2qXuy6Ps7d0He3hRGR1SIZgCDN07J4qLnxuvshX09wJaGO77NK05VempfGqqm40/a3mWRetP3wlm27/1pSIA=
X-Microsoft-Exchange-Diagnostics: 1;CY1PR12MB0618;6:/Y7cTzbMyYOw70pHP8ZeRbGbU5EpgmkhR1m/bT1gc0nxDbXDYGmiB+thi3eCCULHv6emeRYfaY6x8RE9Qozg75Am2jUGxzYoeFTqwxK5P4bOZ1+eK4lP1qh5Q+h0L0VRrRbgBySVeO1JvdEx7gsjtwxwLLsONoUAejdtk80u+27WtTaqdJmr9hdxLedjTDsntXMRtM5MWIwQrSe6otLuXw6XT0moXrdcJWuSSKRhp0CarSD0nx5MX2jPsZLN8tAiniIn9qrEpq5QoJoi/3e2A+gnKEp7bDxUCbdhohhIT2iI2U94FSFa6YsQIitqn1nqQ3Y7J2bQ7+BWu1TQNxersHyjKokx9c50b3OeFmsw7O4LoxilOGh5ZqCwronDquSaJJOtMEKK5H951eFYG0JYOFEeW8FZhXgmX6REOZjdru3Nlnt6ojEbX2wy7qRPWCyNa/rkBRrW3gPiMD8fYt1pPQ==;5:KQ+7yRRAYZT+GXzBIhxQO5mNNU5QIRXF4t/FsS1/Yd5QVIIskhEhkRB+UwLILyqz8hyN+5IrBqsYsfhickRPh77HZtpNXd0+Sp2YXQGpneEB1Zm3gOEzF/T2WRWHLl6oZeQxp8ox6Be4Fe/WeeqHFMn/AytTksxivqSnNhPlfdI=;7:mgsEiDLJL/JG/DanNyrg2xgrcPCwkfuBCR1uSi3cKj/TRCCtMJedqKIKOMMSM2YSqhvOp9EZhKnTRKHA0ZcNx10qVHTg5M6Y3fQRR6sGfZyFi3Y2H3pBQM4NyBcleUWlyGjVfxa4zLhpygE6Kdb5ew==
SpamDiagnosticOutput: 1:99
SpamDiagnosticMetadata: NSPM
X-Microsoft-Exchange-Diagnostics: 1;CY1PR12MB0618;20:ZsY784dDjUmb+nH1olUiveNy7mMdrQU6jTCj+aR/jMxWptAGWFNLcxi7xCjtmOdJphF9MixYF/30/zdn8eBJd7WRGiyT/UWn7tAV4AQNboW77C8nqqwLMwtsA6B3FH9euvklA6qngbIJRrigh1P2j5ak/76DWPISbXZxCUVjg7Wlr8DPzoXXCRF+y8dwtZwl/lEg5P4IZrfko8Kr/fi1Wmsx5mdh95W19DQKgntU2hX4VmIGzTEPRZOtluf5l2Kh
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 12 Nov 2018 05:32:39.4797
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: 0efa729d-1f70-46b3-6b80-08d648604317
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXCHOV01.amd.com]
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: CY1PR12MB0618
To: unlisted-recipients:; (no To-header on input)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwC3kT2sEOlbqOwvAA--.8924S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWfGF4ktr45ZFyUJF13uF4rXwb_yoWDuF45pF
	yrAaySyw4Uta1Iqw13J3ZYvrn3ur4Sy3WUKw47Ww4Ivr1ruF9a93W7JrnY9FyrKrWDurs7
	XF4qq34fur9Iyr7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPFb7Iv0xC_Cr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1j
	6r18McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IYc2Ij64
	vIr41l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkI
	ecxEwVCI4VW8WwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_JFI_Gr1lcI
	IF0xvE2Ix0cI8IcVCY1x0267AKxVWUJVW8JwCYIxAIcVC2z280aVAFwI0_GcCE3s1lcIIF
	0xvEx4A2jsIEc7CjxVAFwI0_GcCE3s1l42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwV
	Aq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG67AKxVWU
	JVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r1q6r43MIIYrxkI7V
	AKI48JMIIF0xvE42xK8VAvwI8IcIk0rVW8JVW3JbIYCTnIWIevJa73UjIFyTuYvjxUqmFA
	DUUUU

ACP3x has a DMA controller to access system memory.
This controller transfers data from/to system memory
to/from the ACP internal FIFO.
The patch adds PCM driver DMA operations.

Signed-off-by: Maruthi Bayyavarapu <maruthi.bayyavarapu@amd.com>
Tested-by: Ravulapati Vishnu vardhan Rao <Vishnuvardhanrao.Ravulapati@amd.com>
Signed-off-by: Vijendar Mukunda <vijendar.mukunda@amd.com>
---
 sound/soc/amd/raven/acp3x-pcm-dma.c | 262 +++++++++++++++++++++++++++++++++++-
 sound/soc/amd/raven/acp3x.h         |  20 +++
 2 files changed, 275 insertions(+), 7 deletions(-)

diff --git a/sound/soc/amd/raven/acp3x-pcm-dma.c b/sound/soc/amd/raven/acp3x-pcm-dma.c
index 94f915a..06c1985 100644
--- a/sound/soc/amd/raven/acp3x-pcm-dma.c
+++ b/sound/soc/amd/raven/acp3x-pcm-dma.c
@@ -33,6 +33,54 @@ struct i2s_dev_data {
 	struct snd_pcm_substream *capture_stream;
 };
 
+struct i2s_stream_instance {
+	u16 num_pages;
+	u16 channels;
+	u32 xfer_resolution;
+	struct page *pg;
+	void __iomem *acp3x_base;
+};
+
+static const struct snd_pcm_hardware acp3x_pcm_hardware_playback = {
+	.info = SNDRV_PCM_INFO_INTERLEAVED |
+		SNDRV_PCM_INFO_BLOCK_TRANSFER |
+		SNDRV_PCM_INFO_BATCH |
+		SNDRV_PCM_INFO_PAUSE | SNDRV_PCM_INFO_RESUME,
+	.formats = SNDRV_PCM_FMTBIT_S16_LE |  SNDRV_PCM_FMTBIT_S8 |
+		   SNDRV_PCM_FMTBIT_U8 | SNDRV_PCM_FMTBIT_S24_LE |
+		   SNDRV_PCM_FMTBIT_S32_LE,
+	.channels_min = 2,
+	.channels_max = 8,
+	.rates = SNDRV_PCM_RATE_8000_96000,
+	.rate_min = 8000,
+	.rate_max = 96000,
+	.buffer_bytes_max = PLAYBACK_MAX_NUM_PERIODS * PLAYBACK_MAX_PERIOD_SIZE,
+	.period_bytes_min = PLAYBACK_MIN_PERIOD_SIZE,
+	.period_bytes_max = PLAYBACK_MAX_PERIOD_SIZE,
+	.periods_min = PLAYBACK_MIN_NUM_PERIODS,
+	.periods_max = PLAYBACK_MAX_NUM_PERIODS,
+};
+
+static const struct snd_pcm_hardware acp3x_pcm_hardware_capture = {
+	.info = SNDRV_PCM_INFO_INTERLEAVED |
+		SNDRV_PCM_INFO_BLOCK_TRANSFER |
+		SNDRV_PCM_INFO_BATCH |
+	    SNDRV_PCM_INFO_PAUSE | SNDRV_PCM_INFO_RESUME,
+	.formats = SNDRV_PCM_FMTBIT_S16_LE | SNDRV_PCM_FMTBIT_S8 |
+		   SNDRV_PCM_FMTBIT_U8 | SNDRV_PCM_FMTBIT_S24_LE |
+		   SNDRV_PCM_FMTBIT_S32_LE,
+	.channels_min = 2,
+	.channels_max = 2,
+	.rates = SNDRV_PCM_RATE_8000_48000,
+	.rate_min = 8000,
+	.rate_max = 48000,
+	.buffer_bytes_max = CAPTURE_MAX_NUM_PERIODS * CAPTURE_MAX_PERIOD_SIZE,
+	.period_bytes_min = CAPTURE_MIN_PERIOD_SIZE,
+	.period_bytes_max = CAPTURE_MAX_PERIOD_SIZE,
+	.periods_min = CAPTURE_MIN_NUM_PERIODS,
+	.periods_max = CAPTURE_MAX_NUM_PERIODS,
+};
+
 static int acp3x_power_on(void __iomem *acp3x_base, bool on)
 {
 	u16 val, mask;
@@ -165,14 +213,214 @@ static irqreturn_t i2s_irq_handler(int irq, void *dev_id)
 		return IRQ_NONE;
 }
 
+static void config_acp3x_dma(struct i2s_stream_instance *rtd, int direction)
+{
+	u16 page_idx;
+	u64 addr;
+	u32 low, high, val, acp_fifo_addr;
+	struct page *pg = rtd->pg;
+
+	/* 8 scratch registers used to map one 64 bit address */
+	if (direction == SNDRV_PCM_STREAM_PLAYBACK)
+		val = 0;
+	else
+		val = rtd->num_pages * 8;
+
+	/* Group Enable */
+	rv_writel(ACP_SRAM_PTE_OFFSET | BIT(31), rtd->acp3x_base +
+		  mmACPAXI2AXI_ATU_BASE_ADDR_GRP_1);
+	rv_writel(PAGE_SIZE_4K_ENABLE, rtd->acp3x_base +
+		  mmACPAXI2AXI_ATU_PAGE_SIZE_GRP_1);
+
+	for (page_idx = 0; page_idx < rtd->num_pages; page_idx++) {
+		/* Load the low address of page int ACP SRAM through SRBM */
+		addr = page_to_phys(pg);
+		low = lower_32_bits(addr);
+		high = upper_32_bits(addr);
+
+		rv_writel(low, rtd->acp3x_base + mmACP_SCRATCH_REG_0 + val);
+		high |= BIT(31);
+		rv_writel(high, rtd->acp3x_base + mmACP_SCRATCH_REG_0 + val
+				+ 4);
+		/* Move to next physically contiguos page */
+		val += 8;
+		pg++;
+	}
+
+	if (direction == SNDRV_PCM_STREAM_PLAYBACK) {
+		/* Config ringbuffer */
+		rv_writel(MEM_WINDOW_START, rtd->acp3x_base +
+			  mmACP_BT_TX_RINGBUFADDR);
+		rv_writel(MAX_BUFFER, rtd->acp3x_base +
+			  mmACP_BT_TX_RINGBUFSIZE);
+		rv_writel(DMA_SIZE, rtd->acp3x_base + mmACP_BT_TX_DMA_SIZE);
+
+		/* Config audio fifo */
+		acp_fifo_addr = ACP_SRAM_PTE_OFFSET + (rtd->num_pages * 8)
+				+ PLAYBACK_FIFO_ADDR_OFFSET;
+		rv_writel(acp_fifo_addr, rtd->acp3x_base +
+			  mmACP_BT_TX_FIFOADDR);
+		rv_writel(FIFO_SIZE, rtd->acp3x_base + mmACP_BT_TX_FIFOSIZE);
+	} else {
+		/* Config ringbuffer */
+		rv_writel(MEM_WINDOW_START + MAX_BUFFER, rtd->acp3x_base +
+			  mmACP_BT_RX_RINGBUFADDR);
+		rv_writel(MAX_BUFFER, rtd->acp3x_base +
+			  mmACP_BT_RX_RINGBUFSIZE);
+		rv_writel(DMA_SIZE, rtd->acp3x_base + mmACP_BT_RX_DMA_SIZE);
+
+		/* Config audio fifo */
+		acp_fifo_addr = ACP_SRAM_PTE_OFFSET +
+				(rtd->num_pages * 8) + CAPTURE_FIFO_ADDR_OFFSET;
+		rv_writel(acp_fifo_addr, rtd->acp3x_base +
+			  mmACP_BT_RX_FIFOADDR);
+		rv_writel(FIFO_SIZE, rtd->acp3x_base + mmACP_BT_RX_FIFOSIZE);
+	}
+
+	/* Enable  watermark/period interrupt to host */
+	rv_writel(BIT(BT_TX_THRESHOLD) | BIT(BT_RX_THRESHOLD),
+		  rtd->acp3x_base + mmACP_EXTERNAL_INTR_CNTL);
+}
+
+static int acp3x_dma_open(struct snd_pcm_substream *substream)
+{
+	int ret = 0;
+
+	struct snd_pcm_runtime *runtime = substream->runtime;
+	struct snd_soc_pcm_runtime *prtd = substream->private_data;
+	struct snd_soc_component *component = snd_soc_rtdcom_lookup(prtd,
+								    DRV_NAME);
+	struct i2s_dev_data *adata = dev_get_drvdata(component->dev);
+
+	struct i2s_stream_instance *i2s_data = kzalloc(sizeof(struct i2s_stream_instance),
+						       GFP_KERNEL);
+	if (!i2s_data)
+		return -EINVAL;
+
+	if (substream->stream == SNDRV_PCM_STREAM_PLAYBACK)
+		runtime->hw = acp3x_pcm_hardware_playback;
+	else
+		runtime->hw = acp3x_pcm_hardware_capture;
+
+	ret = snd_pcm_hw_constraint_integer(runtime,
+					    SNDRV_PCM_HW_PARAM_PERIODS);
+	if (ret < 0) {
+		dev_err(component->dev, "set integer constraint failed\n");
+		return ret;
+	}
+
+	if (!adata->play_stream && !adata->capture_stream)
+		rv_writel(1, adata->acp3x_base + mmACP_EXTERNAL_INTR_ENB);
+
+	if (substream->stream == SNDRV_PCM_STREAM_PLAYBACK)
+		adata->play_stream = substream;
+	else
+		adata->capture_stream = substream;
+
+	i2s_data->acp3x_base = adata->acp3x_base;
+	runtime->private_data = i2s_data;
+	return 0;
+}
+
+static int acp3x_dma_hw_params(struct snd_pcm_substream *substream,
+			       struct snd_pcm_hw_params *params)
+{
+	int status;
+	u64 size;
+	struct snd_dma_buffer *dma_buffer;
+	struct page *pg;
+	struct snd_pcm_runtime *runtime = substream->runtime;
+	struct i2s_stream_instance *rtd = runtime->private_data;
+
+	if (!rtd)
+		return -EINVAL;
+
+	dma_buffer = &substream->dma_buffer;
+	size = params_buffer_bytes(params);
+	status = snd_pcm_lib_malloc_pages(substream, size);
+	if (status < 0)
+		return status;
+
+	memset(substream->runtime->dma_area, 0, params_buffer_bytes(params));
+	pg = virt_to_page(substream->dma_buffer.area);
+	if (pg) {
+		rtd->pg = pg;
+		rtd->num_pages = (PAGE_ALIGN(size) >> PAGE_SHIFT);
+		config_acp3x_dma(rtd, substream->stream);
+		status = 0;
+	} else {
+		status = -ENOMEM;
+	}
+	return status;
+}
+
+static snd_pcm_uframes_t acp3x_dma_pointer(struct snd_pcm_substream *substream)
+{
+	u32 pos = 0;
+	struct i2s_stream_instance *rtd = substream->runtime->private_data;
+
+	if (substream->stream == SNDRV_PCM_STREAM_PLAYBACK)
+		pos = rv_readl(rtd->acp3x_base +
+			       mmACP_BT_TX_LINKPOSITIONCNTR);
+	else
+		pos = rv_readl(rtd->acp3x_base +
+			       mmACP_BT_RX_LINKPOSITIONCNTR);
+
+	if (pos >= MAX_BUFFER)
+		pos = 0;
+
+	return bytes_to_frames(substream->runtime, pos);
+}
+
+static int acp3x_dma_new(struct snd_soc_pcm_runtime *rtd)
+{
+	return snd_pcm_lib_preallocate_pages_for_all(rtd->pcm,
+						     SNDRV_DMA_TYPE_DEV,
+						     NULL, MIN_BUFFER,
+						     MAX_BUFFER);
+}
+
+static int acp3x_dma_hw_free(struct snd_pcm_substream *substream)
+{
+	return snd_pcm_lib_free_pages(substream);
+}
+
+static int acp3x_dma_mmap(struct snd_pcm_substream *substream,
+			  struct vm_area_struct *vma)
+{
+	return snd_pcm_lib_default_mmap(substream, vma);
+}
+
+static int acp3x_dma_close(struct snd_pcm_substream *substream)
+{
+	struct snd_soc_pcm_runtime *prtd = substream->private_data;
+	struct i2s_stream_instance *rtd = substream->runtime->private_data;
+	struct snd_soc_component *component = snd_soc_rtdcom_lookup(prtd,
+								    DRV_NAME);
+	struct i2s_dev_data *adata = dev_get_drvdata(component->dev);
+
+	if (substream->stream == SNDRV_PCM_STREAM_PLAYBACK)
+		adata->play_stream = NULL;
+	else
+		adata->capture_stream = NULL;
+
+	/* Disable ACP irq, when the current stream is being closed and
+	 * another stream is also not active.
+	 */
+	if (!adata->play_stream && !adata->capture_stream)
+		rv_writel(0, adata->acp3x_base + mmACP_EXTERNAL_INTR_ENB);
+	kfree(rtd);
+	return 0;
+}
+
 static struct snd_pcm_ops acp3x_dma_ops = {
-	.open = NULL,
-	.close = NULL,
-	.ioctl = NULL,
-	.hw_params = NULL,
-	.hw_free = NULL,
-	.pointer = NULL,
-	.mmap = NULL,
+	.open = acp3x_dma_open,
+	.close = acp3x_dma_close,
+	.ioctl = snd_pcm_lib_ioctl,
+	.hw_params = acp3x_dma_hw_params,
+	.hw_free = acp3x_dma_hw_free,
+	.pointer = acp3x_dma_pointer,
+	.mmap = acp3x_dma_mmap,
 };
 
 struct snd_soc_dai_ops acp3x_dai_i2s_ops = {
diff --git a/sound/soc/amd/raven/acp3x.h b/sound/soc/amd/raven/acp3x.h
index f3d3e51..9f33e34 100644
--- a/sound/soc/amd/raven/acp3x.h
+++ b/sound/soc/amd/raven/acp3x.h
@@ -13,6 +13,26 @@
 #define ACP3x_POWER_OFF_IN_PROGRESS 0x03
 #define ACP3x_SOFT_RESET__SoftResetAudDone_MASK	0x00010001
 
+#define ACP_SRAM_PTE_OFFSET	0x02050000
+#define PAGE_SIZE_4K_ENABLE 0x2
+#define MEM_WINDOW_START	0x4000000
+#define PLAYBACK_FIFO_ADDR_OFFSET 0x400
+#define CAPTURE_FIFO_ADDR_OFFSET  0x500
+
+#define PLAYBACK_MIN_NUM_PERIODS    2
+#define PLAYBACK_MAX_NUM_PERIODS    8
+#define PLAYBACK_MAX_PERIOD_SIZE    16384
+#define PLAYBACK_MIN_PERIOD_SIZE    4096
+#define CAPTURE_MIN_NUM_PERIODS     2
+#define CAPTURE_MAX_NUM_PERIODS     8
+#define CAPTURE_MAX_PERIOD_SIZE     16384
+#define CAPTURE_MIN_PERIOD_SIZE     4096
+
+#define MAX_BUFFER (PLAYBACK_MAX_PERIOD_SIZE * PLAYBACK_MAX_NUM_PERIODS)
+#define MIN_BUFFER MAX_BUFFER
+#define FIFO_SIZE 0x100
+#define DMA_SIZE 0x40
+
 static inline u32 rv_readl(void __iomem *base_addr)
 {
 	return readl(base_addr - ACP3x_PHY_BASE_ADDRESS);
-- 
2.7.4
