Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 13 Nov 2018 04:47:34 -0000
Received: from icoremail.net (unknown [209.85.215.173])
	by mail-app2 (Coremail) with SMTP id by_KCgCn35iyTepbxsuCAQ--.39181S3;
	Tue, 13 Nov 2018 12:06:11 +0800 (CST)
Received: from mail-pg1-f173.google.com (unknown [209.85.215.173])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAX_kmwTepbZcE1AA--.2112S3;
	Tue, 13 Nov 2018 12:06:09 +0800 (CST)
Received: by mail-pg1-f173.google.com with SMTP id w7so5031046pgp.13
        for <xuliker@zju.edu.cn>; Mon, 12 Nov 2018 20:06:08 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:sender:precedence:list-id;
        bh=IK0SMtQ6pAQ5BAOZn+Of2SgosK/BHVs2f1JLH11wods=;
        b=Jeri3vJGMNz1kkjg1steam46MdFsXNbWsDGa+pqszSObrBHsvHDZLYfNkCBc5ev1+h
         SFjuxVtbE4/5a8OIIIXkjZz9neEe95B7Y2jFlUqGk+JKDfBnZY1cdRl1I86t43bWBoUN
         GP5cVcwFqV3NB/Jup2TWKdqaaXpc6bDW/pswIGRdJffstZqfn+8NTlsvjFM508XxgldH
         HdGCEqc0m312LxEx8tp/aUe+str8vJPwao50pwkQ8SSoRmm2Mc3ISAhjy20YXuwIvSYv
         ryZKQgVg5rQzrVLpb+iAslCzfV5mOVgoGMWEAG81DSJPOoeSjmYj0HV/zbDbkDlhjhsB
         fq6g==
X-Gm-Message-State: AGRZ1gIaJUijdeSQ4F/RF4bupfS43M8aG6SFm8X7HHYrwQc7Gm1+KpTe
	2zf5KkSA202WqsXKHHbVfoQkApEs6tHxELQqv/wDDnnCZvyt9CAgow==
X-Received: by 2002:a65:66ce:: with SMTP id c14mr3266548pgw.450.1542081968588;
        Mon, 12 Nov 2018 20:06:08 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp3999000pjt;
        Mon, 12 Nov 2018 20:06:07 -0800 (PST)
X-Google-Smtp-Source: AJdET5fbTru1TRbHCSAI1zhVAKU7A2NgOrOuRzQ0R9yqruKdJbj0xdVUj/HyaSm1QET05WNbv49r
X-Received: by 2002:a17:902:2867:: with SMTP id e94-v6mr3494080plb.317.1542081967166;
        Mon, 12 Nov 2018 20:06:07 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542081967; cv=none;
        d=google.com; s=arc-20160816;
        b=bWBERsOA8v9C50yjF/gtE04D7XFK0SF9iYVkX43mS5f2WQgfIgMRL7SGre1e5hnZcG
         f4Zet1ITPKJC4O4ywl7AG65Qr+vEh8YZbLzCRH9AQZb9Ie5UoVDOuhsW9bfExH+myizK
         AgTQtJVpmXHqzOXHwiqWr0yYCdvu5pmRO7N7bB0eR79NLXmEWAZI9aAAJqtgqS3QGlF0
         HbxpGwg5XLRumoEXZ08t/siMwpUZYUS+Md3FR0WXVQ6IhSZuu9uKBZ4V/0w+D6vyJxf8
         LLMQCA5pnNiYM8HjLA03pPMN/bS1Sdxrtiu0rwdJVvRdnNASJRhfQ0hgP67SR+yzBCzH
         gx1Q==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:references:in-reply-to:message-id:date
         :subject:cc:to:from:dkim-signature;
        bh=IK0SMtQ6pAQ5BAOZn+Of2SgosK/BHVs2f1JLH11wods=;
        b=KyOlgOLfEOulaI5yc89uRcjrohiBOVe3nM6aofCBSL/bNZ1x/JIDo+hSRUnuhJv2mE
         ynZAgZKorAvRvGxQR9WYaqBDPzVihziN/bIWQF/SsaLiNA6+8jAwSeF5c8N7PljiuZvV
         muoX0++ga2eJX2TdLi3lqLctd/slcfw4eJ0Syp1lUQbjDcJOHjBDk3bzC3H6qflAwqAG
         WQhMqr2cRB8gytUqZTM+fHE5gzUKUvFfdtLxX3pYmhG5abq29lC4VRNbWHj0Qv6EeVGm
         /ptNxXFF3Vi1S7HfAHk9On4rCdbaQRIZrCifcjE4cD/PrZBaaC9k98vqFkOaOLft/Rko
         bm0Q==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=fail header.i=@aussec.com header.s=2016 header.b=pOyIADKL;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=aussec.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id n1si18038275pgq.36.2018.11.12.20.05.52;
        Mon, 12 Nov 2018 20:06:07 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730766AbeKMOBu (ORCPT <rfc822;hebingyangg@gmail.com>
        + 99 others); Tue, 13 Nov 2018 09:01:50 -0500
Received: from csm1.csm-office.com.au ([165.228.118.109]:40420 "EHLO
        sleepy.aussec.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726103AbeKMOBt (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 13 Nov 2018 09:01:49 -0500
X-Greylist: delayed 1347 seconds by postgrey-1.27 at vger.kernel.org; Tue, 13 Nov 2018 09:01:47 EST
X-Virus-Scanned: amavisd-new at aussec.com
Received: from localhost.localdomain (dhcp-3-227.csm-office.com.au [172.16.3.227])
        (authenticated bits=0)
        by sleepy.aussec.com (8.15.2/8.15.2) with ESMTPSA id wAD3gTrk014074
        (version=TLSv1.2 cipher=DHE-RSA-AES128-SHA bits=128 verify=NO);
        Tue, 13 Nov 2018 14:43:28 +1100
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple; d=aussec.com; s=2016;
        t=1542080608; bh=VZ7PKCvCJplXiWW0zYPvltiJJ7HfFPUf0hJPdpUtBmY=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References;
        b=pOyIADKLWaMy+0rErp+Enltiz5ypxkGCiikm72rGmEKVRGMDXj2uKoUnpxsQac0oC
         sHL0VE+f3m06TOPEOnO5sD5MRQDFB3Opnnt2idnn1qyAgi+7Auf6ZoLHz0DSb1DRPO
         iNgMB8ozPqPEJxBxcX/Tzkcg+zkOSFzmVtn4dH5eGG4w+vuFR2WJJXjx7CE6coo3h+
         /G2lPwdFMQAD1jJK/ijSYcoK3j/L0DGdU/UZXR8WaRymhbQFp0K6ikGpXMIrHixurs
         UOUTIy85DSeoQD7T+SYCZxKu0FRVp8A/iBBZFKE+wC3PFRCH20pnsil9teMqFNerr5
         JVXuFubeBv8Fg==
From: Tom Burkart <tom@aussec.com>
To: Linux kernel mailing list <linux-kernel@vger.kernel.org>
Cc: Tom Burkart <tom@aussec.com>, Lukas Senger <lukas@fridolin.com>
Subject: [PATCH v6 4/4] pps: pps-gpio pps-echo implementation
Date: Tue, 13 Nov 2018 14:40:07 +1100
Message-Id: <20181113034007.3878-5-tom@aussec.com>
X-Mailer: git-send-email 2.12.3
In-Reply-To: <20181113034007.3878-4-tom@aussec.com>
References: <20181113034007.3878-1-tom@aussec.com>
 <20181113034007.3878-2-tom@aussec.com>
 <20181113034007.3878-3-tom@aussec.com>
 <20181113034007.3878-4-tom@aussec.com>
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAX_kmwTepbZcE1AA--.2112S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3JFyrKFW8Jw4rGr4DZw17GFg_yoWxKw1xpF
	W8CF45tr4jgF4xGw4rXrs8Z3WYgrn2va4Iya9rG340yr1ag3sYqa1qyFy0vFWYyrWDGr17
	X34FqFWY9FsrurJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUP2b7Iv0xC_Zr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvY0x0EwI
	xGrwCjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xS
	Y4AK6IIF6r45MxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWUCVW8JwCYIx
	AIcVC0I7IYx2IY6xkF7I0E14v26r1j6r4UMxvI42IY6I8E87Iv67AKxVWxJr0_GcWlcIIF
	0xvEx4A2jsIEc7CjxVAFwI0_Cr1j6rxdMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI0EY4
	vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAFwI0_
	Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUAVWUtwCIc40Y0x
	0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Jr0_JF7vcSsGvfC2KfnxnUUI43ZEXa7IU5dg
	A5UUUUU==

This patch implements the pps echo functionality for pps-gpio, that
sysfs claims is available already.

Configuration is done via device tree bindings.

This patch was originally written by Lukas Senger as part of a masters
thesis project and modified for inclusion into the linux kernel by Tom
Burkart.

Signed-off-by: Lukas Senger <lukas@fridolin.com>
Signed-off-by: Tom Burkart <tom@aussec.com>
---
 drivers/pps/clients/pps-gpio.c | 104 +++++++++++++++++++++++++++++++++++++++--
 include/linux/pps-gpio.h       |   3 ++
 2 files changed, 103 insertions(+), 4 deletions(-)

diff --git a/drivers/pps/clients/pps-gpio.c b/drivers/pps/clients/pps-gpio.c
index d25710883794..f5ffa2dc67b5 100644
--- a/drivers/pps/clients/pps-gpio.c
+++ b/drivers/pps/clients/pps-gpio.c
@@ -35,6 +35,8 @@
 #include <linux/list.h>
 #include <linux/of_device.h>
 #include <linux/of_gpio.h>
+#include <linux/timer.h>
+#include <linux/jiffies.h>
 
 /* Info for each registered platform device */
 struct pps_gpio_device_data {
@@ -42,8 +44,14 @@ struct pps_gpio_device_data {
 	struct pps_device *pps;		/* PPS source device */
 	struct pps_source_info info;	/* PPS source information */
 	struct gpio_desc *gpio_pin;	/* GPIO port descriptors */
+	struct gpio_desc *echo_pin;
+	struct timer_list echo_timer;	/* timer to reset echo active state */
 	bool assert_falling_edge;
 	bool capture_clear;
+	bool enable_pps_echo;
+	bool invert_pps_echo;
+	unsigned int echo_active_ms;	/* PPS echo active duration */
+	unsigned long echo_timeout;	/* timer timeout value in jiffies */
 };
 
 /*
@@ -64,15 +72,54 @@ static irqreturn_t pps_gpio_irq_handler(int irq, void *data)
 	rising_edge = gpiod_get_value(info->gpio_pin);
 	if ((rising_edge && !info->assert_falling_edge) ||
 			(!rising_edge && info->assert_falling_edge))
-		pps_event(info->pps, &ts, PPS_CAPTUREASSERT, NULL);
+		pps_event(info->pps, &ts, PPS_CAPTUREASSERT, data);
 	else if (info->capture_clear &&
 			((rising_edge && info->assert_falling_edge) ||
-			 (!rising_edge && !info->assert_falling_edge)))
-		pps_event(info->pps, &ts, PPS_CAPTURECLEAR, NULL);
+			(!rising_edge && !info->assert_falling_edge)))
+		pps_event(info->pps, &ts, PPS_CAPTURECLEAR, data);
 
 	return IRQ_HANDLED;
 }
 
+static void pps_gpio_echo(struct pps_device *pps, int event, void *data)
+{
+	/* add_timer() needs to write into info->echo_timer */
+	struct pps_gpio_device_data *info;
+
+	info = data;
+
+	switch (event) {
+	case PPS_CAPTUREASSERT:
+		if (pps->params.mode & PPS_ECHOASSERT)
+			gpiod_set_value(info->echo_pin,
+				info->invert_pps_echo ? 0 : 1);
+		break;
+
+	case PPS_CAPTURECLEAR:
+		if (pps->params.mode & PPS_ECHOCLEAR)
+			gpiod_set_value(info->echo_pin,
+				info->invert_pps_echo ? 0 : 1);
+		break;
+	}
+
+	/* fire the timer */
+	if (info->pps->params.mode & (PPS_ECHOASSERT | PPS_ECHOCLEAR)) {
+		info->echo_timer.expires = jiffies + info->echo_timeout;
+		add_timer(&info->echo_timer);
+	}
+}
+
+/* Timer callback to reset the echo pin to the inactive state */
+static void pps_gpio_echo_timer_callback(struct timer_list *t)
+{
+	const struct pps_gpio_device_data *info;
+
+	info = from_timer(info, t, echo_timer);
+
+	gpiod_set_value(info->echo_pin,
+		info->invert_pps_echo ? 1 : 0);
+}
+
 static unsigned long
 get_irqf_trigger_flags(const struct pps_gpio_device_data *data)
 {
@@ -95,6 +142,7 @@ static int pps_gpio_probe(struct platform_device *pdev)
 	int pps_default_params;
 	const struct pps_gpio_platform_data *pdata = pdev->dev.platform_data;
 	struct device_node *np = pdev->dev.of_node;
+	u32 value;
 
 	/* allocate space for device info */
 	data = devm_kzalloc(&pdev->dev, sizeof(struct pps_gpio_device_data),
@@ -104,10 +152,15 @@ static int pps_gpio_probe(struct platform_device *pdev)
 
 	if (pdata) {
 		data->gpio_pin = pdata->gpio_pin;
+		data->echo_pin = pdata->echo_pin;
+		if (pdata->echo_pin != NULL)
+			data->enable_pps_echo = true;
 		gpio_label = pdata->gpio_label;
 
 		data->assert_falling_edge = pdata->assert_falling_edge;
 		data->capture_clear = pdata->capture_clear;
+		data->invert_pps_echo = pdata->invert_pps_echo;
+		data->echo_active_ms = pdata->echo_active_ms;
 	} else {
 		/* GPIO setup */
 		data->gpio_pin = devm_gpiod_get(&pdev->dev, "pps", GPIOD_IN);
@@ -117,11 +170,44 @@ static int pps_gpio_probe(struct platform_device *pdev)
 		}
 		gpio_label = PPS_GPIO_NAME;
 
+		if (of_get_property(np, "echo-gpios", NULL)) {
+			data->enable_pps_echo = true;
+
+			data->echo_pin = devm_gpiod_get(&pdev->dev,
+				"echo",
+				GPIOD_OUT_LOW);
+			if (IS_ERR(data->echo_pin)) {
+				dev_err(&pdev->dev, "failed to request ECHO GPIO\n");
+				return PTR_ERR(data->echo_pin);
+			}
+
+			ret = of_property_read_u32(np,
+				"echo-active-ms",
+				&value);
+			if (ret) {
+				dev_err(&pdev->dev,
+					"failed to get echo-active-ms from OF\n");
+				return ret;
+			}
+			data->echo_active_ms = value;
+		}
+
 		if (of_get_property(np, "assert-falling-edge", NULL))
 			data->assert_falling_edge = true;
 
 		if (of_get_property(np, "capture-clear", NULL))
 			data->capture_clear = true;
+
+		if (of_get_property(np, "invert-pps-echo", NULL))
+			data->invert_pps_echo = true;
+	}
+	/* sanity check on echo_active_ms */
+	if (data->enable_pps_echo
+			&& (!data->echo_active_ms || data->echo_active_ms > 999)) {
+		dev_err(&pdev->dev,
+			"echo-active-ms: %u - bad value from OF\n",
+			data->echo_active_ms);
+		return -EINVAL;
 	}
 
 	/* IRQ setup */
@@ -141,6 +227,11 @@ static int pps_gpio_probe(struct platform_device *pdev)
 	data->info.owner = THIS_MODULE;
 	snprintf(data->info.name, PPS_MAX_NAME_LEN - 1, "%s.%d",
 		 pdev->name, pdev->id);
+	if (data->enable_pps_echo) {
+		data->info.echo = pps_gpio_echo;
+		data->echo_timeout = msecs_to_jiffies(data->echo_active_ms);
+		timer_setup(&data->echo_timer, pps_gpio_echo_timer_callback, 0);
+	}
 
 	/* register PPS source */
 	pps_default_params = PPS_CAPTUREASSERT | PPS_OFFSETASSERT;
@@ -174,6 +265,11 @@ static int pps_gpio_remove(struct platform_device *pdev)
 	struct pps_gpio_device_data *data = platform_get_drvdata(pdev);
 
 	pps_unregister_source(data->pps);
+	if (data->enable_pps_echo) {
+		del_timer_sync(&data->echo_timer);
+		/* reset echo pin in any case */
+		gpiod_set_value(data->echo_pin, data->invert_pps_echo ? 1 : 0);
+	}
 	dev_info(&pdev->dev, "removed IRQ %d as PPS source\n", data->irq);
 	return 0;
 }
@@ -198,4 +294,4 @@ MODULE_AUTHOR("Ricardo Martins <rasm@fe.up.pt>");
 MODULE_AUTHOR("James Nuss <jamesnuss@nanometrics.ca>");
 MODULE_DESCRIPTION("Use GPIO pin as PPS source");
 MODULE_LICENSE("GPL");
-MODULE_VERSION("1.0.0");
+MODULE_VERSION("1.1.0");
diff --git a/include/linux/pps-gpio.h b/include/linux/pps-gpio.h
index 671a029fc80b..81c13d32ad0d 100644
--- a/include/linux/pps-gpio.h
+++ b/include/linux/pps-gpio.h
@@ -24,8 +24,11 @@
 
 struct pps_gpio_platform_data {
 	struct gpio_desc *gpio_pin;
+	struct gpio_desc *echo_pin;
 	bool assert_falling_edge;
 	bool capture_clear;
+	bool invert_pps_echo;
+	unsigned int echo_active_ms;
 	const char *gpio_label;
 };
 
-- 
2.12.3
