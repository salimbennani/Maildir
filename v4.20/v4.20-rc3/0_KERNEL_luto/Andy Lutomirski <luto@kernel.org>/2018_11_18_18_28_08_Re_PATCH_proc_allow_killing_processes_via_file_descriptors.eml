Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 19 Nov 2018 00:47:27 -0000
Received: from icoremail.net (unknown [209.85.215.180])
	by mail-app2 (Coremail) with SMTP id by_KCgC3f9Fir_FbrLKyAQ--.52743S3;
	Mon, 19 Nov 2018 02:28:51 +0800 (CST)
Received: from mail-pg1-f180.google.com (unknown [209.85.215.180])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwC3nEhfr_FbmJJSAA--.1102S3;
	Mon, 19 Nov 2018 02:28:47 +0800 (CST)
Received: by mail-pg1-f180.google.com with SMTP id y4so12774605pgc.12
        for <xuliker@zju.edu.cn>; Sun, 18 Nov 2018 10:28:47 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:mime-version
         :references:in-reply-to:from:date:message-id:subject:to:cc:sender
         :precedence:list-id;
        bh=jOrs6F0bZR9Gz6Z6NiQrkp4BgTmOo7KQYRhRHQRVjjw=;
        b=gkPdScPpo47ERKHa7Gv2OCeZZTAraBukgPcn8EaVjlo900SP/CbpaFVehJbxgfDTFu
         oiShaP7JjB8XwafLKK1yauuty8MA08MUVQe+65yU2GRZupRmsaj3EZms3CQ/XTIWD/KL
         ToBkTJ5CcGYLvARxsT28TDqgOrY5UEDfC5puF8rCRZpi+Mdi6TStkGmX1CS1OgSMB7tK
         mnOjEqXSwgeYwz+PzvAsQKrLnhIqr9urv9ztwt0Q7r88+OBMDaVjtX0626IC4SgpCuc6
         caFW8SvMTrpy6Oo2xTNJF2JIRlgr3rTSzs4iZwfKX4fir9AYzpo0Kaw+JqRy5uvr92Wq
         zJFQ==
X-Gm-Message-State: AGRZ1gKULzt2lUlRYsu9ZWDkXdajKFHHhDvf4Am+soQ2jRhl6/3oKcwQ
	EfjVrcZW8+OxTz7VVxvORXE5OaM+ceoYLZntFAU35yrzvpAOvKw=
X-Received: by 2002:aa7:87ce:: with SMTP id i14mr12066781pfo.20.1542565726857;
        Sun, 18 Nov 2018 10:28:46 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp1785501pju;
        Sun, 18 Nov 2018 10:28:45 -0800 (PST)
X-Google-Smtp-Source: AJdET5fnw3byDoljmre+iqNsfmlZ0PIxWyJEpEfZD4xtfld1kBUcX9bJ7xOdbGbL++zkDGj01q0N
X-Received: by 2002:a63:d34a:: with SMTP id u10mr17661521pgi.301.1542565725839;
        Sun, 18 Nov 2018 10:28:45 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542565725; cv=none;
        d=google.com; s=arc-20160816;
        b=DgKTLYwDBKtc0Vxn1oLMsUzL9jgajUSwNp+ypPm+97V6g7GAJSJyRif0ZDUAGm6hA9
         os8PBy+UF4dHlI0l/CF2g3grRC2pH8VUBREsP8OzYMrDnvZx1pZAYQ0G9xqdTVtDmXnC
         NkM4fAJqrtHCQPRKkgHCwhKbOfVwnf4c3fOfwWfxxAFWbeT5tlOeBNtNm8wNp/j5AwPP
         HhZWUvKKwYDCiiIGdceEaBqAZYqSz+Gy02Yk4g7xrz+OgyJqdvgwr0iRrkcG20oSM5hh
         BUwq0HBqNcObM+uctJFTz2zYM9fGUCEQTUc58Ma8b0EfaTp3IQ2NA5Q3Jvt3Lzkaqwbl
         HcZg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:cc:to:subject:message-id:date:from
         :in-reply-to:references:mime-version:dkim-signature;
        bh=jOrs6F0bZR9Gz6Z6NiQrkp4BgTmOo7KQYRhRHQRVjjw=;
        b=q4AHOPxpws6Z5ZP3liKsTnUU9z4IdML5eKm6pIv5dONQQOHgltBn7mMMCZxqmK1let
         s2Kl65MVBgFNPFA5DIPrtY7NpR8Y0NMmH0lTLRcivbifiwc/JcmWuoibGTVO+DmQIMJc
         lpFCwPmdGyoHCon/yQLhjHOwsukaO87YQefja5VG5Sdy0k8vUNNFmkCnmEZNFgZBFx47
         YVmplMMDrK3S+aaCf0AuCUxQZ+NV7olDJU3AoQbc9hv03Jj5xhuSQy9+wBmzBgIfAHHN
         i2Jj1w4P5RKgesjsgfHCFOOCEsCyP9KW/X/MTAZqu9awaAU5XRzASkBXfvIyidlqUyZP
         lWKw==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b=rhckfhPF;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id w5si329222pll.64.2018.11.18.10.28.28;
        Sun, 18 Nov 2018 10:28:45 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727045AbeKSEtW (ORCPT <rfc822;xtanabe@gmail.com> + 99 others);
        Sun, 18 Nov 2018 23:49:22 -0500
Received: from mail.kernel.org ([198.145.29.99]:54118 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726744AbeKSEtW (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Sun, 18 Nov 2018 23:49:22 -0500
Received: from mail-wm1-f52.google.com (mail-wm1-f52.google.com [209.85.128.52])
        (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 5409E2089F
        for <linux-kernel@vger.kernel.org>; Sun, 18 Nov 2018 18:28:22 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1542565702;
        bh=Vwss4soWhguhGo9DAqnWYTzn8piXNCMnRF+M5eFiLJE=;
        h=References:In-Reply-To:From:Date:Subject:To:Cc:From;
        b=rhckfhPFIMVeCxeCNnU+AELALIvXCNhF1b7EiE4qF0mX1isIrlHzuZsglGfpy9gxK
         jzRdLb0yTfPbcuVnqx0cwQMZcqnEAAwdCoBS+npQk295A+OYbdl59RMjm5vRQcETXd
         cp9Fv9Q8U6z3wjSDaSwd4gstu1QBvZA+N9PeDW0s=
Received: by mail-wm1-f52.google.com with SMTP id w7-v6so3166256wmc.1
        for <linux-kernel@vger.kernel.org>; Sun, 18 Nov 2018 10:28:22 -0800 (PST)
X-Received: by 2002:a1c:110b:: with SMTP id 11mr2052879wmr.83.1542565700692;
 Sun, 18 Nov 2018 10:28:20 -0800 (PST)
MIME-Version: 1.0
References: <20181118111751.6142-1-christian@brauner.io> <CAKOZuet3s0WxxPgrtrNkq8YiOWhYAiK6yEio6PKVV9J_H4_TSA@mail.gmail.com>
 <CALCETrUd2Y2MmO8Qx8aUvQDOTNiyj35Y7bctPBZe0p2i1EUiLw@mail.gmail.com>
 <CAKOZuev1JUGFWuwsKqS6rXcFMqpCHT1VAG2kwB4O=FHo6DAFiQ@mail.gmail.com>
 <CALCETrVLP_mudJTW6EQpRr5GZ7kfuGci+QCT1uPrOVDTWcod-A@mail.gmail.com>
 <a7f50692-667c-4efe-a2d0-fa324eebb90b@infradead.org> <CAKOZueutLc8d0Fe+7dNWiZKnALhTSST8+kCnOrL+OmB6coUmtA@mail.gmail.com>
 <CALCETrVg71XBv-gMOtL-m0Dd0HNz8_oXOUDSWin5LeViAL0UYA@mail.gmail.com>
 <CAKOZuesCKo4GH9fdum2EUFLrtTWam3aizcDQUn3-vCYg4T1P8w@mail.gmail.com>
 <CALCETrUeNZPfrSYa9vH5Ukrk1Y+Kb9GkZOh6LkqG6Z9NpK5P0w@mail.gmail.com> <CAKOZuevVk_aH_2TuiNcmxgMa+gHXMBXz6Uu5a6TDjoxjhaE36g@mail.gmail.com>
In-Reply-To: <CAKOZuevVk_aH_2TuiNcmxgMa+gHXMBXz6Uu5a6TDjoxjhaE36g@mail.gmail.com>
From: Andy Lutomirski <luto@kernel.org>
Date: Sun, 18 Nov 2018 10:28:08 -0800
X-Gmail-Original-Message-ID: <CALCETrVscRwQG55-j1SKc2TmSb1-=5861804ojUuviNzdyDOrA@mail.gmail.com>
Message-ID: <CALCETrVscRwQG55-j1SKc2TmSb1-=5861804ojUuviNzdyDOrA@mail.gmail.com>
Subject: Re: [PATCH] proc: allow killing processes via file descriptors
To: Daniel Colascione <dancol@google.com>
Cc: Andrew Lutomirski <luto@kernel.org>,
        Randy Dunlap <rdunlap@infradead.org>,
        Christian Brauner <christian@brauner.io>,
        "Eric W. Biederman" <ebiederm@xmission.com>,
        LKML <linux-kernel@vger.kernel.org>,
        "Serge E. Hallyn" <serge@hallyn.com>, Jann Horn <jannh@google.com>,
        Andrew Morton <akpm@linux-foundation.org>,
        Oleg Nesterov <oleg@redhat.com>,
        Aleksa Sarai <cyphar@cyphar.com>,
        Al Viro <viro@zeniv.linux.org.uk>,
        Linux FS Devel <linux-fsdevel@vger.kernel.org>,
        Linux API <linux-api@vger.kernel.org>,
        Tim Murray <timmurray@google.com>,
        Kees Cook <keescook@chromium.org>,
        Jan Engelhardt <jengelh@inai.de>
Content-Type: text/plain; charset="UTF-8"
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwC3nEhfr_FbmJJSAA--.1102S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxGrW3uF47KFy5AF18XFykuFg_yoW5uw4DpF
	W5GF1YkF1kJasYy3s7XF48ZF18t3s5JrZrJFnxK34UZwn8Aw1FvrWSqa15C3WUursYka1j
	q3Z0qwnrJrZ8ZaDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUmqb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_Gr1j6F4UJwA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_Cr1j6rxdM2AIxVAIcx
	kEcVAq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v2
	6r1j6r18McIj6I8E87Iv67AKxVWUJVW8JwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IY64
	vIr41l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkI
	ecxEwVCI4VW5MxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWUJVWUCwCYIx
	AIcVC0I7IYx2IY6xkF7I0E14v26r1j6r4UMxvI42IY6I8E87Iv67AKxVW8JVWxJwCYIxAI
	cVC2z280aVCY1x0267AKxVW8JVW8Jr1l42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwV
	Aq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1l4IxYO2xFxVAFwI0_GFv_
	Wrylx2IqxVAqx4xG67AKxVWUJVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17
	CE14v26r4a6rW5MIIYrxkI7VAKI48JMIIF0xvE42xK8VAvwI8IcIk0rVWrJr0_WFyUJbIY
	CTnIWIevJa73UjIFyTuYvjxUQFoXUUUUU

On Sun, Nov 18, 2018 at 9:51 AM Daniel Colascione <dancol@google.com> wrote:
>
> > I'm not entirely sure that ship has sailed.  In the kernel, we already
> > have a bit of a distinction between a pid (and tid, etc -- I'm
> > referring to struct pid) and a task.  If we make a new
> > process-management API, we could put a distinction like this into the
> > API.
>
> It would be a disaster to have different APIs give callers a different
> idea of process identity over its lifetime. The precedent is
> well-established that execve and setreuid do not change a process's
> identity. Invaliding some identifiers but not others in response to
> supposedly-internal things a process might do under rare circumstances
> is creating a bug machine..

Here's my point: if we're really going to make a new API to manipulate
processes by their fd, I think we should have at least a decent idea
of how that API will get extended in the future.  Right now, we have
an extremely awkward situation where opening an fd in /proc requires
certain capabilities or uids, and using those fds often also checks
current's capabilities, and the target process may have changed its
own security context, including gaining privilege via SUID, SGID, or
LSM transition rules in the mean time.  This has been a huge source of
security bugs.  It would be nice to have a model for future APIs that
avoids these problems.

And I didn't say in my proposal that a process's identity should
fundamentally change when it calls execve().  I'm suggesting that
certain operations that could cause a process to gain privilege or
otherwise require greater permission to introspect (mainly execve)
could be handled by invalidating the new process management fds.
Sure, if init re-execs itself, it's still PID 1, but that doesn't
necessarily mean that:

fd = process_open_management_fd(1);
[init reexecs]
process_do_something(fd);

needs to work.

>
> > setresuid() has no effect
> > here -- if you have W access to the process and the process calls
> > setresuid(), you still have W access.
>
> Now you've created a situation in which an operation that security
> policy previously blocked now becomes possible, invaliding previous
> designs based on the old security invariant. That's the definition of
> introducing a security hole.

I think you're overstating your case.  To a pretty good approximation,
setresuid() allows the caller to remove elements from the set {ruid,
suid, euid}, unless the caller has CAP_SETUID.  If you could ptrace a
process before it calls setresuid(), you might as well be able to
ptrace() it after, since you could have just ptraced it and made it
call setresuid() while still ptracing it.  Similarly, it seems like
it's probably safe to be able to open an fd that lets you watch the
exit status of a process, have the process call setresuid(), and still
see the exit status.

Regardless of how you feel about these issues, if you're going to add
an API by which you open an fd, wait for a process to exit, and read
the exit status, you need to define the conditions under which you may
open the fd and under which you may read the exit status once you have
the fd.  There are probably multiple valid answers, but the question
still needs to be answered.  My POLLERR hack, aside from being ugly,
avoids this particular issue because it merely lets you wait for
something you already could have observed using readdir().
