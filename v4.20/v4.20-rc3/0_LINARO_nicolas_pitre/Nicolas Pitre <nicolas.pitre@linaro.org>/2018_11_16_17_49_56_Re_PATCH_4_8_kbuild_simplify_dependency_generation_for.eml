Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 17 Nov 2018 03:13:25 -0000
Received: from icoremail.net (unknown [209.85.215.173])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH+aGA+9bk1akAQ--.48591S3;
	Sat, 17 Nov 2018 01:51:03 +0800 (CST)
Received: from mail-pg1-f173.google.com (unknown [209.85.215.173])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAX_UiDA+9bhptKAA--.1137S3;
	Sat, 17 Nov 2018 01:50:59 +0800 (CST)
Received: by mail-pg1-f173.google.com with SMTP id 70so10904831pgh.8
        for <xuliker@zju.edu.cn>; Fri, 16 Nov 2018 09:50:59 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:date:from:to:cc
         :subject:in-reply-to:message-id:references:user-agent:mime-version
         :sender:precedence:list-id;
        bh=Jp2NTy0VgVSyrJbw5GHLRy2cT/Mdo5Wx9S9mVl0UjY0=;
        b=XjpyneRmqQZ5uB/bOXqMFjLbigNQ2czDdgsmvwdLfYMXBkJBJTPiHW7Rtbu8SsFe8U
         OKOA0MoDAElT5g3RAt6cnxBsp6TimfpAuyhCiHEOr/IVBR/yxOplbI115yV2u+C8jLnM
         SZtv4J8EVobB+X3pF7SZOH8XroAih4Ooe7dIQU6OtSAzJ5BzVGz//GfbeUNudaTvGFqe
         q4sggeFC6e+psu3fsa0jzDT+A/FxvC2qt4W7WflLWawVbYb1f+Az3secB/PMXL898RsX
         wLui6XPBe8PBQVzGgLuRbEQ/buwQvwjca4t/LzLeaq4woqBo/uOjE8Bx73fkzVelEKPM
         /s7Q==
X-Gm-Message-State: AGRZ1gL1YwwSl34+JZO1x/hX7Rai4J5VtpaFTb/dLxilYnZyrTll1JiB
	08cxjdFr45BMI8b0Uf8xqcCqoA6TyN40tKAiqEzyZu95QCYfz7E=
X-Received: by 2002:a62:ab0d:: with SMTP id p13mr11590197pff.211.1542390658485;
        Fri, 16 Nov 2018 09:50:58 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp723927pju;
        Fri, 16 Nov 2018 09:50:57 -0800 (PST)
X-Google-Smtp-Source: AJdET5d5ilt93L6YVIUZrIgOG+7UVVg9R9J8XGF2b/Zu6v+uuKSD5Apl+wnYLe0PPJgcQnSGw7io
X-Received: by 2002:a62:4e49:: with SMTP id c70mr11946878pfb.167.1542390657520;
        Fri, 16 Nov 2018 09:50:57 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542390657; cv=none;
        d=google.com; s=arc-20160816;
        b=QY3s2kYsR0VmdTq7126C8y5k3uuCc6mmlWKCsKeL43q8XnKIr7dleHWWPvW117IwZ8
         RK8LvMNSEqmgfK+eKtGwGeD/pHMoLhE4jxU0v06IZTnBDICvaSlMsD1dgcrNeU4Q8teH
         Q9zC7N/vzTmeVNIPy4AxZtIVpsdJdw5RL6vY4pSMX3zgb0YCgaafjiXng5Ktcfq/DgqF
         VOs/fVDJ26B1viZWklXhtPiYfa85tmBKvpJdse55ylt9ej+VgdQYE5zME/Udy58ux2vo
         P95KURo5pmTj/pTn6dojQ9QRHyuyU4gfk+EIK+Ise6wh30TQJEqUcQNqtRedhfA941OY
         /HFA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:mime-version:user-agent:references
         :message-id:in-reply-to:subject:cc:to:from:date:dkim-signature;
        bh=Jp2NTy0VgVSyrJbw5GHLRy2cT/Mdo5Wx9S9mVl0UjY0=;
        b=SNHZEmViIG3kvm+SJMDmV13206k4itAbrIJpgB2W6LNJc3V96qEPmojy5O7ybCs7lf
         02MSYnsR8UBOCyrrV4YmLJZRxOc1693o5v+kcsEa/tmRrL95exEvfMkIBDBzBdjuf/Lk
         TvSZ3Bf86INoSA2s0t5L1n3zoTcDMC4MC96ViuoS/CHzJIAWJNlKKbZHPHsg4dMCr+9H
         PLxJW+pudO1iwdi5RiUHKro1IwdiZqZw8O39IMgPYaCxqyQ9/41VZ+WQABV+PmJVz9t6
         I/T7+eqC6i3kSfxdSFNJVj9LmEc9JF0jSnzqWA+ixBtTs+7yTy58jb5OofcU54UQbTMF
         ZMSA==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@linaro.org header.s=google header.b=G0kOATDC;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=linaro.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id 204si17640696pfu.273.2018.11.16.09.50.43;
        Fri, 16 Nov 2018 09:50:57 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729136AbeKQEDW (ORCPT <rfc822;xjxyklwx@gmail.com> + 99 others);
        Fri, 16 Nov 2018 23:03:22 -0500
Received: from mail-qk1-f195.google.com ([209.85.222.195]:45422 "EHLO
        mail-qk1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1729140AbeKQEDW (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 16 Nov 2018 23:03:22 -0500
Received: by mail-qk1-f195.google.com with SMTP id d135so38723237qkc.12
        for <linux-kernel@vger.kernel.org>; Fri, 16 Nov 2018 09:50:00 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=date:from:to:cc:subject:in-reply-to:message-id:references
         :user-agent:mime-version;
        bh=Jp2NTy0VgVSyrJbw5GHLRy2cT/Mdo5Wx9S9mVl0UjY0=;
        b=G0kOATDCTsATwP7gNo1uNaIN1Kt1ytYIfLUNX3l0Q3C5B4SXiMFa/aE+UCysIm1JBy
         otY/5GXND/oiFpI2M/rR/rRDZZF/NZ+Rh0eq3aO9SLo+ax0Cqctyzu1n1nwbPT0PZHc9
         uFWCSi9VfONbKiFWoDiwnL/7aStoRF0vl5DQo=
X-Received: by 2002:a0c:92c3:: with SMTP id c3mr11460156qvc.12.1542390600363;
        Fri, 16 Nov 2018 09:50:00 -0800 (PST)
Received: from xanadu.home (modemcable228.104-82-70.mc.videotron.ca. [70.82.104.228])
        by smtp.gmail.com with ESMTPSA id n8sm17552607qtk.91.2018.11.16.09.49.58
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Fri, 16 Nov 2018 09:49:59 -0800 (PST)
Date: Fri, 16 Nov 2018 12:49:56 -0500 (EST)
From: Nicolas Pitre <nicolas.pitre@linaro.org>
To: Masahiro Yamada <yamada.masahiro@socionext.com>
cc: Linux Kbuild mailing list <linux-kbuild@vger.kernel.org>,
        Sam Ravnborg <sam@ravnborg.org>,
        Rasmus Villemoes <linux@rasmusvillemoes.dk>,
        linux-arch <linux-arch@vger.kernel.org>,
        Arnd Bergmann <arnd@arndb.de>,
        Michael Ellerman <mpe@ellerman.id.au>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        Michal Marek <michal.lkml@markovi.net>,
        Will Deacon <will.deacon@arm.com>,
        Ingo Molnar <mingo@kernel.org>,
        Ard Biesheuvel <ard.biesheuvel@linaro.org>
Subject: Re: [PATCH 4/8] kbuild: simplify dependency generation for
 CONFIG_TRIM_UNUSED_KSYMS
In-Reply-To: <CAK7LNATT7PYvH-z572MGSjXbCybAW0TcNebz9CgGM4J07aMOvw@mail.gmail.com>
Message-ID: <nycvar.YSQ.7.76.1811161234160.1993@knanqh.ubzr>
References: <1542270435-11181-1-git-send-email-yamada.masahiro@socionext.com> <1542270435-11181-5-git-send-email-yamada.masahiro@socionext.com> <nycvar.YSQ.7.76.1811152346510.1993@knanqh.ubzr>
 <CAK7LNATT7PYvH-z572MGSjXbCybAW0TcNebz9CgGM4J07aMOvw@mail.gmail.com>
User-Agent: Alpine 2.21 (LFD 202 2017-01-01)
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAX_UiDA+9bhptKAA--.1137S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3Xw4UurW5Ww18Gr4fXr1kZrb_yoW7AF15pa
	4vkayUKa1DXry7Jw1I9w4293WIqrnagF4IgFyrWryjyr1qgF1xWrnavr1Y934I9F40k34j
	yrZI9asxurWktFDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPIb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_Cr1j6rxdM28EF7xvwVC2z280aVCY1x0267AKxVWxJr0_GcWle2I262IYc4
	CY6c8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_
	Jr0_Jr4lYx0Ex4A2jsIE14v26r1j6r4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwI
	xGrwCjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xS
	Y4AK6IIF6r4lc2IjII80xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26r4j6ryUMxvI42
	IY6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1lcIIF0xvEx4A2jsIE14v26r4UJVWxJr1lcIIF
	0xvEx4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26c
	xK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v2
	6r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_Jw0_GFylIxkGc2
	Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6r4j6FyUYxBIdaVFxhVjvjDU0xZFpf9x07bm
	wZcUUUUU=

On Fri, 16 Nov 2018, Masahiro Yamada wrote:

> On Fri, Nov 16, 2018 at 2:13 PM Nicolas Pitre <nicolas.pitre@linaro.org> wrote:
> >
> > On Thu, 15 Nov 2018, Masahiro Yamada wrote:
> >
> > > My main motivation of this commit is to clean up scripts/Kbuild.include
> > > and scripts/Makefile.build.
> > >
> > > Currently, CONFIG_TRIM_UNUSED_KSYMS works with a tricky gimmick;
> > > possibly exported symbols are detected by letting $(CPP) replace
> > > EXPORT_SYMBOL* with a special string '=== __KSYM_*===', which is
> > > post-processed by sed, and passed to fixdep. The extra preprocessing
> > > is costly, and hacking cmd_and_fixdep is ugly.
> > >
> > > I came up with a new way to find exported symbols; insert a dummy
> > > symbol __ksym_marker_* to each potentially exported symbol. Those
> > > dummy symbols are picked up by $(NM), post-processed by sed, then
> > > appended to .*.cmd files. I collected the post-process part to a
> > > new shell script scripts/gen_ksymdeps.sh for readability. The dummy
> > > symbols are put into the .discard.* section so that the linker
> > > script rips them off the final vmlinux or modules.
> >
> > Brilliant!  I really like it.
> >
> > Minor comments below.
> >
> > > diff --git a/include/asm-generic/export.h b/include/asm-generic/export.h
> > > index 4d73e6e..294d6ae 100644
> > > --- a/include/asm-generic/export.h
> > > +++ b/include/asm-generic/export.h
> > > @@ -59,16 +59,19 @@ __kcrctab_\name:
> > >  .endm
> > >  #undef __put
> > >
> > > -#if defined(__KSYM_DEPS__)
> > > -
> > > -#define __EXPORT_SYMBOL(sym, val, sec)       === __KSYM_##sym ===
> > > -
> > > -#elif defined(CONFIG_TRIM_UNUSED_KSYMS)
> > > +#if defined(CONFIG_TRIM_UNUSED_KSYMS)
> > >
> > >  #include <linux/kconfig.h>
> > >  #include <generated/autoksyms.h>
> > >
> > > +.macro __ksym_marker sym
> > > +     .section ".discard.ksym","a"
> > > +__ksym_marker_\sym:
> > > +      .previous
> >
> > Does this work as intended? I have vague memories about having problems
> > with sections being discarded when they don't allocate any space.
> 
> What I can tell is, this patch produces the same size kernel
> (after dropping debug info by 'strip' command).
> 
> 
> > > +.endm
> > > +
> > >  #define __EXPORT_SYMBOL(sym, val, sec)                               \
> > > +     __ksym_marker sym;                                      \
> > >       __cond_export_sym(sym, val, sec, __is_defined(__KSYM_##sym))
> > >  #define __cond_export_sym(sym, val, sec, conf)                       \
> > >       ___cond_export_sym(sym, val, sec, conf)
> > > diff --git a/include/linux/export.h b/include/linux/export.h
> > > index ce764a5..0413a3d 100644
> > > --- a/include/linux/export.h
> > > +++ b/include/linux/export.h
> > > @@ -92,22 +92,22 @@ struct kernel_symbol {
> > >   */
> > >  #define __EXPORT_SYMBOL(sym, sec)
> > >
> > > -#elif defined(__KSYM_DEPS__)
> > > +#elif defined(CONFIG_TRIM_UNUSED_KSYMS)
> > > +
> > > +#include <generated/autoksyms.h>
> > >
> > >  /*
> > >   * For fine grained build dependencies, we want to tell the build system
> > >   * about each possible exported symbol even if they're not actually exported.
> > > - * We use a string pattern that is unlikely to be valid code that the build
> > > - * system filters out from the preprocessor output (see ksym_dep_filter
> > > - * in scripts/Kbuild.include).
> > > + * We use a symbol pattern __ksym_marker_<symbol> that the build system filters
> > > + * from the $(NM) output (see scripts/gen_ksymdep.sh). These symbols are
> > > + * discarded in the final link stage.
> > >   */
> > > -#define __EXPORT_SYMBOL(sym, sec)    === __KSYM_##sym ===
> > > -
> > > -#elif defined(CONFIG_TRIM_UNUSED_KSYMS)
> > > -
> > > -#include <generated/autoksyms.h>
> > > +#define __ksym_marker(sym)   \
> > > +     static int __ksym_marker_##sym[0] __section(".discard.ksym") __used
> >
> > Even if this is discarded during the final link, maybe this could save
> > a tiny amount of disk space by using a char instead?
> 
> 
> I am afraid you missed '[0]' after the symbol name.
> This is actually zero-length array.

Ah, indeed.

> No memory allocated for this dummy section.

Right, and that makes it identical to the assembly case.

> As far as I tested, this is working.

Yes, it does.

The problem I was alluding to has to do with symbols generated by the 
linker directly which for some reason behaves differently in that case.

> > > diff --git a/scripts/Makefile.build b/scripts/Makefile.build
> > > index 7f3ca6e..e5ba9b1 100644
> > > --- a/scripts/Makefile.build
> > > +++ b/scripts/Makefile.build
> > > @@ -254,9 +254,18 @@ objtool_dep = $(objtool_obj)                                     \
> > >             $(wildcard include/config/orc/unwinder.h          \
> > >                        include/config/stack/validation.h)
> > >
> > > +ifdef CONFIG_TRIM_UNUSED_KSYMS
> > > +cmd_gen_ksymdeps = \
> > > +     $(CONFIG_SHELL) $(srctree)/scripts/gen_ksymdeps.sh $@ > $(dot-target).tmp; \
> > > +     cat $(dot-target).tmp >> $(dot-target).cmd; \
> > > +     rm -f $(dot-target).tmp;
> >
> > Why don't you append to $(dot-target).cmd directly?
> 
> 
> If scripts/gen_ksymdeps.sh fails for some reasons,
> it will error out immediately thanks to 'set -e' flag.
> 
> Appending incomplete portion might end up with a corrupted .*.cmd file.
> 
> Probably, that would not happen, but I just wanted to ensure it.

Well, strictly speaking, if scripts/gen_ksymdeps.sh fails and its output 
isn't appended at all to the .*.cmd file, then that .*.cmd file is 
already corrupted as it is missing necessary dependencies. Would be 
better to delete the .*.cmd file entirely in that case.


Nicolas
