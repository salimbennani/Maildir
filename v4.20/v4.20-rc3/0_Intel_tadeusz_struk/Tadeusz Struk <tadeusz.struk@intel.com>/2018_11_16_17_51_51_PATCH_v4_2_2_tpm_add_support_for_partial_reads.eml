Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 17 Nov 2018 03:13:27 -0000
Received: from icoremail.net (unknown [209.85.210.171])
	by mail-app2 (Coremail) with SMTP id by_KCgCn33wpBO9bZ1qkAQ--.49572S3;
	Sat, 17 Nov 2018 01:53:46 +0800 (CST)
Received: from mail-pf1-f171.google.com (unknown [209.85.210.171])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBnT0smBO9bIp1KAA--.1350S3;
	Sat, 17 Nov 2018 01:53:42 +0800 (CST)
Received: by mail-pf1-f171.google.com with SMTP id 64so7270902pfr.9
        for <xuliker@zju.edu.cn>; Fri, 16 Nov 2018 09:53:42 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :subject:from:to:cc:date:message-id:in-reply-to:references
         :user-agent:mime-version:content-transfer-encoding:sender:precedence
         :list-id;
        bh=5wNeMJK+aqoxS2yexvTGXwe1bKhVt4cxUD8d95iiIT8=;
        b=nBsyW7H1TKsGxxGOH4B48An/wavG69ahO4vPB4GRuJH1WJGdyQPFlm69jzbE+MmOUC
         j12LViuTDHcxmDemKKJKSQbC7H/8n96sd9XXSEz87E+IzbM8NIKDnpa403NNjHHB7R6X
         9KoB29v95/CpvgisWgSgN/Alxvp9ddSyvJgm+0/d7Qz+okiCjJp4r9SzzZE8YjXxRwMh
         SWa7MYMa7pU9Fj/7Bx7TFFJzJVSQ85aRbHA75n8jNJgWZ3Nh/vPimewbfuFoqDVLvPTv
         evOVR1slBvNq3Q9V0hFtiXiqsYdsGh5Rcm6F+HMc4efyZfFMJkSNRoNByqjbDzFO7YlT
         zxBQ==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=intel.com
X-Gm-Message-State: AGRZ1gJUZIzWW67sNTGg25TAPGbwSzfUBxFmDc2Vg+mBAcSafxUVtokE
	aBowZGzqdcXN6gqAxn4iaG2nLlGbmB2MWM7Doei7yx/HC6Zs2Vs=
X-Received: by 2002:a62:2292:: with SMTP id p18mr9166016pfj.9.1542390821844;
        Fri, 16 Nov 2018 09:53:41 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp726685pju;
        Fri, 16 Nov 2018 09:53:41 -0800 (PST)
X-Google-Smtp-Source: AJdET5dQbwgXaE2mHEo9uTedlLfXBxPAwbwXl9ZBIVdXCAraanGIH1zBK2VhRRR0yTU65abFaxWX
X-Received: by 2002:a63:1258:: with SMTP id 24mr10716280pgs.114.1542390820975;
        Fri, 16 Nov 2018 09:53:40 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542390820; cv=none;
        d=google.com; s=arc-20160816;
        b=UhAaw5Zu+M4VU7we/J9H7hiuiwkTzRCfd48DppfJU/kCIn1N9agQIiG+50aRgWpXoc
         zVphgJzyHdQBY1T7Bw16wTStQZkdT9RXuKaTJJmishzDYj2dZHYnqGhVn+u8VwQxQ/vG
         84cN4ihMfX681jO02RBANHINh23sNbo5SD9RMQNRwm3mej7wN27NXux+Ygl15B4qt+hH
         vgSN9KyZCYOVsoXXbpOJnd2lOrS0XECrqrwk2zrgywQ7HJrMQwxPFzCcIzgqhshY7+e6
         5CxHPa0WCCdaEyQdTcVdOZM9/sP2xbKCt1X5fSMHuHMkrvdzJywY/tIU0hNdQcg1KF+w
         E8TQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:cc:to:from
         :subject;
        bh=5wNeMJK+aqoxS2yexvTGXwe1bKhVt4cxUD8d95iiIT8=;
        b=s5CEgxk5FaVocSacZRq5CqQ7LWK8lJjEh1HsTnCSsvNoEoQiZf7ja3ZCXojbPoQ2Pd
         DOOOsWu9/W3nIlRbTgGpryfkTn4FE1xPczxuBNPdRFNT+Z5QYIC1r3ky94hFtgENdgEr
         RRFGU8pLrMr8KTo9stUWenToTHBbWnnQr0Y5q/LRHN4Kfcdlfm6r0f2NiXLul9dSbppL
         5dGz2UCgmHzqGxGnQ4V1CA4MNFgNd9RHIJkxjB7XMIVto+x8MdVfaBCI8zfATN46U2GI
         cTP1A1jxwqnlro0mqxdr9NngoN4heFHqwGrQS0GmHpH913oC+xRrvIHgufrS5p3yJJ9i
         53Ew==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=intel.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id ce19-v6si35179948plb.162.2018.11.16.09.53.26;
        Fri, 16 Nov 2018 09:53:40 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2390254AbeKQEFN (ORCPT <rfc822;xjxyklwx@gmail.com> + 99 others);
        Fri, 16 Nov 2018 23:05:13 -0500
Received: from mga04.intel.com ([192.55.52.120]:20990 "EHLO mga04.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1729198AbeKQEFN (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 16 Nov 2018 23:05:13 -0500
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga005.jf.intel.com ([10.7.209.41])
  by fmsmga104.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 16 Nov 2018 09:51:51 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,240,1539673200"; 
   d="scan'208";a="274595966"
Received: from tstruk-mobl1.jf.intel.com ([10.7.196.53])
  by orsmga005.jf.intel.com with ESMTP; 16 Nov 2018 09:51:51 -0800
Subject: [PATCH v4 2/2] tpm: add support for partial reads
From: Tadeusz Struk <tadeusz.struk@intel.com>
To: jarkko.sakkinen@linux.intel.com
Cc: jgg@ziepe.ca, linux-integrity@vger.kernel.org,
        linux-security-module@vger.kernel.org,
        linux-kernel@vger.kernel.org, tadeusz.struk@intel.com
Date: Fri, 16 Nov 2018 09:51:51 -0800
Message-ID: <154239071144.2924.17574189056250189697.stgit@tstruk-mobl1.jf.intel.com>
In-Reply-To: <154239067364.2880.13752725056462237016.stgit@tstruk-mobl1.jf.intel.com>
References: <154239067364.2880.13752725056462237016.stgit@tstruk-mobl1.jf.intel.com>
User-Agent: StGit/unknown-version
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBnT0smBO9bIp1KAA--.1350S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxXrW8JF4kGF15uFyUKF1fXrb_yoWrKFWkpa
	1Yk3s3CrWkAr4jkrn7JanrZw43W3Z3WFyUKFy7G3srZrZ7Cw1Yg348tFyagFy7Zr1vkrZY
	ka95uw1fWF1UZaUanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPIb7Iv0xC_KF4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_Cr1j6rxdM28EF7xvwVC2z280aVCY1x0267AKxVWxJr0_GcWle2I262IYc4
	CY6c8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_
	Jr0_Jr4lYx0Ex4A2jsIE14v26r1j6r4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwI
	xGrwCjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xS
	Y4AK6IIF6r4lc2IjII80xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26r4j6ryUMxvI42
	IY6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1lcIIF0xvEx4A2jsIE14v26r4UJVWxJr1lcIIF
	0xvEx4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26c
	xK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v2
	6r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_JF0_Jw1lIxkGc2
	Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6r4j6FyUYxBIdaVFxhVjvjDU0xZFpf9x07b8
	8n5UUUUU=

Currently to read a response from the TPM device an application needs
provide big enough buffer for the whole response and read it in one go.
The application doesn't know how big the response it beforehand so it
always needs to maintain a 4K buffer and read the max (4K).
In case if the user of the TSS library doesn't provide big enough
buffer the TCTI spec says that the library should set the required
size and return TSS2_TCTI_RC_INSUFFICIENT_BUFFER error code so that the
application could allocate a bigger buffer and call receive again.
To make it possible in the TSS library, this requires being able to do
partial reads from the driver.
The library would read the 10 bytes header first to get the actual size
of the response from the header, and then read the rest of the response.

This patch adds support for partial reads, i.e. the user can read the
response in one or multiple reads, until the whole response is consumed.
The user can also read only part of the response and ignore
the rest by issuing a new write to send a new command.

Signed-off-by: Tadeusz Struk <tadeusz.struk@intel.com>
---
The usecase is implemented in this TSS commit:
https://github.com/tpm2-software/tpm2-tss/commit/ce982f67a67dc08e24683d30b05800648d8a264c

Changes in v4:
 - Use unsigned type for response_pending as it will never be negative.
 - Rebased on top of name change data_pending to transmit_result patch.

Changes in v3:
 - Remove link to usecase implemented in TSS out of the commit message.
 - Update the conddition in tpm_common_poll() to take into account
   the partial_data also.

Changes in v2:
 - Allow writes after only partial response is consumed to maintain
   backwords compatibility.
---
 drivers/char/tpm/tpm-dev-common.c |   41 ++++++++++++++++++++++++++++---------
 drivers/char/tpm/tpm-dev.h        |    2 ++
 2 files changed, 33 insertions(+), 10 deletions(-)

diff --git a/drivers/char/tpm/tpm-dev-common.c b/drivers/char/tpm/tpm-dev-common.c
index 67a70e2fde7f..0544733e1b6d 100644
--- a/drivers/char/tpm/tpm-dev-common.c
+++ b/drivers/char/tpm/tpm-dev-common.c
@@ -64,6 +64,7 @@ static void tpm_timeout_work(struct work_struct *work)
 
 	mutex_lock(&priv->buffer_mutex);
 	priv->transmit_result = 0;
+	priv->partial_data = 0;
 	memset(priv->data_buffer, 0, sizeof(priv->data_buffer));
 	mutex_unlock(&priv->buffer_mutex);
 	wake_up_interruptible(&priv->async_wait);
@@ -90,22 +91,39 @@ ssize_t tpm_common_read(struct file *file, char __user *buf,
 	ssize_t ret_size = 0;
 	int rc;
 
-	del_singleshot_timer_sync(&priv->user_read_timer);
-	flush_work(&priv->timeout_work);
 	mutex_lock(&priv->buffer_mutex);
+	if (priv->transmit_result || priv->partial_data) {
+		if (*off == 0)
+			priv->partial_data = priv->transmit_result;
+
+		ret_size = min_t(ssize_t, size, priv->partial_data);
+		if (ret_size <= 0) {
+			ret_size = 0;
+			priv->transmit_result = 0;
+			priv->partial_data = 0;
+			goto out;
+		}
 
-	if (priv->transmit_result) {
-		ret_size = min_t(ssize_t, size, priv->transmit_result);
-		if (ret_size > 0) {
-			rc = copy_to_user(buf, priv->data_buffer, ret_size);
-			memset(priv->data_buffer, 0, priv->transmit_result);
-			if (rc)
-				ret_size = -EFAULT;
+		rc = copy_to_user(buf, priv->data_buffer + *off, ret_size);
+		if (rc) {
+			memset(priv->data_buffer, 0, TPM_BUFSIZE);
+			priv->partial_data = 0;
+			ret_size = -EFAULT;
+		} else {
+			memset(priv->data_buffer + *off, 0, ret_size);
+			priv->partial_data -= ret_size;
+			*off += ret_size;
 		}
 
 		priv->transmit_result = 0;
 	}
 
+out:
+	if (!priv->partial_data) {
+		*off = 0;
+		del_singleshot_timer_sync(&priv->user_read_timer);
+		flush_work(&priv->timeout_work);
+	}
 	mutex_unlock(&priv->buffer_mutex);
 	return ret_size;
 }
@@ -150,6 +168,9 @@ ssize_t tpm_common_write(struct file *file, const char __user *buf,
 		goto out;
 	}
 
+	priv->partial_data = 0;
+	*off = 0;
+
 	/*
 	 * If in nonblocking mode schedule an async job to send
 	 * the command return the size.
@@ -184,7 +205,7 @@ __poll_t tpm_common_poll(struct file *file, poll_table *wait)
 
 	poll_wait(file, &priv->async_wait, wait);
 
-	if (priv->transmit_result)
+	if (priv->transmit_result || priv->partial_data)
 		mask = EPOLLIN | EPOLLRDNORM;
 	else
 		mask = EPOLLOUT | EPOLLWRNORM;
diff --git a/drivers/char/tpm/tpm-dev.h b/drivers/char/tpm/tpm-dev.h
index 3ff1dc9f3d75..714a4419d392 100644
--- a/drivers/char/tpm/tpm-dev.h
+++ b/drivers/char/tpm/tpm-dev.h
@@ -11,6 +11,8 @@ struct file_priv {
 
 	/* Holds the resul of the last successful call to tpm_transmit() */
 	size_t transmit_result;
+	/* Holds the count how much of the response is still unread */
+	size_t partial_data;
 	struct mutex buffer_mutex;
 
 	struct timer_list user_read_timer;      /* user needs to claim result */
