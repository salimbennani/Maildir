Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 17 Nov 2018 03:12:52 -0000
Received: from icoremail.net (unknown [209.85.215.179])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH3rc8O5bpv+jAQ--.48485S3;
	Sat, 17 Nov 2018 00:31:25 +0800 (CST)
Received: from mail-pg1-f179.google.com (unknown [209.85.215.179])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCnfTna8O5bEmFKAA--.961S3;
	Sat, 17 Nov 2018 00:31:22 +0800 (CST)
Received: by mail-pg1-f179.google.com with SMTP id r9-v6so10820680pgv.6
        for <xuliker@zju.edu.cn>; Fri, 16 Nov 2018 08:31:22 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :from:to:cc:subject:date:message-id:sender:precedence:list-id;
        bh=0oOArruG6xpMpk+0XGodpOAOA2bwbgGq5Fwref0GT5Q=;
        b=IXNGX99RnCw6R2eBIwXcO14gsaS21x76L24SmLW9b+gNWtSkQ9+vp7NxDKVGYxdDl+
         lqnN2TwXHr3xtJFCSbSOu518wy52GLEK4gCDjFBw1UC5tlpq2RizmCkjtfpUNW+No4wz
         +EwV1UPtOfhUXfW2Tm76hrLsJN8pn9mT0WD0ywMrcAHq/jM8GroigRQlh5nFn/KfkCKA
         MbZSB3PgJbnLG3aiIDfcw0iwOEDz95an8EqvcOPsfsg5K+lpAqOAKm2tuP8URp4Risks
         aE9Gi99ODO3RIfJP7XWTlBNDV4+GnOGZ6DD3qINvetPE9MsWmpukOIVR4o3KU+q2UwKI
         0ZuA==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=intel.com
X-Gm-Message-State: AGRZ1gLtBvW8fsKTJ5yHAn099UeScWdjOA4coX143b3yGwMPNHaJ4xnN
	mmoe1HxLQSwJXICrH7YUuB6J6o/P2hl+y2N9UyHuQzq5STKgDWE=
X-Received: by 2002:a63:9402:: with SMTP id m2mr10211016pge.93.1542385882378;
        Fri, 16 Nov 2018 08:31:22 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp633416pju;
        Fri, 16 Nov 2018 08:31:21 -0800 (PST)
X-Google-Smtp-Source: AJdET5fN7G58BUbdkT+yrbuDPOzkc2kABFXEBBNhGNdBqEYqSkuV+BnrJg0UoiMJrxshBZLupSAI
X-Received: by 2002:a65:6542:: with SMTP id a2mr10515010pgw.389.1542385881259;
        Fri, 16 Nov 2018 08:31:21 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542385881; cv=none;
        d=google.com; s=arc-20160816;
        b=J2Qmx31On/KpBnoyY7m+JkQTVoE3pIpFEyZVcXR59uTmJGNBUErrkSxw0P/zhbnAgT
         V7rWI+653YjoaaIZd57v2rrGrC+ZU0njV6jjhBiKpaAlOl3BX4PnAt1tZM97MrC5kytU
         yg4P5ymm71tMx8lTHIDS3ygL8vze+twlHNaaeJjP740jQCjeGJ7tS5tQ4k5F+zEyKvc2
         64lkQlfFx3yhgBMviTlWlmQzDKbrnkzTaEmtFO2LgyLPybl9MDssu/i7uWVUetJbfYDy
         YxiRepWfPGJ340/sCy+kk0cZ1kqCrqwVEeBtOoYsoeJWyxs8PNZsKt40yik/6EYmn3JI
         iwKw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:message-id:date:subject:cc:to:from;
        bh=0oOArruG6xpMpk+0XGodpOAOA2bwbgGq5Fwref0GT5Q=;
        b=UCqVgkK7uziQDEK9YypPxRLPJsj1suGdOQk2LmhXWQ66idGw4vxG6g5thE43C7xvZw
         YdL3g/jctqNzx+dg8Ea9UKV+PlGgRZYCcLUzWDbSSIqZFmInPL/nT6XAng3FNTUMRrX4
         89YpXCi2Cze0YpfjY+LhTioGDtCdJ3Teg1KYV/3fIXQL1vzeF3GLu8atSap2zCbzDNis
         kSy6J1USZQmTOtnpriZMv/gTxJH77yy8CWooDjWdgw2s/odBWSI8FUqzf5YWrkV9yYHj
         3UdsKBn5/5HCgN1xojt+3qRicZZqr3sKtjAT69ZSo4fTwWT2pc887XSYP0fy+WyYzjbr
         gGRw==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=intel.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id p9-v6si35794892pfe.76.2018.11.16.08.31.02;
        Fri, 16 Nov 2018 08:31:21 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729224AbeKQCoB (ORCPT <rfc822;jroi.martin@gmail.com>
        + 99 others); Fri, 16 Nov 2018 21:44:01 -0500
Received: from mga18.intel.com ([134.134.136.126]:58803 "EHLO mga18.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1728175AbeKQCoB (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 16 Nov 2018 21:44:01 -0500
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga002.jf.intel.com ([10.7.209.21])
  by orsmga106.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 16 Nov 2018 08:30:44 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,240,1539673200"; 
   d="scan'208";a="109153766"
Received: from unknown (HELO localhost.jf.intel.com) ([10.54.55.47])
  by orsmga002.jf.intel.com with ESMTP; 16 Nov 2018 08:30:44 -0800
From: kan.liang@linux.intel.com
To: tglx@linutronix.de, peterz@infradead.org, mingo@redhat.com,
        linux-kernel@vger.kernel.org
Cc: ak@linux.intel.com, yao.jin@linux.intel.com, sashal@kernel.org,
        Kan Liang <kan.liang@linux.intel.com>, stable@kernel.org
Subject: [PATCH V2] perf/x86/intel/uncore: Fix client IMC events return huge result
Date: Fri, 16 Nov 2018 07:20:55 -0800
Message-Id: <20181116152055.5806-1-kan.liang@linux.intel.com>
X-Mailer: git-send-email 2.14.5
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwCnfTna8O5bEmFKAA--.961S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxtFWkuFWUZryfAw4rWr4fGrg_yoW7Aw48pw
	4xJrs8trWj93Z2g3y5AFs7ZFy5Jr4rJa98Ww45Wa4Iy3W5XasxXF47GrW5u3Z5GF1ktFya
	y3WY9r4UK345AaDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUm2b7Iv0xC_tr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_Gr1j6F4UJwA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwAS0I0E0x
	vYzxvE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AK
	xVWUJVWUGwAv7VC2z280aVAFwI0_Jr0_Gr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48Icx
	kI7VAKI48JM4kE6xkIj40Ew7xC0wCjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik2
	6cxK6xAEc7vF6xCjj44lc2xSY4AK6IIF6r1lc2IjII80xcxEwVAKI48JMxvI42IY6xIIjx
	v20xvE14v26ryj6F1UMxvI42IY6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1lcIIF0xvEx4A2
	jsIE14v26r4j6F4UMxvI42IY6I8E87Iv6xkF7I0E14v26r4j6r4UJwCF04k20xvY0x0EwI
	xGrwCF04k20xvEw4C26cxK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8
	JwC20s026c02F40E14v26r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1V
	AFwI0_Jw0_GFylIxkGc2Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6r4j6FyUYxBIdaVF
	xhVjvjDU0xZFpf9x07b5yxiUUUUU=

From: Kan Liang <kan.liang@linux.intel.com>

The client IMC bandwidth events return very huge result.
  perf stat -e uncore_imc/data_reads/ -e uncore_imc/data_writes/ -I
  10000 -a
  10.000117222 34,788.76 MiB uncore_imc/data_reads/
  10.000117222 8.26 MiB uncore_imc/data_writes/
  20.000374584 34,842.89 MiB uncore_imc/data_reads/
  20.000374584 10.45 MiB uncore_imc/data_writes/
  30.000633299 37,965.29 MiB uncore_imc/data_reads/
  30.000633299 323.62 MiB uncore_imc/data_writes/
  40.000891548 41,012.88 MiB uncore_imc/data_reads/
  40.000891548 6.98 MiB uncore_imc/data_writes/
  50.001142480 1,125,899,906,621,494.75 MiB uncore_imc/data_reads/
  50.001142480 6.97 MiB uncore_imc/data_writes/

The client IMC events are freerunning counters. They still use the
old event encoding format (0x1 for data_read and 0x2 for data write).
The counter bit width is calculated by common code, which assume that
the standard encoding format is used for the freerunning counters.
Error bit width information is calculated.

The event->attr.config, which directly from user space, should not be
used by the functions of freerunning counters.
For client IMC events, the attr.config needs to be converted to the
standard encoding format. The modified event config will be stored in
event->hw.config.
For other freerunning counters, the attr.config has the correct format.
Just save it in event->hw.config.
Using event->hw.config to replace event->attr.config for the functions
of freerunning counters.

Fixes: commit 9aae1780e7e8 ("perf/x86/intel/uncore: Clean up client IMC uncore")
Reported-by: Jin Yao <yao.jin@linux.intel.com>
Tested-by: Jin Yao <yao.jin@linux.intel.com>
Signed-off-by: Kan Liang <kan.liang@linux.intel.com>
Cc: stable@kernel.org
---
V2:
- Fix the "Fixes" tag.
- Add Cc: stable@kernel.org

 arch/x86/events/intel/uncore.c     |  1 +
 arch/x86/events/intel/uncore.h     | 12 ++++++------
 arch/x86/events/intel/uncore_snb.c |  4 +++-
 3 files changed, 10 insertions(+), 7 deletions(-)

diff --git a/arch/x86/events/intel/uncore.c b/arch/x86/events/intel/uncore.c
index 27a461414b30..2690135bf83f 100644
--- a/arch/x86/events/intel/uncore.c
+++ b/arch/x86/events/intel/uncore.c
@@ -740,6 +740,7 @@ static int uncore_pmu_event_init(struct perf_event *event)
 		/* fixed counters have event field hardcoded to zero */
 		hwc->config = 0ULL;
 	} else if (is_freerunning_event(event)) {
+		hwc->config = event->attr.config;
 		if (!check_valid_freerunning_event(box, event))
 			return -EINVAL;
 		event->hw.idx = UNCORE_PMC_IDX_FREERUNNING;
diff --git a/arch/x86/events/intel/uncore.h b/arch/x86/events/intel/uncore.h
index e17ab885b1e9..cc6dd4f78158 100644
--- a/arch/x86/events/intel/uncore.h
+++ b/arch/x86/events/intel/uncore.h
@@ -285,8 +285,8 @@ static inline
 unsigned int uncore_freerunning_counter(struct intel_uncore_box *box,
 					struct perf_event *event)
 {
-	unsigned int type = uncore_freerunning_type(event->attr.config);
-	unsigned int idx = uncore_freerunning_idx(event->attr.config);
+	unsigned int type = uncore_freerunning_type(event->hw.config);
+	unsigned int idx = uncore_freerunning_idx(event->hw.config);
 	struct intel_uncore_pmu *pmu = box->pmu;
 
 	return pmu->type->freerunning[type].counter_base +
@@ -360,7 +360,7 @@ static inline
 unsigned int uncore_freerunning_bits(struct intel_uncore_box *box,
 				     struct perf_event *event)
 {
-	unsigned int type = uncore_freerunning_type(event->attr.config);
+	unsigned int type = uncore_freerunning_type(event->hw.config);
 
 	return box->pmu->type->freerunning[type].bits;
 }
@@ -368,7 +368,7 @@ unsigned int uncore_freerunning_bits(struct intel_uncore_box *box,
 static inline int uncore_num_freerunning(struct intel_uncore_box *box,
 					 struct perf_event *event)
 {
-	unsigned int type = uncore_freerunning_type(event->attr.config);
+	unsigned int type = uncore_freerunning_type(event->hw.config);
 
 	return box->pmu->type->freerunning[type].num_counters;
 }
@@ -382,8 +382,8 @@ static inline int uncore_num_freerunning_types(struct intel_uncore_box *box,
 static inline bool check_valid_freerunning_event(struct intel_uncore_box *box,
 						 struct perf_event *event)
 {
-	unsigned int type = uncore_freerunning_type(event->attr.config);
-	unsigned int idx = uncore_freerunning_idx(event->attr.config);
+	unsigned int type = uncore_freerunning_type(event->hw.config);
+	unsigned int idx = uncore_freerunning_idx(event->hw.config);
 
 	return (type < uncore_num_freerunning_types(box, event)) &&
 	       (idx < uncore_num_freerunning(box, event));
diff --git a/arch/x86/events/intel/uncore_snb.c b/arch/x86/events/intel/uncore_snb.c
index 8527c3e1038b..48d7121f71c7 100644
--- a/arch/x86/events/intel/uncore_snb.c
+++ b/arch/x86/events/intel/uncore_snb.c
@@ -425,9 +425,11 @@ static int snb_uncore_imc_event_init(struct perf_event *event)
 
 	/* must be done before validate_group */
 	event->hw.event_base = base;
-	event->hw.config = cfg;
 	event->hw.idx = idx;
 
+	/* Convert to standard encoding format for free running counters */
+	event->hw.config = ((cfg - 1) << 8) | 0x10ff;
+
 	/* no group validation needed, we have free running counters */
 
 	return 0;
-- 
2.14.3
