Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 19 Nov 2018 00:47:29 -0000
Received: from icoremail.net (unknown [209.85.210.177])
	by mail-app2 (Coremail) with SMTP id by_KCgDXv9IOuPFbCd+yAQ--.53276S3;
	Mon, 19 Nov 2018 03:05:51 +0800 (CST)
Received: from mail-pf1-f177.google.com (unknown [209.85.210.177])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwC3lkIIuPFbjK5SAA--.17053S3;
	Mon, 19 Nov 2018 03:05:44 +0800 (CST)
Received: by mail-pf1-f177.google.com with SMTP id i12so461336pfo.7
        for <xuliker@zju.edu.cn>; Sun, 18 Nov 2018 11:05:44 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:sender:precedence:list-id;
        bh=mjNu24Nv+0aRSYRzm/ABGeSmOsA4PATln+5LnuDDFTQ=;
        b=rNlCyuaRFozudEGSC2pnORp3zy6HBEgt9NnF9rr0meYyZDU14Hq6SL7DHtVk0pFk/T
         DJ45akEAaB8Rev7UqTfyjWOfU9yY7K9du5YvJr52yr8QK5pKwiqRIv7fQyDDUO7AvtyB
         hbp9/SgGBBOApOkNv5YQUV8QTxbQnmsd5HYB69pq2s/wJM/rvMAj/b2Y2t/JMV8p9BFp
         nG10bhV9dKgIKZwajTiJR7fs9glLx5ODx1So8vMq9yUkoaWeK5aWrQjozURUssbbsLLj
         QCrmRx2ZVxVDdhJ4yz/YQ7dMzal6LTWE9NLyKwp2pJ9di/O0iNCmWE0J/YeLzWJSQuSv
         Ygog==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gIdS+cpN6WD6SrBLFEFiMeor4em6LbIcomKFpqd5Z3RCctuX+lx
	L3SUteXMGK1lQG/g5f7bZXx/cJWEBxvqr5vmK0HuYbQw2LhCtAI=
X-Received: by 2002:a63:2315:: with SMTP id j21mr17569375pgj.297.1542567944215;
        Sun, 18 Nov 2018 11:05:44 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp1812861pju;
        Sun, 18 Nov 2018 11:05:42 -0800 (PST)
X-Google-Smtp-Source: AJdET5fHkaA5RDfb4+sAtdEdfn0itvvqcWSvOa8adq2pkfnzzGbW8ZkdUvSyJVmfJbH5qeyfgRkF
X-Received: by 2002:a63:f444:: with SMTP id p4mr17356328pgk.124.1542567942738;
        Sun, 18 Nov 2018 11:05:42 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542567942; cv=none;
        d=google.com; s=arc-20160816;
        b=MWfMCr2xAPBMehnPI3JAooEoEO3/heyifwYxDIqM3SUiJYhNZVd2Ac6gbRQzP9RbKo
         e1CMphuQYS8IKY/d2tmuupNNmNJgQvccv494b73ya2+E+OtBtCmV48hM6NmwQqewkmHZ
         QkFAChbGBNMBzv6W2HOa8/oHPD0OMkihFMj//Fxxya6m3AwOwEoHNNJo8A4/P1iK3R2X
         ZWiJllxpUo3FDcBA72rsDlUdq3sdSfzWb+xAewZwpw22PiBAfJ7WTHQzO5cWNSC2leiV
         ABNjPYxhjdtcdGBiSuXg1scHNWQxFzzQVlXCn0AZJBY/WUA95K9t34/FBs2ORpEK2LlR
         Wrkw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:in-reply-to:content-disposition
         :mime-version:references:message-id:subject:cc:to:from:date;
        bh=mjNu24Nv+0aRSYRzm/ABGeSmOsA4PATln+5LnuDDFTQ=;
        b=S9ntlYPGDj2dFGuJ+ZGB2N9PX+bjkg9RaJlg2oxMouEU0S16rW/XYxSslVXclnid0P
         JvLCHA1b1xr6N1Fo/tcgBpQppJwXA9zo2anhhBr/6ZqwA6mNnSd3e+XWjx+M+yCo/3ph
         wEN7cAnHuvDAtTsLJ3eeOxeYIHKKYDpamV3wS0afQBAExJP8E7vbuJajU1vRhvN6Srcj
         Sucv4dfYI8cqHRXY20u86TYoWSUF5vIGe5lKkUVPvrD08xCI4zdM/UNbAtqLAeguFNKu
         x6yTOkf4XA3lgDWBERFdm4WhOvQ0a3aWi1cBfQmx4CLj0PHZcpICab6DIczxgfEELVeG
         RztQ==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id bf4si10053341plb.163.2018.11.18.11.05.25;
        Sun, 18 Nov 2018 11:05:42 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726208AbeKSF0Z (ORCPT <rfc822;xtanabe@gmail.com> + 99 others);
        Mon, 19 Nov 2018 00:26:25 -0500
Received: from mx1.mailbox.org ([80.241.60.212]:51252 "EHLO mx1.mailbox.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725800AbeKSF0Z (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 19 Nov 2018 00:26:25 -0500
Received: from smtp2.mailbox.org (unknown [IPv6:2001:67c:2050:105:465:1:2:0])
        (using TLSv1.2 with cipher ECDHE-RSA-CHACHA20-POLY1305 (256/256 bits))
        (No client certificate requested)
        by mx1.mailbox.org (Postfix) with ESMTPS id D886D4A2BB;
        Sun, 18 Nov 2018 20:05:18 +0100 (CET)
X-Virus-Scanned: amavisd-new at heinlein-support.de
Received: from smtp2.mailbox.org ([80.241.60.241])
        by spamfilter01.heinlein-hosting.de (spamfilter01.heinlein-hosting.de [80.241.56.115]) (amavisd-new, port 10030)
        with ESMTP id 4YqSOEW_gerF; Sun, 18 Nov 2018 20:05:16 +0100 (CET)
Date: Mon, 19 Nov 2018 06:05:04 +1100
From: Aleksa Sarai <cyphar@cyphar.com>
To: Daniel Colascione <dancol@google.com>
Cc: Andy Lutomirski <luto@kernel.org>,
        Randy Dunlap <rdunlap@infradead.org>,
        Christian Brauner <christian@brauner.io>,
        "Eric W. Biederman" <ebiederm@xmission.com>,
        LKML <linux-kernel@vger.kernel.org>,
        "Serge E. Hallyn" <serge@hallyn.com>, Jann Horn <jannh@google.com>,
        Andrew Morton <akpm@linux-foundation.org>,
        Oleg Nesterov <oleg@redhat.com>,
        Al Viro <viro@zeniv.linux.org.uk>,
        Linux FS Devel <linux-fsdevel@vger.kernel.org>,
        Linux API <linux-api@vger.kernel.org>,
        Tim Murray <timmurray@google.com>,
        Kees Cook <keescook@chromium.org>,
        Jan Engelhardt <jengelh@inai.de>
Subject: Re: [PATCH] proc: allow killing processes via file descriptors
Message-ID: <20181118190504.ixglsqbn6mxkcdzu@yavin>
References: <CAKOZuev1JUGFWuwsKqS6rXcFMqpCHT1VAG2kwB4O=FHo6DAFiQ@mail.gmail.com>
 <CALCETrVLP_mudJTW6EQpRr5GZ7kfuGci+QCT1uPrOVDTWcod-A@mail.gmail.com>
 <a7f50692-667c-4efe-a2d0-fa324eebb90b@infradead.org>
 <CAKOZueutLc8d0Fe+7dNWiZKnALhTSST8+kCnOrL+OmB6coUmtA@mail.gmail.com>
 <CALCETrVg71XBv-gMOtL-m0Dd0HNz8_oXOUDSWin5LeViAL0UYA@mail.gmail.com>
 <CAKOZuesCKo4GH9fdum2EUFLrtTWam3aizcDQUn3-vCYg4T1P8w@mail.gmail.com>
 <CALCETrUeNZPfrSYa9vH5Ukrk1Y+Kb9GkZOh6LkqG6Z9NpK5P0w@mail.gmail.com>
 <CAKOZuevVk_aH_2TuiNcmxgMa+gHXMBXz6Uu5a6TDjoxjhaE36g@mail.gmail.com>
 <CALCETrVscRwQG55-j1SKc2TmSb1-=5861804ojUuviNzdyDOrA@mail.gmail.com>
 <CAKOZuevRq-igh06zS_nsGG400zXrKFCtajpEG9-xgU2+Rtb2Pw@mail.gmail.com>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
        protocol="application/pgp-signature"; boundary="n33er6mvlsotrfdd"
Content-Disposition: inline
In-Reply-To: <CAKOZuevRq-igh06zS_nsGG400zXrKFCtajpEG9-xgU2+Rtb2Pw@mail.gmail.com>
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwC3lkIIuPFbjK5SAA--.17053S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxZFy7XF4UAr45KF48CF13twb_yoWrKryDpF
	W5GF1YkF1kGFW09wn7Zr48ZF1Fgr1rAr43trn8K340vws8Cr1Sgr4Sq3y3uFZ7uws3Ka1Y
	q3Z0qasrAa4DZaDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUdjb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVWxJr0_GcWl84ACjcxK6I8E87Iv6xkF7I0E14v26F4UJVW0owAa7VASzI0EjI
	02j7AqF2xKxVCjxxvEa2IrM2AIxVAIcxkEcVAq07x20xvEncxIr21le4C267I2x7xF54xI
	wI1l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1j6r18McIj6I8E87
	Iv67AKxVWUJVW8JwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IY64vIr41l7I0Y6sxI4wCY
	1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkIecxEwVCI4VWrMxkI7I
	I2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWUJVWUCwCYIxAIcVC0I7IYx2IY6xkF
	7I0E14v26r1j6r4UMxvI42IY6I8E87Iv67AKxVWxJVW8Jr1lcIIF0xvEx4A2jsIEc7CjxV
	AFwI0_Gr0_Gr1UMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI0EY4vE52x082I5MxCjnVCj
	jxCrMxC20s026xCaFVCjc4AY6r1j6r4UMxCIbckI1I0E14v26r4a6rW5MI8I3I0E5I8CrV
	AFwI0_Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVW8ZVWrXwCI
	c40Y0x0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Wr1j6rW3JrUvcSsGvfC2KfnxnUUI43
	ZEXa7IUO4uWPUUUUU==


--n33er6mvlsotrfdd
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

On 2018-11-18, Daniel Colascione <dancol@google.com> wrote:
> > Here's my point: if we're really going to make a new API to manipulate
> > processes by their fd, I think we should have at least a decent idea
> > of how that API will get extended in the future.  Right now, we have
> > an extremely awkward situation where opening an fd in /proc requires
> > certain capabilities or uids, and using those fds often also checks
> > current's capabilities, and the target process may have changed its
> > own security context, including gaining privilege via SUID, SGID, or
> > LSM transition rules in the mean time.  This has been a huge source of
> > security bugs.  It would be nice to have a model for future APIs that
> > avoids these problems.
> >
> > And I didn't say in my proposal that a process's identity should
> > fundamentally change when it calls execve().  I'm suggesting that
> > certain operations that could cause a process to gain privilege or
> > otherwise require greater permission to introspect (mainly execve)
> > could be handled by invalidating the new process management fds.
> > Sure, if init re-execs itself, it's still PID 1, but that doesn't
> > necessarily mean that:
> >
> > fd =3D process_open_management_fd(1);
> > [init reexecs]
> > process_do_something(fd);
> >
> > needs to work.
>=20
> PID 1 is a bad example here, because it doesn't get recycled. Other
> PIDs do. The snippet you gave *does* need to work, in general, because
> if exec invalidates the handle, and you need to reopen by PID to
> re-establish your right to do something with the process, that process
> may in fact have died between the invalidation and your reopen, and
> your reopened FD may refer to some other random process.

I imagine the error would be -EPERM rather than -ESRCH in this case,
which would be incredibly trivial for userspace to differentiate
between. If you wish to re-open the path that is also trivial by
re-opening through /proc/self/fd/$fd -- which will re-do any permission
checks and will guarantee that you are re-opening the same 'struct file'
and thus the same 'struct pid'.

> The only way around this problem is to have two separate FDs --- one
> to represent process identity, which *must* be continuous across
> execve, and the other to represent some specific capability, some
> ability to do something to that process. It's reasonable to invalidate
> capability after execve, but it's not reasonable to invalidate
> identity. In concrete terms, I don't see a big advantage to this
> separation, and I think a single identity FD combined with
> per-operation capability checks is sufficient. And much simpler.

I think that the error separation above would trivially allow user-space
to know whether the identity or capability of a process being monitored
has changed.

Currently, all operations on a '/proc/$pid' which you've previously
opened and has died will give you -ESRCH. So the above separation I
mentioned is entirely consistent with how users are using '/proc/$pid'
to check for PID death today.

> > I think you're overstating your case.  To a pretty good approximation,
> > setresuid() allows the caller to remove elements from the set {ruid,
> > suid, euid}, unless the caller has CAP_SETUID.  If you could ptrace a
> > process before it calls setresuid(), you might as well be able to
> > ptrace() it after, since you could have just ptraced it and made it
> > call setresuid() while still ptracing it.
>=20
> What about a child that execs a setuid binary?

Yeah, for this reason I think that using -EPERM on operations that we
think are not reasonable to allow possibly-less-privileged processes to
do -- probably the most reasonable choice would be ptrace_may_access().

> > Similarly, it seems like
> > it's probably safe to be able to open an fd that lets you watch the
> > exit status of a process, have the process call setresuid(), and still
> > see the exit status.
>=20
> Is it? That's an open question.

Well, if we consider wait4(2) it seems that this is already the case.
If you fork+exec a setuid binary you can definitely see its exit code.

> > My POLLERR hack, aside from being ugly,
> > avoids this particular issue because it merely lets you wait for
> > something you already could have observed using readdir().
>=20
> Yes. I mentioned this same issue-punting as the motivation behind
> exithand, initially, just reading EOF on exit.

One question I have about EOF-on-exit is that if we wish to extend it to
allow providing the exit status (which is something we discussed in the
original thread), how will multiple-readers be handled in such a
scenario? Would we be storing the exit status or siginfo in the
equivalent of a locked memfd?

--=20
Aleksa Sarai
Senior Software Engineer (Containers)
SUSE Linux GmbH
<https://www.cyphar.com/>

--n33er6mvlsotrfdd
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAABCAAdFiEEb6Gz4/mhjNy+aiz1Snvnv3Dem58FAlvxt90ACgkQSnvnv3De
m5907w/+Izk6UkNPV6dusUBlHUV56jUtHKpSc4dYRGSGmZu5WY6oiWap0GD5baVg
3nRrnRnAQh+8eJtzi5X/k5QJPpGAzigcg/b20JBPvsCUgfG/ZbvnDRKqObYREWRL
R3RrgiKprp9pUUWOrn5DzET/bqbN96jsEQd9KCn44+XeZXwaEy0c5fk82+0Oz4OW
FG2g8K5Y4kayg8yw8WjXoGssAcUWGsxUxcmkmiOoEx+rDiAXhKlCbQnnOtKKDdF3
HRpVCcJPvnGfVxDbuWcrXqmWmZFsMWs1ohnVKd6AeTSsvNS/qHfci66xi/8aG+iQ
T3NZI0pqNveQLqCQ5D4yCoxavPcZ0K2M8p0cgTV87q7IKqc2HLwc7AhP4x5b34r4
CWqwQ7k4Rj57qq+Hpd1SjgrlmW2nq7FyoETDX6oYOo9wXyE4vN2SKMwzF9wgCENB
K9x/yoe0EB4LPb5Ue0mbY5yUxQBoj1NY0y+ruKn+emNsUkd0+HmCcRCVe0J+TveR
B9xhnVKS2t7NlmzsKZ+ZS7UikAf0Vdj0vEtzpD2mtXSTxkgx02AQHI6+EG3svAQD
osbX/Ne3f0jBGX1+Nw2V34lFHsD2a6cLVb5WzDFswzU+fZk5T3lBl7RXsVSw4Rkm
7C5BhJAuUJriF5+1yHax30j+DCCpf7oszI8Wp0x7R3Yj5QxtcRQ=
=rhny
-----END PGP SIGNATURE-----

--n33er6mvlsotrfdd--
