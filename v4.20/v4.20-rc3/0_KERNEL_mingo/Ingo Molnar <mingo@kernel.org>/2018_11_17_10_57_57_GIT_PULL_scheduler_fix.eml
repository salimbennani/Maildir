Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 17 Nov 2018 11:35:16 -0000
Received: from icoremail.net (unknown [209.85.215.172])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH95T9O9b8KOpAQ--.50041S3;
	Sat, 17 Nov 2018 18:58:28 +0800 (CST)
Received: from mail-pg1-f172.google.com (unknown [209.85.215.172])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAXkExS9O9bfmdNAA--.5688S3;
	Sat, 17 Nov 2018 18:58:26 +0800 (CST)
Received: by mail-pg1-f172.google.com with SMTP id v28so1227007pgk.10
        for <xuliker@zju.edu.cn>; Sat, 17 Nov 2018 02:58:26 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:date:from:to:cc
         :subject:message-id:mime-version:content-disposition:user-agent
         :sender:precedence:list-id;
        bh=pKbvBWfHFvjJKzeOPV5U0u8y+E58jxx3hZqtIY2M0s0=;
        b=KzqbPGju0IDW6/L384A3l6me5DINI6RTo5uTynY1qOI3yw9N35K8HGNBXH2Y2xm1P+
         R/ukzbC9y17GhT/eG3BAlmyo3E/GXSm+xXgl+M74gBH3l1RNfElyI4d5y5TCw8zmuUax
         Wattun7YOKbldmVsTsYmimWBiEIawi1PFCjeqPqprGGzuU+ECAalhYx+74e+wC+tnpUC
         M/O6r6GYr/9wMWLym2dWbXf5HV17BGEop/lF072AibsA/Vr7zaSbDseNr8qSBZtPJC61
         pT4PiLhMop4wg+8j/0eYP/k3WMqr8uA7Bm+wAYR2XvLe3ZaRIX5Dm/yli8R3//cZISdx
         WYxg==
X-Gm-Message-State: AGRZ1gInpADfNqv+8WS/jfT4UZ1I6Ko9QggHuX+YFM5ZcypWQCxkVG7g
	TA10XLUzpPnnG1k7XRE1JwRwh29jcP0YKTMjDcCe4Umb7hssSF4=
X-Received: by 2002:a63:f615:: with SMTP id m21mr11455347pgh.428.1542452306335;
        Sat, 17 Nov 2018 02:58:26 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp400173pju;
        Sat, 17 Nov 2018 02:58:25 -0800 (PST)
X-Google-Smtp-Source: AJdET5cSxZKpQ9LZD1eoaMqVKLNtv91IG05AjakNt42s/4NojCMdXe/xUkPWsRXLtX3Uphgq9g/V
X-Received: by 2002:a17:902:1122:: with SMTP id d31-v6mr14718343pla.259.1542452305498;
        Sat, 17 Nov 2018 02:58:25 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542452305; cv=none;
        d=google.com; s=arc-20160816;
        b=aKEt2ba8AZ2LkRqkVCmetx4l/7I3DuihIpFpQGBFQ6nbFOhLJ8r6nC+H+rpnYVeKCh
         +d2btMCvsPo1qw5T3jTOnPCcB2cFbDoc2lalAUNJN5FvziMJ41RJY4CoExvxkRm+rQNm
         cNmgXkp3fGNJ+kYEI7fCLkMZ9ZeH53hGyK0o0ZW0JHvuOTLFPypHgrKy1KLf75hdKhEc
         ZeKjHrTq3DsOiBrd+nyV+Qc9Pd3NHANqsQHR5acCiJSLaEVbdMauAshoJjzLpMenkHlQ
         Sq835CkpQao8pTfD3OAJ0twEUa/WsHzTf2OiCDRW970gnTrLWcwHfBoneovCVvsSYShf
         yKWQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:content-disposition
         :mime-version:message-id:subject:cc:to:from:date:dkim-signature;
        bh=pKbvBWfHFvjJKzeOPV5U0u8y+E58jxx3hZqtIY2M0s0=;
        b=bo4ZQJT7SOOEpze6tCtkbip+muOCZkLJnfcEpzeBJycqW2iqHG72ygTVASOG7u9ECo
         1wHTO1WvcWdnfM954j5GbTsmOuoIfmCUMVscc14aWYTXWMgPdSRNObKy+qXwSnLnTB8p
         JpD1ubnEB5e02kCUtPHoyX8cuf+9YsB1k8hCV/VSbo4H9NkhQvroA2WHEdkga+h2QJkj
         vd3S5fvJqzzhgV1cUm67j/O7IMkCMM01RP/xzrQBvp7v/6ioL2Z0NDCLl9bKo+uWnHIv
         PXD7P93BHdQ6RjvRQDCP262IJcV+H8koeCX60bE/Bk/zm1BDxO0ZL24kA13yBXDCqYRI
         4JXQ==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=fail header.i=@gmail.com header.s=20161025 header.b=MHtzQs2c;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id b2si32481313pgq.275.2018.11.17.02.58.10;
        Sat, 17 Nov 2018 02:58:25 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726233AbeKQVOW (ORCPT <rfc822;javier.barrio.mart@gmail.com>
        + 99 others); Sat, 17 Nov 2018 16:14:22 -0500
Received: from mail-wr1-f66.google.com ([209.85.221.66]:33110 "EHLO
        mail-wr1-f66.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725927AbeKQVOV (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 17 Nov 2018 16:14:21 -0500
Received: by mail-wr1-f66.google.com with SMTP id u9-v6so27325434wrr.0
        for <linux-kernel@vger.kernel.org>; Sat, 17 Nov 2018 02:58:01 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=sender:date:from:to:cc:subject:message-id:mime-version
         :content-disposition:user-agent;
        bh=pKbvBWfHFvjJKzeOPV5U0u8y+E58jxx3hZqtIY2M0s0=;
        b=MHtzQs2cyOuOF7GbmQ5olbpX1b9n0Qi28mUhCNkTgGxivT+cyv3i4L86bnhhl9KpkL
         tJepAXuH64J0P9pHLNP16FtAAK90SiHjqQ1Zig8oaENEi3YzbyCvXjmOy0tfFigEcxIW
         G8yPoEToOJjYEVLiFhMMItfd8aKXzgUu1qkJsv3TnrMeqA5CrUxj1wAHScc/tDvkjuE/
         7p/lqhXK3Zt0n4aAEZ+8aiH4y223IsJMRJnW8YcVZSnn0Pow77V4L/WCNIhBF8k+Dkp6
         zzT3mSlx9XhiTU5hhxNaTMVHnAHZHjHLwuut8AH4DxUjRkKRS2Hb5GI+enY9nZoiFudO
         2VxA==
X-Received: by 2002:adf:ce86:: with SMTP id r6mr12648941wrn.257.1542452280770;
        Sat, 17 Nov 2018 02:58:00 -0800 (PST)
Received: from gmail.com (2E8B0CD5.catv.pool.telekom.hu. [46.139.12.213])
        by smtp.gmail.com with ESMTPSA id 78-v6sm13905638wma.30.2018.11.17.02.57.59
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Sat, 17 Nov 2018 02:58:00 -0800 (PST)
Date: Sat, 17 Nov 2018 11:57:57 +0100
From: Ingo Molnar <mingo@kernel.org>
To: Linus Torvalds <torvalds@linux-foundation.org>
Cc: linux-kernel@vger.kernel.org,
        Peter Zijlstra <a.p.zijlstra@chello.nl>,
        Thomas Gleixner <tglx@linutronix.de>,
        Andrew Morton <akpm@linux-foundation.org>
Subject: [GIT PULL] scheduler fix
Message-ID: <20181117105757.GA40115@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.9.4 (2018-02-28)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAXkExS9O9bfmdNAA--.5688S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3JFW5Xw1fuF4rCF1rKFy7GFg_yoW7WFWUpa
	93K3W3t3yUJw42ga4fJr4kAr15KrykWa43Gr43AFyFyFWYyw43WFn2y3Z3ZryfG3s7Xa42
	yr47KFyDCF1DtaUanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPYb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK
	6IIF6r4DMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWUJVWUCwCYIxAIcV
	C0I7IYx2IY6xkF7I0E14v26r1j6r4UMxvI42IY6I8E87Iv67AKxVWxJr0_GcWlcIIF0xvE
	x4A2jsIEc7CjxVAFwI0_Cr1j6rxdMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI0EY4vE52
	x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAFwI0_Jr0_
	Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUAVWUtwCIc40Y0x0EwI
	xGrwCI42IY6xAIw20EY4v20xvaj40_Zr0_Wr1UYxBIdaVFxhVjvjDU0xZFpf9x07bHZXwU
	UUUU=

Linus,

Please pull the latest sched-urgent-for-linus git tree from:

   git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git sched-urgent-for-linus

   # HEAD: c469933e772132aad040bd6a2adc8edf9ad6f825 sched/fair: Fix cpu_util_wake() for 'execl' type workloads

Fix an exec() related scalability/performance regression, which was 
caused by incorrectly calculating load and migrating tasks on exec() when 
they shouldn't be.

 Thanks,

	Ingo

------------------>
Patrick Bellasi (1):
      sched/fair: Fix cpu_util_wake() for 'execl' type workloads


 kernel/sched/fair.c | 62 +++++++++++++++++++++++++++++++++++++++++------------
 1 file changed, 48 insertions(+), 14 deletions(-)

diff --git a/kernel/sched/fair.c b/kernel/sched/fair.c
index 3648d0300fdf..ac855b2f4774 100644
--- a/kernel/sched/fair.c
+++ b/kernel/sched/fair.c
@@ -5674,11 +5674,11 @@ static int wake_affine(struct sched_domain *sd, struct task_struct *p,
 	return target;
 }
 
-static unsigned long cpu_util_wake(int cpu, struct task_struct *p);
+static unsigned long cpu_util_without(int cpu, struct task_struct *p);
 
-static unsigned long capacity_spare_wake(int cpu, struct task_struct *p)
+static unsigned long capacity_spare_without(int cpu, struct task_struct *p)
 {
-	return max_t(long, capacity_of(cpu) - cpu_util_wake(cpu, p), 0);
+	return max_t(long, capacity_of(cpu) - cpu_util_without(cpu, p), 0);
 }
 
 /*
@@ -5738,7 +5738,7 @@ find_idlest_group(struct sched_domain *sd, struct task_struct *p,
 
 			avg_load += cfs_rq_load_avg(&cpu_rq(i)->cfs);
 
-			spare_cap = capacity_spare_wake(i, p);
+			spare_cap = capacity_spare_without(i, p);
 
 			if (spare_cap > max_spare_cap)
 				max_spare_cap = spare_cap;
@@ -5889,8 +5889,8 @@ static inline int find_idlest_cpu(struct sched_domain *sd, struct task_struct *p
 		return prev_cpu;
 
 	/*
-	 * We need task's util for capacity_spare_wake, sync it up to prev_cpu's
-	 * last_update_time.
+	 * We need task's util for capacity_spare_without, sync it up to
+	 * prev_cpu's last_update_time.
 	 */
 	if (!(sd_flag & SD_BALANCE_FORK))
 		sync_entity_load_avg(&p->se);
@@ -6216,10 +6216,19 @@ static inline unsigned long cpu_util(int cpu)
 }
 
 /*
- * cpu_util_wake: Compute CPU utilization with any contributions from
- * the waking task p removed.
+ * cpu_util_without: compute cpu utilization without any contributions from *p
+ * @cpu: the CPU which utilization is requested
+ * @p: the task which utilization should be discounted
+ *
+ * The utilization of a CPU is defined by the utilization of tasks currently
+ * enqueued on that CPU as well as tasks which are currently sleeping after an
+ * execution on that CPU.
+ *
+ * This method returns the utilization of the specified CPU by discounting the
+ * utilization of the specified task, whenever the task is currently
+ * contributing to the CPU utilization.
  */
-static unsigned long cpu_util_wake(int cpu, struct task_struct *p)
+static unsigned long cpu_util_without(int cpu, struct task_struct *p)
 {
 	struct cfs_rq *cfs_rq;
 	unsigned int util;
@@ -6231,7 +6240,7 @@ static unsigned long cpu_util_wake(int cpu, struct task_struct *p)
 	cfs_rq = &cpu_rq(cpu)->cfs;
 	util = READ_ONCE(cfs_rq->avg.util_avg);
 
-	/* Discount task's blocked util from CPU's util */
+	/* Discount task's util from CPU's util */
 	util -= min_t(unsigned int, util, task_util(p));
 
 	/*
@@ -6240,14 +6249,14 @@ static unsigned long cpu_util_wake(int cpu, struct task_struct *p)
 	 * a) if *p is the only task sleeping on this CPU, then:
 	 *      cpu_util (== task_util) > util_est (== 0)
 	 *    and thus we return:
-	 *      cpu_util_wake = (cpu_util - task_util) = 0
+	 *      cpu_util_without = (cpu_util - task_util) = 0
 	 *
 	 * b) if other tasks are SLEEPING on this CPU, which is now exiting
 	 *    IDLE, then:
 	 *      cpu_util >= task_util
 	 *      cpu_util > util_est (== 0)
 	 *    and thus we discount *p's blocked utilization to return:
-	 *      cpu_util_wake = (cpu_util - task_util) >= 0
+	 *      cpu_util_without = (cpu_util - task_util) >= 0
 	 *
 	 * c) if other tasks are RUNNABLE on that CPU and
 	 *      util_est > cpu_util
@@ -6260,8 +6269,33 @@ static unsigned long cpu_util_wake(int cpu, struct task_struct *p)
 	 * covered by the following code when estimated utilization is
 	 * enabled.
 	 */
-	if (sched_feat(UTIL_EST))
-		util = max(util, READ_ONCE(cfs_rq->avg.util_est.enqueued));
+	if (sched_feat(UTIL_EST)) {
+		unsigned int estimated =
+			READ_ONCE(cfs_rq->avg.util_est.enqueued);
+
+		/*
+		 * Despite the following checks we still have a small window
+		 * for a possible race, when an execl's select_task_rq_fair()
+		 * races with LB's detach_task():
+		 *
+		 *   detach_task()
+		 *     p->on_rq = TASK_ON_RQ_MIGRATING;
+		 *     ---------------------------------- A
+		 *     deactivate_task()                   \
+		 *       dequeue_task()                     + RaceTime
+		 *         util_est_dequeue()              /
+		 *     ---------------------------------- B
+		 *
+		 * The additional check on "current == p" it's required to
+		 * properly fix the execl regression and it helps in further
+		 * reducing the chances for the above race.
+		 */
+		if (unlikely(task_on_rq_queued(p) || current == p)) {
+			estimated -= min_t(unsigned int, estimated,
+					   (_task_util_est(p) | UTIL_AVG_UNCHANGED));
+		}
+		util = max(util, estimated);
+	}
 
 	/*
 	 * Utilization (estimated) can exceed the CPU capacity, thus let's
