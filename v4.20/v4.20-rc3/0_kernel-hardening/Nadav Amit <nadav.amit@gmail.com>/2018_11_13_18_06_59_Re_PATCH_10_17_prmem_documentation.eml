Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 14 Nov 2018 00:36:01 -0000
Received: from icoremail.net (unknown [209.85.214.173])
	by mail-app2 (Coremail) with SMTP id by_KCgC3f_kNE+tbg_mHAQ--.40887S3;
	Wed, 14 Nov 2018 02:08:14 +0800 (CST)
Received: from mail-pl1-f173.google.com (unknown [209.85.214.173])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBnPjoLE+tbiqk5AA--.4614S3;
	Wed, 14 Nov 2018 02:08:11 +0800 (CST)
Received: by mail-pl1-f173.google.com with SMTP id w24-v6so6405940plq.3
        for <xuliker@zju.edu.cn>; Tue, 13 Nov 2018 10:08:11 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:mime-version:subject
         :from:in-reply-to:date:cc:content-transfer-encoding:message-id
         :references:to:sender:precedence:list-id;
        bh=hMmS1nZS3LXt+WsRx1ONzsmAETiXZKuLi7jcwbuIYLI=;
        b=rk2oSAyaODrdZ9EsclOJNRAxn3gWuogzm7nfIj8jQB+q+2XMwL48+P16c2tJ7+H8eD
         fDD7oB6fDCQSQrzq/VlAfIhxZv1O6LrriX/blHSXfLrSrsBOvX0Y//2iurtzExh/GUDM
         btdgJQnzXaUmw/nmsAsuj1g0zGEbC4Ms6iq41td374POfsNChuAophsDNaUWh53U1sQ/
         cZwz0GMnA/TqbEhCKCb7kLDvYnEL4O0wpPjHt2HfX4TdCrcCpIMO4EZijX+XqmNzkMWK
         6oQSOWzQ8VTNoj9c1tuWxTNR1Y8YpO5qMjs3sZyo2N+IBNH3+qW2KchhBWeVEMK2ORbN
         2hwA==
X-Gm-Message-State: AGRZ1gIa3pkh4zz/aaf0gT8ib4Mz6b0/Ou4cwn1AwNyLtziencVMMqqi
	J5OBMjh9yfl188J9vDZUrObEw0IyETCwPvmkQ00zy6jPwfDxEroL/Q==
X-Received: by 2002:a17:902:6686:: with SMTP id e6-v6mr6031583plk.173.1542132490795;
        Tue, 13 Nov 2018 10:08:10 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp4801188pjt;
        Tue, 13 Nov 2018 10:08:09 -0800 (PST)
X-Google-Smtp-Source: AJdET5dArMj7u/3xI91InmjtL6ts0KJPdWysFurmky6TMHGv6Huv40500PRyCSKgk/9tT8OcXhxy
X-Received: by 2002:a62:1308:: with SMTP id b8-v6mr6005055pfj.215.1542132489653;
        Tue, 13 Nov 2018 10:08:09 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542132489; cv=none;
        d=google.com; s=arc-20160816;
        b=B3UHEQ9BrP+Rg18NLL9xhjUuwpu8hKyM6xpW2RH5OO92ouNF/KOz6WKUlMjU0K5h1H
         1w8ieHbqHQWIGQ43fvQZx4LMjS9YUriAjI715279gLG3bXH7D+CCnFE8IG40b2EY0X/4
         iCzGMAHEgPcIgCa+AHr5D+/+BBYxJRnkYpl/a707TN0yPuMuSHCBmfV9oozXeBFvrfDb
         mJ/vf1DTO9+knscCXoi/uU8Y+40Q1a0aAgBMstNauzhOQWcisKF5NVOVTtfAR6Lq+PQt
         ngsgYFU2szWA4SL29bAbz7OiiAX+WNGLvNi8BETeer8IAQgjBRiWpbkO9TF9lCGwANuG
         +Fgw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:to:references:message-id
         :content-transfer-encoding:cc:date:in-reply-to:from:subject
         :mime-version:dkim-signature;
        bh=hMmS1nZS3LXt+WsRx1ONzsmAETiXZKuLi7jcwbuIYLI=;
        b=eACz+P2I32A+sMTFvhmdVYX4tnqhycQHWMRxce/O8o0V+rOcwt+YuvOnTWyXtr6ecd
         GdfOjJud1//g8elVF+0N5WbAHE3WUJBM4ZSKo71h68O7bRxMJqiynNTpkmaiDvPVKJm9
         UuOSBpu0NTXj+j6s0onVgQlwsnnu0CTa4mFAo+tQieMK6EYq+Sqf9KCqa38Lc1/cqJRc
         U0aqjvBqmnsejDSHL9wbc9Q34NRxs1MmdEFHN1FEi3bVhCZsb82PfYh/uEhuGJZSpYaz
         BhtSExVAozm1jI85ZUTn3AR78GU30t/NrwcNnzmU1XbbpshuiUd3RxLR2WiOeU6K7/M3
         CXHg==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@gmail.com header.s=20161025 header.b=eBML4S+e;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=NONE sp=QUARANTINE dis=NONE) header.from=gmail.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id 189si19887697pgh.320.2018.11.13.10.07.55;
        Tue, 13 Nov 2018 10:08:09 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1732800AbeKNEGS (ORCPT <rfc822;lrx0014@gmail.com> + 99 others);
        Tue, 13 Nov 2018 23:06:18 -0500
Received: from mail-pf1-f196.google.com ([209.85.210.196]:33176 "EHLO
        mail-pf1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1732227AbeKNEGR (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 13 Nov 2018 23:06:17 -0500
Received: by mail-pf1-f196.google.com with SMTP id v68-v6so6461998pfk.0;
        Tue, 13 Nov 2018 10:07:04 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:subject:from:in-reply-to:date:cc
         :content-transfer-encoding:message-id:references:to;
        bh=hMmS1nZS3LXt+WsRx1ONzsmAETiXZKuLi7jcwbuIYLI=;
        b=eBML4S+ekMrRsPHuYROhWihBN3yGCz/36qKQZdjajR/6TPTfX28Yzt6rP+1JJWvZQY
         7mVC1xH7cR/J8A0bLuO37qVCID2q5xQA4Iw48k+FdA+ezUFZCBqmQ1uBHmI5n3KXpRNJ
         2PD2UO6gfVb61N8DF244wtTEui7iXzepYZiYs7+8dfN+wNROhHfLTr1At3s44za94YMM
         TjTI9oDqUpclxhSVwaeXjTlbTs0pGNgjEwDL0/F4pCa4Agt06KWHPyxLlQTaw7KVtHK5
         IuYAXRNjsMI7qFjLaeWIQBhMtqi9XCpEhgp0sKTwEKHHcv8/GrmAoM6dbollq6OOaicK
         mFWg==
X-Received: by 2002:a62:65c3:: with SMTP id z186-v6mr6281147pfb.206.1542132424077;
        Tue, 13 Nov 2018 10:07:04 -0800 (PST)
Received: from [10.2.51.78] ([208.91.2.1])
        by smtp.gmail.com with ESMTPSA id p9-v6sm15337649pfa.22.2018.11.13.10.07.01
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 13 Nov 2018 10:07:03 -0800 (PST)
Content-Type: text/plain;
        charset=us-ascii
Mime-Version: 1.0 (Mac OS X Mail 11.5 \(3445.9.1\))
Subject: Re: [PATCH 10/17] prmem: documentation
From: Nadav Amit <nadav.amit@gmail.com>
In-Reply-To: <CALCETrWWcfLK4W3mn0bavzejmMBVKMX29aAUA3+VPQ8m9vmfhw@mail.gmail.com>
Date: Tue, 13 Nov 2018 10:06:59 -0800
Cc: Igor Stoppa <igor.stoppa@gmail.com>,
        Kees Cook <keescook@chromium.org>,
        Peter Zijlstra <peterz@infradead.org>,
        Mimi Zohar <zohar@linux.vnet.ibm.com>,
        Matthew Wilcox <willy@infradead.org>,
        Dave Chinner <david@fromorbit.com>,
        James Morris <jmorris@namei.org>,
        Michal Hocko <mhocko@kernel.org>,
        Kernel Hardening <kernel-hardening@lists.openwall.com>,
        linux-integrity <linux-integrity@vger.kernel.org>,
        LSM List <linux-security-module@vger.kernel.org>,
        Igor Stoppa <igor.stoppa@huawei.com>,
        Dave Hansen <dave.hansen@linux.intel.com>,
        Jonathan Corbet <corbet@lwn.net>,
        Laura Abbott <labbott@redhat.com>,
        Randy Dunlap <rdunlap@infradead.org>,
        Mike Rapoport <rppt@linux.vnet.ibm.com>,
        "open list:DOCUMENTATION" <linux-doc@vger.kernel.org>,
        LKML <linux-kernel@vger.kernel.org>,
        Thomas Gleixner <tglx@linutronix.de>
Content-Transfer-Encoding: quoted-printable
Message-Id: <E01BD14F-734B-4142-B2E6-50E7A974AEF6@gmail.com>
References: <20181023213504.28905-1-igor.stoppa@huawei.com>
 <20181023213504.28905-11-igor.stoppa@huawei.com>
 <20181026092609.GB3159@worktop.c.hoisthospitality.com>
 <CAGXu5jKCs01jvtvpEFS7R8qCR-5iRqK11kJxLJY99NicGWc4aQ@mail.gmail.com>
 <20181028183126.GB744@hirez.programming.kicks-ass.net>
 <40cd77ce-f234-3213-f3cb-0c3137c5e201@gmail.com>
 <20181030152641.GE8177@hirez.programming.kicks-ass.net>
 <CAGXu5jJftJ+Hq+jrZGHX5CTDLWOog7kGsd_Ne=yMvrRs__skSg@mail.gmail.com>
 <0A7AFB50-9ADE-4E12-B541-EC7839223B65@amacapital.net>
 <6f60afc9-0fed-7f95-a11a-9a2eef33094c@gmail.com>
 <CALCETrXNckT9W288VXx-6inO5qYn-6dUPocKGcBT0GCO3xi3ZQ@mail.gmail.com>
 <386C0CB1-C4B1-43E2-A754-DA8DBE4FB3CB@gmail.com>
 <CALCETrWWcfLK4W3mn0bavzejmMBVKMX29aAUA3+VPQ8m9vmfhw@mail.gmail.com>
To: Andy Lutomirski <luto@amacapital.net>
X-Mailer: Apple Mail (2.3445.9.1)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBnPjoLE+tbiqk5AA--.4614S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3XrW8Xr4rKryDtr47tF4UCFg_yoWxKF45pF
	WUKa1akr4kJr18Zwn293WYvFyYq395JFW3Wr98G3s5u3s0qF10gF1Iqw4a9a4DWr18WF4a
	vr47tr9rC34DAFJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUmmb7Iv0xC_Cr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_Cr1j6rxdM28EF7xvwVC2z280aVCY1x0267AKxVWxJr0_GcWle2I262IYc4
	CY6c8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_
	Jr0_Jr4lYx0Ex4A2jsIE14v26r1j6r4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvY0x
	0EwIxGrwCjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44l
	c2xSY4AK6IIF6rylc2IjII80xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26ryj6F1UMx
	vI42IY6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1lcIIF0xvEx4A2jsIE14v26r4UJVWxJr1l
	cIIF0xvEx4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwCF04k20xvY0x0EwIxGrwCF04k20xvEw4
	C26cxK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwCFI7km07C267AK
	xVWUXVWUAwC20s026c02F40E14v26r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67
	AF67kF1VAFwI0_GFv_WrylIxkGc2Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6r1j6r1x
	YxBIdaVFxhVjvjDU0xZFpf9x07bbg4fUUUUU=

From: Andy Lutomirski
Sent: November 13, 2018 at 5:47:16 PM GMT
> To: Nadav Amit <nadav.amit@gmail.com>
> Cc: Igor Stoppa <igor.stoppa@gmail.com>, Kees Cook =
<keescook@chromium.org>, Peter Zijlstra <peterz@infradead.org>, Mimi =
Zohar <zohar@linux.vnet.ibm.com>, Matthew Wilcox <willy@infradead.org>, =
Dave Chinner <david@fromorbit.com>, James Morris <jmorris@namei.org>, =
Michal Hocko <mhocko@kernel.org>, Kernel Hardening =
<kernel-hardening@lists.openwall.com>, linux-integrity =
<linux-integrity@vger.kernel.org>, LSM List =
<linux-security-module@vger.kernel.org>, Igor Stoppa =
<igor.stoppa@huawei.com>, Dave Hansen <dave.hansen@linux.intel.com>, =
Jonathan Corbet <corbet@lwn.net>, Laura Abbott <labbott@redhat.com>, =
Randy Dunlap <rdunlap@infradead.org>, Mike Rapoport =
<rppt@linux.vnet.ibm.com>, open list:DOCUMENTATION =
<linux-doc@vger.kernel.org>, LKML <linux-kernel@vger.kernel.org>, Thomas =
Gleixner <tglx@linutronix.de>
> Subject: Re: [PATCH 10/17] prmem: documentation
>=20
>=20
> On Tue, Nov 13, 2018 at 9:43 AM Nadav Amit <nadav.amit@gmail.com> =
wrote:
>> From: Andy Lutomirski
>> Sent: November 13, 2018 at 5:16:09 PM GMT
>>> To: Igor Stoppa <igor.stoppa@gmail.com>
>>> Cc: Kees Cook <keescook@chromium.org>, Peter Zijlstra =
<peterz@infradead.org>, Nadav Amit <nadav.amit@gmail.com>, Mimi Zohar =
<zohar@linux.vnet.ibm.com>, Matthew Wilcox <willy@infradead.org>, Dave =
Chinner <david@fromorbit.com>, James Morris <jmorris@namei.org>, Michal =
Hocko <mhocko@kernel.org>, Kernel Hardening =
<kernel-hardening@lists.openwall.com>, linux-integrity =
<linux-integrity@vger.kernel.org>, LSM List =
<linux-security-module@vger.kernel.org>, Igor Stoppa =
<igor.stoppa@huawei.com>, Dave Hansen <dave.hansen@linux.intel.com>, =
Jonathan Corbet <corbet@lwn.net>, Laura Abbott <labbott@redhat.com>, =
Randy Dunlap <rdunlap@infradead.org>, Mike Rapoport =
<rppt@linux.vnet.ibm.com>, open list:DOCUMENTATION =
<linux-doc@vger.kernel.org>, LKML <linux-kernel@vger.kernel.org>, Thomas =
Gleixner <tglx@linutronix.de>
>>> Subject: Re: [PATCH 10/17] prmem: documentation
>>>=20
>>>=20
>>> On Tue, Nov 13, 2018 at 6:25 AM Igor Stoppa <igor.stoppa@gmail.com> =
wrote:
>>>> Hello,
>>>> I've been studying v4 of the patch-set [1] that Nadav has been =
working on.
>>>> Incidentally, I think it would be useful to cc also the
>>>> security/hardening ml.
>>>> The patch-set seems to be close to final, so I am resuming this =
discussion.
>>>>=20
>>>> On 30/10/2018 19:06, Andy Lutomirski wrote:
>>>>=20
>>>>> I support the addition of a rare-write mechanism to the upstream =
kernel.  And I think that there is only one sane way to implement it: =
using an mm_struct. That mm_struct, just like any sane mm_struct, should =
only differ from init_mm in that it has extra mappings in the *user* =
region.
>>>>=20
>>>> After reading the code, I see what you meant.
>>>> I think I can work with it.
>>>>=20
>>>> But I have a couple of questions wrt the use of this mechanism, in =
the
>>>> context of write rare.
>>>>=20
>>>>=20
>>>> 1) mm_struct.
>>>>=20
>>>> Iiuc, the purpose of the patchset is mostly (only?) to patch kernel =
code
>>>> (live patch?), which seems to happen sequentially and in a =
relatively
>>>> standardized way, like replacing the NOPs specifically placed in =
the
>>>> functions that need patching.
>>>>=20
>>>> This is a bit different from the more generic write-rare case, =
applied
>>>> to data.
>>>>=20
>>>> As example, I have in mind a system where both IMA and SELinux are =
in use.
>>>>=20
>>>> In this system, a file is accessed for the first time.
>>>>=20
>>>> That would trigger 2 things:
>>>> - evaluation of the SELinux rules and probably update of the AVC =
cache
>>>> - IMA measurement and update of the measurements
>>>>=20
>>>> Both of them could be write protected, meaning that they would both =
have
>>>> to be modified through the write rare mechanism.
>>>>=20
>>>> While the events, for 1 specific file, would be sequential, it's =
not
>>>> difficult to imagine that multiple files could be accessed at the =
same time.
>>>>=20
>>>> If the update of the data structures in both IMA and SELinux must =
use
>>>> the same mm_struct, that would have to be somehow regulated and it =
would
>>>> introduce an unnecessary (imho) dependency.
>>>>=20
>>>> How about having one mm_struct for each writer (core or thread)?
>>>=20
>>> I don't think that helps anything.  I think the mm_struct used for
>>> prmem (or rare_write or whatever you want to call it) should be
>>> entirely abstracted away by an appropriate API, so neither SELinux =
nor
>>> IMA need to be aware that there's an mm_struct involved.  It's also
>>> entirely possible that some architectures won't even use an =
mm_struct
>>> behind the scenes -- x86, for example, could have avoided it if =
there
>>> were a kernel equivalent of PKRU.  Sadly, there isn't.
>>>=20
>>>> 2) Iiuc, the purpose of the 2 pages being remapped is that the =
target of
>>>> the patch might spill across the page boundary, however if I deal =
with
>>>> the modification of generic data, I shouldn't (shouldn't I?) assume =
that
>>>> the data will not span across multiple pages.
>>>=20
>>> The reason for the particular architecture of text_poke() is to =
avoid
>>> memory allocation to get it working.  i think that prmem/rare_write
>>> should have each rare-writable kernel address map to a unique user
>>> address, possibly just by offsetting everything by a constant.  For
>>> rare_write, you don't actually need it to work as such until fairly
>>> late in boot, since the rare_writable data will just be writable =
early
>>> on.
>>>=20
>>>> If the data spans across multiple pages, in unknown amount, I =
suppose
>>>> that I should not keep interrupts disabled for an unknown time, as =
it
>>>> would hurt preemption.
>>>>=20
>>>> What I thought, in my initial patch-set, was to iterate over each =
page
>>>> that must be written to, in a loop, re-enabling interrupts =
in-between
>>>> iterations, to give pending interrupts a chance to be served.
>>>>=20
>>>> This would mean that the data being written to would not be =
consistent,
>>>> but it's a problem that would have to be addressed anyways, since =
it can
>>>> be still read by other cores, while the write is ongoing.
>>>=20
>>> This probably makes sense, except that enabling and disabling
>>> interrupts means you also need to restore the original mm_struct =
(most
>>> likely), which is slow.  I don't think there's a generic way to =
check
>>> whether in interrupt is pending without turning interrupts on.
>>=20
>> I guess that enabling IRQs might break some hidden assumptions in the =
code,
>> but is there a fundamental reason that IRQs need to be disabled? =
use_mm()
>> got them enabled, although it is only suitable for kernel threads.
>=20
> For general rare-writish stuff, I don't think we want IRQs running
> with them mapped anywhere for write.  For AVC and IMA, I'm less sure.

Oh.. Of course. It is sort of a measure to prevent a single =
malicious/faulty
write from corrupting the sensitive memory. Doing so limits the code =
that
can compromise the security by a write to the protected data-structures
(rephrasing for myself).

I think I should add it as a comment in your patch.=
