Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 14 Nov 2018 14:46:33 -0000
Received: from icoremail.net (unknown [209.85.210.169])
	by mail-app2 (Coremail) with SMTP id by_KCgD3_2OcHexbElWQAQ--.42446S3;
	Wed, 14 Nov 2018 21:05:33 +0800 (CST)
Received: from mail-pf1-f169.google.com (unknown [209.85.210.169])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBnTkqaHexbPb8+AA--.12209S3;
	Wed, 14 Nov 2018 21:05:31 +0800 (CST)
Received: by mail-pf1-f169.google.com with SMTP id e22-v6so7889479pfn.8
        for <xuliker@zju.edu.cn>; Wed, 14 Nov 2018 05:05:30 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :thread-topic:thread-index:date:message-id:references:in-reply-to
         :accept-language:content-language:spamdiagnosticoutput
         :spamdiagnosticmetadata:content-transfer-encoding:mime-version
         :sender:precedence:list-id;
        bh=Z6DOobYklP+BYXYLfJ2zwSqtoWLVDTq1nfFK7PPMcVE=;
        b=i/lh1XgwYvwUHNjCzU9xdFA34gDIwYOY19vri2201kZvmA3IxDQ+3L63SSB2DCUlpV
         HkMBFmyWDILCsAfnhmVb9lr5X8uup7lkcP1AEDBRiqOT1q8C5UoxDZuox0tBlEfIl9kK
         BFBdD05TQJvE5F+3PRRBEdHp86ZtFQnMa40CyME8uwY+ksmLB67lgZm+nRJJo4x7KWCI
         SarnlVVjTLF0uBjI/Vr9otGgTyU1qNF8txQI9qnKrZ4URIB5QlgBitB2lH9U5upMc2di
         7TiBDbOnH9YP5hcaaa8eFy6/ur+EixRqWZStZKGsYzvDQRpsrjbEzpbAOtUmddiWi3r6
         EUNQ==
X-Gm-Message-State: AGRZ1gKZq+Kjo6T6FqMiB3RYWjvqKuOjGUz4oM/pr0trxHMnMpzmBa2u
	QluNIRpC2qmm0zpo/ovnpnl26hsu3W2/6zdpROv8mrTwpH4JN6Mxhg==
X-Received: by 2002:a63:4044:: with SMTP id n65mr1645816pga.90.1542200730562;
        Wed, 14 Nov 2018 05:05:30 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp5775047pjt;
        Wed, 14 Nov 2018 05:05:29 -0800 (PST)
X-Google-Smtp-Source: AJdET5e5cD4bn/vdv6a4mfAHlK0MvdOo6orV6Q77w+2vLRYievaROmZjliL0wYDMe7fOhlmAn7vm
X-Received: by 2002:a63:6a42:: with SMTP id f63-v6mr1744644pgc.48.1542200729238;
        Wed, 14 Nov 2018 05:05:29 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542200729; cv=none;
        d=google.com; s=arc-20160816;
        b=zedr42PtTmeMDwM8AE6zoL00IgDNqp+T9sKYmeRU316ZliiuLFUt3A4yXDZ2L/7AzH
         V4Yk306kzHkq3a2HpJfoDF1bcYgilddlMOlEMzgBhQ8EiHhXK3/HdJwWE9UNeHNFaKIE
         AEueOj234RMqa8qmhMxXDO5PIj53D2wP3D3kAGJChtr9Wm7GjJieVppB9h4yhxJ63SsM
         IB56VjHhB6cQdDuf9RIs+xrsQ3SH3t1UVOBkqMTeku/JIKvDD7zH4jTvYiEFDjaEc7es
         40xjuhPRlcUYMU94lP9PAdi9f/0iyNKTsKkFPSndZ5vvOeIUqiJOk48bi+5b410Uh3Uz
         fNNA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:mime-version:content-transfer-encoding
         :spamdiagnosticmetadata:spamdiagnosticoutput:content-language
         :accept-language:in-reply-to:references:message-id:date:thread-index
         :thread-topic:subject:cc:to:from:dkim-signature;
        bh=Z6DOobYklP+BYXYLfJ2zwSqtoWLVDTq1nfFK7PPMcVE=;
        b=wBD99UhXjyMx9QgGraB09QazX7LRDyZVHk+WIxKC5zBjshAWAP7QXzPRROo4IAX2ix
         JFYP+a+W9ZEpkeA15lga7Qx0ZKJ0u1BOt43v/r4O8HYHdoNn68wg0yxBq+yc9LomO2zJ
         CAplPM5oFVWOyT6Tob5YA3BYVIOEToE8nTo9eZoDItQJoxSmGjqDNZCeTjPgUle0qsvd
         16dsWQxff5jUEJQ9P9j52ShIF/PtnCz5xhzBGm7iW6tOyYTTA38b78Wd4+ggpCKkVrMI
         A62mme/+BSiv39mvk5weC0tj3ftivp1GqPbSDGaSZT4+EjEoILJBwiAaLdRQcRgveXz7
         L3xQ==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@nxp.com header.s=selector1 header.b=UK4kTt8f;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=nxp.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id e7si6700431pgv.499.2018.11.14.05.05.13;
        Wed, 14 Nov 2018 05:05:29 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1732684AbeKNXIR (ORCPT <rfc822;docz2a@gmail.com> + 99 others);
        Wed, 14 Nov 2018 18:08:17 -0500
Received: from mail-eopbgr70083.outbound.protection.outlook.com ([40.107.7.83]:34080
        "EHLO EUR04-HE1-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1733010AbeKNXIQ (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 14 Nov 2018 18:08:16 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=nxp.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=Z6DOobYklP+BYXYLfJ2zwSqtoWLVDTq1nfFK7PPMcVE=;
 b=UK4kTt8fE96DMpSjsYF5tCIpfXn+Y0QctX5Nr34nCoRoml5sbl6p83UORxD38+keP5yiFw7E5se9PvJb7s44qVKm4gtLwEEeAnhNmbvSyakEKuyBsiC5PAn1b83fRdzGmB+vdh0doTmXiEeXUDjIyl4X8oo2hDYcJrRMuAziicU=
Received: from AM0PR04MB4211.eurprd04.prod.outlook.com (52.134.126.21) by
 AM0PR04MB5985.eurprd04.prod.outlook.com (20.178.114.11) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.1294.20; Wed, 14 Nov 2018 13:02:04 +0000
Received: from AM0PR04MB4211.eurprd04.prod.outlook.com
 ([fe80::797a:f972:9281:6d10]) by AM0PR04MB4211.eurprd04.prod.outlook.com
 ([fe80::797a:f972:9281:6d10%2]) with mapi id 15.20.1294.045; Wed, 14 Nov 2018
 13:02:04 +0000
From: "A.s. Dong" <aisheng.dong@nxp.com>
To: "linux-clk@vger.kernel.org" <linux-clk@vger.kernel.org>
CC: "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        "linux-arm-kernel@lists.infradead.org" 
        <linux-arm-kernel@lists.infradead.org>,
        "sboyd@kernel.org" <sboyd@kernel.org>,
        "mturquette@baylibre.com" <mturquette@baylibre.com>,
        "shawnguo@kernel.org" <shawnguo@kernel.org>,
        Anson Huang <anson.huang@nxp.com>,
        Jacky Bai <ping.bai@nxp.com>, dl-linux-imx <linux-imx@nxp.com>,
        "A.s. Dong" <aisheng.dong@nxp.com>
Subject: [PATCH V6 8/9] clk: imx: implement new clk_hw based APIs
Thread-Topic: [PATCH V6 8/9] clk: imx: implement new clk_hw based APIs
Thread-Index: AQHUfBo9jbT+xNSQsUSnAwc8nkoIQg==
Date: Wed, 14 Nov 2018 13:02:04 +0000
Message-ID: <1542200198-3017-9-git-send-email-aisheng.dong@nxp.com>
References: <1542200198-3017-1-git-send-email-aisheng.dong@nxp.com>
In-Reply-To: <1542200198-3017-1-git-send-email-aisheng.dong@nxp.com>
Accept-Language: zh-CN, en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-mailer: git-send-email 2.7.4
x-clientproxiedby: HK0PR01CA0057.apcprd01.prod.exchangelabs.com
 (2603:1096:203:a6::21) To AM0PR04MB4211.eurprd04.prod.outlook.com
 (2603:10a6:208:66::21)
x-ms-exchange-messagesentrepresentingtype: 1
x-originating-ip: [119.31.174.66]
x-ms-publictraffictype: Email
x-microsoft-exchange-diagnostics: 1;AM0PR04MB5985;6:+XtNbRyrOJDDUnbnl8n8ystBGjjMxnL07JO6bauiGCBgbNqr6s8FAVJgsBGhjV6aUqq3i/XeJLO/aGz/FTXUVOAsV1VDweCJpPZjPA49iRZouPN9m+AB4BYE1pqpfoXfWBYvRL5njt9EEcKG7KL/2v7hQFaQ9ctAxATO4Y6gYlD3lzxbRH3ibdKyStaWuejnX/vIJ8kIrw7AjcuHHi7+OAU0DyaLNLIgr+O6kI2YGcGr+if9TuL0pjsILyr+GNEsE6asHDy+pU4BxkZk8Avefbj+AhrdPmpKFboEJiwLHoR39uhxSL4c/rbOFxqvS+dpsyjItwPvFAT3dJnoFuG3Ck5U5reM35GtCsa/lx6gZIXIr+UuKmND8xGCk9AR6eGtvJWO32Qo8Wlrp4+kfZeLEgBFC3ALtNd4D4pIj2WatV5vBGJlPDvmaQinFKOVrr+PtRXYXbtTwnB816EzUNeIqg==;5:XNhK8RJILWWfdM9E2lNM7FOxwEqWHvpx9phTMFrlHuyjaXA5GRY/u8xnGokZ5AdhfuaEjvzXrI9qSKJ45dQR2G/tcjumpT73x4dIVaolvaZkr/XMYFHAi4plyYrkXoy9LRU0fMw/bP0gRsByFJrC2zQ5HT0nNvTEkK26EClimkA=;7:ETMpkgLJbyshKGSKtpzPeXzDSev5kK5cbIQihE0uZvxQPRYQoSoyoonlA7xO5QLtTLheOfL2JJXapJNm8mXZ+IlSz3lQg4UczxnrqKFIdEaHZbKzlumgCWu0uppTneXf9yxZIB2iD8rBiiHJevkOKg==
x-ms-office365-filtering-correlation-id: 7ed9a4f8-f527-44a7-ce35-08d64a315f9b
x-ms-office365-filtering-ht: Tenant
x-microsoft-antispam: BCL:0;PCL:0;RULEID:(2390098)(7020095)(4652040)(8989299)(5600074)(711020)(4618075)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(2017052603328)(7153060)(7193020);SRVR:AM0PR04MB5985;
x-ms-traffictypediagnostic: AM0PR04MB5985:
x-microsoft-antispam-prvs: <AM0PR04MB59859927258AB1813A51141C80C30@AM0PR04MB5985.eurprd04.prod.outlook.com>
x-exchange-antispam-report-test: UriScan:(185117386973197);
x-ms-exchange-senderadcheck: 1
x-exchange-antispam-report-cfa-test: BCL:0;PCL:0;RULEID:(8211001083)(6040522)(2401047)(8121501046)(5005006)(3231382)(944501410)(52105112)(3002001)(10201501046)(93006095)(93001095)(6055026)(148016)(149066)(150057)(6041310)(201703131423095)(201702281528075)(20161123555045)(201703061421075)(201703061406153)(20161123558120)(20161123562045)(20161123564045)(20161123560045)(201708071742011)(7699051)(76991095);SRVR:AM0PR04MB5985;BCL:0;PCL:0;RULEID:;SRVR:AM0PR04MB5985;
x-forefront-prvs: 085634EFF4
x-forefront-antispam-report: SFV:NSPM;SFS:(10009020)(136003)(346002)(396003)(366004)(39860400002)(376002)(54534003)(189003)(199004)(6916009)(305945005)(316002)(446003)(54906003)(476003)(14454004)(2616005)(68736007)(5660300001)(11346002)(53936002)(14444005)(8676002)(486006)(105586002)(7736002)(256004)(186003)(25786009)(4326008)(2906002)(99286004)(6512007)(6116002)(52116002)(81156014)(66066001)(81166006)(3846002)(76176011)(5640700003)(50226002)(386003)(6506007)(102836004)(71200400001)(71190400001)(26005)(86362001)(106356001)(2351001)(2900100001)(2501003)(6436002)(6486002)(97736004)(8936002)(36756003)(478600001);DIR:OUT;SFP:1101;SCL:1;SRVR:AM0PR04MB5985;H:AM0PR04MB4211.eurprd04.prod.outlook.com;FPR:;SPF:None;LANG:en;PTR:InfoNoRecords;MX:1;A:1;
received-spf: None (protection.outlook.com: nxp.com does not designate
 permitted sender hosts)
x-microsoft-antispam-message-info: y6Hz6jclZKCOJIeGinbI20ezF9DACdURvGOcCM1Iqop3KSJ2jPFLIsZ0+3kCy7v30UDBu5yrJcna7mNqQlNEpiap63N++N0wFUCrWvJNaw/5G36Z97coEXCTTWck6xbSO+lWUeL5s5TiMYBcENPGBYsUAgeBJvDTbhGmo5CJQkZvANFDzzVfadZ4IcoS3EaMo7uhYdVjuRsSnEkX63oKY55hEGEp8FblLDqHfuWxPOwxKGx6qE3PY+cqYfhmz93zDBXo8XrsfRj92raHvG53f1ZohmxVlTfTbO0uBd4IeHHS7iA0Y9yfPntSXJXvrxSkVXsSkhqwqKxVaPAjUEf+yOJTe4xlZeTJj4HMRcJiF/w=
spamdiagnosticoutput: 1:99
spamdiagnosticmetadata: NSPM
Content-Type: text/plain; charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
X-OriginatorOrg: nxp.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 7ed9a4f8-f527-44a7-ce35-08d64a315f9b
X-MS-Exchange-CrossTenant-originalarrivaltime: 14 Nov 2018 13:02:04.0605
 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 686ea1d3-bc2b-4c6f-a92c-d99c5c301635
X-MS-Exchange-Transport-CrossTenantHeadersStamped: AM0PR04MB5985
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBnTkqaHexbPb8+AA--.12209S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3AFy3Kw15Gr45CF1DuFy7GFg_yoW7uw4UpF
	4kG34Y9ayUtF1fuF13tF4DGFn0q3WFkF1Ik343Ca1IvF43J3y5JayrGFy3Zw45XrWFg343
	AF4agrW8CF4rtrJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUmvb7Iv0xC_Cr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1Y
	6r17McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IYc2Ij64
	vIr41l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkI
	ecxEwVCI4VW5GwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_Xr0_Ar1lcI
	IF0xvE2Ix0cI8IcVCY1x0267AKxVW8JVWxJwCYIxAIcVC2z280aVAFwI0_Cr1j6rxdMxvI
	42IY6I8E87Iv6xkF7I0E14v26F4UJVW0owCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26c
	xK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v2
	6r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67x28xkI4xCE0xIEc2x0rwC2zVAF1V
	AY17CE14v26r1q6r43MIIYrxkI7VAKI48JMIIF0xvE42xK8VAvwI8IcIk0rVW3JVWrJrUv
	cSsGvfC2KfnxnUUI43ZEXa7IU5Hq2tUUUUU==

Clock providers are recommended to use the new struct clk_hw based API,
so implement IMX clk_hw based provider helpers functions to the new
approach.

Signed-off-by: Dong Aisheng <aisheng.dong@nxp.com>

---
ChangeLog:
v2->v4:
 * no changes
v1->v2:  new patches
---
 drivers/clk/imx/clk.c | 22 ++++++++++++++++++
 drivers/clk/imx/clk.h | 62 +++++++++++++++++++++++++++++++++++++++++++++++=
++++
 2 files changed, 84 insertions(+)

diff --git a/drivers/clk/imx/clk.c b/drivers/clk/imx/clk.c
index 9074e69..1efed86 100644
--- a/drivers/clk/imx/clk.c
+++ b/drivers/clk/imx/clk.c
@@ -18,6 +18,16 @@ void __init imx_check_clocks(struct clk *clks[], unsigne=
d int count)
 			       i, PTR_ERR(clks[i]));
 }
=20
+void imx_check_clk_hws(struct clk_hw *clks[], unsigned int count)
+{
+	unsigned int i;
+
+	for (i =3D 0; i < count; i++)
+		if (IS_ERR(clks[i]))
+			pr_err("i.MX clk %u: register failed with %ld\n",
+			       i, PTR_ERR(clks[i]));
+}
+
 static struct clk * __init imx_obtain_fixed_clock_from_dt(const char *name=
)
 {
 	struct of_phandle_args phandle;
@@ -49,6 +59,18 @@ struct clk * __init imx_obtain_fixed_clock(
 	return clk;
 }
=20
+struct clk_hw * __init imx_obtain_fixed_clk_hw(struct device_node *np,
+					       const char *name)
+{
+	struct clk *clk;
+
+	clk =3D of_clk_get_by_name(np, name);
+	if (IS_ERR(clk))
+		return ERR_PTR(-ENOENT);
+
+	return __clk_get_hw(clk);
+}
+
 /*
  * This fixups the register CCM_CSCMR1 write value.
  * The write/read/divider values of the aclk_podf field
diff --git a/drivers/clk/imx/clk.h b/drivers/clk/imx/clk.h
index 3886979..cf0596d 100644
--- a/drivers/clk/imx/clk.h
+++ b/drivers/clk/imx/clk.h
@@ -8,6 +8,7 @@
 extern spinlock_t imx_ccm_lock;
=20
 void imx_check_clocks(struct clk *clks[], unsigned int count);
+void imx_check_clk_hws(struct clk_hw *clks[], unsigned int count);
 void imx_register_uart_clocks(struct clk ** const clks[]);
=20
 extern void imx_cscmr1_fixup(u32 *val);
@@ -54,6 +55,9 @@ struct clk *clk_register_gate2(struct device *dev, const =
char *name,
 struct clk * imx_obtain_fixed_clock(
 			const char *name, unsigned long rate);
=20
+struct clk_hw *imx_obtain_fixed_clk_hw(struct device_node *np,
+				       const char *name);
+
 struct clk *imx_clk_gate_exclusive(const char *name, const char *parent,
 	 void __iomem *reg, u8 shift, u32 exclusive_mask);
=20
@@ -90,6 +94,16 @@ static inline struct clk *imx_clk_fixed(const char *name=
, int rate)
 	return clk_register_fixed_rate(NULL, name, NULL, 0, rate);
 }
=20
+static inline struct clk_hw *imx_clk_hw_fixed(const char *name, int rate)
+{
+	return clk_hw_register_fixed_rate(NULL, name, NULL, 0, rate);
+}
+
+static inline struct clk_hw *imx_get_clk_hw_fixed(const char *name, int ra=
te)
+{
+	return clk_hw_register_fixed_rate(NULL, name, NULL, 0, rate);
+}
+
 static inline struct clk *imx_clk_mux_ldb(const char *name, void __iomem *=
reg,
 			u8 shift, u8 width, const char * const *parents,
 			int num_parents)
@@ -113,6 +127,15 @@ static inline struct clk *imx_clk_divider(const char *=
name, const char *parent,
 			reg, shift, width, 0, &imx_ccm_lock);
 }
=20
+static inline struct clk_hw *imx_clk_hw_divider(const char *name,
+						const char *parent,
+						void __iomem *reg, u8 shift,
+						u8 width)
+{
+	return clk_hw_register_divider(NULL, name, parent, CLK_SET_RATE_PARENT,
+				       reg, shift, width, 0, &imx_ccm_lock);
+}
+
 static inline struct clk *imx_clk_divider_flags(const char *name,
 		const char *parent, void __iomem *reg, u8 shift, u8 width,
 		unsigned long flags)
@@ -121,6 +144,15 @@ static inline struct clk *imx_clk_divider_flags(const =
char *name,
 			reg, shift, width, 0, &imx_ccm_lock);
 }
=20
+static inline struct clk_hw *imx_clk_hw_divider_flags(const char *name,
+						   const char *parent,
+						   void __iomem *reg, u8 shift,
+						   u8 width, unsigned long flags)
+{
+	return clk_hw_register_divider(NULL, name, parent, flags,
+				       reg, shift, width, 0, &imx_ccm_lock);
+}
+
 static inline struct clk *imx_clk_divider2(const char *name, const char *p=
arent,
 		void __iomem *reg, u8 shift, u8 width)
 {
@@ -143,6 +175,13 @@ static inline struct clk *imx_clk_gate_flags(const cha=
r *name, const char *paren
 			shift, 0, &imx_ccm_lock);
 }
=20
+static inline struct clk_hw *imx_clk_hw_gate(const char *name, const char =
*parent,
+					     void __iomem *reg, u8 shift)
+{
+	return clk_hw_register_gate(NULL, name, parent, CLK_SET_RATE_PARENT, reg,
+				    shift, 0, &imx_ccm_lock);
+}
+
 static inline struct clk *imx_clk_gate_dis(const char *name, const char *p=
arent,
 		void __iomem *reg, u8 shift)
 {
@@ -222,6 +261,17 @@ static inline struct clk *imx_clk_mux2(const char *nam=
e, void __iomem *reg,
 			reg, shift, width, 0, &imx_ccm_lock);
 }
=20
+static inline struct clk_hw *imx_clk_hw_mux2(const char *name, void __iome=
m *reg,
+					     u8 shift, u8 width,
+					     const char * const *parents,
+					     int num_parents)
+{
+	return clk_hw_register_mux(NULL, name, parents, num_parents,
+				   CLK_SET_RATE_NO_REPARENT |
+				   CLK_OPS_PARENT_ENABLE,
+				   reg, shift, width, 0, &imx_ccm_lock);
+}
+
 static inline struct clk *imx_clk_mux_flags(const char *name,
 			void __iomem *reg, u8 shift, u8 width,
 			const char * const *parents, int num_parents,
@@ -232,6 +282,18 @@ static inline struct clk *imx_clk_mux_flags(const char=
 *name,
 			&imx_ccm_lock);
 }
=20
+static inline struct clk_hw *imx_clk_hw_mux_flags(const char *name,
+						  void __iomem *reg, u8 shift,
+						  u8 width,
+						  const char * const *parents,
+						  int num_parents,
+						  unsigned long flags)
+{
+	return clk_hw_register_mux(NULL, name, parents, num_parents,
+				   flags | CLK_SET_RATE_NO_REPARENT,
+				   reg, shift, width, 0, &imx_ccm_lock);
+}
+
 struct clk *imx_clk_cpu(const char *name, const char *parent_name,
 		struct clk *div, struct clk *mux, struct clk *pll,
 		struct clk *step);
--=20
2.7.4
