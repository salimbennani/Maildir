Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 15 Nov 2018 00:42:06 -0000
Received: from icoremail.net (unknown [209.85.215.175])
	by mail-app2 (Coremail) with SMTP id by_KCgDnX1_Xbexbh2CSAQ--.43926S3;
	Thu, 15 Nov 2018 02:47:51 +0800 (CST)
Received: from mail-pg1-f175.google.com (unknown [209.85.215.175])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBXP0vUbexbUOU_AA--.1161S3;
	Thu, 15 Nov 2018 02:47:48 +0800 (CST)
Received: by mail-pg1-f175.google.com with SMTP id n10-v6so7753435pgv.10
        for <xuliker@zju.edu.cn>; Wed, 14 Nov 2018 10:47:48 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :date:from:to:cc:subject:in-reply-to:message-id:mime-version:sender
         :precedence:list-id;
        bh=uG6K2aXuFywRJQmEIv1vi/iDJeJpHD3q/H/NPo5iWZQ=;
        b=dHUEC+n00kYA/2vHPfxSPGLlWOVHw/KyNyrH6WCaspHHKFoecAgEy50hGgQ48XzZg0
         NffvWj4LmHoyEDSFifXjLnCOa1FZcnvPiZL6Rmj+sFERDlQpV7OiUy6Xgy2XsKOapLU5
         juofF0rcxLMvfjlM5tpLhUcV1wg264J+k0R9SCgvSW/kfLD4tnn7G3+O0wGX1U0pMEth
         lI5OYtv/+KVN0NsD6H2VswSw3y8YIs0YBAmGORrdzcPoUowmA0VHQI4AgUO9KcYoPes7
         3n9IhKtBD+KgWjD3LC98Y1vWfxpDG2d7U+jxDQvNjmgk0nhuYaPWO39hlw10aeQW+/HA
         4ZQA==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gIlC11J+a+FkVEGR5lKbeVGdz+7DeKMwx8UFuBl67KI8jxK0dln
	g9MsFMrYZOVKZbSMWMwZF3RBCBS6vqVklfi4HxIsadPXss2qAXQYCw==
X-Received: by 2002:a62:ce8e:: with SMTP id y136-v6mr3144493pfg.201.1542221268245;
        Wed, 14 Nov 2018 10:47:48 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp6176349pjt;
        Wed, 14 Nov 2018 10:47:47 -0800 (PST)
X-Google-Smtp-Source: AJdET5egLVAfRz/BKuf9BwcPZo6y0r4f7EW9fK+G7i0lhC1vf2Ik+5mau5774OR+T9ULHma8QUNq
X-Received: by 2002:a63:7b06:: with SMTP id w6mr2832707pgc.288.1542221267037;
        Wed, 14 Nov 2018 10:47:47 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542221267; cv=none;
        d=google.com; s=arc-20160816;
        b=TbxFD52CesjdI5QQ1a1WG1xQdWd67i4HhDt6KUWCv9PnpSpm3gSSlSo/qhOhyjKKyF
         V+h1V+F/pI/HRZfnkBzWnRJKipHVjiNEXfK26sJJ/jGau3M9sZUJP39KWhi15bifZFYb
         PMBxmGdHucX0hUByBjv8RleZZmW47hOh5i73o/0AZh3/GPh3BGFYv6BZ/YBu1VdMxulb
         +SyhVuksGAJtQLJm0YglWo2TLBkEyP+9G4NqBYZYlVqFIBc0o/vBnlVDBNCMbu0XMxVK
         SN3AePRff9hlvOcXtrGiB08IHb9SnuHJs+smhRAbY6/rfznB8oICVluu+B6nBppVKNa3
         8jRw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:mime-version:message-id:in-reply-to
         :subject:cc:to:from:date;
        bh=uG6K2aXuFywRJQmEIv1vi/iDJeJpHD3q/H/NPo5iWZQ=;
        b=syQjfdPE9yG6EeWzeUR0Rkc1w6NMdNFACkNJh1jyvbDIVW2hTLBM57fahiAxunZdbn
         L9o3wSFaLFrED+Bumz+MMNfJ9bCTfINxRY0EvgbGwFd+YtVcOHW8T2C1hO4rfVrOhzS8
         +Nl9/VlcUzxWkP8SZ66dXnZy6LpJIbiU6Fe6Jn0Ldw91J0cqokYb8+zwrdPqdqgWdsv+
         M6KLNMYvbGoB8rMysgxLMU4BvxhftJQ0+mJ4ElFPU8i8hRJ5+2I6ZjQrkyjILeYz2iWs
         1hCaOWxd1/Eo4ie5VuvxNEMGEru1bKHSzF+JuuizHzrj7shITD0SU0i7sxkZGeS+9y4M
         x3LQ==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id d2-v6si24887525plo.210.2018.11.14.10.47.31;
        Wed, 14 Nov 2018 10:47:47 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1731479AbeKOEv1 (ORCPT <rfc822;leiliang4you@gmail.com>
        + 99 others); Wed, 14 Nov 2018 23:51:27 -0500
Received: from iolanthe.rowland.org ([192.131.102.54]:48302 "HELO
        iolanthe.rowland.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with SMTP id S1727761AbeKOEv1 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 14 Nov 2018 23:51:27 -0500
Received: (qmail 6270 invoked by uid 2102); 14 Nov 2018 13:47:04 -0500
Received: from localhost (sendmail-bs@127.0.0.1)
  by localhost with SMTP; 14 Nov 2018 13:47:04 -0500
Date: Wed, 14 Nov 2018 13:47:04 -0500 (EST)
From: Alan Stern <stern@rowland.harvard.edu>
X-X-Sender: stern@iolanthe.rowland.org
To: Ben Dooks <ben-linux@fluff.org>
cc: gregkh@linuxfoundation.org, <linux-usb@vger.kernel.org>,
        <linux-kernel@lists.codethink.co.uk>,
        <linux-kernel@vger.kernel.org>,
        Ben Dooks <ben.dooks@codethink.co.uk>
Subject: Re: [PATCH] USB: host: ehci: allow tine of highspeed nak-count
In-Reply-To: <20181114171315.27549-1-ben-linux@fluff.org>
Message-ID: <Pine.LNX.4.44L0.1811141338100.1637-100000@iolanthe.rowland.org>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBXP0vUbexbUOU_AA--.1161S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3XF4xtF1rCFy3Zw1UCr18uFg_yoW7ArykpF
	45XFWfJw15tr42gr43A3WUXa4ruwnrGryUua97G3s8uw42qrWYga45GFWFyr93Zr97Wr12
	qFs8Wa4rCFZxKFDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPIb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVWxJr0_GcWl84ACjcxK6I8E87Iv6xkF7I0E14v26F4UJVW0owAS0I0E0xvYzx
	vE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AKxVWU
	JVWUGwAv7VC2z280aVAFwI0_Jr0_Gr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcVAKI4
	8JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE44CYbxCE4x80FwCY02Av
	z4vEIxC_XwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_Jr0_JF4lcIIF0x
	vE2Ix0cI8IcVCY1x0267AKxVWUJVW8JwCYIxAIcVC2z280aVAFwI0_Gr1j6F4UJwCYIxAI
	cVC2z280aVCY1x0267AKxVW8Jr0_Cr1UMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI0EY4
	vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAFwI0_
	Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUAVWUtwCIc40Y0x
	0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Zr0_Wr1UYxBIdaVFxhVjvjDU0xZFpf9x07bP
	Ap5UUUUU=

On Wed, 14 Nov 2018, Ben Dooks wrote:

> From: Ben Dooks <ben.dooks@codethink.co.uk>
> 
> At least some systems benefit with less scheduling if the NAK count
> value is set higher than the default 4. For instance a Tegra3 with
> an SMSC9512 showed less interrupt load when this was changed to 14.

Interesting.  Why do you think this is?  In theory, increasing the NAK
count RL value should cause a higher memory bus load and perhaps a
slight rise in the interrupt load (transfers will complete a little
more quickly because the controller tries harder to poll the endpoints
and see if they are ready).

> To allow the changing of this value, add a sysfs node to each of
> the controllers to allow run-time changing.
> 
> Signed-off-by: Ben Dooks <ben.dooks@codethink.co.uk>

The patch looks okay to me.

Acked-by: Alan Stern <stern@rowland.harvard.edu>

Alan Stern

> ---
>  drivers/usb/host/ehci-hcd.c   |  1 +
>  drivers/usb/host/ehci-q.c     |  4 +--
>  drivers/usb/host/ehci-sysfs.c | 52 +++++++++++++++++++++++++++++++++--
>  drivers/usb/host/ehci.h       |  1 +
>  4 files changed, 54 insertions(+), 4 deletions(-)
> 
> diff --git a/drivers/usb/host/ehci-hcd.c b/drivers/usb/host/ehci-hcd.c
> index 8608ac513fb7..799262951f41 100644
> --- a/drivers/usb/host/ehci-hcd.c
> +++ b/drivers/usb/host/ehci-hcd.c
> @@ -526,6 +526,7 @@ static int ehci_init(struct usb_hcd *hcd)
>  	hw->hw_qtd_next = EHCI_LIST_END(ehci);
>  	ehci->async->qh_state = QH_STATE_LINKED;
>  	hw->hw_alt_next = QTD_NEXT(ehci, ehci->async->dummy->qtd_dma);
> +	ehci->nak_tune_hs = EHCI_TUNE_RL_HS;
>  
>  	/* clear interrupt enables, set irq latency */
>  	if (log2_irq_thresh < 0 || log2_irq_thresh > 6)
> diff --git a/drivers/usb/host/ehci-q.c b/drivers/usb/host/ehci-q.c
> index 327630405695..ccb754893b5a 100644
> --- a/drivers/usb/host/ehci-q.c
> +++ b/drivers/usb/host/ehci-q.c
> @@ -898,12 +898,12 @@ qh_make (
>  	case USB_SPEED_HIGH:		/* no TT involved */
>  		info1 |= QH_HIGH_SPEED;
>  		if (type == PIPE_CONTROL) {
> -			info1 |= (EHCI_TUNE_RL_HS << 28);
> +			info1 |= ehci->nak_tune_hs << 28;
>  			info1 |= 64 << 16;	/* usb2 fixed maxpacket */
>  			info1 |= QH_TOGGLE_CTL;	/* toggle from qtd */
>  			info2 |= (EHCI_TUNE_MULT_HS << 30);
>  		} else if (type == PIPE_BULK) {
> -			info1 |= (EHCI_TUNE_RL_HS << 28);
> +			info1 |= ehci->nak_tune_hs << 28;
>  			/* The USB spec says that high speed bulk endpoints
>  			 * always use 512 byte maxpacket.  But some device
>  			 * vendors decided to ignore that, and MSFT is happy
> diff --git a/drivers/usb/host/ehci-sysfs.c b/drivers/usb/host/ehci-sysfs.c
> index 8f75cb7b197c..d710d35282a6 100644
> --- a/drivers/usb/host/ehci-sysfs.c
> +++ b/drivers/usb/host/ehci-sysfs.c
> @@ -145,19 +145,66 @@ static ssize_t uframe_periodic_max_store(struct device *dev,
>  }
>  static DEVICE_ATTR_RW(uframe_periodic_max);
>  
> +static ssize_t nak_tune_hs_show(struct device *dev,
> +				struct device_attribute *attr,
> +				char *buf)
> +{
> +	struct ehci_hcd		*ehci;
> +
> +	ehci = hcd_to_ehci(dev_get_drvdata(dev));
> +	return scnprintf(buf, PAGE_SIZE, "%d\n", ehci->nak_tune_hs);
> +}
> +
> +static ssize_t nak_tune_hs_store(struct device *dev,
> +					struct device_attribute *attr,
> +					const char *buf, size_t count)
> +{
> +	struct ehci_hcd		*ehci;
> +	unsigned		val;
> +	unsigned long		flags;
> +
> +	ehci = hcd_to_ehci(dev_get_drvdata(dev));
> +
> +	if (kstrtouint(buf, 0, &val) < 0)
> +		return -EINVAL;
> +
> +	if (val >= 15) {
> +		ehci_info(ehci, "invalid value for nak_tune_hs (%d)\n", val);
> +		return -EINVAL;
> +	}
> +
> +	spin_lock_irqsave (&ehci->lock, flags);
> +	ehci->nak_tune_hs = val;
> +	spin_unlock_irqrestore (&ehci->lock, flags);
> +	return count;
> +}
> +
> +static DEVICE_ATTR_RW(nak_tune_hs);
>  
>  static inline int create_sysfs_files(struct ehci_hcd *ehci)
>  {
>  	struct device	*controller = ehci_to_hcd(ehci)->self.controller;
>  	int	i = 0;
>  
> +	i = device_create_file(controller, &dev_attr_nak_tune_hs);
> +	if (i)
> +		goto out;
> +
> +	i = device_create_file(controller, &dev_attr_uframe_periodic_max);
> +	if (i)
> +		goto out_nak;
> +
>  	/* with integrated TT there is no companion! */
>  	if (!ehci_is_TDI(ehci))
>  		i = device_create_file(controller, &dev_attr_companion);
>  	if (i)
> -		goto out;
> +		goto out_all;
>  
> -	i = device_create_file(controller, &dev_attr_uframe_periodic_max);
> +	return 0;
> +out_all:
> +	device_remove_file(controller, &dev_attr_uframe_periodic_max);
> +out_nak:
> +	device_remove_file(controller, &dev_attr_nak_tune_hs);
>  out:
>  	return i;
>  }
> @@ -170,5 +217,6 @@ static inline void remove_sysfs_files(struct ehci_hcd *ehci)
>  	if (!ehci_is_TDI(ehci))
>  		device_remove_file(controller, &dev_attr_companion);
>  
> +	device_remove_file(controller, &dev_attr_nak_tune_hs);
>  	device_remove_file(controller, &dev_attr_uframe_periodic_max);
>  }
> diff --git a/drivers/usb/host/ehci.h b/drivers/usb/host/ehci.h
> index c8e9a48e1d51..1fb6f1ad8128 100644
> --- a/drivers/usb/host/ehci.h
> +++ b/drivers/usb/host/ehci.h
> @@ -154,6 +154,7 @@ struct ehci_hcd {			/* one per controller */
>  	dma_addr_t		periodic_dma;
>  	struct list_head	intr_qh_list;
>  	unsigned		i_thresh;	/* uframes HC might cache */
> +	u32			nak_tune_hs;
>  
>  	union ehci_shadow	*pshadow;	/* mirror hw periodic table */
>  	struct list_head	intr_unlink_wait;
> 
