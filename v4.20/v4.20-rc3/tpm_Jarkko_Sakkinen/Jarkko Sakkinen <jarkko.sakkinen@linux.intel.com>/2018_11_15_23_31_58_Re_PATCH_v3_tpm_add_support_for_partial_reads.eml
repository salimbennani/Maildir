Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 16 Nov 2018 00:30:27 -0000
Received: from icoremail.net (unknown [209.85.214.169])
	by mail-app2 (Coremail) with SMTP id by_KCgC3f90KAu5bj_edAQ--.47659S3;
	Fri, 16 Nov 2018 07:32:26 +0800 (CST)
Received: from mail-pl1-f169.google.com (unknown [209.85.214.169])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBHKkYIAu5bNAZGAA--.1721S3;
	Fri, 16 Nov 2018 07:32:24 +0800 (CST)
Received: by mail-pl1-f169.google.com with SMTP id x21-v6so7479416pln.9
        for <xuliker@zju.edu.cn>; Thu, 15 Nov 2018 15:32:24 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:organization:user-agent:sender
         :precedence:list-id;
        bh=wd6mnWpp/fuH7JyRSfsiIpQpPrlPBiHr7YCb7Bh5j60=;
        b=U8IiNDqGGEm5Iu9hvHJd7KJijwL22bWpWWiLTNOQdpm2wX6OVRvY/70+C3PzbEBNwq
         vWBNjtZ+HJpngqbHE9DOluTWDEN7deQNho6EnTVAK1Bf9Dl5d6YaBbx9eBQIg/32dnRT
         Fzcn9610WPf8jjNhoQAVzYOAnmSqvCCdObX+qL68LEcxW6slefiFuy6UFGFugTSJtxuK
         fQAaCrSZ7+JXXHqBEynV1N9TlZjvugafEqO6aUo6FEqUyoVfVdtPlNdtxWB5ebprL2A5
         BUgP1tCVOwADMXod6LZByACWZp1o2QpV22xO6bCmk8wXtHpF75xZiRO5gIJCyOTMfJFx
         QscQ==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=intel.com
X-Gm-Message-State: AGRZ1gL8jWfOMxRZsfNMXZqsuiaXta6z9B9D1gDO4Hg65MThNMAVf38a
	HFbVoGc+kRF/bNEppE1htejx+5bbECsVaJ671SweAeBPyCGhpw/Ttg==
X-Received: by 2002:a17:902:a9:: with SMTP id a38-v6mr8399744pla.7.1542324744000;
        Thu, 15 Nov 2018 15:32:24 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp1206130pju;
        Thu, 15 Nov 2018 15:32:23 -0800 (PST)
X-Google-Smtp-Source: AJdET5eiFszCSOPix9UOw/NMw1hmvSXm3TyPdAH36OSOGeP6KF6ilMh2lQVsRPTdPa3eqjEzQRsj
X-Received: by 2002:a17:902:7281:: with SMTP id d1-v6mr8254883pll.284.1542324743016;
        Thu, 15 Nov 2018 15:32:23 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542324742; cv=none;
        d=google.com; s=arc-20160816;
        b=Y9VtjjWzZpwPMctetFwuUImkPYd94+AnhwSQhLF1J9yQumXsvB3bXsrhI0kmeTVLtQ
         U7hnlJfxkhLRmyUTFHWRqNtDgffapND1o2jYw8zb2GcuPEcysg8PlYUah5YB7CHx1rfU
         1MZgTD68nFZFh6Wo7+cjIE55V2jQvEq/4TkLS/QOnFAen+l7BOB3PZ5LEw9OraG0yP7n
         bJlC+u+jeRZGo+Lm6v64FYCarToZTQMKs1hfFUDt26dj4oPBxlZok2QNYVxpglQhWqYA
         Ncd5/k+KUTlj9q76UpEcz/z/my7nWYk1eW6mPJyQALpJSzyUSgQkFEhfFlZVB4My7KTv
         7Chw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:organization:in-reply-to
         :content-disposition:mime-version:references:message-id:subject:cc
         :to:from:date;
        bh=wd6mnWpp/fuH7JyRSfsiIpQpPrlPBiHr7YCb7Bh5j60=;
        b=RgPj8q3LqdOvVThOCL5nspX7IqTfEhsCkCz1T98VKKvcsPY3gRxV7nFZKe3O40t5kt
         1rjPGJzrJmPi/ciXgA1E1OUXePhF4tl3Ex27Zu8h5g8O+LCOZVDSrWKlNufdddCLb8zo
         iLVz6Q5g/xTM0O2Qzw3Si4EdLKvbDyUPLxCPy3oXmhwtqnup+cqhGUR834snGpMVrJ5y
         7jXHIrZH9iFSey2ra8PUkBIQjtfN7qj0e/fogpv09bSFycPCxUWmIl9myYx53F/eAeBx
         NX7HDRxA5bB/LgWtWwShMxTN/Hv1WrGgzGIuMahJFB3cpdFKUz2XtxUlQQnwTciZT69n
         sqRw==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=intel.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id g12si23396538pgh.368.2018.11.15.15.32.08;
        Thu, 15 Nov 2018 15:32:22 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726910AbeKPJl6 (ORCPT <rfc822;jroi.martin@gmail.com>
        + 99 others); Fri, 16 Nov 2018 04:41:58 -0500
Received: from mga07.intel.com ([134.134.136.100]:1468 "EHLO mga07.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725985AbeKPJl6 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 16 Nov 2018 04:41:58 -0500
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Received: from fmsmga008.fm.intel.com ([10.253.24.58])
  by orsmga105.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 15 Nov 2018 15:32:01 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,238,1539673200"; 
   d="scan'208";a="86840320"
Received: from sfhansen-mobl2.ger.corp.intel.com (HELO localhost) ([10.249.254.82])
  by fmsmga008.fm.intel.com with ESMTP; 15 Nov 2018 15:31:58 -0800
Date: Fri, 16 Nov 2018 01:31:58 +0200
From: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
To: Tadeusz Struk <tadeusz.struk@intel.com>
Cc: jgg@ziepe.ca, linux-integrity@vger.kernel.org,
        linux-security-module@vger.kernel.org, linux-kernel@vger.kernel.org
Subject: Re: [PATCH v3] tpm: add support for partial reads
Message-ID: <20181115233158.GA30018@linux.intel.com>
References: <154231454280.17567.455994477207265338.stgit@tstruk-mobl1.jf.intel.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <154231454280.17567.455994477207265338.stgit@tstruk-mobl1.jf.intel.com>
Organization: Intel Finland Oy - BIC 0357606-4 - Westendinkatu 7, 02160 Espoo
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBHKkYIAu5bNAZGAA--.1721S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3XryUGrWDWFWkAFW5KF1fXrb_yoW7ZF13pa
	yYy34fCrWDGr42krn7G3ZrZa13W3Zag3Wj9F9rGFy3Ar9rZ3WFgr1rtFyIgFy2vr1DGrZ3
	Ca95Wr1UWFyqvaUanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPFb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK
	6IIF6FWlc2IjII80xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26r1j6r1xMxvI42IY6x
	IIjxv20xvEc7CjxVAFwI0_Jr0_Gr1lcIIF0xvEx4A2jsIE14v26r4UJVWxJr1lcIIF0xvE
	x4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26cxK6c
	8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v26r1j
	6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_JF0_Jw1lIxkGc2Ij64
	vIr41lIxAIcVCF04k26cxKx2IYs7xG6Fyj6rWUJbIYCTnIWIevJa73UjIFyTuYvjxUHHKu
	DUUUU

On Thu, Nov 15, 2018 at 12:42:22PM -0800, Tadeusz Struk wrote:
> Currently to read a response from the TPM device an application needs
> provide big enough buffer for the whole response and read it in one go.
> The application doesn't know how big the response it beforehand so it
> always needs to maintain a 4K buffer and read the max (4K).
> In case if the user of the TSS library doesn't provide big enough
> buffer the TCTI spec says that the library should set the required
> size and return TSS2_TCTI_RC_INSUFFICIENT_BUFFER error code so that the
> application could allocate a bigger buffer and call receive again.
> To make it possible in the TSS library, this requires being able to do
> partial reads from the driver.
> The library would read the 10 bytes header first to get the actual size
> of the response from the header, and then read the rest of the response.
> 
> This patch adds support for partial reads, i.e. the user can read the
> response in one or multiple reads, until the whole response is consumed.
> The user can also read only part of the response and ignore
> the rest by issuing a new write to send a new command.
> 
> Signed-off-by: Tadeusz Struk <tadeusz.struk@intel.com>
> ---
> The usecase is implemented in this TSS commit:
> https://github.com/tpm2-software/tpm2-tss/commit/ce982f67a67dc08e24683d30b05800648d8a264c
> 
> Changes in v3:
>  - Remove link to usecase implemented in TSS out of the commit message.
>  - Update the conddition in tpm_common_poll() to take into account
>    the partial_data also.
> 
> Changes in v2:
>  - Allow writes after only partial response is consumed to maintain
>    backwords compatibility.
> ---
>  drivers/char/tpm/tpm-dev-common.c |   41 ++++++++++++++++++++++++++++---------
>  drivers/char/tpm/tpm-dev.h        |    2 ++
>  2 files changed, 33 insertions(+), 10 deletions(-)
> 
> diff --git a/drivers/char/tpm/tpm-dev-common.c b/drivers/char/tpm/tpm-dev-common.c
> index 99b5133a9d05..5d43b0c28565 100644
> --- a/drivers/char/tpm/tpm-dev-common.c
> +++ b/drivers/char/tpm/tpm-dev-common.c
> @@ -64,6 +64,7 @@ static void tpm_timeout_work(struct work_struct *work)
>  
>  	mutex_lock(&priv->buffer_mutex);
>  	priv->data_pending = 0;
> +	priv->partial_data = 0;
>  	memset(priv->data_buffer, 0, sizeof(priv->data_buffer));
>  	mutex_unlock(&priv->buffer_mutex);
>  	wake_up_interruptible(&priv->async_wait);
> @@ -90,22 +91,39 @@ ssize_t tpm_common_read(struct file *file, char __user *buf,
>  	ssize_t ret_size = 0;
>  	int rc;
>  
> -	del_singleshot_timer_sync(&priv->user_read_timer);
> -	flush_work(&priv->timeout_work);
>  	mutex_lock(&priv->buffer_mutex);
> +	if (priv->data_pending || priv->partial_data) {
> +		if (*off == 0)
> +			priv->partial_data = priv->data_pending;
> +
> +		ret_size = min_t(ssize_t, size, priv->partial_data);
> +		if (ret_size <= 0) {
> +			ret_size = 0;
> +			priv->data_pending = 0;
> +			priv->partial_data = 0;
> +			goto out;
> +		}
>  
> -	if (priv->data_pending) {
> -		ret_size = min_t(ssize_t, size, priv->data_pending);
> -		if (ret_size > 0) {
> -			rc = copy_to_user(buf, priv->data_buffer, ret_size);
> -			memset(priv->data_buffer, 0, priv->data_pending);
> -			if (rc)
> -				ret_size = -EFAULT;
> +		rc = copy_to_user(buf, priv->data_buffer + *off, ret_size);
> +		if (rc) {
> +			memset(priv->data_buffer, 0, TPM_BUFSIZE);
> +			priv->partial_data = 0;
> +			ret_size = -EFAULT;
> +		} else {
> +			memset(priv->data_buffer + *off, 0, ret_size);
> +			priv->partial_data -= ret_size;
> +			*off += ret_size;

You could drop these memset() calls and also one from
tpm_timeout_work(). The call could be done once in the beginning of
tpm_common_write() instead of having three different call sites.

Replacing two memsets with one could be a prepending commit.

>  		}
>  
>  		priv->data_pending = 0;
>  	}
>  
> +out:
> +	if (!priv->partial_data) {
> +		*off = 0;
> +		del_singleshot_timer_sync(&priv->user_read_timer);
> +		flush_work(&priv->timeout_work);
> +	}
>  	mutex_unlock(&priv->buffer_mutex);
>  	return ret_size;
>  }
> @@ -150,6 +168,9 @@ ssize_t tpm_common_write(struct file *file, const char __user *buf,
>  		goto out;
>  	}
>  
> +	priv->partial_data = 0;
> +	*off = 0;
> +
>  	/*
>  	 * If in nonblocking mode schedule an async job to send
>  	 * the command return the size.
> @@ -184,7 +205,7 @@ __poll_t tpm_common_poll(struct file *file, poll_table *wait)
>  
>  	poll_wait(file, &priv->async_wait, wait);
>  
> -	if (priv->data_pending)
> +	if (priv->data_pending || priv->partial_data)
>  		mask = EPOLLIN | EPOLLRDNORM;
>  	else
>  		mask = EPOLLOUT | EPOLLWRNORM;
> diff --git a/drivers/char/tpm/tpm-dev.h b/drivers/char/tpm/tpm-dev.h
> index a126b575cb8c..a2ca6a7a06f1 100644
> --- a/drivers/char/tpm/tpm-dev.h
> +++ b/drivers/char/tpm/tpm-dev.h
> @@ -11,6 +11,8 @@ struct file_priv {
>  
>  	/* Holds the amount of data passed or an error code from async op */
>  	ssize_t data_pending;
> +	/* For partial reads, holds the reminder of a response */
> +	ssize_t partial_data;

Naming becomes a mess and the comment for data_pending variable is
incorrect as it is also used for synchronous operation.

Maybe add a prepending commit to rename it as

	/* Holds the resul of the tpm_transmit() last call. */
	ssize_t transmit_result;

That is at least clear and obvious on what it contains.

The comment for partial_data is incorrect as the variable does not
contain any data.

We could use declare:

	/* Holds the count how much of the response is still unread. */
	size_t response_pending;

Observe another remark from your commit: there is no reaso to ssize_t as
the type as the value should never be a negative number.

/Jarkko
