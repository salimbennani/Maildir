Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 16 Nov 2018 00:30:28 -0000
Received: from icoremail.net (unknown [209.85.210.174])
	by mail-app2 (Coremail) with SMTP id by_KCgD3_5tLA+5bVP6dAQ--.46419S3;
	Fri, 16 Nov 2018 07:37:48 +0800 (CST)
Received: from mail-pf1-f174.google.com (unknown [209.85.210.174])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAH7EdIA+5bcAlGAA--.1711S3;
	Fri, 16 Nov 2018 07:37:44 +0800 (CST)
Received: by mail-pf1-f174.google.com with SMTP id q1so2447601pfi.5
        for <xuliker@zju.edu.cn>; Thu, 15 Nov 2018 15:37:44 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:organization:user-agent:sender
         :precedence:list-id;
        bh=iyjAftga6YaABeMJqdL1dNdADjGy/Vey6Hc3G9Mg1TA=;
        b=ZSJSgOp8MKYIDGnj36w8B7SuzkDSPP7dTZM+gKn5ucyIZ3kDQEm+IuULfx+rVkOmLT
         Rul+CY8vZqr+3KVk+V2qPENLXSMMQSxmiKXGbZ7e7BC//bVRDVGjQ3EVWomo5Qak9M5F
         i3SphhHx17BfKw2TqqSzFeEuwmYAuF5sW7X+iKlxiWrRlm6POnDk0z5SUkanPXZ7oip7
         ToNEzuLi6AjaSKgbzBxsfrYP0BgICvTyja/lMkC8PZUioAeHsQ2zIRglGIj6/Q+8wBtN
         XLebVUp2z8UqalP/3raSN8WmRtR+96hYcHt/tuJSjwGpLKvinaqkYNr2MJElr7Pjuu1/
         dOHw==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=intel.com
X-Gm-Message-State: AGRZ1gJi0y/JYEYCWiMO3K20WGI08GfNsCmcrCqSRVhEJpuoyKciMCBR
	SX66Ad/LEo5DqHrHmnqXlevOhWTzl4UlUg8euya+vDkteHx+wkywIw==
X-Received: by 2002:a62:c20b:: with SMTP id l11-v6mr8794592pfg.251.1542325064553;
        Thu, 15 Nov 2018 15:37:44 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp1210772pju;
        Thu, 15 Nov 2018 15:37:43 -0800 (PST)
X-Google-Smtp-Source: AJdET5cWPU9dnBoa6ZclGKqvI2hXS9tOdyksXLEIYXz7ru6IOKfItNXIyyUvid7UePO6K/O411nl
X-Received: by 2002:a17:902:3341:: with SMTP id a59-v6mr8265269plc.220.1542325063613;
        Thu, 15 Nov 2018 15:37:43 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542325063; cv=none;
        d=google.com; s=arc-20160816;
        b=FSIh5+9jUA22vakpvOxGIDS830+L7MAqYA4V6sZZki/O5DFOhgVzYYEY2jO0L2LmB2
         u1sN4/geTmeNRDtZacNr1LJODqKRwvK45kXbP0zOII2CO9npEobRyfLxN8fr5mMhoY6n
         axTMhx2ec2n6oXqOFkUQSKKiVK75ud+qd5dwGu8ogsN4qpZg1cQ+P3LKuwBWKe6lyXe8
         GNS4TKFkkqu9PZ2oLxyhzDa6net4oaJGIBghB0qh9gprZlKu6jxCbTpG2+JII5M/+z02
         znNsllji7Cfz6UI+rGxAb65Ep5ooWhdOGrlqjFMFzWfQ8ZDCdXqix25KMu8O9w/AMpnC
         2QIg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:organization:in-reply-to
         :content-disposition:mime-version:references:message-id:subject:cc
         :to:from:date;
        bh=iyjAftga6YaABeMJqdL1dNdADjGy/Vey6Hc3G9Mg1TA=;
        b=aiD/J0HHC4aQ/TUPSPTCI3uQdvNx9dvCV/3J4aWdTyfjg/tSvO31oGn/aSKy40CVbV
         LPMxhVlWPGgwVRqTn3kLdqTupJCW18QI0HkdNDYVlddx8+xifGvQVdFSYXdjaNr8uxCr
         mgB1jLt+2N08iNcKMtkNvS+UiBGw63oQv4Az4612GHFIyaMaKSmkOwDfviYG9wCJQ3Rq
         pPv1vPqoo3lLslu7l71PBGp1ZvUs3aru1Gx98phBWO09BixS9sd7a6s+swcG1w+OjuhW
         P283GZi4LFRQGW+Pa2ekGp+QbA2EtnGBMEEugnsvkeCszDVtm62RLTKjd2W6ngOXcaHi
         VjXw==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=intel.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id q17si15820676pfc.198.2018.11.15.15.37.27;
        Thu, 15 Nov 2018 15:37:43 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726742AbeKPJrS (ORCPT <rfc822;jroi.martin@gmail.com>
        + 99 others); Fri, 16 Nov 2018 04:47:18 -0500
Received: from mga03.intel.com ([134.134.136.65]:7881 "EHLO mga03.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725985AbeKPJrR (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 16 Nov 2018 04:47:17 -0500
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Received: from fmsmga007.fm.intel.com ([10.253.24.52])
  by orsmga103.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 15 Nov 2018 15:37:19 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,238,1539673200"; 
   d="scan'208";a="86313905"
Received: from sfhansen-mobl2.ger.corp.intel.com (HELO localhost) ([10.249.254.82])
  by fmsmga007.fm.intel.com with ESMTP; 15 Nov 2018 15:37:17 -0800
Date: Fri, 16 Nov 2018 01:37:16 +0200
From: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
To: Tadeusz Struk <tadeusz.struk@intel.com>
Cc: jgg@ziepe.ca, linux-integrity@vger.kernel.org,
        linux-security-module@vger.kernel.org, linux-kernel@vger.kernel.org
Subject: Re: [PATCH v3] tpm: add support for partial reads
Message-ID: <20181115233716.GA31945@linux.intel.com>
References: <154231454280.17567.455994477207265338.stgit@tstruk-mobl1.jf.intel.com>
 <20181115233158.GA30018@linux.intel.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181115233158.GA30018@linux.intel.com>
Organization: Intel Finland Oy - BIC 0357606-4 - Westendinkatu 7, 02160 Espoo
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAH7EdIA+5bcAlGAA--.1711S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3Xr4kXw1UJF4kGrWDXw1rCrg_yoW7Kw47pa
	yYyayFkFWDJr12krn7K3ZxZa1aq3Zag3WjgFWDGa47Ar9ru3WFgw18KFyIgFy2yr1kJrZ3
	u395Xry3W3WqvaDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPIb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK
	6IIF6FWlc2IjII80xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26r1j6r1xMxvI42IY6x
	IIjxv20xvEc7CjxVAFwI0_Jr0_Gr1lcIIF0xvEx4A2jsIE14v26r4UJVWxJr1lcIIF0xvE
	x4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26cxK6c
	8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v26r1j
	6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_JF0_Jw1lIxkGc2Ij64
	vIr41lIxAIcVCF04k26cxKx2IYs7xG6rWUJVWrZr1UYxBIdaVFxhVjvjDU0xZFpf9x07bL
	pBhUUUUU=

On Fri, Nov 16, 2018 at 01:31:58AM +0200, Jarkko Sakkinen wrote:
> On Thu, Nov 15, 2018 at 12:42:22PM -0800, Tadeusz Struk wrote:
> > Currently to read a response from the TPM device an application needs
> > provide big enough buffer for the whole response and read it in one go.
> > The application doesn't know how big the response it beforehand so it
> > always needs to maintain a 4K buffer and read the max (4K).
> > In case if the user of the TSS library doesn't provide big enough
> > buffer the TCTI spec says that the library should set the required
> > size and return TSS2_TCTI_RC_INSUFFICIENT_BUFFER error code so that the
> > application could allocate a bigger buffer and call receive again.
> > To make it possible in the TSS library, this requires being able to do
> > partial reads from the driver.
> > The library would read the 10 bytes header first to get the actual size
> > of the response from the header, and then read the rest of the response.
> > 
> > This patch adds support for partial reads, i.e. the user can read the
> > response in one or multiple reads, until the whole response is consumed.
> > The user can also read only part of the response and ignore
> > the rest by issuing a new write to send a new command.
> > 
> > Signed-off-by: Tadeusz Struk <tadeusz.struk@intel.com>
> > ---
> > The usecase is implemented in this TSS commit:
> > https://github.com/tpm2-software/tpm2-tss/commit/ce982f67a67dc08e24683d30b05800648d8a264c
> > 
> > Changes in v3:
> >  - Remove link to usecase implemented in TSS out of the commit message.
> >  - Update the conddition in tpm_common_poll() to take into account
> >    the partial_data also.
> > 
> > Changes in v2:
> >  - Allow writes after only partial response is consumed to maintain
> >    backwords compatibility.
> > ---
> >  drivers/char/tpm/tpm-dev-common.c |   41 ++++++++++++++++++++++++++++---------
> >  drivers/char/tpm/tpm-dev.h        |    2 ++
> >  2 files changed, 33 insertions(+), 10 deletions(-)
> > 
> > diff --git a/drivers/char/tpm/tpm-dev-common.c b/drivers/char/tpm/tpm-dev-common.c
> > index 99b5133a9d05..5d43b0c28565 100644
> > --- a/drivers/char/tpm/tpm-dev-common.c
> > +++ b/drivers/char/tpm/tpm-dev-common.c
> > @@ -64,6 +64,7 @@ static void tpm_timeout_work(struct work_struct *work)
> >  
> >  	mutex_lock(&priv->buffer_mutex);
> >  	priv->data_pending = 0;
> > +	priv->partial_data = 0;
> >  	memset(priv->data_buffer, 0, sizeof(priv->data_buffer));
> >  	mutex_unlock(&priv->buffer_mutex);
> >  	wake_up_interruptible(&priv->async_wait);
> > @@ -90,22 +91,39 @@ ssize_t tpm_common_read(struct file *file, char __user *buf,
> >  	ssize_t ret_size = 0;
> >  	int rc;
> >  
> > -	del_singleshot_timer_sync(&priv->user_read_timer);
> > -	flush_work(&priv->timeout_work);
> >  	mutex_lock(&priv->buffer_mutex);
> > +	if (priv->data_pending || priv->partial_data) {
> > +		if (*off == 0)
> > +			priv->partial_data = priv->data_pending;
> > +
> > +		ret_size = min_t(ssize_t, size, priv->partial_data);
> > +		if (ret_size <= 0) {
> > +			ret_size = 0;
> > +			priv->data_pending = 0;
> > +			priv->partial_data = 0;
> > +			goto out;
> > +		}
> >  
> > -	if (priv->data_pending) {
> > -		ret_size = min_t(ssize_t, size, priv->data_pending);
> > -		if (ret_size > 0) {
> > -			rc = copy_to_user(buf, priv->data_buffer, ret_size);
> > -			memset(priv->data_buffer, 0, priv->data_pending);
> > -			if (rc)
> > -				ret_size = -EFAULT;
> > +		rc = copy_to_user(buf, priv->data_buffer + *off, ret_size);
> > +		if (rc) {
> > +			memset(priv->data_buffer, 0, TPM_BUFSIZE);
> > +			priv->partial_data = 0;
> > +			ret_size = -EFAULT;
> > +		} else {
> > +			memset(priv->data_buffer + *off, 0, ret_size);
> > +			priv->partial_data -= ret_size;
> > +			*off += ret_size;
> 
> You could drop these memset() calls and also one from
> tpm_timeout_work(). The call could be done once in the beginning of
> tpm_common_write() instead of having three different call sites.
> 
> Replacing two memsets with one could be a prepending commit.
> 
> >  		}
> >  
> >  		priv->data_pending = 0;
> >  	}
> >  
> > +out:
> > +	if (!priv->partial_data) {
> > +		*off = 0;
> > +		del_singleshot_timer_sync(&priv->user_read_timer);
> > +		flush_work(&priv->timeout_work);
> > +	}
> >  	mutex_unlock(&priv->buffer_mutex);
> >  	return ret_size;
> >  }
> > @@ -150,6 +168,9 @@ ssize_t tpm_common_write(struct file *file, const char __user *buf,
> >  		goto out;
> >  	}
> >  
> > +	priv->partial_data = 0;
> > +	*off = 0;
> > +
> >  	/*
> >  	 * If in nonblocking mode schedule an async job to send
> >  	 * the command return the size.
> > @@ -184,7 +205,7 @@ __poll_t tpm_common_poll(struct file *file, poll_table *wait)
> >  
> >  	poll_wait(file, &priv->async_wait, wait);
> >  
> > -	if (priv->data_pending)
> > +	if (priv->data_pending || priv->partial_data)
> >  		mask = EPOLLIN | EPOLLRDNORM;
> >  	else
> >  		mask = EPOLLOUT | EPOLLWRNORM;
> > diff --git a/drivers/char/tpm/tpm-dev.h b/drivers/char/tpm/tpm-dev.h
> > index a126b575cb8c..a2ca6a7a06f1 100644
> > --- a/drivers/char/tpm/tpm-dev.h
> > +++ b/drivers/char/tpm/tpm-dev.h
> > @@ -11,6 +11,8 @@ struct file_priv {
> >  
> >  	/* Holds the amount of data passed or an error code from async op */
> >  	ssize_t data_pending;
> > +	/* For partial reads, holds the reminder of a response */
> > +	ssize_t partial_data;
> 
> Naming becomes a mess and the comment for data_pending variable is
> incorrect as it is also used for synchronous operation.
> 
> Maybe add a prepending commit to rename it as
> 
> 	/* Holds the resul of the tpm_transmit() last call. */
> 	ssize_t transmit_result;
> 
> That is at least clear and obvious on what it contains.
> 
> The comment for partial_data is incorrect as the variable does not
> contain any data.
> 
> We could use declare:
> 
> 	/* Holds the count how much of the response is still unread. */
> 	size_t response_pending;
> 
> Observe another remark from your commit: there is no reaso to ssize_t as
> the type as the value should never be a negative number.

In order to correct amazing amount of typos in the last sentence I meant
to say that there is no reason to use ssize_t as response_pending can
hold only positive values.

/Jarkko
