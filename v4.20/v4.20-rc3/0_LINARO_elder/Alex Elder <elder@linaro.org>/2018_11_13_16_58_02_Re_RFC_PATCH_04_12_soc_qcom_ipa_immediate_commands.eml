Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 14 Nov 2018 00:35:24 -0000
Received: from icoremail.net (unknown [209.85.214.171])
	by mail-app2 (Coremail) with SMTP id by_KCgDnX9_CAutbr5eHAQ--.40916S3;
	Wed, 14 Nov 2018 00:58:43 +0800 (CST)
Received: from mail-pl1-f171.google.com (unknown [209.85.214.171])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwA3DTnAAutb12Y5AA--.17127S3;
	Wed, 14 Nov 2018 00:58:40 +0800 (CST)
Received: by mail-pl1-f171.google.com with SMTP id p4-v6so6303130plo.5
        for <xuliker@zju.edu.cn>; Tue, 13 Nov 2018 08:58:40 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:subject:to:cc
         :references:from:message-id:date:user-agent:mime-version:in-reply-to
         :content-language:content-transfer-encoding:sender:precedence
         :list-id;
        bh=MNzXSfoK1sML3OwVXkTovAbcUbqJPVckvuVET53jicI=;
        b=FgbIEi1mp9XT/kzZzSyvuklgk6gP0Z+r6gb1u9/JZlkpPzKCdJUIHNj/NgFTicmX/r
         g9f6KmoYQSY1XGWCE2s5sPzxBN6875XxpXJlYa1BcQw6RPlKCYw1KGGaZWOC/p3wGLdE
         +7qg8szD8+ffAheVuvzK+6Ev+jhjDv9Xs+7miJOPTwBkGToipgivnP38DUsKaQw/+qco
         bjuOcEK4svbMNTEDJwFxQSe6y937aDpm7rvczI8o3NbVFEAw9Cb+f8eVBX722RZ6fwh/
         10SR/TI0q8StCtsMAR90uinhGqmrdJQD3k15AzYQfiD6s36GN5EOAGhUfP6trnGhUWrg
         w+Mw==
X-Gm-Message-State: AGRZ1gJOtdjgYeqPBFaebl0x4We3bVmj9RzObOrZwBbrFbtMRYobjw87
	Ll/TRoZDAFcLqFDHI+9EqbIy4q3fpdxlSH+BtmK+HbNJMzUdZ9NiOA==
X-Received: by 2002:a17:902:7848:: with SMTP id e8-v6mr474649pln.188.1542128319887;
        Tue, 13 Nov 2018 08:58:39 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp4715388pjt;
        Tue, 13 Nov 2018 08:58:39 -0800 (PST)
X-Google-Smtp-Source: AJdET5c5vG3esoWDwvivDmAGYhIsWmVKBKsJqC/qwqPRo+iDVcjYwHjAsUXGbO/LdEATCl+9wgMi
X-Received: by 2002:a17:902:e01:: with SMTP id 1-v6mr5646278plw.251.1542128318988;
        Tue, 13 Nov 2018 08:58:38 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542128318; cv=none;
        d=google.com; s=arc-20160816;
        b=C5kWrCgZvbPc8vqjgBjp65G70OXsRBzfQm36Xqpip4oHWz4m7d7xGTd0mewfaVxTPN
         nukjycc1xjH/xeZkRQ9QOPSC0dgWaRAnJcQyPU/xXkALaPZ45K6a/7lwNEIP7LtuEy1I
         2iF1y7jN5crIfQLgJiPrIKV5Sm/6dG71qGGZMUoJT4sAt0eDmghwAKFfmEMScPgG5d/0
         9vrDDof0bTX/BJr5tgBAHywpgxklyDmx6WakjpiBgkIxt6fLQoFKVTet00RhBDF+BMZf
         jjKvcODZnoVLG1HLsCczRPwO5ABT5aH9ys/mhHuK9uhfxfOft7bZlATOcyBsgraQZvz0
         VsTg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding
         :content-language:in-reply-to:mime-version:user-agent:date
         :message-id:from:references:cc:to:subject:dkim-signature;
        bh=MNzXSfoK1sML3OwVXkTovAbcUbqJPVckvuVET53jicI=;
        b=eRxUETR5ch48Dgn9S+l/PNbjJ5SzuqI0I+UMpEXIkpE2F/pvhaHnEJq5Y1w71ZAswI
         HTldvsRQV3b4B+huvFBDjhQJSIytzeJdPhqA0KcZYfe2U3WmP/67sO8Yk3j9TgXKU7ys
         2NYcqGTmsF1a12S5EUnW7aR5U915ckRaZDZBU2GN7V6NIJS0V0JHP8U4/BFyqzES5L/w
         RaiAPE8G7t5Vyk3vwuivYrrdcYk1C9vGwwUoNpJmmNkKzEcCpZqM8bouvCJnhtzV1LAo
         3JhPB8DR9Ecjzg3lDPHEDEZ9G7v9Nu4WoGuQbIWeRsaS1jsS+WlqTCrCJgqvSUYxabjM
         QNBg==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@linaro.org header.s=google header.b=OmzcFMMT;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=linaro.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id b94-v6si22310833plb.396.2018.11.13.08.58.24;
        Tue, 13 Nov 2018 08:58:38 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1731448AbeKNC5C (ORCPT <rfc822;lrx0014@gmail.com> + 99 others);
        Tue, 13 Nov 2018 21:57:02 -0500
Received: from mail-ot1-f67.google.com ([209.85.210.67]:35500 "EHLO
        mail-ot1-f67.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728431AbeKNC5B (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 13 Nov 2018 21:57:01 -0500
Received: by mail-ot1-f67.google.com with SMTP id 81so11991154otj.2
        for <linux-kernel@vger.kernel.org>; Tue, 13 Nov 2018 08:58:05 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=subject:to:cc:references:from:message-id:date:user-agent
         :mime-version:in-reply-to:content-language:content-transfer-encoding;
        bh=MNzXSfoK1sML3OwVXkTovAbcUbqJPVckvuVET53jicI=;
        b=OmzcFMMTczkNvBzNH6VOgxT7Ti1dbym24Vy37hrpB1QvImzzIR6643cbIXR/7IdJRi
         M3KTS4xSIhsCh7jjO5k8zZ+0pU3aMYA5HCkgZY0uvJ22BevHbcjFMGzeCeYkc7OF/M5D
         I54QAjF1J34b+C+HnTA0JUZlIrEUwUEB9xSPo=
X-Received: by 2002:a9d:7097:: with SMTP id l23mr3419736otj.49.1542128285147;
        Tue, 13 Nov 2018 08:58:05 -0800 (PST)
Received: from [172.22.22.26] (c-71-195-29-92.hsd1.mn.comcast.net. [71.195.29.92])
        by smtp.googlemail.com with ESMTPSA id 82-v6sm8587994oid.36.2018.11.13.08.58.03
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 13 Nov 2018 08:58:04 -0800 (PST)
Subject: Re: [RFC PATCH 04/12] soc: qcom: ipa: immediate commands
To: Arnd Bergmann <arnd@arndb.de>
Cc: David Miller <davem@davemloft.net>,
        Bjorn Andersson <bjorn.andersson@linaro.org>,
        Ilias Apalodimas <ilias.apalodimas@linaro.org>,
        Networking <netdev@vger.kernel.org>,
        DTML <devicetree@vger.kernel.org>, linux-arm-msm@vger.kernel.org,
        linux-soc@vger.kernel.org,
        Linux ARM <linux-arm-kernel@lists.infradead.org>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        syadagir@codeaurora.org, mjavid@codeaurora.org,
        Rob Herring <robh+dt@kernel.org>,
        Mark Rutland <mark.rutland@arm.com>
References: <20181107003250.5832-1-elder@linaro.org>
 <20181107003250.5832-5-elder@linaro.org>
 <CAK8P3a3iKshE3yCG477AeZbKbLtpDwMhn5mfLySFRLOLmUv5AQ@mail.gmail.com>
From: Alex Elder <elder@linaro.org>
Message-ID: <dbaf1c86-ab9d-fa90-6718-998f1f1b6dd3@linaro.org>
Date: Tue, 13 Nov 2018 10:58:02 -0600
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <CAK8P3a3iKshE3yCG477AeZbKbLtpDwMhn5mfLySFRLOLmUv5AQ@mail.gmail.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwA3DTnAAutb12Y5AA--.17127S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxGF1xKw13Zr13WFykXw45trb_yoWrKr15p3
	y3Gr1UKrsrXF18Zrnruw4xZF9a9ws5CF13JryUGryYyrn0grn2kF10yFWrua45Aw4ruF18
	ZF4qv39xCF4DZrJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUmvb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_Gr1j6F4UJwA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwAS0I0E0x
	vYzxvE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AK
	xVWUJVWUGwAv7VC2z280aVAFwI0_Jr0_Gr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcV
	AKI48JMx02cVCv0xWlc7I2V7IY0VAS07AlzVAYIcxG8wCY1x0264kExVAvwVAq07x20xyl
	c7Ca8VAvwVCFzxkY4VCF77xAMxkIecxEwVCI4VWUMxkI7II2jI8vz4vEwIxGrwCYIxAIcV
	C0I7IYx2IY67AKxVW8JVW5JwCYIxAIcVC0I7IYx2IY6xkF7I0E14v26r4j6F4UMxvI42IY
	6I8E87Iv67AKxVWxJVW8Jr1lcIIF0xvEx4A2jsIEc7CjxVAFwI0_Gr0_Gr1UMxAIw28Icx
	kI7VAKI48JMxAIw28IcVAKzI0EY4vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY
	6r1j6r4UMI8I3I0E5I8CrVAFwI0_Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17
	CEb7AF67AKxVWUtVW8ZwCIc40Y0x0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Gr0_ZrUv
	cSsGvfC2KfnxnUUI43ZEXa7IUOAku3UUUUU==

On 11/7/18 8:36 AM, Arnd Bergmann wrote:
> On Wed, Nov 7, 2018 at 1:33 AM Alex Elder <elder@linaro.org> wrote:
>>
>> +/**
>> + * struct ipahal_context - HAL global context data
>> + * @empty_fltrt_tbl:   Empty table to be used for table initialization
>> + */
>> +static struct ipahal_context {
>> +       struct ipa_dma_mem empty_fltrt_tbl;
>> +} ipahal_ctx_struct;
>> +static struct ipahal_context *ipahal_ctx = &ipahal_ctx_struct;
> 
> Remove the global variables here

Not done yet, but I will do this.  I've been working on eliminating
the top-level "ipa_ctx" global (which is *very* pervasive) and in
the process I'm eliminating all the others as well.  I'll get to
this soon.

>> +/* Immediate commands H/W structures */
>> +
>> +/* struct ipa_imm_cmd_hw_ip_fltrt_init - IP_V*_FILTER_INIT/IP_V*_ROUTING_INIT
>> + * command payload in H/W format.
>> + * Inits IPv4/v6 routing or filter block.
>> + * @hash_rules_addr: Addr in system mem where hashable flt/rt rules starts
>> + * @hash_rules_size: Size in bytes of the hashable tbl to cpy to local mem
>> + * @hash_local_addr: Addr in shared mem where hashable flt/rt tbl should
>> + *  be copied to
>> + * @nhash_rules_size: Size in bytes of the non-hashable tbl to cpy to local mem
>> + * @nhash_local_addr: Addr in shared mem where non-hashable flt/rt tbl should
>> + *  be copied to
>> + * @rsvd: reserved
>> + * @nhash_rules_addr: Addr in sys mem where non-hashable flt/rt tbl starts
>> + */
>> +struct ipa_imm_cmd_hw_ip_fltrt_init {
>> +       u64 hash_rules_addr;
>> +       u64 hash_rules_size     : 12,
>> +           hash_local_addr     : 16,
>> +           nhash_rules_size    : 12,
>> +           nhash_local_addr    : 16,
>> +           rsvd                : 8;
>> +       u64 nhash_rules_addr;
>> +};
> 
> In hardware structures, you should not use bit fields, as the ordering
> of the bits is not well-defined in C. The only portable way to do this
> is to use shifts and masks unfortunately.

This is something I held off fixing because I have seen other use
of bit fields in the kernel.  I wasn't sure whether my instinct about
it (which matches what you say) was wrong, and didn't want to do the
work to change things over to masks without knowing.  Based on your
suggestion, I will proceed with this conversion.

>> +struct ipa_imm_cmd_hw_hdr_init_local {
>> +       u64 hdr_table_addr;
>> +       u32 size_hdr_table      : 12,
>> +           hdr_addr            : 16,
>> +           rsvd                : 4;
>> +};
> 
> I would also add a 'u32 pad' member at the end to make the padding
> explicit here, or mark the first member as '__aligned(4) __packed'
> if you want to avoid the padding.

Yes, this is a good suggestion, and I will implement it.

You're right that the actual size of this structure includes the
extra 4 byte pad.  But I'm not actually sure whether the hardware
touches it because the size of immediate commands is implied by
the opcode.  To be safe, I'll make the pad explicit; but if I
learn it's not needed I'll define it to be packed.

>> +void *ipahal_dma_shared_mem_write_pyld(struct ipa_dma_mem *mem, u32 offset)
>> +{
>> +       struct ipa_imm_cmd_hw_dma_shared_mem *data;
>> +
>> +       ipa_assert(mem->size < 1 << 16);        /* size is 16 bits wide */
>> +       ipa_assert(offset < 1 << 16);           /* local_addr is 16 bits wide */
>> +
>> +       data = kzalloc(sizeof(*data), GFP_KERNEL);
>> +       if (!data)
>> +               return NULL;
>> +
>> +       data->size = mem->size;
>> +       data->local_addr = offset;
>> +       data->direction = 0;    /* 0 = write to IPA; 1 = read from IPA */
>> +       data->skip_pipeline_clear = 0;
>> +       data->pipeline_clear_options = IPAHAL_HPS_CLEAR;
>> +       data->system_addr = mem->phys;
>> +
>> +       return data;
>> +}
> 
> The 'void *' return looks odd here, and also the dynamic allocation.

It was done because it allows the definition of the data structure
to be hidden within this file.

> It looks to me like all these functions could be better done the
> other way round, basically putting the
> ipa_imm_cmd_hw_dma_shared_mem etc structures on the stack
> of the caller. At least for this one, the dynamic allocation
> doesn't help at all because the caller is the same that
> frees it again after the command. I suspect the same is
> true for a lot of those commands.

Yes, I see what you're saying.  In fact, now that I look, all of
these payload allocating functions except for one are used just
the way you describe (freed in the same function that uses it).
And the one is saved with the intention of avoiding an allocation
failure...  But I'll mention that this code was structured very
differently originally.

So I agree, putting them on the stack (given they're relatively
small--most 16 bytes one 24 bytes) is better.  And it seems I
can reduce some complexity by getting rid of that preallocated
command, which is a great outcome.

If I run into trouble implementing any of the above suggestions
I will circle back and explain.

Thanks a lot.

					-Alex

> 
>        Arnd
> 
