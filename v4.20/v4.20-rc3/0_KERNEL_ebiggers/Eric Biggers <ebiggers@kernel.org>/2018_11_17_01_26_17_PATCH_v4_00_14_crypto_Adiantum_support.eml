Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 17 Nov 2018 03:15:48 -0000
Received: from icoremail.net (unknown [209.85.210.178])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH3qsb+9bn6CmAQ--.49337S3;
	Sat, 17 Nov 2018 09:32:29 +0800 (CST)
Received: from mail-pf1-f178.google.com (unknown [209.85.210.178])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwA3H0ulb+9b_8hLAA--.4134S3;
	Sat, 17 Nov 2018 09:32:21 +0800 (CST)
Received: by mail-pf1-f178.google.com with SMTP id w73so2863039pfk.10
        for <xuliker@zju.edu.cn>; Fri, 16 Nov 2018 17:32:21 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:mime-version:content-transfer-encoding:sender
         :precedence:list-id;
        bh=V8CEmdOjK0m8NiLKmRdNvN5X0fzd9I4HMiTONRt8uRY=;
        b=sQfqvDjIEBiqz+cKHrf2NCu7oWKIPR0X8HUs7M1UUPS+j/EFa2c9LcqeERLstz1EBH
         iefCQ7riUhc5m26zmAeb8QInzb1vErjpXOCa/hKAejhofA8g9Iyl6VyeKW0brUc5wWka
         O5RfWvxfVdEOnX7FZ3crOu2n9GzOZZmn7KA/X2KiZCszbYp+gXDtQ/e3VIJZIP+UcRbZ
         jZg4kAWZN5OjosA2hcyKk/Ixg5iMHQuwEUZmY5TxwU/WxAR1hKLHU+QGmIr5kup/3Sgn
         pXztQJ1WxBFZyBeKm9qhtdbnhZgp4lgScb3xXeG1sozBorg2WHmxvRFqsQpycMHqauxd
         Y7ZA==
X-Gm-Message-State: AGRZ1gIXQx8gt73s+MNUnFSlA+LcXV5932HB6B2yV6YNtSsiDqYbtieA
	tEKG9/AIVksrBQ7VuggBU/K6fDmNyZKQsNKmaI/7DapwQ5VJBFA=
X-Received: by 2002:a63:fd53:: with SMTP id m19mr12291459pgj.340.1542418340740;
        Fri, 16 Nov 2018 17:32:20 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp26254pju;
        Fri, 16 Nov 2018 17:32:19 -0800 (PST)
X-Google-Smtp-Source: AJdET5eADI0tdSRzXhU1RflMFJyyAHg438WvEQ4H2pWNHo/ZGLyS1HmSpexPyPFZ2safC67caANR
X-Received: by 2002:a63:2b01:: with SMTP id r1mr11892317pgr.432.1542418339506;
        Fri, 16 Nov 2018 17:32:19 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542418339; cv=none;
        d=google.com; s=arc-20160816;
        b=07xzIFbc88ZVYeYVJJbq89RvrJybU9Jc12vEGj1m8Gzq4rC1FrN3lqkpCtHXNkZNYw
         TlF/hvodRTLGCZv4ZO3EB1oxXBITe8UkkgsmIWnkJIVYcX4iQMkSIJRqyIdWXjwFGCKy
         pv46yppuU6M6qsJ7y9IuKDsvGJw0u5dE6lq6ue8gcSSw/S8iKiNdYXq8Nx/ClYk/McDl
         lEFO6QnMybI8KlLzTKn6cdAzLy5bDutoEsQC9AmfN/VKNMuHe1k8OZln2EpIlfiNXgqk
         5ahLV+XEZAxNjCJLS2LsqgBb1psA/NBplxqydAEbQnOtaU52XzwAgyoBY3DrVRrWFwMO
         kPPQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :message-id:date:subject:cc:to:from:dkim-signature;
        bh=V8CEmdOjK0m8NiLKmRdNvN5X0fzd9I4HMiTONRt8uRY=;
        b=RMPj0d2+DZdr2Jn+XQt5seD27rA9HYJdK4LcSJCmaKy/wQvntonNAuMky/pRC2RHH9
         cCXxN5Jjr91jxXFQ2XvXZI1mBbxa7tW8r9JFMDt7KeVoa48ybbZZglUgwmdkmslYQ8Aa
         qqxft/c/pjcfvm8Fa1CBmVriJJKnMHkykdUXcUXNIVgZDaVMuBSInFvcu5etowaVGybG
         HusM4FPn3f4HCGem5/8Texw7N/QFoOralleLi1tHu4O+BFchpOUmBZO4p7mjHbNxf2el
         iExPkCNLBucqDipW5deVzsJ5grZOWT5L6zuUmln/pBPhruU+opFd1ceChmNuxpdHGpe3
         dUFg==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b=C87ch4v4;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id r34si12429716pga.242.2018.11.16.17.31.59;
        Fri, 16 Nov 2018 17:32:19 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730286AbeKQLnf (ORCPT <rfc822;xjxyklwx@gmail.com> + 99 others);
        Sat, 17 Nov 2018 06:43:35 -0500
Received: from mail.kernel.org ([198.145.29.99]:51728 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1729894AbeKQLne (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 17 Nov 2018 06:43:34 -0500
Received: from ebiggers.mtv.corp.google.com (unknown [104.132.1.85])
        (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 81A1C2087C;
        Sat, 17 Nov 2018 01:28:48 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1542418128;
        bh=9n89ehypy57EBjk7EcxFf2riPRLKuN15YVK6MubQ4fA=;
        h=From:To:Cc:Subject:Date:From;
        b=C87ch4v41xlmCaQ9lqjlS3SskX/+JTDKdposikgjSHsmQukYx+bcCzt6r+ps6qOgV
         M2zbMwbLL3JIkq6iWOsHy0AUrHism/jarlWpIa3nhB4TQhLQH5j1tj8p2ClB+gfPew
         G1X8v8LMjjJ4FdOcW6IrmY+1a7C6ZOSFrZo8b/Ag=
From: Eric Biggers <ebiggers@kernel.org>
To: linux-crypto@vger.kernel.org,
        Herbert Xu <herbert@gondor.apana.org.au>
Cc: linux-fscrypt@vger.kernel.org,
        linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org,
        Paul Crowley <paulcrowley@google.com>,
        Greg Kaiser <gkaiser@google.com>,
        "Jason A . Donenfeld" <Jason@zx2c4.com>,
        Samuel Neves <samuel.c.p.neves@gmail.com>,
        Tomer Ashur <tomer.ashur@esat.kuleuven.be>,
        Eric Biggers <ebiggers@kernel.org>
Subject: [PATCH v4 00/14] crypto: Adiantum support
Date: Fri, 16 Nov 2018 17:26:17 -0800
Message-Id: <20181117012631.23528-1-ebiggers@kernel.org>
X-Mailer: git-send-email 2.19.1.1215.g8438c0b245-goog
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwA3H0ulb+9b_8hLAA--.4134S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3AFWDAFWktF4xGr13KF43trb_yoWfXryDpa
	1rC398C398GryUCaykJw1fXFyrt3yUuFW5Xw4qq34jq34xJFyxtrWIkF4Y9asrJF98J34f
	ZFZavF9xWwnxAFJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPSb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26rxl6s0DM28EF7xvwVC2z280aVCY1x0267AKxVW0oVCq3wAS0I0E0xvYzx
	vE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AKxVWU
	GVWUXwAv7VC2z280aVAFwI0_Gr0_Cr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcxkI7V
	AKI48JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE44CYbxCE4x80FwCY
	02Avz4vEIxC_KwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_Xr0_Ar1lcI
	IF0xvE2Ix0cI8IcVCY1x0267AKxVW8JVWxJwCYIxAIcVC2z280aVAFwI0_Gr1j6F4UJwCY
	IxAIcVC2z280aVCY1x0267AKxVW8Jr0_Cr1UMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI
	0EY4vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAF
	wI0_Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUtVW8ZwCIc4
	0Y0x0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Gr0_ZrUvcSsGvfC2KfnxnUUI43ZEXa7I
	UOJ73PUUUUU==

Hello,

We've been working to find a way to bring storage encryption to
entry-level Android devices like the inexpensive "Android Go" devices
sold in developing countries, and some smartwatches.  Unfortunately,
often these devices still ship with no encryption, since for cost
reasons they have to use older CPUs like ARM Cortex-A7; and these CPUs
lack the ARMv8 Cryptography Extensions, making AES-XTS much too slow.

We're trying to change this, since we believe encryption is for
everyone, not just those who can afford it.  And while it's unknown how
long CPUs without AES support will be around, there will likely always
be a "low end"; and in any case it's immensely valuable to provide a
software-optimized cipher that doesn't depend on hardware support.
Lack of hardware support should not be an excuse for no encryption.

But after an extensive search (e.g. see [1]) we were unable to find an
existing cipher that simultaneously meets the very strict performance
requirements on ARM processors, is secure (including having sufficient
security parameters as well as sufficient cryptanalysis of any
primitive(s) used), is suitable for practical use in dm-crypt and
fscrypt, *and* avoids any particularly controversial primitive.

Therefore, we (well, Paul Crowley did the real work) designed a new
encryption mode, Adiantum.  In essence, Adiantum makes it secure to use
the ChaCha stream cipher for disk encryption.  Adiantum is specified by
our paper here: https://eprint.iacr.org/2018/720.pdf ("Adiantum:
length-preserving encryption for entry-level processors").  Reference
code and test vectors are here: https://github.com/google/adiantum.
Most of the high-level concepts of Adiantum are not new; similar
existing modes include XCB, HCTR, and HCH.  Adiantum and these modes are
true wide-block modes (tweakable super-pseudorandom permutations), so
they actually provide a stronger notion of security than XTS.

Adiantum is an improved version of our previous algorithm, HPolyC [2].
Like HPolyC, Adiantum uses XChaCha12, two passes of an
ε-almost-∆-universal (εA∆U) hash function, and one AES-256 encryption of
a single 16-byte block.  On ARM Cortex-A7, on 4096-byte messages
Adiantum is about 4x faster than AES-256-XTS (about 5x for decryption),
and about 30% faster than Speck128/256-XTS.

Adiantum is a construction, not a primitive.  Its security is reducible
to that of XChaCha12 and AES-256, subject to a security bound; the proof
is in Section 5 of our paper.  Therefore, one need not "trust" Adiantum;
they only need trust XChaCha12 and AES-256.  Note that of these two
primitives, AES-256 currently has the lower security margin.

Adiantum is ~20% faster than HPolyC, with no loss of security; in fact,
Adiantum's security bound is slightly better than HPolyC's.  It does
this by choosing a faster εA∆U hash function: it still uses Poly1305's
εA∆U hash function, but now a hash function from the "NH" family of hash
functions is used to "compress" the message by 32x first.  NH is εAU (as
shown in the UMAC paper[3]) but is over twice as fast as Poly1305.  Key
agility is reduced, but that's acceptable for disk encryption.

NH is also very simple, and it's easy to implement in SIMD assembly,
e.g. in ARM NEON.  Now, to get good performance only a SIMD
implementation of NH is required, not Poly1305.  Therefore, Adiantum can
be easier to port to new platforms than HPolyC, despite Adiantum's
slightly increased complexity.  For now this patchset only includes an
ARM32 NEON implementation of NH, but as a proof of concept I've also
written SSE2, AVX2, and ARM64 NEON implementations of NH; see
https://github.com/google/adiantum/tree/master/benchmark/src.

This patchset adds Adiantum to Linux's crypto API, focusing on generic
and ARM32 implementations.  Patches 1-9 add support for XChaCha20 and
XChaCha12.  Patches 10-13 add NHPoly1305 support, needed for Adiantum
hashing.  Patch 14 adds Adiantum support as a skcipher template.

This patchset applies to cryptodev.  It can also be found in git at
branch "adiantum-v4" of:
https://git.kernel.org/pub/scm/linux/kernel/git/ebiggers/linux.git

With this patchset, Adiantum is already usable in dm-crypt via the
"capi:" cipher syntax.  I'll also be adding Adiantum support to fscrypt
via the patch https://patchwork.kernel.org/patch/10669339/, but I
dropped it from this series for now since it will be taken through the
fscrypt git tree instead.  Note that in fscrypt, Adiantum will also fix
an information leak in filenames encryption when filenames share a
common prefix, and Adiantum's long IV support make it safe to use the
same key for many files, improving performance even more.

Again, for more details please read our paper:

    Adiantum: length-preserving encryption for entry-level processors
    (https://eprint.iacr.org/2018/720.pdf)

References:
  [1] https://www.spinics.net/lists/linux-crypto/msg33000.html
  [2] https://patchwork.kernel.org/cover/10558059/
  [3] https://fastcrypto.org/umac/umac_proc.pdf

Changed since v3:
  - Rebase onto cryptodev because of recent ChaCha20 changes.
  - Drop fscrypt patch; I'm sending it as a standalone patch.

Changed since v2:
  - Simplify the generic NH implementation.
  - Add patches to reduce atomic walks and disabling preemption.
  - Split Poly1305 changes into two patches.
  - Add tcrypt test mode for Adiantum.
  - Make NEON 'chacha_permute' a function rather than a macro.
  - Use .base.* style when declaring algorithms.
  - Replace BUG_ON() in chacha_permute() with WARN_ON_ONCE().
  - Set Adiantum instance {min,max}_keysize correctly in all cases.
  - Make the Adiantum template take the nhpoly1305 driver name as
    optional third argument (useful for testing).

  Thanks to Ard Biesheuvel for reviewing the patches.

Changed since v1:
  - Replace HPolyC with Adiantum (uses a faster hash function).
  - Drop ARM accelerated Poly1305.
  - Add fscrypt patch.

Eric Biggers (14):
  crypto: chacha20-generic - add HChaCha20 library function
  crypto: chacha20-generic - don't unnecessarily use atomic walk
  crypto: chacha20-generic - add XChaCha20 support
  crypto: chacha20-generic - refactor to allow varying number of rounds
  crypto: chacha - add XChaCha12 support
  crypto: arm/chacha20 - limit the preemption-disabled section
  crypto: arm/chacha20 - add XChaCha20 support
  crypto: arm/chacha20 - refactor to allow varying number of rounds
  crypto: arm/chacha - add XChaCha12 support
  crypto: poly1305 - use structures for key and accumulator
  crypto: poly1305 - add Poly1305 core API
  crypto: nhpoly1305 - add NHPoly1305 support
  crypto: arm/nhpoly1305 - add NEON-accelerated NHPoly1305
  crypto: adiantum - add Adiantum support

 arch/arm/crypto/Kconfig                       |    7 +-
 arch/arm/crypto/Makefile                      |    6 +-
 ...hacha20-neon-core.S => chacha-neon-core.S} |   98 +-
 arch/arm/crypto/chacha-neon-glue.c            |  201 ++
 arch/arm/crypto/chacha20-neon-glue.c          |  127 -
 arch/arm/crypto/nh-neon-core.S                |  116 +
 arch/arm/crypto/nhpoly1305-neon-glue.c        |   77 +
 arch/arm64/crypto/chacha20-neon-glue.c        |   40 +-
 arch/x86/crypto/chacha20_glue.c               |   48 +-
 arch/x86/crypto/poly1305_glue.c               |   20 +-
 crypto/Kconfig                                |   46 +-
 crypto/Makefile                               |    4 +-
 crypto/adiantum.c                             |  658 ++++
 crypto/chacha20_generic.c                     |  137 -
 crypto/chacha20poly1305.c                     |   10 +-
 crypto/chacha_generic.c                       |  217 ++
 crypto/nhpoly1305.c                           |  254 ++
 crypto/poly1305_generic.c                     |  174 +-
 crypto/tcrypt.c                               |   12 +
 crypto/testmgr.c                              |   30 +
 crypto/testmgr.h                              | 2856 ++++++++++++++++-
 drivers/char/random.c                         |   51 +-
 drivers/crypto/caam/caamalg.c                 |    2 +-
 drivers/crypto/caam/caamalg_qi2.c             |    8 +-
 drivers/crypto/caam/compat.h                  |    2 +-
 include/crypto/chacha.h                       |   54 +
 include/crypto/chacha20.h                     |   28 -
 include/crypto/nhpoly1305.h                   |   74 +
 include/crypto/poly1305.h                     |   28 +-
 lib/Makefile                                  |    2 +-
 lib/{chacha20.c => chacha.c}                  |   59 +-
 31 files changed, 4931 insertions(+), 515 deletions(-)
 rename arch/arm/crypto/{chacha20-neon-core.S => chacha-neon-core.S} (90%)
 create mode 100644 arch/arm/crypto/chacha-neon-glue.c
 delete mode 100644 arch/arm/crypto/chacha20-neon-glue.c
 create mode 100644 arch/arm/crypto/nh-neon-core.S
 create mode 100644 arch/arm/crypto/nhpoly1305-neon-glue.c
 create mode 100644 crypto/adiantum.c
 delete mode 100644 crypto/chacha20_generic.c
 create mode 100644 crypto/chacha_generic.c
 create mode 100644 crypto/nhpoly1305.c
 create mode 100644 include/crypto/chacha.h
 delete mode 100644 include/crypto/chacha20.h
 create mode 100644 include/crypto/nhpoly1305.h
 rename lib/{chacha20.c => chacha.c} (58%)

-- 
2.19.1.1215.g8438c0b245-goog
