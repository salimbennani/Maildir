Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 15 Nov 2018 00:44:07 -0000
Received: from icoremail.net (unknown [209.85.215.177])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH8KrsOxbWvKTAQ--.44294S3;
	Thu, 15 Nov 2018 07:33:00 +0800 (CST)
Received: from mail-pg1-f177.google.com (unknown [209.85.215.177])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwD32UWpsOxbVaxAAA--.1177S3;
	Thu, 15 Nov 2018 07:32:58 +0800 (CST)
Received: by mail-pg1-f177.google.com with SMTP id z10so8086481pgp.7
        for <xuliker@zju.edu.cn>; Wed, 14 Nov 2018 15:32:58 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :from:to:date:cc:subject:message-id:mime-version:sender:precedence
         :list-id;
        bh=Y1d0v2TksFC9O12V6kkTGsZi0FegHIoH0wbVdpY4prg=;
        b=pzoJIy2XyJfI8hcwxz4AxSXiGCbJvRyfYwngIalHCyYi8ksiilClT/Sv+PybEEGsDr
         DRLSNXhNYVLdLjWzcM0YngVZT6LsI0+uHbljovDolEcn48dZdubPqnB3avA2t3GQ5qo9
         Q1ncNsj+5DVcFdZDnBKayNdX2jveYeX/aeG8Eq1TxfrPu7oNTwlUlJ/lLLSXQ2WFQSnu
         NLiuAzQn8Wa86LfF41ghmjdLeX2Pdo24eBWSgXVtPZX2FCZ/E//7gJHfKlAGhs5uHZFD
         VtNPtbv6GoOC/bsddbnPfeXKn9c6heGf8NVZ3d62vGxBYEgdfPwpEQRb2H1ayZ0IF4/A
         98tA==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gLTC7L14lGDGYkbJME6BbM/ewRrm5nJZwG0/CaD0M9KCyT6HDg8
	vau6Gj9/fHivFHyTsKoHWUVOZCdK/FwUg+ZHboTDRXMX2wzJs0N5kA==
X-Received: by 2002:a63:3c44:: with SMTP id i4mr3595806pgn.286.1542238377693;
        Wed, 14 Nov 2018 15:32:57 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp6450147pjt;
        Wed, 14 Nov 2018 15:32:56 -0800 (PST)
X-Google-Smtp-Source: AJdET5eVxkmQL+OS9OpGYnelJPl/6StRkDo50YFBCfXFowt4/lk8fopW0IAuwTg2Cq6tz6np+EAJ
X-Received: by 2002:a17:902:147:: with SMTP id 65-v6mr3949841plb.140.1542238376595;
        Wed, 14 Nov 2018 15:32:56 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542238376; cv=none;
        d=google.com; s=arc-20160816;
        b=P0M9ylA30CQv+qq2e4vXdyRKzZVU0SfCwvR0gyFEu9lmU4IsHm4NlLWOe+8FMWESlW
         kDcwxqjlC4kGaGLwVcevBsG9h+93YAgp7RbhwLFhZo70kjXFwe6R1wCniEwam17Ot/pN
         QhA6aAvwnBoQnkytkcEhLMXoFbW6MooIBuUhinU1oBLkKKQ0wRJ/QbjbxO9nTPQZpmtE
         Y3Sk33ElnpZKvFSdvqvxm/A/RcUJi/HoTBWxgJHxCa7D8H5uDDv5QKqmJbeDa/s/7wJB
         +fTyje07Zye+nM+uxMpPQzvyDQy7qahC89fgibTbOmg6Bbjkr6biiuYzUclhsxbfrXyB
         p6vw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:mime-version:message-id:subject:cc:date
         :to:from;
        bh=Y1d0v2TksFC9O12V6kkTGsZi0FegHIoH0wbVdpY4prg=;
        b=HRR5vbS9QFXGz7T3tOLkC/DiB5dwbrQsW34n4L5RIzh2oFJwHaGkoiYc8tTNn7TW/T
         K/LAeXdEyi63/xV1MHueDNYYhUD89QC51E7iU1H680IqcCdE6yEbPfsJMueXzIrXoOrw
         bTQgvkqJeKdlmYK8ms8a9ThtwS1Zad2FdlkHXbDVO53KPD4N/VNVOZhhEZMQ1qtHOP7I
         Vs7JkAE6En0+zF6Wws7BMNuYMfwk439L4sj69o1+klQu+oA4ZRmmB+eSvnGguMzAjcqW
         Rjpaz+8un3iNB5Hp5zTorFMH52EHwpBryzyN4o55besEOFhwQ/NjwPbFxi7u2HPUZUBb
         35Fw==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id o69-v6si30412262pfo.78.2018.11.14.15.32.42;
        Wed, 14 Nov 2018 15:32:56 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726872AbeKOJhr (ORCPT <rfc822;kristofer.rye@gmail.com>
        + 99 others); Thu, 15 Nov 2018 04:37:47 -0500
Received: from mx2.suse.de ([195.135.220.15]:37400 "EHLO mx1.suse.de"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1725952AbeKOJhr (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 15 Nov 2018 04:37:47 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay1.suse.de (unknown [195.135.220.254])
        by mx1.suse.de (Postfix) with ESMTP id 67831B038;
        Wed, 14 Nov 2018 23:32:22 +0000 (UTC)
From: NeilBrown <neilb@suse.com>
To: David Miller <davem@davemloft.net>, herbert@gondor.apana.org.au,
        tgraf@suug.ch
Date: Thu, 15 Nov 2018 10:32:13 +1100
Cc: netdev@vger.kernel.org, linux-kernel@vger.kernel.org,
        eric.dumazet@gmail.com
Subject: [PATCH] rhashtable: detect when object movement between tables might
 have invalidated a lookup
Message-ID: <87muqbtev6.fsf@notabene.neil.brown.name>
MIME-Version: 1.0
Content-Type: multipart/signed; boundary="=-=-=";
        micalg=pgp-sha256; protocol="application/pgp-signature"
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwD32UWpsOxbVaxAAA--.1177S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxWryfWrW7ZFW7XFyUuF1Dtrb_yoWrKF45pa
	4rKa43trZ0y3WxWryxZa18tr1a9r4rAw4UJF9xK34Yy3W5Gr18XayjyryFyFy5ZFZ3Aa15
	Xry2grs8Cws8taDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUmab7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1lnx0Ee4C267I2x7
	xF54xIwI0E7I0Y6sxI4wAS0I0E0xvYzxvE52x082IY62kv0487M2AExVA0xI801c8C04v7
	Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AKxVWUJVWUGwAv7VC2z280aV
	AFwI0_Gr0_Cr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcVAKI48JMx02cVCv0xWlc7Cj
	xVAKzI0EY4vE52x082I5MxkIecxEwVCI4VWfMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7
	IYx2IY67AKxVW8JVW5JwCYIxAIcVC0I7IYx2IY6xkF7I0E14v26r4j6F4UMxvI42IY6I8E
	87Iv67AKxVWxJr0_GcWlcIIF0xvEx4A2jsIEc7CjxVAFwI0_Cr1j6rxdMxAIw28IcxkI7V
	AKI48JMxAIw28IcVAKzI0EY4vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j
	6r4UMI8I3I0E5I8CrVAFwI0_Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7
	AF67AKxVWUAVWUtwCIc40Y0x0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Gr0_ZrUvcSsG
	vfC2KfnxnUUI43ZEXa7IUYtOz3UUUUU==

--=-=-=
Content-Type: text/plain
Content-Transfer-Encoding: quoted-printable


Some users of rhashtables might need to move an object from one table
to another -  this appears to be the reason for the incomplete usage
of NULLS markers.

To support these, we store a unique NULLS_MARKER at the end of
each chain, and when a search fails to find a match, we check
if the NULLS marker found was the expected one.  If not, the search
may not have examined all objects in the target bucket, so it is
repeated.

The unique NULLS_MARKER is derived from the address of the
head of the chain.  As this cannot be derived at load-time the
static rhnull in rht_bucket_nested() needs to be initialised
at run time.

Any caller of a lookup function must still be prepared for the
possibility that the object returned is in a different table - it
might have been there for some time.

Note that this does NOT provide support for other uses of
NULLS_MARKERs such as allocating with SLAB_TYPESAFE_BY_RCU or changing
the key of an object and re-inserting it in the same table.
These could only be done safely if new objects were inserted
at the *start* of a hash chain, and that is not currently the case.

Signed-off-by: NeilBrown <neilb@suse.com>
=2D--

I sent this patch back in July, but I made a bit of a mess of it.
Here it is again, with a bit more care.

Previously in
   Commit: 9f9a707738aa ("rhashtable: remove nulls_base and related code.")
I removed some 'nulls' related code that wasn't being used and wasn't
usable.
This patch adds code to provide the functionality that the removed
code was intended for.
Specifically, it is now possible to move an object in one rhashtable
into another rhashtable, and still provide correct lookup(etc)
semantics.

If a lookup is performed on a table from which objects can be moved,
then a found object will have been in the table at some point during the
looku, but might not still be there.  If that lookup returns failure,
then you can be sure that there was no matching object in the table for
the entire duration of the lookup.

This patch doesn't provide code to safely move an object.  It just adds
enough code that the already-existing references to NULLS_MARKER()s make
sense.

NeilBrown


 include/linux/rhashtable.h | 25 +++++++++++++++++--------
 lib/rhashtable.c           |  8 +++++---
 2 files changed, 22 insertions(+), 11 deletions(-)

diff --git a/include/linux/rhashtable.h b/include/linux/rhashtable.h
index eb7111039247..8cc240f14834 100644
=2D-- a/include/linux/rhashtable.h
+++ b/include/linux/rhashtable.h
@@ -75,8 +75,10 @@ struct bucket_table {
 	struct rhash_head __rcu *buckets[] ____cacheline_aligned_in_smp;
 };
=20
+#define	RHT_NULLS_MARKER(ptr)	\
+	((void *)NULLS_MARKER(((unsigned long) (ptr)) >> 1))
 #define INIT_RHT_NULLS_HEAD(ptr)	\
=2D	((ptr) =3D (typeof(ptr)) NULLS_MARKER(0))
+	((ptr) =3D RHT_NULLS_MARKER(&(ptr)))
=20
 static inline bool rht_is_a_nulls(const struct rhash_head *ptr)
 {
@@ -471,6 +473,7 @@ static inline struct rhash_head *__rhashtable_lookup(
 		.ht =3D ht,
 		.key =3D key,
 	};
+	struct rhash_head __rcu * const *head;
 	struct bucket_table *tbl;
 	struct rhash_head *he;
 	unsigned int hash;
@@ -478,13 +481,19 @@ static inline struct rhash_head *__rhashtable_lookup(
 	tbl =3D rht_dereference_rcu(ht->tbl, ht);
 restart:
 	hash =3D rht_key_hashfn(ht, tbl, key, params);
=2D	rht_for_each_rcu(he, tbl, hash) {
=2D		if (params.obj_cmpfn ?
=2D		    params.obj_cmpfn(&arg, rht_obj(ht, he)) :
=2D		    rhashtable_compare(&arg, rht_obj(ht, he)))
=2D			continue;
=2D		return he;
=2D	}
+	head =3D rht_bucket(tbl, hash);
+	do {
+		rht_for_each_rcu_continue(he, *head, tbl, hash) {
+			if (params.obj_cmpfn ?
+			    params.obj_cmpfn(&arg, rht_obj(ht, he)) :
+			    rhashtable_compare(&arg, rht_obj(ht, he)))
+				continue;
+			return he;
+		}
+		/* An object might have been moved to a different hash chain,
+		 * while we walk along it - better check and retry.
+		 */
+	} while (he !=3D RHT_NULLS_MARKER(head));
=20
 	/* Ensure we see any new tables. */
 	smp_rmb();
diff --git a/lib/rhashtable.c b/lib/rhashtable.c
index 30526afa8343..852ffa5160f1 100644
=2D-- a/lib/rhashtable.c
+++ b/lib/rhashtable.c
@@ -1179,8 +1179,7 @@ struct rhash_head __rcu **rht_bucket_nested(const str=
uct bucket_table *tbl,
 					    unsigned int hash)
 {
 	const unsigned int shift =3D PAGE_SHIFT - ilog2(sizeof(void *));
=2D	static struct rhash_head __rcu *rhnull =3D
=2D		(struct rhash_head __rcu *)NULLS_MARKER(0);
+	static struct rhash_head __rcu *rhnull;
 	unsigned int index =3D hash & ((1 << tbl->nest) - 1);
 	unsigned int size =3D tbl->size >> tbl->nest;
 	unsigned int subhash =3D hash;
@@ -1198,8 +1197,11 @@ struct rhash_head __rcu **rht_bucket_nested(const st=
ruct bucket_table *tbl,
 		subhash >>=3D shift;
 	}
=20
=2D	if (!ntbl)
+	if (!ntbl) {
+		if (!rhnull)
+			INIT_RHT_NULLS_HEAD(rhnull);
 		return &rhnull;
+	}
=20
 	return &ntbl[subhash].bucket;
=20
=2D-=20
2.14.0.rc0.dirty


--=-=-=
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEEG8Yp69OQ2HB7X0l6Oeye3VZigbkFAlvssH0ACgkQOeye3VZi
gblytxAAqGgxAj7OUxk7eth8rAi1+e09bVYsJx6299Gu0z8MUCcqXUGtPLDyjLTd
b7DriROsrCXGhlNXknWiUiCuzV363jUkmHOJojJeTh+qBDp3hQFpewx3vgUukswQ
hV7xPpcplW2OSki8UnKwIeFPFe41g16ZHiR+CLBF03h4WtK88p0H675EkumgI6z1
Mg0LwzXJ2T202XRt7uMTkFVifuW/RhIkGeS4Bx3zZt4M2jPz00tXwNlgQ/97q5+c
A7RKO2xnP8VmX10N4iX2qubwjIG7rhQ3oQ1WEcFKEhP7uTgwLs0ojSbldo3lI8Gc
XGMqR2hDv9xa81UF+g0LxATHRHhr0jE5f369xvN/8YCZxz2S/7iPyrgSpu9i4gtm
6+0YkCrnLfd+14NTg35G0IBl3FLN3LE5YvD0cu3w+b1AZmtRXPN10J1JovmiACKF
Qcko9P45omo9NkxZF5RdWgXWyAJRs9PzRm4CCsor5bDpn23IVn/oYluTvZrjtlJa
wKCYWJ0XnCXjbPMYw3It10BZ6Op4TpJWLohESyGL3xPlcntCSd65GnvPQbTt+exk
OIyhmf65G3iu+eghovu/BR4BWQv2sHGwmrfPX/e5n5FG+7xrdPTwkf8f6dFo0y0m
Oj0X6GPOJoNWfpSNOs+hS2ota/AdC989kuLRrkJK9bApHKKVAtQ=
=IFph
-----END PGP SIGNATURE-----
--=-=-=--
