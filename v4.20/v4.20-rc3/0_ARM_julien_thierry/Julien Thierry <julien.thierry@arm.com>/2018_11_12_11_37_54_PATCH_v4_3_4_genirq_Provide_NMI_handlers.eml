Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 12 Nov 2018 15:15:20 -0000
Received: from icoremail.net (unknown [209.85.214.176])
	by mail-app2 (Coremail) with SMTP id by_KCgCn3yRDZulbmiV9AQ--.38225S3;
	Mon, 12 Nov 2018 19:38:45 +0800 (CST)
Received: from mail-pl1-f176.google.com (unknown [209.85.214.176])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwB3Uz9CZulbJ4MxAA--.923S3;
	Mon, 12 Nov 2018 19:38:42 +0800 (CST)
Received: by mail-pl1-f176.google.com with SMTP id w24-v6so4246906plq.3
        for <xuliker@zju.edu.cn>; Mon, 12 Nov 2018 03:38:42 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :from:to:cc:subject:date:message-id:in-reply-to:references:sender
         :precedence:list-id;
        bh=GJGDp+Nkits9mmPLW6JH1jAUjU7aW4umDG8W6XqEAEY=;
        b=KJ9L5v6QWoBMC0pyjyg2irbOzHWKtx8vC++D8FU1BNGFZ+ZRvs/iBqM4T/X6TZXTH0
         oZ5fOaSYdeMM/qbqpC1LqvP+Efj1HsX6ypDONCXkiIBFIliIE7DJbqL0QLPMOsQmmtOD
         Xw9uQ4tdpOouDhaDDizNme/gOm7Ol04Ou0CrGFuo/AwDk31CjinfhZfma7zGUYunX3AQ
         OwWWL1Zo4Uqja8goBtChSsswzGNhUE7E5NOjiILRy+9o5Eh9Wc+is0PLFPBUBazkp/lJ
         0O6ET/yArpFgXuzutEsaXv8BWt5KbEnBOq4nzpnv2XhIAdndjppbYQCZWJKHFzf7tq+P
         khRQ==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gIuUUvUDVLvq4mtQnj9D0/EXP0Zchf8G0rDEDNvrI1EX42XqSj8
	GF7XLzWcICbvNLHfmTKf6CudyANuXYH3Awz98PNZuznFUV/s2GzIHg==
X-Received: by 2002:a17:902:b598:: with SMTP id a24-v6mr589274pls.231.1542022722448;
        Mon, 12 Nov 2018 03:38:42 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp3077965pjt;
        Mon, 12 Nov 2018 03:38:41 -0800 (PST)
X-Google-Smtp-Source: AJdET5csluXKh3zpO03ebj3/zjX0aptHwC8IBeDHB2l578sVrnicYqeEDWDt03rmVHDZviQ2fDtK
X-Received: by 2002:a17:902:bd0b:: with SMTP id p11-v6mr600351pls.35.1542022721815;
        Mon, 12 Nov 2018 03:38:41 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542022721; cv=none;
        d=google.com; s=arc-20160816;
        b=BWCco1LLXb74o5f3SBrGb0gO/8AAni2Oe9FQ4iAJskHaeYhxrnTm5xu/FBJ7Q7S1Vg
         TJucadJzGGsiS/27EI90gkAJZiOWSxUgZwRUUyOkRlryDBo7dmbodNPW2ZygeMVtp71B
         NitiRsU6VUiGDcHgxSR61bFvlQgBWZql8ajL0ymG/20hFe0C80j3cD1l2pBKE+tAoC8w
         owKS1E+0v15iNKoz8mK/3RDkzdLKhMORa9Kf1mk0x2eNE9K15OGgUDnBnAJsIfQOmmrz
         juOgoaUPXlveoN4J4l8Mg01JNB40Frc3nxv+y+IweqTBHKHKpWIqXnolhuHsQgOyBG15
         Todw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:references:in-reply-to:message-id:date
         :subject:cc:to:from;
        bh=GJGDp+Nkits9mmPLW6JH1jAUjU7aW4umDG8W6XqEAEY=;
        b=RwZ+Hgc6WQqj5huHI7rtw8XuolJxUxTANbMO6grQUx+UpysbTxEqjRvqYw5Wc25H6s
         OVydOgPSX3VWqerVlYX5WJXq4yqLqcQDWIFuyZBHt5/WjhloiNqRd5LG2Vwam5rd/70M
         rVfxoAHKTRPJY4am/pSS16hBz4hjRV4wEXu+ppB4XLP+MES3m3EjE8XLslD7ml1msGQM
         Mn+F23pmHkK5KplQ6zTbb86sbCVdzlDSuMMwgj55s12T4QN5H9w1bQ89184dGJ4IAXce
         lbhr6ez8xtr4NHbu21qrTcQTFcSq4jaj4a2RQFya2IPYBEgvfCDOXKrYHkTNjlBxFw1d
         2xRA==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id h16si17466418pgh.283.2018.11.12.03.38.27;
        Mon, 12 Nov 2018 03:38:41 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729382AbeKLVbD (ORCPT <rfc822;tomnomnom1@gmail.com>
        + 99 others); Mon, 12 Nov 2018 16:31:03 -0500
Received: from usa-sjc-mx-foss1.foss.arm.com ([217.140.101.70]:34110 "EHLO
        foss.arm.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1728153AbeKLVbC (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 12 Nov 2018 16:31:02 -0500
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
        by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id F023E1650;
        Mon, 12 Nov 2018 03:38:10 -0800 (PST)
Received: from e112298-lin.cambridge.arm.com (usa-sjc-imap-foss1.foss.arm.com [10.72.51.249])
        by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPA id B47073F5A0;
        Mon, 12 Nov 2018 03:38:09 -0800 (PST)
From: Julien Thierry <julien.thierry@arm.com>
To: linux-kernel@vger.kernel.org
Cc: tglx@linutronix.de, peterz@infradead.org, marc.zyngier@arm.com,
        mingo@kernel.org, Julien Thierry <julien.thierry@arm.com>
Subject: [PATCH v4 3/4] genirq: Provide NMI handlers
Date: Mon, 12 Nov 2018 11:37:54 +0000
Message-Id: <1542022675-20833-4-git-send-email-julien.thierry@arm.com>
X-Mailer: git-send-email 1.9.1
In-Reply-To: <1542022675-20833-1-git-send-email-julien.thierry@arm.com>
References: <1542022675-20833-1-git-send-email-julien.thierry@arm.com>
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwB3Uz9CZulbJ4MxAA--.923S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxuF1rur47CFWxJF1kZw1kZrb_yoW5tF4fpF
	WUC3W5ArWkG3WIg3Z3CFsrAFW3AF1rGr4rJ3yIv3yfC34agw1Fy3ZxArnIkan5ArWq9Fy3
	ZFWYga4xuF15Cw7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUBSb7Iv0xC_KF4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1j
	6r18McIj6I8E87Iv67AKxVWxJVW8Jr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcxkI7V
	AKI48JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE44CYbxCE4x80FwCY
	0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_Xr0_Ar1lcIIF0xvE2Ix0cI8IcV
	CY1x0267AKxVW8JVWxJwCYIxAIcVC2z280aVAFwI0_GcCE3s1lcIIF0xvEx4A2jsIEc7Cj
	xVAFwI0_GcCE3s1l42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwVAq07x20xyl4x8a6x
	804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG67AKxVWUJVWUGwC20s026x8G
	jcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r126r1DMIIYrxkI7VAKI48JMIIF0xvE42
	xK8VAvwI8IcIk0rVWUJVWUCbIYCTnIWIevJa73UjIFyTuYvjxUfOJ5UUUUU

Provide flow handlers that are NMI safe for interrupts and percpu_devid
interrupts.

Signed-off-by: Julien Thierry <julien.thierry@arm.com>
Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Marc Zyngier <marc.zyngier@arm.com>
Cc: Peter Zijlstra <peterz@infradead.org>
---
 include/linux/irq.h |  3 +++
 kernel/irq/chip.c   | 54 +++++++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 57 insertions(+)

diff --git a/include/linux/irq.h b/include/linux/irq.h
index e0880a08..a1225dd 100644
--- a/include/linux/irq.h
+++ b/include/linux/irq.h
@@ -600,6 +600,9 @@ static inline int irq_set_parent(int irq, int parent_irq)
 extern void handle_bad_irq(struct irq_desc *desc);
 extern void handle_nested_irq(unsigned int irq);
 
+extern void handle_fasteoi_nmi(struct irq_desc *desc);
+extern void handle_percpu_devid_fasteoi_nmi(struct irq_desc *desc);
+
 extern int irq_chip_compose_msi_msg(struct irq_data *data, struct msi_msg *msg);
 extern int irq_chip_pm_get(struct irq_data *data);
 extern int irq_chip_pm_put(struct irq_data *data);
diff --git a/kernel/irq/chip.c b/kernel/irq/chip.c
index a2b3d9d..c332c17 100644
--- a/kernel/irq/chip.c
+++ b/kernel/irq/chip.c
@@ -730,6 +730,37 @@ void handle_fasteoi_irq(struct irq_desc *desc)
 EXPORT_SYMBOL_GPL(handle_fasteoi_irq);
 
 /**
+ *	handle_fasteoi_nmi - irq handler for NMI interrupt lines
+ *	@desc:	the interrupt description structure for this irq
+ *
+ *	A simple NMI-safe handler, considering the restrictions
+ *	from request_nmi.
+ *
+ *	Only a single callback will be issued to the chip: an ->eoi()
+ *	call when the interrupt has been serviced. This enables support
+ *	for modern forms of interrupt handlers, which handle the flow
+ *	details in hardware, transparently.
+ */
+void handle_fasteoi_nmi(struct irq_desc *desc)
+{
+	struct irq_chip *chip = irq_desc_get_chip(desc);
+	struct irqaction *action = desc->action;
+	unsigned int irq = irq_desc_get_irq(desc);
+	irqreturn_t res;
+
+	trace_irq_handler_entry(irq, action);
+	/*
+	 * NMIs cannot be shared, there is only one action.
+	 */
+	res = action->handler(irq, action->dev_id);
+	trace_irq_handler_exit(irq, action, res);
+
+	if (chip->irq_eoi)
+		chip->irq_eoi(&desc->irq_data);
+}
+EXPORT_SYMBOL_GPL(handle_fasteoi_nmi);
+
+/**
  *	handle_edge_irq - edge type IRQ handler
  *	@desc:	the interrupt description structure for this irq
  *
@@ -908,6 +939,29 @@ void handle_percpu_devid_irq(struct irq_desc *desc)
 		chip->irq_eoi(&desc->irq_data);
 }
 
+/**
+ * handle_percpu_devid_fasteoi_nmi - Per CPU local NMI handler with per cpu
+ *				     dev ids
+ * @desc:	the interrupt description structure for this irq
+ *
+ * Similar to handle_fasteoi_nmi, but handling the dev_id cookie
+ * as a percpu pointer.
+ */
+void handle_percpu_devid_fasteoi_nmi(struct irq_desc *desc)
+{
+	struct irq_chip *chip = irq_desc_get_chip(desc);
+	struct irqaction *action = desc->action;
+	unsigned int irq = irq_desc_get_irq(desc);
+	irqreturn_t res;
+
+	trace_irq_handler_entry(irq, action);
+	res = action->handler(irq, raw_cpu_ptr(action->percpu_dev_id));
+	trace_irq_handler_exit(irq, action, res);
+
+	if (chip->irq_eoi)
+		chip->irq_eoi(&desc->irq_data);
+}
+
 static void
 __irq_do_set_handler(struct irq_desc *desc, irq_flow_handler_t handle,
 		     int is_chained, const char *name)
-- 
1.9.1
