Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 14 Nov 2018 00:36:04 -0000
Received: from icoremail.net (unknown [209.85.215.171])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH+6GFetbAAqIAQ--.41176S3;
	Wed, 14 Nov 2018 02:18:47 +0800 (CST)
Received: from mail-pg1-f171.google.com (unknown [209.85.215.171])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBXP0uEFetbUbI5AA--.10268S3;
	Wed, 14 Nov 2018 02:18:44 +0800 (CST)
Received: by mail-pg1-f171.google.com with SMTP id 32-v6so6070801pgu.2
        for <xuliker@zju.edu.cn>; Tue, 13 Nov 2018 10:18:44 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:date:from:to:cc
         :subject:message-id:references:mime-version:content-disposition
         :in-reply-to:user-agent:sender:precedence:list-id;
        bh=0iZ91iAhX6/NKpiI+j8xiDxJtb/EtX2Kk+HOvLq+lOU=;
        b=p/aBgelHnEME9cz9GDMxRJtqYG1yU3+dUnD11SbJN9kIdlfoiww4C4eDBmoxlg8rnv
         ynJXoKOYmOMUwduljR0GqnPpNHG7weVZ082QzOubid+KlXTDayh/pKtjQ493BXTYBppD
         IQCXeYFRG1EP746jFEN2fND3upTOvSt/OhL2jqtmHMm7RskX/rd3fu4tBU7t3QMTpVpk
         CAOYVXQgsTK6KX2/ZzaNOG8FbzLl2eUahWo+MvOXeE7VFDGDwyGFQ+DM+9CQttPjudMA
         ZijVZUOTuqLsw/8NtBi6W9FazFvsDjv6fYbIeGimLFSRX7EBe++yYLwY3MFixFZDX1i1
         uJlg==
X-Gm-Message-State: AGRZ1gII1PCm32k8uL/fUKqalpbgfVrH/cZH3XosQuqzJY8iPGw9dmvG
	dqIUpNKDHFF+RxNmGajwyWvx/bi/GOtSIPN5wpQ18krhHwMGSiI+wQ==
X-Received: by 2002:a63:9402:: with SMTP id m2mr5492765pge.93.1542133123732;
        Tue, 13 Nov 2018 10:18:43 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp4813966pjt;
        Tue, 13 Nov 2018 10:18:42 -0800 (PST)
X-Google-Smtp-Source: AJdET5eTgw71RIHn5QfUOX4st9Od7EG4GSPV6cbWVxyalybxSuHRpMZvIlmJ8qnt/IFuxlQkGrQT
X-Received: by 2002:a63:ae01:: with SMTP id q1mr5610150pgf.402.1542133122547;
        Tue, 13 Nov 2018 10:18:42 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542133122; cv=none;
        d=google.com; s=arc-20160816;
        b=SJPRXAWuxtJoGXyxpP9J8ONBE6K0H2lgqkSczn+bnIRk6fDw807XByzB/LKL2D0XfC
         RzQnMC4wSkkAHp1KZp4+7MQn5c0PBuUYOnqXGM9uVxElBhbpYE7kf5dUi0+KY+duBYzQ
         vhp74D7eBBgWXM11pywh7NHzW30Cy7CM7U8/uvWb6WuUbzHmLI5fg/jQeIWZqC6cuAYe
         iWyMfKtx9L/FXLgcu+OiiNuJNe4E13Fcr7BQz0cja4ljvieYK/TS2SPRzLK4iCUGktpn
         eai8pnvjakxHqQEJHnk292m4YpHGbhCZ8XTUfQ4LLcL27oSOjAmrGo0XwlbFvAj65Xz1
         txrg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:in-reply-to
         :content-disposition:mime-version:references:message-id:subject:cc
         :to:from:date:dkim-signature;
        bh=0iZ91iAhX6/NKpiI+j8xiDxJtb/EtX2Kk+HOvLq+lOU=;
        b=hpeey3Qr0DS/ty4Y407lo5SLeP4HSNZV581la5FFlNGUTWFf6Fex5kLqi5GcTiwY+r
         XtIC/+qvupUb9knfn5owg4EJI5trswyX+yFNEQwE0GAvPYXiQ4UKeWUcfntdxCpI/6YH
         Nl9HoGvPQSMASs6L12eONa5A9i6RWlq5NJ+7noODxBepeD3qqWN/aQLebq0rIJEvMpQd
         QVgaJsgDt0pm+D/tyVHhMcW7D3h1W32LkektrC0FcJr5CdaqOsX/akthLIaAm1E5nmNE
         vz+umpvq29yLO80IOHDJ+f1fphGhtpjkoE6QVJryfiNwiYgyOq13BPRmT99v4qG1xu2M
         kcQw==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@gmail.com header.s=20161025 header.b=M5DG5OE8;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=NONE sp=QUARANTINE dis=NONE) header.from=gmail.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id u21si20196985pgg.463.2018.11.13.10.18.25;
        Tue, 13 Nov 2018 10:18:42 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730421AbeKNERd (ORCPT <rfc822;lrx0014@gmail.com> + 99 others);
        Tue, 13 Nov 2018 23:17:33 -0500
Received: from mail-pf1-f195.google.com ([209.85.210.195]:46417 "EHLO
        mail-pf1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726659AbeKNERd (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 13 Nov 2018 23:17:33 -0500
Received: by mail-pf1-f195.google.com with SMTP id s9-v6so6447991pfm.13
        for <linux-kernel@vger.kernel.org>; Tue, 13 Nov 2018 10:18:17 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=0iZ91iAhX6/NKpiI+j8xiDxJtb/EtX2Kk+HOvLq+lOU=;
        b=M5DG5OE8sRuwe4W015A/+BEzh1xR+xtQysSNpkwxrQHoCFkzfC2DnrlJh22RvJsiGk
         no2F1zSjnHnVGgq1DB5XDWHFThKAH4IKuzUXKiWs5MUyivxirAS6Qbrwp0kzD8YBC6Xf
         DSAPsKpqNOU9Ls7PVi/cSnqqcnbUa4H9ZnGSM0QTdwFQlWTKNmfoQ996AasuPVWVYT+q
         0DYv4dvS1A5q1w59u36Yb3tfbwKvZZ7UzyBgjHKqQFwHgh2cz+x9mEym4kQfjaLOZ7r3
         WC2/hxWcfe3bf2+rPFq1Dng4yyZe3pdawlSydsB3FyiGdma38+5Ch9Y7oOWRQjZDLx0Z
         nYSA==
X-Received: by 2002:a62:4681:: with SMTP id o1-v6mr6286690pfi.172.1542133097093;
        Tue, 13 Nov 2018 10:18:17 -0800 (PST)
Received: from nishad ([106.51.27.228])
        by smtp.gmail.com with ESMTPSA id l26-v6sm36973261pfg.161.2018.11.13.10.18.13
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Tue, 13 Nov 2018 10:18:16 -0800 (PST)
Date: Tue, 13 Nov 2018 23:48:09 +0530
From: Nishad Kamdar <nishadkamdar@gmail.com>
To: Johan Hovold <johan@kernel.org>
Cc: Alex Elder <elder@kernel.org>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Rui Miguel Silva <rmfrfs@gmail.com>,
        greybus-dev@lists.linaro.org, devel@driverdev.osuosl.org,
        linux-kernel@vger.kernel.org
Subject: Re: [PATCH] greybus: gpio: switch GPIO portions to use
 GPIOLIB_IRQCHIP
Message-ID: <20181113181805.GA32516@nishad>
References: <20181109074735.GA5998@nishad>
 <20181112151509.GH13311@localhost>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181112151509.GH13311@localhost>
User-Agent: Mutt/1.9.4 (2018-02-28)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBXP0uEFetbUbI5AA--.10268S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxtF17Cw4kCF4DWF45Aw1DKFg_yoW3CFWUpF
	W8XayYkF4UJFy2qF1DAw4UZFy3tw4ktr4xC3yxK3s2y3sYvFn5KF1DAryF9rySyrWUGF4v
	vF4xXF95XFyDAFJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPab7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_Cr1j6rxdM28EF7xvwVC2z280aVCY1x0267AKxVWxJr0_GcWle2I262IYc4
	CY6c8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_
	Jr0_Jr4lYx0Ex4A2jsIE14v26r1j6r4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwI
	xGrwCjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xS
	Y4AK6IIF6rylc2IjII80xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26r4j6ryUMxvI42
	IY6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1lcIIF0xvEx4A2jsIE14v26r4UJVWxJr1lcIIF
	0xvEx4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26c
	xK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v2
	6r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_Jw0_GFylIxkGc2
	Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6Fyj6rWUJbIYCTnIWIevJa73UjIFyTuYvjxU
	QFoXUUUUU

On Mon, Nov 12, 2018 at 04:15:09PM +0100, Johan Hovold wrote:
> On Fri, Nov 09, 2018 at 01:17:41PM +0530, Nishad Kamdar wrote:
> > Convert the GPIO driver to use the GPIO irqchip library
> > GPIOLIB_IRQCHIP instead of reimplementing the same.
> 
> Thanks for picking this up. Linus W took a stab at it a couple of years
> ago, but it was never completed. You may want to take a look at that
> thread:
> 
> 	https://lkml.kernel.org/r/1476054589-28422-1-git-send-email-linus.walleij@linaro.org

Thanks for the reference.

> 
> > Signed-off-by: Nishad Kamdar <nishadkamdar@gmail.com>
> > ---
> >  drivers/staging/greybus/Kconfig |   1 +
> >  drivers/staging/greybus/gpio.c  | 123 ++++++--------------------------
> >  2 files changed, 21 insertions(+), 103 deletions(-)
> > 
> > diff --git a/drivers/staging/greybus/Kconfig b/drivers/staging/greybus/Kconfig
> > index ab096bcef98c..b571e4e8060b 100644
> > --- a/drivers/staging/greybus/Kconfig
> > +++ b/drivers/staging/greybus/Kconfig
> > @@ -148,6 +148,7 @@ if GREYBUS_BRIDGED_PHY
> >  config GREYBUS_GPIO
> >  	tristate "Greybus GPIO Bridged PHY driver"
> >  	depends on GPIOLIB
> > +	select GPIOLIB_IRQCHIP
> >  	---help---
> >  	  Select this option if you have a device that follows the
> >  	  Greybus GPIO Bridged PHY Class specification.
> > diff --git a/drivers/staging/greybus/gpio.c b/drivers/staging/greybus/gpio.c
> > index b1d4698019a1..32c228bad33a 100644
> > --- a/drivers/staging/greybus/gpio.c
> > +++ b/drivers/staging/greybus/gpio.c
> > @@ -9,9 +9,7 @@
> >  #include <linux/kernel.h>
> >  #include <linux/module.h>
> >  #include <linux/slab.h>
> > -#include <linux/gpio.h>
> > -#include <linux/irq.h>
> 
> I think you should keep irq.h even if the gpio header currently provides
> it.
> 
> > -#include <linux/irqdomain.h>
> 
> Similarly for this one, if you still rely on it.
>

Ok i'll do that.

> > +#include <linux/gpio/driver.h>
> >  #include <linux/mutex.h>
> >  
> >  #include "greybus.h"
> > @@ -40,8 +38,6 @@ struct gb_gpio_controller {
> >  	struct gpio_chip	chip;
> >  	struct irq_chip		irqc;
> >  	struct irq_chip		*irqchip;
> 
> This should not be needed any more either.
>

Just to confirm, by thism you mean only 
struct irq_chip	*irqchip; right?

> > -	struct irq_domain	*irqdomain;
> > -	unsigned int		irq_base;
> >  	irq_flow_handler_t	irq_handler;
> >  	unsigned int		irq_default_type;
> 
> Neither should these two.
> 

Ok.

> >  	struct mutex		irq_lock;
> > @@ -365,6 +361,7 @@ static int gb_gpio_request_handler(struct gb_operation *op)
> >  {
> >  	struct gb_connection *connection = op->connection;
> >  	struct gb_gpio_controller *ggc = gb_connection_get_data(connection);
> > +	struct gpio_chip *gc = &ggc->chip;
> 
> Please name the pointer 'chip' as in the rest of the driver to avoid
> confusion with 'ggc'. But looks like you don't need it at all.
>

Yes.

> >  	struct device *dev = &ggc->gbphy_dev->dev;
> >  	struct gb_message *request;
> >  	struct gb_gpio_irq_event_request *event;
> > @@ -391,7 +388,7 @@ static int gb_gpio_request_handler(struct gb_operation *op)
> >  		return -EINVAL;
> >  	}
> >  
> > -	irq = irq_find_mapping(ggc->irqdomain, event->which);
> > +	irq = irq_find_mapping(gc->irq.domain, event->which);
> >  	if (!irq) {
> >  		dev_err(dev, "failed to find IRQ\n");
> >  		return -EINVAL;
> > @@ -506,68 +503,6 @@ static int gb_gpio_controller_setup(struct gb_gpio_controller *ggc)
> >  	return ret;
> >  }
> 
> > -/**
> > - * gb_gpio_irqchip_remove() - removes an irqchip added to a gb_gpio_controller
> > - * @ggc: the gb_gpio_controller to remove the irqchip from
> > - *
> > - * This is called only from gb_gpio_remove()
> > - */
> > -static void gb_gpio_irqchip_remove(struct gb_gpio_controller *ggc)
> > -{
> > -	unsigned int offset;
> > -
> > -	/* Remove all IRQ mappings and delete the domain */
> > -	if (ggc->irqdomain) {
> > -		for (offset = 0; offset < (ggc->line_max + 1); offset++)
> > -			irq_dispose_mapping(irq_find_mapping(ggc->irqdomain,
> > -							     offset));
> > -		irq_domain_remove(ggc->irqdomain);
> > -	}
> > -
> > -	if (ggc->irqchip)
> > -		ggc->irqchip = NULL;
> > -}
> > -
> >  /**
> >   * gb_gpio_irqchip_add() - adds an irqchip to a gpio chip
> >   * @chip: the gpio chip to add the irqchip to
> > @@ -595,8 +530,7 @@ static int gb_gpio_irqchip_add(struct gpio_chip *chip,
> >  			 unsigned int type)
> >  {
> >  	struct gb_gpio_controller *ggc;
> > -	unsigned int offset;
> > -	unsigned int irq_base;
> > +	unsigned int err;
> >  
> >  	if (!chip || !irqchip)
> >  		return -EINVAL;
> > @@ -606,35 +540,21 @@ static int gb_gpio_irqchip_add(struct gpio_chip *chip,
> >  	ggc->irqchip = irqchip;
> >  	ggc->irq_handler = handler;
> >  	ggc->irq_default_type = type;
> > -	ggc->irqdomain = irq_domain_add_simple(NULL,
> > -					ggc->line_max + 1, first_irq,
> > -					&gb_gpio_domain_ops, chip);
> > -	if (!ggc->irqdomain) {
> > -		ggc->irqchip = NULL;
> > -		return -EINVAL;
> > -	}
> >  
> > -	/*
> > -	 * Prepare the mapping since the irqchip shall be orthogonal to
> > -	 * any gpio calls. If the first_irq was zero, this is
> > -	 * necessary to allocate descriptors for all IRQs.
> > -	 */
> > -	for (offset = 0; offset < (ggc->line_max + 1); offset++) {
> > -		irq_base = irq_create_mapping(ggc->irqdomain, offset);
> > -		if (offset == 0)
> > -			ggc->irq_base = irq_base;
> > +	err = gpiochip_irqchip_add(chip,
> > +				   irqchip,
> > +				   first_irq,
> > +				   ggc->irq_handler,
> > +				   type
> 
> Don't break the line here.
> 

Ok.

> > +				   );
> > +	if (err) {
> > +		ggc->irqchip = NULL;
> > +		return err;
> >  	}
> >  
> >  	return 0;
> >  }
> 
> Drop this function as well and call gpiochip_irqchip_add() from probe().
>

Ok. I'll do that.

> > -static int gb_gpio_to_irq(struct gpio_chip *chip, unsigned int offset)
> > -{
> > -	struct gb_gpio_controller *ggc = gpio_chip_to_gb_gpio_controller(chip);
> > -
> > -	return irq_find_mapping(ggc->irqdomain, offset);
> > -}
> > -
> >  static int gb_gpio_probe(struct gbphy_device *gbphy_dev,
> >  			 const struct gbphy_device_id *id)
> >  {
> > @@ -693,7 +613,6 @@ static int gb_gpio_probe(struct gbphy_device *gbphy_dev,
> >  	gpio->get = gb_gpio_get;
> >  	gpio->set = gb_gpio_set;
> >  	gpio->set_config = gb_gpio_set_config;
> > -	gpio->to_irq = gb_gpio_to_irq;
> >  	gpio->base = -1;		/* Allocate base dynamically */
> >  	gpio->ngpio = ggc->line_max + 1;
> >  	gpio->can_sleep = true;
> > @@ -702,24 +621,23 @@ static int gb_gpio_probe(struct gbphy_device *gbphy_dev,
> >  	if (ret)
> >  		goto exit_line_free;
> >  
> > -	ret = gb_gpio_irqchip_add(gpio, irqc, 0,
> > -				   handle_level_irq, IRQ_TYPE_NONE);
> > +	ret = gpiochip_add(gpio);
> >  	if (ret) {
> > -		dev_err(&gbphy_dev->dev, "failed to add irq chip: %d\n", ret);
> > +		dev_err(&gbphy_dev->dev, "failed to add gpio chip: %d\n", ret);
> >  		goto exit_line_free;
> >  	}
> >  
> > -	ret = gpiochip_add(gpio);
> > +	ret = gb_gpio_irqchip_add(gpio, irqc, 0,
> > +				  handle_level_irq, IRQ_TYPE_NONE);
> 
> As you may have noted, we had the registration order reversed here to
> handle a (theoretical) race, which may or may not only have been an
> issue for the old 3.10 vendor kernel this was developed against. I've
> forgotten the details, but see:
> 
> 	88f6ba61f25b ("greybus: gpio: create irqdomain before registering gpio controller")
> 
> It's possibly an issue also for mainline, but this is indeed the
> registration order all other drivers use (even if they tend not to be
> hotpluggable).
> 

Yes, I noted that while taking reference of some of the existing
drivers. Thanks for the explanation though.

> >  	if (ret) {
> > -		dev_err(&gbphy_dev->dev, "failed to add gpio chip: %d\n", ret);
> > -		goto exit_gpio_irqchip_remove;
> > +		dev_err(&gbphy_dev->dev, "failed to add irq chip: %d\n", ret);
> > +		gpiochip_remove(gpio);
> 
> Please use an error label for this.
> 

Ok. I'll do that.

> > +		goto exit_line_free;
> >  	}
> >  
> >  	gbphy_runtime_put_autosuspend(gbphy_dev);
> >  	return 0;
> >  
> > -exit_gpio_irqchip_remove:
> > -	gb_gpio_irqchip_remove(ggc);
> >  exit_line_free:
> >  	kfree(ggc->lines);
> >  exit_connection_disable:
> 
> Thanks,
> Johan

Thanks a lot for the review comments.

Regards,
Nishad
