Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 14 Nov 2018 00:37:02 -0000
Received: from icoremail.net (unknown [209.85.214.179])
	by mail-app2 (Coremail) with SMTP id by_KCgDXv5oQS+tbF0mJAQ--.41306S3;
	Wed, 14 Nov 2018 06:07:12 +0800 (CST)
Received: from mail-pl1-f179.google.com (unknown [209.85.214.179])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwDXvEgMS+tbMYc6AA--.1332S3;
	Wed, 14 Nov 2018 06:07:08 +0800 (CST)
Received: by mail-pl1-f179.google.com with SMTP id w22-v6so6710051plk.0
        for <xuliker@zju.edu.cn>; Tue, 13 Nov 2018 14:07:08 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:date:from:to:cc
         :subject:message-id:references:mime-version:content-disposition
         :in-reply-to:organization:user-agent:sender:precedence:list-id;
        bh=YFIEBqVv5UO4Gg7ttb4fv+yrCwf7OoZpjHpQf/T0jbs=;
        b=gxMFQyUf8OJkxxobypR562Y6qX6Tn5u/VgmbKrzsmtXg7Qe+nmJOW1RBMXzfV3mYG4
         v9r61EB9iOO15aZhcoE+i5kD9PqNM2vRZrP1+OYMWcVohzxJi/gRLDbRsOYdkgu77z1M
         /iFmEbJE8V6wZcLYulclDnhsdVBykRo3XJq0pwDM/nzg1giZjpN9oZHeoLrwH8Gswtlq
         Dw93Syso1xz8NZH9Nshee2n6N5bODuPPCvrEpDeM5OnZX1XHAxXiYFqMoIY6bzkvBlDG
         xEPrD55NekpzGxq0Q9uKYE3pMMTWUoUclDftrt7HaW2ZANzmfXh8i9vmb3saCR1GEv68
         B8qg==
X-Gm-Message-State: AGRZ1gIsyfg4WSUmMWwoSTr49T9tnUCzmy30w5HIysX97fPiBA8A/jd2
	ZEm68WhJ4tN5pKAujZK/9teED0oSbAL+bxtBOz+lMdlydZpsyvTLmQ==
X-Received: by 2002:a17:902:8e81:: with SMTP id bg1-v6mr6880830plb.192.1542146827889;
        Tue, 13 Nov 2018 14:07:07 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp5052191pjt;
        Tue, 13 Nov 2018 14:07:06 -0800 (PST)
X-Google-Smtp-Source: AJdET5deDSjNhGm4o1eCqB1cedZKi4ryIVPfhXpKSQqCZDVMMowEyAJYC7VfTDuUw6Ayexr1nDKC
X-Received: by 2002:a63:dd55:: with SMTP id g21mr6276822pgj.86.1542146826485;
        Tue, 13 Nov 2018 14:07:06 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542146826; cv=none;
        d=google.com; s=arc-20160816;
        b=0BqELMPH8Rh9Rr1XLMsoJ62snt7AZHpin8Enqy3syb3wF5LaSYKvf4x0B+X6gTZvri
         V5esKooGamGNkt4//8qJG9igck31KGec5AoKqviZ7aqKkJrszhrkhQCVyIiVqqBfO6YW
         TC0lDBQRPei9NzYUC9JvwXUrVk1LH8pVUW6RTThzUe4h2AhZ7diqeEyzX+Ni7clwG74x
         U8PQ6iINyutthLMJjNiJ4Cp9KJcMwEa4nh0rtwyt5kCQzlzgfMZzAxtZi+fnMh1YEjqa
         r5tg0E/0owQSsi3H4ymlaHoegOttxjmGn7eomIa409G0lHHE52yYCJ19BsK4+uNyoZj/
         Zrdg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:organization:in-reply-to
         :content-disposition:mime-version:references:message-id:subject:cc
         :to:from:date:dkim-signature;
        bh=YFIEBqVv5UO4Gg7ttb4fv+yrCwf7OoZpjHpQf/T0jbs=;
        b=lMP9BNtlb5QHfQA/zKLELpgaAOR/v6yo9nCMeLUSnVUSOij/DYus3nmV/BOvnw0Xt8
         vfGAA9mzqxMoUBGaeIZCHwwHOZB9HFK6DorYSaWi5Qc4wvXwirBeb0/F0sN+53+oDyth
         Y+9ReUTefGmIpCu4OQ5nNtsoH8w4OAGacI4tMMt7beMsKh5C263IMSCuWQCtY8TRCcys
         ZYRpG34m196ZSjl81nBdMW3uAdtWJOCF+AgEK5gZ93mK4spoLMjV88DsE+RFz77V7thQ
         +9CPgGcBR9Gu6hnl1wvJWaY8Vh3ZBQ5nSfMMlMnybEYjuQeqgNM+hsW5M/reXpySmW8Q
         atIA==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@laptop-org.20150623.gappssmtp.com header.s=20150623 header.b=Bw9+lctc;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id go18si8175919plb.130.2018.11.13.14.06.50;
        Tue, 13 Nov 2018 14:07:06 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730946AbeKNIGt (ORCPT <rfc822;ecarlos1024@gmail.com>
        + 99 others); Wed, 14 Nov 2018 03:06:49 -0500
Received: from mail-pl1-f196.google.com ([209.85.214.196]:34119 "EHLO
        mail-pl1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726408AbeKNIGt (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 14 Nov 2018 03:06:49 -0500
Received: by mail-pl1-f196.google.com with SMTP id f12-v6so6712508plo.1
        for <linux-kernel@vger.kernel.org>; Tue, 13 Nov 2018 14:06:38 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=laptop-org.20150623.gappssmtp.com; s=20150623;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:organization:user-agent;
        bh=YFIEBqVv5UO4Gg7ttb4fv+yrCwf7OoZpjHpQf/T0jbs=;
        b=Bw9+lctcbTOmWmsUY6nkEZ+uw8Q+WSFBuXgO4gL3Bw+F2XoADggdiMWlC1/OkMU7Ad
         k1K2sEdFk7I1n3OXyJrcEwo6zqiyp+WGqs9hp4wDXd3kL05ShB2Wu20fVlMT2BnbSS29
         R/KfF5mgQ+TMPfprwU3jdgHPTHcxMOgZmHPXft5GjNyPelYFWLxP7VPdPghhIQY0vNOu
         Z3LHeDFiuRDLp4lnc6KuIdzpinLXGQAWgel78Bu5jrIibX6GxBn3NTCX4flplqo6zi1E
         BU+d01iakj3ezUGu36nMIUTR/Y5Nep7Pv0ODt7M8yOpZhgi6YdFHscCKS+5kQcKjjx6V
         Snug==
X-Received: by 2002:a17:902:162:: with SMTP id 89-v6mr6858308plb.293.1542146797493;
        Tue, 13 Nov 2018 14:06:37 -0800 (PST)
Received: from esk.lan (pa49-180-71-87.pa.nsw.optusnet.com.au. [49.180.71.87])
        by smtp.gmail.com with ESMTPSA id b7-v6sm23695747pfg.56.2018.11.13.14.06.36
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 13 Nov 2018 14:06:36 -0800 (PST)
Received: from james by esk.lan with local (Exim 4.86_2)
        (envelope-from <quozl@laptop.org>)
        id 1gMgpL-0006md-9L; Wed, 14 Nov 2018 09:06:31 +1100
Date: Wed, 14 Nov 2018 09:06:31 +1100
From: James Cameron <quozl@laptop.org>
To: Lubomir Rintel <lkundrak@v3.sk>
Cc: Andy Shevchenko <andy.shevchenko@gmail.com>,
        Mark Brown <broonie@kernel.org>,
        Geert Uytterhoeven <geert+renesas@glider.be>,
        Darren Hart <dvhart@infradead.org>,
        Andy Shevchenko <andy@infradead.org>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Sebastian Reichel <sre@kernel.org>,
        Rob Herring <robh+dt@kernel.org>,
        Mark Rutland <mark.rutland@arm.com>,
        Eric Miao <eric.y.miao@gmail.com>,
        Haojian Zhuang <haojian.zhuang@gmail.com>,
        Daniel Mack <daniel@zonque.org>,
        Robert Jarzmik <robert.jarzmik@free.fr>,
        linux-spi <linux-spi@vger.kernel.org>,
        devicetree <devicetree@vger.kernel.org>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        linux-arm Mailing List <linux-arm-kernel@lists.infradead.org>,
        Platform Driver <platform-driver-x86@vger.kernel.org>,
        devel@driverdev.osuosl.org, Linux PM <linux-pm@vger.kernel.org>
Subject: Re: [PATCH 06/15] Platform: OLPC: Add XO-1.75 EC driver
Message-ID: <20181113220631.GB22127@us.netrek.org>
References: <20181010172300.317643-1-lkundrak@v3.sk>
 <20181010172300.317643-7-lkundrak@v3.sk>
 <CAHp75VcefOJHZ3WdZYrGEJFjqg2s1oJ75Jg9gKmQFre_ScAPZg@mail.gmail.com>
 <8881f5e48613c9d9d133e3964031fe2ab57f4801.camel@v3.sk>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <8881f5e48613c9d9d133e3964031fe2ab57f4801.camel@v3.sk>
Organization: Netrek Vanilla Server Dictator
User-Agent: Mutt/1.5.24 (2015-08-30)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwDXvEgMS+tbMYc6AA--.1332S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3Gw1xCFWxXry3Cw4xGryDWrg_yoWfurW7p3
	yUCa1UtF48JF17Gr1IvFnIvF1Yv34xKr12q343W3W8C3sFyFnxGrykKryY9FyfCr4DKF1Y
	vw4jgrZxuFZ5ArJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUBSb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_JrI_
	JrylYx0Ex4A2jsIE14v26r1j6r4UMcvjeVCFs4IE7xkEbVWUJVW8JwCjxxvEa2IrMxkF7I
	0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK6IIF6Fylc2IjII80
	xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26r1I6r4UMxvI42IY6xIIjxv20xvEc7CjxV
	AFwI0_Jr0_Gr1lcIIF0xvEx4A2jsIE14v26r4UJVWxJr1lcIIF0xvEx4A2jsIEc7CjxVAF
	wI0_Gr1j6F4UJwCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26cxK6c8Ij28IcwCF72vE77
	IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v26r1j6r18MI8I3I0E7480
	Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_GFv_WrylIxkGc2Ij64vIr41lIxAIcVCF04
	k26cxKx2IYs7xG6Fyj6rWUJbIYCTnIWIevJa73UjIFyTuYvjxUQbyZDUUUU

On Tue, Nov 13, 2018 at 06:26:09PM +0100, Lubomir Rintel wrote:
> Hi,
> 
> first of all -- thanks for such a careful review. It is very helpful.
> 
> Wherever I don't respond to you, I'm just following what you wrote. It
> would perhaps be tiresome to respond to "Yes, will fix in next version"
> to every single point.
> 
> I'll be following up with a new version in a few days; I'm mostly done
> with this one but I've not finished addressing the followup ones.
> 
> On Fri, 2018-10-19 at 19:06 +0300, Andy Shevchenko wrote:
> > On Wed, Oct 10, 2018 at 8:24 PM Lubomir Rintel <lkundrak@v3.sk>
> > wrote:
> > > It's based off the driver from the OLPC kernel sources. Somewhat
> > > modernized and cleaned up, for better or worse.
> > > 
> > > Modified to plug into the olpc-ec driver infrastructure (so that
> > > battery
> > > interface and debugfs could be reused) and the SPI slave framework.
> > > +#include <asm/system_misc.h>
> > 
> > asm/* goes after linux/*
> > 
> > > +#include <linux/delay.h>
> > > +#include <linux/gpio/consumer.h>
> > > +#include <linux/spinlock.h>
> > > +#include <linux/completion.h>
> > > +#include <linux/slab.h>
> > > +#include <linux/platform_device.h>
> > > +#include <linux/ctype.h>
> > > +#include <linux/olpc-ec.h>
> > > +#include <linux/spi/spi.h>
> > > +#include <linux/reboot.h>
> > > +#include <linux/input.h>
> > > +#include <linux/kfifo.h>
> > > +#include <linux/module.h>
> > > +#include <linux/power_supply.h>
> > 
> > Easy to maintain when it's sorted.
> > 
> > > +       { 0 },
> > 
> > Terminators are better without trailing comma.
> > 
> > > +#define EC_CMD_LEN             8
> > > +#define EC_MAX_RESP_LEN                16
> > > +#define LOG_BUF_SIZE           127
> > 
> > 127 sounds slightly strange. Is it by specification of protocol?
> > Would
> > it be better to define it 128 bytes / items?
> > 
> > > +static int olpc_xo175_ec_is_valid_cmd(u8 cmd)
> > > +{
> > > +       const struct ec_cmd_t *p;
> > > +
> > > +       for (p = olpc_xo175_ec_cmds; p->cmd; p++) {
> > > +               if (p->cmd == cmd)
> > > +                       return p->bytes_returned;
> > > +       }
> > > +
> > > +       return -1;
> > 
> > -EINVAL ?
> > 
> > > +}
> > > +static void olpc_xo175_ec_complete(void *arg);
> > 
> > Hmm... Can we avoid forward declaration?
> 
> I don't think we can.
> 
> > > +       channel = priv->rx_buf[0];
> > > +       byte = priv->rx_buf[1];
> > 
> > Maybe specific structures would fit better?
> > 
> > Like
> > 
> > struct olpc_ec_resp_hdr {
> >  u8 channel;
> >  u8 byte;
> > ...
> > }
> > 
> > > +               dev_warn(dev, "kbd/tpad not supported\n");
> > 
> > Please, spell it fully as touchpad and keyboard.
> > 
> > > +                       pm_wakeup_event(priv->pwrbtn->dev.parent,
> > > 1000);
> > 
> > Magic number.
> > 
> > > +                       /* For now, we just ignore the unknown
> > > events. */
> > 
> > dev_dbg(dev, "Ignored unknown event %.2x\n", byte);
> > 
> > ?
> > 
> > > if (isprint(byte)) {
> > > +                       priv->logbuf[priv->logbuf_len++] = byte;
> > > +                       if (priv->logbuf_len == LOG_BUF_SIZE)
> > > +                               olpc_xo175_ec_flush_logbuf(priv);
> > > +               }
> > 
> > You may consider to take everything and run %pE when printing instead
> > of %s.
> > 
> > > +static int olpc_xo175_ec_cmd(u8 cmd, u8 *inbuf, size_t inlen, u8
> > > *resp,
> > > +                                       size_t resp_len, void
> > > *ec_cb_arg)
> > > +{
> > > +       struct olpc_xo175_ec *priv = ec_cb_arg;
> > > +       struct device *dev = &priv->spi->dev;
> > > +       unsigned long flags;
> > > +       int nr_bytes;
> > > +       int ret = 0;
> > > +
> > > +       dev_dbg(dev, "CMD %x, %d bytes expected\n", cmd, resp_len);
> > > +
> > > +       if (inlen > 5) {
> > 
> > Magic number.
> > 
> > > +               dev_err(dev, "command len %d too big!\n",
> > > resp_len);
> > > +               return -EOVERFLOW;
> > > +       }
> > > +       WARN_ON(priv->suspended);
> > > +       if (priv->suspended)
> > 
> > if (WARN_ON(...)) ?
> > 
> > > +               return -EBUSY;
> > > +       if (resp_len > nr_bytes)
> > > +               resp_len = nr_bytes;
> > 
> > resp_len = min(resp_len, nr_bytes);
> > 
> > > +       priv->cmd[0] = cmd;
> > > +       priv->cmd[1] = inlen;
> > > +       priv->cmd[2] = 0;
> > 
> > Perhaps specific struct header for this?
> > 
> > > +       memset(resp, 0, resp_len);
> > 
> > Wouldn't be better to do this in where actual response has been
> > filled?
> > 
> > > +       if (!wait_for_completion_timeout(&priv->cmd_done,
> > > +                       msecs_to_jiffies(4000))) {
> > 
> > Magic number.
> > 
> > > +       }
> > > +       /* Deal with the results. */
> > 
> > Somehow feels noisy / unneeded comment.
> > 
> > > +       if (priv->cmd_state == CMD_STATE_ERROR_RECEIVED) {
> > > +               /* EC-provided error is in the single response byte
> > > */
> > > +               dev_err(dev, "command 0x%x returned error 0x%x\n",
> > > +                                                       cmd, priv-
> > > >resp[0]);
> > 
> > Indentation.
> > 
> > > +               ret = -EREMOTEIO;
> > > +       } else if (priv->resp_len != nr_bytes) {
> > > +               dev_err(dev, "command 0x%x returned %d bytes,
> > > expected %d bytes\n",
> > > +                                               cmd, priv-
> > > >resp_len, nr_bytes);
> > > +               ret = -ETIMEDOUT;
> > 
> > In the message I see nothing about timeout.
> > 
> > > +       } else {
> > > +       }
> > > +}
> > > +static int olpc_xo175_ec_set_event_mask(unsigned int mask)
> > > +{
> > > +       unsigned char args[2];
> > 
> > u8
> > 
> > > +
> > > +       args[0] = mask & 0xff;
> > > +       args[1] = (mask >> 8) & 0xff;
> > 
> > ...mask >> 0;
> > ...mask >> 8;
> > 
> > > +       return olpc_ec_cmd(CMD_WRITE_EXT_SCI_MASK, args, 2, NULL,
> > > 0);
> > > +}
> > > +
> > > +static void olpc_xo175_ec_restart(enum reboot_mode mode, const
> > > char *cmd)
> > > +{
> > > +       while (1) {
> > > +               olpc_ec_cmd(CMD_POWER_CYCLE, NULL, 0, NULL, 0);
> > > +               mdelay(1000);
> > > +       }
> > > +}
> > > +
> > > +static void olpc_xo175_ec_power_off(void)
> > > +{
> > > +       while (1) {
> > > +               olpc_ec_cmd(CMD_POWER_OFF, NULL, 0, NULL, 0);
> > > +               mdelay(1000);
> > > +       }
> > > +}
> > > +
> > > +#ifdef CONFIG_PM
> > > +static int olpc_xo175_ec_suspend(struct device *dev)
> > 
> > __maybe_unused  instead of ugly #ifdef?
> > 
> > > +{
> > > +       struct platform_device *pdev = to_platform_device(dev);
> > > +       struct olpc_xo175_ec *priv = platform_get_drvdata(pdev);
> > 
> > dev_get_drvdata() or how is it called?
> > 
> > > +       unsigned char hintargs[5];
> > 
> > struct olpc_ec_hint_cmd {
> > u8 ...
> > u32 ...
> > };
> > 
> > ?
> > 
> > > +       static unsigned int suspend_count;
> > 
> > u32 I suppose.
> > 
> > > +
> > > +       suspend_count++;
> > > +       dev_dbg(dev, "%s: suspend sync %08x\n", __func__,
> > > suspend_count);
> > 
> > __func__ can be issued if user asked for via Dynamic Debug interface.
> > 
> > > +       /*
> > > +        * First byte is 1 to indicate suspend, the rest is an
> > > integer
> > > +        * counter.
> > > +        */
> > > +       hintargs[0] = 1;
> > > +       memcpy(&hintargs[1], &suspend_count, 4);
> > > +       olpc_ec_cmd(CMD_SUSPEND_HINT, hintargs, 5, NULL, 0);
> > 
> > What do you need this counter for?
> 
> It doesn't seem to be actually used in the EC; the firmware just
> includes it in its debug log. I'm not sure if all firmware versions
> behave this way and I'd prefer to keep it.

Some firmware versions rely on it, as the SOC_SLEEP line was
unreliable where the board revision is B3 or earlier.

(internal reference: Paul Fox Wed, 10 Oct 2012 09:39:44 -0400)

Although population of B3 and earlier was low, prototypes were given
out to many rather than destroyed.

> 
> I'm adding a comment.
> 
> > 
> > > +       priv->suspended = true;
> > 
> > Hmm... Who is the user of it?
> > 
> > > +       return 0;
> > > +}
> > > +
> > > +static int olpc_xo175_ec_resume_noirq(struct device *dev)
> > > +{
> > > +       struct platform_device *pdev = to_platform_device(dev);
> > > +       struct olpc_xo175_ec *priv = platform_get_drvdata(pdev);
> > > +
> > > +       priv->suspended = false;
> > > +
> > > +       return 0;
> > > +}
> > > +
> > > +static int olpc_xo175_ec_resume(struct device *dev)
> > > +{
> > > +       struct platform_device *pdev = to_platform_device(dev);
> > > +       struct olpc_xo175_ec *priv = platform_get_drvdata(pdev);
> > > +       unsigned char x = 0;
> > 
> > u8
> > 
> > > +       priv->suspended = false;
> > 
> > Isn't it redundant since noirq callback above?
> > 
> > > +       /*
> > > +        * The resume hint is only needed if no other commands are
> > > +        * being sent during resume. all it does is tell the EC
> > > +        * the SoC is definitely awake.
> > > +        */
> > > +       olpc_ec_cmd(CMD_SUSPEND_HINT, &x, 1, NULL, 0);
> > > +
> > > +       /* Enable all EC events while we're awake */
> > > +       olpc_xo175_ec_set_event_mask(0xffff);
> > 
> > #define EC_ALL_EVENTS GENMASK(15, 0)
> > 
> > > +}
> > > +#endif
> > > +static struct platform_device *olpc_ec;
> > 
> > I would rather see this at the top of file.
> > 
> > > +static int olpc_xo175_ec_probe(struct spi_device *spi)
> > > +{
> > > +       if (olpc_ec) {
> > > +               dev_err(&spi->dev, "OLPC EC already
> > > registered.\n");
> > > +               return -EBUSY;
> > > +       }
> > 
> > It's racy against parallel probe called. I don't think it would be a
> > real issue, just let you know.
> > 
> > 
> > > +       /* Set up power button input device */
> > > +       priv->pwrbtn = devm_input_allocate_device(&spi->dev);
> > > +       if (!priv->pwrbtn)
> > > +               return -ENOMEM;
> > > +       priv->pwrbtn->name = "Power Button";
> > > +       priv->pwrbtn->dev.parent = &spi->dev;
> > > +       input_set_capability(priv->pwrbtn, EV_KEY, KEY_POWER);
> > > +       ret = input_register_device(priv->pwrbtn);
> > > +       if (ret) {
> > > +               dev_err(&spi->dev, "error registering input device:
> > > %d\n", ret);
> > > +               return ret;
> > > +       }
> > 
> > I would split out power button driver, but it's up to you.
> > 
> > 
> > > +       /* Enable all EC events while we're awake */
> > > +       olpc_xo175_ec_set_event_mask(0xffff);
> > 
> > See above about this magic.
> > 
> > > +}
> > > +#ifdef CONFIG_PM
> > > +       .suspend        = olpc_xo175_ec_suspend,
> > > +       .resume_noirq   = olpc_xo175_ec_resume_noirq,
> > > +       .resume         = olpc_xo175_ec_resume,
> > > +#endif
> > 
> > SET_SYSTEM_SLEEP_PM_OPS() ?
> > SET_NOIRQ_SYSTEM_SLEEP_PM_OPS() ?
> > 
> > > +static const struct of_device_id olpc_xo175_ec_of_match[] = {
> > > +       { .compatible = "olpc,xo1.75-ec" },
> > > +       { },
> > 
> > No comma for terminators.
> > 
> > > +};
> 
> Thanks,
> Lubo
> 

-- 
James Cameron
http://quozl.netrek.org/
