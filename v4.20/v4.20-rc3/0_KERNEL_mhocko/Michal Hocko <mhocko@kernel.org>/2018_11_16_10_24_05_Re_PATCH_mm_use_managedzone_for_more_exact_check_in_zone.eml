Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 16 Nov 2018 13:50:50 -0000
Received: from icoremail.net (unknown [209.85.215.172])
	by mail-app2 (Coremail) with SMTP id by_KCgC3f0Hhmu5bj_GhAQ--.47508S3;
	Fri, 16 Nov 2018 18:24:34 +0800 (CST)
Received: from mail-pg1-f172.google.com (unknown [209.85.215.172])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCXEE3gmu5bfuFIAA--.1330S3;
	Fri, 16 Nov 2018 18:24:32 +0800 (CST)
Received: by mail-pg1-f172.google.com with SMTP id n10-v6so10418913pgv.10
        for <xuliker@zju.edu.cn>; Fri, 16 Nov 2018 02:24:32 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent:sender:precedence
         :list-id;
        bh=r6AJbQyUDi4PMAwxHgeH+fNRX05iqqW7qJdovPhsSnk=;
        b=mCQvJUiOeqAYUZrVYJaazgRDK8DpPZjSTDcQqvSOETwaGQsAP00Fnv/8jCf9MXXpz6
         CpNRoeNwZ5WSkvVDUogOhqNYUrlLT/VaPryP5WKaKOt89/xYfrcuWCvTiR+SogLRNOKm
         J0ie6CjytGZx5gg/F9PZwOyB3ABog9QZz5/yzFC44PjHmeLDhblvRkddImDKLWh8i1qK
         7KWYMTHrU1WAR9i6nKYjh30hwMtCgJcWlTRK26hL6gDma/XW4qSLD6gXsdvM3N72U6Zd
         +RXgN3lpJtk9goC29cXZa8Blu6eT+ERlkD7l/wSWgEhVICRbTYX66CzHIXjqTMC/dspT
         Kp6g==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=kernel.org
X-Gm-Message-State: AGRZ1gJ16Mc0VHLtFxV6VGY90ko9vKBJwGDfJM2O9fA0KSTNP9txbDiM
	WfcdMSh8ppOTjOkOAFDO7ojcP2a6FmmeFyI1SE5U15JBdtCeljw=
X-Received: by 2002:a63:4044:: with SMTP id n65mr9124973pga.90.1542363871953;
        Fri, 16 Nov 2018 02:24:31 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp232782pju;
        Fri, 16 Nov 2018 02:24:31 -0800 (PST)
X-Google-Smtp-Source: AJdET5ejevb/FZ8j1p9SMzLQCvbWdubX3/k+y4VtAU6+/lQmbkRWR15Ipi40BVMlnFZjUzPLgaF/
X-Received: by 2002:a62:1541:: with SMTP id 62mr10512407pfv.230.1542363870997;
        Fri, 16 Nov 2018 02:24:30 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542363870; cv=none;
        d=google.com; s=arc-20160816;
        b=j5V0dSzbk1oD9Zsm5S6DInJOfvzabvTJ7HeA8OCQXALELgFhrGbL8+oY10gQZtHPe+
         D/t3VesSKjKL1WrC9qLRjbOoGXy+7K7LceZehusSNCBoavD1v2Y350ufNltCsMCcyG8Q
         hzfxUDmETb+4qy1q9HzPQRyS7UFi9MRD0M5Q5xoB4BYDocLRwobu65RnL8iMdFrCqEGs
         swQVuQNXvcCSdQP/rKQk8kd+/P+GTYgHyyPpDfQxjiw0jkZNwyoZWzP93mxjaR2Hi6C2
         jEFLJt1t9dYM9MixvrHG50xGVzJ9EGZ9YoYyyCmt3VWCH6XyErPdH2hkO9T684Q64LiB
         nn8A==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:in-reply-to
         :content-disposition:mime-version:references:message-id:subject:cc
         :to:from:date;
        bh=r6AJbQyUDi4PMAwxHgeH+fNRX05iqqW7qJdovPhsSnk=;
        b=y8jKdtc4mF4TSf71j6JM9J9TAJGYGjocwSqZygr1Zr/wVukvxZyLl4RT/AION3uwo+
         9sFum1i/selHILIaDrwVBBDHcKjqR0FYsQsK2xz38FTihwowjtgzhzVTRAmpYcH2cCKs
         Xnuth1QjyNXVwbud4EAadxkwJDBgMG08bnxfKF+M6aO1OmXillAjx6zfPPnn6v9CUVk/
         eZMyaAwo8xrbcCRUj6DyfkxU4waVUYoWGe+oD2bmNLxJWmY9isAERk7ApoZujIxuCwJW
         iX5G9oEStwbvCdgCb/Zt+fBdIuXQMAwGqvXNrhJ7j7HHpPOPqRXA33WO5bNzBqIRDNOP
         yf7Q==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id s9si30325247pgv.397.2018.11.16.02.24.16;
        Fri, 16 Nov 2018 02:24:30 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727764AbeKPUft (ORCPT <rfc822;jroi.martin@gmail.com>
        + 99 others); Fri, 16 Nov 2018 15:35:49 -0500
Received: from mx2.suse.de ([195.135.220.15]:46422 "EHLO mx1.suse.de"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1727446AbeKPUft (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 16 Nov 2018 15:35:49 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
        by mx1.suse.de (Postfix) with ESMTP id 39DBDAF3A;
        Fri, 16 Nov 2018 10:24:06 +0000 (UTC)
Date: Fri, 16 Nov 2018 11:24:05 +0100
From: Michal Hocko <mhocko@kernel.org>
To: Wei Yang <richard.weiyang@gmail.com>
Cc: akpm@linux-foundation.org, linux-mm@kvack.org,
        linux-kernel@vger.kernel.org,
        "Rafael J. Wysocki" <rjw@rjwysocki.net>
Subject: Re: [PATCH] mm: use managed_zone() for more exact check in zone
 iteration
Message-ID: <20181116102405.GF14706@dhcp22.suse.cz>
References: <20181114235040.36180-1-richard.weiyang@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181114235040.36180-1-richard.weiyang@gmail.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwCXEE3gmu5bfuFIAA--.1330S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxXF43CFy7Jw15Kr47KFyfJFb_yoW5WF47pr
	yUK3WxArW0qwnxJFWUKa4vv3Z5Jrs3J3s7tw17W3W5A3W5Jr9avF97GryaqFyUGFykJayr
	WrZrt3WDWwn0q3DanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPYb7Iv0xC_Cr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK
	6IIF6r4DMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVW8JVW5JwCYIxAIcV
	C0I7IYx2IY6xkF7I0E14v26r4j6F4UMxvI42IY6I8E87Iv67AKxVWxJr0_GcWlcIIF0xvE
	x4A2jsIEc7CjxVAFwI0_Cr1j6rxdMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI0EY4vE52
	x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAFwI0_Jr0_
	Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUAVWUtwCIc40Y0x0EwI
	xGrwCI42IY6xAIw20EY4v20xvaj40_Zr0_Wr1UYxBIdaVFxhVjvjDU0xZFpf9x07b0ksgU
	UUUU=

On Thu 15-11-18 07:50:40, Wei Yang wrote:
[...]
> @@ -1193,8 +1196,8 @@ static unsigned int count_free_highmem_pages(void)
>  	struct zone *zone;
>  	unsigned int cnt = 0;
>  
> -	for_each_populated_zone(zone)
> -		if (is_highmem(zone))
> +	for_each_zone(zone)
> +		if (populated_zone(zone) && is_highmem(zone))
>  			cnt += zone_page_state(zone, NR_FREE_PAGES);

this should be for_each_managed_zone because we only care about highmem
zones which have pages in the allocator (NR_FREE_PAGES).

>  
>  	return cnt;
> @@ -1239,10 +1242,10 @@ static unsigned int count_highmem_pages(void)
>  	struct zone *zone;
>  	unsigned int n = 0;
>  
> -	for_each_populated_zone(zone) {
> +	for_each_zone(zone) {
>  		unsigned long pfn, max_zone_pfn;
>  
> -		if (!is_highmem(zone))
> +		if (!populated_zone(zone) || !is_highmem(zone))
>  			continue;
>  
>  		mark_free_pages(zone);

I am not familiar with this code much but I strongly suspect that we do
want for_each_managed_zone here because saveable_highmem_page skips over
all reserved pages which rules out the bootmem. But this should be
double checked with Rafael (Cc-ed).

Rafael, does this loop care about pages which are not managed by the
page allocator?

> @@ -1305,8 +1308,8 @@ static unsigned int count_data_pages(void)
>  	unsigned long pfn, max_zone_pfn;
>  	unsigned int n = 0;
>  
> -	for_each_populated_zone(zone) {
> -		if (is_highmem(zone))
> +	for_each_zone(zone) {
> +		if (!populated_zone(zone) || is_highmem(zone))
>  			continue;
>  
>  		mark_free_pages(zone);
> @@ -1399,9 +1402,12 @@ static void copy_data_pages(struct memory_bitmap *copy_bm,
>  	struct zone *zone;
>  	unsigned long pfn;
>  
> -	for_each_populated_zone(zone) {
> +	for_each_zone(zone) {
>  		unsigned long max_zone_pfn;
>  
> +		if (!populated_zone(zone))
> +			continue;
> +
>  		mark_free_pages(zone);
>  		max_zone_pfn = zone_end_pfn(zone);
>  		for (pfn = zone->zone_start_pfn; pfn < max_zone_pfn; pfn++)
> @@ -1717,7 +1723,10 @@ int hibernate_preallocate_memory(void)
>  	saveable += save_highmem;
>  	highmem = save_highmem;
>  	size = 0;
> -	for_each_populated_zone(zone) {
> +	for_each_zone(zone) {
> +		if (!populated_zone(zone))
> +			continue;
> +
>  		size += snapshot_additional_pages(zone);
>  		if (is_highmem(zone))
>  			highmem += zone_page_state(zone, NR_FREE_PAGES);

ditto for the above.


> @@ -1863,8 +1872,8 @@ static int enough_free_mem(unsigned int nr_pages, unsigned int nr_highmem)
>  	struct zone *zone;
>  	unsigned int free = alloc_normal;
>  
> -	for_each_populated_zone(zone)
> -		if (!is_highmem(zone))
> +	for_each_zone(zone)
> +		if (populated_zone(zone) && !is_highmem(zone))
>  			free += zone_page_state(zone, NR_FREE_PAGES);
>  
>  	nr_pages += count_pages_for_highmem(nr_highmem);

This one should be for_each_managed_zone (NR_FREE_PAGES)

The rest looks good to me.
-- 
Michal Hocko
SUSE Labs
