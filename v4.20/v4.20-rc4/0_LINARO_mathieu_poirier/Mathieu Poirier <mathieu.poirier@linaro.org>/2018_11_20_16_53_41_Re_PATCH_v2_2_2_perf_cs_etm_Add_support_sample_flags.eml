Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 21 Nov 2018 00:41:07 -0000
Received: from icoremail.net (unknown [209.85.210.169])
	by mail-app4 (Coremail) with SMTP id cS_KCgCn3zBLPPRb4u_gAQ--.34215S3;
	Wed, 21 Nov 2018 00:54:36 +0800 (CST)
Received: from mail-pf1-f169.google.com (unknown [209.85.210.169])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCHbEhJPPRbThpfAA--.1765S3;
	Wed, 21 Nov 2018 00:54:33 +0800 (CST)
Received: by mail-pf1-f169.google.com with SMTP id i12so1269816pfo.7
        for <xuliker@zju.edu.cn>; Tue, 20 Nov 2018 08:54:33 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:mime-version
         :references:in-reply-to:from:date:message-id:subject:to:cc:sender
         :precedence:list-id;
        bh=OeYMHxCjbMx9R8QtfZbmS0dyzPtgVYLrnclfmbjlYZo=;
        b=eD8oHQ+6Ita5ltKs01hlOu2j41RbFoHxKpXcMksgNOwwSAGiJlYk3qyYsQumMdP5DD
         0guvuLUJ659iQa32bBEHkAJbRJQYpduvo/DzuJcnHZFdJACBDgZGS65a31PuLWp+mKCO
         Lgblw/e0LSzH7qLRIkLNQHVql/q7WS0yMUe1wsN50L/0PW4AhqdI5dkqjZN8eIJiGoJ7
         i/M/TFrZVwGYY8sg9V8iBE1z5PvUmHEYi7BfV8uGe9QacH3SMydjWwh6q9uNnK139RmF
         Mbax7vizuhi6/CIgAL4vtcNo8Ws3OAq6AS+m7xjUf1J5zKtEoY65lgY9pcZcQ0dqjJ/4
         3HPg==
X-Gm-Message-State: AA+aEWac4073JEAXgmcMHQoArYUW3HjvZw4Oj2gV6/o2a2lPuwDUaE9P
	nzKOaZ/+nxAQ487enMTbZvU9syXjHXaUe7OLj4/SzSyyL7RurlU=
X-Received: by 2002:a63:bc02:: with SMTP id q2mr2615710pge.116.1542732873246;
        Tue, 20 Nov 2018 08:54:33 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp847927pju;
        Tue, 20 Nov 2018 08:54:32 -0800 (PST)
X-Google-Smtp-Source: AFSGD/U6qf8GdyXSwxGhfLz95QdvxhTWL+8U2+jzyEYNoXDlWm41bHkksmVZLeXcNSDJBMr95qIJ
X-Received: by 2002:a63:d34a:: with SMTP id u10mr2603043pgi.301.1542732872132;
        Tue, 20 Nov 2018 08:54:32 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542732872; cv=none;
        d=google.com; s=arc-20160816;
        b=q83FZcHe+deaNtQ7yHBCEgSWb2A8bRM/ffgmrYlEzVxTVMp6f8x2s2HwhbeB50kSGZ
         AYGbbDccI6lyLINfvwrZMw2PI0Ci7m020O5FhSyXLwEuPw+w4DM6t23hklsEdgcCfiS8
         /aBYkBTcA67FqBKZo3koWvjFnXovJD4xwgMYh1KYE5hrDfjXsOy6Zfckuw7kRV1dZ7Rv
         R90G1NwYZEgds+3cJYooiBHN5sKpeDbXq66mXWV3/tT/goxN+W3R+7ZORizU0cmg9tMN
         xKr/9FvqAntZk5KzlpxvQzbewNnVytVebBpmzEQ3GUZPFWvpCIPaYHvkg9kB+OJNYWRS
         Lxpg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:cc:to:subject:message-id:date:from
         :in-reply-to:references:mime-version:dkim-signature;
        bh=OeYMHxCjbMx9R8QtfZbmS0dyzPtgVYLrnclfmbjlYZo=;
        b=brzVGiSDN+UrzqGJLpM1CIGfrqE85ChYtF3bLhOPSSNgXrqR/TQ7HgZ2gUwtpPmEpF
         zejXznLzVtJAUZpEuntTFPr6J7TWTHMXUVNTDaujNTfHGqAdCqUfn0+EP+3YduUgOrTI
         LkNSK5fACZcFjFziyO+vdh76VaEvHzUugP4IDKh8e6GNX6lQwuMyeAcLcgo4eYlKYLZA
         AO7p6q109pQXV0n8JoWv98V0BUp2RuuCr9x9cos77KvNb3yQ7v6bomDFOPhMSpYxxTQY
         vYTr3wyD1tdl7f/2eu+hHR3CRCXvuJPXSbyBQxo72oarFJTlRKYZ/uxpwKymjOLPEs8l
         Qfpw==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@linaro.org header.s=google header.b="fJo8NH/r";
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=linaro.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id 93-v6si18130626plb.17.2018.11.20.08.54.17;
        Tue, 20 Nov 2018 08:54:32 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728872AbeKUDYB (ORCPT <rfc822;yv9200@gmail.com> + 99 others);
        Tue, 20 Nov 2018 22:24:01 -0500
Received: from mail-lj1-f196.google.com ([209.85.208.196]:34017 "EHLO
        mail-lj1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726179AbeKUDYB (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 20 Nov 2018 22:24:01 -0500
Received: by mail-lj1-f196.google.com with SMTP id u6-v6so2273101ljd.1
        for <linux-kernel@vger.kernel.org>; Tue, 20 Nov 2018 08:53:53 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=OeYMHxCjbMx9R8QtfZbmS0dyzPtgVYLrnclfmbjlYZo=;
        b=fJo8NH/rh9KcFSlBJX3AIK6+qiiupNxQtGCZtbKqGBS/oladQuhBeZJsj42D1kTkMZ
         wgx8FVQT6xDS1NakEiHiWoMzSxfOvxlmbaHXUCeffKiJ32KWuCzA079DVkQBDvrBk0As
         D/rzccdTAGM683Hz4tY2LCe3FuRuRd61N5rIE=
X-Received: by 2002:a2e:2d11:: with SMTP id t17-v6mr1655174ljt.159.1542732832942;
 Tue, 20 Nov 2018 08:53:52 -0800 (PST)
MIME-Version: 1.0
References: <1541912876-20967-1-git-send-email-leo.yan@linaro.org>
 <1541912876-20967-3-git-send-email-leo.yan@linaro.org> <20181119232202.GA7001@xps15>
In-Reply-To: <20181119232202.GA7001@xps15>
From: Mathieu Poirier <mathieu.poirier@linaro.org>
Date: Tue, 20 Nov 2018 09:53:41 -0700
Message-ID: <CANLsYkxQVpSP1D2M_bCni=nkZyo4qC=d33bWC1Xy0_vDfX9Agg@mail.gmail.com>
Subject: Re: [PATCH v2 2/2] perf cs-etm: Add support sample flags
To: Leo Yan <leo.yan@linaro.org>
Cc: Arnaldo Carvalho de Melo <acme@kernel.org>,
        Alexander Shishkin <alexander.shishkin@linux.intel.com>,
        Jiri Olsa <jolsa@redhat.com>,
        Namhyung Kim <namhyung@kernel.org>,
        linux-arm-kernel <linux-arm-kernel@lists.infradead.org>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        Mike Leach <mike.leach@linaro.org>,
        Robert Walker <robert.walker@arm.com>,
        Al Grant <Al.Grant@arm.com>,
        Coresight ML <coresight@lists.linaro.org>
Content-Type: text/plain; charset="UTF-8"
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwCHbEhJPPRbThpfAA--.1765S3
Authentication-Results: mail-app4; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3GF4fWw43ZrWfCr43ZFy8uFg_yoW7AF1kp3
	y5uF13ta1UtF1SvwsYqr4kuFsI93yxAFW7X34fta45K3sYvFsaqFykta1Y9FWUCFsIk3yx
	Zr4Dtr43CF1jyrDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPSb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_Gr1j6F4UJwA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwAS0I0E0x
	vYzxvE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AK
	xVWUGVWUXwAv7VC2z280aVAFwI0_Jr0_Gr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcV
	AKI48JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE44CYbxCE4x80FwCY
	02Avz4vEIxC_JwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_Xr0_Ar1lcI
	IF0xvE2Ix0cI8IcVCY1x0267AKxVW8JVWxJwCYIxAIcVC2z280aVAFwI0_Gr1j6F4UJwCY
	IxAIcVC2z280aVCY1x0267AKxVW8Jr0_Cr1UMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI
	0EY4vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAF
	wI0_Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUtVW8ZwCIc4
	0Y0x0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Gr0_ZrUvcSsGvfC2KfnxnUUI43ZEXa7I
	UOQZ2PUUUUU==

On Mon, 19 Nov 2018 at 16:22, Mathieu Poirier
<mathieu.poirier@linaro.org> wrote:
>
> On Sun, Nov 11, 2018 at 01:07:56PM +0800, Leo Yan wrote:
> > We have prepared the flags in the packet structure, so need to copy
> > the related value into sample structure thus perf tool can facilitate
> > sample flags.
> >
> > The PREV_PACKET contains the branch instruction flags and PACKET
> > actually contains the flags for next branch instruction.  So this patch
> > is to set sample flags with 'etmq->prev_packet->flags'.
> >
> > This patch includes three fixing up for sample flags based on the
> > packets context:
> >
> > - If the packet is exception packet or exception return packet, update
> >   the previous packet for exception specific flags;
> > - If there has TRACE_ON or TRACE_OFF packet in the middle of instruction
> >   packets, this indicates the trace is discontinuous, so append the flag
> >   PERF_IP_FLAG_TRACE_END to the previous packet to indicate the trace
> >   has been ended;
> > - If one instruction packet is behind TRACE_OFF packet, this instruction
> >   is restarting trace packet.  So set flag PERF_IP_FLAG_TRACE_START to
> >   TRACE_OFF packet if one, this flag isn't used by TRACE_OFF packet but
> >   used to indicate trace restarting when generate sample.
> >
> > Signed-off-by: Leo Yan <leo.yan@linaro.org>
> > ---
> >  tools/perf/util/cs-etm.c | 43 +++++++++++++++++++++++++++++++++++++++++--
> >  1 file changed, 41 insertions(+), 2 deletions(-)
> >
> > diff --git a/tools/perf/util/cs-etm.c b/tools/perf/util/cs-etm.c
> > index 455f132..afca6f3 100644
> > --- a/tools/perf/util/cs-etm.c
> > +++ b/tools/perf/util/cs-etm.c
> > @@ -676,7 +676,7 @@ static int cs_etm__synth_instruction_sample(struct cs_etm_queue *etmq,
> >       sample.stream_id = etmq->etm->instructions_id;
> >       sample.period = period;
> >       sample.cpu = etmq->packet->cpu;
> > -     sample.flags = 0;
> > +     sample.flags = etmq->prev_packet->flags;
> >       sample.insn_len = 1;
> >       sample.cpumode = event->sample.header.misc;
> >
> > @@ -735,7 +735,7 @@ static int cs_etm__synth_branch_sample(struct cs_etm_queue *etmq)
> >       sample.stream_id = etmq->etm->branches_id;
> >       sample.period = 1;
> >       sample.cpu = etmq->packet->cpu;
> > -     sample.flags = 0;
> > +     sample.flags = etmq->prev_packet->flags;
> >       sample.cpumode = event->sample.header.misc;
> >
> >       /*
> > @@ -878,6 +878,43 @@ static int cs_etm__synth_events(struct cs_etm_auxtrace *etm,
> >       return 0;
> >  }
> >
> > +static void cs_etm__fixup_flags(struct cs_etm_queue *etmq)
> > +{
> > +     /*
> > +      * Decoding stream might insert one TRACE_OFF packet in the
> > +      * middle of instruction packets, this means it doesn't
> > +      * contain the pair packets with TRACE_OFF and TRACE_ON.
> > +      * For this case, the instruction packet follows with
> > +      * TRACE_OFF packet so we need to fixup prev_packet with flag
> > +      * PERF_IP_FLAG_TRACE_BEGIN, this flag finally is used by the
> > +      * instruction packet to generate samples.
> > +      */
> > +     if (etmq->prev_packet->sample_type == CS_ETM_TRACE_OFF &&
> > +         etmq->packet->sample_type == CS_ETM_RANGE)
> > +             etmq->prev_packet->flags = PERF_IP_FLAG_BRANCH |
> > +                                        PERF_IP_FLAG_TRACE_BEGIN;
> > +
> > +     if (etmq->prev_packet->sample_type == CS_ETM_RANGE) {
> > +             /*
> > +              * When the exception packet is inserted, update flags
> > +              * so tell perf it is exception related branches.
> > +              */
> > +             if (etmq->packet->sample_type == CS_ETM_EXCEPTION ||
> > +                 etmq->packet->sample_type == CS_ETM_EXCEPTION_RET)
> > +                     etmq->prev_packet->flags = etmq->packet->flags;
> > +
> > +             /*
> > +              * The trace is discontinuous, weather this is caused by
> > +              * TRACE_ON packet or TRACE_OFF packet is coming, if the
> > +              * previous packet is instruction packet, simply set flag
> > +              * PERF_IP_FLAG_TRACE_END for previous packet.
> > +              */
> > +             if (etmq->packet->sample_type == CS_ETM_TRACE_ON ||
> > +                 etmq->packet->sample_type == CS_ETM_TRACE_OFF)
> > +                     etmq->prev_packet->flags |= PERF_IP_FLAG_TRACE_END;
> > +     }
> > +}
> > +
>
> I think it would be better to keep all the flag related processing in
> cs-etm-decoder.c so that things in cs-etm.c are only concered with dealing with
> perf.
>
> Look at function cs_etm__alloc_queue(), there you'll find "d_params.data = etmq".
>
> In function cs_etm_decoder__new(), decoder->data = d_params->data;
>
> This means that anywhere you have a decoder, decoder->data is an etmq.  I've
> used this profusely in my work on CPU-wide trace scenarios.  Because you're
> getting there ahead of me you'll need to fix the declaration of struct
> cs_etm_queue but that's easy.

I've been thinking further about this and manipulating the etmq packet
and prev_packet from the cs-etm-decoder.c won't work because all we
have at that time is the decoder's packet queue.  My goal is to
manipulate the flags in only one place - either in cs-etm.c or
cs-etm-decoder.c but not in both.  It might be worth trying to do the
implementation in cs-etm.c since there is already a lot of packet flow
intelligence happening there.

>
> Regards,
> Mathieu
>
> >  static int cs_etm__sample(struct cs_etm_queue *etmq)
> >  {
> >       struct cs_etm_auxtrace *etm = etmq->etm;
> > @@ -1100,6 +1137,8 @@ static int cs_etm__run_decoder(struct cs_etm_queue *etmq)
> >                                        */
> >                                       break;
> >
> > +                             cs_etm__fixup_flags(etmq);
> > +
> >                               switch (etmq->packet->sample_type) {
> >                               case CS_ETM_RANGE:
> >                                       /*
> > --
> > 2.7.4
> >
