Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 20 Nov 2018 00:36:19 -0000
Received: from icoremail.net (unknown [209.85.210.179])
	by mail-app4 (Coremail) with SMTP id cS_KCgCn3_AMRvNbsyXbAQ--.36875S3;
	Tue, 20 Nov 2018 07:23:58 +0800 (CST)
Received: from mail-pf1-f179.google.com (unknown [209.85.210.179])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwC3nUkJRvNb1L1aAA--.8495S3;
	Tue, 20 Nov 2018 07:23:53 +0800 (CST)
Received: by mail-pf1-f179.google.com with SMTP id i12so12935pfo.7
        for <xuliker@zju.edu.cn>; Mon, 19 Nov 2018 15:23:53 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:date:from:to:cc
         :subject:message-id:references:mime-version:content-disposition
         :in-reply-to:user-agent:sender:precedence:list-id;
        bh=NFQekV+v93HdzEVK5NBAMzGIAsQcp7WkUEUOdVfKvwE=;
        b=ILLawzt0vewpZ0PRkfasJWOgJsXkFQy4oV/Ivk/aMWV5Th99dsGym4FyXF69WIXeFf
         vB7wxl90UM3iMkUL73+6Vv5biUqtraHjNjgMKvHg3cukxsTR856ZdExTWDKUxGhlXkJy
         0wEOS85/bFYRXhiY/GRqbYOUs3gvYuxSjVBAIHPIKTTTdMUTQVOOA/6YtQs4mWefBAzj
         F41CeE13VmVAbb9xBeb4bsbqbAxUEFjlj7MDn386/kVXacKpmp4hJPqRyfs1hiGCF0aI
         XSVjgNQ+6wir+zON/ct90PDCZ5BoQFvlTA7pEGIHsJDx7pB3lVRWGEmKDr0+mAMUNXPm
         q6Ew==
X-Gm-Message-State: AGRZ1gLicSosW9Zxla529rRWREnhiVMEKMAccWAZh5XO7FpC1gWqnVLj
	0xiGG4zb0z7S6EzE8s0iYWE/fePiP2L6M1YF+2ufzOB6sIKPEd4=
X-Received: by 2002:aa7:87ce:: with SMTP id i14mr17327423pfo.20.1542669833283;
        Mon, 19 Nov 2018 15:23:53 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp3314725pju;
        Mon, 19 Nov 2018 15:23:51 -0800 (PST)
X-Google-Smtp-Source: AJdET5cATnVCGrTearkrgdyvR76s2NltUP+92/l8EPRDgn/DUt/375AxIkY3BJuCJFz6UInZvxWS
X-Received: by 2002:a63:89c2:: with SMTP id v185mr20365311pgd.97.1542669831742;
        Mon, 19 Nov 2018 15:23:51 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542669831; cv=none;
        d=google.com; s=arc-20160816;
        b=OrvRwgVFprYBnwTuwnQTuliUhgYC3lM3OKxlwgnp9GVsdOMTyyFqzmDKaP9d3msZSH
         S7F+Gc+X6jJF6wTLZTR6Z4eNhkD2vEE9QJ1MzFT7P+nCKTiTW+vx+zbr9wHLtDZkODvD
         0GCPEbwmHj8P5Wb1GRo/feq6myITalyqvRNd/ei5bPSc06T56ZaqeuZ2Y2QQKsbH8yNs
         ggeqF+PusYeXWFFl0GIa1T7+snZnP7GFjZcWmUHavBay8NaCMI/Q2FO7twDbh2r3omCx
         dwGu2S1++P6AO1otkvvxDvuC6O2yFMXq+6AxkD5dUOcTY8FmdM2d1D3Rn/u0pEZcRrx7
         U3iw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:in-reply-to
         :content-disposition:mime-version:references:message-id:subject:cc
         :to:from:date:dkim-signature;
        bh=NFQekV+v93HdzEVK5NBAMzGIAsQcp7WkUEUOdVfKvwE=;
        b=M3s/RcxAt/crnxsmuIz8qQMMFoeg9zj3WNEEchRiV8/w78a6yjRGyWFXBA0hWOXmgf
         0TQ45C/oz0KewFjmFRExT8FsrGOx6hp+bG7Owk0tR8zJE/1Dv0ANzT/peocLu0td53JA
         LKC7ikRF1fn+M/CLvvT7BL7gs9w73oPlPG7SZQ+e9NO3Trw0yeI97QiKw4I7SmdC4qY3
         VIr/hxqQLY4hCxWOUfDy4pZ0NuQ31ZPliqr0f0BYSWmcNUchfN8aTQae/mKQkkuChB/f
         4iUzbriraK1GebT1GvDc/XNHjeZJd3h4v1Dp3z9QeS6DykF6/QPxn6Y9y7LtHaqCq0iU
         LI1g==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@linaro.org header.s=google header.b=ETGuln5l;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=linaro.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id n2si43256898pgr.67.2018.11.19.15.23.37;
        Mon, 19 Nov 2018 15:23:51 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729865AbeKTJsI (ORCPT <rfc822;nullbytes00@gmail.com>
        + 99 others); Tue, 20 Nov 2018 04:48:08 -0500
Received: from mail-pf1-f194.google.com ([209.85.210.194]:37379 "EHLO
        mail-pf1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725780AbeKTJsI (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 20 Nov 2018 04:48:08 -0500
Received: by mail-pf1-f194.google.com with SMTP id u3-v6so18175pfm.4
        for <linux-kernel@vger.kernel.org>; Mon, 19 Nov 2018 15:22:06 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=NFQekV+v93HdzEVK5NBAMzGIAsQcp7WkUEUOdVfKvwE=;
        b=ETGuln5llaYgh6gTgIkM659OvBzyFMqReeEar2moGqF44yTr3GYwjDBbD6v+3bDrfn
         qvfpgMrDzG/7FFiPve2r5Ll4P5sQmSs0BcqIatr9S2O+S2pXiD/ShcCEgyhCE1b3joIA
         GbqfSr7dsX2oAonQeicKbboqDQJFwDeMeZJ4o=
X-Received: by 2002:a63:2141:: with SMTP id s1mr22117631pgm.148.1542669726181;
        Mon, 19 Nov 2018 15:22:06 -0800 (PST)
Received: from xps15 (S0106002369de4dac.cg.shawcable.net. [68.147.8.254])
        by smtp.gmail.com with ESMTPSA id m3sm6207633pff.173.2018.11.19.15.22.04
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Mon, 19 Nov 2018 15:22:04 -0800 (PST)
Date: Mon, 19 Nov 2018 16:22:02 -0700
From: Mathieu Poirier <mathieu.poirier@linaro.org>
To: Leo Yan <leo.yan@linaro.org>
Cc: Arnaldo Carvalho de Melo <acme@kernel.org>,
        Alexander Shishkin <alexander.shishkin@linux.intel.com>,
        Jiri Olsa <jolsa@redhat.com>,
        Namhyung Kim <namhyung@kernel.org>,
        linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org,
        Mike Leach <mike.leach@linaro.org>,
        Robert Walker <robert.walker@arm.com>,
        Al Grant <Al.Grant@arm.com>,
        Coresight ML <coresight@lists.linaro.org>
Subject: Re: [PATCH v2 2/2] perf cs-etm: Add support sample flags
Message-ID: <20181119232202.GA7001@xps15>
References: <1541912876-20967-1-git-send-email-leo.yan@linaro.org>
 <1541912876-20967-3-git-send-email-leo.yan@linaro.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <1541912876-20967-3-git-send-email-leo.yan@linaro.org>
User-Agent: Mutt/1.5.24 (2015-08-30)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwC3nUkJRvNb1L1aAA--.8495S3
Authentication-Results: mail-app4; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxCryDur1rZF4rKrW3ZFWxtFb_yoWrtw4rpr
	4UuF13Ja1UtF1Ivws5Jr4vkFsI93yxArW7X34fta45K3saqFs3KFykta1YkFWUCF1ak3y7
	Jr1qyr47AF1jyrDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUvEb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0
	cI8IcVAFwI0_JFI_Gr1lcIIF0xvE2Ix0cI8IcVCY1x0267AKxVWUJVW8JwCYIxAIcVC2z2
	80aVAFwI0_GcCE3s1lcIIF0xvEx4A2jsIEc7CjxVAFwI0_GcCE3s1l42xK82IYc2Ij64vI
	r41l42xK82IY64kExVAvwVAq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr
	1lx2IqxVAqx4xG67AKxVWUJVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE
	14v26r1q6r43MIIYrxkI7VAKI48JMIIF0xvE42xK8VAvwI8IcIk0rVW8JVW3JbIYCTnIWI
	evJa73UjIFyTuYvjxUBSfODUUUU

On Sun, Nov 11, 2018 at 01:07:56PM +0800, Leo Yan wrote:
> We have prepared the flags in the packet structure, so need to copy
> the related value into sample structure thus perf tool can facilitate
> sample flags.
> 
> The PREV_PACKET contains the branch instruction flags and PACKET
> actually contains the flags for next branch instruction.  So this patch
> is to set sample flags with 'etmq->prev_packet->flags'.
> 
> This patch includes three fixing up for sample flags based on the
> packets context:
> 
> - If the packet is exception packet or exception return packet, update
>   the previous packet for exception specific flags;
> - If there has TRACE_ON or TRACE_OFF packet in the middle of instruction
>   packets, this indicates the trace is discontinuous, so append the flag
>   PERF_IP_FLAG_TRACE_END to the previous packet to indicate the trace
>   has been ended;
> - If one instruction packet is behind TRACE_OFF packet, this instruction
>   is restarting trace packet.  So set flag PERF_IP_FLAG_TRACE_START to
>   TRACE_OFF packet if one, this flag isn't used by TRACE_OFF packet but
>   used to indicate trace restarting when generate sample.
> 
> Signed-off-by: Leo Yan <leo.yan@linaro.org>
> ---
>  tools/perf/util/cs-etm.c | 43 +++++++++++++++++++++++++++++++++++++++++--
>  1 file changed, 41 insertions(+), 2 deletions(-)
> 
> diff --git a/tools/perf/util/cs-etm.c b/tools/perf/util/cs-etm.c
> index 455f132..afca6f3 100644
> --- a/tools/perf/util/cs-etm.c
> +++ b/tools/perf/util/cs-etm.c
> @@ -676,7 +676,7 @@ static int cs_etm__synth_instruction_sample(struct cs_etm_queue *etmq,
>  	sample.stream_id = etmq->etm->instructions_id;
>  	sample.period = period;
>  	sample.cpu = etmq->packet->cpu;
> -	sample.flags = 0;
> +	sample.flags = etmq->prev_packet->flags;
>  	sample.insn_len = 1;
>  	sample.cpumode = event->sample.header.misc;
>  
> @@ -735,7 +735,7 @@ static int cs_etm__synth_branch_sample(struct cs_etm_queue *etmq)
>  	sample.stream_id = etmq->etm->branches_id;
>  	sample.period = 1;
>  	sample.cpu = etmq->packet->cpu;
> -	sample.flags = 0;
> +	sample.flags = etmq->prev_packet->flags;
>  	sample.cpumode = event->sample.header.misc;
>  
>  	/*
> @@ -878,6 +878,43 @@ static int cs_etm__synth_events(struct cs_etm_auxtrace *etm,
>  	return 0;
>  }
>  
> +static void cs_etm__fixup_flags(struct cs_etm_queue *etmq)
> +{
> +	/*
> +	 * Decoding stream might insert one TRACE_OFF packet in the
> +	 * middle of instruction packets, this means it doesn't
> +	 * contain the pair packets with TRACE_OFF and TRACE_ON.
> +	 * For this case, the instruction packet follows with
> +	 * TRACE_OFF packet so we need to fixup prev_packet with flag
> +	 * PERF_IP_FLAG_TRACE_BEGIN, this flag finally is used by the
> +	 * instruction packet to generate samples.
> +	 */
> +	if (etmq->prev_packet->sample_type == CS_ETM_TRACE_OFF &&
> +	    etmq->packet->sample_type == CS_ETM_RANGE)
> +		etmq->prev_packet->flags = PERF_IP_FLAG_BRANCH |
> +					   PERF_IP_FLAG_TRACE_BEGIN;
> +
> +	if (etmq->prev_packet->sample_type == CS_ETM_RANGE) {
> +		/*
> +		 * When the exception packet is inserted, update flags
> +		 * so tell perf it is exception related branches.
> +		 */
> +		if (etmq->packet->sample_type == CS_ETM_EXCEPTION ||
> +		    etmq->packet->sample_type == CS_ETM_EXCEPTION_RET)
> +			etmq->prev_packet->flags = etmq->packet->flags;
> +
> +		/*
> +		 * The trace is discontinuous, weather this is caused by
> +		 * TRACE_ON packet or TRACE_OFF packet is coming, if the
> +		 * previous packet is instruction packet, simply set flag
> +		 * PERF_IP_FLAG_TRACE_END for previous packet.
> +		 */
> +		if (etmq->packet->sample_type == CS_ETM_TRACE_ON ||
> +		    etmq->packet->sample_type == CS_ETM_TRACE_OFF)
> +			etmq->prev_packet->flags |= PERF_IP_FLAG_TRACE_END;
> +	}
> +}
> +

I think it would be better to keep all the flag related processing in
cs-etm-decoder.c so that things in cs-etm.c are only concered with dealing with
perf.

Look at function cs_etm__alloc_queue(), there you'll find "d_params.data = etmq".

In function cs_etm_decoder__new(), decoder->data = d_params->data;

This means that anywhere you have a decoder, decoder->data is an etmq.  I've
used this profusely in my work on CPU-wide trace scenarios.  Because you're
getting there ahead of me you'll need to fix the declaration of struct
cs_etm_queue but that's easy.

Regards,
Mathieu 

>  static int cs_etm__sample(struct cs_etm_queue *etmq)
>  {
>  	struct cs_etm_auxtrace *etm = etmq->etm;
> @@ -1100,6 +1137,8 @@ static int cs_etm__run_decoder(struct cs_etm_queue *etmq)
>  					 */
>  					break;
>  
> +				cs_etm__fixup_flags(etmq);
> +
>  				switch (etmq->packet->sample_type) {
>  				case CS_ETM_RANGE:
>  					/*
> -- 
> 2.7.4
> 
