Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 20 Nov 2018 00:34:51 -0000
Received: from icoremail.net (unknown [209.85.210.170])
	by mail-app4 (Coremail) with SMTP id cS_KCgDnX_PbB_NbUNzZAQ--.32145S3;
	Tue, 20 Nov 2018 02:58:36 +0800 (CST)
Received: from mail-pf1-f170.google.com (unknown [209.85.210.170])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAX_knZB_NbjspZAA--.4291S3;
	Tue, 20 Nov 2018 02:58:33 +0800 (CST)
Received: by mail-pf1-f170.google.com with SMTP id u6so2827272pfh.11
        for <xuliker@zju.edu.cn>; Mon, 19 Nov 2018 10:58:33 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :from:to:cc:subject:date:message-id:in-reply-to:references:sender
         :precedence:list-id;
        bh=SI7tz9eZrMp1hrTBYCrMNckVSLrQLCvVme6CnCUGkhE=;
        b=e1oobpKFXUdw0UuePpHwQuWdm+OWflQJjXwBetQAmBnvHK1FeS4DqRMrTfB1FUzyb6
         iZglvWO/xNC/0rf2YywcCPWzM+xH1XPSXozAmOIVcAuFWYZsRmYT5o7aTnoOVO+x6fn4
         GK1V7DMNmqjs+p9UXurO19lAWIovTfLeI1FJMrnynjrR/gzEJIER+/O95iWCxUMG0EVZ
         p1N4lYrxuEu2Qcfc68qsBUlLcyVHuYSXS+w+rNKGokD40KSvb6Z0k7oSzsn4plFf/0xD
         HPWeaBRcgrgwuTUs/H9NDG27HE0YVvvV2cfy9M9gPmGllVniKju7ebdCwufvLdqic9AS
         v2AA==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=redhat.com
X-Gm-Message-State: AA+aEWZEqDE0900J71opl3lC0HQWK3CmIK6HR8NPoavOfC9yQXZeP9Cc
	nyJZMfPoegjusK14lN8BxXfdMBYgQDSA1zTajtYxhCNylZrUWvA=
X-Received: by 2002:a63:4613:: with SMTP id t19-v6mr4628982pga.197.1542653913049;
        Mon, 19 Nov 2018 10:58:33 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp3049739pju;
        Mon, 19 Nov 2018 10:58:32 -0800 (PST)
X-Google-Smtp-Source: AJdET5dyDWn6Wi6P1LPS/U+LK0O20c0JIFDEpOWliDX3OlC7HQr6vFR3VZla5hKQ8yUykUSi5jga
X-Received: by 2002:a62:6547:: with SMTP id z68-v6mr23578388pfb.169.1542653912265;
        Mon, 19 Nov 2018 10:58:32 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542653912; cv=none;
        d=google.com; s=arc-20160816;
        b=f5Ls1dbixLEaWEz+88w6XfPKXAL8Tl9f5gPXAV+CROhO5IalH81fqjyIx+W8ctK0bZ
         9tyQEKsrmTUZZAlMnTWHmS9LpTOmeU06wBJyXTet0erwOQpRNAmi0qe4jmZrWtzql9DY
         P+flzjAPizznjRLeVvtn43q9xCBvThPRDGMYAez8Fqt8oGh+ZjppEIr3KPt2aZtCDsy7
         vRfpzlBnnz4zySMTNIiJEZM6rMiCGG5vNWrdao5jxcStBY/jdZtgsjr/4FHrnfNANLCl
         cKmxfvN3YU36FFh6lbJsl5zKkcOUAXzDp+bENXqxor0ssFR3IeMtGCCed/y3tHfwY3nb
         1EMA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:references:in-reply-to:message-id:date
         :subject:cc:to:from;
        bh=SI7tz9eZrMp1hrTBYCrMNckVSLrQLCvVme6CnCUGkhE=;
        b=udKXlUcef92bmn7265IV7IzDFbToXA2Y3gMeZJ9O3bVDYG1hz2BUSYKcg3QipxnCj+
         2uWibExs3GkkynTka2dzLKvcZMiCzbld02PKZ0uMhl33mw9xI1KBgAppaKJkBVj1TCoA
         PltCUuW3N3yDfe6+MXyMG46Z84AFcGw1wYdu32fczuqY4A26tctZt6mkXUZ9H0sauNAG
         vFoF9Ib+cVVVge3VNBu6mQdLYmoFgZZX0RWku+wVcGmzgtv3zLvwqm6tm1CgBah7/h0M
         DcKWTj+jokQWJ4Xv5DW0bgmUgTMAqwcLovxCEt4WwK4pjWAI5SrmuhIoM/LoXi1aX5Fs
         3Nog==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=redhat.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id q9si19424938pll.275.2018.11.19.10.58.18;
        Mon, 19 Nov 2018 10:58:32 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730763AbeKTFWn (ORCPT <rfc822;nullbytes00@gmail.com>
        + 99 others); Tue, 20 Nov 2018 00:22:43 -0500
Received: from mx1.redhat.com ([209.132.183.28]:54872 "EHLO mx1.redhat.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726167AbeKTFWm (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 20 Nov 2018 00:22:42 -0500
Received: from smtp.corp.redhat.com (int-mx03.intmail.prod.int.phx2.redhat.com [10.5.11.13])
        (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
        (No client certificate requested)
        by mx1.redhat.com (Postfix) with ESMTPS id 6DF963082E4C;
        Mon, 19 Nov 2018 18:57:48 +0000 (UTC)
Received: from llong.com (dhcp-17-55.bos.redhat.com [10.18.17.55])
        by smtp.corp.redhat.com (Postfix) with ESMTP id F1BB5608E7;
        Mon, 19 Nov 2018 18:57:46 +0000 (UTC)
From: Waiman Long <longman@redhat.com>
To: Peter Zijlstra <peterz@infradead.org>,
        Ingo Molnar <mingo@redhat.com>,
        Will Deacon <will.deacon@arm.com>,
        Thomas Gleixner <tglx@linutronix.de>
Cc: linux-kernel@vger.kernel.org, kasan-dev@googlegroups.com,
        linux-mm@kvack.org, iommu@lists.linux-foundation.org,
        Petr Mladek <pmladek@suse.com>,
        Sergey Senozhatsky <sergey.senozhatsky@gmail.com>,
        Andrey Ryabinin <aryabinin@virtuozzo.com>,
        Tejun Heo <tj@kernel.org>,
        Andrew Morton <akpm@linux-foundation.org>,
        Waiman Long <longman@redhat.com>
Subject: [PATCH v2 17/17] locking/lockdep: Check raw/non-raw locking conflicts
Date: Mon, 19 Nov 2018 13:55:26 -0500
Message-Id: <1542653726-5655-18-git-send-email-longman@redhat.com>
In-Reply-To: <1542653726-5655-1-git-send-email-longman@redhat.com>
References: <1542653726-5655-1-git-send-email-longman@redhat.com>
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.13
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16 (mx1.redhat.com [10.5.110.46]); Mon, 19 Nov 2018 18:57:48 +0000 (UTC)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAX_knZB_NbjspZAA--.4291S3
Authentication-Results: mail-app4; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxWr4rZr48tw1UGr4fKF18uFg_yoWrKFy8pr
	srWasxJw4xJFW8u3ZrJanY93W7Jw4xC3y3CFZIgr1q9F9xXr1Fq3Z2gF15A3Wjqrs3tFZ8
	Ar15uF4UC345Z3DanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUP0b7Iv0xC_tr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1j
	6r18McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IY64vIr4
	1l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkIecxE
	wVCI4VW5MxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVW5JVW7JwCYIxAIcV
	C0I7IYx2IY6xkF7I0E14v26r4j6F4UMxvI42IY6I8E87Iv67AKxVWxJr0_GcWlcIIF0xvE
	x4A2jsIEc7CjxVAFwI0_Cr1j6rxdMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI0EY4vE52
	x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAFwI0_Jr0_
	Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUtVW8ZwCIc40Y0x0EwI
	xGrwCI42IY6xAIw20EY4v20xvaj40_Jr0_JF7vcSsGvfC2KfnxnUUI43ZEXa7IU53CztUU
	UUU==

A task holding a raw spinlock should not acquire a non-raw lock as that
will break PREEMPT_RT kernel. Checking is now added and a lockdep warning
will be printed if that happens.

Signed-off-by: Waiman Long <longman@redhat.com>
---
 include/linux/lockdep.h         |  6 ++++++
 include/linux/spinlock_types.h  |  4 ++--
 kernel/locking/lockdep.c        | 15 +++++++++++++--
 kernel/locking/spinlock_debug.c |  1 +
 4 files changed, 22 insertions(+), 4 deletions(-)

diff --git a/include/linux/lockdep.h b/include/linux/lockdep.h
index b9435fb..9a6fe0e 100644
--- a/include/linux/lockdep.h
+++ b/include/linux/lockdep.h
@@ -150,12 +150,15 @@ struct lock_class_stats {
  *    another lock within its critical section is not allowed.
  * 3) LOCKDEP_FLAG_TERMINAL_NESTABLE: This is a terminal lock that can
  *    allow one more regular terminal lock to be nested underneath it.
+ * 4) LOCKDEP_FLAG_RAW: This is a raw spinlock. A task holding a raw
+ *    spinlock should not acquire a non-raw lock.
  *
  * Only the least significant 4 bits of the flags will be copied to the
  * held_lock structure.
  */
 #define LOCKDEP_FLAG_TERMINAL		(1 << 0)
 #define LOCKDEP_FLAG_TERMINAL_NESTABLE	(1 << 1)
+#define LOCKDEP_FLAG_RAW		(1 << 2)
 #define LOCKDEP_FLAG_NOVALIDATE 	(1 << 4)
 
 #define LOCKDEP_HLOCK_FLAGS_MASK	0x0f
@@ -333,6 +336,8 @@ extern void lockdep_init_map(struct lockdep_map *lock, const char *name,
 	do { (lock)->dep_map.flags |= LOCKDEP_FLAG_TERMINAL; } while (0)
 #define lockdep_set_terminal_nestable_class(lock) \
 	do { (lock)->dep_map.flags |= LOCKDEP_FLAG_TERMINAL_NESTABLE; } while (0)
+#define lockdep_set_raw_class(lock) \
+	do { (lock)->dep_map.flags |= LOCKDEP_FLAG_RAW; } while (0)
 
 /*
  * Compare locking classes
@@ -448,6 +453,7 @@ static inline void lockdep_on(void)
 		do { (void)(key); } while (0)
 #define lockdep_set_subclass(lock, sub)		do { } while (0)
 
+#define lockdep_set_raw_class(lock)		do { } while (0)
 #define lockdep_set_novalidate_class(lock)	do { } while (0)
 #define lockdep_set_terminal_class(lock)	do { } while (0)
 #define lockdep_set_terminal_nestable_class(lock)	do { } while (0)
diff --git a/include/linux/spinlock_types.h b/include/linux/spinlock_types.h
index 6a8086e..1d2114b 100644
--- a/include/linux/spinlock_types.h
+++ b/include/linux/spinlock_types.h
@@ -55,11 +55,11 @@
 	SPIN_DEP_MAP_INIT(lockname, f) }
 
 #define __RAW_SPIN_LOCK_UNLOCKED(lockname)	\
-	(raw_spinlock_t) __RAW_SPIN_LOCK_INITIALIZER(lockname, 0)
+	(raw_spinlock_t) __RAW_SPIN_LOCK_INITIALIZER(lockname, LOCKDEP_FLAG_RAW)
 
 #define __RAW_TERMINAL_SPIN_LOCK_UNLOCKED(lockname)	\
 	(raw_spinlock_t) __RAW_SPIN_LOCK_INITIALIZER(lockname, \
-						     LOCKDEP_FLAG_TERMINAL)
+					LOCKDEP_FLAG_TERMINAL|LOCKDEP_FLAG_RAW)
 
 #define DEFINE_RAW_SPINLOCK(x)	raw_spinlock_t x = __RAW_SPIN_LOCK_UNLOCKED(x)
 #define DEFINE_RAW_TERMINAL_SPINLOCK(x)	\
diff --git a/kernel/locking/lockdep.c b/kernel/locking/lockdep.c
index 5a853a6..efafd2d 100644
--- a/kernel/locking/lockdep.c
+++ b/kernel/locking/lockdep.c
@@ -3273,8 +3273,8 @@ static int __lock_acquire(struct lockdep_map *lock, unsigned int subclass,
 		 * one isn't a regular terminal lock.
 		 */
 		prev_type = hlock_is_terminal(hlock);
-		if (DEBUG_LOCKS_WARN_ON((prev_type == LOCKDEP_FLAG_TERMINAL) ||
-			((prev_type == LOCKDEP_FLAG_TERMINAL_NESTABLE) &&
+		if (DEBUG_LOCKS_WARN_ON((prev_type & LOCKDEP_FLAG_TERMINAL) ||
+			((prev_type & LOCKDEP_FLAG_TERMINAL_NESTABLE) &&
 			 (flags_is_terminal(class->flags) !=
 				LOCKDEP_FLAG_TERMINAL)))) {
 			pr_warn("Terminal lock error: prev lock = %s, curr lock = %s\n",
@@ -3282,6 +3282,17 @@ static int __lock_acquire(struct lockdep_map *lock, unsigned int subclass,
 			return 0;
 		}
 
+		/*
+		 * A task holding a raw spinlock should not acquire another
+		 * non-raw lock.
+		 */
+		if (DEBUG_LOCKS_WARN_ON((prev_type & LOCKDEP_FLAG_RAW) &&
+					!(class->flags & LOCKDEP_FLAG_RAW))) {
+			pr_warn("Raw lock error: prev lock = %s, curr lock = %s\n",
+				hlock->instance->name, class->name);
+			return 0;
+		}
+
 		if (hlock->class_idx == class_idx && nest_lock) {
 			if (hlock->references) {
 				/*
diff --git a/kernel/locking/spinlock_debug.c b/kernel/locking/spinlock_debug.c
index 9aa0fcc..1794d47 100644
--- a/kernel/locking/spinlock_debug.c
+++ b/kernel/locking/spinlock_debug.c
@@ -22,6 +22,7 @@ void __raw_spin_lock_init(raw_spinlock_t *lock, const char *name,
 	 */
 	debug_check_no_locks_freed((void *)lock, sizeof(*lock));
 	lockdep_init_map(&lock->dep_map, name, key, 0);
+	lockdep_set_raw_class(lock);
 #endif
 	lock->raw_lock = (arch_spinlock_t)__ARCH_SPIN_LOCK_UNLOCKED;
 	lock->magic = SPINLOCK_MAGIC;
-- 
1.8.3.1
