Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 20 Nov 2018 00:34:25 -0000
Received: from icoremail.net (unknown [209.85.210.178])
	by mail-app2 (Coremail) with SMTP id by_KCgD3_wsN+fJbV9i6AQ--.54977S3;
	Tue, 20 Nov 2018 01:55:25 +0800 (CST)
Received: from mail-pf1-f178.google.com (unknown [209.85.210.178])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwB3XEgK+fJbBZlZAA--.12169S3;
	Tue, 20 Nov 2018 01:55:22 +0800 (CST)
Received: by mail-pf1-f178.google.com with SMTP id b7so1981694pfi.8
        for <xuliker@zju.edu.cn>; Mon, 19 Nov 2018 09:55:22 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :from:to:cc:subject:date:message-id:sender:precedence:list-id;
        bh=Bp3d7Nf6xrY24bQITsz03LgxtFvQbXG4sYV2lVB3750=;
        b=M/876kN9xsA2CpGakP80icwO9HWwOulUFa9dVr43D+vGnPUGupPVTKYM5OFHU3shPA
         STULrEMZIAaMOF6CeQ6tm5cRtVYg7JD3HPRXp4xv8uCZRG7DAirjLzAjjvME9IH951kT
         LkiRcd5WRSe/JkBYzmmwaaF7xQRgS65mSj7hiizU5reYroemR50IJYmhM2bito0V0f6S
         PdBySHDyHGWZo0iTBH3NeFTV8C8zykIzA+QMFKrW0q6acmZhcRsLxDhYSVaBpECDwdfF
         VUJtKEOKDIxyKCqHZU+rR2MvwicjAdLY4TBLI5ZSWZjmgSvgyl2P2+shjVKLOqjbfDa3
         8uiQ==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=intel.com
X-Gm-Message-State: AGRZ1gIod9hr3RyfogUI3EWst2JZyRQv3v57PGd6Vvvc0xsNhewSJSDM
	qckhLTNogGCoXFHMJ3u7Wo7fxrOmhsTLYOpC479ggEidjNPMxvs=
X-Received: by 2002:aa7:87ce:: with SMTP id i14mr16186715pfo.20.1542650122539;
        Mon, 19 Nov 2018 09:55:22 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp2979120pju;
        Mon, 19 Nov 2018 09:55:21 -0800 (PST)
X-Google-Smtp-Source: AJdET5coKNuPJHcnU1jE3P+pDPS4xNkDiHxhEZK+wQa2RwV9n5XtIXiDNyQiZgtzNTpX6A0Ph54O
X-Received: by 2002:a65:530c:: with SMTP id m12mr20394970pgq.224.1542650121172;
        Mon, 19 Nov 2018 09:55:21 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542650121; cv=none;
        d=google.com; s=arc-20160816;
        b=l/edXvdFCjnsuOwXci7A49v3aIfVzWNh+adZy+fSK044mvS3PRQ3t3t7pJLhHWUQTm
         Nie5mbNRPwVx2s8aAU7G/2CbqPrVXT8NY7DRgDnMHqW+6DNdy0eWvTu7D1e/ozJQgq2l
         oNPFoPJ7Q4mZXzf8Nylv6w8zVU1cxmRADfGCeEJi1o+36GiDQ9ixYpuNUkuqBSZoibMl
         Go4+ekU8KY1LHJ5b93Abzj8T5mLbyAQWhDJOQFDfhOqgn80CE2uwYsZrcUHX4AlvXUC+
         ae9rVf/lGBegbQnXGsDD+7ydpeTZBUaRWFbU1izC7jIqixkVDiyRcRNTgVveIM7RXXUV
         kDYw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:message-id:date:subject:cc:to:from;
        bh=Bp3d7Nf6xrY24bQITsz03LgxtFvQbXG4sYV2lVB3750=;
        b=tT8iKkCyA5iIhDN1zZhebGW91kND+c6hDBQxyVtpYCgFucgz/Vx602e8Hu2+kp2n5Y
         zx2btNxzE3QmMVsxybR5P4JLX9vvgzYRIywMGCWr8Fh6wA5kq1nbouM5cdnxvbKZrm6M
         MHs+lYo6j4dxrWFIgDjsnyqk1Y/roFEbFcm4RNx4rcQNHIqqVnu9C6F7lwG2Ops1F8q/
         jolZ8qISgbOi8os5wgHVgGo03pUYTh1ZJ3bryCygv/Qbf6h38SGfavCN5rZthvf6Mpe6
         YYC3tlGJXkZoW3xVOLfb4kbJOWKsOCU+UWdTlUO2+Bv/skTG3yvZkn/9p0QDjmjVHwvV
         2u+w==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=intel.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id z5-v6si40775400pln.42.2018.11.19.09.55.06;
        Mon, 19 Nov 2018 09:55:21 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1731308AbeKTES7 (ORCPT <rfc822;nullbytes00@gmail.com>
        + 99 others); Mon, 19 Nov 2018 23:18:59 -0500
Received: from mga02.intel.com ([134.134.136.20]:31674 "EHLO mga02.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1730274AbeKTES6 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 19 Nov 2018 23:18:58 -0500
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga004.fm.intel.com ([10.253.24.48])
  by orsmga101.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 19 Nov 2018 09:54:26 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,253,1539673200"; 
   d="scan'208";a="107580423"
Received: from unknown (HELO localhost.jf.intel.com) ([10.54.55.47])
  by fmsmga004.fm.intel.com with ESMTP; 19 Nov 2018 09:54:25 -0800
From: kan.liang@linux.intel.com
To: tglx@linutronix.de, peterz@infradead.org, mingo@redhat.com,
        linux-kernel@vger.kernel.org
Cc: ak@linux.intel.com, yao.jin@linux.intel.com, sashal@kernel.org,
        Kan Liang <kan.liang@linux.intel.com>, stable@kernel.org
Subject: [PATCH V3] perf/x86/intel/uncore: Fix client IMC events return huge result
Date: Mon, 19 Nov 2018 09:53:48 -0800
Message-Id: <20181119175348.9976-1-kan.liang@linux.intel.com>
X-Mailer: git-send-email 2.14.5
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwB3XEgK+fJbBZlZAA--.12169S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxtryxJFyUWw48Wr4DAw1fJFb_yoW7Zw4Upw
	4xJrs8trWj93Z2g3y5AFs7XFyrJr4rJa98Ww45Wa4Iy3W5Jas3XF17GrW5u3Z5GF1ktFya
	yw1Y9r4UG345JaDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUm0b7Iv0xC_tr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r10
	6r15McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IYc2Ij64
	vIr41lw4CEc2x0rVAKj4xxMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE
	44CYbxCE4x80FwCY02Avz4vEIxC_GwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcV
	AFwI0_Ar0_tr1lcIIF0xvE2Ix0cI8IcVCY1x0267AKxVW8JVWxJwCYIxAIcVC2z280aVAF
	wI0_Cr1j6rxdMxvI42IY6I8E87Iv6xkF7I0E14v26F4UJVW0owCF04k20xvY0x0EwIxGrw
	CF04k20xvEw4C26cxK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC2
	0s026c02F40E14v26r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI
	0_Jw0_GFylIxkGc2Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6r1I6r4UYxBIdaVFxhVj
	vjDU0xZFpf9x07b0b18UUUUU=

From: Kan Liang <kan.liang@linux.intel.com>

The client IMC bandwidth events return very huge result.
  perf stat -e uncore_imc/data_reads/ -e uncore_imc/data_writes/ -I
  10000 -a
  10.000117222 34,788.76 MiB uncore_imc/data_reads/
  10.000117222 8.26 MiB uncore_imc/data_writes/
  20.000374584 34,842.89 MiB uncore_imc/data_reads/
  20.000374584 10.45 MiB uncore_imc/data_writes/
  30.000633299 37,965.29 MiB uncore_imc/data_reads/
  30.000633299 323.62 MiB uncore_imc/data_writes/
  40.000891548 41,012.88 MiB uncore_imc/data_reads/
  40.000891548 6.98 MiB uncore_imc/data_writes/
  50.001142480 1,125,899,906,621,494.75 MiB uncore_imc/data_reads/
  50.001142480 6.97 MiB uncore_imc/data_writes/

The client IMC events are freerunning counters. They still use the
old event encoding format (0x1 for data_read and 0x2 for data write).
The counter bit width is calculated by common code, which assume that
the standard encoding format is used for the freerunning counters.
Error bit width information is calculated.

The patch intends to convert the old client IMC event encoding to the
standard encoding format to apply to the common code.

Current common code uses event->attr.config which directly copy from
user space. We should not implicitly modify it for a converted event.
The event->hw.config is used to replace the event->attr.config in
common code.
For client IMC events, the event->attr.config is used to calculate a
converted event with standard encoding format in the custom event_init().
The converted event is stored in event->hw.config.
For other events of freerunning counters, they already use the standard
encoding format. The same value as event->attr.config is assigned to
event->hw.config in common event_init().

Fixes: commit 9aae1780e7e8 ("perf/x86/intel/uncore: Clean up client IMC uncore")
Reported-by: Jin Yao <yao.jin@linux.intel.com>
Tested-by: Jin Yao <yao.jin@linux.intel.com>
Signed-off-by: Kan Liang <kan.liang@linux.intel.com>
Cc: stable@kernel.org
---

Changes since V2:
- Re-structure the change log.

 arch/x86/events/intel/uncore.c     |  1 +
 arch/x86/events/intel/uncore.h     | 12 ++++++------
 arch/x86/events/intel/uncore_snb.c |  4 +++-
 3 files changed, 10 insertions(+), 7 deletions(-)

diff --git a/arch/x86/events/intel/uncore.c b/arch/x86/events/intel/uncore.c
index 27a461414b30..2690135bf83f 100644
--- a/arch/x86/events/intel/uncore.c
+++ b/arch/x86/events/intel/uncore.c
@@ -740,6 +740,7 @@ static int uncore_pmu_event_init(struct perf_event *event)
 		/* fixed counters have event field hardcoded to zero */
 		hwc->config = 0ULL;
 	} else if (is_freerunning_event(event)) {
+		hwc->config = event->attr.config;
 		if (!check_valid_freerunning_event(box, event))
 			return -EINVAL;
 		event->hw.idx = UNCORE_PMC_IDX_FREERUNNING;
diff --git a/arch/x86/events/intel/uncore.h b/arch/x86/events/intel/uncore.h
index e17ab885b1e9..cc6dd4f78158 100644
--- a/arch/x86/events/intel/uncore.h
+++ b/arch/x86/events/intel/uncore.h
@@ -285,8 +285,8 @@ static inline
 unsigned int uncore_freerunning_counter(struct intel_uncore_box *box,
 					struct perf_event *event)
 {
-	unsigned int type = uncore_freerunning_type(event->attr.config);
-	unsigned int idx = uncore_freerunning_idx(event->attr.config);
+	unsigned int type = uncore_freerunning_type(event->hw.config);
+	unsigned int idx = uncore_freerunning_idx(event->hw.config);
 	struct intel_uncore_pmu *pmu = box->pmu;
 
 	return pmu->type->freerunning[type].counter_base +
@@ -360,7 +360,7 @@ static inline
 unsigned int uncore_freerunning_bits(struct intel_uncore_box *box,
 				     struct perf_event *event)
 {
-	unsigned int type = uncore_freerunning_type(event->attr.config);
+	unsigned int type = uncore_freerunning_type(event->hw.config);
 
 	return box->pmu->type->freerunning[type].bits;
 }
@@ -368,7 +368,7 @@ unsigned int uncore_freerunning_bits(struct intel_uncore_box *box,
 static inline int uncore_num_freerunning(struct intel_uncore_box *box,
 					 struct perf_event *event)
 {
-	unsigned int type = uncore_freerunning_type(event->attr.config);
+	unsigned int type = uncore_freerunning_type(event->hw.config);
 
 	return box->pmu->type->freerunning[type].num_counters;
 }
@@ -382,8 +382,8 @@ static inline int uncore_num_freerunning_types(struct intel_uncore_box *box,
 static inline bool check_valid_freerunning_event(struct intel_uncore_box *box,
 						 struct perf_event *event)
 {
-	unsigned int type = uncore_freerunning_type(event->attr.config);
-	unsigned int idx = uncore_freerunning_idx(event->attr.config);
+	unsigned int type = uncore_freerunning_type(event->hw.config);
+	unsigned int idx = uncore_freerunning_idx(event->hw.config);
 
 	return (type < uncore_num_freerunning_types(box, event)) &&
 	       (idx < uncore_num_freerunning(box, event));
diff --git a/arch/x86/events/intel/uncore_snb.c b/arch/x86/events/intel/uncore_snb.c
index 8527c3e1038b..48d7121f71c7 100644
--- a/arch/x86/events/intel/uncore_snb.c
+++ b/arch/x86/events/intel/uncore_snb.c
@@ -425,9 +425,11 @@ static int snb_uncore_imc_event_init(struct perf_event *event)
 
 	/* must be done before validate_group */
 	event->hw.event_base = base;
-	event->hw.config = cfg;
 	event->hw.idx = idx;
 
+	/* Convert to standard encoding format for free running counters */
+	event->hw.config = ((cfg - 1) << 8) | 0x10ff;
+
 	/* no group validation needed, we have free running counters */
 
 	return 0;
-- 
2.14.5
