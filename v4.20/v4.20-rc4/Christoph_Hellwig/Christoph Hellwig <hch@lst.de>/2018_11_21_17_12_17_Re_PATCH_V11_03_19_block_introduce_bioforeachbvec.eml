Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 22 Nov 2018 00:34:44 -0000
Received: from icoremail.net (unknown [209.85.214.181])
	by mail-app4 (Coremail) with SMTP id cS_KCgC3f5kspvVbq13oAQ--.56S3;
	Thu, 22 Nov 2018 02:38:37 +0800 (CST)
Received: from mail-pl1-f181.google.com (unknown [209.85.214.181])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwD32EQnpvVbvstkAA--.115S3;
	Thu, 22 Nov 2018 02:38:32 +0800 (CST)
Received: by mail-pl1-f181.google.com with SMTP id e5so6700969plb.5
        for <xuliker@zju.edu.cn>; Wed, 21 Nov 2018 10:38:32 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent:sender:precedence
         :list-id;
        bh=YnJDOh+/cbB0imn5MRiVtPrY1WoJBqHd2cr2U4QG1LI=;
        b=EI9K9FpQjMlWIno8Nw7CbfhcbjVsyQsPnfVtKrbAfx9F6sjsTqBvzaWHNjOzPJeWgd
         lkksVQE7jQSQL0kikVwGc96CGccp84bLdyKxQsjvzX4sfJtOzus3FcbxHvzeVsKf6Mnp
         8nJpY8HtWmztzBwd+kE5PpBbf6WXO8hUGKcjwk5KHd4EhHrfSb2WbJeqc1olMDuBxcVE
         FQ76hfiT2jBu/3XUXSF4FQ05x7kLHPU7UpwsBTC93r2QT4o35fjD/GZupu67ZI3uYPDL
         rwTYpoUoQdxWmmiDLUOpcpL6B4kNzWBVghPLkVklZVe7eE5T3lipPLZth5XiRfHBCegR
         ZenA==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AA+aEWZVGMSzkOYjjOjDnPWeG4NA0kBRWa8PubDqNsIPBb7QmSy4AqYs
	2WyEWB6fj4sJnQbIOEb/8DtbCt74Z+TjPqfu+O16jaau5SCZFAA=
X-Received: by 2002:a17:902:a9c4:: with SMTP id b4mr7948047plr.298.1542825511695;
        Wed, 21 Nov 2018 10:38:31 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp2320476pju;
        Wed, 21 Nov 2018 10:38:30 -0800 (PST)
X-Google-Smtp-Source: AFSGD/V3qnDoHl2qO182CxselikMXZcEU5Hu7tVRkLXROdcXplt1jqoqm0X+BDF/j7ypYwRDextv
X-Received: by 2002:a17:902:b701:: with SMTP id d1-v6mr7544411pls.29.1542825510902;
        Wed, 21 Nov 2018 10:38:30 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542825510; cv=none;
        d=google.com; s=arc-20160816;
        b=i8dI/CEHPm0FBcscOXzMxWnCNk3a9eU2NM0lX6BXdMM+DNFd1OWeqjzu/FPNud6UMA
         Y9SChbNAq11puB0kTluspsq3TozyUOJcCrGlauFwy0fD8xvUjOMUg6qmduGU2p824bAr
         h9l8okhzesFPsY3ZZMghd0vaUocijCUBO7Tq8JLt6+qsLc5xG+Uid+ZN4FIRunMAs12J
         //8G7M/Agcz6Fd8McuoH94PgSB3Z1Yj2LxTmw8BjsYF3kxOcSFWMX3mVfPpqscToG6g2
         331+P7AbBsZpR/syLdH5GipaU7ARgGCj34nmvXXe0d6S/1TP1yEsAUh7x9EPWN379Y1x
         xQxQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:in-reply-to
         :content-disposition:mime-version:references:message-id:subject:cc
         :to:from:date;
        bh=YnJDOh+/cbB0imn5MRiVtPrY1WoJBqHd2cr2U4QG1LI=;
        b=p70SlT5RCUawf6A1BMHfLW4jNXczoovliV4kjd8PEvEMMMsAy8CkbbI/5iMWbda9RU
         ZKBOupiEeO/zynPVUTMJYHIY3cbhwkGKw9wX8YjzFFAkdi6DTjblJOwWxRt0raij51kz
         7l474UjF2w4i0vnroYBf0B4wECh7C2KnM9fhB8SZemFmeaH6aLK9Jvq19cJORUngSlJ3
         aiCF3zrHopzVB6Jpmf1wLVsJeJ2Czei2ecb+a3a4mOR1grlKRCS3vHjvu+ocRlg2+KKK
         uVyBhsrEo66B3BRvmVH3pd2eYvXLJyl0CMUS3Z9bueZ8N+udNdFYbznUXSwsrSCNRARy
         tptw==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id t129-v6si52255766pfb.16.2018.11.21.10.38.16;
        Wed, 21 Nov 2018 10:38:30 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1732125AbeKVDre (ORCPT <rfc822;yv9200@gmail.com> + 99 others);
        Wed, 21 Nov 2018 22:47:34 -0500
Received: from verein.lst.de ([213.95.11.211]:52660 "EHLO newverein.lst.de"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725995AbeKVDre (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 21 Nov 2018 22:47:34 -0500
Received: by newverein.lst.de (Postfix, from userid 2407)
        id 248B268C19; Wed, 21 Nov 2018 18:12:17 +0100 (CET)
Date: Wed, 21 Nov 2018 18:12:17 +0100
From: Christoph Hellwig <hch@lst.de>
To: Ming Lei <ming.lei@redhat.com>
Cc: Christoph Hellwig <hch@lst.de>, Jens Axboe <axboe@kernel.dk>,
        linux-block@vger.kernel.org, linux-kernel@vger.kernel.org,
        linux-mm@kvack.org, Theodore Ts'o <tytso@mit.edu>,
        Omar Sandoval <osandov@fb.com>,
        Sagi Grimberg <sagi@grimberg.me>,
        Dave Chinner <dchinner@redhat.com>,
        Kent Overstreet <kent.overstreet@gmail.com>,
        Mike Snitzer <snitzer@redhat.com>, dm-devel@redhat.com,
        Alexander Viro <viro@zeniv.linux.org.uk>,
        linux-fsdevel@vger.kernel.org, Shaohua Li <shli@kernel.org>,
        linux-raid@vger.kernel.org, David Sterba <dsterba@suse.com>,
        linux-btrfs@vger.kernel.org,
        "Darrick J . Wong" <darrick.wong@oracle.com>,
        linux-xfs@vger.kernel.org, Gao Xiang <gaoxiang25@huawei.com>,
        linux-ext4@vger.kernel.org, Coly Li <colyli@suse.de>,
        linux-bcache@vger.kernel.org, Boaz Harrosh <ooo@electrozaur.com>,
        Bob Peterson <rpeterso@redhat.com>, cluster-devel@redhat.com
Subject: Re: [PATCH V11 03/19] block: introduce bio_for_each_bvec()
Message-ID: <20181121171217.GA6259@lst.de>
References: <20181121032327.8434-1-ming.lei@redhat.com> <20181121032327.8434-4-ming.lei@redhat.com> <20181121133244.GB1640@lst.de> <20181121153135.GB19111@ming.t460p> <20181121161025.GB4977@lst.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181121161025.GB4977@lst.de>
User-Agent: Mutt/1.5.17 (2007-11-01)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwD32EQnpvVbvstkAA--.115S3
Authentication-Results: mail-app4; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxZry5Zw15Gr4xCFW7Kr13twb_yoWrCr48pF
	1UKa97Ar4fJF4xGFyDAanFyw1fGry5Ca4DJ3yxGrs8AFnxtrn7WrWUWFy2gFn3CrZYkFnF
	v3sFya1fGrZrXw7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUU9ab7Iv0xC_Zr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_Gr1j6F4UJwA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwAS0I0E0x
	vYzxvE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AK
	xVWUXVWUAwAv7VC2z280aVAFwI0_Jr0_Gr1lOx8S6xCaFVCjc4AY6r1j6r4UMx02cVCv0x
	Wlc7CjxVAKzI0EY4vE52x082I5MxkIecxEwVCI4VW5MxkI7II2jI8vz4vEwIxGrwCYIxAI
	cVC0I7IYx2IY67AKxVW5JVW7JwCYIxAIcVC0I7IYx2IY6xkF7I0E14v26r4j6F4UMxvI42
	IY6I8E87Iv67AKxVWxJVW8Jr1lcIIF0xvEx4A2jsIEc7CjxVAFwI0_Gr0_Gr1UMxAIw28I
	cxkI7VAKI48JMxAIw28IcVAKzI0EY4vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4
	AY6r1j6r4UMI8I3I0E5I8CrVAFwI0_Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE
	17CEb7AF67AKxVW8ZVWrXwCIc40Y0x0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Gr0_Zr
	UvcSsGvfC2KfnxnUUI43ZEXa7IUeCJPtUUUUU==

On Wed, Nov 21, 2018 at 05:10:25PM +0100, Christoph Hellwig wrote:
> No - I think we can always use the code without any segment in
> bvec_iter_advance.  Because bvec_iter_advance only operates on the
> iteractor, the generation of an actual single-page or multi-page
> bvec is left to the caller using the bvec_iter_bvec or segment_iter_bvec
> helpers.  The only difference is how many bytes you can move the
> iterator forward in a single loop iteration - so if you pass in
> PAGE_SIZE as the max_seg_len you just will have to loop more often
> for a large enough bytes, but not actually do anything different.

FYI, this patch reverts the max_seg_len related changes back to where
we are in mainline, and as expected everything works fine for me:

diff --git a/include/linux/bio.h b/include/linux/bio.h
index e5b975fa0558..926550ce2d21 100644
--- a/include/linux/bio.h
+++ b/include/linux/bio.h
@@ -137,24 +137,18 @@ static inline bool bio_full(struct bio *bio)
 	for (i = 0, iter_all.idx = 0; iter_all.idx < (bio)->bi_vcnt; iter_all.idx++)	\
 		bvec_for_each_segment(bvl, &((bio)->bi_io_vec[iter_all.idx]), i, iter_all)
 
-static inline void __bio_advance_iter(struct bio *bio, struct bvec_iter *iter,
-				      unsigned bytes, unsigned max_seg_len)
+static inline void bio_advance_iter(struct bio *bio, struct bvec_iter *iter,
+				    unsigned bytes)
 {
 	iter->bi_sector += bytes >> 9;
 
 	if (bio_no_advance_iter(bio))
 		iter->bi_size -= bytes;
 	else
-		__bvec_iter_advance(bio->bi_io_vec, iter, bytes, max_seg_len);
+		bvec_iter_advance(bio->bi_io_vec, iter, bytes);
 		/* TODO: It is reasonable to complete bio with error here. */
 }
 
-static inline void bio_advance_iter(struct bio *bio, struct bvec_iter *iter,
-				    unsigned bytes)
-{
-	__bio_advance_iter(bio, iter, bytes, PAGE_SIZE);
-}
-
 #define __bio_for_each_segment(bvl, bio, iter, start)			\
 	for (iter = (start);						\
 	     (iter).bi_size &&						\
@@ -168,7 +162,7 @@ static inline void bio_advance_iter(struct bio *bio, struct bvec_iter *iter,
 	for (iter = (start);						\
 	     (iter).bi_size &&						\
 		((bvl = bio_iter_mp_iovec((bio), (iter))), 1);	\
-	     __bio_advance_iter((bio), &(iter), (bvl).bv_len, BVEC_MAX_LEN))
+	     bio_advance_iter((bio), &(iter), (bvl).bv_len))
 
 /* returns one real segment(multi-page bvec) each time */
 #define bio_for_each_bvec(bvl, bio, iter)			\
diff --git a/include/linux/bvec.h b/include/linux/bvec.h
index cab36d838ed0..138b4007b8f2 100644
--- a/include/linux/bvec.h
+++ b/include/linux/bvec.h
@@ -25,8 +25,6 @@
 #include <linux/errno.h>
 #include <linux/mm.h>
 
-#define BVEC_MAX_LEN  ((unsigned int)-1)
-
 /*
  * was unsigned short, but we might as well be ready for > 64kB I/O pages
  */
@@ -102,8 +100,8 @@ struct bvec_iter_all {
 	.bv_offset	= segment_iter_offset((bvec), (iter)),	\
 })
 
-static inline bool __bvec_iter_advance(const struct bio_vec *bv,
-		struct bvec_iter *iter, unsigned bytes, unsigned max_seg_len)
+static inline bool bvec_iter_advance(const struct bio_vec *bv,
+		struct bvec_iter *iter, unsigned bytes)
 {
 	if (WARN_ONCE(bytes > iter->bi_size,
 		     "Attempted to advance past end of bvec iter\n")) {
@@ -112,18 +110,12 @@ static inline bool __bvec_iter_advance(const struct bio_vec *bv,
 	}
 
 	while (bytes) {
-		unsigned segment_len = segment_iter_len(bv, *iter);
-
-		if (max_seg_len < BVEC_MAX_LEN)
-			segment_len = min_t(unsigned, segment_len,
-					    max_seg_len -
-					    bvec_iter_offset(bv, *iter));
+		unsigned iter_len = bvec_iter_len(bv, *iter);
+		unsigned len = min(bytes, iter_len);
 
-		segment_len = min(bytes, segment_len);
-
-		bytes -= segment_len;
-		iter->bi_size -= segment_len;
-		iter->bi_bvec_done += segment_len;
+		bytes -= len;
+		iter->bi_size -= len;
+		iter->bi_bvec_done += len;
 
 		if (iter->bi_bvec_done == __bvec_iter_bvec(bv, *iter)->bv_len) {
 			iter->bi_bvec_done = 0;
@@ -157,13 +149,6 @@ static inline bool bvec_iter_rewind(const struct bio_vec *bv,
 	return true;
 }
 
-static inline bool bvec_iter_advance(const struct bio_vec *bv,
-				     struct bvec_iter *iter,
-				     unsigned bytes)
-{
-	return __bvec_iter_advance(bv, iter, bytes, PAGE_SIZE);
-}
-
 #define for_each_bvec(bvl, bio_vec, iter, start)			\
 	for (iter = (start);						\
 	     (iter).bi_size &&						\
