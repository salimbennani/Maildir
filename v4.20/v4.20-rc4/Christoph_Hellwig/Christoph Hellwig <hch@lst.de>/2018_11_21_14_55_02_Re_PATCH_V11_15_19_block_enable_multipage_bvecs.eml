Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 22 Nov 2018 00:33:58 -0000
Received: from icoremail.net (unknown [209.85.214.173])
	by mail-app2 (Coremail) with SMTP id by_KCgDXv5oYcvVbddzIAQ--.58492S3;
	Wed, 21 Nov 2018 22:56:25 +0800 (CST)
Received: from mail-pl1-f173.google.com (unknown [209.85.214.173])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCHZUEXcvVboPxjAA--.1495S3;
	Wed, 21 Nov 2018 22:56:24 +0800 (CST)
Received: by mail-pl1-f173.google.com with SMTP id s5-v6so5871107plq.11
        for <xuliker@zju.edu.cn>; Wed, 21 Nov 2018 06:56:24 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent:sender:precedence
         :list-id;
        bh=wIUMovJZnti3tkrsKV3zmEkVcztWpAI5P5ItS6DS4EY=;
        b=SVdukeH4oV9Ik7Td3Zq+XUCwyHapGnOOrfN2DGH7OO1PBp1xA1ZvdVLrvLeSgpIUnw
         bgCzNFkgs+Ga35yNop0l6V/IXtxR8iqJxTgpSZ5bTXqvtr8lOoBOr80fD01hGOveUfwI
         Afhon1jE+DF2pMANecsP6QUk39d98EbvVfx+7/HvHItSqayOLt0WIX6qQ1l/2lAhacNO
         A2m4eHaa5ttAnWGwdPS5cgdXrVfpHT2Dz26p6ROgpkFAu7nBd2ObnsYyL2vtqPILpbRx
         gCwpJw3Qdx7c/hD7tITDOHCdcV/kKRpWsh+eflLXBxVaWRsPp4pQ3UHH9ssS2BOtZ3Xk
         YVKA==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AA+aEWZERf2hVQre2DAndMS1+9t1JxUx03mHLmH0Zf+nsBGlRZvFc7Hr
	35c7C6oqDq0Whx/FmyWNIyhz+W2v+6PYt+L7pKriMvB7L/2rxvQ=
X-Received: by 2002:a17:902:6686:: with SMTP id e6-v6mr7036226plk.173.1542812183765;
        Wed, 21 Nov 2018 06:56:23 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp2055901pju;
        Wed, 21 Nov 2018 06:56:22 -0800 (PST)
X-Google-Smtp-Source: AFSGD/UPCFIyJbMAqPCFIzbSIQPpqJ3BtQOWmzTT+2/YdaDhQtiWn1qdJTuurCIq3PUQD5DY3Kep
X-Received: by 2002:a17:902:a601:: with SMTP id u1mr7087871plq.77.1542812182885;
        Wed, 21 Nov 2018 06:56:22 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542812182; cv=none;
        d=google.com; s=arc-20160816;
        b=m0z13wfRypq/wCLup0rywb7L6+wwtbusoy1Ko8juPCLNnBEqCE2QM4qy0RcZ1zfAXH
         6kquuHjxg1Db4HEVns97HAt80FXjkxBSruQwxW/NRivEfVB2boCW5jSVbnDBnEbc5jDy
         mdX6kp6gES4etBAURRggWdFANaS420fVwTBjt+ZWACvF/2mvJwoVGXj4ssTk6aXQyG5u
         YlYDoZ+eEyg2vhus7G+FZws6r56K3BSfetFn0G6+MI/HlhUbbnopsr8K3CPYYLROSQ3M
         QazJYB/YrR7IyU2Rapu1FYwumH6mNCVKe70jnyFKxZvXnoN8aMYoYTHS85BkeRAEMg6C
         G2hg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:in-reply-to
         :content-disposition:mime-version:references:message-id:subject:cc
         :to:from:date;
        bh=wIUMovJZnti3tkrsKV3zmEkVcztWpAI5P5ItS6DS4EY=;
        b=t29WtnHvNiKQJtSboFnx1KkqPb2ygWnxcpPL5i4iXKob3ORaXRGBQr3i6BMVP68V9f
         zJZqLNFZu0l5Vap4z1CBWecyA9z7YjVgDdG4VUBF4+OgC88VbKA92oL5tgeVhGelaH2R
         XigN9y2/DaHBzwh0+nXe2uT+Eu/adGiDUnEEcgAs1rlN2pYltMA/7c6SICWQkhEEuWD/
         K1jKtjJtnoMoD3d5m3yxUfqnnAs3SifsIAOJ4zjWfCB4R7Awbd83EGTh+o1UhBJUkIUi
         apaAnfUULshcTnMAeFDyClvF6UK1zASsAhVPXpQjyaTwS/uZHEP+TmPfFqKkBBUaqgM0
         bZ5Q==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id m3si14152419pgc.232.2018.11.21.06.56.02;
        Wed, 21 Nov 2018 06:56:22 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1731386AbeKVB3u (ORCPT <rfc822;nullbytes00@gmail.com>
        + 99 others); Wed, 21 Nov 2018 20:29:50 -0500
Received: from verein.lst.de ([213.95.11.211]:51843 "EHLO newverein.lst.de"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1731048AbeKVB3t (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 21 Nov 2018 20:29:49 -0500
Received: by newverein.lst.de (Postfix, from userid 2407)
        id 4ABAF68C19; Wed, 21 Nov 2018 15:55:02 +0100 (CET)
Date: Wed, 21 Nov 2018 15:55:02 +0100
From: Christoph Hellwig <hch@lst.de>
To: Ming Lei <ming.lei@redhat.com>
Cc: Jens Axboe <axboe@kernel.dk>, linux-block@vger.kernel.org,
        linux-kernel@vger.kernel.org, linux-mm@kvack.org,
        Theodore Ts'o <tytso@mit.edu>, Omar Sandoval <osandov@fb.com>,
        Sagi Grimberg <sagi@grimberg.me>,
        Dave Chinner <dchinner@redhat.com>,
        Kent Overstreet <kent.overstreet@gmail.com>,
        Mike Snitzer <snitzer@redhat.com>, dm-devel@redhat.com,
        Alexander Viro <viro@zeniv.linux.org.uk>,
        linux-fsdevel@vger.kernel.org, Shaohua Li <shli@kernel.org>,
        linux-raid@vger.kernel.org, David Sterba <dsterba@suse.com>,
        linux-btrfs@vger.kernel.org,
        "Darrick J . Wong" <darrick.wong@oracle.com>,
        linux-xfs@vger.kernel.org, Gao Xiang <gaoxiang25@huawei.com>,
        Christoph Hellwig <hch@lst.de>, linux-ext4@vger.kernel.org,
        Coly Li <colyli@suse.de>, linux-bcache@vger.kernel.org,
        Boaz Harrosh <ooo@electrozaur.com>,
        Bob Peterson <rpeterso@redhat.com>, cluster-devel@redhat.com
Subject: Re: [PATCH V11 15/19] block: enable multipage bvecs
Message-ID: <20181121145502.GA3241@lst.de>
References: <20181121032327.8434-1-ming.lei@redhat.com> <20181121032327.8434-16-ming.lei@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181121032327.8434-16-ming.lei@redhat.com>
User-Agent: Mutt/1.5.17 (2007-11-01)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwCHZUEXcvVboPxjAA--.1495S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxCrWUArW8Gw1rZr1rKr4kWFg_yoWrtw4xpr
	n7t3WvkrZxK3y8ZFy2kFnay3WSyanrG39rArWfJ3sYvr13trn7tayDJ34FyFyrKrs8uFZ7
	ZFWktFW7Crs8J3JanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUBIb7Iv0xC_Cr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1Y
	6r17McIj6I8E87Iv67AKxVWxJVW8Jr1lOx8S6xCaFVCjc4AY6r1j6r4UMx02cVCv0xWlc7
	CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE44CYbxCE4x80FwCY02Avz4vEIxC_Xrylc2Ij
	II80xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26ryj6F1UMxvI42IY6xIIjxv20xvEc7
	CjxVAFwI0_Gr0_Cr1lcIIF0xvEx4A2jsIE14v26rxl6s0DMxvI42IY6I8E87Iv6xkF7I0E
	14v26rxl6s0DMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI0EY4vE52x082I5MxCjnVCjjx
	CrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAFwI0_Jr0_Jr4lx2IqxVCjr7xv
	wVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVW8ZVWrXwCIc40Y0x0EwIxGrwCI42IY6xAIw2
	0EY4v20xvaj40_Jr0_JF7vcSsGvfC2KfnxnUUI43ZEXa7IUeZID7UUUUU==

On Wed, Nov 21, 2018 at 11:23:23AM +0800, Ming Lei wrote:
>  	if (bio->bi_vcnt > 0) {
> -		struct bio_vec *bv = &bio->bi_io_vec[bio->bi_vcnt - 1];
> +		struct bio_vec bv;
> +		struct bio_vec *seg = &bio->bi_io_vec[bio->bi_vcnt - 1];
>  
> -		if (page == bv->bv_page && off == bv->bv_offset + bv->bv_len) {
> -			bv->bv_len += len;
> +		bvec_last_segment(seg, &bv);
> +
> +		if (page == bv.bv_page && off == bv.bv_offset + bv.bv_len) {

I think this we can simplify the try to merge into bio case a bit,
and also document it better with something like this:

diff --git a/block/bio.c b/block/bio.c
index 854676edc438..cc913281a723 100644
--- a/block/bio.c
+++ b/block/bio.c
@@ -822,54 +822,40 @@ EXPORT_SYMBOL(bio_add_pc_page);
  * @page: page to add
  * @len: length of the data to add
  * @off: offset of the data in @page
+ * @same_page: if %true only merge if the new data is in the same physical
+ *		page as the last segment of the bio.
  *
- * Try to add the data at @page + @off to the last page of @bio.  This is a
+ * Try to add the data at @page + @off to the last bvec of @bio.  This is a
  * a useful optimisation for file systems with a block size smaller than the
  * page size.
  *
  * Return %true on success or %false on failure.
  */
 bool __bio_try_merge_page(struct bio *bio, struct page *page,
-		unsigned int len, unsigned int off)
+		unsigned int len, unsigned int off, bool same_page)
 {
 	if (WARN_ON_ONCE(bio_flagged(bio, BIO_CLONED)))
 		return false;
 
 	if (bio->bi_vcnt > 0) {
-		struct bio_vec bv;
-		struct bio_vec *seg = &bio->bi_io_vec[bio->bi_vcnt - 1];
-
-		bvec_last_segment(seg, &bv);
-
-		if (page == bv.bv_page && off == bv.bv_offset + bv.bv_len) {
-			seg->bv_len += len;
-			bio->bi_iter.bi_size += len;
-			return true;
-		}
+		struct bio_vec *bv = &bio->bi_io_vec[bio->bi_vcnt - 1];
+		phys_addr_t vec_addr = page_to_phys(bv->bv_page);
+		phys_addr_t page_addr = page_to_phys(page);
+
+		if (vec_addr + bv->bv_offset + bv->bv_len != page_addr + off)
+			return false;
+		if (same_page &&
+		    (vec_addr & PAGE_SIZE) != (page_addr & PAGE_SIZE))
+			return false;
+
+		bv->bv_len += len;
+		bio->bi_iter.bi_size += len;
+		return true;
 	}
 	return false;
 }
 EXPORT_SYMBOL_GPL(__bio_try_merge_page);
 
-static bool bio_try_merge_segment(struct bio *bio, struct page *page,
-				  unsigned int len, unsigned int off)
-{
-	if (WARN_ON_ONCE(bio_flagged(bio, BIO_CLONED)))
-		return false;
-
-	if (bio->bi_vcnt > 0) {
-		struct bio_vec *seg = &bio->bi_io_vec[bio->bi_vcnt - 1];
-
-		if (page_to_phys(seg->bv_page) + seg->bv_offset + seg->bv_len ==
-		    page_to_phys(page) + off) {
-			seg->bv_len += len;
-			bio->bi_iter.bi_size += len;
-			return true;
-		}
-	}
-	return false;
-}
-
 /**
  * __bio_add_page - add page to a bio in a new segment
  * @bio: destination bio
@@ -910,7 +896,7 @@ EXPORT_SYMBOL_GPL(__bio_add_page);
 int bio_add_page(struct bio *bio, struct page *page,
 		 unsigned int len, unsigned int offset)
 {
-	if (!bio_try_merge_segment(bio, page, len, offset)) {
+	if (!__bio_try_merge_page(bio, page, len, offset, false)) {
 		if (bio_full(bio))
 			return 0;
 		__bio_add_page(bio, page, len, offset);
diff --git a/fs/iomap.c b/fs/iomap.c
index ccc2ba115f4d..d918acb9bfc9 100644
--- a/fs/iomap.c
+++ b/fs/iomap.c
@@ -313,7 +313,7 @@ iomap_readpage_actor(struct inode *inode, loff_t pos, loff_t length, void *data,
 	 */
 	sector = iomap_sector(iomap, pos);
 	if (ctx->bio && bio_end_sector(ctx->bio) == sector) {
-		if (__bio_try_merge_page(ctx->bio, page, plen, poff))
+		if (__bio_try_merge_page(ctx->bio, page, plen, poff, true))
 			goto done;
 		is_contig = true;
 	}
diff --git a/fs/xfs/xfs_aops.c b/fs/xfs/xfs_aops.c
index 5c2190216614..b9fd44168f61 100644
--- a/fs/xfs/xfs_aops.c
+++ b/fs/xfs/xfs_aops.c
@@ -616,7 +616,7 @@ xfs_add_to_ioend(
 				bdev, sector);
 	}
 
-	if (!__bio_try_merge_page(wpc->ioend->io_bio, page, len, poff)) {
+	if (!__bio_try_merge_page(wpc->ioend->io_bio, page, len, poff, true)) {
 		if (iop)
 			atomic_inc(&iop->write_count);
 		if (bio_full(wpc->ioend->io_bio))
diff --git a/include/linux/bio.h b/include/linux/bio.h
index e5b975fa0558..f08e6940c1ab 100644
--- a/include/linux/bio.h
+++ b/include/linux/bio.h
@@ -442,7 +442,7 @@ extern int bio_add_page(struct bio *, struct page *, unsigned int,unsigned int);
 extern int bio_add_pc_page(struct request_queue *, struct bio *, struct page *,
 			   unsigned int, unsigned int);
 bool __bio_try_merge_page(struct bio *bio, struct page *page,
-		unsigned int len, unsigned int off);
+		unsigned int len, unsigned int off, bool same_page);
 void __bio_add_page(struct bio *bio, struct page *page,
 		unsigned int len, unsigned int off);
 int bio_iov_iter_get_pages(struct bio *bio, struct iov_iter *iter);
