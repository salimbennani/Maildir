Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 22 Nov 2018 21:39:34 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C4DCE58040F;
	Thu, 22 Nov 2018 03:39:06 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Nov 2018 03:39:05 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Ag/sygxQ1hLYCTQCiHSP/8JZgCtpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YReDt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZDI2y?=
 =?us-ascii?q?b5UBAfcCM+ZWoIbyu0YBohmwCgm3HOPiyCRFhmPq0aAgz+gtDRvL0BImEtkTsH?=
 =?us-ascii?q?rUttL1NKIKXO6zy6nI1yvMb/VX2Df69YPGaBEhru+WXb1qdcrRyFIvFwLYhViX?=
 =?us-ascii?q?rYzlOCmV2foLs2ma6OpsT/qvi285pAFruDevwsYsipLIho8O0F/E7yB5zJwpKt?=
 =?us-ascii?q?2/TU52eNipG4ZeuSGdMot5WMIiQ2dwtSY51LIGo5i7czYOyJg9wB7fcfOHfo6V?=
 =?us-ascii?q?6RzgTOacOSl0iG5hdb6lmhq//1asxvfhWsS3zFpGtCtIn9vUunwTyhDe6NKLRu?=
 =?us-ascii?q?Zy80u9wzqDyhzf5vxeLU02iabWLYMqzKQqmZoJq0vDGzf7mEXog6+ScUUp4vao?=
 =?us-ascii?q?6+v5bbX8vJOcNJF7ihv4MqswnsyzG+M4MhIBX2SD+OS80qPs/VHhTblUkvE7lr?=
 =?us-ascii?q?PVvI3UKMgFvKK1HgxY3po55xu+DTqqyNEYkmMGLFJBdhKHlY/pO1TWLfD8DPe/?=
 =?us-ascii?q?hUmskThyy/DFILLhGJPNIWbHkLv4erZ85UhcxxQpzd1E+ZJUBa8OIOjpVk/yqt?=
 =?us-ascii?q?PYFBk5PBKww+r9D9V9zIweVXqVAqCFKKPSrUOI5uU3LumIZY8VuyjyJ+Iq5v7z?=
 =?us-ascii?q?lnI5nV4dfa+03ZoYcny4H/JmI1mHbnromNsODWAKvg8mRuzwlFKCSSJTZ2q1X6?=
 =?us-ascii?q?8k5jE0EoOmDZvZSYCqmrCB3Dq7EYdQZmBJEV2MFXbod4OZW/YDci6SI8lhkiAa?=
 =?us-ascii?q?WrilUYMuyRautAriwbp9MuXU4jEYtY7k1NVt5e3Tkg89+SZ3D8Sa1WGNSWZ0k3?=
 =?us-ascii?q?gMRz832qB/vEN8xk2C0ah+n/xXC9hT6+lVXQc9MJ7W1/Z6BMzqWgLdYteJT06r?=
 =?us-ascii?q?Tc+9ATExSdIxwMUCY1xnFNWglR3D2yuqA7kIl72EHpA086Tc32TvKMZ50XrJyK?=
 =?us-ascii?q?4hj1w+SMtVKWKmnrJ/9xTUB4PRkEWWjaCqeb4Y3C7M7miDy2WOsVpcUA5xV6XF?=
 =?us-ascii?q?QH8ealHXrdT/+kPNUbuuBa47PQtGzM6IMrFKZcHxjVVaWPfjP8zTbH+rlGeuGx?=
 =?us-ascii?q?mE3LOMY5Dse2UGwirdDk8IkwQQ/XaDMQgzHSOho2PYDDxzGlPjeULs8e9iqHyl?=
 =?us-ascii?q?Sk841R2Fb0pk17Ct4B4ameScS+8P3rIDoCouti97HEij0N7MC9qPvQxhfL5Cbt?=
 =?us-ascii?q?M7+1pH0WPZtwpgPp2vNaxih1gecxhpsEPqzRl4FoJAkc0ypnMw0AVyMb6Y0E9G?=
 =?us-ascii?q?dz6AwZDwO7jXKm7u/BCva6/awE3e3MyR+qcV7PQ4qlPjvA6yG0om8nVn1cRV0n?=
 =?us-ascii?q?SG6pXLCgoSTYz+UkIt+xdmoLHaZzE355nI2n10Lam0rjjC1sozC+sh1BmhcMlQ?=
 =?us-ascii?q?MaOeGADpDs0VGtKhKOopm1iucBIJJ+RS9K8yP8O7ePqKwq+rPOB8nD24iWRL+p?=
 =?us-ascii?q?xy0kWJ9yBkUO7Hw44Fw+2E3guATzr9jEqhvtrrloxeZDASHnCwyS7rBINKYq1y?=
 =?us-ascii?q?fIALCXqhIsGtx9V+gYLtVGBc9FK5G1wG38qpcwKIb1PhxQ1QyVgXoXu/lCuizj?=
 =?us-ascii?q?x7jysmrrCC0yzJ2ejicgQIOnRKRGV7kVjjO4y0gM0EU0iyaAgpkgCo5UL7x6hd?=
 =?us-ascii?q?uaR+IHPfQUZOfyjqMW5iVrG8uaaFY85K8JkoqzlYUPygYVCGTb7wuxsb0yL5E2?=
 =?us-ascii?q?pe3jw7bCyqupPikhx+iWKdKmtzrXXDdcFxwxff+MLTRfpL0jUaQyl4jCHdBkKg?=
 =?us-ascii?q?MNmx4dWUi5DDv/i8V227TJ1TcirrzYSauCug/2JqAh6/n/G1mtL5Fwg3yiv719?=
 =?us-ascii?q?hsVSXVoxfweIjr16KmMe15eklkHkPz681/GotmiIs/mIkQ2WQGhpWS5XcGkX38?=
 =?us-ascii?q?MdJB1aL8bXoNQyUGw9rU4AjjxU1iIWiFx4P/VnWB3MRhY8O2bX8R2iI498pKEr?=
 =?us-ascii?q?ub7KRYnStppVq1tQHRbuJ8njsHyfsu9WQVg+cGuAc2yiWdA7YSHVRXPCD2lhSI?=
 =?us-ascii?q?6cy+o7tTZGq1bbew009+l8i7DL6eugFcRGr5epA6EC9178V/M0jD3Gf96476Y9?=
 =?us-ascii?q?nQccwctgePnBjelehVJ4k8lv4LhSphJGL8smcpy+89jRxyw566uJKLJHlq/KK8?=
 =?us-ascii?q?GhRYLCH6Z9sP+jHxiqZThtqW34eqHpl7GzQERp3oTe+zEDIJtPTqLAKOEDw6qn?=
 =?us-ascii?q?eGFrvTBw6f6EF6r33RF5CnLW2YJH4czd96XhmSOFRfgBwIXDU9hpM2DRqlxMvl?=
 =?us-ascii?q?cEdk/DwR4kP4pwBIyuJpMRn/T2jeqB2pajcyVJiQMh5W4hte6EfSNMyU9vhzED?=
 =?us-ascii?q?1A/p29sAyNLXSWZwZSAmEMREOEHErvPqW06dnD7uiYBfe+L/3UbrWVsuFeU/aI?=
 =?us-ascii?q?xZSy0opp5TqMN8OPPmV8AP0/wEZMQXd5G8HBkTUVVyMXjz7Nb9KcpBqk+ix3qd?=
 =?us-ascii?q?2/8O32WA3144uDEaBSMdJp+xC5mqqDM++QhCBkKTdXzJ8MxHnIyKQB014WkS1h?=
 =?us-ascii?q?az6tEbEYvy7XUK3QgrNXDwIcay5rNMtH8aM83gpOOc7akN/11aR4jvk6C1hbT1?=
 =?us-ascii?q?zhh9qpaNcOI2G8MlPHGUmKOK6HJT3N38H4f6e8RadMg+VTsh26oSybHFP7PjSf?=
 =?us-ascii?q?iznpUAiiPvtRjC6AJhxRpoG8fgxpCWjiV9/mbhy7MNlqjTw527E0h3XKNXICPj?=
 =?us-ascii?q?h4aU9CsrqQ7SZAiPVlB2NB9mZlLfWDmyuB8+nYK5MWveF3DShui+1a4Go1y71O?=
 =?us-ascii?q?4SFARfx1njbSr9F0r1GnlOmP1iRoUB5UpjlXg4KLuF1oOb/F+ZlYRXbE4BUN4H?=
 =?us-ascii?q?2QChsQodtlD9zvu6ZIxdnOlKL8MjFC893P8MsYBsjULt+HMXU7PRroHj7UEBUK?=
 =?us-ascii?q?TTqxOW7DgExdlaLaynrAipU9rJH2lNIlULJASFEnXqceB0NjFcYOZpxtUyg4nK?=
 =?us-ascii?q?yzit4Qo3G5qU+Cat9du8XjUeifB+foYA6YgKNNYxoTwPusKYMJO4vp3Ap6a1Rg?=
 =?us-ascii?q?lYDLAEv4VMpI5CZma1ln8w127HFiQzhriAreYQS37SpWTKbskw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAABIlPZbh0O0hNFjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGCaYECJ4wQjAGCDRSXJhSBXywLCAGIUSI0CQ0BAwE?=
 =?us-ascii?q?BAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmEBAQEBAgEBAiQTPwUBCQEBChgJJQMMB?=
 =?us-ascii?q?UkTBYMcAYF5CAQBCqphM4QtAQsBhWgFjAmBVz+EI4Rng0yCJgKLEZRxBwKCHAS?=
 =?us-ascii?q?EXIMthnsjkQiDA4pAjDOCDU0jgwgBM4InF4hehT4/AQExgQUBAYpcKYIkAQE?=
X-IPAS-Result: =?us-ascii?q?A0ABAABIlPZbh0O0hNFjGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGCaYECJ4wQjAGCDRSXJhSBXywLCAGIUSI0CQ0BAwEBAQEBAQIBEwEBA?=
 =?us-ascii?q?QgNCQgpIwyCNiQBgmEBAQEBAgEBAiQTPwUBCQEBChgJJQMMBUkTBYMcAYF5CAQ?=
 =?us-ascii?q?BCqphM4QtAQsBhWgFjAmBVz+EI4Rng0yCJgKLEZRxBwKCHASEXIMthnsjkQiDA?=
 =?us-ascii?q?4pAjDOCDU0jgwgBM4InF4hehT4/AQExgQUBAYpcKYIkAQE?=
X-IronPort-AV: E=Sophos;i="5.56,265,1539673200"; 
   d="scan'208";a="52273392"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 22 Nov 2018 03:39:04 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2390972AbeKVWR7 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 22 Nov 2018 17:17:59 -0500
Received: from foss.arm.com ([217.140.101.70]:46264 "EHLO foss.arm.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1732166AbeKVWR7 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 22 Nov 2018 17:17:59 -0500
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
        by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id E64AF361A;
        Thu, 22 Nov 2018 03:38:58 -0800 (PST)
Received: from e107981-ln.cambridge.arm.com (e107981-ln.cambridge.arm.com [10.1.197.40])
        by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id 448B43F5A0;
        Thu, 22 Nov 2018 03:38:56 -0800 (PST)
Date: Thu, 22 Nov 2018 11:38:53 +0000
From: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
To: Leonard Crestez <leonard.crestez@nxp.com>
Cc: Philipp Zabel <p.zabel@pengutronix.de>,
        Lucas Stach <l.stach@pengutronix.de>,
        Richard Zhu <hongxing.zhu@nxp.com>,
        Andrey Smirnov <andrew.smirnov@gmail.com>,
        Gustavo Pimentel <gustavo.pimentel@synopsys.com>,
        Jingoo Han <jingoohan1@gmail.com>,
        Bjorn Helgaas <bhelgaas@google.com>,
        "linux-pci@vger.kernel.org" <linux-pci@vger.kernel.org>,
        "linux-arm-kernel@lists.infradead.org" 
        <linux-arm-kernel@lists.infradead.org>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        Shawn Guo <shawnguo@kernel.org>,
        Fabio Estevam <fabio.estevam@nxp.com>,
        "A.s. Dong" <aisheng.dong@nxp.com>,
        dl-linux-imx <linux-imx@nxp.com>,
        "kernel@pengutronix.de" <kernel@pengutronix.de>
Subject: Re: [PATCH v2] PCI: imx: Add imx6sx suspend/resume support
Message-ID: <20181122113853.GB11952@e107981-ln.cambridge.arm.com>
References: <984fcef6d928632241a4a3bce41e2645a304d335.1541598751.git.leonard.crestez@nxp.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <984fcef6d928632241a4a3bce41e2645a304d335.1541598751.git.leonard.crestez@nxp.com>
User-Agent: Mutt/1.5.24 (2015-08-30)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Wed, Nov 07, 2018 at 01:57:03PM +0000, Leonard Crestez wrote:
> Enable PCI suspend/resume support on imx6sx socs. This is similar to
> imx7d with a few differences:
> 
> * The PM_Turn_Off bit is exposed through an IOMUX GPR, like all other
> pcie control bits on 6sx.
> * The pcie_inbound_axi clk needs to be turned off in suspend. On resume
> it is restored via resume -> deassert_core_reset -> enable_ref_clk.
> 
> Most of the resume logic is shared with the initial reset after probe.
> 
> Signed-off-by: Leonard Crestez <leonard.crestez@nxp.com>
> 
> ---
> Changes since v1:
> * Use a switch statement in imx6_pcie_pm_turnoff. The DT-based turnoff
> path is still an if statement.
> * Did not split imx6_pcie_clk_disable or call it from other paths, this
> would bring complications and is somewhat unrelated.
> * See v1 comments: https://lore.kernel.org/patchwork/patch/996806/
> 
>  drivers/pci/controller/dwc/pci-imx6.c       | 44 ++++++++++++++++++---
>  include/linux/mfd/syscon/imx6q-iomuxc-gpr.h |  1 +
>  2 files changed, 40 insertions(+), 5 deletions(-)

I request Richard/Lucas ACK in order to merge this patch.

Thanks,
Lorenzo

> diff --git a/drivers/pci/controller/dwc/pci-imx6.c b/drivers/pci/controller/dwc/pci-imx6.c
> index 2cbef2d7c207..54625569d0bc 100644
> --- a/drivers/pci/controller/dwc/pci-imx6.c
> +++ b/drivers/pci/controller/dwc/pci-imx6.c
> @@ -771,41 +771,75 @@ static void imx6_pcie_ltssm_disable(struct device *dev)
>  	}
>  }
>  
>  static void imx6_pcie_pm_turnoff(struct imx6_pcie *imx6_pcie)
>  {
> -	reset_control_assert(imx6_pcie->turnoff_reset);
> -	reset_control_deassert(imx6_pcie->turnoff_reset);
> +	struct device *dev = imx6_pcie->pci->dev;
> +
> +	/* Some variants have a turnoff reset in DT */
> +	if (imx6_pcie->turnoff_reset) {
> +		reset_control_assert(imx6_pcie->turnoff_reset);
> +		reset_control_deassert(imx6_pcie->turnoff_reset);
> +		goto pm_turnoff_sleep;
> +	}
> +
> +	/* Others poke directly at IOMUXC registers */
> +	switch (imx6_pcie->variant) {
> +	case IMX6SX:
> +		regmap_update_bits(imx6_pcie->iomuxc_gpr, IOMUXC_GPR12,
> +				IMX6SX_GPR12_PCIE_PM_TURN_OFF,
> +				IMX6SX_GPR12_PCIE_PM_TURN_OFF);
> +		regmap_update_bits(imx6_pcie->iomuxc_gpr, IOMUXC_GPR12,
> +				IMX6SX_GPR12_PCIE_PM_TURN_OFF, 0);
> +		break;
> +	default:
> +		dev_err(dev, "PME_Turn_Off not implemented\n");
> +		return;
> +	}
>  
>  	/*
>  	 * Components with an upstream port must respond to
>  	 * PME_Turn_Off with PME_TO_Ack but we can't check.
>  	 *
>  	 * The standard recommends a 1-10ms timeout after which to
>  	 * proceed anyway as if acks were received.
>  	 */
> +pm_turnoff_sleep:
>  	usleep_range(1000, 10000);
>  }
>  
>  static void imx6_pcie_clk_disable(struct imx6_pcie *imx6_pcie)
>  {
>  	clk_disable_unprepare(imx6_pcie->pcie);
>  	clk_disable_unprepare(imx6_pcie->pcie_phy);
>  	clk_disable_unprepare(imx6_pcie->pcie_bus);
>  
> -	if (imx6_pcie->variant == IMX7D) {
> +	switch (imx6_pcie->variant) {
> +	case IMX6SX:
> +		clk_disable_unprepare(imx6_pcie->pcie_inbound_axi);
> +		break;
> +	case IMX7D:
>  		regmap_update_bits(imx6_pcie->iomuxc_gpr, IOMUXC_GPR12,
>  				   IMX7D_GPR12_PCIE_PHY_REFCLK_SEL,
>  				   IMX7D_GPR12_PCIE_PHY_REFCLK_SEL);
> +		break;
> +	default:
> +		break;
>  	}
>  }
>  
> +static inline bool imx6_pcie_supports_suspend(struct imx6_pcie *imx6_pcie)
> +{
> +	return (imx6_pcie->variant == IMX7D ||
> +		imx6_pcie->variant == IMX6SX);
> +}
> +
>  static int imx6_pcie_suspend_noirq(struct device *dev)
>  {
>  	struct imx6_pcie *imx6_pcie = dev_get_drvdata(dev);
>  
> -	if (imx6_pcie->variant != IMX7D)
> +	if (!imx6_pcie_supports_suspend(imx6_pcie))
>  		return 0;
>  
>  	imx6_pcie_pm_turnoff(imx6_pcie);
>  	imx6_pcie_clk_disable(imx6_pcie);
>  	imx6_pcie_ltssm_disable(dev);
> @@ -817,11 +851,11 @@ static int imx6_pcie_resume_noirq(struct device *dev)
>  {
>  	int ret;
>  	struct imx6_pcie *imx6_pcie = dev_get_drvdata(dev);
>  	struct pcie_port *pp = &imx6_pcie->pci->pp;
>  
> -	if (imx6_pcie->variant != IMX7D)
> +	if (!imx6_pcie_supports_suspend(imx6_pcie))
>  		return 0;
>  
>  	imx6_pcie_assert_core_reset(imx6_pcie);
>  	imx6_pcie_init_phy(imx6_pcie);
>  	imx6_pcie_deassert_core_reset(imx6_pcie);
> diff --git a/include/linux/mfd/syscon/imx6q-iomuxc-gpr.h b/include/linux/mfd/syscon/imx6q-iomuxc-gpr.h
> index 6c1ad160ed87..c1b25f5e386d 100644
> --- a/include/linux/mfd/syscon/imx6q-iomuxc-gpr.h
> +++ b/include/linux/mfd/syscon/imx6q-iomuxc-gpr.h
> @@ -438,10 +438,11 @@
>  #define IMX6SX_GPR5_DISP_MUX_DCIC1_LCDIF1		(0x0 << 1)
>  #define IMX6SX_GPR5_DISP_MUX_DCIC1_LVDS			(0x1 << 1)
>  #define IMX6SX_GPR5_DISP_MUX_DCIC1_MASK			(0x1 << 1)
>  
>  #define IMX6SX_GPR12_PCIE_TEST_POWERDOWN		BIT(30)
> +#define IMX6SX_GPR12_PCIE_PM_TURN_OFF			BIT(16)
>  #define IMX6SX_GPR12_PCIE_RX_EQ_MASK			(0x7 << 0)
>  #define IMX6SX_GPR12_PCIE_RX_EQ_2			(0x2 << 0)
>  
>  /* For imx6ul iomux gpr register field define */
>  #define IMX6UL_GPR1_ENET1_CLK_DIR		(0x1 << 17)
> -- 
> 2.17.1
> 
