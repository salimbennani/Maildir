Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 20 Nov 2018 00:36:00 -0000
Received: from icoremail.net (unknown [209.85.215.182])
	by mail-app4 (Coremail) with SMTP id cS_KCgDnXwM4NfNbjM7aAQ--.36644S3;
	Tue, 20 Nov 2018 06:12:08 +0800 (CST)
Received: from mail-pg1-f182.google.com (unknown [209.85.215.182])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwDnz0s0NfNbVWlaAA--.4453S3;
	Tue, 20 Nov 2018 06:12:04 +0800 (CST)
Received: by mail-pg1-f182.google.com with SMTP id s198so1271879pgs.2
        for <xuliker@zju.edu.cn>; Mon, 19 Nov 2018 14:12:04 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:date:from:to:cc
         :subject:in-reply-to:message-id:references:user-agent:mime-version
         :sender:precedence:list-id;
        bh=x18zujgfCKPt3T5ACkYo8+FKF7H3NMDCTuUkJ/syaNs=;
        b=mep0sYR/1EtDOFqtUqgpMrU28CzuqCdWp9p0T889b9cDanMzSioUJQrfRoHL1gI+4u
         itLH1CP6V7dVc+h4cqDYuqS1fGWQJz6sTnjN42hHZO1sw/eZIiZpS2zT3evLXvfTaHVi
         n/xcavL2QhZ2ONN3XV3vxIb1d4jdrSlauTx8TNmIkoNF7ZxrKBAvfjdNavTyyASVqdyv
         tb4nw39KYIob4ZYJ/XfgNFy+5k5T1yvyLjKmkxV8/j/phMQnZ/pQl2BBsIyHWlZM4o0b
         6Vm4MTvd9eHzyFjHku8O11I/hyyRB+9H1gQ29smTOrKFdQtIqL2R+3t+7/1xuEagpLNg
         7QEQ==
X-Gm-Message-State: AGRZ1gKRudWj2FI5UpoWCLVoQN3vW2LLzCT1VOtj+o+9gm5ihIrOjXhS
	Fl0vB/7uijyEOJVjYU9m5xsGzW8D29432e+uTfpwaVk8d5n8evA=
X-Received: by 2002:a62:6085:: with SMTP id u127-v6mr23029962pfb.147.1542665524490;
        Mon, 19 Nov 2018 14:12:04 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp3252322pju;
        Mon, 19 Nov 2018 14:12:03 -0800 (PST)
X-Google-Smtp-Source: AJdET5fbH3ASS/wFqGQWpKIT7puHgCE2JY1ZgyhXEIC9QoetltpVfo911lpwjMrW6SPHzgEVOh+c
X-Received: by 2002:aa7:814f:: with SMTP id d15-v6mr25185690pfn.78.1542665523788;
        Mon, 19 Nov 2018 14:12:03 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542665523; cv=none;
        d=google.com; s=arc-20160816;
        b=jdWGjMOlH8mdAhiJPl32fg94Surlfa1W4wN6QH/VSNELS+oBSZzQMAaAo3iJjTlbb+
         g4BDhMfNQwcvN2P8g2l38V9mX/nh6XhH/ks1hxRwypAdQjxKQp4BzOAIedo+FuIa5a3z
         U39xJ613pUOhNaDdKvprOV0KMcSCTMmWaQnZGMWMwDSOe3D8DmAaBffEA+v3IWs83UZL
         /28AYa/EPo1eJ0UrhQYqVUMsCFXUNC4zNppIKjtMLwPTX/3M9INxiNM8lfe/rklpbWWT
         +5I4toR6Ex6H6J8QB21xF7W03GJLdo5F8+tG5XDnbxXvy7Nz6KpZTV7UtN96xlzNbrvi
         7VAg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:mime-version:user-agent:references
         :message-id:in-reply-to:subject:cc:to:from:date:dkim-signature;
        bh=x18zujgfCKPt3T5ACkYo8+FKF7H3NMDCTuUkJ/syaNs=;
        b=LAxZpD18+tsJrCKOBWgGQ4Lzxf4sUNje8zvet3JIlHyLD3AAozjBVpy+SBS8B/P3LI
         uXl6R8azXw2bp8reeXFZQKEnlF3c/LjXOBsdcy+G4iEFMYi0nR12O1tBzq2SjSOfY1y7
         TkvNOodU65Sp0mDtHx2zSqnxQ2Zrd9yPDpHaruu88dszkfeanQnWBgwaS9G9eQEjsV9f
         VcU876OnakkBvNc0wqfUAh/F4sRC7UiYm26Mi1tfClZ+Oj3xV10TaW4heQwdkHJOtZQZ
         y5kz8C4l2FAmGFYfV5m16rSqymu0ai6taostoenoRvmu54TPVOPx9SbGTRXwQIAn1w/S
         WPHQ==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@google.com header.s=20161025 header.b=VcNgZvq7;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=REJECT sp=REJECT dis=NONE) header.from=google.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id 207si1495934pfz.249.2018.11.19.14.11.49;
        Mon, 19 Nov 2018 14:12:03 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1731488AbeKTIhW (ORCPT <rfc822;nullbytes00@gmail.com>
        + 99 others); Tue, 20 Nov 2018 03:37:22 -0500
Received: from mail-pl1-f193.google.com ([209.85.214.193]:33886 "EHLO
        mail-pl1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1731313AbeKTIhV (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 20 Nov 2018 03:37:21 -0500
Received: by mail-pl1-f193.google.com with SMTP id f12-v6so15244454plo.1
        for <linux-kernel@vger.kernel.org>; Mon, 19 Nov 2018 14:11:37 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=date:from:to:cc:subject:in-reply-to:message-id:references
         :user-agent:mime-version;
        bh=x18zujgfCKPt3T5ACkYo8+FKF7H3NMDCTuUkJ/syaNs=;
        b=VcNgZvq7pV7RWUGxMq60xdZzFKYXEGZh5GSnzr5KOZbm57SP3DWhNJ8le8PAVyvIXp
         yHY4bkcTj4dVPZZgUWCpVTD8L1olJ5cuQiY7Mtgh+AnGvSmUtdTc77U2fB0AaUdRRCq1
         b8kll4LiQg7uZfSxlMv/fhb2O4aShkkk1qisgia5ikz+yvjy3JmfaoglIN9FRbLvNX5x
         3uVVvbcQhsf2Iu8Id6QGnJknSRjXaYLICROUwFZ9NP5yqCB3ppKX4Oqq75gHCPOj6iXi
         L3Kqks0bXe6fUo/cbagRSq8O5Xg3Y44ezoHudYBtw+HQGwgWqCHhBG+xokCTq8jnul8B
         s6aA==
X-Received: by 2002:a17:902:43e4:: with SMTP id j91mr3182911pld.147.1542665496347;
        Mon, 19 Nov 2018 14:11:36 -0800 (PST)
Received: from [100.112.89.103] ([104.133.8.103])
        by smtp.gmail.com with ESMTPSA id y11-v6sm6444597pfk.70.2018.11.19.14.11.34
        (version=TLS1 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
        Mon, 19 Nov 2018 14:11:35 -0800 (PST)
Date: Mon, 19 Nov 2018 14:11:27 -0800 (PST)
From: Hugh Dickins <hughd@google.com>
X-X-Sender: hugh@eggly.anvils
To: Yu Zhao <yuzhao@google.com>
cc: Hugh Dickins <hughd@google.com>,
        Andrew Morton <akpm@linux-foundation.org>, linux-mm@kvack.org,
        linux-kernel@vger.kernel.org
Subject: Re: [PATCH v2] mm: fix swap offset when replacing shmem page
In-Reply-To: <20181119010924.177177-1-yuzhao@google.com>
Message-ID: <alpine.LSU.2.11.1811191343280.17359@eggly.anvils>
References: <20181119004719.156411-1-yuzhao@google.com> <20181119010924.177177-1-yuzhao@google.com>
User-Agent: Alpine 2.11 (LSU 23 2013-08-11)
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwDnz0s0NfNbVWlaAA--.4453S3
Authentication-Results: mail-app4; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxGryrGFyxWFyUArW5Aw13Arb_yoW5ArWUpF
	W7GFn8Kr4rAr9ayF4xXa92yr1fZwn3KayrCFy5Kw15ZwnxKw10kF4IkryqvFy7ZrZ7u3yr
	tF4UtF97uF4qyaDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUBEb7Iv0xC_Zr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1j
	6r18McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IY64vIr4
	1l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkIecxE
	wVCI4VW3MxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVW5JVW7JwCYIxAIcV
	C0I7IYx2IY6xkF7I0E14v26r4j6F4UMxvI42IY6I8E87Iv67AKxVW0oVCq3wCYIxAIcVC2
	z280aVCY1x0267AKxVW0oVCq3wCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26cxK6c8Ij2
	8IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v26r1j6r18
	MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_JF0_Jw1lIxkGc2Ij64vIr4
	1lIxAIcVCF04k26cxKx2IYs7xG6r1j6r1xYxBIdaVFxhVjvjDU0xZFpf9x07bYeHDUUUUU
	=

On Sun, 18 Nov 2018, Yu Zhao wrote:

> We used to have a single swap address space with swp_entry_t.val
> as its radix tree index. This is not the case anymore. Now Each
> swp_type() has its own address space and should use swp_offset()
> as radix tree index.
> 
> Signed-off-by: Yu Zhao <yuzhao@google.com>

This fix is a great find, thank you! But completely mis-described!
And could you do a smaller patch, keeping swap_index, that can go to
stable without getting into trouble with the recent xarrifications?

Fixes: bde05d1ccd51 ("shmem: replace page if mapping excludes its zone")
Cc: stable@vger.kernel.org # 3.5+

Seems shmem_replace_page() has been wrong since the day I wrote it:
good enough to work on swap "type" 0, which is all most people ever use
(especially those few who need shmem_replace_page() at all), but broken
once there are any non-0 swp_type bits set in the higher order bits.

> ---
>  mm/shmem.c | 11 +++++++----
>  1 file changed, 7 insertions(+), 4 deletions(-)
> 
> diff --git a/mm/shmem.c b/mm/shmem.c
> index d44991ea5ed4..685faa3e0191 100644
> --- a/mm/shmem.c
> +++ b/mm/shmem.c
> @@ -1509,11 +1509,13 @@ static int shmem_replace_page(struct page **pagep, gfp_t gfp,
>  {
>  	struct page *oldpage, *newpage;
>  	struct address_space *swap_mapping;
> -	pgoff_t swap_index;
> +	swp_entry_t entry;

Please keep swap_index as well as adding entry.

>  	int error;
>  
> +	VM_BUG_ON(!PageSwapCache(*pagep));
> +

I'd prefer you to drop that, it has no bearing on this patch;
we used to have it, along with lots of other VM_BUG_ONs in here,
but they outlived their usefulness, and don't need reintroducing -
they didn't help at all to prevent the actual bug you've found.

>  	oldpage = *pagep;
> -	swap_index = page_private(oldpage);
> +	entry.val = page_private(oldpage);

entry.val = page_private(oldpage);
swap_index = swp_offset(entry);

>  	swap_mapping = page_mapping(oldpage);
>  
>  	/*
> @@ -1532,7 +1534,7 @@ static int shmem_replace_page(struct page **pagep, gfp_t gfp,
>  	__SetPageLocked(newpage);
>  	__SetPageSwapBacked(newpage);
>  	SetPageUptodate(newpage);
> -	set_page_private(newpage, swap_index);
> +	set_page_private(newpage, entry.val);

Yes.

>  	SetPageSwapCache(newpage);
>  
>  	/*
> @@ -1540,7 +1542,8 @@ static int shmem_replace_page(struct page **pagep, gfp_t gfp,
>  	 * a nice clean interface for us to replace oldpage by newpage there.
>  	 */
>  	xa_lock_irq(&swap_mapping->i_pages);
> -	error = shmem_replace_entry(swap_mapping, swap_index, oldpage, newpage);
> +	error = shmem_replace_entry(swap_mapping, swp_offset(entry),
> +				    oldpage, newpage);

I'd prefer to omit that hunk, to avoid the xa_lock_irq() in the context;
the patch is just as good if we keep the swap_index variable.

>  	if (!error) {
>  		__inc_node_page_state(newpage, NR_FILE_PAGES);
>  		__dec_node_page_state(oldpage, NR_FILE_PAGES);
> -- 
> 2.19.1.1215.g8438c0b245-goog

Thanks,
Hugh
