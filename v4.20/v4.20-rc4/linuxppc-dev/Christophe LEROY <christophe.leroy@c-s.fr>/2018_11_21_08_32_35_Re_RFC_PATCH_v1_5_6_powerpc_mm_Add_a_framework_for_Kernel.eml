Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 21 Nov 2018 10:59:55 -0000
Received: from icoremail.net (unknown [209.85.214.171])
	by mail-app2 (Coremail) with SMTP id by_KCgA3cI4_GPVbVWLGAQ--.61172S3;
	Wed, 21 Nov 2018 16:33:04 +0800 (CST)
Received: from mail-pl1-f171.google.com (unknown [209.85.214.171])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwB3WkY+GPVb6FdiAA--.9793S3;
	Wed, 21 Nov 2018 16:33:02 +0800 (CST)
Received: by mail-pl1-f171.google.com with SMTP id y6-v6so4461952plt.3
        for <xuliker@zju.edu.cn>; Wed, 21 Nov 2018 00:33:02 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :subject:to:cc:references:from:message-id:date:user-agent
         :mime-version:in-reply-to:content-language:content-transfer-encoding
         :sender:precedence:list-id;
        bh=HH4yai+VafObONcYKMlzJ6CP1NbqsoaD06iocU5aDCI=;
        b=NzWOi8nBBCImQJcF5t15S84MoWmdyxXJg04x6Fkv0xWUfUZw+CNj9RRgqevxfJ25+T
         E0b4U3DqlygzJSsr5BLWS48GdnQ3AnJrIO/I65DvqpM3+bGV360Hk8zrrP2/5+Awv16O
         xxNUDcVcnGjJZXyOAMottUSJuiJT8/of77/gFp81Twes9ipJmrq1jcj9K4P/vClsNqT2
         HTGA6pE9cwfpxRR+dpCgDjPQjs2lRztv8Pa+bKyEFNBB3aa4r/P5PeAisHH008msTqmR
         9q0cwVMsRM1WMceiw86oUaQGNcvtgVOhHeBX82L8KaupgozJDoeiuvy6Q0GdcyqgbT56
         Mtsw==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AA+aEWZcJhWMRN1HLRpojedfY9SBC34mBXfNN8nsiOZPLWsR6Lrgt63n
	AU0JiBlrtEJSGOzVNPdFzvi8p8EBME3vyGJFOUx09b4JLXYYAEo=
X-Received: by 2002:a63:9402:: with SMTP id m2mr4958289pge.93.1542789181998;
        Wed, 21 Nov 2018 00:33:01 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp1661253pju;
        Wed, 21 Nov 2018 00:33:00 -0800 (PST)
X-Google-Smtp-Source: AFSGD/UzU7FbJQYMDYHzte6OH/T+WmglGMwhzTk03BG3nQCkbmxfXnUagQDTew6X6KQJRML3OTCP
X-Received: by 2002:a17:902:8bca:: with SMTP id r10-v6mr5679765plo.199.1542789180307;
        Wed, 21 Nov 2018 00:33:00 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542789180; cv=none;
        d=google.com; s=arc-20160816;
        b=QcJjqNeJwD2tcb4h3UOhuER0G6kLAP0cC1mg9oW2tw6s8wClYNYXOFCrgCcpIYnG+a
         e4ftrMuBu73EOc1BYtzAzRZFLAh3Hfvc8okjixIXgkl4Md7/7KTE21JKYOsSAbl9edRP
         6BOfHWHYZK8+eyC5l9nhWCyenKDuDtCYNMsmRDck7ETh57JEkjXm1KL70CCJ75b0mygn
         /6YgBmlREyhLUYhn9gKcn89ZhEl/9UmiNy/w+2IvYM2R+ZpThh9XGRuE6KbdU+2Dhkpl
         A0AzZ2ebaYTFTSy2jrL+Mx2SOPNroTfFUrBPIeuUmy2odGJ6cYr0uFjhfT0KO/o18FdI
         VsHw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding
         :content-language:in-reply-to:mime-version:user-agent:date
         :message-id:from:references:cc:to:subject;
        bh=HH4yai+VafObONcYKMlzJ6CP1NbqsoaD06iocU5aDCI=;
        b=izUMg9jd9aM3DHAFTNoKM3k0KdZ1I1OA4FTgwqFiY3vnS2SXTgK9vzalXFJHc7k61a
         DOvkAQ2rzsFhDogHRGGJ4kPcnJiD8lBDA0FUINewctUb2YEiJEi3dXM61DqR+qYPlXr8
         33reFpraytWPMzGvzuIxw2PATVfHvCOJ/TW9NC6t3l53OaQu0Fo3joLqx1rKMjDsjdKk
         atpQDy0D1JyhlBpP/bVE9tnqn0sFswEj81PB8mKKdU3MGulxnRCmBL79YtOYHxmZrb7v
         oxwH3giZGqldJE/sKH790MZ836nbya06z/IsVpbxoIZGOldnIGoWJ74wNNJEQFv2Q3C1
         j86A==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id g71si12720513pgc.419.2018.11.21.00.32.45;
        Wed, 21 Nov 2018 00:33:00 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728798AbeKUTGO (ORCPT <rfc822;nullbytes00@gmail.com>
        + 99 others); Wed, 21 Nov 2018 14:06:14 -0500
Received: from pegase1.c-s.fr ([93.17.236.30]:2208 "EHLO pegase1.c-s.fr"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1728370AbeKUTGO (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 21 Nov 2018 14:06:14 -0500
Received: from localhost (mailhub1-int [192.168.12.234])
        by localhost (Postfix) with ESMTP id 430G676V56z9txvZ;
        Wed, 21 Nov 2018 09:32:31 +0100 (CET)
X-Virus-Scanned: Debian amavisd-new at c-s.fr
Received: from pegase1.c-s.fr ([192.168.12.234])
        by localhost (pegase1.c-s.fr [192.168.12.234]) (amavisd-new, port 10024)
        with ESMTP id IAHMGtRtbQbW; Wed, 21 Nov 2018 09:32:31 +0100 (CET)
Received: from messagerie.si.c-s.fr (messagerie.si.c-s.fr [192.168.25.192])
        by pegase1.c-s.fr (Postfix) with ESMTP id 430G675zNyz9txvW;
        Wed, 21 Nov 2018 09:32:31 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
        by messagerie.si.c-s.fr (Postfix) with ESMTP id C54488B7FF;
        Wed, 21 Nov 2018 09:32:35 +0100 (CET)
X-Virus-Scanned: amavisd-new at c-s.fr
Received: from messagerie.si.c-s.fr ([127.0.0.1])
        by localhost (messagerie.si.c-s.fr [127.0.0.1]) (amavisd-new, port 10023)
        with ESMTP id QfZI9f9-l_5r; Wed, 21 Nov 2018 09:32:35 +0100 (CET)
Received: from PO15451 (po15451.idsi0.si.c-s.fr [172.25.231.2])
        by messagerie.si.c-s.fr (Postfix) with ESMTP id 7573E8B75F;
        Wed, 21 Nov 2018 09:32:35 +0100 (CET)
Subject: Re: [RFC PATCH v1 5/6] powerpc/mm: Add a framework for Kernel
 Userspace Access Protection
To: Russell Currey <ruscur@russell.cc>,
        Benjamin Herrenschmidt <benh@kernel.crashing.org>,
        Paul Mackerras <paulus@samba.org>,
        Michael Ellerman <mpe@ellerman.id.au>
Cc: linux-kernel@vger.kernel.org, linuxppc-dev@lists.ozlabs.org
References: <ab8fcb458e1a6ad86382767b3ce7f7cc0d5b7121.1541568127.git.christophe.leroy@c-s.fr>
 <a8df3cd2be841ff5dd7b8d3fd357f40f9935f5a4.1541568128.git.christophe.leroy@c-s.fr>
 <d5aa6ff391c0438371cae507e0b82a96eec4e979.camel@russell.cc>
From: Christophe LEROY <christophe.leroy@c-s.fr>
Message-ID: <f579dd05-975c-5e3f-1dd2-0702f1cf3fea@c-s.fr>
Date: Wed, 21 Nov 2018 09:32:35 +0100
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:60.0) Gecko/20100101
 Thunderbird/60.3.1
MIME-Version: 1.0
In-Reply-To: <d5aa6ff391c0438371cae507e0b82a96eec4e979.camel@russell.cc>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: fr
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwB3WkY+GPVb6FdiAA--.9793S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxAFWfZF1kCry8GFW5uw17ZFb_yoW5CF4rpF
	Wagrs7Gr1DtrykZ3s7A3WxZ3WF9an3Ja13JFn5K3y8uwn8WFn3Kr4xKF1Y9FWkJr4ftanF
	va18ZryrAa90v3DanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUmSb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Gr0_Xr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26F4j6r4UJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IY64vIr4
	1l7I0Y6sxI4wCYjI0SjxkI62AI1cAE67vIY487MxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik2
	6cxK6xAEc7vF6xCjj44lc2xSY4AK6IIF6r43MxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7
	IYx2IY67AKxVWUJVWUCwCYIxAIcVC0I7IYx2IY6xkF7I0E14v26r1j6r4UMxvI42IY6I8E
	87Iv67AKxVWxJr0_GcWlcIIF0xvEx4A2jsIEc7CjxVAFwI0_Cr1j6rxdMxAIw28IcxkI7V
	AKI48JMxAIw28IcVAKzI0EY4vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j
	6r4UMI8I3I0E5I8CrVAFwI0_Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7
	AF67AKxVWUAVWUtwCIc40Y0x0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Zr0_Wr1UYxBI
	daVFxhVjvjDU0xZFpf9x07bQ6wtUUUUU=



Le 21/11/2018 à 03:26, Russell Currey a écrit :
> On Wed, 2018-11-07 at 16:56 +0000, Christophe Leroy wrote:
>> This patch implements a framework for Kernel Userspace Access
>> Protection.
>>
>> Then subarches will have to possibility to provide their own
>> implementation
>> by providing setup_kuap(), and lock/unlock_user_rd/wr_access
>>
>> We separate read and write accesses because some subarches like
>> book3s32 might only support write access protection.
>>
>> Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
> 
> Separating read and writes does have a performance impact, I'm doing
> some benchmarking to find out exactly how much - but at least for radix
> it means we have to do a RMW instead of just a write.  It does add some
> amount of security, though.
> 
> The other issue I have is that you're just locking everything here
> (like I was), and not doing anything different for just reads or
> writes.  In theory, wouldn't someone assume that they could (for
> example) unlock reads, lock writes, then attempt to read?  At which
> point the read would fail, because the lock actually locks both.
> 
> I would think we either need to bundle read/write locking/unlocking
> together, or only implement this on platforms that can do one at a
> time, unless there's a cleaner way to handle this.  Glancing at the
> values you use for 8xx, this doesn't seem possible there, and it's a
> definite performance hit for radix.
> 
> At the same time, as you say, it would suck for book3s32 that can only
> do writes, but maybe just doing both at the same time and if
> implemented for that platform it could just have a warning that it only
> applies to writes on init?

Well, I see your points. My idea was not to separate read and write
on platform that can lock both. I think it is no problem to also 
unlocking writes when we are doing a read, so on platforms that can do 
both I think both should do the same..

The idea was to avoid spending time unlocking writes for doing a read on 
platforms on which reads are not locked. And for platforms able to 
independently unlock/lock reads and writes, if only unlocking reads can 
improve performance it can be interesting as well.

For book3s/32, locking/unlocking will be done through Kp/Ks bits in 
segment registers, the function won't be trivial as it may involve more 
than one segment at a time. So I just wanted to avoid spending time 
doing that for reads as reads won't be protected. And may also be the 
case on older book3s/64, may not it ?
On Book3s/32, the page protection bits are as follows:

   Key	0	1
PP
00	RW	NA
01	RW	RO
10	RW	RW
11	RO	RO

So the idea is to encode user RW with PP01 (instead of PP10 today) and 
user RO with PP11 (as done today), giving Key0 to user and Key1 to 
kernel (today both user and kernel have Key1). Then when kernel needs to 
write, we change Ks to Key0 in segment register for the involved segments.

I'm not sure there is any risk that someone nests unlocks/locks for 
reads and unlocks/locks for writes, because the unlocks/locks are done 
in very limited places.

Christophe


> 
> Curious for people's thoughts on this.
> 
> - Russell
> 
