Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 21 Nov 2018 00:39:32 -0000
Received: from icoremail.net (unknown [209.85.215.178])
	by mail-app4 (Coremail) with SMTP id cS_KCgCn3zwBDfRbMfvfAQ--.39593S3;
	Tue, 20 Nov 2018 21:32:50 +0800 (CST)
Received: from mail-pg1-f178.google.com (unknown [209.85.215.178])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBnTkrLC_RbKFdeAA--.318S3;
	Tue, 20 Nov 2018 21:27:39 +0800 (CST)
Received: by mail-pg1-f178.google.com with SMTP id 70so906104pgh.8
        for <xuliker@zju.edu.cn>; Tue, 20 Nov 2018 05:27:39 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:organization:user-agent:sender
         :precedence:list-id;
        bh=/RskQWXyRMFaOZl+w674i9LCXUYGld/SeG+fENMZv8Y=;
        b=Pn0KwrJL7jyN0vTAquHij0rx5TxhLa6OWtdfzJqxOC3tczXj3MVj/w60w200Vnqm9d
         PNH5OcIeBy7aFqoEeyEsPMkyXmll7fJq93dDrk0hjqF1mzZQdvzKUzdpNAdyg5Vm0Jkb
         OUUx3RRNJvxhteChIpLd24XOM1bZmhYaEKjmM7yZPON5OxLzIoVosrWroHh/3zM9P2ky
         aWGzTAyYjF6WymqTaVPKf4yeL1XITRTNzIE6XVcx1NrjVBbMFXBXLGEW8jPSOrVQD/6E
         lO8qpMgpKJwaTUk2AVEOuFzvnI5JtiEF+NtBCPrJ+yknkEs+VEcswkyTwgeBBDb2Vu58
         PRWw==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=intel.com
X-Gm-Message-State: AA+aEWbmUveaeNW7PyGTRiXVWvzKGmbOR4E2F3nFc+7vNycmhmAb6zgC
	63XEyk2m+MYdQPznYrkcGlTPubl3HV3ePOfR/7MQYeXdcHx5fvU=
X-Received: by 2002:a63:f615:: with SMTP id m21mr1946281pgh.428.1542720458824;
        Tue, 20 Nov 2018 05:27:38 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp598978pju;
        Tue, 20 Nov 2018 05:27:37 -0800 (PST)
X-Google-Smtp-Source: AJdET5dlWAug91og45gWITtW6X7EOSuIrrTOfdS9FAAs8rquaHCV9v7gpBd5uq+jl5LHELsiAT2g
X-Received: by 2002:a62:7dcb:: with SMTP id y194-v6mr2096207pfc.215.1542720457641;
        Tue, 20 Nov 2018 05:27:37 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542720457; cv=none;
        d=google.com; s=arc-20160816;
        b=fXqOUoyTAd5j9+YRQ66L/d4FjzWKuxkOGhLi/oCZtZvZlrCWYpQbVUgnOIjN7Tv5R0
         1UDjHifnDEkU1B0wuw4G1mlH4bVEiSUBMUweTGkx1AhNbmJnE+nmTmWeTq5wdtMfWpoN
         6m7GNBJQq9B5IsZbcc0hWTxVv2ZHMBLq3BasP7W3VHXOpXVk9Ti6e5Jt0DgTe1xbh0Vc
         Wg7oCmrOoqTeYMuztFC9xzhDe6v4eNBU9G5q5gjvVP275pM0xb7Wk/iq5dNDQC0gVu4d
         5jXG1mh26sc1mIEPPoSm7jq/i0ZczDtcW4ytaB0NRPEbX/ZA1KZfhWa+D9kbML5CiN3T
         ndNA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:organization:in-reply-to
         :content-disposition:mime-version:references:message-id:subject:cc
         :to:from:date;
        bh=/RskQWXyRMFaOZl+w674i9LCXUYGld/SeG+fENMZv8Y=;
        b=HFrm7tn9tRLs0UmWN8St/4d4ACM6tnNJ6V6s968Jki4fluQFeHo4KRccLpcFo9VuG+
         PrIlSwzBTY+FxHhs9hsgJLzojZQLyOlpoCBgtNC7jFyST/Qk+wf9HiGx1jA6Ctisesv7
         8LDj/Gai3IAAjBI0/vP21LVItqcysa5OcuqlVHjXdXazHV8wvSIDD4V51Cfd0TBBYqVP
         mh27TWzQ7jgnSyUxl94jPbP1+50vWOyKSa1vsw7xro4DbuCyzDx9no8mj1ph0onotf8e
         G0H5oCxfnaHVKZZ5GMYiSFvQqkFSYPvw56F5MDyymQtvHP7hoKyVYQbdSgQ7zFAfHvra
         g/gg==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=intel.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id h36si41622394pgm.200.2018.11.20.05.27.23;
        Tue, 20 Nov 2018 05:27:37 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726350AbeKTXhO (ORCPT <rfc822;yv9200@gmail.com> + 99 others);
        Tue, 20 Nov 2018 18:37:14 -0500
Received: from mga09.intel.com ([134.134.136.24]:37353 "EHLO mga09.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725902AbeKTXhO (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 20 Nov 2018 18:37:14 -0500
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Received: from orsmga001.jf.intel.com ([10.7.209.18])
  by orsmga102.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 20 Nov 2018 05:08:10 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,257,1539673200"; 
   d="scan'208";a="109809152"
Received: from jsakkine-mobl1.tm.intel.com (HELO localhost) ([10.237.50.177])
  by orsmga001.jf.intel.com with ESMTP; 20 Nov 2018 05:08:05 -0800
Date: Tue, 20 Nov 2018 15:08:05 +0200
From: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
To: "Winkler, Tomas" <tomas.winkler@intel.com>
Cc: "linux-integrity@vger.kernel.org" <linux-integrity@vger.kernel.org>,
        "linux-security-module@vger.kernel.org" 
        <linux-security-module@vger.kernel.org>,
        James Bottomley <James.Bottomley@HansenPartnership.com>,
        "Struk, Tadeusz" <tadeusz.struk@intel.com>,
        Stefan Berger <stefanb@linux.vnet.ibm.com>,
        Nayna Jain <nayna@linux.ibm.com>,
        Peter Huewe <peterhuewe@gmx.de>,
        Jason Gunthorpe <jgg@ziepe.ca>, Arnd Bergmann <arnd@arndb.de>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Nicolas Ferre <nicolas.ferre@microchip.com>,
        Alexandre Belloni <alexandre.belloni@bootlin.com>,
        Ludovic Desroches <ludovic.desroches@microchip.com>,
        open list <linux-kernel@vger.kernel.org>,
        "moderated list:ARM/Microchip (AT91) SoC support" 
        <linux-arm-kernel@lists.infradead.org>
Subject: Re: [PATCH v9 05/17] tpm: declare struct tpm_header
Message-ID: <20181120130805.GD8813@linux.intel.com>
References: <20181118124753.18613-1-jarkko.sakkinen@linux.intel.com>
 <20181118124753.18613-6-jarkko.sakkinen@linux.intel.com>
 <5B8DA87D05A7694D9FA63FD143655C1B9DA235BB@hasmsx108.ger.corp.intel.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <5B8DA87D05A7694D9FA63FD143655C1B9DA235BB@hasmsx108.ger.corp.intel.com>
Organization: Intel Finland Oy - BIC 0357606-4 - Westendinkatu 7, 02160 Espoo
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBnTkrLC_RbKFdeAA--.318S3
Authentication-Results: mail-app4; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3Kw45GFy7ZFWfJF4UJw4kXrb_yoWDCr4rpF
	W5Ga93uws8JF4YgrnFyr4DCFWaqr48ta4UGrW8JasIvFn09a4rGFy8GFW5uF13tr1UGFn3
	Xr40yr15uF109r7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUU9Kb7Iv0xC_tr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r10
	6r15McIj6I8E87Iv67AKxVWxJVW8Jr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcVAKI4
	8JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkIecxEwVCI4VW5GwCY0x0Ix7I2Y4AK
	64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_Ar0_tr1lcIIF0xvE2Ix0cI8IcVCY1x0267AKxV
	W8JVWxJwCYIxAIcVC2z280aVAFwI0_GcCE3s1lcIIF0xvEx4A2jsIEc7CjxVAFwI0_GcCE
	3s1l42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwVAq07x20xyl4x8a6x804xWl4I8I3I
	0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG67AKxVWUJVWUGwC20s026x8GjcxK67AKxVWU
	GVWUWwC2zVAF1VAY17CE14v26r4a6rW5MIIYrxkI7VAKI48JMIIF0xvE42xK8VAvwI8IcI
	k0rVWUCVW8JbIYCTnIWIevJa73UjIFyTuYvjxUS4rWUUUUU

On Mon, Nov 19, 2018 at 09:33:31PM +0000, Winkler, Tomas wrote:
> 
> > 
> > Decleare struct tpm_header that replaces struct tpm_input_header and
> Typo 

Thanks, will fix for the next version.

> > struct tpm_output_header.
> > 
> > Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
> > Reviewed-by: Stefan Berger <stefanb@linux.ibm.com>
> > ---
> >  drivers/char/tpm/tpm-interface.c  |  9 ++++-----
> >  drivers/char/tpm/tpm.h            | 27 ++++++++++++---------------
> >  drivers/char/tpm/tpm2-cmd.c       |  4 ++--
> >  drivers/char/tpm/tpm2-space.c     |  6 +++---
> >  drivers/char/tpm/tpm_i2c_atmel.c  |  5 ++---
> > drivers/char/tpm/tpm_vtpm_proxy.c |  8 ++++----
> >  drivers/char/tpm/xen-tpmfront.c   |  2 +-
> >  7 files changed, 28 insertions(+), 33 deletions(-)
> > 
> > diff --git a/drivers/char/tpm/tpm-interface.c b/drivers/char/tpm/tpm-
> > interface.c
> > index 7ac6ada8428c..cb0d44c158ae 100644
> > --- a/drivers/char/tpm/tpm-interface.c
> > +++ b/drivers/char/tpm/tpm-interface.c
> > @@ -67,7 +67,7 @@ static int tpm_validate_command(struct tpm_chip
> > *chip,
> >  				 const u8 *cmd,
> >  				 size_t len)
> >  {
> > -	const struct tpm_input_header *header = (const void *)cmd;
> > +	const struct tpm_header *header = (const void *)cmd;
> 
> 
> Sometimes it is casted (void *), sometimes (struct tpm_header *)
> Better to use one convention 

I would prefer (const void *) because it is shorter form, and no
need to duplicate the type name two times, that way also more
readable. Anyway, agreed that we do have inconsistency with these.

> 
> >  	int i;
> >  	u32 cc;
> >  	u32 attrs;
> > @@ -166,7 +166,7 @@ static ssize_t tpm_try_transmit(struct tpm_chip
> > *chip,
> >  				u8 *buf, size_t bufsiz,
> >  				unsigned int flags)
> >  {
> > -	struct tpm_output_header *header = (void *)buf;
> > +	struct tpm_header *header = (void *)buf;
> >  	int rc;
> >  	ssize_t len = 0;
> >  	u32 count, ordinal;
> > @@ -316,7 +316,7 @@ static ssize_t tpm_try_transmit(struct tpm_chip
> > *chip,  ssize_t tpm_transmit(struct tpm_chip *chip, struct tpm_space *space,
> >  		     u8 *buf, size_t bufsiz, unsigned int flags)  {
> > -	struct tpm_output_header *header = (struct tpm_output_header
> > *)buf;
> > +	struct tpm_header *header = (struct tpm_header *)buf;
> >  	/* space for header and handles */
> >  	u8 save[TPM_HEADER_SIZE + 3*sizeof(u32)];
> >  	unsigned int delay_msec = TPM2_DURATION_SHORT; @@ -381,8
> > +381,7 @@ ssize_t tpm_transmit_cmd(struct tpm_chip *chip, struct
> > tpm_space *space,
> >  			 struct tpm_buf *buf, size_t min_rsp_body_length,
> >  			 unsigned int flags, const char *desc)  {
> > -	const struct tpm_output_header *header =
> > -		(struct tpm_output_header *)buf->data;
> > +	const struct tpm_header *header = (struct tpm_header *)buf->data;
> >  	int err;
> >  	ssize_t len;
> > 
> > diff --git a/drivers/char/tpm/tpm.h b/drivers/char/tpm/tpm.h index
> > 49bca4d1e786..86fa8ac0ae20 100644
> > --- a/drivers/char/tpm/tpm.h
> > +++ b/drivers/char/tpm/tpm.h
> > @@ -273,16 +273,13 @@ struct tpm_chip {
> > 
> >  #define to_tpm_chip(d) container_of(d, struct tpm_chip, dev)
> > 
> > -struct tpm_input_header {
> > -	__be16	tag;
> > -	__be32	length;
> > -	__be32	ordinal;
> > -} __packed;
> > -
> > -struct tpm_output_header {
> > -	__be16	tag;
> > -	__be32	length;
> > -	__be32	return_code;
> > +struct tpm_header {
> Does it deserve kdoc? 

Could be done if this is needed at some point in include/linux/tpm.h.
Do not see it right now as high priority.

> > +	__be16 tag;
> > +	__be32 length;
> > +	union {
> > +		__be32 ordinal;
> > +		__be32 return_code;
> > +	};
> >  } __packed;
> > 
> >  #define TPM_TAG_RQU_COMMAND 193
> > @@ -401,8 +398,8 @@ struct tpm_buf {
> > 
> >  static inline void tpm_buf_reset(struct tpm_buf *buf, u16 tag, u32 ordinal)  {
> > -	struct tpm_input_header *head;
> > -	head = (struct tpm_input_header *)buf->data;
> > +	struct tpm_header *head = (struct tpm_header *)buf->data;
> > +
> >  	head->tag = cpu_to_be16(tag);
> >  	head->length = cpu_to_be32(sizeof(*head));
> >  	head->ordinal = cpu_to_be32(ordinal);
> > @@ -428,14 +425,14 @@ static inline void tpm_buf_destroy(struct tpm_buf
> > *buf)
> > 
> >  static inline u32 tpm_buf_length(struct tpm_buf *buf)  {
> > -	struct tpm_input_header *head = (struct tpm_input_header *) buf-
> > >data;
> No blank after ) in casting. 

And also here void casting would make sense.

> 
> > +	struct tpm_header *head = (struct tpm_header *) buf->data;
> > 
> >  	return be32_to_cpu(head->length);
> >  }
> > 
> >  static inline u16 tpm_buf_tag(struct tpm_buf *buf)  {
> > -	struct tpm_input_header *head = (struct tpm_input_header *) buf-
> > >data;
> > +	struct tpm_header *head = (struct tpm_header *) buf->data;
> > 
> >  	return be16_to_cpu(head->tag);
> >  }
> > @@ -444,7 +441,7 @@ static inline void tpm_buf_append(struct tpm_buf
> > *buf,
> >  				  const unsigned char *new_data,
> >  				  unsigned int new_len)
> >  {
> > -	struct tpm_input_header *head = (struct tpm_input_header *) buf-
> > >data;
> > +	struct tpm_header *head = (struct tpm_header *) buf->data;
> No blank after ) in casting.
> >  	u32 len = tpm_buf_length(buf);
> > 
> >  	/* Return silently if overflow has already happened. */ diff --git
> > a/drivers/char/tpm/tpm2-cmd.c b/drivers/char/tpm/tpm2-cmd.c index
> > 2bcf470c8e5d..ab03f8600f89 100644
> > --- a/drivers/char/tpm/tpm2-cmd.c
> > +++ b/drivers/char/tpm/tpm2-cmd.c
> > @@ -784,7 +784,7 @@ static int tpm2_do_selftest(struct tpm_chip *chip)
> >   */
> >  int tpm2_probe(struct tpm_chip *chip)
> >  {
> > -	struct tpm_output_header *out;
> > +	struct tpm_header *out;
> >  	struct tpm_buf buf;
> >  	int rc;
> > 
> > @@ -797,7 +797,7 @@ int tpm2_probe(struct tpm_chip *chip)
> >  	rc = tpm_transmit_cmd(chip, NULL, &buf, 0, 0, NULL);
> >  	/* We ignore TPM return codes on purpose. */
> >  	if (rc >=  0) {
> > -		out = (struct tpm_output_header *)buf.data;
> > +		out = (struct tpm_header *)buf.data;
> >  		if (be16_to_cpu(out->tag) == TPM2_ST_NO_SESSIONS)
> >  			chip->flags |= TPM_CHIP_FLAG_TPM2;
> >  	}
> > diff --git a/drivers/char/tpm/tpm2-space.c b/drivers/char/tpm/tpm2-space.c
> > index 5ecc73988f7c..862ee1ce1755 100644
> > --- a/drivers/char/tpm/tpm2-space.c
> > +++ b/drivers/char/tpm/tpm2-space.c
> > @@ -334,7 +334,7 @@ static int tpm2_map_response_header(struct
> > tpm_chip *chip, u32 cc, u8 *rsp,
> >  				    size_t len)
> >  {
> >  	struct tpm_space *space = &chip->work_space;
> > -	struct tpm_output_header *header = (void *)rsp;
> > +	struct tpm_header *header = (void *)rsp;
> >  	u32 phandle;
> >  	u32 phandle_type;
> >  	u32 vhandle;
> > @@ -394,7 +394,7 @@ static int tpm2_map_response_body(struct tpm_chip
> > *chip, u32 cc, u8 *rsp,
> >  				  size_t len)
> >  {
> >  	struct tpm_space *space = &chip->work_space;
> > -	struct tpm_output_header *header = (void *)rsp;
> > +	struct tpm_header *header = (void *)rsp;
> >  	struct tpm2_cap_handles *data;
> >  	u32 phandle;
> >  	u32 phandle_type;
> > @@ -492,7 +492,7 @@ static int tpm2_save_space(struct tpm_chip *chip)
> > int tpm2_commit_space(struct tpm_chip *chip, struct tpm_space *space,
> >  		      u32 cc, u8 *buf, size_t *bufsiz)  {
> > -	struct tpm_output_header *header = (void *)buf;
> > +	struct tpm_header *header = (void *)buf;
> >  	int rc;
> > 
> >  	if (!space)
> > diff --git a/drivers/char/tpm/tpm_i2c_atmel.c
> > b/drivers/char/tpm/tpm_i2c_atmel.c
> > index 95ce2e9ccdc6..4720b2442ffe 100644
> > --- a/drivers/char/tpm/tpm_i2c_atmel.c
> > +++ b/drivers/char/tpm/tpm_i2c_atmel.c
> > @@ -46,7 +46,7 @@ struct priv_data {
> >  	/* This is the amount we read on the first try. 25 was chosen to fit a
> >  	 * fair number of read responses in the buffer so a 2nd retry can be
> >  	 * avoided in small message cases. */
> > -	u8 buffer[sizeof(struct tpm_output_header) + 25];
> > +	u8 buffer[sizeof(struct tpm_header) + 25];
> >  };
> > 
> >  static int i2c_atmel_send(struct tpm_chip *chip, u8 *buf, size_t len) @@ -
> > 72,8 +72,7 @@ static int i2c_atmel_recv(struct tpm_chip *chip, u8 *buf,
> > size_t count)  {
> >  	struct priv_data *priv = dev_get_drvdata(&chip->dev);
> >  	struct i2c_client *client = to_i2c_client(chip->dev.parent);
> > -	struct tpm_output_header *hdr =
> > -		(struct tpm_output_header *)priv->buffer;
> > +	struct tpm_header *hdr = (struct tpm_header *)priv->buffer;
> >  	u32 expected_len;
> >  	int rc;
> > 
> > diff --git a/drivers/char/tpm/tpm_vtpm_proxy.c
> > b/drivers/char/tpm/tpm_vtpm_proxy.c
> > index 5f95fbfb7f6b..28eb5ab15b99 100644
> > --- a/drivers/char/tpm/tpm_vtpm_proxy.c
> > +++ b/drivers/char/tpm/tpm_vtpm_proxy.c
> > @@ -303,9 +303,9 @@ static int vtpm_proxy_tpm_op_recv(struct tpm_chip
> > *chip, u8 *buf, size_t count)  static int
> > vtpm_proxy_is_driver_command(struct tpm_chip *chip,
> >  					u8 *buf, size_t count)
> >  {
> > -	struct tpm_input_header *hdr = (struct tpm_input_header *)buf;
> > +	struct tpm_header *hdr = (struct tpm_header *)buf;
> > 
> > -	if (count < sizeof(struct tpm_input_header))
> > +	if (count < sizeof(struct tpm_header))
> >  		return 0;
> > 
> >  	if (chip->flags & TPM_CHIP_FLAG_TPM2) { @@ -402,7 +402,7 @@
> > static int vtpm_proxy_request_locality(struct tpm_chip *chip, int locality)  {
> >  	struct tpm_buf buf;
> >  	int rc;
> > -	const struct tpm_output_header *header;
> > +	const struct tpm_header *header;
> >  	struct proxy_dev *proxy_dev = dev_get_drvdata(&chip->dev);
> > 
> >  	if (chip->flags & TPM_CHIP_FLAG_TPM2)
> > @@ -427,7 +427,7 @@ static int vtpm_proxy_request_locality(struct
> > tpm_chip *chip, int locality)
> >  		goto out;
> >  	}
> > 
> > -	header = (const struct tpm_output_header *)buf.data;
> > +	header = (const struct tpm_header *)buf.data;
> >  	rc = be32_to_cpu(header->return_code);
> >  	if (rc)
> >  		locality = -1;
> > diff --git a/drivers/char/tpm/xen-tpmfront.c b/drivers/char/tpm/xen-
> > tpmfront.c index b150f87f38f5..1259e935fd58 100644
> > --- a/drivers/char/tpm/xen-tpmfront.c
> > +++ b/drivers/char/tpm/xen-tpmfront.c
> > @@ -163,7 +163,7 @@ static int vtpm_send(struct tpm_chip *chip, u8 *buf,
> > size_t count)
> >  	wmb();
> >  	notify_remote_via_evtchn(priv->evtchn);
> > 
> > -	ordinal = be32_to_cpu(((struct tpm_input_header*)buf)->ordinal);
> > +	ordinal = be32_to_cpu(((struct tpm_header *)buf)->ordinal);
> >  	duration = tpm_calc_ordinal_duration(chip, ordinal);
> > 
> >  	if (wait_for_tpm_stat(chip, VTPM_STATUS_IDLE, duration,
> > --
> > 2.19.1
> 

Thank you. Really useful feedback.

/Jarkko
