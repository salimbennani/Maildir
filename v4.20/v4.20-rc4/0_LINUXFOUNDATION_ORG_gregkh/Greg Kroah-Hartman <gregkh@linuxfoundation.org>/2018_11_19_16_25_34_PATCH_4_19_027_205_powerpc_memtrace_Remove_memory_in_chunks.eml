Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 20 Nov 2018 00:31:45 -0000
Received: from icoremail.net (unknown [209.85.214.175])
	by mail-app2 (Coremail) with SMTP id by_KCgDXvwoD5vJbm2a6AQ--.55378S3;
	Tue, 20 Nov 2018 00:34:12 +0800 (CST)
Received: from mail-pl1-f175.google.com (unknown [209.85.214.175])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwDnyET_5fJbzlxZAA--.3392S3;
	Tue, 20 Nov 2018 00:34:07 +0800 (CST)
Received: by mail-pl1-f175.google.com with SMTP id gn14so64551plb.10
        for <xuliker@zju.edu.cn>; Mon, 19 Nov 2018 08:34:07 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=VWNAwMfewrWO9izqKpVSjsfzdS3E2CbEROHPA4ilJxg=;
        b=YluVvYk9f3cXoFSq7sEkLdeDnoLFg2wfByK5uKeyYA6iMcwMDkarGm8n9asI45/GVE
         Rx96aUZ64nkdVePjBNFd1yKAhFyt9FmA0NOIyuoN2zuT7mxtQgQEhC2ZVVUyHNQdj0+x
         W67SfjmeCAcmtNuzex8NmeiZQTeHSHECXotKedb9gW4u46mpGowGPoedhCSM3FRWKSiE
         LpVkfDd8G53KgczlE4zfqfPUnVhJycLoSqNi0sfN1K+jx9sEF9JHiipfDdn0Qz3A3xPh
         aH6iF2QBJVpqMdyxZTh1jyJVQb+jVyJuscgVBI7hPW0OEWyfYD/uKt9hqldfdEygRef2
         VPlA==
X-Gm-Message-State: AGRZ1gKlGD6TRAlhYbbmL19gLIQEiQXRtwuxgqFZ9YmtXxDqqXwp36Ra
	ETvseonY//hOTcXav0m92vv08+XxBR0xS8q/N2RgioX60cGTCnA=
X-Received: by 2002:a17:902:704c:: with SMTP id h12mr23203161plt.78.1542645246982;
        Mon, 19 Nov 2018 08:34:06 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp2881466pju;
        Mon, 19 Nov 2018 08:34:05 -0800 (PST)
X-Google-Smtp-Source: AJdET5coO/h2oSJbeAiroNQjywrah3w7GlZbys5rSGyzDqq5kV4N5VmG8LzM/8GXDEJD9KvSPEgT
X-Received: by 2002:a63:36c4:: with SMTP id d187mr20298978pga.404.1542645245762;
        Mon, 19 Nov 2018 08:34:05 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542645245; cv=none;
        d=google.com; s=arc-20160816;
        b=i+JQ/0vca2P9H8f/Q0rnSwVCGm4EFyzbmng+gvMFUCOBqzV457nGDZiRF7WKfiF9oU
         v2/FN3nYZhAsAVHMhjs0bxpqei5prosa09TUs76VZAw0fW00W6nENT6wAP5GrofwcgN9
         GDBG4vcLC1b+G9RUrsHKM4ShSBY6Ynm43eMy1ipHFGlQ3KfJSEGzTOJdgVsaaA8w11j3
         jDEkX9bqGeeT7+Z1O0FStbpIAQZpAcC6mUiMKquyMmsizuwlSsdIpJnkmTx6aTxJA0mW
         g53CVXk1f0dJSWYkSDmNlP4tl0EffNbDIW1sTQVFfizIzRM8YgsV6qZ/DAaykPCKbTNI
         9xhw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=VWNAwMfewrWO9izqKpVSjsfzdS3E2CbEROHPA4ilJxg=;
        b=SpOXshFg1sKZJ5SKQ1ND+pm0Ma4t17P9mdNgKE4KqxbvikAiYonS7WPCOlZhfb3Qyq
         +xsIbdH/qbaz1SStKyRN1tF5CnZX3SvquJXoNuiODXY+53J7goLafVL2DS7yw8DKho1W
         X0dHYeVNVCAUCqqZT+BVpV2NWm4p2P8yiDQ/3FT78RkNassx8T5kVb2HaO4bxACk4DIw
         3hEqeYm+3eW75E612a0QYhmPOfyLXUBFWJLu7RARvID8ldXxCLwXVEMwIM6cbj93loj9
         RyYSZogJXloE/mxB7qj880HZbGUOihQiEwlw8WWS8RPKGft1gWFJtexxLM9YGAq6CtxQ
         wtSg==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b=C9p87JII;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id cc17si10269749plb.265.2018.11.19.08.33.51;
        Mon, 19 Nov 2018 08:34:05 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730970AbeKTC5I (ORCPT <rfc822;nullbytes00@gmail.com>
        + 99 others); Mon, 19 Nov 2018 21:57:08 -0500
Received: from mail.kernel.org ([198.145.29.99]:55600 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1730179AbeKTC5H (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 19 Nov 2018 21:57:07 -0500
Received: from localhost (5356596B.cm-6-7b.dynamic.ziggo.nl [83.86.89.107])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 2091F2086A;
        Mon, 19 Nov 2018 16:32:58 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1542645179;
        bh=1ktZqE/eu1PtDfSWIKXOWkTAPuxieXJ9vrz522wLP+A=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=C9p87JIIXf5n8DOMmaj/7DDHr5yk7acfKFrUUVGA51FNsW0FaTQmkCS0p0iBfu1HM
         sqO3S9vLu7euhmmU0si2N/aXYedioe0I913YdTttVOgWhXBSnG1zY/5PVtA8ILfzxC
         snjoVN6EGLUEUiLrUZixeWYot+OQs82TSiLQL+c4=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Rashmica Gupta <rashmica.g@gmail.com>,
        Michael Ellerman <mpe@ellerman.id.au>,
        Sasha Levin <sashal@kernel.org>
Subject: [PATCH 4.19 027/205] powerpc/memtrace: Remove memory in chunks
Date: Mon, 19 Nov 2018 17:25:34 +0100
Message-Id: <20181119162622.367970245@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181119162616.586062722@linuxfoundation.org>
References: <20181119162616.586062722@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwDnyET_5fJbzlxZAA--.3392S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxAr1UZFWxtFWxGF18GFW8Xrb_yoW5ur48pr
	4fJwsIkrW8tFnrAF4xKFn5Xryvgw4vy3y5K39xA3sxCF47GryI9ry7tFy0vFyDJryIvrW7
	tr4kAF4F9F4kXaUanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPmb7Iv0xC_tr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26r4UJVWxJr1l84ACjcxK6I8E87Iv6xkF7I0E14v26r4UJVWxJr1le2I262
	IYc4CY6c8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAF
	wI0_JrI_JrylYx0Ex4A2jsIE14v26r1j6r4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0x
	vY0x0EwIxGrwCjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCj
	j44lc2xSY4AK6IIF6r1lc2IjII80xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26F1j6w
	1UMxvI42IY6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UMxvI42IY6I8E87Iv67AKxVWxJVW8
	Jr1lcIIF0xvEx4A2jsIEc7CjxVAFwI0_Gr0_Gr1UMxAIw28IcxkI7VAKI48JMxAIw28IcV
	AKzI0EY4vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8C
	rVAFwI0_Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUAVWUtw
	CIc40Y0x0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Jr0_JF7vcSsGvfC2KfnxnUUI43ZE
	Xa7IU5I0P3UUUUU==

4.19-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Rashmica Gupta <rashmica.g@gmail.com>

[ Upstream commit 3f7daf3d7582dc6628ac40a9045dd1bbd80c5f35 ]

When hot-removing memory release_mem_region_adjustable() splits iomem
resources if they are not the exact size of the memory being
hot-deleted. Adding this memory back to the kernel adds a new resource.

Eg a node has memory 0x0 - 0xfffffffff. Hot-removing 1GB from
0xf40000000 results in the single resource 0x0-0xfffffffff being split
into two resources: 0x0-0xf3fffffff and 0xf80000000-0xfffffffff.

When we hot-add the memory back we now have three resources:
0x0-0xf3fffffff, 0xf40000000-0xf7fffffff, and 0xf80000000-0xfffffffff.

This is an issue if we try to remove some memory that overlaps
resources. Eg when trying to remove 2GB at address 0xf40000000,
release_mem_region_adjustable() fails as it expects the chunk of memory
to be within the boundaries of a single resource. We then get the
warning: "Unable to release resource" and attempting to use memtrace
again gives us this error: "bash: echo: write error: Resource
temporarily unavailable"

This patch makes memtrace remove memory in chunks that are always the
same size from an address that is always equal to end_of_memory -
n*size, for some n. So hotremoving and hotadding memory of different
sizes will now not attempt to remove memory that spans multiple
resources.

Signed-off-by: Rashmica Gupta <rashmica.g@gmail.com>
Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
Signed-off-by: Sasha Levin <sashal@kernel.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---
 arch/powerpc/platforms/powernv/memtrace.c |   21 ++++++++++++++++-----
 1 file changed, 16 insertions(+), 5 deletions(-)

--- a/arch/powerpc/platforms/powernv/memtrace.c
+++ b/arch/powerpc/platforms/powernv/memtrace.c
@@ -90,17 +90,15 @@ static bool memtrace_offline_pages(u32 n
 	walk_memory_range(start_pfn, end_pfn, (void *)MEM_OFFLINE,
 			  change_memblock_state);
 
-	lock_device_hotplug();
-	remove_memory(nid, start_pfn << PAGE_SHIFT, nr_pages << PAGE_SHIFT);
-	unlock_device_hotplug();
 
 	return true;
 }
 
 static u64 memtrace_alloc_node(u32 nid, u64 size)
 {
-	u64 start_pfn, end_pfn, nr_pages;
+	u64 start_pfn, end_pfn, nr_pages, pfn;
 	u64 base_pfn;
+	u64 bytes = memory_block_size_bytes();
 
 	if (!node_spanned_pages(nid))
 		return 0;
@@ -113,8 +111,21 @@ static u64 memtrace_alloc_node(u32 nid,
 	end_pfn = round_down(end_pfn - nr_pages, nr_pages);
 
 	for (base_pfn = end_pfn; base_pfn > start_pfn; base_pfn -= nr_pages) {
-		if (memtrace_offline_pages(nid, base_pfn, nr_pages) == true)
+		if (memtrace_offline_pages(nid, base_pfn, nr_pages) == true) {
+			/*
+			 * Remove memory in memory block size chunks so that
+			 * iomem resources are always split to the same size and
+			 * we never try to remove memory that spans two iomem
+			 * resources.
+			 */
+			lock_device_hotplug();
+			end_pfn = base_pfn + nr_pages;
+			for (pfn = base_pfn; pfn < end_pfn; pfn += bytes>> PAGE_SHIFT) {
+				remove_memory(nid, pfn << PAGE_SHIFT, bytes);
+			}
+			unlock_device_hotplug();
 			return base_pfn << PAGE_SHIFT;
+		}
 	}
 
 	return 0;

