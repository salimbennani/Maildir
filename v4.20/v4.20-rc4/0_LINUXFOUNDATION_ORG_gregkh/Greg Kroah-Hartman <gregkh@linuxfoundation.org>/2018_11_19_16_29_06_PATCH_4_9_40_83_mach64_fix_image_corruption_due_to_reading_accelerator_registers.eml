Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 20 Nov 2018 00:32:56 -0000
Received: from icoremail.net (unknown [209.85.210.175])
	by mail-app2 (Coremail) with SMTP id by_KCgCn3_jW6vJbCIW6AQ--.55729S3;
	Tue, 20 Nov 2018 00:54:48 +0800 (CST)
Received: from mail-pf1-f175.google.com (unknown [209.85.210.175])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAnB0PS6vJbLWpZAA--.11995S3;
	Tue, 20 Nov 2018 00:54:43 +0800 (CST)
Received: by mail-pf1-f175.google.com with SMTP id z9so639583pfi.2
        for <xuliker@zju.edu.cn>; Mon, 19 Nov 2018 08:54:43 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=2aOsAGT817nhMClLtOwbIvOBferlXcP9ZtjiHBWgRbE=;
        b=DBymuWqUO3p1MQSqm6M6JeFS3WVDm6ew4+LTefD/2LtVkaG2f2R5KupCjv+peLgbLo
         fbgim58XOEcT4lFPQRMKQXRePhvEtjU5+IjmpQlR0vOGjCPx9ZlnyIkw6ZIBUvU6T5b7
         DjZj5/lCRtc2sgwVrV41heg1ynx7rXdRuoyxeHFhVvz6U85fdR2pE7Aq3qQVWFgVa/LV
         ZRHPdFkT+F8igYLnrh0tq448GFHlM+hOMhGFvAUqbEV6CsqJCsCVy3gH0KXJTi7A3X8v
         aKeWss2YN19hjccbCQmbtn5h/o6t5joWyV2YOPhf41jFQTcxUxR6/zwiY3KEeSQWywLB
         1ndw==
X-Gm-Message-State: AGRZ1gK+NuktB6ZV45sjNUUR5YjHi/hryYd2z+6ODc361MV0cXTmC/Xb
	KrBSaOeWZcGdRIsXnGGCXkYyl/GMTLA3LlYyaOGsL66mM8cyLTU=
X-Received: by 2002:a62:3687:: with SMTP id d129-v6mr23902506pfa.56.1542646482675;
        Mon, 19 Nov 2018 08:54:42 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp2904931pju;
        Mon, 19 Nov 2018 08:54:40 -0800 (PST)
X-Google-Smtp-Source: AJdET5ekciPXgUOxAUFxwkSgIy11S/TxJrFRcUlynQAudgXl2nyC1S3bbxBPvNFlmrRwf6fyYgdR
X-Received: by 2002:a63:101:: with SMTP id 1mr20777195pgb.152.1542646480465;
        Mon, 19 Nov 2018 08:54:40 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542646480; cv=none;
        d=google.com; s=arc-20160816;
        b=O86h+bYvTYl2VOsRg8wlMgHHDg1aObBSzx9iokmrJOYAJwUZTTCtOz5CfUfNsWQ6YH
         iVk3qQ5q+FvJjZlH6XKq+qJUmYYr4edQSmskJNOpYjTsjDOmrPaYT9Cv+FxIUEEm254V
         QytNIa/0byKcaiGbjbM/D2p1PgXVxYF8vkH27OtQBZ95phhFDTFv9VvHsDw2BvRZIVJW
         3XFXU18uN1jrcroCXurgHNqjFn8moT76pg1uuDhkJnCrJhzvoYzf9+xh4wSDrgw081Nv
         tBs0aapRq54LIdL962kSEiqh4mn8mclOhCFITvDgo5yTcbFWMIls3Q8wstcpP081kj1Y
         FYAQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=2aOsAGT817nhMClLtOwbIvOBferlXcP9ZtjiHBWgRbE=;
        b=L8y1VOvWyMF4wcMGaCZnRrXhq8aWmpJUcRINnrtyIJdCXBF0Vr/VcwiPSk0WiHbzXw
         mM+MhZMVr6xKuZTjSUb0IbS6/XFAkvfoDHmns+O0d47W19s8CLTlcHAJJlzwu/uaSHsr
         NiO71cUrvZIe9bxoj/Nmb4LH9jUfMigiWV4Zpg+wB3mtphW1UoXSlQuFM4UM8OCjdAl1
         MK4aqoelMW4yjpia0c2t5JG/0fQe97JFIBgLYX09zv5T4JE0CNgNJdEPrRL1B9RBUNc9
         4zVzxEhRMh5E2j/+NUFq6L+eotfJjzULDHrAIQtre0iiADo261MPnH+S7zmkV5NOWqn4
         Peig==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b=XSHKDK0u;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id go3si10916194plb.97.2018.11.19.08.54.11;
        Mon, 19 Nov 2018 08:54:40 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2390868AbeKTDSI (ORCPT <rfc822;nullbytes00@gmail.com>
        + 99 others); Mon, 19 Nov 2018 22:18:08 -0500
Received: from mail.kernel.org ([198.145.29.99]:56882 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S2390145AbeKTDSH (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 19 Nov 2018 22:18:07 -0500
Received: from localhost (5356596B.cm-6-7b.dynamic.ziggo.nl [83.86.89.107])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id A5F4921104;
        Mon, 19 Nov 2018 16:53:52 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1542646433;
        bh=wpziBps+1j6/vzYOQtQw/f9FR4d6eEIhwabxdyTYTxM=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=XSHKDK0uLsga94AZxkvtjqkaE5nS42moc/JQcmj2CqdVQhBekRCQaqmLMmkm1D5t+
         1sf8WyZt9KCl3psg68gKGfzEKaoPLXKE2f9VO0IA5VN5gs7oWNdO8Nh4+IAriXg0dR
         jbNxaf53yYgKUsCYNZvDOwjGQoZCqUeYABCz+aGI=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Mikulas Patocka <mpatocka@redhat.com>,
        =?UTF-8?q?Ville=20Syrj=C3=A4l=C3=A4?= <syrjala@sci.fi>,
        Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
Subject: [PATCH 4.9 40/83] mach64: fix image corruption due to reading accelerator registers
Date: Mon, 19 Nov 2018 17:29:06 +0100
Message-Id: <20181119162620.423118857@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181119162612.046511542@linuxfoundation.org>
References: <20181119162612.046511542@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAnB0PS6vJbLWpZAA--.11995S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxArW5Kw1rZF15tr15Ww4Durg_yoWrWr4fp3
	9xCrnxXr48Xw4jyw1rXrWvyrn0kr4xtrZxJr9Yya4Fyas8Z395tw1rX3Zaqa4ru3yDZFW5
	Z34UKrZ0kFs7AwUanT9S1TB71UUUUUJqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUmqb7Iv0xC_Zr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26F4UJVW0owA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_Cr1j6rxdM2kKe7AKxV
	WUXVWUAwAS0I0E0xvYzxvE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv
	7VC0I7IYx2IY67AKxVWUtVWrXwAv7VC2z280aVAFwI0_Gr0_Cr1lOx8S6xCaFVCjc4AY6r
	1j6r4UM4x0Y48IcxkI7VAKI48JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkFs20E
	Y4vE44CYbxCE4x80FwCY02Avz4vEIxC_JwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI
	8IcVAFwI0_tr0E3s1lcIIF0xvE2Ix0cI8IcVCY1x0267AKxVW8Jr0_Cr1UMxvI42IY6I8E
	87Iv67AKxVW8Jr0_Cr1UMxvI42IY6I8E87Iv6xkF7I0E14v26r4UJVWxJr1l42xK82IYc2
	Ij64vIr41l42xK82IY64kExVAvwVAq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_
	Jr0_Gr1lx2IqxVAqx4xG67AKxVWUJVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1V
	AY17CE14v26r126r1DMIIYrxkI7VAKI48JMIIF0xvE42xK8VAvwI8IcIk0rVWUJVWUCbIY
	CTnIWIevJa73UjIFyTuYvjxUyh0eDUUUU

4.9-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Mikulas Patocka <mpatocka@redhat.com>

commit c09bcc91bb94ed91f1391bffcbe294963d605732 upstream.

Reading the registers without waiting for engine idle returns
unpredictable values. These unpredictable values result in display
corruption - if atyfb_imageblit reads the content of DP_PIX_WIDTH with the
bit DP_HOST_TRIPLE_EN set (from previous invocation), the driver would
never ever clear the bit, resulting in display corruption.

We don't want to wait for idle because it would degrade performance, so
this patch modifies the driver so that it never reads accelerator
registers.

HOST_CNTL doesn't have to be read, we can just write it with
HOST_BYTE_ALIGN because no other part of the driver cares if
HOST_BYTE_ALIGN is set.

DP_PIX_WIDTH is written in the functions atyfb_copyarea and atyfb_fillrect
with the default value and in atyfb_imageblit with the value set according
to the source image data.

Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
Reviewed-by: Ville Syrjälä <syrjala@sci.fi>
Cc: stable@vger.kernel.org
Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

---
 drivers/video/fbdev/aty/mach64_accel.c |   22 +++++++++-------------
 1 file changed, 9 insertions(+), 13 deletions(-)

--- a/drivers/video/fbdev/aty/mach64_accel.c
+++ b/drivers/video/fbdev/aty/mach64_accel.c
@@ -126,7 +126,7 @@ void aty_init_engine(struct atyfb_par *p
 
 	/* set host attributes */
 	wait_for_fifo(13, par);
-	aty_st_le32(HOST_CNTL, 0, par);
+	aty_st_le32(HOST_CNTL, HOST_BYTE_ALIGN, par);
 
 	/* set pattern attributes */
 	aty_st_le32(PAT_REG0, 0, par);
@@ -232,7 +232,8 @@ void atyfb_copyarea(struct fb_info *info
 		rotation = rotation24bpp(dx, direction);
 	}
 
-	wait_for_fifo(4, par);
+	wait_for_fifo(5, par);
+	aty_st_le32(DP_PIX_WIDTH, par->crtc.dp_pix_width, par);
 	aty_st_le32(DP_SRC, FRGD_SRC_BLIT, par);
 	aty_st_le32(SRC_Y_X, (sx << 16) | sy, par);
 	aty_st_le32(SRC_HEIGHT1_WIDTH1, (width << 16) | area->height, par);
@@ -268,7 +269,8 @@ void atyfb_fillrect(struct fb_info *info
 		rotation = rotation24bpp(dx, DST_X_LEFT_TO_RIGHT);
 	}
 
-	wait_for_fifo(3, par);
+	wait_for_fifo(4, par);
+	aty_st_le32(DP_PIX_WIDTH, par->crtc.dp_pix_width, par);
 	aty_st_le32(DP_FRGD_CLR, color, par);
 	aty_st_le32(DP_SRC,
 		    BKGD_SRC_BKGD_CLR | FRGD_SRC_FRGD_CLR | MONO_SRC_ONE,
@@ -283,7 +285,7 @@ void atyfb_imageblit(struct fb_info *inf
 {
 	struct atyfb_par *par = (struct atyfb_par *) info->par;
 	u32 src_bytes, dx = image->dx, dy = image->dy, width = image->width;
-	u32 pix_width_save, pix_width, host_cntl, rotation = 0, src, mix;
+	u32 pix_width, rotation = 0, src, mix;
 
 	if (par->asleep)
 		return;
@@ -295,8 +297,7 @@ void atyfb_imageblit(struct fb_info *inf
 		return;
 	}
 
-	pix_width = pix_width_save = aty_ld_le32(DP_PIX_WIDTH, par);
-	host_cntl = aty_ld_le32(HOST_CNTL, par) | HOST_BYTE_ALIGN;
+	pix_width = par->crtc.dp_pix_width;
 
 	switch (image->depth) {
 	case 1:
@@ -369,12 +370,11 @@ void atyfb_imageblit(struct fb_info *inf
 		mix = FRGD_MIX_D_XOR_S | BKGD_MIX_D;
 	}
 
-	wait_for_fifo(6, par);
-	aty_st_le32(DP_WRITE_MASK, 0xFFFFFFFF, par);
+	wait_for_fifo(5, par);
 	aty_st_le32(DP_PIX_WIDTH, pix_width, par);
 	aty_st_le32(DP_MIX, mix, par);
 	aty_st_le32(DP_SRC, src, par);
-	aty_st_le32(HOST_CNTL, host_cntl, par);
+	aty_st_le32(HOST_CNTL, HOST_BYTE_ALIGN, par);
 	aty_st_le32(DST_CNTL, DST_Y_TOP_TO_BOTTOM | DST_X_LEFT_TO_RIGHT | rotation, par);
 
 	draw_rect(dx, dy, width, image->height, par);
@@ -423,8 +423,4 @@ void atyfb_imageblit(struct fb_info *inf
 			aty_st_le32(HOST_DATA0, get_unaligned_le32(pbitmap), par);
 		}
 	}
-
-	/* restore pix_width */
-	wait_for_fifo(1, par);
-	aty_st_le32(DP_PIX_WIDTH, pix_width_save, par);
 }

