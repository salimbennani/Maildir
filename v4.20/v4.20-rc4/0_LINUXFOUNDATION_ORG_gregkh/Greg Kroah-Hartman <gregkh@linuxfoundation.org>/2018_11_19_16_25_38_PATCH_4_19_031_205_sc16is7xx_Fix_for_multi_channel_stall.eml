Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 20 Nov 2018 00:31:43 -0000
Received: from icoremail.net (unknown [209.85.210.176])
	by mail-app2 (Coremail) with SMTP id by_KCgDnX++i5fJbXWS6AQ--.56007S3;
	Tue, 20 Nov 2018 00:32:55 +0800 (CST)
Received: from mail-pf1-f176.google.com (unknown [209.85.210.176])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCnj0ub5fJbuVtZAA--.5393S3;
	Tue, 20 Nov 2018 00:32:27 +0800 (CST)
Received: by mail-pf1-f176.google.com with SMTP id b7so1873538pfi.8
        for <xuliker@zju.edu.cn>; Mon, 19 Nov 2018 08:32:27 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=q7H1MmCKYQ3K7JEdUuretmwxSqbj9thdMFY1D4aCWDU=;
        b=pOaGlbRuHTTiS2j39ZWe1wUDnnwjuk963cidF5Z9sRgrgOo6qP3OPH99ePB4NoXxa2
         yjGLmBmatT3rvdUmd4mV/1bykfwKScQc5fFwIsPr+zieaglQEVSupJGZR3JCiWcvW1i+
         CRhcj2UpK2fiIephWUn1Z8qgHD+suOl8EXKx//4Fk/m8utNSWPpt0tpgSzuFP+JojaZd
         oeqzcFzOnQio8qka3+8IUPdJUXiVwsk8zrlmAStp0KK+yXMOgO/ZQu4qGZIUbUFh6lSs
         84u+CuKHFcG8HopZVI+5HfPZh3968z9hA7SEVE5RBjCTgzoGaSysTneAo6hWAP/oDFat
         xeFQ==
X-Gm-Message-State: AGRZ1gLwRz/sryq017rPYtyHOgoTgMKTXZjJ0dKuZkL8EO1LAMgTxZwj
	Ab3K8N6Xy0HG6Sdf47kszvUTyvg5F6GaEQJk5kfW+fPfmv9JcL4=
X-Received: by 2002:a62:5d0c:: with SMTP id r12mr24508553pfb.0.1542645147542;
        Mon, 19 Nov 2018 08:32:27 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp2879435pju;
        Mon, 19 Nov 2018 08:32:24 -0800 (PST)
X-Google-Smtp-Source: AJdET5eLSbY2jXoZzjcwu2SFZioaE3snfc06QUs43D9M08pZAbJ5wPSWg0DwwZUXj8MQVkDBKP74
X-Received: by 2002:a62:81c1:: with SMTP id t184mr16640610pfd.246.1542645144357;
        Mon, 19 Nov 2018 08:32:24 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542645144; cv=none;
        d=google.com; s=arc-20160816;
        b=M5ansnPko7120TnDh0kvutD8z8rYXDAGGff5ITswH8UGGV0I/aYHoCXLF1shcveYry
         OCtiCoQzCvjvWyDkVFMj/WbQpaleXdy0EfgNRbDEHCE2E6iZ/TmrdxeAYYAk9Hx3lVPA
         OdDqO/yoUKDlpYwLvM9exezvExj7iSroxyHEJswUNRNTk4SGOceZiwLo2k/MupM1K1B6
         DBOgLxbyVhdYzl+S/jHAWFjKNtC5CPt/8qXc+gb9qFYQ3mteZ6pm7vD0OagSlzqTW06K
         4SHSiNkWFuCfuLtUtbYb6Efmhs+U/6oVJjdbMIwRpO5XFhg86uR7jADo9fZRIxn1E/9b
         qe2w==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=q7H1MmCKYQ3K7JEdUuretmwxSqbj9thdMFY1D4aCWDU=;
        b=M13kh4K/5Wx+POHdjXLlN79z6l8gLyyuBr0S7nHpSrbWSgbz5+u/0vQsTDbXoBGWgA
         n3//0cNa2tW9vhGqyANY4qtARqz3B82Esyz2tp5uoHBUSHmsMhck3UDgyS4ShYMCfIDp
         jnX3FSSb4W1pOx3awqg9Q+JAgQPKEfwJ2WyJ95os9/uod0G20/fyrAysnswdOVTSzOoG
         8tPcnYsbiEZQhmqaQdUTmjClzKGyUTP5ZhXMAun0hxj4TI3LwSgJKuHIT6hXEeaxLqhA
         ZlSaLLJTxTUmigLfOvUHPTDPIKCbZXY+mGH/J2eTfHwqIFVLXl1Eqi7cXBNrpnyCf2sk
         t7tg==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b=wijqyBOD;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id be8-v6si39971797plb.143.2018.11.19.08.32.06;
        Mon, 19 Nov 2018 08:32:24 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730423AbeKTCzd (ORCPT <rfc822;nullbytes00@gmail.com>
        + 99 others); Mon, 19 Nov 2018 21:55:33 -0500
Received: from mail.kernel.org ([198.145.29.99]:53292 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1730385AbeKTCzc (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 19 Nov 2018 21:55:32 -0500
Received: from localhost (5356596B.cm-6-7b.dynamic.ziggo.nl [83.86.89.107])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 6033320989;
        Mon, 19 Nov 2018 16:31:25 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1542645085;
        bh=VKO6F/2cQ7T1Uq1myZwttRuNaREy1hEhvkxsGiriV2I=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=wijqyBODBeAqSMm8GXuAySRJA9ssiMGJyCCgT3LmN6glWJvQMiDlqlb/rBHFgagWu
         6F/tKX/2Z1HDw1GXBjjdwtbKUdPZl6LtWFoo0aPTkfN23r50TtbLI54IMwyz+0Ym4s
         1hZvHP7KCC3K+LLH8R0OriHhmmY2VBMXSMgXmDQ0=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Phil Elwell <phil@raspberrypi.org>,
        Sasha Levin <sashal@kernel.org>
Subject: [PATCH 4.19 031/205] sc16is7xx: Fix for multi-channel stall
Date: Mon, 19 Nov 2018 17:25:38 +0100
Message-Id: <20181119162623.095827395@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181119162616.586062722@linuxfoundation.org>
References: <20181119162616.586062722@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwCnj0ub5fJbuVtZAA--.5393S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxXrW3Gr17Xr1ruFyDKrW7Arb_yoWrtFW3pF
	W3Ga4q9r4kJF4UuwnrJa10kFyYkwn5JrW5CryktwnYyw1Yqr1FqrW3Ka4FvrW5CrykJ348
	Zr4Y9w18Ga9rZrJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPqb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_Gr1j6F4UJwA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwAS0I0E0x
	vYzxvE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AK
	xVWUGVWUXwAv7VC2z280aVAFwI0_Jr0_Gr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48Icx
	kI7VAKI48JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE44CYbxCE4x80
	FwCY02Avz4vEIxC_JwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_Xr0_Ar
	1lcIIF0xvE2Ix0cI8IcVCY1x0267AKxVW8JVWxJwCYIxAIcVC2z280aVAFwI0_Cr0_Gr1U
	MxvI42IY6I8E87Iv6xkF7I0E14v26r4j6r4UJwCF04k20xvY0x0EwIxGrwCF04k20xvEw4
	C26cxK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E
	14v26r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_JF0_Jw1lIx
	kGc2Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6r1I6r4UYxBIdaVFxhVjvjDU0xZFpf9x
	07bQlk-UUUUU=

4.19-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Phil Elwell <phil@raspberrypi.org>

[ Upstream commit 8344498721059754e09d30fe255a12dab8fb03ef ]

The SC16IS752 is a dual-channel device. The two channels are largely
independent, but the IRQ signals are wired together as an open-drain,
active low signal which will be driven low while either of the
channels requires attention, which can be for significant periods of
time until operations complete and the interrupt can be acknowledged.
In that respect it is should be treated as a true level-sensitive IRQ.

The kernel, however, needs to be able to exit interrupt context in
order to use I2C or SPI to access the device registers (which may
involve sleeping).  Therefore the interrupt needs to be masked out or
paused in some way.

The usual way to manage sleeping from within an interrupt handler
is to use a threaded interrupt handler - a regular interrupt routine
does the minimum amount of work needed to triage the interrupt before
waking the interrupt service thread. If the threaded IRQ is marked as
IRQF_ONESHOT the kernel will automatically mask out the interrupt
until the thread runs to completion. The sc16is7xx driver used to
use a threaded IRQ, but a patch switched to using a kthread_worker
in order to set realtime priorities on the handler thread and for
other optimisations. The end result is non-threaded IRQ that
schedules some work then returns IRQ_HANDLED, making the kernel
think that all IRQ processing has completed.

The work-around to prevent a constant stream of interrupts is to
mark the interrupt as edge-sensitive rather than level-sensitive,
but interpreting an active-low source as a falling-edge source
requires care to prevent a total cessation of interrupts. Whereas
an edge-triggering source will generate a new edge for every interrupt
condition a level-triggering source will keep the signal at the
interrupting level until it no longer requires attention; in other
words, the host won't see another edge until all interrupt conditions
are cleared. It is therefore vital that the interrupt handler does not
exit with an outstanding interrupt condition, otherwise the kernel
will not receive another interrupt unless some other operation causes
the interrupt state on the device to be cleared.

The existing sc16is7xx driver has a very simple interrupt "thread"
(kthread_work job) that processes interrupts on each channel in turn
until there are no more. If both channels are active and the first
channel starts interrupting while the handler for the second channel
is running then it will not be detected and an IRQ stall ensues. This
could be handled easily if there was a shared IRQ status register, or
a convenient way to determine if the IRQ had been deasserted for any
length of time, but both appear to be lacking.

Avoid this problem (or at least make it much less likely to happen)
by reducing the granularity of per-channel interrupt processing
to one condition per iteration, only exiting the overall loop when
both channels are no longer interrupting.

Signed-off-by: Phil Elwell <phil@raspberrypi.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Signed-off-by: Sasha Levin <sashal@kernel.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---
 drivers/tty/serial/sc16is7xx.c |   19 +++++++++++++------
 1 file changed, 13 insertions(+), 6 deletions(-)

--- a/drivers/tty/serial/sc16is7xx.c
+++ b/drivers/tty/serial/sc16is7xx.c
@@ -657,7 +657,7 @@ static void sc16is7xx_handle_tx(struct u
 		uart_write_wakeup(port);
 }
 
-static void sc16is7xx_port_irq(struct sc16is7xx_port *s, int portno)
+static bool sc16is7xx_port_irq(struct sc16is7xx_port *s, int portno)
 {
 	struct uart_port *port = &s->p[portno].port;
 
@@ -666,7 +666,7 @@ static void sc16is7xx_port_irq(struct sc
 
 		iir = sc16is7xx_port_read(port, SC16IS7XX_IIR_REG);
 		if (iir & SC16IS7XX_IIR_NO_INT_BIT)
-			break;
+			return false;
 
 		iir &= SC16IS7XX_IIR_ID_MASK;
 
@@ -688,16 +688,23 @@ static void sc16is7xx_port_irq(struct sc
 					    port->line, iir);
 			break;
 		}
-	} while (1);
+	} while (0);
+	return true;
 }
 
 static void sc16is7xx_ist(struct kthread_work *ws)
 {
 	struct sc16is7xx_port *s = to_sc16is7xx_port(ws, irq_work);
-	int i;
 
-	for (i = 0; i < s->devtype->nr_uart; ++i)
-		sc16is7xx_port_irq(s, i);
+	while (1) {
+		bool keep_polling = false;
+		int i;
+
+		for (i = 0; i < s->devtype->nr_uart; ++i)
+			keep_polling |= sc16is7xx_port_irq(s, i);
+		if (!keep_polling)
+			break;
+	}
 }
 
 static irqreturn_t sc16is7xx_irq(int irq, void *dev_id)

