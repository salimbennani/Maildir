Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 22 Nov 2018 00:35:22 -0000
Received: from icoremail.net (unknown [209.85.214.170])
	by mail-app4 (Coremail) with SMTP id cS_KCgDnXyeNr_VbI4zoAQ--.42217S3;
	Thu, 22 Nov 2018 03:18:38 +0800 (CST)
Received: from mail-pl1-f170.google.com (unknown [209.85.214.170])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCnj0uKr_VbbPBkAA--.393S3;
	Thu, 22 Nov 2018 03:18:34 +0800 (CST)
Received: by mail-pl1-f170.google.com with SMTP id t13so6818390ply.13
        for <xuliker@zju.edu.cn>; Wed, 21 Nov 2018 11:18:34 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=NbRhh58WlkIx5Z7b9xb1WqYhWeG+iUHeHnPNQtq3Pp0=;
        b=jcFnFevHSWXsT3GiqV2CfWpl5Jie55h33qkqZxPIftpGfExF8+I1jycxIGabq/pf8n
         hPahkxbgNcBeWVVV5WUkFKMitG0wDmCsXZQ/kMBbL1ltTfuN6ew1UuOkJyKgJJ9TH63m
         MWFfek8OqbKIw/YMAikaSlIagRUxuLjF4ARn6arW+uQ/TFtM168IGRMVlRmVPlmoOtFZ
         sjbtFL7ZYY4un1x21YJsM6v6Dvg5OXn7iPWwjAkit/vYG3ccKsCep24ruOVCQT2dP9Hc
         ofW2veuxCT6KBRHznJaZ1/IlrKFgB9abaAvmVcvcabAYz34tn6ZR+2+2OXnHEu5L9PO4
         LXIw==
X-Gm-Message-State: AA+aEWb3RGY5aIu6I5lJW/bj7kEv0WNgQJek4mqGo24TSISNJ03rp/3X
	xN/WzwL1g6YwoHq9zPXbVhRAmf97ZWW8yLsdO4/5NY2enY73vFU=
X-Received: by 2002:a17:902:a9c4:: with SMTP id b4mr8065144plr.298.1542827913963;
        Wed, 21 Nov 2018 11:18:33 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp2362898pju;
        Wed, 21 Nov 2018 11:18:29 -0800 (PST)
X-Google-Smtp-Source: AFSGD/U+RbWjYPDchJUY21Zua09ZaNYu1absbSkWePMQ35YTCvU3C/eLngqunnLYFxSOTz3v9Hn3
X-Received: by 2002:a63:da45:: with SMTP id l5mr7215668pgj.111.1542827909035;
        Wed, 21 Nov 2018 11:18:29 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542827909; cv=none;
        d=google.com; s=arc-20160816;
        b=q60lz6U9QYlxdoJv0B7WBsyBNk70tQFdgRTiu7lKPJqEbUgFy6VH8NUIrdH+55Xnx2
         3kijHRDh7cw9n83EtyTLeSi+jC4TpslEA0Sq/HFUByn+0LZPe13H3bG9gwZfATO2tw1t
         KYAO2RKmfXJtXJY6Pr2pyO7osK+PSvYzaIhuunR/WjNwqJna1HSFLafuOaSqwmTm0Ehj
         mtqlkns36gQQq8Gbn2UfzdgqvNl4yW3u5BIEJwuvRrALOLS1rdFvnzg9f3Pm/f7xKfpy
         tR3Y+JqrX7ehA7O4PwghwB6k6zNsp7Wae0SsJPPreYbrxtb/rnZJhSLo/ayqzdhgNPZn
         UXkQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=NbRhh58WlkIx5Z7b9xb1WqYhWeG+iUHeHnPNQtq3Pp0=;
        b=W9ufgfC5e+na8J8o2DetRq34ESuQmebUld0Y1yiHutVFHMlF3b0R/jn2L5/HBE4IUS
         NJQJBwE/at0cPQXOMoIcT0m8Aky3U2tQU3w7VsuPAERWsDTNkbSqTSr0wm9PL60HjPzC
         vvdopxZ36ppYWbpbGzLgfCBuIPHQRi2Koy3yo++clTlePXf0VEATwymKQssA54VF6rqj
         mi+Mj3fEiGiJ5kxTnsQ/u/OWKKPCVh8ghXEEgGzPtN/U6cH4s8qaA+Qi99V4lN1Cm34/
         Rj1RB1/XglCgT78oxtU1i1WWmOTJAxdbCxFQNwLeUUr8OTNeUVsFnp/zZXxt08yq4gr2
         QuoQ==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b=ows8ndOM;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id u7si47589462pgg.357.2018.11.21.11.18.05;
        Wed, 21 Nov 2018 11:18:28 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2388394AbeKVFp5 (ORCPT <rfc822;yv9200@gmail.com> + 99 others);
        Thu, 22 Nov 2018 00:45:57 -0500
Received: from mail.kernel.org ([198.145.29.99]:40996 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727253AbeKVFp5 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 22 Nov 2018 00:45:57 -0500
Received: from localhost (5356596B.cm-6-7b.dynamic.ziggo.nl [83.86.89.107])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 3BA26206BB;
        Wed, 21 Nov 2018 19:10:23 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1542827423;
        bh=8JOTH2aLHViBIXw5/0s2i86YQ/3Iz238JPxDc0AfPzU=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=ows8ndOMZCjkSprYjM1zgdwpv28GLeiHQKOdQPmBqDLjgOhdD0/W4VSKs6e5KuJCL
         GLwXt6cXGOJ3YssjMvZSNk3fs/Xj2hWyt4ti05v1416Go46XTRIlSiXPtpLOopE+dH
         3CVbDGAtWelIlmapj4ZJQe5rFSC8OgGmrfYpNfCU=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Matthias Kaehlcke <mka@chromium.org>,
        Ingo Molnar <mingo@kernel.org>,
        Masahiro Yamada <yamada.masahiro@socionext.com>,
        Nick Desaulniers <ndesaulniers@google.com>
Subject: [PATCH 4.9 24/59] x86/build: Specify stack alignment for clang
Date: Wed, 21 Nov 2018 20:06:39 +0100
Message-Id: <20181121183509.210549454@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181121183508.262873520@linuxfoundation.org>
References: <20181121183508.262873520@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwCnj0uKr_VbbPBkAA--.393S3
Authentication-Results: mail-app4; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxWryDJF1UAF1fJr4xXrW7CFg_yoWrGF43pF
	s3CwsxKFWkXrn2vrnFyay8Xws5u3ykJw4UXF1UKrs8Aw18Z3WSq3yIkF4kXa4DGryfCay7
	Zr4Ika4vkr43C37anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPlb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26F4UJVW0owA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_Cr1j6rxdM2AIxVAIcx
	kEcVAq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v2
	6r1q6rW5McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IYc2
	Ij64vIr41l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xA
	MxkIecxEwVCI4VWrMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWDJVCq3w
	CYIxAIcVC0I7IYx2IY6xkF7I0E14v26r4UJVWxJr1lcIIF0xvEx4A2jsIE14v26r4UJVWx
	Jr1lcIIF0xvEx4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwCF04k20xvY0x0EwIxGrwCF04k20x
	vEw4C26cxK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02
	F40E14v26r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_Jw0_GF
	ylIxkGc2Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6r1j6r1xYxBIdaVFxhVjvjDU0xZF
	pf9x07bWPfQUUUUU=

4.9-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Matthias Kaehlcke <mka@chromium.org>

commit d77698df39a512911586834d303275ea5fda74d0 upstream.

For gcc stack alignment is configured with -mpreferred-stack-boundary=N,
clang has the option -mstack-alignment=N for that purpose. Use the same
alignment as with gcc.

If the alignment is not specified clang assumes an alignment of
16 bytes, as required by the standard ABI. However as mentioned in
d9b0cde91c60 ("x86-64, gcc: Use -mpreferred-stack-boundary=3 if
supported") the standard kernel entry on x86-64 leaves the stack
on an 8-byte boundary, as a consequence clang will keep the stack
misaligned.

Signed-off-by: Matthias Kaehlcke <mka@chromium.org>
Acked-by: Ingo Molnar <mingo@kernel.org>
Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---
 arch/x86/Makefile |   26 +++++++++++++++++++++-----
 1 file changed, 21 insertions(+), 5 deletions(-)

--- a/arch/x86/Makefile
+++ b/arch/x86/Makefile
@@ -11,6 +11,14 @@ else
         KBUILD_DEFCONFIG := $(ARCH)_defconfig
 endif
 
+# For gcc stack alignment is specified with -mpreferred-stack-boundary,
+# clang has the option -mstack-alignment for that purpose.
+ifneq ($(call cc-option, -mpreferred-stack-boundary=4),)
+        cc_stack_align_opt := -mpreferred-stack-boundary
+else ifneq ($(call cc-option, -mstack-alignment=4),)
+        cc_stack_align_opt := -mstack-alignment
+endif
+
 # How to compile the 16-bit code.  Note we always compile for -march=i386;
 # that way we can complain to the user if the CPU is insufficient.
 #
@@ -28,7 +36,7 @@ REALMODE_CFLAGS	:= $(M16_CFLAGS) -g -Os
 
 REALMODE_CFLAGS += $(call __cc-option, $(CC), $(REALMODE_CFLAGS), -ffreestanding)
 REALMODE_CFLAGS += $(call __cc-option, $(CC), $(REALMODE_CFLAGS), -fno-stack-protector)
-REALMODE_CFLAGS += $(call __cc-option, $(CC), $(REALMODE_CFLAGS), -mpreferred-stack-boundary=2)
+REALMODE_CFLAGS += $(call __cc-option, $(CC), $(REALMODE_CFLAGS), $(cc_stack_align_opt)=2)
 export REALMODE_CFLAGS
 
 # BITS is used as extension for files which are available in a 32 bit
@@ -65,8 +73,10 @@ ifeq ($(CONFIG_X86_32),y)
         # with nonstandard options
         KBUILD_CFLAGS += -fno-pic
 
-        # prevent gcc from keeping the stack 16 byte aligned
-        KBUILD_CFLAGS += $(call cc-option,-mpreferred-stack-boundary=2)
+        # Align the stack to the register width instead of using the default
+        # alignment of 16 bytes. This reduces stack usage and the number of
+        # alignment instructions.
+        KBUILD_CFLAGS += $(call cc-option,$(cc_stack_align_opt)=2)
 
         # Disable unit-at-a-time mode on pre-gcc-4.0 compilers, it makes gcc use
         # a lot more stack due to the lack of sharing of stacklots:
@@ -98,8 +108,14 @@ else
         KBUILD_CFLAGS += $(call cc-option,-mno-80387)
         KBUILD_CFLAGS += $(call cc-option,-mno-fp-ret-in-387)
 
-	# Use -mpreferred-stack-boundary=3 if supported.
-	KBUILD_CFLAGS += $(call cc-option,-mpreferred-stack-boundary=3)
+        # By default gcc and clang use a stack alignment of 16 bytes for x86.
+        # However the standard kernel entry on x86-64 leaves the stack on an
+        # 8-byte boundary. If the compiler isn't informed about the actual
+        # alignment it will generate extra alignment instructions for the
+        # default alignment which keep the stack *mis*aligned.
+        # Furthermore an alignment to the register width reduces stack usage
+        # and the number of alignment instructions.
+        KBUILD_CFLAGS += $(call cc-option,$(cc_stack_align_opt)=3)
 
 	# Use -mskip-rax-setup if supported.
 	KBUILD_CFLAGS += $(call cc-option,-mskip-rax-setup)

