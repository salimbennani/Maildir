Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:42:45 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 6A4A6580380;
	Mon, 10 Dec 2018 11:46:38 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 11:46:37 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AOvT+jRY/VsNA7UVgzEwhZMD/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpci8Yh7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyNOAo2+?=
 =?us-ascii?q?YIUPAeQPPvtWoZfhqFsVtRuzBxKhBP/zxjJSmnP6wbE23uYnHArb3AIgBdUOsH?=
 =?us-ascii?q?HModv7LqgSV/2+w6nJzTXHa/NW2C3y6I3Tchs8pvyDQKh/cczLxUktDQ/EgFSQ?=
 =?us-ascii?q?qYjhPzOUzOsNtnOb4vFhVeKpl24otQVxriKzyccrj4nEn4QYwU3H+yVh2Is5O8?=
 =?us-ascii?q?G0RUphbdK5HpZcqTuWO5Z1T88+WW1luSQ3xqUYtZKneCUG0pcqyh7FZ/CacoWF?=
 =?us-ascii?q?4AjvWPuVLDp5gn9uZaixiAyo8Ue6z+3xTsm030hOripCitTMqH8N2ALJ6sSdSf?=
 =?us-ascii?q?ty4F2h2TCR2ADX8O1EJlo0laXDJ54gxL4/iIYTvFzdEiPqnEj6lrKae0s69uSy?=
 =?us-ascii?q?9ujqYanqqoWdOoJ2kg3+N74hms27AeQ2KAgOWG2b9Py41L3i+035XbpLguQ1kq?=
 =?us-ascii?q?bHqpDaI9oUpqqgDw9S3Icj7QiwDy293dQGknkIMkhFdAiEj4f3IVHOJu73DfOl?=
 =?us-ascii?q?j1SrijdryOjKPqf9DZXVMnjDjLDhcK55605dywo808pT5p1JCrwaJPLzW0nxtM?=
 =?us-ascii?q?HXDxMjMgy0xfrnB8t51o8ERW2PBaqZOrvIsVCU/uIvP/WMZIgNtTb9Mfcl5uLu?=
 =?us-ascii?q?gmU+mVMHfampwIEYaHa3Hvl9J0WZYHzsgsoOEGsQvwo+SvDqh0OGUTJJe3myWK?=
 =?us-ascii?q?c87CkhCI26FYfDWpytgLuZ0Se5GZ1ZeHpKClOLEXfucYWEXOwBaCaTIs9njzwF?=
 =?us-ascii?q?WqKtS44n1RGyqgD6z6BrIfbT+i0drZjjzsR65/XPlREu8jx5F96S03qNT2FznW?=
 =?us-ascii?q?MEXSU207p9oUFmzleD0K54g+FXFNBJ5vNJVBs6OoDYz+BgF9/yXQfBdM+TSFm6?=
 =?us-ascii?q?WtWmHS0xTtUpzt8NeUl9Hc+ujhTC3yWwBb8VmKeGBJg18qLawnjwKNxxy3fA1K?=
 =?us-ascii?q?k9kVYmRtFDOnGhhq567wLTHZLGk12Fl6a2cqQRxDPC+32dzWWQpk1YUBR/UaPe?=
 =?us-ascii?q?XX8BYEvaqtD55kDHT7+qErknNgpBycifKqpFcNHpjFNGROv9N9TaeW6+h2CwBR?=
 =?us-ascii?q?OQzLOWcIXqY3kd3DnaCEUcjg8c52iGOhYkCiehuW3eCiduGkzpY0739el+qXW7?=
 =?us-ascii?q?TlI7zg2Qbk1h0aa19QARhfCGV/wT2bcEsj87qzpoBFa9w87WC92Yqgp9faVcZN?=
 =?us-ascii?q?Q94EtH1WPZrQB9IoasL6d4hl4acgR3uUzu2g5zCoVBl8gqsXwrwBBzKaKezFNO?=
 =?us-ascii?q?aTeY0YrsNb3QL2n45AqvZLLO2lHCzNaW/b8C5+48q1r9swCmCEoj/2983NlIzn?=
 =?us-ascii?q?ST/JPKDAkVUZLvSUs38xl6p7fHYigy/Y/U1HtsMbWqvT/Gwd4mGOwlyhO4dddF?=
 =?us-ascii?q?LKyEDBPyE9EdB8W2KO0qhkKlYQ4eMOFT9K47JcWmd/Sd1a6vPeZgmi+mjGtd7I?=
 =?us-ascii?q?B81EKM6zRzSurS05kZxPGY2xONVy3gg1e5rsD3hYdEaCkIHmq+1SfrHpRRabB1?=
 =?us-ascii?q?fYoRD2ehPde3xtRni5HxQXFY8EOsCE0c2M+ufxqfdFj93QxW1UQKrn2rgyq4zz?=
 =?us-ascii?q?pokz43qqqTxjDBw+PndBAfIG5EWHFijUvwIYizl90bXEmoYxIplRe//kb62q5b?=
 =?us-ascii?q?qb97L2nSR0dIYif3I3tjUqu2qrqNfcpP5Ik0viVQVeS2eUqaRaLloxsGzyPjGH?=
 =?us-ascii?q?NTxDIheDGwuZX5nBt6hHiGLHlpr3rZesBwxRHB69zaXvNR2jsGRC9liTjYHFS8?=
 =?us-ascii?q?Pt+p/cmKmJfHqOyxS2WhVphLeynx0YyArDe75XFtARCnn/G8gNrnHRI40S/60d?=
 =?us-ascii?q?lnTiHIrBf6Yon22KW2K+Nnfk90BFDi78p2AJ1xkow1hJsIw3gVmo2V/WYbkWf0?=
 =?us-ascii?q?Kdhb2rjxbHsXST4L3t7a+g7l2EJ4I3KNxoL5UGidw8R7a9m7ZGMWxjwy78RQBK?=
 =?us-ascii?q?iI67xEmDN/okCkogLJffh9gjAdxOMr6H4bgOEGohAhzyuDDbAJAUlXIzbsmA+W?=
 =?us-ascii?q?4NCko6Vaf2Kvcbm21EpjktGtFrCCogdAWHnnfpcuBzN/7sJ6MFjUyn389pnkeM?=
 =?us-ascii?q?XMbdIUrhCUjxDAj+1PJJMwjPUKgzdnOXnmvX0k0OM7iR1u3ZenvImIMWlt/aS5?=
 =?us-ascii?q?AgJGOT3xfc8c5jbtjaNGlMaMw4+vBolhGikMXJbwVv2nCjUStfD6NwqUFD08t2?=
 =?us-ascii?q?yWGb7eHQ+Z9UdnoGjDE5GtN3GLOnYZyc9uSwWaJExamAoURik1noYlFgC2w8zs?=
 =?us-ascii?q?aEV56SoU5lHmsRtA0P5oOwP8UmfCpweodzE0R4KELBdN6gFC5kHVMdGR7+5pHi?=
 =?us-ascii?q?FY+IGhoxKJKmCBewtICmQJUFSeB1//Jrmu+cXA8++AC+u+KPvOfKyOqfFEWPeO?=
 =?us-ascii?q?356vyYxm/zCDNsiUOnliDvs72ldMXHxjGsTZnSkPRDITly7Xc8GboxK88DVtrs?=
 =?us-ascii?q?+j6PTrRB7v5YyXBrtSL9pv+hO2gaSCN+KKhyZ5MzFY1pwSyn/S1bgfx0UfiyVv?=
 =?us-ascii?q?dzmrDLQBujTBTKPWmq9LEREbbzl/O9dP76I5xgNNI9LUisvp1r5kif44E01KVU?=
 =?us-ascii?q?H6lcGze8MLI3uxNFfGBEuQMLSGJDvLw9z4YK+mSL1QivlUuAO0uTqBD0DjOTGD?=
 =?us-ascii?q?nSHzVx+zKeFMkD2bPBtGtYGhcxZtDHLvQ878ZhKnMN94kzs2zKYwhnPLM24cLD?=
 =?us-ascii?q?d9f1lMrr2W8SNXnPF/F3Zd4XpiKOmOgzyZ4PXAKpYKrftrBTx5luJA73Q8zrtV?=
 =?us-ascii?q?7SdES+R0mSvStNFupV6mn/KLyjpmVhpOtzlKiJiKvUVkJaXW6J1AVWzY8xIK6G?=
 =?us-ascii?q?XDQygN8tJhB83mvaxd0J7P0q7uOTxB29bV+9YMQcnSNM+DdnEmNEnHAjnRWScM?=
 =?us-ascii?q?S3aUNGXbhkVYi7nG+nST6Jp8tZnonJsHT6RzVVopG/dcAUNgSo9RaKxrVy8pxO?=
 =?us-ascii?q?bIxPUD4mCz+VyIHJ1X?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AZAADhwQ5ch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgVqCESeDeogZjBApgWQUlz0UgRADTCwTAYdtIjQJDQEDAQEBAQE?=
 =?us-ascii?q?BAgETAQEBCA0JCCkjDII2JAGCYQEBAQECAQECIAQZAQE3AQQBCQEBCgsNAgIfB?=
 =?us-ascii?q?wICAx8SAQUBHBkFglFLgXoIBZpyPIodcHwzgnYBAQWHIggSeYsWeoEcgRGDEoR?=
 =?us-ascii?q?lBIMcMYImiRcagXqFEVGEV4sTBwKCJYgehwwYgVyJZoV7LIQmhVWOejCBJYIOT?=
 =?us-ascii?q?SOBAQaCNYIbDBcSgziKdB4zAQGBAwEBjBgBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AZAADhwQ5ch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBgVq?=
 =?us-ascii?q?CESeDeogZjBApgWQUlz0UgRADTCwTAYdtIjQJDQEDAQEBAQEBAgETAQEBCA0JC?=
 =?us-ascii?q?CkjDII2JAGCYQEBAQECAQECIAQZAQE3AQQBCQEBCgsNAgIfBwICAx8SAQUBHBk?=
 =?us-ascii?q?FglFLgXoIBZpyPIodcHwzgnYBAQWHIggSeYsWeoEcgRGDEoRlBIMcMYImiRcag?=
 =?us-ascii?q?XqFEVGEV4sTBwKCJYgehwwYgVyJZoV7LIQmhVWOejCBJYIOTSOBAQaCNYIbDBc?=
 =?us-ascii?q?SgziKdB4zAQGBAwEBjBgBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,339,1539673200"; 
   d="scan'208";a="44358774"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 10 Dec 2018 11:46:35 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729515AbeLJTna (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 10 Dec 2018 14:43:30 -0500
Received: from mail-oi1-f196.google.com ([209.85.167.196]:32825 "EHLO
        mail-oi1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727970AbeLJTna (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 10 Dec 2018 14:43:30 -0500
Received: by mail-oi1-f196.google.com with SMTP id c206so10027283oib.0
        for <linux-kernel@vger.kernel.org>; Mon, 10 Dec 2018 11:43:29 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=intel-com.20150623.gappssmtp.com; s=20150623;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=ZWbXmtNfJh7V5oDcbfdFWxGL8EBeD9YIn39i34tpgQA=;
        b=Zb7DbFyzhc1cqbKDm6LUfEYkUH4CvpS81D3WaSiO0tRgIRxssqnj/LKQ+mdKhdzY+I
         jL4PO/Q2QEiWzWWAYS5Ku5vtRDTLSSBov5SKAt7ulb+W9oJIhXABHSsD8Q3+KTbjhdPw
         Io/0pN3NqHIOGFs23F2mIgDSU9oMfzoMkV0F/TfrL317NKSoNFsNQfKufGvlHTaxC+xA
         0Hb09VsesjwlayC4zk1rLe4BI1Rq8pj00GV3pvBk2tUBF+NBIOEugtWu4hxhSJQDv+DT
         9U0YZr4hSO8+yRsBhtsLoB48PAUkHMKMcy36n/Q3gNsEXE4yAcvfeGDax/PHLNuk4ui0
         xclg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=ZWbXmtNfJh7V5oDcbfdFWxGL8EBeD9YIn39i34tpgQA=;
        b=j2EZXoW52xlsDY42S7HeMA9TTgpdgkxZrhD5F5HeNJWOBRr6x50sf1zuJi/GPpwfeb
         PKnSNBKV5B4zgm+xQB2Qlp4Dcwx9LPmjt+8u9oMXStzOKASDnpNpXAPKNWQdr6nCqMJj
         dNJS6USVVMRlb5VrsiZjxk0MEVL6jzWwW9qWFG9asnuX31pch4W+MSHHx/xmRxqMEgmY
         Siwca1iuLtj4lECh6L2P/J27zIKTdEPoa5a3Ez+BIC1I9AncmexhATU0WseAsvP/Xv94
         lKEEGSrPD7XaKl5BsMu10eDahfLg9b0g8gOZJlaXsYofWiJYzqgijaiSTw+dmjtxR1r6
         GsDg==
X-Gm-Message-State: AA+aEWbuoNY5BhpuXDq2akoG5JHfVCejUBhOEKt3jKB3rgg0qgyO9bqp
        Vi6ub2Oapb0eN1mT0pal+aizUgZnoOJsaB1LrBjBHJd4gVg=
X-Google-Smtp-Source: AFSGD/VgFJaaYtGtqAYo98LhhAf47yGL57Na4/yuyThY9jWQebcQBTTSMbyxtQ/wXUIlWdu5DmCXisM2QhqOzDHF6aY=
X-Received: by 2002:aca:d905:: with SMTP id q5mr8605934oig.0.1544471009304;
 Mon, 10 Dec 2018 11:43:29 -0800 (PST)
MIME-Version: 1.0
References: <154403054034.11544.3978949383914046587.stgit@ahduyck-desk1.jf.intel.com>
 <154403072403.11544.10419282512791659652.stgit@ahduyck-desk1.jf.intel.com>
 <CAPcyv4jH_Op-xHTd2FwQizPaWFx_2FE-pVsOLLmZAEK8EVPrYg@mail.gmail.com> <15b6817fd945a1622afe673b46b028bacefad72b.camel@linux.intel.com>
In-Reply-To: <15b6817fd945a1622afe673b46b028bacefad72b.camel@linux.intel.com>
From: Dan Williams <dan.j.williams@intel.com>
Date: Mon, 10 Dec 2018 11:43:17 -0800
Message-ID: <CAPcyv4i1RTrKYX0YpyCRE=pqt3pHBRiCGQq1wYUriLjKKTVA7A@mail.gmail.com>
Subject: Re: [driver-core PATCH v8 2/9] driver core: Establish order of
 operations for device_add and device_del via bitflag
To: alexander.h.duyck@linux.intel.com
Cc: Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        Greg KH <gregkh@linuxfoundation.org>,
        "Luis R. Rodriguez" <mcgrof@kernel.org>,
        linux-nvdimm <linux-nvdimm@lists.01.org>,
        Tejun Heo <tj@kernel.org>,
        Andrew Morton <akpm@linux-foundation.org>,
        Linux-pm mailing list <linux-pm@vger.kernel.org>,
        jiangshanlai@gmail.com, "Rafael J. Wysocki" <rafael@kernel.org>,
        "Brown, Len" <len.brown@intel.com>, Pavel Machek <pavel@ucw.cz>,
        zwisler@kernel.org, Dave Jiang <dave.jiang@intel.com>,
        bvanassche@acm.org
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, Dec 10, 2018 at 11:35 AM Alexander Duyck
<alexander.h.duyck@linux.intel.com> wrote:
>
> On Mon, 2018-12-10 at 10:58 -0800, Dan Williams wrote:
> > On Wed, Dec 5, 2018 at 9:25 AM Alexander Duyck
> > <alexander.h.duyck@linux.intel.com> wrote:
> > >
> > > Add an additional bit flag to the device struct named "dead".
> > >
> > > This additional flag provides a guarantee that when a device_del is
> > > executed on a given interface an async worker will not attempt to attach
> > > the driver following the earlier device_del call. Previously this
> > > guarantee was not present and could result in the device_del call
> > > attempting to remove a driver from an interface only to have the async
> > > worker attempt to probe the driver later when it finally completes the
> > > asynchronous probe call.
> > >
> > > Signed-off-by: Alexander Duyck <alexander.h.duyck@linux.intel.com>
> > > ---
> > >  drivers/base/core.c    |   11 +++++++++++
> > >  drivers/base/dd.c      |    8 ++++++--
> > >  include/linux/device.h |    5 +++++
> > >  3 files changed, 22 insertions(+), 2 deletions(-)
> > >
> > > diff --git a/drivers/base/core.c b/drivers/base/core.c
> > > index f3e6ca4170b4..70358327303b 100644
> > > --- a/drivers/base/core.c
> > > +++ b/drivers/base/core.c
> > > @@ -2075,6 +2075,17 @@ void device_del(struct device *dev)
> > >         struct kobject *glue_dir = NULL;
> > >         struct class_interface *class_intf;
> > >
> > > +       /*
> > > +        * Hold the device lock and set the "dead" flag to guarantee that
> > > +        * the update behavior is consistent with the other bitfields near
> > > +        * it and that we cannot have an asynchronous probe routine trying
> > > +        * to run while we are tearing out the bus/class/sysfs from
> > > +        * underneath the device.
> > > +        */
> > > +       device_lock(dev);
> > > +       dev->dead = true;
> > > +       device_unlock(dev);
> > > +
> > >         /* Notify clients of device removal.  This call must come
> > >          * before dpm_sysfs_remove().
> > >          */
> > > diff --git a/drivers/base/dd.c b/drivers/base/dd.c
> > > index 88713f182086..3bb8c3e0f3da 100644
> > > --- a/drivers/base/dd.c
> > > +++ b/drivers/base/dd.c
> > > @@ -774,6 +774,10 @@ static void __device_attach_async_helper(void *_dev, async_cookie_t cookie)
> > >
> > >         device_lock(dev);
> > >
> > > +       /* device is or has been removed from the bus, just bail out */
> > > +       if (dev->dead)
> > > +               goto out_unlock;
> > > +
> >
> > What do you think about moving this check into
> > __device_attach_driver() alongside all the other checks? That way we
> > also get ->dead checking through the __device_attach() path.
>
> I'm not really sure that is the best spot to do that. Part of the
> reason being that by placing it where I did we avoid messing with the
> runtime power management for the parent if it was already powered off.

...but this already a rare event and the parent shouldn't otherwise be
bothered by a spurious pm_runtime wakeup event.

> If anything I would say we could probably look at pulling the check out
> and placing the driver check in __device_attach_async_helper since from
> what I can tell the check is actually redundant in the non-async path
> anyway since __device_attach already had taken the device lock and
> checked dev->driver prior to calling __device_attach_driver.
>
> > ...and after that maybe it could be made a common helper
> > (dev_driver_checks()?) shared between __device_attach_driver() and
> > __driver_attach() to reduce some duplication.
>
> I'm not sure consolidating it into a function would really be worth the
> extra effort. It would essentially just obfuscate the checks and I am
> not sure you really save much with:
>         if (dev_driver_checks(dev))
> vs:
>         if (!dev->dead && !dev->driver)
>
> By the time you create the function and replace the few spots that are
> making these checks you would end up most likely adding more complexity
> to the kernel rather than reducing it any.

No, I was talking about removing this duplication in
__device_attach_driver() and __driver_attach():

        if (ret == 0) {
                /* no match */
                return 0;
        } else if (ret == -EPROBE_DEFER) {
                dev_dbg(dev, "Device match requests probe deferral\n");
                driver_deferred_probe_add(dev);
        } else if (ret < 0) {
                dev_dbg(dev, "Bus failed to match device: %d", ret);
                return ret;
        } /* ret > 0 means positive match */

...and lead in with a dev->dead check.
