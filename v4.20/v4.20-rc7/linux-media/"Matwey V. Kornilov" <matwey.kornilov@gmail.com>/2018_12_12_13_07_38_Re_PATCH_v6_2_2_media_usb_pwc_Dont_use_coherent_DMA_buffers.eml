Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 08:49:57 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 77A9F580380;
	Wed, 12 Dec 2018 05:08:00 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 12 Dec 2018 05:07:59 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AIMCqjRfsqXZdlqEtptllzn2DlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc6/bRyN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRODYOy?=
 =?us-ascii?q?bYQBD+QPM+VFoYfju1QAogC+BRGuCe701j9In2X70bEm3+g9EwzL2hErEdIUsH?=
 =?us-ascii?q?TTqdX4LKkeX+evw6nUwzTMcfNX0iry54TSbxsvpPaMXah2ccrQzUkvEB3FgluN?=
 =?us-ascii?q?ooHiOjOazPgNsmaF4OtgT+6viGknqxt3ojiuwscsjZfJi5kaylDB7yp5wYI1Kc?=
 =?us-ascii?q?ekR058ZN6pCZ1dvDyUOYtxR8MtWWBouCAix70doZ67fS4KyJU7yB7EcfCHdZaH?=
 =?us-ascii?q?4g7lWe2MIjl4nGpodKyjixu260Ss1+PxWteu3FpXrSdJjsPAu3EP2hDL9MSLVv?=
 =?us-ascii?q?9w8l2i1DuPzQzf9+BJLEIumabGL5MszLg9nYcJv0vZBC/5gkD2gbeWdko6/uio?=
 =?us-ascii?q?7PzqYqvpppCCLY94kAL+Pbo0msy5H+s4NhICX2+B+eSzzLHj/Ev5T6tWjvAujK?=
 =?us-ascii?q?XVrJTXKd4GqqO3HQNZyJsv5hWjAzu80dkVn2ELLFdfdxKGi4jpNUvOIPf9Dfqn?=
 =?us-ascii?q?h1SskTFrx+3JP7H4AZXCMGLDkLH/crZ58kJczwQyzdZB6JJOEbwBPv3zVVHrtN?=
 =?us-ascii?q?DCDR82LRa0w+D5B9V5zI8eXniPAqCBPKPIrVCI/v4vI/WLZIINvDb9Kvsl6OD0?=
 =?us-ascii?q?gX42hF8QZq2p3ZoRaHClEfVqOUSZYXzwgtgfFWcGpBYxTOvviFeaSz5ce26yX7?=
 =?us-ascii?q?4g5jE8EI+mDZ3MRoGxgLOb2ye3BJ1WZn1cBVCKHnflbIGEW/YKaCKPLc5tiD0E?=
 =?us-ascii?q?Vb69S4A/0RGirhP1y71iLuDM4C0XqYrj1MRp5+3UjRwy9zt0ANqH32GOSGF0mG?=
 =?us-ascii?q?UIRzgt0aB7oEx9zEqD0Kdij/xZE9xT++1GUgMgOZHAyOx6Dsj4WhjdcdeRVFam?=
 =?us-ascii?q?XtKmDCkrQdIqw98OZEV9F8+4jh/Z3SqnGLsVl72NBJwp/aPQxXnxJ8Bhy3nY0K?=
 =?us-ascii?q?ktlUUpQsxKNWe+nK5w6xDTB5LVk0Wej6uqdr4T3CjX+GeHzGqBpkdYUAFrXKXB?=
 =?us-ascii?q?XHAfYFbWrNvj6kPDSb+uFaooMg9bxcGeLatKb8XjjU9aS/f7JNTef2Wxln+tCh?=
 =?us-ascii?q?mS2LODcpDme2UH0yXbE0gLjQYT8XGCNQg9Ayehp3nTDDhvFVLpfkPt/vNyqHK9?=
 =?us-ascii?q?Tk8o0Q6Ka1dt2Kay+h4QnfacUe8c3qoYuCc9rDV5BEuy0MjIC9WevQZhfL9TYd?=
 =?us-ascii?q?Um4FhZ02LUrAh9Pp2mL6B/iV8SaQV3v0Xy1xppDoVMi9QlrHQvzABqM6KXzEtB?=
 =?us-ascii?q?dy+E3ZD3IrDXNmjy/BWoa67K2lHf0Mya+rsV5PQ/sVXjuACpFkwt83h819lV0n?=
 =?us-ascii?q?2c5ojFDQYIUJLxVFo3+AZ+p73AfiY94IbU32V2Maaoqj/Cx84pBOw9xxm6e9dQ?=
 =?us-ascii?q?LqyFGxHyEsEAHMeuNfEllEKvbhIHO+BS6rU5P8end/uAxa6qM/xsnDOgjWRb/o?=
 =?us-ascii?q?991liA+DZ7Su7Nx5wF2e2X3hObVzfgi1esqsD2mZ1eaT4OBGa+yCjkC5RXZq19?=
 =?us-ascii?q?ZosLDWauI8uqxtRxnZLtWnhY9EK9CFMCwsOmZR2Sb1nl1w1KyUsXuWCnmTe/zz?=
 =?us-ascii?q?FsiTEpr7aQ0zbUw+v/cxoLIGhLS3d4jVftOIS7k8oVXEy1YAc3jhul4kD6yrNf?=
 =?us-ascii?q?pKR+KWnTXEhJczL3L2FkTqu/qL6Cb9RT55MvtCVdSP68bkyCSr7hvxsa1DvuHm?=
 =?us-ascii?q?tfxDwhdzCmoI75nwF8iG+GKHZzrXzZedx/xBvF5dzcQ+JR0SQCRCVilTbXAV28?=
 =?us-ascii?q?NcGz/dqIj5fDrvy+V2W5W51Raybr14CAtCi85WFwGh2whfOzmt7mEQg8zyD70c?=
 =?us-ascii?q?JnVSHJrBb6f4nq2L62MeNhfkl0GlD879B2FZ15kos1nJsQw2QVho2J/Xoblmf+?=
 =?us-ascii?q?KdVa1rj5bHYXRz4LwtjV7RPh2E1iKHKJ2o34Wm+cwstne9m1fGcW1jgh4MBNDa?=
 =?us-ascii?q?ee9KZEkjdtolqksQLRZuBwnjQHxvsv8nIag/wJtxArziWSGb0SGUhYPSrxlxWH?=
 =?us-ascii?q?9dy+raNXZHqxfri0zkZxgdehDLSaqAFGRHn5YosiHTN37shnNVLM0X7z5Zv+dN?=
 =?us-ascii?q?jec90TrQGUnAnaj+dONp0xjPUKiDFjOWL8u30l1uE6gQZv3ZG8oIiINWFt8Lil?=
 =?us-ascii?q?DR5fMz3/f9kT9S31jaZCgsaW2JiiHolmGjUORpfpTOinEDQPtfT8LAaOESYxqn?=
 =?us-ascii?q?OaGbrZAA+e511qr3PJE5C3KX6XIGMVwsllRBmYPEZfmhwbXC0mnp4lEQCn3Nfu?=
 =?us-ascii?q?f11+5jAV+170sB9Myv9zOhn7U2ffohqoazguRJieKhpW8h9N50PPPcOC6eJzGj?=
 =?us-ascii?q?lS/oe9owyVNmybewNIAHkLWkOeAlDsIKKu6cPc8+SCBeq+MvjOYaiIqeNETPeF?=
 =?us-ascii?q?3pav0opg/zaROcSDJHhiD/sn2kVdWXB1AdjWmzIKSyYPjSLCc9abpAug+i1wts?=
 =?us-ascii?q?2+8PPrWB/25YuSEbRSN89j+wuxgaeFOO6dnyJ5KTde1pMRyn7E0rkf3FgOiy5w?=
 =?us-ascii?q?czmhC6gPtSnITKjIgK9YEwYbaz9vNMtP96883hdCOc/YitP21750lP01C01CVV?=
 =?us-ascii?q?zuhM6pf9EKI3qmOVPDBUaLMqmGJDLRz8H2Z6O8VaNfjOFOuxKsvjabFlfpPi6f?=
 =?us-ascii?q?mDnxSxCvLeZMgTmBMxxDo469aAhiCGj5QNLiax22K9t3jTwwwb0piXLGL28cMT?=
 =?us-ascii?q?5gc0xTqr2c9z9XgvJ6G2ZZ9HpqMfGEmzqF7+nfMpsWrfprAiFum+1G+ng117tV?=
 =?us-ascii?q?4z9CRPFunCvSr9huo0ypk+WVyzpnVgZOpShPhI6RoUpiPqDZ/IFaWXnY5BIN8X?=
 =?us-ascii?q?mQCxMSqtplENLvvaVQytnJlK3rKTZC88jb/c0TB8XPLMKHMXwhMQfmGTLODQsF?=
 =?us-ascii?q?SyKrOn/bh0BHjP6S8XiV/dAGrc3ImZwTWvd+WVA0H7s/A0VhHdoNaLN2RS9sxb?=
 =?us-ascii?q?qaitMYoH+zoBjYbNtVs4qBVf+IB/jrbjGDgu8ALxwQzLWwKYUIKsWv301kd0k/?=
 =?us-ascii?q?n4nQHUfUdc5CrzcnbQIupkhJtn9kQTtg9Vjib1bnxXYPCvOl1iBwwih5e+Is8D?=
 =?us-ascii?q?DyqR9jI1PWuyYh1ko2g9PkhTePWDH0Jaa0G4pRDnyn5AAKLprnTlMtPkWJlkt+?=
 =?us-ascii?q?OWKBHuoJgg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AXAADsBxFch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgmmBAieDe4N7hB6MEoINFJc/FIFfLAsIAYRAgn0iNAkNAQMBAQE?=
 =?us-ascii?q?BAQECARMBAQEIDQkIKSMMgjYkAYJiAQICAQECIAQZARsLEgEDAQEJAQEFAwILD?=
 =?us-ascii?q?wImAgIDHgEBBQwBBQEcBgEJCQWDHAGBaAEDDQgFCooEkAc8iw18FgUBF4J3BYR?=
 =?us-ascii?q?BChknDV2BNwIBBRJ5izGBVz+BEYMSgldHA4FJF4MEglcCiTOBfYUQVIRwilouB?=
 =?us-ascii?q?wICjTVwgzAYkUaIfSyGBIoDMIElgg5wgQGCO4IbDBcSgziEWYV9PDMBgQQBAYx?=
 =?us-ascii?q?8AQE?=
X-IPAS-Result: =?us-ascii?q?A0AXAADsBxFch0O0hNFjHAEBAQQBAQcEAQGBUQcBAQsBgmm?=
 =?us-ascii?q?BAieDe4N7hB6MEoINFJc/FIFfLAsIAYRAgn0iNAkNAQMBAQEBAQECARMBAQEID?=
 =?us-ascii?q?QkIKSMMgjYkAYJiAQICAQECIAQZARsLEgEDAQEJAQEFAwILDwImAgIDHgEBBQw?=
 =?us-ascii?q?BBQEcBgEJCQWDHAGBaAEDDQgFCooEkAc8iw18FgUBF4J3BYRBChknDV2BNwIBB?=
 =?us-ascii?q?RJ5izGBVz+BEYMSgldHA4FJF4MEglcCiTOBfYUQVIRwilouBwICjTVwgzAYkUa?=
 =?us-ascii?q?IfSyGBIoDMIElgg5wgQGCO4IbDBcSgziEWYV9PDMBgQQBAYx8AQE?=
X-IronPort-AV: E=Sophos;i="5.56,344,1539673200"; 
   d="scan'208";a="66469346"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 12 Dec 2018 05:07:57 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727627AbeLLNHx (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 12 Dec 2018 08:07:53 -0500
Received: from mail-oi1-f193.google.com ([209.85.167.193]:35670 "EHLO
        mail-oi1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726235AbeLLNHv (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 12 Dec 2018 08:07:51 -0500
Received: by mail-oi1-f193.google.com with SMTP id v6so14959789oif.2;
        Wed, 12 Dec 2018 05:07:50 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc:content-transfer-encoding;
        bh=+uiLBk4noeZtPZW+Y7JJbmN8TvyfyDY3zLWhFnh6duw=;
        b=h7eZjBfaywc3itUqDMyPMGLhPeSGqurG5RA8jYnmG3hBo5je13C5o3m8NC+IB/6Weg
         DTw4mkgTX9dCmWYHcIw0uln4ETQZrnQYbHEWonOh3ULdiKFSKkV49aXXa8PK4vdUcvOp
         IFDY5lDKXBtcQx0zsc5DiWs1hQ53PI2CcgO4BHXfIUvK4mYi2sz0ss1ZWo0t7W5Lnq4F
         33XoGDREhAWjOi/OI2x2/HaO4BzWcbvY/KTgAScCQd+iNKgYdKl05jGq5xEeXCI9yywZ
         T5+Vkv5LaXvHPHUAkjsVddUAeP38ifblgQNxrmhh9Hj/qFVBeBTwTmrtr6jiUyIkto5I
         pStw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc:content-transfer-encoding;
        bh=+uiLBk4noeZtPZW+Y7JJbmN8TvyfyDY3zLWhFnh6duw=;
        b=UuLwW7kqQP7jswhUwRxiUROtslYMbFv5pXskRqV7k6+TnVLX4cUQO2ZZrdx/NjMNiY
         mD1E3JKdsSXbTD9jTKsV2EbXJvaLtoMcMaU2JTnub+ENULGQzGwNPsUVKbe+m9VGYXnx
         mvqBbHrOdQcx6peMMW/S/72svqZc+El1lEvUv2HLNozSzI5j4p+EVbJEcwpjtLxzU2Aw
         s9eUsFwrbSihCMP1w8l5MmJBTDJSHN+qmISHbnr+Hf7x03/52gUn5JpG4NFRSihhdMwk
         BoHpTvmY9qUtsDcGWKMonvC/elaRnZaCMqwjezAgx10d78hP4wQm/CiErq5FhfWVso1k
         Q8Jg==
X-Gm-Message-State: AA+aEWaQssV/bVPr6tG1GthnfnyH/964+osWdtlxwfITbxmur/IGGbLC
        8lxUCtVwwFQ1N1FqJE4vIX2MD5bNIvVIQ2WUlcOvhw==
X-Google-Smtp-Source: AFSGD/WJFGtXR+yXwbRV/brwjx6Kbxz5IkcioPUsn+m89M8HsIF4TWH3bJQYUi673eYSCxRvYcvQVT7RvNBL5PkZRSQ=
X-Received: by 2002:aca:6545:: with SMTP id j5mr366836oiw.70.1544620069931;
 Wed, 12 Dec 2018 05:07:49 -0800 (PST)
MIME-Version: 1.0
References: <20181109190327.23606-1-matwey@sai.msu.ru> <20181109190327.23606-3-matwey@sai.msu.ru>
 <CAJs94Eb6Ev5O+Q_THYruxozSW2sTjWCrHhU8wciFNgYx7oCRuQ@mail.gmail.com> <CAJs94EYmRpUSnxzyt-8bdSwp3WgvOuqpt4b55wKQ41jDynFceg@mail.gmail.com>
In-Reply-To: <CAJs94EYmRpUSnxzyt-8bdSwp3WgvOuqpt4b55wKQ41jDynFceg@mail.gmail.com>
From: "Matwey V. Kornilov" <matwey.kornilov@gmail.com>
Date: Wed, 12 Dec 2018 16:07:38 +0300
Message-ID: <CAJs94EbrOqdn5=xEnyQEC6aqYh=Wojh3-wGxT325f5Q7wnc36w@mail.gmail.com>
Subject: Re: [PATCH v6 2/2] media: usb: pwc: Don't use coherent DMA buffers
 for ISO transfer
To: Linux Media Mailing List <linux-media@vger.kernel.org>,
        open list <linux-kernel@vger.kernel.org>
Cc: Tomasz Figa <tfiga@chromium.org>,
        Laurent Pinchart <laurent.pinchart@ideasonboard.com>,
        Alan Stern <stern@rowland.harvard.edu>,
        Ezequiel Garcia <ezequiel@collabora.com>,
        Hans de Goede <hdegoede@redhat.com>,
        Hans Verkuil <hverkuil@xs4all.nl>,
        Mauro Carvalho Chehab <mchehab@kernel.org>,
        Steven Rostedt <rostedt@goodmis.org>, mingo@redhat.com,
        Mike Isely <isely@pobox.com>,
        Bhumika Goyal <bhumirks@gmail.com>,
        Colin King <colin.king@canonical.com>,
        Kieran Bingham <kieran.bingham@ideasonboard.com>,
        keiichiw@chromium.org
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

=D0=BF=D1=82, 30 =D0=BD=D0=BE=D1=8F=D0=B1. 2018 =D0=B3. =D0=B2 15:20, Matwe=
y V. Kornilov <matwey.kornilov@gmail.com>:
>
> =D1=81=D1=80, 21 =D0=BD=D0=BE=D1=8F=D0=B1. 2018 =D0=B3. =D0=B2 21:15, Mat=
wey V. Kornilov <matwey.kornilov@gmail.com>:
> >
> > =D0=BF=D1=82, 9 =D0=BD=D0=BE=D1=8F=D0=B1. 2018 =D0=B3. =D0=B2 22:03, Ma=
twey V. Kornilov <matwey@sai.msu.ru>:
> > >
> > > DMA cocherency slows the transfer down on systems without hardware
> > > coherent DMA.
> > > Instead we use noncocherent DMA memory and explicit sync at data rece=
ive
> > > handler.
> > >
> > > Based on previous commit the following performance benchmarks have be=
en
> > > carried out. Average memcpy() data transfer rate (rate) and handler
> > > completion time (time) have been measured when running video stream a=
t
> > > 640x480 resolution at 10fps.
> > >
> > > x86_64 based system (Intel Core i5-3470). This platform has hardware
> > > coherent DMA support and proposed change doesn't make big difference =
here.
> > >
> > >  * kmalloc:            rate =3D (2.0 +- 0.4) GBps
> > >                        time =3D (5.0 +- 3.0) usec
> > >  * usb_alloc_coherent: rate =3D (3.4 +- 1.2) GBps
> > >                        time =3D (3.5 +- 3.0) usec
> > >
> > > We see that the measurements agree within error ranges in this case.
> > > So theoretically predicted performance downgrade cannot be reliably
> > > measured here.
> > >
> > > armv7l based system (TI AM335x BeagleBone Black @ 300MHz). This platf=
orm
> > > has no hardware coherent DMA support. DMA coherence is implemented vi=
a
> > > disabled page caching that slows down memcpy() due to memory controll=
er
> > > behaviour.
> > >
> > >  * kmalloc:            rate =3D  ( 94 +- 4) MBps
> > >                        time =3D  (101 +- 4) usec
> > >  * usb_alloc_coherent: rate =3D (28.1 +- 0.1) MBps
> > >                        time =3D  (341 +- 2) usec
> > >
> > > Note, that quantative difference leads (this commit leads to 3.3 time=
s
> > > acceleration) to qualitative behavior change in this case. As it was
> > > stated before, the video stream cannot be successfully received at AM=
335x
> > > platforms with MUSB based USB host controller due to performance issu=
es
> > > [1].
> > >
> > > [1] https://www.spinics.net/lists/linux-usb/msg165735.html
> > >
> > > Signed-off-by: Matwey V. Kornilov <matwey@sai.msu.ru>
> >
> > Ping
>
> Ping

Ping

>
> >
> > > ---
> > >  drivers/media/usb/pwc/pwc-if.c | 62 ++++++++++++++++++++++++++++++++=
+---------
> > >  1 file changed, 49 insertions(+), 13 deletions(-)
> > >
> > > diff --git a/drivers/media/usb/pwc/pwc-if.c b/drivers/media/usb/pwc/p=
wc-if.c
> > > index 53c111bd5a22..a81fb319b339 100644
> > > --- a/drivers/media/usb/pwc/pwc-if.c
> > > +++ b/drivers/media/usb/pwc/pwc-if.c
> > > @@ -159,6 +159,32 @@ static const struct video_device pwc_template =
=3D {
> > >  /*******************************************************************=
********/
> > >  /* Private functions */
> > >
> > > +static void *pwc_alloc_urb_buffer(struct device *dev,
> > > +                                 size_t size, dma_addr_t *dma_handle=
)
> > > +{
> > > +       void *buffer =3D kmalloc(size, GFP_KERNEL);
> > > +
> > > +       if (!buffer)
> > > +               return NULL;
> > > +
> > > +       *dma_handle =3D dma_map_single(dev, buffer, size, DMA_FROM_DE=
VICE);
> > > +       if (dma_mapping_error(dev, *dma_handle)) {
> > > +               kfree(buffer);
> > > +               return NULL;
> > > +       }
> > > +
> > > +       return buffer;
> > > +}
> > > +
> > > +static void pwc_free_urb_buffer(struct device *dev,
> > > +                               size_t size,
> > > +                               void *buffer,
> > > +                               dma_addr_t dma_handle)
> > > +{
> > > +       dma_unmap_single(dev, dma_handle, size, DMA_FROM_DEVICE);
> > > +       kfree(buffer);
> > > +}
> > > +
> > >  static struct pwc_frame_buf *pwc_get_next_fill_buf(struct pwc_device=
 *pdev)
> > >  {
> > >         unsigned long flags =3D 0;
> > > @@ -306,6 +332,11 @@ static void pwc_isoc_handler(struct urb *urb)
> > >         /* Reset ISOC error counter. We did get here, after all. */
> > >         pdev->visoc_errors =3D 0;
> > >
> > > +       dma_sync_single_for_cpu(&urb->dev->dev,
> > > +                               urb->transfer_dma,
> > > +                               urb->transfer_buffer_length,
> > > +                               DMA_FROM_DEVICE);
> > > +
> > >         /* vsync: 0 =3D don't copy data
> > >                   1 =3D sync-hunt
> > >                   2 =3D synched
> > > @@ -352,6 +383,11 @@ static void pwc_isoc_handler(struct urb *urb)
> > >                 pdev->vlast_packet_size =3D flen;
> > >         }
> > >
> > > +       dma_sync_single_for_device(&urb->dev->dev,
> > > +                                  urb->transfer_dma,
> > > +                                  urb->transfer_buffer_length,
> > > +                                  DMA_FROM_DEVICE);
> > > +
> > >  handler_end:
> > >         trace_pwc_handler_exit(urb, pdev);
> > >
> > > @@ -428,16 +464,15 @@ static int pwc_isoc_init(struct pwc_device *pde=
v)
> > >                 urb->dev =3D udev;
> > >                 urb->pipe =3D usb_rcvisocpipe(udev, pdev->vendpoint);
> > >                 urb->transfer_flags =3D URB_ISO_ASAP | URB_NO_TRANSFE=
R_DMA_MAP;
> > > -               urb->transfer_buffer =3D usb_alloc_coherent(udev,
> > > -                                                         ISO_BUFFER_=
SIZE,
> > > -                                                         GFP_KERNEL,
> > > -                                                         &urb->trans=
fer_dma);
> > > +               urb->transfer_buffer_length =3D ISO_BUFFER_SIZE;
> > > +               urb->transfer_buffer =3D pwc_alloc_urb_buffer(&udev->=
dev,
> > > +                                                           urb->tran=
sfer_buffer_length,
> > > +                                                           &urb->tra=
nsfer_dma);
> > >                 if (urb->transfer_buffer =3D=3D NULL) {
> > >                         PWC_ERROR("Failed to allocate urb buffer %d\n=
", i);
> > >                         pwc_isoc_cleanup(pdev);
> > >                         return -ENOMEM;
> > >                 }
> > > -               urb->transfer_buffer_length =3D ISO_BUFFER_SIZE;
> > >                 urb->complete =3D pwc_isoc_handler;
> > >                 urb->context =3D pdev;
> > >                 urb->start_frame =3D 0;
> > > @@ -488,15 +523,16 @@ static void pwc_iso_free(struct pwc_device *pde=
v)
> > >
> > >         /* Freeing ISOC buffers one by one */
> > >         for (i =3D 0; i < MAX_ISO_BUFS; i++) {
> > > -               if (pdev->urbs[i]) {
> > > +               struct urb *urb =3D pdev->urbs[i];
> > > +
> > > +               if (urb) {
> > >                         PWC_DEBUG_MEMORY("Freeing URB\n");
> > > -                       if (pdev->urbs[i]->transfer_buffer) {
> > > -                               usb_free_coherent(pdev->udev,
> > > -                                       pdev->urbs[i]->transfer_buffe=
r_length,
> > > -                                       pdev->urbs[i]->transfer_buffe=
r,
> > > -                                       pdev->urbs[i]->transfer_dma);
> > > -                       }
> > > -                       usb_free_urb(pdev->urbs[i]);
> > > +                       if (urb->transfer_buffer)
> > > +                               pwc_free_urb_buffer(&urb->dev->dev,
> > > +                                                   urb->transfer_buf=
fer_length,
> > > +                                                   urb->transfer_buf=
fer,
> > > +                                                   urb->transfer_dma=
);
> > > +                       usb_free_urb(urb);
> > >                         pdev->urbs[i] =3D NULL;
> > >                 }
> > >         }
> > > --
> > > 2.16.4
> > >
> >
> >
> > --
> > With best regards,
> > Matwey V. Kornilov
>
>
>
> --
> With best regards,
> Matwey V. Kornilov



--=20
With best regards,
Matwey V. Kornilov
