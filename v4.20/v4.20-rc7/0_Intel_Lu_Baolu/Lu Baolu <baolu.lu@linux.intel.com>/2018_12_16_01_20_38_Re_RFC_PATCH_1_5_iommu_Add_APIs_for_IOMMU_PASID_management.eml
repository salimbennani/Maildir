Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  16 Dec 2018 10:43:11 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 5E6255805FC;
	Sat, 15 Dec 2018 17:27:24 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 15 Dec 2018 17:27:23 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AqGq3FBTu9sQyiCjncMuEFapsbNpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YhWEt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZH42y?=
 =?us-ascii?q?cYUPAeoCM+hWoYbyqFkBogexCwm3HOPiyCRFhmP00KAgz+gtDQ/L0Q4mEtkTsH?=
 =?us-ascii?q?rUttL1NKIKXO6z0anD0CjOYOlR2Tf59YjDbxcsruqWUrJ3dcrR1FMjFwfYjliL?=
 =?us-ascii?q?rYzlPjWV1vkCsmSB7upgU/6vhHAjqw1rvjevwcIsh5DPi4kIyV7E7T10zJgpKd?=
 =?us-ascii?q?C8UkJ3fNCpHIVKuy2HNIZ6XtkuTmBqtSoi17ELt5G2cDIXxJkpyBPTceGLfoaJ?=
 =?us-ascii?q?7x75SuqdPTF1j29/dr2lnRa9602gx/X8Vsaq1FZKqTJIksfDtn8TzRzf8MuHRe?=
 =?us-ascii?q?Vn/kenxzmP0xrf6uZeIUA7jabbKpghzaAslpcLr0jPAiv7lF/rgKKYaEko4PWk?=
 =?us-ascii?q?5uf7brn8p5KRNZd4igTkPaQvnsy/D/44Mg8LX2WD/eS81bvj/VD2QblTjf05jL?=
 =?us-ascii?q?PZsJbEKsQfv6K5BAFU0oA95BalFDqmztsYkmcdLF5fexKIkZLpO1fQL/D8F/u/?=
 =?us-ascii?q?hE6skDhzy/DcIrLhGonNLmTEkLr5ebZ96k1cxxQpwdFQ+pJZEbUBIPP1Wk/su9?=
 =?us-ascii?q?3UFB45Mwqow+n5DNVxzJ8RWWWKAqWBKqPdrUeI5v4zI+mLfIIVuCzyK/k55/H0?=
 =?us-ascii?q?in81g18dfbSz0psRZ3C1BfBmI0SfYXrxjdYNC2YKvgwiTOP0jF2OSyJcZ3G3X6?=
 =?us-ascii?q?gk/DE0FJqmDZvfRoCqmLGB3iC7EYNMamBFDVCMF3Hod4KfVvcIaSKSJNJhkzMe?=
 =?us-ascii?q?WbigTY8hyQ+htAvgx7V7KerU/zUStYj/29ht++3TiRYy+CRuAMSG02GNSGJ0kn?=
 =?us-ascii?q?kSRzAs3qByukh9ylaF0ahljP1UD91T5/VVUggkMZ7Q1fB1C9f3WgjZZNeGVE6m?=
 =?us-ascii?q?Qsm6ATE2Vt8xwMUBY0BnF9WmjxDMxSyqA7AOmryPBZw09L/c3nfrK8Z8zXbGyL?=
 =?us-ascii?q?cuj108TsRTMm2mg7Z19xLPCI7Rj0WZi6GqeLwB0yHX6meM03CCvEFCXw52SqXK?=
 =?us-ascii?q?Q3YfakzSrdT640PCS6SjCbAmMgtH1M6DJbFGatzvjVVaWvjjPM7SbH62m2e1HR?=
 =?us-ascii?q?yI3K+DbJL2e2UB2yXQEFULnBoN/XmYLwQ+Bj2uo2TFDDNwE1LieEfs8eh4qHOm?=
 =?us-ascii?q?QU441QCKb0t917Wr/h4Zn+CTS/QW3rgcoicuty10HEqh39LRE9eAuwthfKBbYd?=
 =?us-ascii?q?Mh4FdG1XjVtxBnMpynNaBigl8ecwJ4v0710xV3C4NAkdUlrX8wzQpyL76Y301F?=
 =?us-ascii?q?dz+CwZ/wPbjXIHHo/B+zc67Wxk3e0NGO96gV7PQ3tVrisx+pF0Y46HpnzsRa3G?=
 =?us-ascii?q?Ga5pXJCwoST4n8UkI29xh8urHbbTMx54LS1X1wL6a0tiXO1M4uBOsg0hygZctQ?=
 =?us-ascii?q?MLuYFA/uFM0XH8ivKPEwl1e1dB4FPeBS+7QyP8OpbPaG3K+rPOB9nDOpl2hH4Y?=
 =?us-ascii?q?Z90l6S+Cp4UOLHw5EFw/SA1AudSzj8lEuhstzwmY1cfzESH3awxjL+BIFMYa1+?=
 =?us-ascii?q?Z4ALBnm0I82239lxm4TiW3pF+1G9HVMG38mpdAGWb1z82w1QyEsWrWammSu+0z?=
 =?us-ascii?q?x7jTUporCD0yzJxuTobAAHNXJTRGl+kVfsJpC5jtAbXESybwkljgCl5Vv8x6VA?=
 =?us-ascii?q?oKR/Lm/TQVpHfiTsLmFiVLewuaSGY8JV9JwotiBXWvymYV+GUr79vwca0yT7Em?=
 =?us-ascii?q?tc3j87bTKqupb+nxBgk2KSNnVzrHnYecF22xjf4sfRRfpQ3joAWSl5hiPbBlm6?=
 =?us-ascii?q?P9m149qUk43Pvfy5V2KkTpdTazXkzZuctCun4m1nGR2+kOq0mtH9Ewg60Cn72s?=
 =?us-ascii?q?JuVSXJqhb8f4bq2767MeJhYklnGlv859BmFYF5l4s6nIsQ1mQChpWJ4XoHln/+?=
 =?us-ascii?q?MdZB1qL/dnYNRSMLzMTT4Ajqw0BjKnOJx4TkVnSS2MdhZt+6Yn8I1SI59cxFFK?=
 =?us-ascii?q?CU7LlclytvvlW4tR7RYeR6njoFzPsu6X0ajPsTtAsj0CqdGawSEldCPSP3iRuI?=
 =?us-ascii?q?9d++ob5TZGaud7iwyUV/kcqgDLGEvgFTRnL5do0+Ei9368V1KEjM32Hr6oH4ZN?=
 =?us-ascii?q?nQasoetgGTkxfFleRUKYg+lvwXhSp8ImL9vGYoy+o6jRxowJG7s5KLK2Rr/KKl?=
 =?us-ascii?q?HBFYMif5aN8U+jHolaxehNqZ35izHpV9HTUGRIDnQuivEDIWqPTrLQKOECAnp3?=
 =?us-ascii?q?efGLrfGxKf6Uh8o3LOFZCrK2+YJH0Dwdp+QxmdIVRVgBoIUzUigp45CgeqydTj?=
 =?us-ascii?q?cEhj4zAe+EX4pgFQyu5yNBn/T2TfpBquajguU5iSNx5W7gBE50fIPs2S9ONzHy?=
 =?us-ascii?q?dE/pK/qAyBMHCUZwNNDWsRQEyLG0jjPqWy5dnH6+WZBu2+L+bXYbWTs+NeUe2E?=
 =?us-ascii?q?xYmo0otg8DaBLcGPPnhkD/0m1UtPR3F5G8LFmzoRTywbjT7Cb8mepB2k4C14st?=
 =?us-ascii?q?i/8Oj3WALo/YaPC6VdMdRs+xC1gKePLe2QhDx+KTZXyJwM32LIyKME0V4WiiFu?=
 =?us-ascii?q?cSStELsauS7MSqLQhrFYDxoBZyxvM8tI6ro23hNRNs7DltP1yrl4g+YvBFdYTl?=
 =?us-ascii?q?PhgN+mZMwQL2G5NVPKH0KLNLWAJT3WzMD7e6K8SbtMjOpKsx28oyqUE0jmPj6b?=
 =?us-ascii?q?jTnmSwivMf1QjCGcJBFepIC9chN3BWf/Vt7pdh27P8FxjTAtxb00h3XKNXMTMD?=
 =?us-ascii?q?RmckNNqKGQ4j1cgvllB2NB6X9lJ/GemymF9+nYNooWsfxzDyV0je1a5nE6y7pT?=
 =?us-ascii?q?7C5cRf11mDHdrthho1y9lumPyzxnUAdBqzpRhYKLu1liNrvd9pVaRXnE+xcNvi?=
 =?us-ascii?q?2sDEFAg9p4TpXeuuh0gJCbhaO1LHFG8s/8/M0ACsySI8WCZj5pEx3kAjGcNgwI?=
 =?us-ascii?q?QTOvfTXdgFZauKGY52GYtd49sJe63NIiQ6FaWBQKEfQWCkN4B9FKdJtoWyx+ub?=
 =?us-ascii?q?+dgtQB6Xe3oF/WXsoM+tjuUv+CScruLDKYhLxfYB1Albr8IJRVKYz/301rb0J9?=
 =?us-ascii?q?mqzQFkbQVMwLqSpkOEt8g0RX7Hk2cWQ12ELoZg7ltHwMHPi3nhM6hyN4f+Uh9T?=
 =?us-ascii?q?6q6FAycAnkviw1xW0s0f/shjSMOGr7JaC0QMdSFgLwtk4sItX6RRp4aUu5mkky?=
 =?us-ascii?q?Z2SMfK5Yk7Y1LTMjswTbo5YaXKcEFaA=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ACAABLqRVch0O0hNFkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGDWRIng3yIGV+LFoFgLRSXRIFzFBgTAYdHIjQJDQE?=
 =?us-ascii?q?DAQEBAQEBAgETAQEBCgsJCCkjDII2JAGCYQEBAQEDAQIgFUEGCQEBChEEAQEBA?=
 =?us-ascii?q?gIjAwICA0MJCAYBCQMGAgEBAYMdggEFpG6BL4QCAYE9hFyBC4dHg2yCFoE4gW1?=
 =?us-ascii?q?QLoFUhjWCVwKJc4FDhF42kE8HApFUBhhfkHOJPJAogUZggS5NI10NglKCJxeHN?=
 =?us-ascii?q?YYxAUMyAQExAQGBAwEBjQcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ACAABLqRVch0O0hNFkGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGDWRIng3yIGV+LFoFgLRSXRIFzFBgTAYdHIjQJDQEDAQEBAQEBAgETA?=
 =?us-ascii?q?QEBCgsJCCkjDII2JAGCYQEBAQEDAQIgFUEGCQEBChEEAQEBAgIjAwICA0MJCAY?=
 =?us-ascii?q?BCQMGAgEBAYMdggEFpG6BL4QCAYE9hFyBC4dHg2yCFoE4gW1QLoFUhjWCVwKJc?=
 =?us-ascii?q?4FDhF42kE8HApFUBhhfkHOJPJAogUZggS5NI10NglKCJxeHNYYxAUMyAQExAQG?=
 =?us-ascii?q?BAwEBjQcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,359,1539673200"; 
   d="scan'208";a="67011587"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 15 Dec 2018 17:27:22 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729623AbeLPBYT (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sat, 15 Dec 2018 20:24:19 -0500
Received: from mga02.intel.com ([134.134.136.20]:32192 "EHLO mga02.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727227AbeLPBYT (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 15 Dec 2018 20:24:19 -0500
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga007.jf.intel.com ([10.7.209.58])
  by orsmga101.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 15 Dec 2018 17:24:17 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,359,1539673200"; 
   d="scan'208";a="99054648"
Received: from allen-box.sh.intel.com (HELO [10.239.161.122]) ([10.239.161.122])
  by orsmga007.jf.intel.com with ESMTP; 15 Dec 2018 17:24:13 -0800
Cc: baolu.lu@linux.intel.com, "Raj, Ashok" <ashok.raj@intel.com>,
        "Kumar, Sanjay K" <sanjay.k.kumar@intel.com>,
        "Pan, Jacob jun" <jacob.jun.pan@intel.com>,
        "Tian, Kevin" <kevin.tian@intel.com>,
        Jean-Philippe Brucker <jean-philippe.brucker@arm.com>,
        "Sun, Yi Y" <yi.y.sun@intel.com>,
        "peterx@redhat.com" <peterx@redhat.com>,
        "Bie, Tiwei" <tiwei.bie@intel.com>,
        "Zeng, Xin" <xin.zeng@intel.com>,
        "iommu@lists.linux-foundation.org" <iommu@lists.linux-foundation.org>,
        "kvm@vger.kernel.org" <kvm@vger.kernel.org>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        Jacob Pan <jacob.jun.pan@linux.intel.com>
Subject: Re: [RFC PATCH 1/5] iommu: Add APIs for IOMMU PASID management
To: "Liu, Yi L" <yi.l.liu@intel.com>, Joerg Roedel <joro@8bytes.org>,
        David Woodhouse <dwmw2@infradead.org>,
        Alex Williamson <alex.williamson@redhat.com>,
        Kirti Wankhede <kwankhede@nvidia.com>
References: <20181112064501.2290-1-baolu.lu@linux.intel.com>
 <20181112064501.2290-2-baolu.lu@linux.intel.com>
 <A2975661238FB949B60364EF0F2C257439D8E060@SHSMSX104.ccr.corp.intel.com>
From: Lu Baolu <baolu.lu@linux.intel.com>
Message-ID: <63ba6b78-ab31-4f54-002c-4c3baf818d3e@linux.intel.com>
Date: Sun, 16 Dec 2018 09:20:38 +0800
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <A2975661238FB949B60364EF0F2C257439D8E060@SHSMSX104.ccr.corp.intel.com>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi,

On 12/16/18 6:38 AM, Liu, Yi L wrote:
>> From: Lu Baolu [mailto:baolu.lu@linux.intel.com]
>> Sent: Sunday, November 11, 2018 10:45 PM
>> Subject: [RFC PATCH 1/5] iommu: Add APIs for IOMMU PASID management
>>
>> This adds APIs for IOMMU drivers and device drivers to manage the PASIDs used for
>> DMA transfer and translation. It bases on I/O ASID allocator for PASID namespace
>> management and relies on vendor specific IOMMU drivers for paravirtual PASIDs.
>>
>> Below APIs are added:
>>
>> * iommu_pasid_init(pasid)
>>    - Initialize a PASID consumer. The vendor specific IOMMU
>>      drivers are able to set the PASID range imposed by IOMMU
>>      hardware through a callback in iommu_ops.
>>
>> * iommu_pasid_exit(pasid)
>>    - The PASID consumer stops consuming any PASID.
>>
>> * iommu_pasid_alloc(pasid, min, max, private, *ioasid)
>>    - Allocate a PASID and associate a @private data with this
>>      PASID. The PASID value is stored in @ioaisd if returning
>>      success.
>>
>> * iommu_pasid_free(pasid, ioasid)
>>    - Free a PASID to the pool so that it could be consumed by
>>      others.
>>
>> This also adds below helpers to lookup or iterate PASID items associated with a
>> consumer.
>>
>> * iommu_pasid_for_each(pasid, func, data)
>>    - Iterate PASID items of the consumer identified by @pasid,
>>      and call @func() against each item. An error returned from
>>      @func() will break the iteration.
>>
>> * iommu_pasid_find(pasid, ioasid)
>>    - Retrieve the private data associated with @ioasid.
>>
>> Cc: Ashok Raj <ashok.raj@intel.com>
>> Cc: Jacob Pan <jacob.jun.pan@linux.intel.com>
>> Cc: Kevin Tian <kevin.tian@intel.com>
>> Cc: Jean-Philippe Brucker <jean-philippe.brucker@arm.com>
>> Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
>> ---
>>   drivers/iommu/Kconfig |  1 +
>>   drivers/iommu/iommu.c | 89 +++++++++++++++++++++++++++++++++++++++++++
>>   include/linux/iommu.h | 73 +++++++++++++++++++++++++++++++++++
>>   3 files changed, 163 insertions(+)
>>
>> diff --git a/drivers/iommu/Kconfig b/drivers/iommu/Kconfig index
>> d9a25715650e..39f2bb76c7b8 100644
>> --- a/drivers/iommu/Kconfig
>> +++ b/drivers/iommu/Kconfig
>> @@ -1,6 +1,7 @@
>>   # IOMMU_API always gets selected by whoever wants it.
>>   config IOMMU_API
>>   	bool
>> +	select IOASID
>>
>>   menuconfig IOMMU_SUPPORT
>>   	bool "IOMMU Hardware Support"
>> diff --git a/drivers/iommu/iommu.c b/drivers/iommu/iommu.c index
>> 0b7c96d1425e..570b244897bb 100644
>> --- a/drivers/iommu/iommu.c
>> +++ b/drivers/iommu/iommu.c
>> @@ -2082,3 +2082,92 @@ void iommu_detach_device_aux(struct iommu_domain
>> *domain, struct device *dev)
>>   	}
>>   }
>>   EXPORT_SYMBOL_GPL(iommu_detach_device_aux);
>> +
>> +/*
>> + * APIs for PASID used by IOMMU and the device drivers which depend
>> + * on IOMMU.
>> + */
>> +struct iommu_pasid *iommu_pasid_init(struct bus_type *bus) {
> 
> I'm thinking about if using struct iommu_domain here is better
> than struct bus_type. The major purpose is to pass iommu_ops
> in it and route into iommu-sublayer. iommu_domain may be
> better since some modules like vfio_iommu_type1 would use
> iommu_domain more than bus type.

But drivers might call this during initialization when it doesn't has
any domain yet.

Best regards,
Lu Baolu
