Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 08:52:09 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 3247658079D
	for <like.xu@linux.intel.com>; Wed, 12 Dec 2018 07:41:36 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 12 Dec 2018 07:41:35 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3ApQpmox2EXMqrmkIlsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?seMXLvad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7S60/Vza/4KdxUBLmiD?=
 =?us-ascii?q?kJOTA6/m/QiMNwgq1Urw6uqRJi247ZYoObOfVjcq7TYd8VW3FBU91NVyFCGI6w?=
 =?us-ascii?q?c5ECA/YDMOtesoLzp0EOrRy7BQS0Hu3g0DhIhnvx3aYnzukhFgfG3Q0hH9IIsX?=
 =?us-ascii?q?TfsdL4NL8JXuCyyqnJzDTDb/VX2Trm8ojHbA0uofGWUrJsa8be1U4vFwbcg1iW?=
 =?us-ascii?q?tIfrPCuV2/wTv2SH7OdsT/+jh3Mkpg1rvDSiyMchhpPUio8X0lzJ8St0zJw1KN?=
 =?us-ascii?q?C5UkJ3fN+pHZpKuyyaMYZ9X9ksTHtyuCkgz70LoZ67czYOyJQg3xPfb/2Hc5OU?=
 =?us-ascii?q?4hL4TuqRLjF4hG9/dLK4nRay/lCsyuz6VsaqzFZHtjRJnsXPu3wXyhDf98uKRu?=
 =?us-ascii?q?Fj8kqv2TuDzR3f5+NcLUAxj6XbKpohwrAqlpoUtETOBjb2l1vzjK+Lb0kr5/an?=
 =?us-ascii?q?6/r5bbXiv5OTLIh0ihz4MqsyhMO/GuM0MgwPX2iY5+uwzrLi/VDhTbVOj/02lL?=
 =?us-ascii?q?TZsZ/AKcQaoK65HxFa0oI55xmjCDem1c8VnX8ALFJDdxKHiZXpN0vJIPDiAvez?=
 =?us-ascii?q?m06snytzx/DaIr3hBY3ALnzCkLfiY7lx8UFdyBcowNBb5pJUDKwBIf3pVk/wst?=
 =?us-ascii?q?zYEgE2Mwiuz+n7D9V909BWZGSUH6XMML/OqUTaoaUrIvKQf8kTvzDyLeVj4OTh?=
 =?us-ascii?q?ynowmFsYdK/u2oMLaXe+BbN/LkCEJHbhnNoFQloMpRc0GenjiVmeVmxKanOvGq?=
 =?us-ascii?q?4x+Dw/TZirFJrOXZyFhruH0yGmWJpMaTddF1qOHHz0IpiCQOoGcymII8VswQAD?=
 =?us-ascii?q?AKGsTpJk2RywuQvSzb1hIezJvCoCusHNzt9wstXakhU1vRZzCdac1WDFG3l+mW?=
 =?us-ascii?q?UaRjk39LpyrUx01hGI1q0u0K8QLsBa+/4cClRyDpXb1eEvU90=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BHAACkKxFcmBHrdtBkHgEGBwaBUggLA?=
 =?us-ascii?q?YEwgmKDe4h4izOZYIFzEgEBGBSHPiI1CA0BAwEBAQEBAQIBEwEBAQEBCAsLBhs?=
 =?us-ascii?q?OIwyCNgUCAxgJglwDAwECIAQLAQ0BBQoqAgECAQIGAQEFHwIYCgQCAgMBMAEFA?=
 =?us-ascii?q?RwZBYMcgWoDFQEDAZopPIsNfDOCdwWCRIJEDYIUAgYSeYZyhD8XgUA/gRGLF4J?=
 =?us-ascii?q?XAo9FhVKLIFUJikqHDQIWiWmHXZkYAgQCBAUCBQ8hgSYBggwzGggbFTuCbIIbD?=
 =?us-ascii?q?BeDSopUcYEEA4sFgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0BHAACkKxFcmBHrdtBkHgEGBwaBUggLAYEwgmKDe4h4izO?=
 =?us-ascii?q?ZYIFzEgEBGBSHPiI1CA0BAwEBAQEBAQIBEwEBAQEBCAsLBhsOIwyCNgUCAxgJg?=
 =?us-ascii?q?lwDAwECIAQLAQ0BBQoqAgECAQIGAQEFHwIYCgQCAgMBMAEFARwZBYMcgWoDFQE?=
 =?us-ascii?q?DAZopPIsNfDOCdwWCRIJEDYIUAgYSeYZyhD8XgUA/gRGLF4JXAo9FhVKLIFUJi?=
 =?us-ascii?q?kqHDQIWiWmHXZkYAgQCBAUCBQ8hgSYBggwzGggbFTuCbIIbDBeDSopUcYEEA4s?=
 =?us-ascii?q?FgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,344,1539673200"; 
   d="scan'208";a="44669332"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 12 Dec 2018 07:41:28 -0800
Received: from localhost ([::1]:45653 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gX6db-00073b-QK
	for like.xu@linux.intel.com; Wed, 12 Dec 2018 10:41:27 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:52390)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <paolo.bonzini@gmail.com>) id 1gX6Mc-0000tb-AZ
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 10:23:58 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <paolo.bonzini@gmail.com>) id 1gX6MY-0000H1-Ti
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 10:23:54 -0500
Received: from mail-wm1-x32b.google.com ([2a00:1450:4864:20::32b]:50376)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <paolo.bonzini@gmail.com>)
	id 1gX6MY-0000Ea-A7
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 10:23:50 -0500
Received: by mail-wm1-x32b.google.com with SMTP id n190so6209731wmd.0
	for <qemu-devel@nongnu.org>; Wed, 12 Dec 2018 07:23:49 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
	h=sender:from:to:subject:date:message-id:in-reply-to:references
	:mime-version:content-transfer-encoding;
	bh=m+S9G74m3JSBEClKOiJM8gEL38X3fTn+quy9Nw7kZWA=;
	b=qRCdDvAgmqBp80tDq9nTY3cknh7Slw2GQmXGB68z9mtPzBi3rvpepXqCyusRCh2UYO
	zRKHBa47SNNISEZhM7KW+VWfgBV7uAwwod+VsIyp3i9oTX76lhdGIldcF3sThU0nvErZ
	3wYnIgeupBd4iNF5V1GAgmM0Dwcpsb1rTdRbHEt3DXrFZbi6s31k5Gfzjtbt5iJ0wIxL
	Oq5kMt3GRf2hi/1koVtWxix2vSQ8PLW2jB3fL4pzxaQ8GDgqoy2v9XUNQCfRk6jd4ZQ0
	S4vDvZkIAWV7P98EmfionysYyZEGN6eBZ0v3ps3dr4bZoQ3nbCHO7cG+z/DfXkwNd6fC
	WbdA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:sender:from:to:subject:date:message-id
	:in-reply-to:references:mime-version:content-transfer-encoding;
	bh=m+S9G74m3JSBEClKOiJM8gEL38X3fTn+quy9Nw7kZWA=;
	b=UDjeR4AykpwNYEEsT6o77YKwiQFwS7kIh+ZbC7jQOdXyGhskgMTSEcDb7pf1wg2UYB
	GenQs67hXaGRBoKXuzEkebAdttAsrEgGAIcKvJ+Nj4d4mkyysX53BMCPpjeugLWMMe57
	vXcB3u0b4xfX132awAAibk0BzJMSKYs8ABsTSZ8eHAa941q8d1sOma6vTLhGWkIfAVF7
	fe9p3H1NYWgxBtI/XzGp5pI5UU/mV3biriwvQrufeE+BQOd8TU0o6YKPxiHhgVtEbIFB
	NFgGt1tXQ3/sz4Q+6s1WzcICEoI3ybO9cg5hgIOVds3LGhXcHvuZLSl4LtjwAAVNaakz
	VL6w==
X-Gm-Message-State: AA+aEWbr/dNCY9jcFNrPC4djpaIN3W7HKULnAjRHPW/yp9T3cLptB6dT
	78JEmpBNWR8KLfYPE6/2+kp98P2p
X-Google-Smtp-Source: AFSGD/Vd5kLoXEfpW/ORhXCSGDYtbzECOryAHm5V9cLstrc+mT0pfc863ainONjYZtTfUHsxxW6zAQ==
X-Received: by 2002:a1c:2d42:: with SMTP id t63mr7042897wmt.9.1544628228595;
	Wed, 12 Dec 2018 07:23:48 -0800 (PST)
Received: from 640k.lan ([93.56.166.5]) by smtp.gmail.com with ESMTPSA id
	u10sm15878859wrr.33.2018.12.12.07.23.47 for <qemu-devel@nongnu.org>
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Wed, 12 Dec 2018 07:23:47 -0800 (PST)
From: Paolo Bonzini <pbonzini@redhat.com>
To: qemu-devel@nongnu.org
Date: Wed, 12 Dec 2018 16:22:49 +0100
Message-Id: <1544628195-37728-29-git-send-email-pbonzini@redhat.com>
X-Mailer: git-send-email 1.8.3.1
In-Reply-To: <1544628195-37728-1-git-send-email-pbonzini@redhat.com>
References: <1544628195-37728-1-git-send-email-pbonzini@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2a00:1450:4864:20::32b
Subject: [Qemu-devel] [PULL 28/54] qemu/queue.h: typedef QTAILQ heads
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

This will be needed when we change the QTAILQ head and elem structs
to unions.  However, it is also consistent with the usage elsewhere
in QEMU for other list head structs (see for example FsMountList).

Note that most QTAILQs only need their name in order to do backwards
walks.  Those do not break with the struct->union change, and anyway
the change will also remove the need to name heads when doing backwards
walks, so those are not touched here.

Reviewed-by: Philippe Mathieu-Daud√© <philmd@redhat.com>
Reviewed-by: Markus Armbruster <armbru@redhat.com>
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
---
 exec.c                        |  3 ++-
 hw/vfio/common.c              |  2 +-
 include/hw/vfio/vfio-common.h |  3 ++-
 include/qom/cpu.h             |  5 +++--
 ui/input.c                    | 14 ++++++++------
 5 files changed, 16 insertions(+), 11 deletions(-)

diff --git a/exec.c b/exec.c
index b6b2007..a629c98 100644
--- a/exec.c
+++ b/exec.c
@@ -94,7 +94,8 @@ int target_page_bits;
 bool target_page_bits_decided;
 #endif
 
-struct CPUTailQ cpus = QTAILQ_HEAD_INITIALIZER(cpus);
+CPUTailQ cpus = QTAILQ_HEAD_INITIALIZER(cpus);
+
 /* current CPU in the current thread. It is only valid inside
    cpu_exec() */
 __thread CPUState *current_cpu;
diff --git a/hw/vfio/common.c b/hw/vfio/common.c
index 7aa804e..4262b80 100644
--- a/hw/vfio/common.c
+++ b/hw/vfio/common.c
@@ -37,7 +37,7 @@
 #include "trace.h"
 #include "qapi/error.h"
 
-struct vfio_group_head vfio_group_list =
+VFIOGroupList vfio_group_list =
     QLIST_HEAD_INITIALIZER(vfio_group_list);
 static QLIST_HEAD(, VFIOAddressSpace) vfio_address_spaces =
     QLIST_HEAD_INITIALIZER(vfio_address_spaces);
diff --git a/include/hw/vfio/vfio-common.h b/include/hw/vfio/vfio-common.h
index 127ca47..7624c9f 100644
--- a/include/hw/vfio/vfio-common.h
+++ b/include/hw/vfio/vfio-common.h
@@ -180,7 +180,8 @@ int vfio_get_device(VFIOGroup *group, const char *name,
                     VFIODevice *vbasedev, Error **errp);
 
 extern const MemoryRegionOps vfio_region_ops;
-extern QLIST_HEAD(vfio_group_head, VFIOGroup) vfio_group_list;
+typedef QLIST_HEAD(VFIOGroupList, VFIOGroup) VFIOGroupList;
+extern VFIOGroupList vfio_group_list;
 
 #ifdef CONFIG_LINUX
 int vfio_get_region_info(VFIODevice *vbasedev, int index,
diff --git a/include/qom/cpu.h b/include/qom/cpu.h
index 62aef77..4662a20 100644
--- a/include/qom/cpu.h
+++ b/include/qom/cpu.h
@@ -435,8 +435,9 @@ struct CPUState {
     GArray *iommu_notifiers;
 };
 
-QTAILQ_HEAD(CPUTailQ, CPUState);
-extern struct CPUTailQ cpus;
+typedef QTAILQ_HEAD(CPUTailQ, CPUState) CPUTailQ;
+extern CPUTailQ cpus;
+
 #define first_cpu        QTAILQ_FIRST_RCU(&cpus)
 #define CPU_NEXT(cpu)    QTAILQ_NEXT_RCU(cpu, node)
 #define CPU_FOREACH(cpu) QTAILQ_FOREACH_RCU(cpu, &cpus, node)
diff --git a/ui/input.c b/ui/input.c
index 7c9a410..35c7964 100644
--- a/ui/input.c
+++ b/ui/input.c
@@ -19,6 +19,9 @@ struct QemuInputHandlerState {
 };
 
 typedef struct QemuInputEventQueue QemuInputEventQueue;
+typedef QTAILQ_HEAD(QemuInputEventQueueHead, QemuInputEventQueue)
+    QemuInputEventQueueHead;
+
 struct QemuInputEventQueue {
     enum {
         QEMU_INPUT_QUEUE_DELAY = 1,
@@ -37,8 +40,7 @@ static QTAILQ_HEAD(, QemuInputHandlerState) handlers =
 static NotifierList mouse_mode_notifiers =
     NOTIFIER_LIST_INITIALIZER(mouse_mode_notifiers);
 
-static QTAILQ_HEAD(QemuInputEventQueueHead, QemuInputEventQueue) kbd_queue =
-    QTAILQ_HEAD_INITIALIZER(kbd_queue);
+static QemuInputEventQueueHead kbd_queue = QTAILQ_HEAD_INITIALIZER(kbd_queue);
 static QEMUTimer *kbd_timer;
 static uint32_t kbd_default_delay_ms = 10;
 static uint32_t queue_count;
@@ -257,7 +259,7 @@ static void qemu_input_event_trace(QemuConsole *src, InputEvent *evt)
 
 static void qemu_input_queue_process(void *opaque)
 {
-    struct QemuInputEventQueueHead *queue = opaque;
+    QemuInputEventQueueHead *queue = opaque;
     QemuInputEventQueue *item;
 
     g_assert(!QTAILQ_EMPTY(queue));
@@ -288,7 +290,7 @@ static void qemu_input_queue_process(void *opaque)
     }
 }
 
-static void qemu_input_queue_delay(struct QemuInputEventQueueHead *queue,
+static void qemu_input_queue_delay(QemuInputEventQueueHead *queue,
                                    QEMUTimer *timer, uint32_t delay_ms)
 {
     QemuInputEventQueue *item = g_new0(QemuInputEventQueue, 1);
@@ -306,7 +308,7 @@ static void qemu_input_queue_delay(struct QemuInputEventQueueHead *queue,
     }
 }
 
-static void qemu_input_queue_event(struct QemuInputEventQueueHead *queue,
+static void qemu_input_queue_event(QemuInputEventQueueHead *queue,
                                    QemuConsole *src, InputEvent *evt)
 {
     QemuInputEventQueue *item = g_new0(QemuInputEventQueue, 1);
@@ -318,7 +320,7 @@ static void qemu_input_queue_event(struct QemuInputEventQueueHead *queue,
     queue_count++;
 }
 
-static void qemu_input_queue_sync(struct QemuInputEventQueueHead *queue)
+static void qemu_input_queue_sync(QemuInputEventQueueHead *queue)
 {
     QemuInputEventQueue *item = g_new0(QemuInputEventQueue, 1);
 
-- 
1.8.3.1



