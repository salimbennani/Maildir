Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  14 Dec 2018 08:38:02 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 5555A58061F;
	Thu, 13 Dec 2018 07:01:21 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 13 Dec 2018 07:01:20 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AtpvwRxRHudVbF/dXnino9GyVStpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YBCPt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZDI2y?=
 =?us-ascii?q?b5UBAfcCM+ZWoIbyu0YBohmwCgm3HOPiyCRFhmPq0aAgz+gtDRvL0BImEtkTsH?=
 =?us-ascii?q?rUttL1NKIKXO+6zanI0yvMb/BL0jn874jJcgouofWRVr93b8rRxk4vFgPfgVWU?=
 =?us-ascii?q?soHlJS2a2fkNs2eB8+psT/6gi2kiqwxopDWk28QiipHRi44L1lzJ8T91zJs7KN?=
 =?us-ascii?q?GmUkJ3fN2pHIdKuyybNYZ6Wt0uT31stSog17ELt4C3cDIXxJkkyRPTceKLfouO?=
 =?us-ascii?q?7xn+TuieOy14i2hgeL+nhxa970ygyurkW8mq31ZFsDBFnsPPtn8TzRzT7NaISv?=
 =?us-ascii?q?9n8kemwzaP2Bjf6uBCIU8qiarWM4AtzqI0m5YJrEjOEDH6lF/rgKKVakko4Oml?=
 =?us-ascii?q?5ub/brXjvJCcNot0ig/kMqQpn8yyGeA4MgkIX2iG9uWwzb7j8lPjQLVMkPI2lr?=
 =?us-ascii?q?DVsJfUJMQduKG5GRRY0pgs6xmhFTeqytcYkmcdLFJDZh2Hi5LlO1bUIPD3Ffu/?=
 =?us-ascii?q?mUijkC93x/DaOb3sGpHNLnnAkLj/Z7p85FNcxRE3zdBe4ZJUF74ALOjyWk/3qN?=
 =?us-ascii?q?zXEBs5PxaozObgDdV3zpkeVn6XAq+FLKPStkeF5uI1LOmNeI8aojH9J+Il5/7z?=
 =?us-ascii?q?l3A5n1AdcLKt3ZsWbnC4A/tnL1+YYXrqntcOD2MKshAiQ+ztjV2ISSRTaGqqX6?=
 =?us-ascii?q?Ig+jE7D5qrDYXERo+zmrCB3yC7HptQZmBBEV2MFXbod4OZW/YDci6SI8lhkiAa?=
 =?us-ascii?q?WrilUYMuyRautAriwbp9MuXU4jEYtY7k1NVt/eLTjhEy9Tt3D8iHyWGCVWN0k3?=
 =?us-ascii?q?gMRz832qB/vEN8xk2C0ah+n/xXC9hT6+lVXQc9MJ7W1/Z6BMzqWgLdYteJT06r?=
 =?us-ascii?q?Qta8DjE3VN4xx94ObFx7G9WtlR3D2yuqA7kIl72EHpA086Tc32TvKMZ50XrJyK?=
 =?us-ascii?q?4hj1w+SMtVKWKmnrJ/9xTUB4PRjkqWjbiqeroG0C7N7miDy3GOs19eUAJ3VaXF?=
 =?us-ascii?q?XnUfZk/NoNT950PCSaKuCLs9PgtAz86CNrVFatnzgVpaQ/fjPczUY3itlGeoGR?=
 =?us-ascii?q?aI2rSMYZL3dGoHwiXSFlIIkwAJ8naALggxGCGhrnnaDDxvE1Lvfkzt/fN/qHO9?=
 =?us-ascii?q?Uk870QWKY1d92Lqy/x4fneacRO8L3rIYpCchrC15HEq839LTDNqAuwphfaVGbd?=
 =?us-ascii?q?Mh+ltH0njZtwh8PpymIKBvnVoecwVxv0Pz2BR7EIRAkc42rHw0yAp+M76X0FRE?=
 =?us-ascii?q?dzmAx5D/JqXXKnXu/BCoc6PZwFXe38iZ+6gR6PU0sU7svBy0GUU49XVn0N5V02?=
 =?us-ascii?q?WH65XODQoSV4/xU0kt+xh7obHafjcy54fO2XJwNqm0tyfI28g1C+s91hagY9Bf?=
 =?us-ascii?q?PbuEFQ/vCcEVG9KiKe0qm1ezaBIEM/tf9Ko1P8OgavuH17SnPOdmnDK6k2tH5J?=
 =?us-ascii?q?px3V6L9yp5UuTIxYoKw+mE3gubUDfxlE2hssHrlo9efzEdA22/xTLiBIFPfK1y?=
 =?us-ascii?q?fJ8HBnu0LM2z29pxmYTtW3le9FO4A1MG2cmpeQedblDn3A1Q01gXrmKjmSei0z?=
 =?us-ascii?q?N0lDQppLKF3CPS2+TiaAYHOmlTSWhijFfgO4i1g8oBXEi1aQgkjx+l5Uf8x6hG?=
 =?us-ascii?q?q6VzNWjTQUFUfyfoK2FuSLe/tr2HY8RX8pMnrT1XUPigYVCdUrP9oQEV0zngH2?=
 =?us-ascii?q?tdwzA3bSqqtY/6nxx5iWKdKmh8rHzCdMF0xBff4sHcRPFL0joHQil4lSfYBlym?=
 =?us-ascii?q?M9a1+tWUko/JsvqiWGK5Sp1TbS7rwJuAtSSh4m1mGx+/n/G1mtD8FQg60Cn718?=
 =?us-ascii?q?RlVCnSrRb8ZJXr2Lq+Me59YkZoA1r84dJgGo5iioswmI0Q2X8Ci5WW53UHkH3/?=
 =?us-ascii?q?MdVG2a3kanoNSiUGw9rU4AjjxU1iIWiFx4P/VnWB3MRhY8O2bX8R2iI498pKEr?=
 =?us-ascii?q?ub7KRYnStppVq1tQfRYfl+njgH0/cv5mAVg/oVuAUz1CWSGa4dHVNXPSH3kxSI?=
 =?us-ascii?q?7ta+rLhYZWq1cLiw0lZ+ks6lDL2Yvg5cX3P5cI84HSBs9sV/LE7M0Hrr54H4f9?=
 =?us-ascii?q?nQaMgftxyOnBfGkuhVM4kxlvsRiCpjOGL9u2AlyuEhgRxv25G6oJaIK2F38K2l?=
 =?us-ascii?q?BR5YMyX/Z9kP9TH1kaZegsGW0pi0EZp7HTULWIboQeisEDIPrvnnMweOEDshqn?=
 =?us-ascii?q?aUA7bfHAmf6Ft4oHLLCZykK3aXJHwBx9V4WBadPFBfgBwTXDginJ42DAWqy9L6?=
 =?us-ascii?q?cEtj+jAd/F34qgZPyuJ1MRnwSHzfqRysajc1TpifMRVX4htD50fTLcyR8OZzEz?=
 =?us-ascii?q?tE8Z2mqQyHMnabaBhQDWEVRkyEAEjuP7mp5dnd6uiYG/CxL/3UbbWVruxeUfiI?=
 =?us-ascii?q?yImr0otn+TaMK8qOMmNjD/09xkpMQ3R5F97FlDUITiwdjzjNYNKDpBeg5i13qd?=
 =?us-ascii?q?iy8PT1VwLu5ouPCLpSPc9s+xCshqeDOPCfhDxkKTZDzZ4MwX7IyL4C3F8dkS1u?=
 =?us-ascii?q?dj+tEageui7JVq7fhqhXDxsDYSNpKMRI97483hVKOcPDkNz1y6V3juQrBFZFT1?=
 =?us-ascii?q?DhnsCpaNcOI2G8MlPHGUmKOK6HJT3N38H4f6e8RadMg+VTsh26oSybHFP7PjSf?=
 =?us-ascii?q?iznpUAiiMf1NjCGeJhBRpJuxfQptCWf9StLrcRm7MN5xjT0rzrw4nHLKNWgAMT?=
 =?us-ascii?q?did0NBtKGf7SRdgv9nAWxO8mJlLfWYmyae9+TZKowZsf1uAiR1keJV+HU7y7tP?=
 =?us-ascii?q?4yFCS/x4gy/Srt9oo1G7neiD0DtnUBxSqjlVgIKHp1ltOaLc9soIZXGRxw4A9W?=
 =?us-ascii?q?WdDVwxotJhDtD+8/RLxsPniLP4KDAE9cndu8QbGZ6HBtiANS8fMATkG3b7CxoM?=
 =?us-ascii?q?SXb/K27YlkVZuOuf+n2cst4xrZ26y8lGcaNSSFFgTqBSMU9iBtFXZc4vBj4=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AFAADtcxJch0O0hNFjGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBVAEBAQEBAQsBgVqCESeMdI1BFJk2ERgTAYdFIjcGDQEDAQE?=
 =?us-ascii?q?BAQEBAgETAQEBCA0JCCkvgjYkAYJhAQEBAQIBAQI3MgoDBQEJAQEKDgoJJQMMB?=
 =?us-ascii?q?RgxEwUWgwYoAYFQCAWoLYowjDwXgUA/hCOEO4N7giYCiSqCCIUTUY95CZFOCxi?=
 =?us-ascii?q?BXIgQNocomUmBXIF4MxoIGxWDJ4InF447IQEBMYEFAQEciW6CPgEB?=
X-IPAS-Result: =?us-ascii?q?A0AFAADtcxJch0O0hNFjGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BVAEBAQEBAQsBgVqCESeMdI1BFJk2ERgTAYdFIjcGDQEDAQEBAQEBAgETAQEBC?=
 =?us-ascii?q?A0JCCkvgjYkAYJhAQEBAQIBAQI3MgoDBQEJAQEKDgoJJQMMBRgxEwUWgwYoAYF?=
 =?us-ascii?q?QCAWoLYowjDwXgUA/hCOEO4N7giYCiSqCCIUTUY95CZFOCxiBXIgQNocomUmBX?=
 =?us-ascii?q?IF4MxoIGxWDJ4InF447IQEBMYEFAQEciW6CPgEB?=
X-IronPort-AV: E=Sophos;i="5.56,349,1539673200"; 
   d="scan'208";a="55047516"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 13 Dec 2018 07:01:19 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729256AbeLMO6Q (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 13 Dec 2018 09:58:16 -0500
Received: from mx1.redhat.com ([209.132.183.28]:44386 "EHLO mx1.redhat.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1728591AbeLMO6P (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 13 Dec 2018 09:58:15 -0500
Received: from smtp.corp.redhat.com (int-mx04.intmail.prod.int.phx2.redhat.com [10.5.11.14])
        (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
        (No client certificate requested)
        by mx1.redhat.com (Postfix) with ESMTPS id A1E802D7E4;
        Thu, 13 Dec 2018 14:58:14 +0000 (UTC)
Received: from horse.redhat.com (unknown [10.18.25.234])
        by smtp.corp.redhat.com (Postfix) with ESMTP id 2E8A55D9C9;
        Thu, 13 Dec 2018 14:58:14 +0000 (UTC)
Received: by horse.redhat.com (Postfix, from userid 10451)
        id AF6A32208FC; Thu, 13 Dec 2018 09:58:13 -0500 (EST)
Date: Thu, 13 Dec 2018 09:58:13 -0500
From: Vivek Goyal <vgoyal@redhat.com>
To: Stephen Smalley <sds@tycho.nsa.gov>
Cc: Miklos Szeredi <miklos@szeredi.hu>,
        Ondrej Mosnacek <omosnace@redhat.com>,
        "J. Bruce Fields" <bfields@fieldses.org>,
        Mark Salyzyn <salyzyn@android.com>,
        Paul Moore <paul@paul-moore.com>, linux-kernel@vger.kernel.org,
        overlayfs <linux-unionfs@vger.kernel.org>,
        linux-fsdevel@vger.kernel.org, selinux@vger.kernel.org,
        Daniel J Walsh <dwalsh@redhat.com>
Subject: Re: overlayfs access checks on underlying layers
Message-ID: <20181213145813.GB4384@redhat.com>
References: <20181204152248.GB21509@redhat.com>
 <CAJfpegtFVvq286HAorGLg6ywMsfs51KqaQwFkcuV7Dtu8TLaLg@mail.gmail.com>
 <20181204154243.GA16818@redhat.com>
 <665ec6f3-f16d-681f-30d5-eface14c9808@tycho.nsa.gov>
 <20181204161747.GC16818@redhat.com>
 <e8841bf0-d6b8-0e7d-6a35-055a06441d30@tycho.nsa.gov>
 <20181205134317.GA11337@redhat.com>
 <8eb7f677-fd71-c31b-bfed-29fb7187d132@tycho.nsa.gov>
 <20181211214821.GD17242@redhat.com>
 <2e4d90ce-61e7-56b1-c161-4e5fb7236537@tycho.nsa.gov>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <2e4d90ce-61e7-56b1-c161-4e5fb7236537@tycho.nsa.gov>
User-Agent: Mutt/1.9.1 (2017-09-22)
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.14
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16 (mx1.redhat.com [10.5.110.30]); Thu, 13 Dec 2018 14:58:14 +0000 (UTC)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Wed, Dec 12, 2018 at 09:51:59AM -0500, Stephen Smalley wrote:
> On 12/11/18 4:48 PM, Vivek Goyal wrote:
> > On Thu, Dec 06, 2018 at 03:26:26PM -0500, Stephen Smalley wrote:
> > > On 12/5/18 8:43 AM, Vivek Goyal wrote:
> > > > On Tue, Dec 04, 2018 at 11:49:16AM -0500, Stephen Smalley wrote:
> > > > > On 12/4/18 11:17 AM, Vivek Goyal wrote:
> > > > > > On Tue, Dec 04, 2018 at 11:05:46AM -0500, Stephen Smalley wrote:
> > > > > > > On 12/4/18 10:42 AM, Vivek Goyal wrote:
> > > > > > > > On Tue, Dec 04, 2018 at 04:31:09PM +0100, Miklos Szeredi wrote:
> > > > > > > > > On Tue, Dec 4, 2018 at 4:22 PM Vivek Goyal <vgoyal@redhat.com> wrote:
> > > > > > > > > 
> > > > > > > > > > Having said that, this still create little anomaly when mknod to client
> > > > > > > > > > is not allowed on context label. So a device file, which is on lower
> > > > > > > > > > and client can not open it for read/write on host, it can now be opened
> > > > > > > > > > for read/write because mounter will allow access. So why it is different
> > > > > > > > > > that regular copy up. Well, in regular copy up, we created a copy of
> > > > > > > > > > the original object and allowed writing to that object (cp --preserve=all)
> > > > > > > > > > model. But in case of device file, writes will go to same original
> > > > > > > > > > object. (And not a separate copy).
> > > > > > > > > 
> > > > > > > > > That's true.
> > > > > > > > > 
> > > > > > > > > In that sense copy up of special file should result in upper having
> > > > > > > > > the same label as of lower, right?
> > > > > > > > 
> > > > > > > > I guess that might be reasonable (if this behavior is a concern). So even
> > > > > > > > after copy up, client will not be able to read/write a device if it was
> > > > > > > > not allowed on lower.
> > > > > > > > 
> > > > > > > > Stephen, what do you think about retaining label of lower for device
> > > > > > > > files during copy up. What about socket/fifo.
> > > > > > > 
> > > > > > > We don't check client task access to the upper inode label, only to the
> > > > > > > overlay, right?  So the client is still free to access the device through
> > > > > > > the overlay even if we preserve the lower inode label on the upper inode?
> > > > > > > What do we gain?
> > > > > > 
> > > > > > That's only with latest code and Miklos said he will revert it for 4.20.
> > > > > > 
> > > > > > IOW, I am assuming that we will continue to check access to a file
> > > > > > on upper in the context of mounter. Otherwise, client will be able to access
> > > > > > files on upper/ which even mounter can't access.
> > > > > 
> > > > > I was assuming we're talking about the proposed solution, where we check
> > > > > client access to the overlay (unchanged), mounter access to lower
> > > > > (unchanged), copy-up if denied (new), mounter access to upper (new in the
> > > > > sense that previously we didn't copy-up on denials).
> > > > > 
> > > > > In that situation, propagating the lower inode label to the upper inode only
> > > > > impacts the mounter checks, and in that case makes copy-up pointless - if it
> > > > > wasn't allowed to lower it won't be allowed to upper.  If it is allowed,
> > > > > then client task is free to access the device regardless as long as it has
> > > > > permissions to the overlay inode.  So I don't see what we gain by
> > > > > propagating the lower inode label to the upper inode in the context mount
> > > > > case, and it creates an inconsistency between special files and regular
> > > > > ones.
> > > > 
> > > > If we agree on retaining lower label of lower device file on copy up, then
> > > > I am assuming we will change rule c) to copy up only non device files.
> > > > (because if you don't have access on lower, you will not have access
> > > > even after copy up).
> > > > 
> > > > There are other paths where copy up happnes. Like link or when file
> > > > metadata (ownership, permissions, timestmap) changes. In those cases,
> > > > if we retain the lower label over copy up, it probably will help.
> > > > 
> > > > IOW, just by creating a link to a device, one will not get access to
> > > > a device on upper which could not be accessed on lower.
> > > > 
> > > > Device files are special anyway. In regular files we are creating a
> > > > copy and user writes to copy. But that's not the case with device
> > > > files. So I guess these will have to be treated differently.
> > > 
> > > I don't understand what you are suggesting.  In the case of a context mount,
> > > the context specified by the mounter must be assigned to the upper inode for
> > > any files that are copied up.  Otherwise, changes to file data or metadata
> > > made through the overlay will be visible under two different security
> > > contexts simultaneously: the context of the overlay inode (i.e. the one
> > > specified by the mounter) and the context of the upper inode (in your
> > > suggestion, the context from the lower inode). This allows a violation of
> > > MAC policy where one can leak data through an overlay to an unauthorized
> > > context.
> > 
> > Hi Stephen,
> > 
> > Sorry, I don't understand this point of leaking data through overlay. Even
> > if we retain lower label on copy up (for device file), to open that file
> > process should have access on overlay context label and then mounter needs
> > to have access on upper inode (lower label). This is not different from
> > opening a file on lower. Just that metadata of this file on upper might
> > be different.
> > 
> > Can you elaborate a bit more on how this is leaking data through overlay
> > mount. If it is, then why accessing file on lower is not equivalent of
> > leaking of data.
> 
> In the container use case, retaining the lower label on copy-up for a
> context-mounted overlay permits a process in the container to leak the
> container data out to host files not labeled with the container label and
> thus potentially accessible to other containers or host processes.

> The
> container process appears to just be writing to files labeled with the
> container label via the overlay, but the written data and/or metadata is
> directly accessible through the lower label, which is likely readable to
> all/many containers and host processes.
> 
> In the multi-level security (MLS) use case, an analogy would a situation
> where you have an unclassified lower dir with some content to be shared
> read-only across all levels, and an overlay is context-mounted at each level
> with a corresponding upper dir and work dir private to that level.  If a
> client process at secret performs a write to a file via the secret overlay,
> and if the written data is stored in a file in the upper dir that inherits
> the label from the lower file (unclassified), then the secret process can
> leak data to unclassified processes at will, violating the MLS policy.

For the case of devices, its already happening. One might change metadata
of a device (hence trigger copy up). Now all writes to upper device file
from secret process still go to same underlying device and are still
readable from lower device file.

In fact, for the case of devices, that is even more of a reason to retain
the label same as lower. Otherwise upper device node is leaking data
of a secret process which can be accessed using device at lower/ (lower's
label is readable).

> 
> The difference with the lower is that it is read-only and the mounter is
> explicitly choosing to export it under the new context for reading (but not
> for writing).

If we retain the label and if lower is not writable, then upper deivce
node is not being written to as well. So from label point of view, lower
and upper inode are not different. Only difference is that some metadata
of upper inode might be different.

Thanks
Vivek
> 
> As a side note, the actual checking during a context mount isn't as granular
> as we might like here, since there is no overlay-specific logic and thus no
> individual checking of the lower, upper, and work directory labels.
