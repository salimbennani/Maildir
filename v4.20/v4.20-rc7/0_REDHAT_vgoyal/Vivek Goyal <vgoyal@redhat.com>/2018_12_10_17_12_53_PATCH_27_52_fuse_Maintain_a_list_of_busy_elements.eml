Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:40:37 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id DF4BD5807C7;
	Mon, 10 Dec 2018 09:20:59 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga005-1.fm.intel.com with ESMTP; 10 Dec 2018 09:20:59 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ATQSs8x0nyYB6H1PmsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segSLvjxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QLYpUjqg8qhrUgflhi?=
 =?us-ascii?q?cZOTAk/m/Zic5/jKxAoBK5pRFy2JLYbJ2POfZiYq/RYc8WSGxcVchRTSxBBYa8?=
 =?us-ascii?q?YpMAAOoAI+ZXsYr9rEYPoxu5BQijHufvwSJPi3/o0q061OQgHhvC3AE7BdIBrm?=
 =?us-ascii?q?nbrNXvO6cOS+y60K7IzTDaYv5QxDzz65DIfwg/rf2QWb98a9fdxEcxGw/fk1md?=
 =?us-ascii?q?qpDpMymU2+kPq2SX8fZsWOa1h2I6pQx9vCKjytovh4THnI4Z1FPJ+CNky4gvP9?=
 =?us-ascii?q?K4UlR0Ydu8HZtQqS6aM4x2T9s8Q2Fnpik60KcKuZ2lcygQzpQo2RrfZ+aAc4iS?=
 =?us-ascii?q?7RLvTOeRITFmi3J5YL+zmQq+/Ey6xuHhWMS4zkxGojdGn9XQrHwA1h7e5tCCSv?=
 =?us-ascii?q?Rn/0eh3TiP1xrU6uFBOU00kavbK5g8wr8/j5YTslrMHjXwmEroiK+ab0Ik++au?=
 =?us-ascii?q?6+v5eLXrvYGcN4BqhQHkKKgumdKwAf4+MgcQW2iX4+O81Kfs/UHhWrVFkuU2kr?=
 =?us-ascii?q?XFsJDdPckboq+5AwxL3Yo55Be/Eiyr0NAZnXkBMVJEdwiLj4nvO1HSPv/4Ce2z?=
 =?us-ascii?q?jEirkDdu3/rGJKHuAo3RLnjfl7fsZbZ95FRdyAov199f4IhYCrEcIP3pXE/xu8?=
 =?us-ascii?q?fVDhs4Mwyy3ubmB89x1oIYWWKTHKCZNLnevkOP5uIqO+OMfpMauC7hK/g54P7j?=
 =?us-ascii?q?lX05mVgDcqWz3psXb3a4HvJhI0iCZXrsg9EBEXoFvwYkTezqjkGCXiBXZ3qoQ6?=
 =?us-ascii?q?084TQ7Apq8DYjfXoCtnKCB3CCjE5JMfWBGCleMEXTye4WeQfgMajmfIstgkjwC?=
 =?us-ascii?q?SLigRJUt1RCotA/m1bVnKvDY9TEftZLmzNJ1/fHclQku9TxoCMSQy2KNQHtynm?=
 =?us-ascii?q?8SQz823bpwoUpyylqY1ah4gvpYFcFc5v9TUwc6M4LcwPJ+C9zoRg3BedKJQk68?=
 =?us-ascii?q?Qtq6GTExUs4xw9gWbklgAdqikA7M0zCqA7APkbyLH4I78qTb03j1JMZ9znLG2b?=
 =?us-ascii?q?Ilj1knRMtPKGKnirR+9wjVG47GjUGZm7y2eqQb2S7H7H2DwnaWvEFETA5wVr3I?=
 =?us-ascii?q?Um0FaUvIs9v1/EPCQKWoCbQ8LARBz9WPKq9Lat3vkFVHS+3vONXYY2KthWiwAQ?=
 =?us-ascii?q?yEya+LbIrvY28dxjnSCFAYkwAP+naLLRQ+Biako2LZEDxuFVLub1nw8eVkr3O7?=
 =?us-ascii?q?VEs0zwCMb01uzLe1/h8VhfqBS/IcxL4EuSEhqylqE1a5xd7ZF92Apw95dqVGfd?=
 =?us-ascii?q?w9+EtH1X7etwFlJJOgK75th1EAfAV3pU/hzAh3BZhansgsr3MqyxRyJLmc0FNA?=
 =?us-ascii?q?cTOYwJ/xNqfWKmn04BCgdarW1kvC39aR/6cF8O44pEn7vAG1Ckoi9G1q0tlI03?=
 =?us-ascii?q?eG+prGFgsTUZLrXUYx+Bh3vLXaYig754PJ2nxgK6i0sjne2903AOsp0Aqvf9Ba?=
 =?us-ascii?q?MKmcDg/9D9UaB9SyKOwtg1WpdBMEM/xI+64uIsymcOGK2Ki1M+Z6nTKqlHhI75?=
 =?us-ascii?q?p50k2R6SV8UOnI35AezvGc3wuHUSr8jVi7vsD2n4BEeS8dHm6lxSf4A45RY7V4?=
 =?us-ascii?q?fZwXBme2P8232tJ+iobtWn5Z7lKiB0kK2NS0eRqUdFH92QxQ1UIKoX2ogye4zj?=
 =?us-ascii?q?p0ky03oaqbxiDB3+PidB8fMG5RWGZilUvsIZSzj90CXkindRIplBim5Ub93aRb?=
 =?us-ascii?q?v75wL2rQQUdJeSj5MWdiX7C0trqDZc5P9ZwpvT9WUOS6fVCVVLr9rwEG3CPkGm?=
 =?us-ascii?q?tU3Co7eC2yupXlgxx6j3qQLXZpo3reY81wxxbf5NrHSP5V3zoGQjR4iDbNCli9?=
 =?us-ascii?q?Odmp4cubl5PZvu+iUGKhU4VZcTP3woOYqCu7+WpqDAW8n/+pm93rCwg60TLh2N?=
 =?us-ascii?q?lsWiXFtxL8Yojt16SnPuNrZEhoBFng68VkHoFyiJc/hJYV2XICnJWa4WIHkXvv?=
 =?us-ascii?q?MdVcwa/+aXsNRT0RzNLP7gnqxlZjLm6XyILjTXqS3NFhZ9ahb2MS2yI96d1KCa?=
 =?us-ascii?q?iO4LxFmyt1vkS3rQbLbfdhmTcdzOMk6GQGjOERpAot0iKdD6gOHUlfOCzgjRWJ?=
 =?us-ascii?q?4Mq4rKVKf2avarmw2VF6ndCgCrGCvw5dVGz4epckAS9/8MF/PEjQ333074HuYM?=
 =?us-ascii?q?PQYs4Lth2IjxfAiPBYJ4krmfoNgSpnJHjxvXk4y+MgiRxu3Je6vJWIKml3/aK5?=
 =?us-ascii?q?BAJYOSPxZ88J5j7tiqNelN6M34+zBpVhBikLXJzwQPKqCj0SsOroNx2UHD0gsH?=
 =?us-ascii?q?ubGqffHQyC6EdgtX3PCIumN3WWJHkf0NVjSwORJE1ZgAAIQjo6moQ1GRytxMzk?=
 =?us-ascii?q?aE15/Cwe5kbkqhtQzeJlLxn+UmDCpAexdzc7Up6fIABN7gFF4UfVPteT7uZyHy?=
 =?us-ascii?q?Fe452goxaBKm2dZwRUE24JXlaICEzkPrmr/dPA6fSXBvKiL/vSZrWDsexeWOmJ?=
 =?us-ascii?q?xZKs0Ytm/iyANsaVPnllAP00xFBDXW1iG8nCnzUPSioXlz/CbsKBpRe8/DF3od?=
 =?us-ascii?q?678PjxRA3v4o6PAaNIMdpz4xC2nbuDN+mIiSljNDZXzYkMymHIybQF2F4Sijpj?=
 =?us-ascii?q?dz2sEbQGqC7MQ7jcmq5RDx4HdSxzMNFE4L473glIIcTbkM/61qZkjv4pDFdITU?=
 =?us-ascii?q?DhmsCsZcAQP26xLk/IBEaVO7SAPjDLx8D3YaWhSbxflulUthuwuSqFHE/nJDiM?=
 =?us-ascii?q?iz7pVxW3O+FWkC6bJABeuJ26cht1CWnsVtTmahi6MN9xlTI3wL00iWnMNW4TKj?=
 =?us-ascii?q?V8d0JNrruN7SJXmPl/GmpB7mZ7IumAgSqW8+7YKpNF+cdsVyB1kf9KpXohx7ZL?=
 =?us-ascii?q?4SVsWvN4gm3Ro8RorlXglfOAjnJjURxTunNIiZiNsEFKJ6rU7N9DVGzC8RZL6n?=
 =?us-ascii?q?+fT1wJud5NFNLioeZTx8LJmaa1Ly1NoPzO+s5JOcnKJcHPH30wOB6hTCDbCxoM?=
 =?us-ascii?q?SRaxOG3fjlAbm/aXoC7G5qMmo4ThzcJdAoRQU0Y4Q6sX?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AaAAC2nw5ch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUgYBAQsBg2snjHKLMIIhlz2BcRYYEwGHbSI1CA0BAwEBAQEBAQIBEwEBAQg?=
 =?us-ascii?q?NCQgpL4I2IoJlAwMBAiRSBgkBAVADKSsHEgWDHIICBacHM4ogjCEXgUA/gRGCZ?=
 =?us-ascii?q?IsKApA6kDsJkUQLGIlmh1eJIoxdgzGBSAOCCTMaCBsVO4JsgicXjjshAQExgQU?=
 =?us-ascii?q?BARyLfAEB?=
X-IPAS-Result: =?us-ascii?q?A0AaAAC2nw5ch0O0hNFkHAEBAQQBAQcEAQGBUgYBAQsBg2s?=
 =?us-ascii?q?njHKLMIIhlz2BcRYYEwGHbSI1CA0BAwEBAQEBAQIBEwEBAQgNCQgpL4I2IoJlA?=
 =?us-ascii?q?wMBAiRSBgkBAVADKSsHEgWDHIICBacHM4ogjCEXgUA/gRGCZIsKApA6kDsJkUQ?=
 =?us-ascii?q?LGIlmh1eJIoxdgzGBSAOCCTMaCBsVO4JsgicXjjshAQExgQUBARyLfAEB?=
X-IronPort-AV: E=Sophos;i="5.56,339,1539673200"; 
   d="scan'208";a="43456004"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 10 Dec 2018 09:20:56 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729125AbeLJRTi (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 10 Dec 2018 12:19:38 -0500
Received: from mx1.redhat.com ([209.132.183.28]:40774 "EHLO mx1.redhat.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1728380AbeLJRNf (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 10 Dec 2018 12:13:35 -0500
Received: from smtp.corp.redhat.com (int-mx01.intmail.prod.int.phx2.redhat.com [10.5.11.11])
        (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
        (No client certificate requested)
        by mx1.redhat.com (Postfix) with ESMTPS id 1A02F13AA6;
        Mon, 10 Dec 2018 17:13:35 +0000 (UTC)
Received: from horse.redhat.com (unknown [10.18.25.234])
        by smtp.corp.redhat.com (Postfix) with ESMTP id C7AB55C7AA;
        Mon, 10 Dec 2018 17:13:34 +0000 (UTC)
Received: by horse.redhat.com (Postfix, from userid 10451)
        id 7259B224266; Mon, 10 Dec 2018 12:13:30 -0500 (EST)
From: Vivek Goyal <vgoyal@redhat.com>
To: linux-fsdevel@vger.kernel.org, linux-kernel@vger.kernel.org,
        kvm@vger.kernel.org
Cc: vgoyal@redhat.com, miklos@szeredi.hu, stefanha@redhat.com,
        dgilbert@redhat.com, sweil@redhat.com, swhiteho@redhat.com
Subject: [PATCH 27/52] fuse: Maintain a list of busy elements
Date: Mon, 10 Dec 2018 12:12:53 -0500
Message-Id: <20181210171318.16998-28-vgoyal@redhat.com>
In-Reply-To: <20181210171318.16998-1-vgoyal@redhat.com>
References: <20181210171318.16998-1-vgoyal@redhat.com>
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.11
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16 (mx1.redhat.com [10.5.110.29]); Mon, 10 Dec 2018 17:13:35 +0000 (UTC)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

This list will be used selecting fuse_dax_mapping to free when number of
free mappings drops below a threshold.

Signed-off-by: Vivek Goyal <vgoyal@redhat.com>
---
 fs/fuse/file.c   | 8 ++++++++
 fs/fuse/fuse_i.h | 7 +++++++
 fs/fuse/inode.c  | 4 ++++
 3 files changed, 19 insertions(+)

diff --git a/fs/fuse/file.c b/fs/fuse/file.c
index 449a6b315327..94ad76382a6f 100644
--- a/fs/fuse/file.c
+++ b/fs/fuse/file.c
@@ -275,6 +275,10 @@ static int fuse_setup_one_mapping(struct inode *inode,
 	/* Protected by fi->i_dmap_sem */
 	fuse_dax_interval_tree_insert(dmap, &fi->dmap_tree);
 	fi->nr_dmaps++;
+	spin_lock(&fc->lock);
+	list_add_tail(&dmap->busy_list, &fc->busy_ranges);
+	fc->nr_busy_ranges++;
+	spin_unlock(&fc->lock);
 	return 0;
 }
 
@@ -322,6 +326,10 @@ void fuse_removemapping(struct inode *inode)
 		if (dmap) {
 			fuse_dax_interval_tree_remove(dmap, &fi->dmap_tree);
 			fi->nr_dmaps--;
+			spin_lock(&fc->lock);
+			list_del_init(&dmap->busy_list);
+			fc->nr_busy_ranges--;
+			spin_unlock(&fc->lock);
 		}
 
 		if (!dmap)
diff --git a/fs/fuse/fuse_i.h b/fs/fuse/fuse_i.h
index 3b17fb336256..e32b0059493b 100644
--- a/fs/fuse/fuse_i.h
+++ b/fs/fuse/fuse_i.h
@@ -113,6 +113,9 @@ struct fuse_dax_mapping {
 	__u64 end;
 	__u64 __subtree_last;
 
+	/* Will connect in fc->busy_ranges to keep track busy memory */
+	struct list_head busy_list;
+
        /** Position in DAX window */
        u64 window_offset;
 
@@ -856,6 +859,10 @@ struct fuse_conn {
 	/** DAX device, non-NULL if DAX is supported */
 	struct dax_device *dax_dev;
 
+	/* List of memory ranges which are busy */
+	unsigned long nr_busy_ranges;
+	struct list_head busy_ranges;
+
 	/*
 	 * DAX Window Free Ranges. TODO: This might not be best place to store
 	 * this free list
diff --git a/fs/fuse/inode.c b/fs/fuse/inode.c
index 56310d10cd4c..234b9c0c80ab 100644
--- a/fs/fuse/inode.c
+++ b/fs/fuse/inode.c
@@ -622,6 +622,8 @@ static void fuse_free_dax_mem_ranges(struct list_head *mem_list)
 	/* Free All allocated elements */
 	list_for_each_entry_safe(range, temp, mem_list, list) {
 		list_del(&range->list);
+		if (!list_empty(&range->busy_list))
+			list_del(&range->busy_list);
 		kfree(range);
 	}
 }
@@ -666,6 +668,7 @@ static int fuse_dax_mem_range_init(struct fuse_conn *fc,
 		range->window_offset = i * FUSE_DAX_MEM_RANGE_SZ;
 		range->length = FUSE_DAX_MEM_RANGE_SZ;
 		list_add_tail(&range->list, &mem_ranges);
+		INIT_LIST_HEAD(&range->busy_list);
 		allocated_ranges++;
 	}
 
@@ -708,6 +711,7 @@ void fuse_conn_init(struct fuse_conn *fc, struct user_namespace *user_ns,
 	fc->dax_dev = dax_dev;
 	fc->user_ns = get_user_ns(user_ns);
 	INIT_LIST_HEAD(&fc->free_ranges);
+	INIT_LIST_HEAD(&fc->busy_ranges);
 }
 EXPORT_SYMBOL_GPL(fuse_conn_init);
 
-- 
2.13.6

