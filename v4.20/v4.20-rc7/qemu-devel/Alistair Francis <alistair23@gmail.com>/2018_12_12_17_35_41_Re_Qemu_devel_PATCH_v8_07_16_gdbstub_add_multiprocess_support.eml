Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 08:53:42 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga007.fm.intel.com (fmsmga007.fm.intel.com [10.253.24.52])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id D6FB058079D
	for <like.xu@linux.intel.com>; Wed, 12 Dec 2018 09:36:24 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga007-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 12 Dec 2018 09:36:22 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AUgYMZxMB59uoSc8a6q0l6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0K/z+r8bcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRthfVyJBDI2/?=
 =?us-ascii?q?YYUAAeUOMuREoIfyulUOtRmzCwujCe/yxDJEmmH53bYh3uQ9EgzLxhAsE84AvX?=
 =?us-ascii?q?nWqtj+KaccUfqyzKnN1TjOc/dW2Tbm6IjUaB8hoOuMVq9wf8rL00YvER/KjlSL?=
 =?us-ascii?q?qYf4OD6azOANs2mA7+p8T+2vinQnpx9/rzW0yccsj5PGhoMRylze6Sp5x4M1KM?=
 =?us-ascii?q?S+RUVmYtCkCINduz+GO4Z1WM8uXnxktSUgxrEYt5O2fDIGxIklyhLHdfCKcpSE?=
 =?us-ascii?q?7g/mWeuQLjp1hXdodbGhiBqu7UStz/DzWdWu31tPrydKicXDuWwI2hHd6cWIUe?=
 =?us-ascii?q?Zx80Kv2TmRyg/e6ORJLl42mKfUKpMsxKM7mIAJvkTZBCD2nV37jK+IeUUg/eil?=
 =?us-ascii?q?8+DnYrT9pp+ALI94kA7+MqIzmsClBuQ4KAcOU3Ca+eS6yrLj4VX0TKtWgvA1iK?=
 =?us-ascii?q?XVrY3WKMcBqqKnDQJY0pwv5wu9Aju+1dQXh3gHLFZLeBKdiIjpPknDIOnmAve6?=
 =?us-ascii?q?nlSgiSpkyO7YPrL/BpXBN2PMkLD8fbZ790FT1hEzwddb55JVCbEOPuj/W0DstN?=
 =?us-ascii?q?HACh85Mgq0w/voCdln14MeX36PDbGdMK/IrVCI4ecvLvKKZI8Svjb9JP4l5+P0?=
 =?us-ascii?q?gX8+g18dcrGl3YELZ3CgAvRmP0KZbGLogtcAEmcFoBAyTeP3iFCZVT5TZnCyX7?=
 =?us-ascii?q?8z5z0hCYKmC5vDSZ6pgLCbwCi7GZhWNSh7DEuRGyLoa5mcQKVLLyaTOdN61DoD?=
 =?us-ascii?q?U7enVskmzx7psQb7z79uKK3T4jEZspT4k8F44vCWmRws+DgnMsKGzmvYSmh1mn?=
 =?us-ascii?q?8PFSY72b06rUFjx1PGy6VhnvFDCfRV4PVGVBp8MoTTmPdnAdL/UR6UY9GSVVy9?=
 =?us-ascii?q?Sc+nCzxictVk58IFK2N8ENWviliX2zehRboUnLyGALQ76K/R2WP2LN07wHHDgu?=
 =?us-ascii?q?1pllQjX45DOHOrgoZ58A7cAZOPlF+WxIiwcqFJ9SrM73uKzHDGkltRVgVxSu2R?=
 =?us-ascii?q?VHQefVffrM6jvWvNSravDfIsNQ4Xmp3KEbdDdtC81QYOf/zkItmLJjvpw2o=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ALAAA7RhFcmBHrdtBkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBVAIBAQEBCwGBMIJig3yIeIszgWAIJYkAJG6PNBIBARgUhECCfiI?=
 =?us-ascii?q?3Bg0BAwEBAQEBAQIBEwEBAQEBCAsLBhsOIwyCNgUCAxoBBoJcAQIDAQIgBAsBB?=
 =?us-ascii?q?QgBBQoMHQECAQIBAgYBAQUFCw0CAh8DBAICAwEfEQEFARwGAQwGAgEBAYMcgWk?=
 =?us-ascii?q?BAxUBBJppPIsNfBYFAReCdwWCRIF5ChknDV2BNwIGEnmBI4hygRyCFoERJwyCX?=
 =?us-ascii?q?4UBgwSCVwKBKgEBiBGGCH6EVIt0AQYCAYFWBUyPKgYYiWmHXYkpj28CBAIEBQI?=
 =?us-ascii?q?FDyGBO4F4HxQaI4EBbYFOghsMFxKDOIp0UYEHIYpogXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ALAAA7RhFcmBHrdtBkGgEBAQEBAgEBAQEHAgEBAQGBVAI?=
 =?us-ascii?q?BAQEBCwGBMIJig3yIeIszgWAIJYkAJG6PNBIBARgUhECCfiI3Bg0BAwEBAQEBA?=
 =?us-ascii?q?QIBEwEBAQEBCAsLBhsOIwyCNgUCAxoBBoJcAQIDAQIgBAsBBQgBBQoMHQECAQI?=
 =?us-ascii?q?BAgYBAQUFCw0CAh8DBAICAwEfEQEFARwGAQwGAgEBAYMcgWkBAxUBBJppPIsNf?=
 =?us-ascii?q?BYFAReCdwWCRIF5ChknDV2BNwIGEnmBI4hygRyCFoERJwyCX4UBgwSCVwKBKgE?=
 =?us-ascii?q?BiBGGCH6EVIt0AQYCAYFWBUyPKgYYiWmHXYkpj28CBAIEBQIFDyGBO4F4HxQaI?=
 =?us-ascii?q?4EBbYFOghsMFxKDOIp0UYEHIYpogXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,345,1539673200"; 
   d="scan'208";a="141854906"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 12 Dec 2018 09:36:19 -0800
Received: from localhost ([::1]:46410 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gX8Qk-0002hO-83
	for like.xu@linux.intel.com; Wed, 12 Dec 2018 12:36:18 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:37334)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <alistair23@gmail.com>) id 1gX8QJ-0002f9-EA
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 12:35:52 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <alistair23@gmail.com>) id 1gX8QI-0005kL-39
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 12:35:51 -0500
Received: from mail-pg1-x543.google.com ([2607:f8b0:4864:20::543]:39345)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <alistair23@gmail.com>)
	id 1gX8QD-0005WI-FA; Wed, 12 Dec 2018 12:35:45 -0500
Received: by mail-pg1-x543.google.com with SMTP id w6so8637462pgl.6;
	Wed, 12 Dec 2018 09:35:45 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
	h=subject:to:cc:references:from:message-id:date:user-agent
	:mime-version:in-reply-to:content-language:content-transfer-encoding;
	bh=vljcdUifzxZaUkkDUsV46AGQcCUCzqiUJijzc79kmn8=;
	b=kQfqouypxJ7B3cLhtyjRU41FnvcyOdXD0XpGumQRU6B1LQkd81UOcRiS20eetaWGxp
	Z8/GFDJzdCYcgshV5GyX6CiQC2N0chqfV21tT4qAGmtam8LBaTc2QqlDN6doKf9J8iEG
	FWQuRtuZJm2/eCMCX2gURbNbJH3rjvzjj/l2T+EGTqADOAC5k6qcxdvuJMWl4RjNqWPf
	/anl9yKqBqW9vcKIdHNNOUr8MRLzAT9H4/OWv3prGFNbg5TDVSbFSRx/wM33F8dTArVL
	ASXnQXgzyl2ctuT8q/aiibX+iqPUaznTWyo/m4os5ywnGdhaU8lsX+uH2mliI8k9ZJAt
	XYnw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:subject:to:cc:references:from:message-id:date
	:user-agent:mime-version:in-reply-to:content-language
	:content-transfer-encoding;
	bh=vljcdUifzxZaUkkDUsV46AGQcCUCzqiUJijzc79kmn8=;
	b=FNlZLxmgx5mbYMttnegsJuTeFFNCZStxRc94iUqDH4VE9HxKFpfmY8Lf0Wv1NaI1jZ
	gILOtMh0FnLiOuF+Pug2UaW9JxCv9x61ctvXunjorBFcle4zQ99XPAtOPvPrl15iMjnj
	qHRTUlmGBQTt7UfGop5e+NIoaA3RzXL9iD8/xZM8a68dPAnoHhz0B7A+/fJQIXXd0hpG
	uYdiVqXJoT/MZk6j1A2GlTx5WJbVmjKLnWsAyVocyMHWpaB62Us4ESyP5R2oCx734RjH
	Gp5dGnAOZJQeeb9/8KhvHhxxqsO9XpIiC5aGug4TvRCusF84XHzS11vgNhzVhfKXcCPg
	yeMA==
X-Gm-Message-State: AA+aEWZFR6W46IrweHKGMzmoujvRfhajcFcFsF1CMMohM9kpGiU6NBaQ
	S8TWAgf3LbXGbAAAqvOaLPx4xnv2
X-Google-Smtp-Source: AFSGD/XAWBgwP0eliyRGJxIeCYMzxr6gJ0a1nrW8rvlQDye8O1gQBseRM2+5EG4sm1bPXPo5AdLwvw==
X-Received: by 2002:a63:604f:: with SMTP id u76mr19124879pgb.401.1544636143908;
	Wed, 12 Dec 2018 09:35:43 -0800 (PST)
Received: from ?IPv6:2601:646:8e00:dca:6bcc:38b1:fed7:e746?
	([2601:646:8e00:dca:6bcc:38b1:fed7:e746])
	by smtp.gmail.com with ESMTPSA id
	d129sm28389657pfc.31.2018.12.12.09.35.42
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Wed, 12 Dec 2018 09:35:43 -0800 (PST)
To: Luc Michel <luc.michel@greensocs.com>, qemu-devel@nongnu.org
References: <20181207090135.7651-1-luc.michel@greensocs.com>
	<20181207090135.7651-8-luc.michel@greensocs.com>
From: Alistair Francis <alistair23@gmail.com>
Message-ID: <00da96e1-5cfc-05bb-4765-33a71d8aff88@gmail.com>
Date: Wed, 12 Dec 2018 09:35:41 -0800
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.1
MIME-Version: 1.0
In-Reply-To: <20181207090135.7651-8-luc.michel@greensocs.com>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-US
Content-Transfer-Encoding: 8bit
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2607:f8b0:4864:20::543
Subject: Re: [Qemu-devel] [PATCH v8 07/16] gdbstub: add multiprocess support
 to (f|s)ThreadInfo and ThreadExtraInfo
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Peter Maydell <peter.maydell@linaro.org>,
	Eduardo Habkost <ehabkost@redhat.com>, alistair@alistair23.me,
	mark.burton@greensocs.com,
	=?UTF-8?Q?Philippe_Mathieu-Daud=c3=a9?= <f4bug@amsat.org>,
	saipava@xilinx.com, edgari@xilinx.com, qemu-arm@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On 07/12/2018 1:01 am, Luc Michel wrote:
> Change the thread info related packets handling to support multiprocess
> extension.
> 
> Add the CPUs class name in the extra info to help differentiate
> them in multiprocess mode.
> 
> Signed-off-by: Luc Michel <luc.michel@greensocs.com>
> Reviewed-by: Philippe Mathieu-Daud√© <philmd@redhat.com>
> Reviewed-by: Edgar E. Iglesias <edgar.iglesias@xilinx.com>

Reviewed-by: Alistair Francis <alistair.francis@wdc.com>

Alistair

> ---
>   gdbstub.c | 37 +++++++++++++++++++++++++++----------
>   1 file changed, 27 insertions(+), 10 deletions(-)
> 
> diff --git a/gdbstub.c b/gdbstub.c
> index bea0215f30..770915446a 100644
> --- a/gdbstub.c
> +++ b/gdbstub.c
> @@ -1267,11 +1267,10 @@ out:
>   static int gdb_handle_packet(GDBState *s, const char *line_buf)
>   {
>       CPUState *cpu;
>       CPUClass *cc;
>       const char *p;
> -    uint32_t thread;
>       uint32_t pid, tid;
>       int ch, reg_size, type, res;
>       uint8_t mem_buf[MAX_PACKET_LENGTH];
>       char buf[sizeof(mem_buf) + 1 /* trailing NUL */];
>       char thread_id[16];
> @@ -1563,30 +1562,48 @@ static int gdb_handle_packet(GDBState *s, const char *line_buf)
>               snprintf(buf, sizeof(buf), "QC%s",
>                        gdb_fmt_thread_id(s, cpu, thread_id, sizeof(thread_id)));
>               put_packet(s, buf);
>               break;
>           } else if (strcmp(p,"fThreadInfo") == 0) {
> -            s->query_cpu = first_cpu;
> +            s->query_cpu = gdb_first_attached_cpu(s);
>               goto report_cpuinfo;
>           } else if (strcmp(p,"sThreadInfo") == 0) {
>           report_cpuinfo:
>               if (s->query_cpu) {
> -                snprintf(buf, sizeof(buf), "m%x", cpu_gdb_index(s->query_cpu));
> +                snprintf(buf, sizeof(buf), "m%s",
> +                         gdb_fmt_thread_id(s, s->query_cpu,
> +                                       thread_id, sizeof(thread_id)));
>                   put_packet(s, buf);
> -                s->query_cpu = CPU_NEXT(s->query_cpu);
> +                s->query_cpu = gdb_next_attached_cpu(s, s->query_cpu);
>               } else
>                   put_packet(s, "l");
>               break;
>           } else if (strncmp(p,"ThreadExtraInfo,", 16) == 0) {
> -            thread = strtoull(p+16, (char **)&p, 16);
> -            cpu = find_cpu(thread);
> +            if (read_thread_id(p + 16, &p, &pid, &tid) == GDB_READ_THREAD_ERR) {
> +                put_packet(s, "E22");
> +                break;
> +            }
> +            cpu = gdb_get_cpu(s, pid, tid);
>               if (cpu != NULL) {
>                   cpu_synchronize_state(cpu);
> -                /* memtohex() doubles the required space */
> -                len = snprintf((char *)mem_buf, sizeof(buf) / 2,
> -                               "CPU#%d [%s]", cpu->cpu_index,
> -                               cpu->halted ? "halted " : "running");
> +
> +                if (s->multiprocess && (s->process_num > 1)) {
> +                    /* Print the CPU model and name in multiprocess mode */
> +                    ObjectClass *oc = object_get_class(OBJECT(cpu));
> +                    const char *cpu_model = object_class_get_name(oc);
> +                    char *cpu_name =
> +                        object_get_canonical_path_component(OBJECT(cpu));
> +                    len = snprintf((char *)mem_buf, sizeof(buf) / 2,
> +                                   "%s %s [%s]", cpu_model, cpu_name,
> +                                   cpu->halted ? "halted " : "running");
> +                    g_free(cpu_name);
> +                } else {
> +                    /* memtohex() doubles the required space */
> +                    len = snprintf((char *)mem_buf, sizeof(buf) / 2,
> +                                   "CPU#%d [%s]", cpu->cpu_index,
> +                                   cpu->halted ? "halted " : "running");
> +                }
>                   trace_gdbstub_op_extra_info((char *)mem_buf);
>                   memtohex(buf, mem_buf, len);
>                   put_packet(s, buf);
>               }
>               break;
> 


