Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  14 Dec 2018 08:37:32 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id EC73858061F
	for <like.xu@linux.intel.com>; Thu, 13 Dec 2018 06:35:15 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga005-1.fm.intel.com with ESMTP; 13 Dec 2018 06:35:15 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AyyKXJBOL0LqGVTUOHbIl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0K/z7o8bcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRsleVyJDDY28?=
 =?us-ascii?q?YYUBDPQPMvpXoYfgv1sDrxmwCAaxCO7h1jNHmGT20LYm0+Q4CwzKwBAsE84MvX?=
 =?us-ascii?q?nSsd77NL0SUeewzKTQyjvMdelW1ivk5IXUdBAuvOuMWqhtesTX1EkvDR3KgU+N?=
 =?us-ascii?q?qYf4OD6V0/4Cs3KH4OV6U+KglnQnpB9rrjir28cskJfGiZgIyl3f+iV5xZw6Jd?=
 =?us-ascii?q?y8SEJhfdGkF55QujicOoBrQc0iW3lltDgmxrAFo5K3YTUGxZc9yxLBZfGKc5KE?=
 =?us-ascii?q?7g/hWeqJPzt3nm5pdK66ihqv/kWtyvHwW8y73VtJrydIndzBum4R2xHW78WKRf?=
 =?us-ascii?q?Rw80in1D2SzQ7c8PtELloxlafDK54u3Lowlp0LvETHHy/2g1n2jLSMekUr/Oio?=
 =?us-ascii?q?9v7rYrL8pp+TL4N0iwf+PboymsGnH+g0LgsDU3KG9eih17Dv51P1TbtKg/Esj6?=
 =?us-ascii?q?XUsojWJcEBqa64Bw9V3Jwj6xG6Dzq+ydQXg3wHLE9cdB2akYfpJU/BIPThAfik?=
 =?us-ascii?q?hFSsjTFryOzYMb36BZnNKnnDkLT/crpn5E9c1RI+zdRe55JSF7EAL+j/Wk73tN?=
 =?us-ascii?q?zEEBA5Nxa4zPrgCNV4zY4eX2WPAqmWMKPUrF+E/OUvI/ODZIMNojbyN+Al5+Ly?=
 =?us-ascii?q?jX8+gVIdeaip3ZgJZ3yiEfVmPl6UYX7tgtcHDGcLsRAyTO3siF2eTzFTY2y+UL?=
 =?us-ascii?q?475jE+W8qbC5zeTNWtnKCZx3X8WZlXfXxdTFaLF3juasODQfhLbSuTJspolHsD?=
 =?us-ascii?q?TaSgTIk6kgijsRK/x7d5I+6HxysDqJi20dF04/HUxwg/8CExA8mD3mXIVWxtg2?=
 =?us-ascii?q?4TWxcw26Zwp1E7zU2MhrNlif5VHsAG+vVSTw0hPoTdxeEpN9enQgLAetKFYEyr?=
 =?us-ascii?q?TtWvHXc6Sddi7cUJZhNYEs+pyznF0zArS5sIjbGCGdRg96vG1HH3K9xwjXLbzq?=
 =?us-ascii?q?QoknEpR8JOMSutgasppFubPJLAj0jMz/XiTq8bxiOYsT7blWc=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BQAAAQbRJcmBHrdtBjHgEGBwaBUwcLA?=
 =?us-ascii?q?YEwgmKDfIh4jUB8hnyCEQmNQhSBYhEYFIRAgwQiNgcNAQMBAQEBAQECARMBAQE?=
 =?us-ascii?q?BAQgLCwYbDiMMgjYFAgMaAQaCXAECAwECIAQZAQUKDB0BAgECAQIGAQEFBQsNA?=
 =?us-ascii?q?gIiBAICAwEeAREBBQEOAQ0ZBYMcgWgBAxUBBJstPIsNfBYFAReCdwWEQQoZJw1?=
 =?us-ascii?q?dMYEGAgYSeYhpgkiCFoERgl01hGoXgwSCVwKJP4FzhRCEV4t2BwKRWRiRSpk6D?=
 =?us-ascii?q?yGBLAtOgS4zGiOBAYI7ghsMF4NKilg8MYEHilGBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0BQAAAQbRJcmBHrdtBjHgEGBwaBUwcLAYEwgmKDfIh4jUB?=
 =?us-ascii?q?8hnyCEQmNQhSBYhEYFIRAgwQiNgcNAQMBAQEBAQECARMBAQEBAQgLCwYbDiMMg?=
 =?us-ascii?q?jYFAgMaAQaCXAECAwECIAQZAQUKDB0BAgECAQIGAQEFBQsNAgIiBAICAwEeARE?=
 =?us-ascii?q?BBQEOAQ0ZBYMcgWgBAxUBBJstPIsNfBYFAReCdwWEQQoZJw1dMYEGAgYSeYhpg?=
 =?us-ascii?q?kiCFoERgl01hGoXgwSCVwKJP4FzhRCEV4t2BwKRWRiRSpk6DyGBLAtOgS4zGiO?=
 =?us-ascii?q?BAYI7ghsMF4NKilg8MYEHilGBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,349,1539673200"; 
   d="scan'208";a="43918887"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 13 Dec 2018 06:34:14 -0800
Received: from localhost ([::1]:52941 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gXS45-0008Dh-Mf
	for like.xu@linux.intel.com; Thu, 13 Dec 2018 09:34:13 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:55527)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <marcandre.lureau@gmail.com>) id 1gXS0v-0005dY-0J
	for qemu-devel@nongnu.org; Thu, 13 Dec 2018 09:31:02 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <marcandre.lureau@gmail.com>) id 1gXS0s-0002Sa-To
	for qemu-devel@nongnu.org; Thu, 13 Dec 2018 09:30:56 -0500
Received: from mail-wr1-x444.google.com ([2a00:1450:4864:20::444]:33579)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <marcandre.lureau@gmail.com>)
	id 1gXS0s-0002Of-DZ
	for qemu-devel@nongnu.org; Thu, 13 Dec 2018 09:30:54 -0500
Received: by mail-wr1-x444.google.com with SMTP id c14so2255178wrr.0
	for <qemu-devel@nongnu.org>; Thu, 13 Dec 2018 06:30:51 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
	h=mime-version:references:in-reply-to:from:date:message-id:subject:to
	:cc:content-transfer-encoding;
	bh=QVNR4U9niXbjMmOeb9C/qk6aYfsKToqOBKMBz7ZDJvk=;
	b=kk2PXD1jjtYF+8QOZaqeVtiSwzn07/QyxOPCG+VEck9hct5n6/AGvVuH4Qwt+anhNY
	J08blzW2X74D82yv4S5QqHhx4xQKiqhkfFtjW8uwa83g96hlG4lL4hB3kIqlEV7utNsc
	djgbOs3jUURS1ijZLZyTPCRfiCdEKUNPeierIqawgJvRu+594R0YlFx/QUfwOqNiqIaZ
	2EXH9RcmN8eJucPtKmH1wIgqnhxWQR1YCeSoWk4ot/dfQK5Y4DeXd/P6Bb/VEjfU/4Zh
	Wgap4xSgmaLfcZZqg245m5dbI8BQBGORfm1XfgVEskZ6e1+SOwFu5XQ80z4uDk2o/CT+
	hggg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:mime-version:references:in-reply-to:from:date
	:message-id:subject:to:cc:content-transfer-encoding;
	bh=QVNR4U9niXbjMmOeb9C/qk6aYfsKToqOBKMBz7ZDJvk=;
	b=FkSURFYk0XdcU3QwBxWXv/DSXPb7M62Gz34OIho9VITDlaw6Mxmg9gP/Wcy8zxvgyS
	3muBkv40g9t75OieWcabOsqk0wUqfP0RTcCIyc464M1sn6nn6Pco/8UDMmNN7EPb13rv
	sZpJtMGdJ4ggxwYluH9/VbMeAgukxgtpllb3FPbY+oCSiQYx6LBilpbL4ojgTTEQu0ZH
	3dSl8xOn7/IJphe2eSI9DqNeuRNzMMVW0TC0Xp/gBsGLwazevYyIVaGADB/8kvwHhFa+
	G8aWpcTq2eo52+Qs3MVYJTP2yTfHk4077CXBW0u/CFbhKfDIudYwNOZ2u/xp/ABFNVFK
	fYng==
X-Gm-Message-State: AA+aEWZzkB0/DIVQVNjELBefRvUwRrVnCooSYkI/aSlAS8etYU1LT2Iv
	lxcacrUpDOZHVUZ2ZlRGnNVesMgKqb9hrjO9EDg=
X-Google-Smtp-Source: AFSGD/WAu/oW+82minrzSyFYkoIAsxMvk/eNCv7OTv3OfhcNwuhReWgulcgE7nsKaft7xFtc03xulx9wnElL7hpfVp0=
X-Received: by 2002:adf:80cf:: with SMTP id 73mr2912593wrl.57.1544711449968;
	Thu, 13 Dec 2018 06:30:49 -0800 (PST)
MIME-Version: 1.0
References: <20180910083222.8245-1-marcandre.lureau@redhat.com>
	<20180910083222.8245-7-marcandre.lureau@redhat.com>
	<62b5734c-c23e-cfc2-701e-45692a7f1bd1@redhat.com>
	<20181213130130.40a31420@redhat.com>
	<CAMxuvayALT-jFsQxjLuO18Gz8y3444ZtJLx0wt4GzpV3nnUbnQ@mail.gmail.com>
	<de219992-ad90-ab51-6670-19d61709c5d9@redhat.com>
In-Reply-To: <de219992-ad90-ab51-6670-19d61709c5d9@redhat.com>
From: =?UTF-8?B?TWFyYy1BbmRyw6kgTHVyZWF1?= <marcandre.lureau@gmail.com>
Date: Thu, 13 Dec 2018 18:30:38 +0400
Message-ID: <CAJ+F1CJjVa_Y8R=1U4TiD_41R6XetpaTqHw-O1NGQH4scuqDHw@mail.gmail.com>
To: philmd@redhat.com
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2a00:1450:4864:20::444
Subject: Re: [Qemu-devel] [PATCH v12 6/6] tpm: add ACPI memory clear
 interface
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Eduardo Habkost <ehabkost@redhat.com>,
	"Michael S. Tsirkin" <mst@redhat.com>,
	Stefan Berger <stefanb@linux.vnet.ibm.com>, QEMU <qemu-devel@nongnu.org>,
	Paolo Bonzini <pbonzini@redhat.com>, Igor Mammedov <imammedo@redhat.com>,
	Laszlo Ersek <lersek@redhat.com>, Richard Henderson <rth@twiddle.net>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Hi

On Thu, Dec 13, 2018 at 6:08 PM Philippe Mathieu-Daud=C3=A9
<philmd@redhat.com> wrote:
>
> On 12/13/18 1:18 PM, Marc-Andr=C3=A9 Lureau wrote:
> > On Thu, Dec 13, 2018 at 4:01 PM Igor Mammedov <imammedo@redhat.com> wro=
te:
> >>
> >> On Wed, 12 Dec 2018 17:22:21 +0100
> >> Philippe Mathieu-Daud=C3=A9 <philmd@redhat.com> wrote:
> >>
> >>> On 9/10/18 10:32 AM, Marc-Andr=C3=A9 Lureau wrote:
> >>>> This allows to pass the last failing test from the Windows HLK TPM 2=
.0
> >>>> TCG PPI 1.3 tests.
> >>>>
> >>>> The interface is described in the "TCG Platform Reset Attack
> >>>> Mitigation Specification", chapter 6 "ACPI _DSM Function". According
> >>>> to Laszlo, it's not so easy to implement in OVMF, he suggested to do
> >>>> it in qemu instead.
> >>>>
> >>>> Signed-off-by: Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com>
> >>>> ---
> >>>>  hw/tpm/tpm_ppi.h     |  2 ++
> >>>>  hw/i386/acpi-build.c | 46 +++++++++++++++++++++++++++++++++++++++++=
+++
> >>>>  hw/tpm/tpm_crb.c     |  1 +
> >>>>  hw/tpm/tpm_ppi.c     | 22 +++++++++++++++++++++
> >>>>  hw/tpm/tpm_tis.c     |  1 +
> >>>>  docs/specs/tpm.txt   |  2 ++
> >>>>  hw/tpm/trace-events  |  3 +++
> >>>>  7 files changed, 77 insertions(+)
> >>>>
> >>>> diff --git a/hw/tpm/tpm_ppi.h b/hw/tpm/tpm_ppi.h
> >>>> index c2ab2ed300..b8f67962c7 100644
> >>>> --- a/hw/tpm/tpm_ppi.h
> >>>> +++ b/hw/tpm/tpm_ppi.h
> >>>> @@ -23,4 +23,6 @@ typedef struct TPMPPI {
> >>>>  bool tpm_ppi_init(TPMPPI *tpmppi, struct MemoryRegion *m,
> >>>>                    hwaddr addr, Object *obj, Error **errp);
> >>>>
> >>>
> >>> Can you add documentation?
> >>>
> >>>> +void tpm_ppi_reset(TPMPPI *tpmppi);
> >>>> +
> >>>>  #endif /* TPM_TPM_PPI_H */
> >>>> diff --git a/hw/i386/acpi-build.c b/hw/i386/acpi-build.c
> >>>> index c5e9a6e11d..2ab3e8fae7 100644
> >>>> --- a/hw/i386/acpi-build.c
> >>>> +++ b/hw/i386/acpi-build.c
> >>>> @@ -1824,6 +1824,13 @@ build_tpm_ppi(TPMIf *tpm, Aml *dev)
> >>>>      pprq =3D aml_name("PPRQ");
> >>>>      pprm =3D aml_name("PPRM");
> >>>>
> >>>> +    aml_append(dev,
> >>>> +               aml_operation_region("TPP3", AML_SYSTEM_MEMORY,
> >>>> +                                    aml_int(TPM_PPI_ADDR_BASE + 0x1=
5a),
> >>>
> >>> Can you add a definition for this magic value?
> >>> Maybe:
> >>>
> >>> #define TPM_PPI_MEMORY_OVERWRITE_OFFSET 0x15a
> >>>
> >>> or
> >>>
> >>> #define TPM_PPI_MOVV_OFFSET 0x15a
> >> I'd prefer explicit numeric values there as it's a bit easier to revie=
w
> >> and grep in 'spec' since one doesn't have to jump to define definition
> >> first to find out value to compare with spec.
> >> What I'd add though is verbatim comment from spec like we do
> >> in APCI code so we could jump to the field of interest in spec
> >> just doing copy&paste&search
> >
> > I don't mind.
> > Philippe, are you okay going back to numeric values?
>
> Can we have a consensus using:
>
> #define TPM_PPI_MEMORY_OVERWRITE_OFFSET_0x15A 0x15a
>
> Joking!
>
> I prefer definitions but since Igor maintains ACPI, he rules and I have
> no problem accepting this numeric value :)

ok, with Igor comments, does it get you review-by?
thanks

>
> >
> > Igor, is this comment what you would expect where the 0x15a value is us=
ed:
> > /* 0x15a: movv field in ACPI PPI Interface, see specs/tpm.txt */
> >
> > thanks
> >>
> >>>
> >>>> +                                    0x1));
> >>>> +    field =3D aml_field("TPP3", AML_BYTE_ACC, AML_NOLOCK, AML_PRESE=
RVE);
> >>>> +    aml_append(field, aml_named_field("MOVV", 8));
> >>>> +    aml_append(dev, field);
> >>>>      /*
> >>>>       * DerefOf in Windows is broken with SYSTEM_MEMORY.  Use a dyna=
mic
> >>>>       * operation region inside of a method for getting FUNC[op].
> >>>> @@ -2166,7 +2173,46 @@ build_tpm_ppi(TPMIf *tpm, Aml *dev)
> >>>>              aml_append(ifctx, aml_return(aml_buffer(1, zerobyte)));
> >>>>          }
> >>>>          aml_append(method, ifctx);
> >>>> +
> >>>> +        ifctx =3D aml_if(
> >>>> +            aml_equal(uuid,
> >>>> +                      aml_touuid("376054ED-CC13-4675-901C-4756D7F2D=
45D")));
> >>>> +        {
> >>>> +            /* standard DSM query function */
> >>>> +            ifctx2 =3D aml_if(aml_equal(function, zero));
> >>>> +            {
> >>>> +                uint8_t byte_list[1] =3D { 0x03 };
> >>>> +                aml_append(ifctx2, aml_return(aml_buffer(1, byte_li=
st)));
> >>>> +            }
> >>>> +            aml_append(ifctx, ifctx2);
> >>>> +
> >>>> +            /*
> >>>> +             * TCG Platform Reset Attack Mitigation Specification 1=
.0 Ch.6
> >>>> +             *
> >>>> +             * Arg 2 (Integer): Function Index =3D 1
> >>>> +             * Arg 3 (Package): Arguments =3D Package: Type: Intege=
r
> >>>> +             *                  Operation Value of the Request
> >>>> +             * Returns: Type: Integer
> >>>> +             *          0: Success
> >>>> +             *          1: General Failure
> >>>> +             */
> >>>> +            ifctx2 =3D aml_if(aml_equal(function, one));
> >>>> +            {
> >>>> +                aml_append(ifctx2,
> >>>> +                           aml_store(aml_derefof(aml_index(argument=
s, zero)),
> >>>> +                                     op));
> >>>> +                {
> >>>> +                    aml_append(ifctx2, aml_store(op, aml_name("MOVV=
")));
> >>>> +
> >>>> +                    /* 0: success */
> >>>> +                    aml_append(ifctx2, aml_return(zero));
> >>>> +                }
> >>>> +            }
> >>>> +            aml_append(ifctx, ifctx2);
> >>>> +        }
> >>>> +        aml_append(method, ifctx);
> >>>>      }
> >>>> +
> >>>>      aml_append(dev, method);
> >>>>  }
> >>>>
> >>>> diff --git a/hw/tpm/tpm_crb.c b/hw/tpm/tpm_crb.c
> >>>> index b243222fd6..48f6a716ad 100644
> >>>> --- a/hw/tpm/tpm_crb.c
> >>>> +++ b/hw/tpm/tpm_crb.c
> >>>> @@ -233,6 +233,7 @@ static void tpm_crb_reset(void *dev)
> >>>>  {
> >>>>      CRBState *s =3D CRB(dev);
> >>>>
> >>>> +    tpm_ppi_reset(&s->ppi);
> >>>>      tpm_backend_reset(s->tpmbe);
> >>>>
> >>>>      memset(s->regs, 0, sizeof(s->regs));
> >>>> diff --git a/hw/tpm/tpm_ppi.c b/hw/tpm/tpm_ppi.c
> >>>> index f2f07f895e..ac05ba8d3c 100644
> >>>> --- a/hw/tpm/tpm_ppi.c
> >>>> +++ b/hw/tpm/tpm_ppi.c
> >>>> @@ -16,8 +16,30 @@
> >>>>  #include "qapi/error.h"
> >>>>  #include "cpu.h"
> >>>>  #include "sysemu/memory_mapping.h"
> >>>> +#include "sysemu/reset.h"
> >>>>  #include "migration/vmstate.h"
> >>>>  #include "tpm_ppi.h"
> >>>> +#include "trace.h"
> >>>> +
> >>>> +void tpm_ppi_reset(TPMPPI *tpmppi)
> >>>> +{
> >>>> +    if (tpmppi->buf[0x15a] & 0x1) {
> >>>
> >>> TPM_PPI_MOVV_OFFSET
> >>>
> >>>> +        GuestPhysBlockList guest_phys_blocks;
> >>>> +        GuestPhysBlock *block;
> >>>> +
> >>>> +        guest_phys_blocks_init(&guest_phys_blocks);
> >>>> +        guest_phys_blocks_append(&guest_phys_blocks);
> >>>> +        QTAILQ_FOREACH(block, &guest_phys_blocks.head, next) {
> >>>> +            trace_tpm_ppi_memset(block->host_addr,
> >>>> +                             block->target_end - block->target_star=
t);
> >>>> +            memset(block->host_addr, 0,
> >>>> +                   block->target_end - block->target_start);
> >>>> +            memory_region_set_dirty(block->mr, 0,
> >>>> +                                    block->target_end - block->targ=
et_start);
> >>>> +        }
> >>>> +        guest_phys_blocks_free(&guest_phys_blocks);
> >>>> +    }
> >>>> +}
> >>>>
> >>>>  bool tpm_ppi_init(TPMPPI *tpmppi, struct MemoryRegion *m,
> >>>>                    hwaddr addr, Object *obj, Error **errp)
> >>>> diff --git a/hw/tpm/tpm_tis.c b/hw/tpm/tpm_tis.c
> >>>> index 70432ffe8b..d9bfa956cc 100644
> >>>> --- a/hw/tpm/tpm_tis.c
> >>>> +++ b/hw/tpm/tpm_tis.c
> >>>> @@ -868,6 +868,7 @@ static void tpm_tis_reset(DeviceState *dev)
> >>>>      s->be_buffer_size =3D MIN(tpm_backend_get_buffer_size(s->be_dri=
ver),
> >>>>                              TPM_TIS_BUFFER_MAX);
> >>>>
> >>>> +    tpm_ppi_reset(&s->ppi);
> >>>>      tpm_backend_reset(s->be_driver);
> >>>>
> >>>>      s->active_locty =3D TPM_TIS_NO_LOCALITY;
> >>>> diff --git a/docs/specs/tpm.txt b/docs/specs/tpm.txt
> >>>> index 332c2ae597..ce9bda3c89 100644
> >>>> --- a/docs/specs/tpm.txt
> >>>> +++ b/docs/specs/tpm.txt
> >>>> @@ -121,6 +121,8 @@ layout:
> >>>>   +----------+--------+--------+------------------------------------=
-------+
> >>>>   | next_step|   0x1  |  0x159 | Operation to execute after reboot b=
y      |
> >>>>   |          |        |        | firmware. Used by firmware.        =
       |
> >>>> + +----------+--------+--------+------------------------------------=
-------+
> >>>> + | movv     |   0x1  |  0x15a | Memory overwrite variable          =
       |
> >>>>   +----------+--------+--------+------------------------------------=
-------+
> >>>>
> >>>>     The following values are supported for the 'func' field. They co=
rrespond
> >>>> diff --git a/hw/tpm/trace-events b/hw/tpm/trace-events
> >>>> index 25bee0cecf..920d32ad55 100644
> >>>> --- a/hw/tpm/trace-events
> >>>> +++ b/hw/tpm/trace-events
> >>>> @@ -51,3 +51,6 @@ tpm_tis_mmio_write_init_abort(void) "Initiating ab=
ort"
> >>>>  tpm_tis_mmio_write_lowering_irq(void) "Lowering IRQ"
> >>>>  tpm_tis_mmio_write_data2send(uint32_t value, unsigned size) "Data t=
o send to TPM: 0x%08x (size=3D%d)"
> >>>>  tpm_tis_pre_save(uint8_t locty, uint32_t rw_offset) "locty: %d, rw_=
offset =3D %u"
> >>>> +
> >>>> +# hw/tpm/tpm_ppi.c
> >>>> +tpm_ppi_memset(uint8_t *ptr, size_t size) "memset: %p %zu"
> >>>>
> >>>
> >>> I'd split this patch in 2: Add ACPI, Add tpm_ppi_reset.
> >>
>


--=20
Marc-Andr=C3=A9 Lureau

