Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  16 Dec 2018 10:42:45 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 618275805F0
	for <like.xu@linux.intel.com>; Sat, 15 Dec 2018 10:43:18 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 15 Dec 2018 10:43:18 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A4bbk2hU7n5HvZwNNx1+UooVk3dLV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZRSHu6dThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGoOy?=
 =?us-ascii?q?YZUBAeQCOuhXoJXyqVQToxumBwSiBuzixiJGi3Pqw6I6yP8sER3f3AE6A94Dqm?=
 =?us-ascii?q?jYodfzOawPUe611q7IzTDbYv5IwzDy9ZLIchE9rvqRW7x/b9fax0goFwzfklWf?=
 =?us-ascii?q?t5blNC6S2+sRt2ib4PFtVeG1hG4gtg59uD+vxt0jioTQgI8e11PK9T1hzYorOd?=
 =?us-ascii?q?G1S1R3bcO5HJZTrS2WKYV7T8M4T211uis20rkLtYKhcCUJzJkr3QPTZviGfoSS?=
 =?us-ascii?q?/x7vSfqdLDFlj3x/Yr2/nQy98U24x+38SMa01FFKozJBktnNrXANywfT5tKISv?=
 =?us-ascii?q?t740etwzGP1xrc6u1cIEA0k7TUK4I5z7IuipYesl7PEjLrlEj1lqOaaEsp9+iy?=
 =?us-ascii?q?5+j6YLjqvpqcOJV1igH6PKQugMu/AeEgPwgXQWeb/Pm82KT+8kLnXrVFkPk2nr?=
 =?us-ascii?q?DCv5DdOMQboLK2DBFO0ook7xa/DjSm38oCkXgIMVJIYBaHj4nvO1HTL/H0F/a/?=
 =?us-ascii?q?g1KwkDh1w/DKJKHuApLILnXYlrfherB960FayAou19xf4IhUCr4ZLPLpRkDxrM?=
 =?us-ascii?q?DYDgM+MwGsx+bnCdZ92Z0EVWOAH6+UK6fSsV6O5uIyLOiAfo4VuDDhK/c74/7i?=
 =?us-ascii?q?l2M2mVgYffrh4J0MdXrtHuh6O17LJj3og8wdCiEMuQwxSvGsj0eNFjtaZnK3Vq?=
 =?us-ascii?q?R74SknCYWgFsDaS4WwxbCMwiq/TaBQfX1MX1WFEHP0cNedVvIRLS6fPMJl1yYJ?=
 =?us-ascii?q?TKWsUJMJ0xaouwnnjb19Ib3P5ycauJn/gcVz/PDZjhoo9DZ5XPiahk2EUWB41k?=
 =?us-ascii?q?wJTSQx2ugrrUVjy1ur3qlymPteU9BJ4OtDXw4gc5/QieVnXZS6Yg/dc83BbV+3?=
 =?us-ascii?q?TtiiBXllVt8tzsVIZk9sF9imijjH3iyjGbhTkKaEUs8a6KXZilNwK9x8wD7i2e?=
 =?us-ascii?q?EOiFA6T9EHYWaiiYZ8/g/fQYnTnBPKxO6Raa0A0XuVpy+4xm2UsRQdCVYoXA?=
 =?us-ascii?q?=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BhAgAPSxVchxHrdtBkghcCgS+CYoN8i?=
 =?us-ascii?q?HiLGIMJllyBbhkYFIdHIjQJDQEDAQEBAQEBAgETAQEBCgsJCBsOL0IBDgGBZAU?=
 =?us-ascii?q?CAxoBBoJfBAIgIwopAwMBAgYCJAIYCgQCAgMBOSABEgWDHYIBAQMBpHSBL4VAg?=
 =?us-ascii?q?1eBDYELhnKEQREGgX+BEYJdiD6CVwKhGQmRTwsYkVKJPJAogUaCDk0wCIMnkFx?=
 =?us-ascii?q?xgQQDg3qHHoF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0BhAgAPSxVchxHrdtBkghcCgS+CYoN8iHiLGIMJllyBbhk?=
 =?us-ascii?q?YFIdHIjQJDQEDAQEBAQEBAgETAQEBCgsJCBsOL0IBDgGBZAUCAxoBBoJfBAIgI?=
 =?us-ascii?q?wopAwMBAgYCJAIYCgQCAgMBOSABEgWDHYIBAQMBpHSBL4VAg1eBDYELhnKEQRE?=
 =?us-ascii?q?GgX+BEYJdiD6CVwKhGQmRTwsYkVKJPJAogUaCDk0wCIMnkFxxgQQDg3qHHoF3A?=
 =?us-ascii?q?QE?=
X-IronPort-AV: E=Sophos;i="5.56,358,1539673200"; 
   d="scan'208";a="56507101"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 15 Dec 2018 10:43:03 -0800
Received: from localhost ([::1]:40002 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gYEtz-0000wq-9Z
	for like.xu@linux.intel.com; Sat, 15 Dec 2018 13:43:03 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:59475)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <clg@kaod.org>) id 1gYEth-0000wf-8V
	for qemu-devel@nongnu.org; Sat, 15 Dec 2018 13:42:46 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <clg@kaod.org>) id 1gYEte-0002Q8-46
	for qemu-devel@nongnu.org; Sat, 15 Dec 2018 13:42:45 -0500
Received: from 18.mo6.mail-out.ovh.net ([46.105.73.110]:59400)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <clg@kaod.org>) id 1gYEtd-0002O6-TP
	for qemu-devel@nongnu.org; Sat, 15 Dec 2018 13:42:42 -0500
Received: from player772.ha.ovh.net (unknown [10.109.160.251])
	by mo6.mail-out.ovh.net (Postfix) with ESMTP id 9FEC219E1BB
	for <qemu-devel@nongnu.org>; Sat, 15 Dec 2018 19:42:33 +0100 (CET)
Received: from kaod.org (lfbn-1-10605-110.w90-89.abo.wanadoo.fr
	[90.89.196.110]) (Authenticated sender: clg@kaod.org)
	by player772.ha.ovh.net (Postfix) with ESMTPSA id 43069D98FEA;
	Sat, 15 Dec 2018 18:42:25 +0000 (UTC)
From: =?UTF-8?q?C=C3=A9dric=20Le=20Goater?= <clg@kaod.org>
To: David Gibson <david@gibson.dropbear.id.au>,
	Peter Maydell <peter.maydell@linaro.org>
Date: Sat, 15 Dec 2018 19:42:22 +0100
Message-Id: <20181215184222.15127-1-clg@kaod.org>
X-Mailer: git-send-email 2.17.2
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
X-Ovh-Tracer-Id: 5411356430602963942
X-VR-SPAMSTATE: OK
X-VR-SPAMSCORE: -100
X-VR-SPAMCAUSE: gggruggvucftvghtrhhoucdtuddrgedtkedrudehjedguddukecutefuodetggdotefrodftvfcurfhrohhfihhlvgemucfqggfjpdevjffgvefmvefgnecuuegrihhlohhuthemucehtddtnecusecvtfgvtghiphhivghnthhsucdlqddutddtmd
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 46.105.73.110
Subject: [Qemu-devel] [PATCH] target/ppc: fix compilation breakage on windows
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: =?UTF-8?q?C=C3=A9dric=20Le=20Goater?= <clg@kaod.org>, qemu-ppc@nongnu.org,
	qemu-devel@nongnu.org, Greg Kurz <groug@kaod.org>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Fix the PPC_BIT definitions to use ULL instead in UL and replace
__builtin_ffssl() by the equivalent ctz routines.

Signed-off-by: C=C3=A9dric Le Goater <clg@kaod.org>
---

 Compile tested with --cross-prefix=3Dx86_64-w64-mingw32-. When I have
 some more time, I might try runtime on windows also.

 The PPC compile failures have been there for a while (pre 2.12) and
 the MASK_TO_LSH macro was not used until the XIVE definitions were
 introduced.

 I let you guys decide on how you want to proceed, but I think it is
 safe to merge this patch as a prereq of the pull request.

 Thanks,

 C.

 target/ppc/cpu.h | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/target/ppc/cpu.h b/target/ppc/cpu.h
index ab68abe8a23c..a3d3e91eb4ce 100644
--- a/target/ppc/cpu.h
+++ b/target/ppc/cpu.h
@@ -70,18 +70,18 @@
 #define PPC_ELF_MACHINE     EM_PPC
 #endif
=20
-#define PPC_BIT(bit)            (0x8000000000000000UL >> (bit))
-#define PPC_BIT32(bit)          (0x80000000UL >> (bit))
-#define PPC_BIT8(bit)           (0x80UL >> (bit))
+#define PPC_BIT(bit)            (0x8000000000000000ULL >> (bit))
+#define PPC_BIT32(bit)          (0x80000000ULL >> (bit))
+#define PPC_BIT8(bit)           (0x80ULL >> (bit))
 #define PPC_BITMASK(bs, be)     ((PPC_BIT(bs) - PPC_BIT(be)) | PPC_BIT(b=
s))
 #define PPC_BITMASK32(bs, be)   ((PPC_BIT32(bs) - PPC_BIT32(be)) | \
                                  PPC_BIT32(bs))
 #define PPC_BITMASK8(bs, be)    ((PPC_BIT8(bs) - PPC_BIT8(be)) | PPC_BIT=
8(bs))
=20
 #if HOST_LONG_BITS =3D=3D 32
-# define MASK_TO_LSH(m)          (__builtin_ffsll(m) - 1)
+# define MASK_TO_LSH(m)          ctz32(m)
 #elif HOST_LONG_BITS =3D=3D 64
-# define MASK_TO_LSH(m)          (__builtin_ffsl(m) - 1)
+# define MASK_TO_LSH(m)          ctz64(m)
 #else
 # error Unknown sizeof long
 #endif
--=20
2.17.2


