Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 21:17:37 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from FMSMGA003.fm.intel.com (fmsmga003.fm.intel.com [10.253.24.29])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id F23CA580380
	for <like.xu@linux.intel.com>; Wed, 12 Dec 2018 20:09:56 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by FMSMGA003-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 12 Dec 2018 20:09:56 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A0KEoXhZWcafFKvJZtiydA0D/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZrsi8bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjmk8qxlSgLniD?=
 =?us-ascii?q?0fOjA57m/ZhM9+gqVZrxKvqBNxzJPaYJmXOfR8ca7RYN0XSXZfUcZKTCFNHpq8?=
 =?us-ascii?q?YpETA+cbIepUs4/wrEYOoxukAgmsAfvixDFSiX/o3K01zvkqHwDH3AM7BNIOt3?=
 =?us-ascii?q?LUp8jyOagPS++10qjIwijYYvNZ2Dfy85PIchcnof2WQL1wa83RyVE0GAzblFqQ?=
 =?us-ascii?q?s5bpPzKI2egXqWeb8vNtWOSygGAkswF8uiajytsvh4XTm44Z11PJ+T9nzIs7Jd?=
 =?us-ascii?q?C0UlN3bNy8HJdOuCyWK5Z6T8YsTmxspCo21rgLtYC+cSQXzZkqwgDTZvqaeIaS?=
 =?us-ascii?q?+B3jTvyeITJgiXJlZr2/gxGy/FCkyu39Tcm0zE1KojBKktnKq3ABzRvT6tKISv?=
 =?us-ascii?q?dl/0eh3yiA1xzL5+1aPUw5lrDXJ4M8zrMzjJYfr0rOEy/slEnrjqKabkAk9fKp?=
 =?us-ascii?q?6+TjbLXmvJicN4pshwHnLKsun9G/Df0lPQcQQWiU5+C82KT48k3+XbVKiOE5nb?=
 =?us-ascii?q?fCsJzdIcQbp625DBFP3ocs9hayFzOm0NUenXkaI1NJYhOHj471O17QJPD0F+uw?=
 =?us-ascii?q?g1OpkDpwwfDGObvhAprLLnjeirvheqx960FExAop0d9f/45UCq0GIP/rXk/xtd?=
 =?us-ascii?q?/YAQEjPw273ubqE9F91oIYWWKSDa6VKqLSsVmU5u0xJ+mAfpMauDH4K6tt2vj1?=
 =?us-ascii?q?kHVsmUMBZbL7mtwTaWukBbJgJEOWZ2eqhc0OVmIDvw47Reqtj0WeUDlVfDGrUq?=
 =?us-ascii?q?choz02Fo+iXrrFXZ2n1bmI3SOnGc9Pa2VbT1yBD3rsMp+JQuoBcz66JMhnnToZ?=
 =?us-ascii?q?E7+7RNg6yBusuQTmnqdhNffe4SYCtJjuh+RysvXeiRwoszl9HsiQ12WlS2Byl3?=
 =?us-ascii?q?kPATgs0/NRu0t4n3uKz6l0y9NZH8dU4bsdXg4kNJL0wO1wENf0HA7bec+DRV+8?=
 =?us-ascii?q?BNSqRzgsGIFii+QSalpwTo3xxivI2DCnVucY?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AZAACg2hFcmBHrdtBjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTCCYowVX4szgg2XU4FzFBgUhz4iNAkNAQMBAQEBAQECARMBAQE?=
 =?us-ascii?q?BAQgLCwYbDiMMgjYFAgMYCYJcAwMBAiQZAQEECikBAgMBAgYBAR8pCAMBKCsZB?=
 =?us-ascii?q?YMcggEBBKYWgWwzgnYBAQWCQ4RuCId9gyOBHBeBf4ERjW6JPweXSAmCJ48lCxh?=
 =?us-ascii?q?gkGYsmROBRoIOMxoIFxmDJ4IbDBeCBIwtLTGBBAOKY4F3AQE?=
X-IPAS-Result: =?us-ascii?q?A0AZAACg2hFcmBHrdtBjHAEBAQQBAQcEAQGBUQcBAQsBgTC?=
 =?us-ascii?q?CYowVX4szgg2XU4FzFBgUhz4iNAkNAQMBAQEBAQECARMBAQEBAQgLCwYbDiMMg?=
 =?us-ascii?q?jYFAgMYCYJcAwMBAiQZAQEECikBAgMBAgYBAR8pCAMBKCsZBYMcggEBBKYWgWw?=
 =?us-ascii?q?zgnYBAQWCQ4RuCId9gyOBHBeBf4ERjW6JPweXSAmCJ48lCxhgkGYsmROBRoIOM?=
 =?us-ascii?q?xoIFxmDJ4IbDBeCBIwtLTGBBAOKY4F3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,347,1539673200"; 
   d="scan'208";a="55704189"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 12 Dec 2018 20:09:56 -0800
Received: from localhost ([::1]:50223 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gXIJv-0002b5-HA
	for like.xu@linux.intel.com; Wed, 12 Dec 2018 23:09:55 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:50855)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <dgibson@ozlabs.org>) id 1gXICA-0003kC-50
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 23:01:57 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <dgibson@ozlabs.org>) id 1gXIC6-0002Ck-Qg
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 23:01:53 -0500
Received: from ozlabs.org ([2401:3900:2:1::2]:42769)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <dgibson@ozlabs.org>)
	id 1gXIC5-00025S-Mk; Wed, 12 Dec 2018 23:01:50 -0500
Received: by ozlabs.org (Postfix, from userid 1007)
	id 43Fg3K2HHQz9sN4; Thu, 13 Dec 2018 15:01:32 +1100 (AEDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
	d=gibson.dropbear.id.au; s=201602; t=1544673693;
	bh=yO1tarAJ9WpN9O3bk/xlwhnes7xgLcBJGm0hpFLorag=;
	h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
	b=N+zVU2tuduy7PA3TY+HZClEU5mcRBQZ2UaO7JOMvZWjHwr130mzMNqVbJbEsc62i3
	xNUoS0ixJFEYJh9Qg7yLpSprqfh/Va7POF6SvzDY1P9RfcIrXJYbUTibb5VJUN9yxg
	PRQkxDimijlwymXoxjN8fwGwthBWO40NvzTfgDeI=
From: David Gibson <david@gibson.dropbear.id.au>
To: peter.maydell@linaro.org
Date: Thu, 13 Dec 2018 15:01:10 +1100
Message-Id: <20181213040126.6768-12-david@gibson.dropbear.id.au>
X-Mailer: git-send-email 2.19.2
In-Reply-To: <20181213040126.6768-1-david@gibson.dropbear.id.au>
References: <20181213040126.6768-1-david@gibson.dropbear.id.au>
MIME-Version: 1.0
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2401:3900:2:1::2
Subject: [Qemu-devel] [PULL 11/27] mac_newworld: simplify IRQ wiring
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: lvivier@redhat.com, gkurz@kaod.org, qemu-devel@nongnu.org,
	Greg Kurz <groug@kaod.org>, spopovyc@redhat.com,
	qemu-ppc@nongnu.org, clg@kaod.org,
	David Gibson <david@gibson.dropbear.id.au>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

From: Greg Kurz <groug@kaod.org>

The OpenPIC have 5 outputs per connected CPU. The machine init code hence
needs a bi-dimensional array (smp_cpu lines, 5 columns) to wire up the ir=
qs
between the PIC and the CPUs.

The current code first allocates an array of smp_cpus pointers to qemu_ir=
q
type, then it allocates another array of smp_cpus * 5 qemu_irq and fills =
the
first array with pointers to each line of the second array. This is rathe=
r
convoluted.

Simplify the logic by introducing a structured type that describes all th=
e
OpenPIC outputs for a single CPU, ie, fixed size of 5 qemu_irq, and only
allocate a smp_cpu sized array of those.

This also allows to use g_new(T, n) instead of g_malloc(sizeof(T) * n)
as recommended in HACKING.

Signed-off-by: Greg Kurz <groug@kaod.org>
Signed-off-by: David Gibson <david@gibson.dropbear.id.au>
---
 hw/ppc/mac_newworld.c    | 30 +++++++++++++-----------------
 include/hw/ppc/openpic.h |  2 ++
 2 files changed, 15 insertions(+), 17 deletions(-)

diff --git a/hw/ppc/mac_newworld.c b/hw/ppc/mac_newworld.c
index 14273a123e..8c1bc6dd8a 100644
--- a/hw/ppc/mac_newworld.c
+++ b/hw/ppc/mac_newworld.c
@@ -115,7 +115,7 @@ static void ppc_core99_init(MachineState *machine)
     PowerPCCPU *cpu =3D NULL;
     CPUPPCState *env =3D NULL;
     char *filename;
-    qemu_irq **openpic_irqs;
+    IrqLines *openpic_irqs;
     int linux_boot, i, j, k;
     MemoryRegion *ram =3D g_new(MemoryRegion, 1), *bios =3D g_new(Memory=
Region, 1);
     hwaddr kernel_base, initrd_base, cmdline_base =3D 0;
@@ -249,41 +249,37 @@ static void ppc_core99_init(MachineState *machine)
     memory_region_add_subregion(get_system_memory(), 0xf8000000,
                                 sysbus_mmio_get_region(s, 0));
=20
-    openpic_irqs =3D g_malloc0(smp_cpus * sizeof(qemu_irq *));
-    openpic_irqs[0] =3D
-        g_malloc0(smp_cpus * sizeof(qemu_irq) * OPENPIC_OUTPUT_NB);
+    openpic_irqs =3D g_new0(IrqLines, smp_cpus);
     for (i =3D 0; i < smp_cpus; i++) {
         /* Mac99 IRQ connection between OpenPIC outputs pins
          * and PowerPC input pins
          */
         switch (PPC_INPUT(env)) {
         case PPC_FLAGS_INPUT_6xx:
-            openpic_irqs[i] =3D openpic_irqs[0] + (i * OPENPIC_OUTPUT_NB=
);
-            openpic_irqs[i][OPENPIC_OUTPUT_INT] =3D
+            openpic_irqs[i].irq[OPENPIC_OUTPUT_INT] =3D
                 ((qemu_irq *)env->irq_inputs)[PPC6xx_INPUT_INT];
-            openpic_irqs[i][OPENPIC_OUTPUT_CINT] =3D
+            openpic_irqs[i].irq[OPENPIC_OUTPUT_CINT] =3D
                 ((qemu_irq *)env->irq_inputs)[PPC6xx_INPUT_INT];
-            openpic_irqs[i][OPENPIC_OUTPUT_MCK] =3D
+            openpic_irqs[i].irq[OPENPIC_OUTPUT_MCK] =3D
                 ((qemu_irq *)env->irq_inputs)[PPC6xx_INPUT_MCP];
             /* Not connected ? */
-            openpic_irqs[i][OPENPIC_OUTPUT_DEBUG] =3D NULL;
+            openpic_irqs[i].irq[OPENPIC_OUTPUT_DEBUG] =3D NULL;
             /* Check this */
-            openpic_irqs[i][OPENPIC_OUTPUT_RESET] =3D
+            openpic_irqs[i].irq[OPENPIC_OUTPUT_RESET] =3D
                 ((qemu_irq *)env->irq_inputs)[PPC6xx_INPUT_HRESET];
             break;
 #if defined(TARGET_PPC64)
         case PPC_FLAGS_INPUT_970:
-            openpic_irqs[i] =3D openpic_irqs[0] + (i * OPENPIC_OUTPUT_NB=
);
-            openpic_irqs[i][OPENPIC_OUTPUT_INT] =3D
+            openpic_irqs[i].irq[OPENPIC_OUTPUT_INT] =3D
                 ((qemu_irq *)env->irq_inputs)[PPC970_INPUT_INT];
-            openpic_irqs[i][OPENPIC_OUTPUT_CINT] =3D
+            openpic_irqs[i].irq[OPENPIC_OUTPUT_CINT] =3D
                 ((qemu_irq *)env->irq_inputs)[PPC970_INPUT_INT];
-            openpic_irqs[i][OPENPIC_OUTPUT_MCK] =3D
+            openpic_irqs[i].irq[OPENPIC_OUTPUT_MCK] =3D
                 ((qemu_irq *)env->irq_inputs)[PPC970_INPUT_MCP];
             /* Not connected ? */
-            openpic_irqs[i][OPENPIC_OUTPUT_DEBUG] =3D NULL;
+            openpic_irqs[i].irq[OPENPIC_OUTPUT_DEBUG] =3D NULL;
             /* Check this */
-            openpic_irqs[i][OPENPIC_OUTPUT_RESET] =3D
+            openpic_irqs[i].irq[OPENPIC_OUTPUT_RESET] =3D
                 ((qemu_irq *)env->irq_inputs)[PPC970_INPUT_HRESET];
             break;
 #endif /* defined(TARGET_PPC64) */
@@ -300,7 +296,7 @@ static void ppc_core99_init(MachineState *machine)
     k =3D 0;
     for (i =3D 0; i < smp_cpus; i++) {
         for (j =3D 0; j < OPENPIC_OUTPUT_NB; j++) {
-            sysbus_connect_irq(s, k++, openpic_irqs[i][j]);
+            sysbus_connect_irq(s, k++, openpic_irqs[i].irq[j]);
         }
     }
     g_free(openpic_irqs);
diff --git a/include/hw/ppc/openpic.h b/include/hw/ppc/openpic.h
index 5eb982197d..dad08fe9be 100644
--- a/include/hw/ppc/openpic.h
+++ b/include/hw/ppc/openpic.h
@@ -20,6 +20,8 @@ enum {
     OPENPIC_OUTPUT_NB,
 };
=20
+typedef struct IrqLines { qemu_irq irq[OPENPIC_OUTPUT_NB]; } IrqLines;
+
 #define OPENPIC_MODEL_RAVEN       0
 #define OPENPIC_MODEL_FSL_MPIC_20 1
 #define OPENPIC_MODEL_FSL_MPIC_42 2
--=20
2.19.2


