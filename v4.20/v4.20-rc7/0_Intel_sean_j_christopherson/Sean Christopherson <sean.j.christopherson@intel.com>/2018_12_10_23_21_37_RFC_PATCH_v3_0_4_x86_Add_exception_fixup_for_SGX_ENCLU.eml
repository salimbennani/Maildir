Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:44:59 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 8891158028E;
	Mon, 10 Dec 2018 15:22:02 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 15:22:02 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AjKQ4WhdM9M6Dr62SzhhEyawJlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc6yYxSN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRBDI2i?=
 =?us-ascii?q?coUBAekPM+FXoIfyvFsOtRmzCBKwCO7s0DJEmmX70bEm3+knDArI3BYgH9ULsH?=
 =?us-ascii?q?nMsdv6Kr0dUeaox6TWzTXDdfJW2Szh6IjPahAhoe+DXahrccrWz0kkCgTIjk6O?=
 =?us-ascii?q?poP/OTOZzOYNv3KH4OpgT+KvinUnqx12oji3xscjlJPJhpkSylDC7ih5wYA1Jc?=
 =?us-ascii?q?GmR05/e9KrDJxQtySDOoZwX8gsTWZouCMgxb0Hv562ZCsKx4o9xx7ZdfOHd5KE?=
 =?us-ascii?q?4hX5VOaeOTt4i3NleK6/hxav6kes0PHzVs6x0FtMsyFLkcHMu2gT2xDP7sWLUO?=
 =?us-ascii?q?Zx80m/1TqVygze6f1ILVo1mKfZM5It37o9moQJvUnDHiL6gkX7gLGMekk55OSk?=
 =?us-ascii?q?9+Lqaaj8qJCGLY97kAT+P7wumsOhBeQ4NRADX3aU+euizr3v5075T6tQjv0wjK?=
 =?us-ascii?q?bZtIrWJcMBpq62GwNV04Aj5AijDzq+ztgUgX0KIEhYdB+JkYTlIUzCLfPkAful?=
 =?us-ascii?q?glmhki9nx/XcMb3gBpXNIGLDkLDkfbtl705cyQwzzc1Q5p5NCbEOPujzWknvu9?=
 =?us-ascii?q?zcFxM5NAK1w+D5B9VnzY4eR22PDbGDMK/Isl+H+PgvI++Sa48Rojr9LOIl5/H2?=
 =?us-ascii?q?gX8jhVAdZbWp3YcQaH2gGvRmIkaZbmT2jtYODGcHpQ4+TO3siF2fXj9ffXeyX6?=
 =?us-ascii?q?Qg5j4lDIKqF5vMRoeogLaZxie0AoVWZnxaClCLCXrod5+LW/YQaC2IJc9tiDwE?=
 =?us-ascii?q?VaW7RI8n2hGjrwv6y7thLurJ9SwUr5Pj1N5p5+LNkRE+7yB7D8OY02uVVWF7gn?=
 =?us-ascii?q?sIRyMq3KB4uUF9yFCD3rZij/xbEtxT4fVJUgAhOJ7Yzux6Dc3yWw3bcteITlam?=
 =?us-ascii?q?XsupATUrQt0txN8OZl53G8++gRDbwyqqH7gVmqSRC5wv8qLc2HvxK9xny3nc1q?=
 =?us-ascii?q?kslF0mQspJNW27ia9z7QnTB4jVk0qHk6amb7gT3CnI9G2b12qBoFlYUBJsUaXC?=
 =?us-ascii?q?RX0fZVHZrdLj6kPGTr+hE7InMgRaxM6GK6tKbMDpjFpcSPfiPtTef3y+m2OqCR?=
 =?us-ascii?q?mUwbOMaZLge38B0yXFFEgEjwcT8G6bOgckGCeuvXjSDDx0GlLpeEPj7+9+pHS/?=
 =?us-ascii?q?Tk83ygGKa1Zs1760+h4TmPydROkf3rMCuCc9tTp0GEyx0M7RC9qFvwBhZrlTYc?=
 =?us-ascii?q?sh4Fdb0mLUrxFyMYa+L698nFIecx54v0X11xppDIVNiswqrHIszApvJqOUylJB?=
 =?us-ascii?q?dzWE3Z/uPr3bMHX9/Beqa6TOwFHRzM6W+rsT6PQ/s1jjoACpFk8l83V709lU02?=
 =?us-ascii?q?GQ5onQAAoVS5LxVkc39x51p7zBZik95oXU1WBjMKWusz/C3c4pC/Uhyhq6Y9hf?=
 =?us-ascii?q?N6aEHhfoE8IGH8iuNPAqm1+xYx0eOOBd6qE1MN2mdvecw6GrIftvkyigjWRE54?=
 =?us-ascii?q?B9zFmB9y59Su7OwpYEzOuU3gqBVzfgklihttr7lpxDZTEXBmC/0zTrBJZNZq1u?=
 =?us-ascii?q?eoYGEWevI9CtytpinZLsWn5Y+0SlB1MJw8KpfRuSb1rg3Qxfz0gXoHqnmTemwD?=
 =?us-ascii?q?xwiT0msq2f3CnWyeT4aBUHInJLRHVljVr0O4i0jswVU1Kybwc0kxup/0D6yLZB?=
 =?us-ascii?q?pKR+NmXcXV1HfyzrIG58SKuwsbyCbtVL6JMptyVXTeu9bUqbSr77vxsVzSfjE3?=
 =?us-ascii?q?FCyzA8cjGgoo/5kABiiGKBMHZzq2LUeMFxxRvF5N3QX+VR3icARCRjjTnXB168?=
 =?us-ascii?q?P8Sm/NmOlpfDtPy+WHylVpFJbSbryoaAvjOh5WJ2GR2/g+yzmtr/HAg4yyD7zd?=
 =?us-ascii?q?pqVSbPrBrmeYnkzae6MeFmfkluGlD87dF3GoV/kos2mZER1mIWhpST/Xobj2jz?=
 =?us-ascii?q?Nc9X1r75bHoIXTQL2cLa4BD52E1/KXKE34L4WW+awsd7Zdm6Y2UW1zk578BLDq?=
 =?us-ascii?q?eU8bNFkTF0olq+sQLef/x9ki0Bxvsp7X4Qm/sJtxY1ziWBHrASGlFVPS/2mBSJ?=
 =?us-ascii?q?9dy+rLhXa3ypcbi/z0d+mdGhDLefogBTQnr5e5EiHTNu4cV7Kl7DzHrz6oT8ct?=
 =?us-ascii?q?nKcd0TrgGUkwvHj+VNLZIxl/kKijB9NWPzo3Il0PI7ggJ03Z6hooeHMWpt8bm9?=
 =?us-ascii?q?Ah5ZMD31eswS9ivsjaZYgsaZwYSvEo99FTUMWZviVeioHy4KtfT7KwaOFyUxqm?=
 =?us-ascii?q?ucGbraBwOe6V1pr3TSE5CwLHGXJWIUzdFjRBmbOUxejxoYXDQ8np4lCA+qwNbt?=
 =?us-ascii?q?f1t+5jAU/lT4sAdDyvp0NxnjVWfSvBynZS0zSJibMRpa9AVC51rOPMya7+JzGT?=
 =?us-ascii?q?xY/5K7oAyMLGybexpHDWUTVkOYAFDjO6Gk5cPc/OiAGuq+M/zObK2MqeNEUveH?=
 =?us-ascii?q?24mv3pF6/zqWNcWPI3piD+A92kVZRnB0AMDZmzQJSywKmCPBdc+bpBGg+iJpqs?=
 =?us-ascii?q?Cz6ujkWAXq5YGXEbtdLc1v+wyqgaeEL+ORhCF5KStB1pMR33DIzqIT3EUViyFo?=
 =?us-ascii?q?eDmgCrAAtS/LTKLNla5bFR8bayVvNMRW66IwxBVCOcneitntzL53kuY1C0tZVV?=
 =?us-ascii?q?zmgsypZdIFI2C+NFPEBUaHLreGJSfMw8H4f6y8U6BQjP5Puh20uDabFVLjPzuZ?=
 =?us-ascii?q?mznoURCvLf9DjCWBMBNCv4G9dw5nCXL/Q9L+dh27LNh3gCUszr0pnXzKL3ATMD?=
 =?us-ascii?q?hmf0NJr72d9idYgvR5G2xc4XtpN+iEmyCF7+bGLpYaq+dkAiNxl+hC+nQ116NV?=
 =?us-ascii?q?7D1YRPxygCbSst9uo1S8nuaT0DZoTBpOpShNhI+QuUViOKPZ9oRPWHre/RIN63?=
 =?us-ascii?q?mQBAoOp9d/FtLvvKVQwMDVlK3vMDdC787U/cwECsnUMs2HNn8hMRvvGDHMDQoF?=
 =?us-ascii?q?TSSkNWfQh0FGlPGS93uVroU1q5T2mZoOTKNbW0IxFv8AFktlG9kCc99LWWYYkb?=
 =?us-ascii?q?mehdVAyn6zrQnXSd8S6ozIUuK6BfTpNSqDir9Fd10EzOW8ZaUVOYqz/ktmbFBg?=
 =?us-ascii?q?1NDPGkzfWvhXryFhZxNyq0JIpjw2ZGop2lnhYx3l2HIPFvmq1ko8kiN3ZeUg8m?=
 =?us-ascii?q?eq71phYhLa9HUYk0Qrn9jhxzeLf3q5Dq6qXoJRQxH9tEswNJ79C1J3ZBexnksi?=
 =?us-ascii?q?Lz7HRLNXgr1IcWFtlR+auJ1TFPoaRqpBNltY/vyeYb0D0U5dsTmg3U9K//DCD9?=
 =?us-ascii?q?M2jwYjd9iu6XlAwQN4cNktJaHKP61P5llWmq+K+CSv07Z1iCMXOUtF0GqUYyMO?=
 =?us-ascii?q?8BgEP6crYSqh+Pdh7ySGmj1eaC4NUeYnprRh8UZrf6ypyS7xm5peNke0NvaELK?=
 =?us-ascii?q?LR72zdicmgQV4q0E4M0U5f8u4ymf8ub0eOH3Iuzr+KCw4AfZ7aJB1Yddh69X7d?=
 =?us-ascii?q?Zy+CvOzBh5VvMNPuOPrvSLq1ua8SymmkBgcyA4MU7skbBZ6qmBXDIM7harxDwh?=
 =?us-ascii?q?U35R/3I02FAe5SfxSjkTEbrsX5x5hyi9oObgoBCHlwZH3kro3coRUn1b/aBI87?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ADAAAX9A5ch0O0hNFkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGCaYECFRKME4w7gT85lz2BcxQYDQYBh20iNAkNAQM?=
 =?us-ascii?q?BAQEBAQECARMBAQEIDQkIKSMMgjYkAYJpAi8BRgYJAhg4A1oBEgWDHAGCAQUKp?=
 =?us-ascii?q?1SEAgEqARFChSYFh3KEL3qBHIFEgioHg0wCAoE/AQGFeQKGcoJDgXSEFH2QOwc?=
 =?us-ascii?q?ChwiGW4NhCxiRPYkihHOLG4FGgg5wgzwThXWFFIUIAVceAQExAQEBAQZ7AQGJX?=
 =?us-ascii?q?oI+AQE?=
X-IPAS-Result: =?us-ascii?q?A0ADAAAX9A5ch0O0hNFkGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGCaYECFRKME4w7gT85lz2BcxQYDQYBh20iNAkNAQMBAQEBAQECARMBA?=
 =?us-ascii?q?QEIDQkIKSMMgjYkAYJpAi8BRgYJAhg4A1oBEgWDHAGCAQUKp1SEAgEqARFChSY?=
 =?us-ascii?q?Fh3KEL3qBHIFEgioHg0wCAoE/AQGFeQKGcoJDgXSEFH2QOwcChwiGW4NhCxiRP?=
 =?us-ascii?q?YkihHOLG4FGgg5wgzwThXWFFIUIAVceAQExAQEBAQZ7AQGJXoI+AQE?=
X-IronPort-AV: E=Sophos;i="5.56,340,1539673200"; 
   d="scan'208";a="56329511"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 10 Dec 2018 15:22:01 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729324AbeLJXV6 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 10 Dec 2018 18:21:58 -0500
Received: from mga04.intel.com ([192.55.52.120]:11277 "EHLO mga04.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727852AbeLJXV6 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 10 Dec 2018 18:21:58 -0500
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga001.jf.intel.com ([10.7.209.18])
  by fmsmga104.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 15:21:57 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,340,1539673200"; 
   d="scan'208";a="117684766"
Received: from sjchrist-coffee.jf.intel.com ([10.54.74.154])
  by orsmga001.jf.intel.com with ESMTP; 10 Dec 2018 15:21:57 -0800
From: Sean Christopherson <sean.j.christopherson@intel.com>
To: Thomas Gleixner <tglx@linutronix.de>,
        Ingo Molnar <mingo@redhat.com>, Borislav Petkov <bp@alien8.de>,
        x86@kernel.org, Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>,
        Sean Christopherson <sean.j.christopherson@intel.com>,
        Dave Hansen <dave.hansen@linux.intel.com>,
        Andy Lutomirski <luto@kernel.org>,
        Peter Zijlstra <peterz@infradead.org>
Cc: "H. Peter Anvin" <hpa@zytor.com>, linux-kernel@vger.kernel.org,
        linux-sgx@vger.kernel.org, Andy Lutomirski <luto@amacapital.net>,
        Josh Triplett <josh@joshtriplett.org>,
        Haitao Huang <haitao.huang@linux.intel.com>,
        Jethro Beekman <jethro@fortanix.com>,
        "Dr . Greg Wettstein" <greg@enjellic.com>
Subject: [RFC PATCH v3 0/4] x86: Add exception fixup for SGX ENCLU
Date: Mon, 10 Dec 2018 15:21:37 -0800
Message-Id: <20181210232141.5425-1-sean.j.christopherson@intel.com>
X-Mailer: git-send-email 2.19.2
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

This is effectively v3 of the "x86: Add vDSO exception fixup for SGX"
series, but as you might of noticed, there are no vDSO changes here.

Andy's comment on Spectre/retpoline[1] and Jethro's comment on making
the vDSO as barebones as possible[2] got me wondering if we could let
userspace dynamically set the "return" target of the SGX vDSO function,
taking advantage of the fact that most (all?) SGX processes will have a
single entry point for all enclaves.

The initial idea was to make __vdso_sgx_enter_enclave() a barebones
"function" consisting of ENCLU and UD2.  SGX would provide an IOCTL via
/dev/sgx that could be used to patch the UD2 in the current vDSO image
to a JMP rel32, with rel32 pointing at an address provided by the
user.  Aside from the issues of rel32 in a 64-bit memory space,
patching the vDSO image added a lot of overhead just so that the kernel
could know the address of ENCLU.

At that point I realized it's a hell of a lot easier to simply provide
an IOCTL via /dev/sgx that allows userspace to register a per-process
ENCLU exception handler.  At a high level, the basic idea is the same
as the vDSO approach: provide a hardcoded fixup handler for ENCLU and
attempt to fixup select unhandled exceptions that occurred in user code.

Pros:
  - No vDSO function.
  - Minimal userspace changes.
  - Smaller ABI, i.e. less bikeshedding (fingers crossed).
  - Kernel doesn't prevent userspace from doing stupid things, e.g.
    modifying the process' stack from within the enclave.
  - Kernel can proactively enforce the ENCLU handler as the only
    officialy supported ABI for enclave exception handling.

Cons:
  - Userspace can only register a single ENCLU handler per process.
  - ABI is more esoteric than a standard function call.


This series is based on Jarkko's current master branch, which moves all
of the SGX code into arch/x86.  The full code can be found here:

https://github.com/sean-jc/linux/tree/2538adcece15447b988d93bf677af48073c7d219

I have not actually tested this *exact* commit beyond compiling as I do
not know the health status of Jarkko's code.  To test, I cherry-picked
the patches into an older stable version of the code.  Git was able to
handle the file renaming.

v1: https://lkml.kernel.org/r/20181205232012.28920-1-sean.j.christopherson@intel.com
v2: https://lkml.kernel.org/r/20181206221922.31012-1-sean.j.christopherson@intel.com
v3:
  - Replace the vDSO fixup with SGX specific fixup.
  - Patches 2/4 and 3/4 are essentially identical, the only difference
    being the name of the function that is called.  The changelogs for
    these patches still need a lot of attention.

[1] https://lkml.kernel.org/r/CALCETrVBR+2HjTqX=W4r9GOq69Xg36v4gmCKqK0wUjzAqBJnrw@mail.gmail.com
[2] https://lkml.kernel.org/r/f595c046-682c-0d4a-ce68-44d4634cedf2@fortanix.com

Sean Christopherson (4):
  x86/sgx: Add a per-mm ENCLU exception fixup handler
  x86/fault: Attempt to fixup unhandled #PF on ENCLU before signaling
  x86/traps: Attempt to fixup exceptions in vDSO before signaling
  x86/sgx: Add an SGX IOCTL to register a per-mm ENCLU exception handler

 arch/x86/include/asm/mmu.h             |  4 ++++
 arch/x86/include/asm/sgx.h             | 13 +++++++++++++
 arch/x86/include/uapi/asm/sgx.h        | 23 ++++++++++++++++++-----
 arch/x86/kernel/cpu/sgx/driver/encl.c  |  6 ++++++
 arch/x86/kernel/cpu/sgx/driver/ioctl.c | 20 ++++++++++++++++++++
 arch/x86/kernel/cpu/sgx/main.c         | 18 ++++++++++++++++++
 arch/x86/kernel/traps.c                | 15 +++++++++++++++
 arch/x86/mm/fault.c                    |  7 +++++++
 8 files changed, 101 insertions(+), 5 deletions(-)

-- 
2.19.2

