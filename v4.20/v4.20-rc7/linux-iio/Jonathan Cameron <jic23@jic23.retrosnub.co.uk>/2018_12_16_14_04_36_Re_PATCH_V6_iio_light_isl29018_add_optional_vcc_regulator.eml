Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  17 Dec 2018 08:31:43 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 1B4505805CF;
	Sun, 16 Dec 2018 06:10:47 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 16 Dec 2018 06:10:47 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AQnFThhD0Z+bpsaTnp/+tUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP7/r8WwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95fWSJBHI2y?=
 =?us-ascii?q?cogBAOgPPehfoIbyu1QArQCmBQSuH+7v1j1Fi2Xq0aAgz+gtDwfL1xEgEdIUt3?=
 =?us-ascii?q?TUqc34OqMVUeCz1qbI0TXDYOlQ2Tzg9oXHaBUhru+WXbJ3d8ra1E4iFwHEjlqM?=
 =?us-ascii?q?t4DoMSiY1uYMs2eH8eZtW/iji3Q5pAFtuDivwdwsio/Uho0O0FzL6SJ5zJwoJd?=
 =?us-ascii?q?27UUN2Z8OvHphItyyCKYd6XscvT3t1tCs01LEKo4O3cSsWxJg9xhPSaeSLfouV?=
 =?us-ascii?q?7h75UOucIC10iGxrdb+wnRq+7Eetx+76W8KpylhFtDBFncPJtn0V1xzc9MyHSv?=
 =?us-ascii?q?xl80e/1jaAyRrT5vtHIU8qj6rbLYAuwroqmpoUq0TDETf6mETwjKCIakUp4vak?=
 =?us-ascii?q?5/jjb7n8u5OROZF4hhvjPqkthsCzG+U1PwoWU2ie4+u81bnj/UPjQLVNi/07iq?=
 =?us-ascii?q?3ZsJHcJcQGqa+1GgxV3Zg56xa5ETim1M0UnX4JLVJDZh2HlZPkO0/BIP/mF/ez?=
 =?us-ascii?q?mVesnylxx/DAILLhBo/BLn/ZkLfuZbp98VJTyBIvzdBD4JJZErUBIPPwWkDvrt?=
 =?us-ascii?q?DZAQI5Pheww+bmDtV9y4wfVXiOAq+fLKPdr1uI6vgzLOmLYY8foCz9JOQ95/7y?=
 =?us-ascii?q?kX85nkcQfamz0psWdHC3BPNmL1+ZYXrxmNgBF2gKsxE6TOzrjl2CTDFSa2yzX6?=
 =?us-ascii?q?I6+jE0FoamAZ3fSYCqhbyLxD27EYFOZmBaFlCMFm/ld4eDW/gSci6SIchhkjoC?=
 =?us-ascii?q?VbimUIIh0RCutAnny7toNObU+ysYtY7929hx/eHciRYy9TlsBcSHz26NV310nn?=
 =?us-ascii?q?8PRzIuxq9/ukx9ylCA0aRimfxXD95T6uhNUgc7M57c0uN7B8rzWgLHYteGVlKm?=
 =?us-ascii?q?Ts+6DjE2S9I728UObFplG9W+khDD2DKnA7wPmLyNHpA09qPc0GL3J8Zy0HvG0K?=
 =?us-ascii?q?ghj187QspAL2Gmh6h/9xTNCI7NiUmWi6GqdaEE1i7X6GiD1XaOvF1fUANoTKrK?=
 =?us-ascii?q?R24faVXModT5/EzCSaSuBqohMgdGzc6CKa5KatnygFVCRffjPsneYm2rl2exAx?=
 =?us-ascii?q?aI2q2DbI7wd2oB2yXdDVAOkxoP8naeKQg+GiChrnrDAzN0C1LgfVng8elkp3O9?=
 =?us-ascii?q?VU870QeKYlZl17q0/B4VmPOdR+kS3rICpCcutTF0EEyh0NLRDtqKvxBhc7lEYd?=
 =?us-ascii?q?Mh/FdH0nrUtxB8PpylKKBiml4ecgRts0PyzRl3DZ9AkcwrrHMswwp/MqaY0FJH?=
 =?us-ascii?q?dzOF0pH8ILzXKm/u/B+xb67awE3R0NGT+q0X8vQ3t03jvB21Fkol63hoyd1V3G?=
 =?us-ascii?q?WT55rUDAseS4n+Ulsq+BdgobHaYS49553P2H1oMKm0tCLC2t0zCOskzBagY8lQ?=
 =?us-ascii?q?MKeeGADuFM0aAtCkKPY2lFixchIEIOdS+bY0PsO7bfeJxLSnPedgnD28i2RH75?=
 =?us-ascii?q?tw0kaN9yp6V+7J0IwJw/Ce3gubSTj8iE2tvdzwmYBBfTsSBHawyTD4BI5NYa1/?=
 =?us-ascii?q?ZZwLCWayLMKt3NVxmpntV2Re9FG9HVMG2daldgaIYFz5wAJfy14XoXuhmSajyz?=
 =?us-ascii?q?x0kjcprreQ3SDUwuTicgYHNXBPRGV4kVjsJo20hcgAXEe0dwgpiAel5UHiyqlb?=
 =?us-ascii?q?paRzNWnSTV1TfyjrKWFvSa+wtruEY85S55IkqyRXUOKgYV+ETr7xuQcV0yTmH2?=
 =?us-ascii?q?FG3jA0aymquonlnxx9kG+dLmx8rGDaecFzwhfT/sfcSuRS3joFRSl4jyfYBl6n?=
 =?us-ascii?q?Mtmt/NWUkYrDs++kW2KgUJ1TbTfkzYeauCSn4m1qBAW1n+qvld3/DQg6zSj72s?=
 =?us-ascii?q?FqVCrSqxbweIvr16W8Me98ekloBVn869d1G41kk4swgo0Q1mYehpmP4XUHlmLz?=
 =?us-ascii?q?O81B2a3idHoNWSILw9nN7QjmwkJjL2iFx4LkVnqHxMthaMK3YmcX2iI78sBLB7?=
 =?us-ascii?q?2Y7L1CnStpvFW4qRjdbuR6njcY0fEu8mIVg/kVuAoxySWQGrUSHUhbPSP2jRiJ?=
 =?us-ascii?q?4c6xrL5LZGmxa7i/z1RxncquDLyZpgFcWXD5eootHCNq78V/Nk7M32P36o3+ZN?=
 =?us-ascii?q?bQatcTvAWOkxjcl+hVNI4xlv0SiCp7PmL9uGcpyu8hghxowJG6p5OHK2R28aK9?=
 =?us-ascii?q?Ax5YMCD1ZswJ9jHsi6ZegtiZ34S1Epp9HTULWYPiTei0HzIKqfTnKwGOHSUnpX?=
 =?us-ascii?q?iBHrrfGRKf5F1ir3LSCJ2rM3CXJH8EzdRtXhWdJUpfgBwKUzU+hJI2CgeqxMn5?=
 =?us-ascii?q?ekdj+j8R/kL4qgdLyu9wNRnwSGLfqxmzajsuVJiTNhlW7hxB50fIN8yR9PlzEj?=
 =?us-ascii?q?pc/p2gqgyNN2Oaax5JDWEPRkyLGVTjMqOy6tnH9uiSHvC+IOfWYbWStexeUO+F?=
 =?us-ascii?q?xJKo0ot75jaMK9+APn94A/0g3UpDW395Ft/dmzUOTSwXii3MY9SapBe65i14sM?=
 =?us-ascii?q?S//O73VwLo4IuFE6FSPsl3+xCqnaeDMPadhCZnJjZZ1ZMMxn7IxKIc3F4IjCFu?=
 =?us-ascii?q?eCeiEa4dtS7WV6/Qnq5XDxgGayJ8LsdI7qQ83hVTNs7fkN/6yrl4jvstAVdfSV?=
 =?us-ascii?q?Phgt2pZdANI2ylLlzHGV2ENK6YKjzL2c33ZaK8RKZUjOVVsR2wpDmaH1XiPjSF?=
 =?us-ascii?q?iznmSRSvPftQgyGcORxUoJu9fQp1CWj/UNLmbQW2MMN2jT0z27E7mmnGOnIcMT?=
 =?us-ascii?q?didUNAtbmQ7SJegvViFG1N9HtlLe+YmymH6+nUMIoZsfxuAi5sjeJV/Gw6y6dJ?=
 =?us-ascii?q?7CFDXPF0mDHdrthro1GnlOmA0jtmUBpUpTZNi4KGpkFiOaTf9pldVnfI5hMN7W?=
 =?us-ascii?q?OMCxsUo9tpEMHgu6dVyouHqKWmATFZ9NSc3dYVAcecfMuBK30ndxr0ETjbJA0V?=
 =?us-ascii?q?VXigMmSJ1GJHl/TH1HqTp4Q6o56ks5MLR6VcUhRhFPIRUB9NHt0JeswxRD44i7?=
 =?us-ascii?q?mAitMCo3G56gTSEpYJ9qvbX+6fVK28YA2SiqNJMl5Rmev1?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ApAABfXBZch0O0hNFcBxwBAQEEAQEHB?=
 =?us-ascii?q?AEBgVEHAQELAQGDaieMFV+LZwEBBoE1FIkPhG2JSIFzLBMBh0ciNAkNAQMBAQE?=
 =?us-ascii?q?BAQECARMBAQEKCwkIKS9CFgEBgVwkAYJhAQEBAQIBAQIkEz8FAQkBAQoYCSUDD?=
 =?us-ascii?q?EgGEwWDHYF0BQgEAaVZM4odjD6BD4EHgRGDEoRlCQiFagKBKgEBiAwGAYF3hBd?=
 =?us-ascii?q?HgQiPfAEGAgGKTYcCIwqRSIgPkxuCDjMaNIFdgU6CUI4LQDKBAgMBASETh22BZ?=
 =?us-ascii?q?YEXKYIkAQE?=
X-IPAS-Result: =?us-ascii?q?A0ApAABfXBZch0O0hNFcBxwBAQEEAQEHBAEBgVEHAQELAQG?=
 =?us-ascii?q?DaieMFV+LZwEBBoE1FIkPhG2JSIFzLBMBh0ciNAkNAQMBAQEBAQECARMBAQEKC?=
 =?us-ascii?q?wkIKS9CFgEBgVwkAYJhAQEBAQIBAQIkEz8FAQkBAQoYCSUDDEgGEwWDHYF0BQg?=
 =?us-ascii?q?EAaVZM4odjD6BD4EHgRGDEoRlCQiFagKBKgEBiAwGAYF3hBdHgQiPfAEGAgGKT?=
 =?us-ascii?q?YcCIwqRSIgPkxuCDjMaNIFdgU6CUI4LQDKBAgMBASETh22BZYEXKYIkAQE?=
X-IronPort-AV: E=Sophos;i="5.56,361,1539673200"; 
   d="scan'208";a="56104907"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 16 Dec 2018 06:10:45 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730592AbeLPOEn (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sun, 16 Dec 2018 09:04:43 -0500
Received: from saturn.retrosnub.co.uk ([46.235.226.198]:55152 "EHLO
        saturn.retrosnub.co.uk" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1729822AbeLPOEn (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sun, 16 Dec 2018 09:04:43 -0500
Received: from archlinux (cpc91196-cmbg18-2-0-cust659.5-4.cable.virginm.net [81.96.234.148])
        by saturn.retrosnub.co.uk (Postfix; Retrosnub mail submission) with ESMTPSA id 3CFDF9E7B45;
        Sun, 16 Dec 2018 14:04:37 +0000 (GMT)
Date: Sun, 16 Dec 2018 14:04:36 +0000
From: Jonathan Cameron <jic23@jic23.retrosnub.co.uk>
To: Anson Huang <anson.huang@nxp.com>
Cc: "knaack.h@gmx.de" <knaack.h@gmx.de>,
        "lars@metafoo.de" <lars@metafoo.de>,
        "pmeerw@pmeerw.net" <pmeerw@pmeerw.net>,
        "linux-iio@vger.kernel.org" <linux-iio@vger.kernel.org>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        "festevam@gmail.com" <festevam@gmail.com>,
        "preid@electromag.com.au" <preid@electromag.com.au>,
        dl-linux-imx <linux-imx@nxp.com>
Subject: Re: [PATCH V6] iio: light: isl29018: add optional vcc regulator
 operation support
Message-ID: <20181216140436.6f2b37dc@archlinux>
In-Reply-To: <20181216124413.40c6a63c@archlinux>
References: <1544681529-22268-1-git-send-email-Anson.Huang@nxp.com>
        <20181216124413.40c6a63c@archlinux>
X-Mailer: Claws Mail 3.17.2 (GTK+ 2.24.32; x86_64-pc-linux-gnu)
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Sun, 16 Dec 2018 12:44:13 +0000
Jonathan Cameron <jic23@kernel.org> wrote:

> On Thu, 13 Dec 2018 06:18:07 +0000
> Anson Huang <anson.huang@nxp.com> wrote:
> 
> > The light sensor's power supply could be controlled by regulator
> > on some platforms, such as i.MX6Q-SABRESD board, the light sensor
> > isl29023's power supply is controlled by a GPIO fixed regulator,
> > need to make sure the regulator is enabled before any operation of
> > sensor, this patch adds optional vcc regulator operation support.
> > 
> > Signed-off-by: Anson Huang <Anson.Huang@nxp.com>

Sorry, I've been sleep walking through these and missed the big obvious
thing.

These shouldn't be optional regulators at all.  If one isn't specified
we do want to fall back to a stub regulator.

Just because we can't see or control the power supply doesn't mean it
shouldn't be there.

The exception to this is where we have a regulator providing a voltage
reference where there is an alternative internal reference.
In those cases there might be nothing connected to the pin and hence
it really is 'optional'.  We want to do something else if it's not
there.  Power supplies are just invisible, not optional and the
regulator framework has always handled that for us.

Jonathan

> > ---
> > ChangeLog since V5:
> > 	Since the dt-binding doc states the power supply name is "vdd" and many dts files already using
> > 	"vcc" as the power supply name, althoug it does NOT match the datasheet which has "vdd", to make
> > 	it NOT breaking existing dtb files, just use "vcc" as the regulator name.
> > ---
> >  drivers/iio/light/isl29018.c | 47 +++++++++++++++++++++++++++++++++++++++++---
> >  1 file changed, 44 insertions(+), 3 deletions(-)
> > 
> > diff --git a/drivers/iio/light/isl29018.c b/drivers/iio/light/isl29018.c
> > index b45400f..76c3a48 100644
> > --- a/drivers/iio/light/isl29018.c
> > +++ b/drivers/iio/light/isl29018.c
> > @@ -23,6 +23,7 @@
> >  #include <linux/mutex.h>
> >  #include <linux/delay.h>
> >  #include <linux/regmap.h>
> > +#include <linux/regulator/consumer.h>
> >  #include <linux/slab.h>
> >  #include <linux/iio/iio.h>
> >  #include <linux/iio/sysfs.h>
> > @@ -95,6 +96,7 @@ struct isl29018_chip {
> >  	struct isl29018_scale	scale;
> >  	int			prox_scheme;
> >  	bool			suspended;
> > +	struct regulator	*vcc_reg;
> >  };
> >  
> >  static int isl29018_set_integration_time(struct isl29018_chip *chip,
> > @@ -735,6 +737,19 @@ static int isl29018_probe(struct i2c_client *client,
> >  
> >  	mutex_init(&chip->lock);
> >  
> > +	chip->vcc_reg = devm_regulator_get_optional(&client->dev, "vcc");
> > +	if (!IS_ERR(chip->vcc_reg)) {
> > +		err = regulator_enable(chip->vcc_reg);
> > +		if (err) {
> > +			dev_err(&client->dev, "failed to enable VCC regulator\n");
> > +			return err;
> > +		}
> > +	} else {
> > +		err = PTR_ERR(chip->vcc_reg);
> > +		if (err != -ENODEV)
> > +			return err;
> > +	}
> > +
> >  	chip->type = dev_id;
> >  	chip->calibscale = 1;
> >  	chip->ucalibscale = 0;
> > @@ -747,12 +762,12 @@ static int isl29018_probe(struct i2c_client *client,
> >  	if (IS_ERR(chip->regmap)) {
> >  		err = PTR_ERR(chip->regmap);
> >  		dev_err(&client->dev, "regmap initialization fails: %d\n", err);
> > -		return err;
> > +		goto disable_regulator;
> >  	}
> >  
> >  	err = isl29018_chip_init(chip);
> >  	if (err)
> > -		return err;
> > +		goto disable_regulator;
> >  
> >  	indio_dev->info = isl29018_chip_info_tbl[dev_id].indio_info;
> >  	indio_dev->channels = isl29018_chip_info_tbl[dev_id].channels;
> > @@ -761,13 +776,22 @@ static int isl29018_probe(struct i2c_client *client,
> >  	indio_dev->dev.parent = &client->dev;
> >  	indio_dev->modes = INDIO_DIRECT_MODE;
> >  
> > -	return devm_iio_device_register(&client->dev, indio_dev);
> > +	err = devm_iio_device_register(&client->dev, indio_dev);
> > +	if (!err)
> > +		return 0;  
> Don't make this change.  It makes the code less readable.  
> 
> Right now you don't turn the regulator off in remove at all and
> you definitely should.
> 
> You should not be mixing managed and unmanaged calls.
> This is because you will end up with race conditions.  Here the
> regulators are disabled before the automated unwinding calls
> device unregister.  Hence we have a window in which the power
> is turned off but the userspace interfaces are still there.
> 
> Weird crashes likely to follow!
> 
> Two options:
> 1) For everything after the power on change from devm to non
> devm and do the unwinding.
> 2) Use devm_add_action_or_reset to automatically handle
> the unwinding of the regulator enable.  The result being that
> it is back in the right place order wise.
> 
> 
> 
> > +
> > +disable_regulator:
> > +	if (!IS_ERR(chip->vcc_reg))
> > +		regulator_disable(chip->vcc_reg);
> > +
> > +	return err;
> >  }
> >  
> >  #ifdef CONFIG_PM_SLEEP
> >  static int isl29018_suspend(struct device *dev)
> >  {
> >  	struct isl29018_chip *chip = iio_priv(dev_get_drvdata(dev));
> > +	int ret;
> >  
> >  	mutex_lock(&chip->lock);
> >  
> > @@ -777,6 +801,14 @@ static int isl29018_suspend(struct device *dev)
> >  	 * So we do not have much to do here.
> >  	 */
> >  	chip->suspended = true;
> > +	if (!IS_ERR(chip->vcc_reg)) {
> > +		ret = regulator_disable(chip->vcc_reg);
> > +		if (ret) {
> > +			dev_err(dev, "failed to disable VCC regulator\n");
> > +			mutex_unlock(&chip->lock);
> > +			return ret;
> > +		}
> > +	}
> >  
> >  	mutex_unlock(&chip->lock);
> >  
> > @@ -790,6 +822,15 @@ static int isl29018_resume(struct device *dev)
> >  
> >  	mutex_lock(&chip->lock);
> >  
> > +	if (!IS_ERR(chip->vcc_reg)) {
> > +		err = regulator_enable(chip->vcc_reg);
> > +		if (err) {
> > +			dev_err(dev, "failed to enable VCC regulator\n");
> > +			mutex_unlock(&chip->lock);
> > +			return err;
> > +		}
> > +	}
> > +
> >  	err = isl29018_chip_init(chip);
> >  	if (!err)
> >  		chip->suspended = false;  
> 

