Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 12 Dec 2018 08:56:36 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 8E5F6580380;
	Tue, 11 Dec 2018 14:01:08 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 11 Dec 2018 14:01:08 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A1UzUUREEtBru3NRS3JR9FZ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75oc+4bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJSyNODYyy?=
 =?us-ascii?q?YIkMAeQfIOhWr4fyp1UAoxulHQmhBvjiyiNRhnLswaE2z/4sHAPA0Qc9H9wOqn?=
 =?us-ascii?q?PUrNDtOakPTeC60rHIzTXdYPNQxDzw9Y/IcxA8rvqRWr9wasTQxlIoFwLFk1qd?=
 =?us-ascii?q?spDqPzOP1uQKtmib7vdgVee1h24gsQFxrSGiy8ExgYfKnoIY0k7I+Tl9zYovON?=
 =?us-ascii?q?G1RlB3bcS5HJZTqy2WLYp7T8E6T212uSs21KEKtJumcCUK1JsqwgDTZ+CZf4WN?=
 =?us-ascii?q?/x7uUeiRLi14iX9rfb+yhRS//Emgx+D5VsS500hGoTFAn9TPqHwCzBje586aQf?=
 =?us-ascii?q?Vn5EihwyyA1wXL5+FEP080ka3bJoY/wr4/iJUTq17PHizol0Xsiq+ZaEEk9vKv?=
 =?us-ascii?q?6+T9bbXqvp6cN4lqhQHiKqkihNCzDOAiPgQTUWWX5/6w2KDg8EHlWrlHj/87nr?=
 =?us-ascii?q?HcsJ/AJMQboqC5AxVS0oYm8xu/Czam0NIFnXgINV5FewyIj5LvO17QJPD0FPC/?=
 =?us-ascii?q?glqqkDh13fDLJaPhAprTIXjZirvhfqhy61RayAUtydBT/ZVUCqsOIP7rQE/+qM?=
 =?us-ascii?q?TYDgMlMwyz2+vnDNR91oAAVm6VDa6ZLbjfsVuJ5uIpPumNa5UZuDf7K/g5+fHu?=
 =?us-ascii?q?iWU1lkMafamsxZEXcmy3Hux6I0WFZnrhmtcBHn0LvgoiVuPqj0eOUT5OZ3moWa?=
 =?us-ascii?q?I86So2CIanDYfFW4Csj6aN3Ca9Hp1KeG9GDkqAHmvvd4WBQ/0Mcj6dItd9kjwY?=
 =?us-ascii?q?UrisU40h1RawuwPgyLpnKezU+isftZ/40Nh15uvTlQw99DBuDsSd1X2NQH9wnm?=
 =?us-ascii?q?8SWzA226V/q1Rnylifyah4n+BYFdtL6vxTSQc6NZncz+9gB9DoQA3BfMyESFKn?=
 =?us-ascii?q?QtWgHDEwQcg9w94IY0ZhBdqiigrP0DatA78Qj7aLHoA78rrA33jtIMZw03XG27?=
 =?us-ascii?q?Mnj1U8RstPNHephqhw9wXIA47JkkOZl7uldKgG3S7N8nuDwnSKvE1CTAFwVqDF?=
 =?us-ascii?q?V2gFZkTKtdT5+l/CT7i2BLs6KARB19CNJrFKatLzi1VGX+nsONLZb2K1mGewAB?=
 =?us-ascii?q?KIy6iIbIrrfWUdwSrcBFIFkwAV4XaJKww+Cj29rGLZCTxkDUjvbF/08elitHO7?=
 =?us-ascii?q?SVc5wByQYE1/ybW54B4ViuaaS/MIwL0EvjwsqzF1HFa7wtLXBMCMpwtnfKVAf9?=
 =?us-ascii?q?w95E1L2n7etwx4JpagNbxthkYCcwRruEPjzwl3CoRFkcgtsHMqzApzJbiE0F9b?=
 =?us-ascii?q?cDOYx5TwOrzRKmn95x2vb6/W2lfD0NeZ4KsP6fI4q0n9swGtDEYt73Jn09xN2X?=
 =?us-ascii?q?uG+prKFBYSUY72Uksv7Rd6o6/VYyYj6ILUz3FjKrS0vSLY1NIvB+slzQigcsxb?=
 =?us-ascii?q?MKOFEg/yDsIbC9KvKOwsh1imcBYEMPpO+64zOsOsb+GG17KzPOZ8gDKminxK4Y?=
 =?us-ascii?q?Bg0k6W6yVwUO/J35YfzPGe0QuKTDP8jFanssDqloFIfzASHmyjySf6AI5dfLF9?=
 =?us-ascii?q?fYEOCW22Oc242s1+h4LxW35f7FOjHVIG19OzdhqIclP92hdc1UIJrny9mCu01i?=
 =?us-ascii?q?B7nCstrqWCwiPO2ePidBwcN25PRWlii0rsIIeug9AbWkiocxYmlB+/6UnmwKhb?=
 =?us-ascii?q?obx1L3PPTkdQYyj2M2ZiX7Owt7qDecJO6IkksT5KUOS6el2aTr/9ox0H0yLsBW?=
 =?us-ascii?q?dexTY7dy20tZX9hRB1lGWdLHNrpnrDZc5w3Qvf5MDbRfNJ3DoJXjN4iTrUBli7?=
 =?us-ascii?q?JdWp5s+bl5TAsuC/UWKuSJtTfDLvzYOBsiu7+GJrDQe+n/C1ht3oDww63TXn2N?=
 =?us-ascii?q?ltUCXCtAz8bZXz16SmLeJneVFlBV/m5Mp9AI1+kIowhJcL1Hgeh5WV+2cHkGjp?=
 =?us-ascii?q?PdVa36L+cGQCRToRz9HJ5wjl3VVpLmiVyILhSnWd3sxhasG5YmwM2yIx9cBKCL?=
 =?us-ascii?q?qO47xCkit4uV64rQPXYfhgkTYR0/ou6HgGg+4XvAoh1DmSArcXHUNAJyzjiwyI?=
 =?us-ascii?q?78yirKVQfGuvdLmw1Elkkty7ArCNvBpcWGrndZc4BiB/8N9/MF3X3X3364Hkfs?=
 =?us-ascii?q?TQbN0Juh2VlRfAk/ZaKJYrmvUWgipnPHr3vWc5xO4jkRxuwZa6sZCbK2Vq+aK1?=
 =?us-ascii?q?GB9ZOSfzZ8MO4THtlqdek92S34CuGJVhBzoKUIHpTfKuDDIdq/DnOxySHz07r3?=
 =?us-ascii?q?eRAaDfEhOH6Ed6s3LPFIimOGqNK3keydViWQORJEhCgA0PWDU6n5g5Fh2lxcD7?=
 =?us-ascii?q?cUd54CwR6UD8qhdW1u1oMBz/WH/FpAi0cjc0VISfLB1O4wFA/UjVNNKR7vlpEy?=
 =?us-ascii?q?FE5JGhrxGNKm+GZwROF24JQVeJB1TiPrmo+NnB/PKUBuu4L/vSf7qOrfZSWOuP?=
 =?us-ascii?q?xZKqyoFm5SqDNt2TPnl+CP02wkpCXXdkG8TAhjUAUSoXmzjWb86cohe89TZ6rs?=
 =?us-ascii?q?S+8PTtRQLu6pGDC7pUMdVz5R+2hb2POPKXhCZ8MTxYzI8DxWfUyLgD214fkyFu?=
 =?us-ascii?q?eCesEbQDti7NTbjcmqxNDx4cZCN8KtFI778n3gRWPc7bi9X11qN3j/IvCldFU0?=
 =?us-ascii?q?Dhld+tZcAQP269M1bHDl6RNLuaPT3L3933YaSkRLJKkeVbrAewtiibEkP5OjSD?=
 =?us-ascii?q?liLkVxSuMeFKkSGaMwZSuIC7chZxF2fjSMjqZQG8MN9ylTc226E7hmvWNW4ANj?=
 =?us-ascii?q?hxa19NrryV7S9CnvpzAXBO7np7IumCgCuZ6+jYKpALsfpkGCh0luRa4GgkxLtR?=
 =?us-ascii?q?9i1LWPt1mC7KpN50v16mivWPyiZgUBdWqjdEnoSLvUBjOaXf7pZBWHbE8wgL7W?=
 =?us-ascii?q?WfEBkKo9plCtvyu6Ff0NTPlaTzKCtc/NLQ58cTG8/UKMfUeEYmZCDgGjPSABEM?=
 =?us-ascii?q?BRiiJGjczxhHlviD/369pZ82p5Hxgp0UQ/lcTlNjUrsTDEh0WtMYJ4xsdjcll7?=
 =?us-ascii?q?eBi4gP/3X65BLWQMFbuIvLfvmVDfjmNSyel7ACYAEHhfv9Lo07PY3h3Eljd1w8?=
 =?us-ascii?q?m57FXwLKWtpNii5sdAk5pANK6nc6BnA31QTlYwW2+3gVPfq1mBcsjU15e+tpvC?=
 =?us-ascii?q?nt+VosJhzJuS45imE1mNPsmzfXdyT+f4mqWoQDMDb5r0g8NNvRRBd5JVmpgkZj?=
 =?us-ascii?q?JTvsTLJLiL5haGUtjxXT78gcUcVARLFJNUdDjcqcYO8lhBEF8n2q?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AYAABiMhBch0O0hNFlHgEGBwaBUQkLA?=
 =?us-ascii?q?YEwgjsng3uUK4FoJRSXPoFzEgEBGBMBhDsDAoJuIjQJDQEDAQEBAQEBAgETAQE?=
 =?us-ascii?q?BCA0JCCkjDII2JAGCYgECAgEBAiAEGQEBNwEEAQkBAQoODAImAgIDMQEFAQwQB?=
 =?us-ascii?q?gESBYMcgXoIAQSaOjyKHXB8M4J2AQEFhysIEnmLMBeBf4FEgl+EZRyDBIJXiTm?=
 =?us-ascii?q?HBZA/CZFRGIlmh1qJI49pBgIJBw8hgSWCDjMaCCgIeAtWgU6CG4kBhWAfMoECA?=
 =?us-ascii?q?wEBIROKMAEB?=
X-IPAS-Result: =?us-ascii?q?A0AYAABiMhBch0O0hNFlHgEGBwaBUQkLAYEwgjsng3uUK4F?=
 =?us-ascii?q?oJRSXPoFzEgEBGBMBhDsDAoJuIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2J?=
 =?us-ascii?q?AGCYgECAgEBAiAEGQEBNwEEAQkBAQoODAImAgIDMQEFAQwQBgESBYMcgXoIAQS?=
 =?us-ascii?q?aOjyKHXB8M4J2AQEFhysIEnmLMBeBf4FEgl+EZRyDBIJXiTmHBZA/CZFRGIlmh?=
 =?us-ascii?q?1qJI49pBgIJBw8hgSWCDjMaCCgIeAtWgU6CG4kBhWAfMoECAwEBIROKMAEB?=
X-IronPort-AV: E=Sophos;i="5.56,343,1539673200"; 
   d="scan'208";a="141727398"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 11 Dec 2018 14:01:06 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726330AbeLKWBF (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 11 Dec 2018 17:01:05 -0500
Received: from mail-pg1-f194.google.com ([209.85.215.194]:37769 "EHLO
        mail-pg1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726209AbeLKWBE (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 11 Dec 2018 17:01:04 -0500
Received: by mail-pg1-f194.google.com with SMTP id 80so7284573pge.4
        for <linux-kernel@vger.kernel.org>; Tue, 11 Dec 2018 14:01:03 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=chromium.org; s=google;
        h=mime-version:content-transfer-encoding:in-reply-to:message-id:to
         :subject:from:user-agent:references:cc:date;
        bh=sbQL7SltHDLryPImk/WCQHIX5qDycqTAd4eiqVNUiKs=;
        b=CfjBQb3Td1HzPTk0RRC7rpQDEQZ5o86e81TPr1m8nTz94CxGhDhyca0621uy4MIDxt
         Jqor7SZSzir3SrhNkmJXbxfsuyT7DBVP0kLEax36NGogFR8gXvSuqdiKPP9EeUunHsoy
         180YFoQS16QPLYWCA2So5Oevk1WyE3muCnrCw=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:content-transfer-encoding
         :in-reply-to:message-id:to:subject:from:user-agent:references:cc
         :date;
        bh=sbQL7SltHDLryPImk/WCQHIX5qDycqTAd4eiqVNUiKs=;
        b=EIoAFsq3GsxLDtVeg+Yyjin35BAegnfGLNXTnt3z6ewfOG8rKalEw/yH62/uk9iIvL
         FKhnLim9iWcx6ZRDXWymrQk6kFlESMUgnQ4/n0EulUfYAWKBSCTxKgV46rePrUeiA6XW
         ABp8yWmtTgVdXLUjAVS7PY+QqUplhrYZc+wplFlvxuIg5Hpv17+OhiTSQWwTUjf/dUff
         P3+IDlr0sWYwj+ZSu5ksHVGbfcb+2f0VWw8sERDL9NONojk3v4bY61PDHHqac0kCq+xX
         b6fYAFQdAVU8ojtOFBM/kfkz0tYvUe0RSmq9Ah9f7U31Lp4OcZsyPZN739iE7Z2/+wgC
         Mx5w==
X-Gm-Message-State: AA+aEWaEtNu5auzIM7HbBtsMkE03mCbQtGoRyW6RCvP9Gb8bIReY9lW1
        fBT98PmMqbKspWAGe+opTEYbLw==
X-Google-Smtp-Source: AFSGD/W6WCCeF6V8WQbMfCqYX3BaxvuQcqfGrPTECOPYwZ2vXu7fGOb5tOkX5Fja5qL9O2Cn82mq9Q==
X-Received: by 2002:a65:6645:: with SMTP id z5mr16285409pgv.351.1544565663502;
        Tue, 11 Dec 2018 14:01:03 -0800 (PST)
Received: from localhost ([2620:15c:202:1:fa53:7765:582b:82b9])
        by smtp.gmail.com with ESMTPSA id 125sm25540313pfx.159.2018.12.11.14.01.02
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Tue, 11 Dec 2018 14:01:02 -0800 (PST)
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: quoted-printable
In-Reply-To: <20181211094938.25086-7-rnayak@codeaurora.org>
Message-ID: <154456566209.17204.2943300246902710989@swboyd.mtv.corp.google.com>
To: Rajendra Nayak <rnayak@codeaurora.org>, andy.gross@linaro.org,
        collinsd@codeaurora.org, mka@chromium.org, robh@kernel.org,
        ulf.hansson@linaro.org, viresh.kumar@linaro.org
Subject: Re: [PATCH v6 06/10] soc: qcom: rpmhpd: Add RPMh power domain driver
From: Stephen Boyd <swboyd@chromium.org>
User-Agent: alot/0.7
References: <20181211094938.25086-1-rnayak@codeaurora.org> <20181211094938.25086-7-rnayak@codeaurora.org>
Cc: devicetree@vger.kernel.org, linux-arm-msm@vger.kernel.org,
        linux-kernel@vger.kernel.org,
        Rajendra Nayak <rnayak@codeaurora.org>
Date: Tue, 11 Dec 2018 14:01:02 -0800
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Quoting Rajendra Nayak (2018-12-11 01:49:34)
> The RPMh power domain driver aggregates the corner votes from various
> consumers for the ARC resources and communicates it to RPMh.
>=20
> With RPMh we use 2 different numbering space for corners, one used
> by the clients to express their performance needs, and another used
> to communicate to RPMh hardware.
>=20
> The clients express their performance requirements using a sparse
> numbering space which are mapped to meaningful levels like RET, SVS,
> NOMINAL, TURBO etc which then get mapped to another number space
> between 0 and 15 which is communicated to RPMh. The sparse number space,
> also referred to as vlvl is mapped to the continuous number space of 0
> to 15, also referred to as hlvl, using command DB.
>=20
> Some power domain clients could request a performance state only while
> the CPU is active, while some others could request for a certain
> performance state all the time regardless of the state of the CPU.
> We handle this by internally aggregating the votes from both type of
> clients and then send the aggregated votes to RPMh.
>=20
> There are also 3 different types of Votes that are comunicated to RPMh

Why capitalize vote?

> for every resource.
> 1. ACTIVE_ONLY: This specifies the requirement for the resource when the
> CPU is active
> 2. SLEEP: This specifies the requirement for the resource when the CPU
> is going to sleep
> 3. WAKE_ONLY: This specifies the requirement for the resource when the
> CPU is coming out of sleep to active state

Can you tab these in?

>=20
> We add data for all power domains on sdm845 SoC as part of the patch.
> The driver can be extended to support other SoCs which support RPMh
>=20
> Signed-off-by: Rajendra Nayak <rnayak@codeaurora.org>
> Reviewed-by: Ulf Hansson <ulf.hansson@linaro.org>

Just minor nitpicks ahead and a warning.

> diff --git a/drivers/soc/qcom/Makefile b/drivers/soc/qcom/Makefile
> index f1b25fdcf2ad..dd6ca92985ee 100644
> --- a/drivers/soc/qcom/Makefile
> +++ b/drivers/soc/qcom/Makefile
> @@ -22,3 +22,4 @@ obj-$(CONFIG_QCOM_APR) +=3D apr.o
>  obj-$(CONFIG_QCOM_LLCC) +=3D llcc-slice.o
>  obj-$(CONFIG_QCOM_SDM845_LLCC) +=3D llcc-sdm845.o
>  obj-$(CONFIG_QCOM_RPMPD) +=3D rpmpd.o
> +obj-$(CONFIG_QCOM_RPMHPD) +=3D rpmhpd.o

Put this before RPMPD? At least it would be semi-sorted then.

> diff --git a/drivers/soc/qcom/rpmhpd.c b/drivers/soc/qcom/rpmhpd.c
> new file mode 100644
> index 000000000000..f993a86be48c
> --- /dev/null
> +++ b/drivers/soc/qcom/rpmhpd.c
> @@ -0,0 +1,417 @@
[..]
> +
> +static int rpmhpd_update_level_mapping(struct rpmhpd *rpmhpd)
> +{
> +       u8 buf[RPMH_ARC_MAX_LEVELS * RPMH_ARC_LEVEL_SIZE];
> +       int i, j, len, ret;
> +
> +       len =3D cmd_db_read_aux_data_len(rpmhpd->res_name);
> +       if (len <=3D 0)
> +               return len;
> +       else if (len > RPMH_ARC_MAX_LEVELS * RPMH_ARC_LEVEL_SIZE)
> +               return -EINVAL;
> +
> +       ret =3D cmd_db_read_aux_data(rpmhpd->res_name, buf, len);
> +       if (ret < 0)
> +               return ret;

I've changed cmd_db_read_aux_data() and that change is winding through
the arm-soc tree. This will break in the compilation phase in
linux-next.

> +
> +       rpmhpd->level_count =3D len / RPMH_ARC_LEVEL_SIZE;
> +
> +       for (i =3D 0; i < rpmhpd->level_count; i++) {
> +               rpmhpd->level[i] =3D 0;
> +               for (j =3D 0; j < RPMH_ARC_LEVEL_SIZE; j++)
> +                       rpmhpd->level[i] |=3D
> +                               buf[i * RPMH_ARC_LEVEL_SIZE + j] << (8 * =
j);
> +
> +               /*
> +                * The AUX data may be zero padded.  These 0 valued entri=
es at
> +                * the end of the map must be ignored.
> +                */
> +               if (i > 0 && rpmhpd->level[i] =3D=3D 0) {
> +                       rpmhpd->level_count =3D i;
> +                       break;
> +               }
> +               pr_debug("%s: ARC hlvl=3D%2d --> vlvl=3D%4u\n", rpmhpd->r=
es_name, i,
> +                        rpmhpd->level[i]);
> +       }
> +
> +       return 0;
> +}
> +
> +static int rpmhpd_probe(struct platform_device *pdev)
> +{
> +       int i, ret;
> +       size_t num_pds;
> +       struct device *dev =3D &pdev->dev;
> +       struct genpd_onecell_data *data;
> +       struct rpmhpd **rpmhpds;
> +       const struct rpmhpd_desc *desc;
> +
> +       desc =3D of_device_get_match_data(dev);
> +       if (!desc)
> +               return -EINVAL;
> +
> +       rpmhpds =3D desc->rpmhpds;
> +       num_pds =3D desc->num_pds;
> +
> +       data =3D devm_kzalloc(dev, sizeof(*data), GFP_KERNEL);
> +       if (!data)
> +               return -ENOMEM;
> +
> +       data->domains =3D devm_kcalloc(dev, num_pds, sizeof(*data->domain=
s),
> +                                    GFP_KERNEL);
> +       if (!data->domains)
> +               return -ENOMEM;
> +
> +       data->num_domains =3D num_pds;
> +
> +       ret =3D cmd_db_ready();

Does this matter? I thought we forced cmd_db_ready() in the rpmh driver
probe, and that was the parent of all rpmh devices so we should be fine
to not need to check it again here?

> +       if (ret) {
> +               if (ret !=3D -EPROBE_DEFER)
> +                       dev_err(dev, "Command DB unavailable, ret=3D%d\n"=
, ret);
> +               return ret;
> +       }
> +
