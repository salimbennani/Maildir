Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 08:50:03 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 379955807A2;
	Wed, 12 Dec 2018 05:12:23 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 12 Dec 2018 05:12:23 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AV2SGmh1jxNJJ3WjWsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segTKv3xwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJBUMhPSiJOAI28?=
 =?us-ascii?q?YYUMAeUOIelYtJH9qlkVoBuiGQWhHv/jxiNUinPq26AxzuQvERvB3AwlB98Bv3?=
 =?us-ascii?q?XUrMnvO6cWUeG+0azGzSjCbvNQxzj99JPIchc/ofqRWr9wb8nRyVQuFgPDkFqQ?=
 =?us-ascii?q?tZflMiiP1usTrmeb7/BvVf61h2E7rAFxpyGiy8ExgYfKnoIY0k7I+Tl9zYovON?=
 =?us-ascii?q?G1RlB3bcS5HJZTqy2WLYp7T8E6T212pCo3zqcKtYO1cSQU0pgr2h3SZvKdf4SW?=
 =?us-ascii?q?4R/uUvuaLy1ii3J/Yr2/gg6/8Ui+xe34Ucm5yEhKriVbndnWrHwN1ALc6tKBSv?=
 =?us-ascii?q?Rj+ketwzGP1xrc6u1cIEA0k7TUK4I5z7IuipYetV7PEjL4lUnolqOaa0Yp9vSy?=
 =?us-ascii?q?5+nmYLjqvpqcOJV1igH6PKQugMu/AeEgPwgKXmib//m81bL68U36XrpKlPs2nb?=
 =?us-ascii?q?fdsJzDIsQaqKi5DBFP0os49Ra/ACmp0M4CkXkEMl1FYhSHgJbtO13UJ/D4F/i/?=
 =?us-ascii?q?j0y2kDh33/DGIqHhApLVI3jHkbfhfqhy51RTyQou1t1f45NUCrccIPP8QEPxtd?=
 =?us-ascii?q?rYDgMnPAyw2eroFNJ91oYGU2KVHqCZKL/SsUOP5u83I+mDfo4VuCrnJPgi/fLu?=
 =?us-ascii?q?jWI5lkUbfammxpYXbHG4HvJ7I0SWe3bsg9EBEXsUsQo6VuDllFqCUTtLbXaoQ6?=
 =?us-ascii?q?08/i07CJ6hDYrbRICth6KO0D24Hp1RYGBGDFeMHGzsd4WFXfcMdS2TLtVgkjwC?=
 =?us-ascii?q?SbiuVYsh2Quyuw/9zrptNvDU9TEAtZL/yNh14PXemgsp9Tx0CMSd0HuBT3tukW?=
 =?us-ascii?q?MKXDI22KF/oUpgylaMy6R4gvpYFcBN6PNNSAs1KZncz+liAdDoRg3BZsuJSEqh?=
 =?us-ascii?q?Qti+AjE+VNQxz8UKY0Z8AdqiiB/D0jGuA78UkbyLGZM1/rjd33j3O8Zy1XLG2L?=
 =?us-ascii?q?M9gFkhR8tFLXemibJn9wjPG47JlF2UmLuweqQCwiHB7meDwnCIvEFDTgFwV6LJ?=
 =?us-ascii?q?XXQcZkvTqdT0/UfCT76oCbQ6PQpN08+CKq1WatL3iVVKXuvsONPbY2ipgWe/GQ?=
 =?us-ascii?q?6Ixq+QbIrtY2gSwT/SCFYanAwJ/XaJLw4+Bjy/rGLYFzFuEVPvY0Xx8ehxsn+7?=
 =?us-ascii?q?T0k0zx2UYE1lzba65hkVhfmEQfMJwr0EoDshqylzHFulw9LWCt+Apw19fKVcYd?=
 =?us-ascii?q?Ix+ktH2XjetwxnOpygLqZihlEFfgRzvkPu0Qh3C4pancgrqnMq0BR9KaaC3Fxd?=
 =?us-ascii?q?cDOY2Ij6OqfLJWnq4BCvd6nW10nE39aS5KgO5+o3qlX5sA6yC0ot7m9o099W03?=
 =?us-ascii?q?ub+JXHFw4SUZP3UkYq+Bl2vbDaYi8h54zK0X1gK7W7sjjH29gxHusq1g6gf8tD?=
 =?us-ascii?q?MKODDALzE9AaC9KyJ+AwmlmpbggLPOZd9KMvO8Omdv2G2LOkPep6nTKmi3hH75?=
 =?us-ascii?q?550k6W6yV8TevI1Y4fw/6ExguHSyv8jFC5v8DtmIBLeSsdHnCixijjHoJRYLN9?=
 =?us-ascii?q?fZwKCWu3P8K43NF+iIPzVH5C816jAUgL2MuoeRqUclz80hdc1UURoXy7hyS4yy?=
 =?us-ascii?q?Z4nC0urqqaxCbO2fjtdAIbOm5XQ2lvlVftIYmug9EaRkSodBUplB2+6Eb+xqhb?=
 =?us-ascii?q?orl/LmbJTUdJeSj2M39tUq+qurWeZM5P7YsisT9LX+SkfVCaVrn9rgMY0yz5BW?=
 =?us-ascii?q?texzM7dzawtpXihRN6i2GdLHd1rHXHf8F93hPf5N3aRf5M0TsKXih4iT/LBlei?=
 =?us-ascii?q?O9ml58mbl5DGsuqmTWKuSoVTcTX3zYOHrCa65XdlARqlk/Cxm93nFxM30Sv619?=
 =?us-ascii?q?lsSCXJowzwYojt16SmL+1nelNkC0P768p/Aot+iJc/hIkM2XgGgZWY5XkHnn3y?=
 =?us-ascii?q?MdlB2aL+cWACRTgEw9PO5Ajl2UtjLm+Gxo7jV3WdxNdhaMe+Ym8Mxi096MVKAr?=
 =?us-ascii?q?+O7LNYhSt1vka4rQXJbPh4nzcdyuEh5GQUgu4Xowot0juSAqoJEkZGJyzsmA+F?=
 =?us-ascii?q?79S/rKVReWaufqK81Et4ndC9Er6CphtQV2r+epcnBSVw9NlwMErQ0H3v7YHpYM?=
 =?us-ascii?q?XQbdUWthGOkhbPle5VKI8qlvoRhCpqImb9vXwjy+4mgh1ix5C6vI6bK2pz+KK1?=
 =?us-ascii?q?GAJXNjrwZ8kL4DHikb5entqK34CoBphuAS8EXJzsTfK1Cj4SsennOh2KED09rH?=
 =?us-ascii?q?ebBLXeERWe6Edgs3LADZSrO2uLK3keyNVoXAOdK1BHgAAIQDU6mYY0FgKwy8zk?=
 =?us-ascii?q?bkh5/Sod5kLiphtP1+JoNAT/UmHFqwezcTo0TJmfLBxL7gBN/UvVMMqe7v5tEC?=
 =?us-ascii?q?Fc5JGusAuNKmmDbQRSEW4JQlCEB0zkPrS25djA9PWYBvOjL/TUZ7WCs/deV/CO?=
 =?us-ascii?q?xZKgyYZm+zeMNsOSPnhtFfE720xDXWxnFMTdgTkAVysXlyfVZc6BuBi84jF3rt?=
 =?us-ascii?q?y48PnzWALg+4qPC7hRMdVu4Ry2gr2DN+mfhClnMzZYy4gMyGTMyLge2l4Sli5v?=
 =?us-ascii?q?eyOsEbQGqS7CUqbQlrVLAB4cbiN5LNFI4L4k3glRJc7bjcv42aRljvEuEVdKS1?=
 =?us-ascii?q?zgltutZcwLOGy9MFLHBECWNLWJPzHLwsf3Yb+iRr1UlulbqxqwuTODGU/5IjuD?=
 =?us-ascii?q?jyXpVwyoMexUkCGbPRletJuhfRp3FWfjTMzpahugPd9zjD02x6A0h3zQOW4dNz?=
 =?us-ascii?q?h8b11CrrmK4SxEhfV/HnRL7mB5IumchyaZ8+7YJ44WsPRxBCR0kuNa4HIixLpU?=
 =?us-ascii?q?7CFLXvp1mCTJo95qolGmlPSPyzV9XBpPrDZLmJyEvUF4NarF8ZlAXCWMwBVY12?=
 =?us-ascii?q?KVAhJChNJqA9un77pTw9fGkortKS1e7tXG78xaDM/RfobPCHMmNR2hMjnSHgoD?=
 =?us-ascii?q?THb/LWvYgV5clvC67HCZrpEm7JPrncxdZKVcUQkLF+8TDlUtP8EQJpprRTQ62e?=
 =?us-ascii?q?qFj9Ma43eitzHLSclat4yBXfWXV6a8YA2FhKVJMkNbiYjzKp4eY8iigxRv?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AHAABoCBFch0O0hNFjGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUQYBAQELAYNrJ4wUX4szgg0UiQ2OMoFzFBgTAYc9IjQJDQEDAQEBAQE?=
 =?us-ascii?q?BAgETAQEBCA0JCCkvgjYkAYJiAQIDAQIkUgYJAQEKDgoJJQMMAUcGARIFgxyBd?=
 =?us-ascii?q?Q0Fpl0zijCMPBeBQD+DdS6KXAKJPZdPCZFXGIlph12JKZAWgUaCDk0jFYMngic?=
 =?us-ascii?q?Xjh4+AQExgQUBARyMYAEB?=
X-IPAS-Result: =?us-ascii?q?A0AHAABoCBFch0O0hNFjGwEBAQEDAQEBBwMBAQGBUQYBAQE?=
 =?us-ascii?q?LAYNrJ4wUX4szgg0UiQ2OMoFzFBgTAYc9IjQJDQEDAQEBAQEBAgETAQEBCA0JC?=
 =?us-ascii?q?CkvgjYkAYJiAQIDAQIkUgYJAQEKDgoJJQMMAUcGARIFgxyBdQ0Fpl0zijCMPBe?=
 =?us-ascii?q?BQD+DdS6KXAKJPZdPCZFXGIlph12JKZAWgUaCDk0jFYMngicXjh4+AQExgQUBA?=
 =?us-ascii?q?RyMYAEB?=
X-IronPort-AV: E=Sophos;i="5.56,344,1539673200"; 
   d="scan'208";a="44647809"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 12 Dec 2018 05:12:21 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727557AbeLLNJR (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 12 Dec 2018 08:09:17 -0500
Received: from mx1.redhat.com ([209.132.183.28]:35074 "EHLO mx1.redhat.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726741AbeLLNJQ (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 12 Dec 2018 08:09:16 -0500
Received: from smtp.corp.redhat.com (int-mx07.intmail.prod.int.phx2.redhat.com [10.5.11.22])
        (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
        (No client certificate requested)
        by mx1.redhat.com (Postfix) with ESMTPS id 2F62D821CC;
        Wed, 12 Dec 2018 13:09:16 +0000 (UTC)
Received: from vitty.brq.redhat.com.redhat.com (unknown [10.34.244.70])
        by smtp.corp.redhat.com (Postfix) with ESMTPS id 01BA01054FCC;
        Wed, 12 Dec 2018 13:09:14 +0000 (UTC)
From: Vitaly Kuznetsov <vkuznets@redhat.com>
To: Roman Kagan <rkagan@virtuozzo.com>,
        Paolo Bonzini <pbonzini@redhat.com>
Cc: "kvm\@vger.kernel.org" <kvm@vger.kernel.org>,
        Radim =?utf-8?B?S3LEjW0=?= =?utf-8?B?w6HFmQ==?= 
        <rkrcmar@redhat.com>,
        "linux-kernel\@vger.kernel.org" <linux-kernel@vger.kernel.org>
Subject: Re: [PATCH] x86/hyper-v: Stop caring about EOI for direct stimers
In-Reply-To: <20181210183918.GB13294@rkaganb.sw.ru>
References: <20181205153621.14343-1-vkuznets@redhat.com> <20181210183918.GB13294@rkaganb.sw.ru>
Date: Wed, 12 Dec 2018 14:09:13 +0100
Message-ID: <874lbi28p2.fsf@vitty.brq.redhat.com>
MIME-Version: 1.0
Content-Type: text/plain
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.22
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16 (mx1.redhat.com [10.5.110.28]); Wed, 12 Dec 2018 13:09:16 +0000 (UTC)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Roman Kagan <rkagan@virtuozzo.com> writes:

> [ Sorry, missed this one ]
>
> On Wed, Dec 05, 2018 at 04:36:21PM +0100, Vitaly Kuznetsov wrote:
>> Turns out we over-engineered Direct Mode for stimers a bit: unlike
>> traditional stimers where we may want to try to re-inject the message upon
>> EOI, Direct Mode stimers just set the irq in APIC and kvm_apic_set_irq()
>> fails only when APIC is disabled (see APIC_DM_FIXED case in
>> __apic_accept_irq()). Remove the redundant part.
>> 
>> Suggested-by: Roman Kagan <rkagan@virtuozzo.com>
>> Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
>> ---
>>  arch/x86/kvm/hyperv.c | 36 +++---------------------------------
>>  1 file changed, 3 insertions(+), 33 deletions(-)
>> 
>> diff --git a/arch/x86/kvm/hyperv.c b/arch/x86/kvm/hyperv.c
>> index e6a2a085644a..0a16a77e6ac3 100644
>> --- a/arch/x86/kvm/hyperv.c
>> +++ b/arch/x86/kvm/hyperv.c
>> @@ -56,21 +56,8 @@ static inline int synic_get_sint_vector(u64 sint_value)
>>  static bool synic_has_vector_connected(struct kvm_vcpu_hv_synic *synic,
>>  				      int vector)
>>  {
>> -	struct kvm_vcpu *vcpu = synic_to_vcpu(synic);
>> -	struct kvm_vcpu_hv *hv_vcpu = vcpu_to_hv_vcpu(vcpu);
>> -	struct kvm_vcpu_hv_stimer *stimer;
>>  	int i;
>>  
>> -	for (i = 0; i < ARRAY_SIZE(hv_vcpu->stimer); i++) {
>> -		stimer = &hv_vcpu->stimer[i];
>> -		if (stimer->config.enable && stimer->config.direct_mode &&
>> -		    stimer->config.apic_vector == vector)
>> -			return true;
>> -	}
>> -
>> -	if (vector < HV_SYNIC_FIRST_VALID_VECTOR)
>> -		return false;
>> -
>>  	for (i = 0; i < ARRAY_SIZE(synic->sint); i++) {
>>  		if (synic_get_sint_vector(synic_read_sint(synic, i)) == vector)
>>  			return true;
>> @@ -96,14 +83,14 @@ static bool synic_has_vector_auto_eoi(struct kvm_vcpu_hv_synic *synic,
>>  static void synic_update_vector(struct kvm_vcpu_hv_synic *synic,
>>  				int vector)
>>  {
>> +	if (vector < HV_SYNIC_FIRST_VALID_VECTOR)
>> +		return;
>> +
>>  	if (synic_has_vector_connected(synic, vector))
>>  		__set_bit(vector, synic->vec_bitmap);
>>  	else
>>  		__clear_bit(vector, synic->vec_bitmap);
>>  
>> -	if (vector < HV_SYNIC_FIRST_VALID_VECTOR)
>> -		return;
>> -
>>  	if (synic_has_vector_auto_eoi(synic, vector))
>>  		__set_bit(vector, synic->auto_eoi_bitmap);
>>  	else
>> @@ -382,9 +369,7 @@ int kvm_hv_synic_set_irq(struct kvm *kvm, u32 vpidx, u32 sint)
>>  
>>  void kvm_hv_synic_send_eoi(struct kvm_vcpu *vcpu, int vector)
>>  {
>> -	struct kvm_vcpu_hv *hv_vcpu = vcpu_to_hv_vcpu(vcpu);
>>  	struct kvm_vcpu_hv_synic *synic = vcpu_to_synic(vcpu);
>> -	struct kvm_vcpu_hv_stimer *stimer;
>>  	int i;
>>  
>>  	trace_kvm_hv_synic_send_eoi(vcpu->vcpu_id, vector);
>> @@ -392,14 +377,6 @@ void kvm_hv_synic_send_eoi(struct kvm_vcpu *vcpu, int vector)
>>  	for (i = 0; i < ARRAY_SIZE(synic->sint); i++)
>>  		if (synic_get_sint_vector(synic_read_sint(synic, i)) == vector)
>>  			kvm_hv_notify_acked_sint(vcpu, i);
>> -
>> -	for (i = 0; i < ARRAY_SIZE(hv_vcpu->stimer); i++) {
>> -		stimer = &hv_vcpu->stimer[i];
>> -		if (stimer->msg_pending && stimer->config.enable &&
>> -		    stimer->config.direct_mode &&
>> -		    stimer->config.apic_vector == vector)
>> -			stimer_mark_pending(stimer, false);
>> -	}
>>  }
>>  
>>  static int kvm_hv_set_sint_gsi(struct kvm *kvm, u32 vpidx, u32 sint, int gsi)
>> @@ -566,8 +543,6 @@ static int stimer_start(struct kvm_vcpu_hv_stimer *stimer)
>>  static int stimer_set_config(struct kvm_vcpu_hv_stimer *stimer, u64 config,
>>  			     bool host)
>>  {
>> -	struct kvm_vcpu *vcpu = stimer_to_vcpu(stimer);
>> -	struct kvm_vcpu_hv *hv_vcpu = vcpu_to_hv_vcpu(vcpu);
>>  	union hv_stimer_config new_config = {.as_uint64 = config},
>>  		old_config = {.as_uint64 = stimer->config.as_uint64};
>>  
>> @@ -580,11 +555,6 @@ static int stimer_set_config(struct kvm_vcpu_hv_stimer *stimer, u64 config,
>>  		new_config.enable = 0;
>>  	stimer->config.as_uint64 = new_config.as_uint64;
>>  
>> -	if (old_config.direct_mode)
>> -		synic_update_vector(&hv_vcpu->synic, old_config.apic_vector);
>> -	if (new_config.direct_mode)
>> -		synic_update_vector(&hv_vcpu->synic, new_config.apic_vector);
>> -
>>  	stimer_mark_pending(stimer, false);
>>  	return 0;
>>  }
>
> As discussed in another thread, it seems worth while to make
> stimer_set_config reject vectors 0..15.
>
> Besides I'd rather sqwash this patch into the one that introduced direct
> timers, before it reached Linus' tree.

I'm fine either way, I'm going to send v2 with a new patch adding the
check to stimer_set_config() and leave it up to Paolo if he would want
to squash them all together before sending to Linus.

(Actually I don't see direct stimers in kvm/queue but I think I heard
'queued' from Paolo...)

-- 
Vitaly
