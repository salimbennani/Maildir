Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 21:21:58 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 05E92580380;
	Thu, 13 Dec 2018 01:48:23 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by fmsmga004-1.fm.intel.com with ESMTP; 13 Dec 2018 01:48:23 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Axj2fIx1IWJWZggpwsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segTKv/xwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJOUcZfVSNPAo2y?=
 =?us-ascii?q?YYgSAeQfIelYtJH9qlkVoBuiGQWhHv/jxiNUinL026AxzuQvERvB3AwlB98DrG?=
 =?us-ascii?q?7Uo8joP6oPUOC60rLIzTXdYPNLxzfy9ozIeQ0mrP6WR7J/bNDdxlIuFwzblVWQ?=
 =?us-ascii?q?qZLqPy6L1usTt2iW9O5gVeOpi2E9sQFxpSKjxsA2ionGn48YzE3P+yt+wIYwP9?=
 =?us-ascii?q?K4SUh7bManEJROrSGaMZV5Qsc4T2FvoiY6xbsLsoO4cigS0Jkr2QLTZvidf4SV?=
 =?us-ascii?q?7B/vSvydLSp7iX55Yr6yhhS//VC+xuHgUsS4ylVHoypfntXRt30A1gbf58mFR/?=
 =?us-ascii?q?Z740yvwyyA1xrJ5eFBOU00lbTUK5omwrMoiJoTvlrMHjXslEX1kqCWbEMk9fas?=
 =?us-ascii?q?6+j9ZbXmvJCcO5d1igH4LKsuhtSyDfokPgUKRWSX5Oqx2KP58UHkQ7hGkuc6n6?=
 =?us-ascii?q?jbvZzCIMQUvK+5Awtb0oY57Ba/Ci+r0NAZnXkBMVJEdwuLj4v3NFHUJvD3E/O/?=
 =?us-ascii?q?j02rkDZlwfDJIKfhD47TLnjMjrjhZ6xx601Cxwopy9BQ+ZZUBqsGIPLpVU/9rM?=
 =?us-ascii?q?bYAQMhMwyo3+bnD81w1ocfWWKMHKCVKqzTsUKT6+IrIumMYpIVuTnnJ/gk4f7u?=
 =?us-ascii?q?kWE2mVsHcaa12psXbWiyHu56LEWBfXrsntABHH8KvgUkTezqlEeNUTlJa3ayQq?=
 =?us-ascii?q?Iz/Dc7CI29AIfHR4CthqGB3SihEp1XYGBGFk6DEXPye4qYXPcMbTqYItV9nTwc?=
 =?us-ascii?q?SbihV4gh2AmstA/91bVrNOnU+ioetZLl09h4/OnTlRA09TxpAMWRyWCNT2donm?=
 =?us-ascii?q?wWQz86xrxwoUt4yl2by6h3n+RYFcBP5/NOSgo1L4Xcz+x9C9DxQA7BZM2GSFS9?=
 =?us-ascii?q?T9WiADExSM8xwtAUb0Z8HdWikg7M3y6wD7AJkLyLAYQ+8rjA0HjpO8Z913HG2b?=
 =?us-ascii?q?Eij1Y8RMtDL2mmhq9l+AjVCI7EiEGZl6esdaQB0y/B7maDzWySvE5GVA58S7nK?=
 =?us-ascii?q?XXcaZkHOt9T2+lvCT6OyCbQgKgZO1NSNKrVUZdHzjVVJXvHjOM/AbGK3nGuwAR?=
 =?us-ascii?q?WIxraIbIfxf2Ud3SPdCFULkgwJ/HaGMxQ+CTmlo27EEDNuElfvaVv28eZisHO7?=
 =?us-ascii?q?UlM0zwaSYkJ8zbW15AAaieacS/wJ2LIEozkuqzNvEVa53tLWDceApgV7cKVdZ9?=
 =?us-ascii?q?M9/ElI1WbDuwNhOZygKrhohkQCfARvo0PuyxJ3B51ckcgrqXMqyxZyKaKY0V9b?=
 =?us-ascii?q?azOUx5fwOqfTKmnz+hCvZLXb2lXf0NaQ56cO5+40q1TlvAG1CEUi929r3MVS03?=
 =?us-ascii?q?uZ/p/KFhYdUYrtUkYr8Bh3v6vVYi0j6ILby3JtMbO4vSTf2900HuQlzBWgf9BB?=
 =?us-ascii?q?MK6fEA/yEssaB9WhKeAwmlipaA4EM/5W9KIuI8ymcP6G0raxPOl8hDKmkXhH4I?=
 =?us-ascii?q?dl30OM6ipwUPLH04wEwvGYxASHUTj8gUylssD2n4BEeD4TEnC+ySjiGI5eeKly?=
 =?us-ascii?q?cZwXBmepJs293s9+iIL1W35E6F6jAEsL2NWoeRWOdVP9xxBf1UMNrXyhhyS41T?=
 =?us-ascii?q?10nyg1oaWF2CzB3vrtdAAAOm5NX2RiiVbsIY6pj9EVRkSobg4plAe76kb+3aRU?=
 =?us-ascii?q?uKN/L2zLS0dSYyf2N31iUre3treaY89P6YkksCVNXOSnfFCaTKXwox8b0yPlAm?=
 =?us-ascii?q?tfyyo3dzCsupXlgRN6jHiRI2p0rHrcYctw3wvQ5MTARf5N2ToLXCt4hiPNBli/?=
 =?us-ascii?q?PNmp+s+Yl4zZveC9VGKhV5tTfjftzY6bsCu75GtqAQCwnvypm93nFxQ63jH/19?=
 =?us-ascii?q?VwSSrIqxP8aJHx16umKeJnYlVoBFjk5st6AI5+lZE8hJMR2XgcnZiV+XsHkWHu?=
 =?us-ascii?q?MdRUw67+bXwNRSIVzN7R+gTqxEpjLneRzYLjSnqd2tdhZ8W9Ym4O2SIy9cFKBL?=
 =?us-ascii?q?2U7LxZhyR1pFW4oBnVYfh8mDcd1PQv5GQbg+EPpAoi0CGdDqoOEklfOCzmjw6I?=
 =?us-ascii?q?4MymrKVLeGavdqC91E9/ndCiFr6OuA9dV2jiepc+AyBw9N5wP0zW0H388YzkfN?=
 =?us-ascii?q?jQbdQOthybiRvAju5VKI4vmfoOnyZoJWX9vXg9we4hkRNuxY26vJSAK2h14KK5?=
 =?us-ascii?q?BRtYOif0ZswJ/DHtkL1ent2X3420GpVhGzMLXIbnTP6yETISs+jnOBiKEDEmtn?=
 =?us-ascii?q?ibHr/fFxeF6Eh6t3LPD4yrN3aPKXYC19piQx2dJFFFjAAQQTU3hZo5FgGsxMz8?=
 =?us-ascii?q?f0Z1/DER5ljkqhRSzuJkLQXwUmDapA2wcDc7VICfLAZK7gFF/0rVM9aR7udtEC?=
 =?us-ascii?q?FD5JGhsBaBKm+GZwRLEGEJXFaLB0v4M7mq5NnA9fWYB+WkI/vPZ7WOtfJRV/OS?=
 =?us-ascii?q?yZ2z1Ytm+i6GNt+TMXl6E/07xk1DUGh5GsTehjUPUjEXmDjLb8KBvxe8/St3rs?=
 =?us-ascii?q?+k/fTvWQLv45aPCrRIPdVu/RC2nbmMN+qKiCllLjZY04sGxWXUx7gHwF4SlyZu?=
 =?us-ascii?q?eiGtEbsetC7NT6HQmq5NAx4YcSNzM8RI4Lwm3glQIs7Wkdf11r9+jv4oBFZJT1?=
 =?us-ascii?q?3hmse1ZcMUJ2GxLk/IBEGONL6ePz3E39n3Yb+gSb1XlOhbrQCwti2BE0D9PjWP?=
 =?us-ascii?q?jT3pVxG0POFIjSGbOgFeuY6nfhZsD2jjUMzpahmhPNBrij02xKU+hmnWOm4ELT?=
 =?us-ascii?q?h8b0RNo6WM7SNZh/VzAXBO4mB5IumEhSmZ6fLVKpIXsfttHyR1mPhW4HU8y7tJ?=
 =?us-ascii?q?8i5EQOZ5lzfVrt5ru1umiPWAyiJ7UBpSrTZGnIKKsl9kOaXc95lAX27L/RMN7W?=
 =?us-ascii?q?qKDRQKqMBoCtnuu6BW19jOm7j/KDZE89LI48QcA9LYJ96AMHokYlLVH2vQCxYE?=
 =?us-ascii?q?VjWsMWXWnUB1m/GI8XiUs518rYLjy7QUTboOfUY5XtkbB19lEcEcLZM/Cjo+nf?=
 =?us-ascii?q?iRjcMT5XejshTVbMFbuJndUbSVG/q5e2XRtqVNexZdmeCwFo8ULICunhU6MlQ?=
 =?us-ascii?q?=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AUAAB1KhJch0O0hNFjHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGCaYECJ4N8iBmOHxSXQIFxLgsIAYdDIjQJDQEDAQEBAQEBAgETAQEBCA0?=
 =?us-ascii?q?JCCkjDII2JAGCYgECAwECIB0BATcBBQkBAQoLDQICJgICAx8SAQUBHBkFgxwBg?=
 =?us-ascii?q?gAFCpsBPIodcIEvgnYBAQWBMAGFfwMFEnmJb4FCgVc/hCOFToI3gleLNJUIVQc?=
 =?us-ascii?q?CgiQEhGWKTBiBXIhGhyiOJIsWMIElgg59dAaCNYIbDBeIXoVAPjMBgQQBAYxRA?=
 =?us-ascii?q?QE?=
X-IPAS-Result: =?us-ascii?q?A0AUAAB1KhJch0O0hNFjHQEBBQEHBQGBUQgBCwGCaYECJ4N?=
 =?us-ascii?q?8iBmOHxSXQIFxLgsIAYdDIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCY?=
 =?us-ascii?q?gECAwECIB0BATcBBQkBAQoLDQICJgICAx8SAQUBHBkFgxwBggAFCpsBPIodcIE?=
 =?us-ascii?q?vgnYBAQWBMAGFfwMFEnmJb4FCgVc/hCOFToI3gleLNJUIVQcCgiQEhGWKTBiBX?=
 =?us-ascii?q?IhGhyiOJIsWMIElgg59dAaCNYIbDBeIXoVAPjMBgQQBAYxRAQE?=
X-IronPort-AV: E=Sophos;i="5.56,348,1539673200"; 
   d="scan'208";a="57304498"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 13 Dec 2018 01:48:21 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728122AbeLMJsT (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 13 Dec 2018 04:48:19 -0500
Received: from mail-io1-f67.google.com ([209.85.166.67]:44778 "EHLO
        mail-io1-f67.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727921AbeLMJsT (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 13 Dec 2018 04:48:19 -0500
Received: by mail-io1-f67.google.com with SMTP id r200so1063068iod.11
        for <linux-kernel@vger.kernel.org>; Thu, 13 Dec 2018 01:48:18 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=MA/7VFDGosHgcPekhBDpGbbUmcrDyTLEUNnFmkYTeqo=;
        b=M3/BKtg8jZ20add7U379jPdCGP7xCZ6ZRKXFIQIZgx+ZBGMgQXlEkBbj//1HuwshJX
         ToL4D1B0RRbirrDMrnwdBHqCgjGUnckEp4gnm4My/zZDch8TqTQnJNq++EmvcB+rQCrL
         y/1z7RNzW29bHR0LqbMsx1bOlr3J15P4ShK1o=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=MA/7VFDGosHgcPekhBDpGbbUmcrDyTLEUNnFmkYTeqo=;
        b=argd51TidA7llKtm2a9coDs25zeQCo/lo6UHo+pvdGEXlMQ5k4sYIL9GFmNRpqpazW
         d1d+7E+MkuPetEtAeM9obnE5XpPrgHp2oo2suXWS/M4N3MyB+EHmG0oY93Xlf5f0qibn
         2mFx7/M9usG4WLNdiVq6XCwhHHIomafryIpuwCkQvbil0J7u+Q7X29wiz9bmxnGpL2dp
         rdRZfL4SoNOGEZnuGc9BGdQkLxCkYzu10byLdjO02n/4u1V9twdgVGqxdE9DteLEhxRi
         dn5Kk2JgShDLL2Fb/1b2dQPWc8WVV/wIkyyiXnHxDhR/9kWPOuZ6x9U6BV6jwXJj+Npm
         6p4Q==
X-Gm-Message-State: AA+aEWYC+MW+Jo4/yYC590iQIaH90qYeQwoZuSNb7kBNBfKbCscBqvWT
        VpPyqNLI1llHzw8GVXmA7HvlH9zG7U1bpUEe3rOrIQ==
X-Google-Smtp-Source: AFSGD/W3qNGNsBBiGQpBel9ajnA1DwW6xJTBKhxvhQJbcGFMGHVnT4EwvUd8SmxTp25+zCCqk1JOlDtb7Pd/A3jCLyI=
X-Received: by 2002:a5d:8415:: with SMTP id i21mr19613588ion.173.1544694498460;
 Thu, 13 Dec 2018 01:48:18 -0800 (PST)
MIME-Version: 1.0
References: <20181213091848.81327-1-louiscollard@chromium.org>
In-Reply-To: <20181213091848.81327-1-louiscollard@chromium.org>
From: Ard Biesheuvel <ard.biesheuvel@linaro.org>
Date: Thu, 13 Dec 2018 10:48:07 +0100
Message-ID: <CAKv+Gu9sWw=VHjYivokAkhGP+p1P15bs3ThfRghARNesW5kyOA@mail.gmail.com>
Subject: Re: [PATCH v2] Allow hwrng to initialize crng.
To: louiscollard@chromium.org
Cc: "open list:HARDWARE RANDOM NUMBER GENERATOR CORE" 
        <linux-crypto@vger.kernel.org>, mpm@selenic.com,
        Herbert Xu <herbert@gondor.apana.org.au>,
        Arnd Bergmann <arnd@arndb.de>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        gary.hook@amd.com, m@bues.ch,
        PrasannaKumar Muralidharan <prasannatsmkumar@gmail.com>,
        "Michael S. Tsirkin" <mst@redhat.com>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        apronin@chromium.org,
        Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>,
        linux@mniewoehner.de, david.bild@xaptum.com,
        "Theodore Ts'o" <tytso@mit.edu>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, 13 Dec 2018 at 10:18, Louis Collard <louiscollard@chromium.org> wrote:
>
> Some systems, for example embedded systems, do not generate
> enough entropy on boot through interrupts, and boot may be blocked for
> several minutes waiting for a call to getrandom to complete.
>
> Currently, random data is read from a hwrng when it is registered,
> and is loaded into primary_crng. This data is treated in the same
> way as data that is device-specific but otherwise unchanging, and
> so primary_crng cannot become initialized with the data from the
> hwrng.
>
> This change causes the data initially read from the hwrng to be
> treated the same as subsequent data that is read from the hwrng if
> it's quality score is non-zero.
>
> The implications of this are:
>
> The data read from hwrng can cause primary_crng to become
> initialized, therefore avoiding problems of getrandom blocking
> on boot.
>
> Calls to getrandom (with GRND_RANDOM) may be using entropy
> exclusively (or in practise, almost exclusively) from the hwrng.
>
> Regarding the latter point; this behavior is the same as if a
> user specified a quality score of 1 (bit of entropy per 1024 bits)
> so hopefully this is not too scary a change to make.
>
> This change is the result of the discussion here:
> https://patchwork.kernel.org/patch/10453893/
>
> Signed-off-by: Louis Collard <louiscollard@chromium.org>
> Acked-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
> ---
>  drivers/char/hw_random/core.c | 11 +++++++++--
>  1 file changed, 9 insertions(+), 2 deletions(-)
>
> diff --git a/drivers/char/hw_random/core.c b/drivers/char/hw_random/core.c
> index 95be7228f327..7736e1a96321 100644
> --- a/drivers/char/hw_random/core.c
> +++ b/drivers/char/hw_random/core.c
> @@ -24,6 +24,7 @@
>  #include <linux/sched.h>
>  #include <linux/slab.h>
>  #include <linux/uaccess.h>
> +#include <crypto/chacha20.h>
>
>  #define RNG_MODULE_NAME                "hw_random"
>
> @@ -64,13 +65,19 @@ static size_t rng_buffer_size(void)
>  static void add_early_randomness(struct hwrng *rng)
>  {
>         int bytes_read;
> -       size_t size = min_t(size_t, 16, rng_buffer_size());
> +       /* Read enough to initialize crng. */
> +       size_t size = min_t(size_t,
> +                           2*CHACHA20_KEY_SIZE,

This should be as symbolic constant that retains its meaning even if
we move away from ChaCha20 or modify the current implementation

> +                           rng_buffer_size());
>
>         mutex_lock(&reading_mutex);
>         bytes_read = rng_get_data(rng, rng_buffer, size, 1);
>         mutex_unlock(&reading_mutex);
>         if (bytes_read > 0)
> -               add_device_randomness(rng_buffer, bytes_read);
> +               /* Allow crng to become initialized, but do not add
> +                * entropy to the pool.
> +                */
> +               add_hwgenerator_randomness(rng_buffer, bytes_read, 0);
>  }
>
>  static inline void cleanup_rng(struct kref *kref)
> --
> 2.13.5
>
