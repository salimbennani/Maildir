Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 21:21:20 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 3223F580380;
	Thu, 13 Dec 2018 01:01:39 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 13 Dec 2018 01:01:39 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A4Y/4axT4emGXlBNp1tq758G8Q9psv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YhWCt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZDI2y?=
 =?us-ascii?q?b5UBAfcCM+ZWoIbyu0YBohmwCgm3HOPiyCRFhmPq0aAgz+gtDRvL0BImEtkTsH?=
 =?us-ascii?q?rUttL1NKIKXO671qbIyzTDYO1S2Tzg54fHbAwhoe2SUrJqbMHczlQgGBnDjlWR?=
 =?us-ascii?q?t4PlOyiY1uoDs2mV6+pgUfijhHInqwxopDWk28kiio7Mho0Py1DE8z10wIgvJd?=
 =?us-ascii?q?KmVkF0fMCrEIBTtyGGMIt2WtkuQ2ZyuCY10rEJpZm7fCwOyJs93BHfbOaHfJKS?=
 =?us-ascii?q?7h3/U+aRJC90hH1ieLK4iBay9Vavyvb7VsmpylZFsjRKnsPQuXAK0hzf8saHSv?=
 =?us-ascii?q?Vz/0el3TaDzRzc6uFCLEsplqTbM4YszqAsmpcXq0jPAyH7lFvsgKOLdUgo5vKk?=
 =?us-ascii?q?5uXlb7n+uJOTLZN4hh/7P6gzm8GyAuE1PwgPUmWf5+ux0aHv8Ej3TblXkvE7k6?=
 =?us-ascii?q?zUv43bKMkVpKO0BhJa34Q95xuxCjqpztcVkHkHIV9DZRmJlZLmO0vUL/D9Ffq/?=
 =?us-ascii?q?g0qjkDNsx/3eIL3hDYvCLmLZnLfiY7l98UhcxxQ3zdxF4JJUEL4BLOryWk/3qt?=
 =?us-ascii?q?PYEgc0PxKoz+vjEtlxy40TVXyVDqOEM67erUWE6+MtLuWUYY8aojf9K/wr5/70?=
 =?us-ascii?q?in85nEcQfa2o3ZsRdXC5Ee1qI0aHbnr2hNcOD2MKshM5TO3kjl2NTyRTam2sX6?=
 =?us-ascii?q?Iz+D47EpiqDYTdSYC3hryOwiO7EodRZmBcBVCACW3oeJmcW/cQdCKSJddskjgF?=
 =?us-ascii?q?VbiiVYAtzx6vtBLhxrpjL+rU/DAYtJ352Nh04e3TiQ899ThuA8uB1GGNSnl+nn?=
 =?us-ascii?q?kUSD8uwKB/vUt9x0+D0adigvxYCcZc5/RTXgc6KJ7T1ep6C9/pVwLFf9eJTkum?=
 =?us-ascii?q?Q9q8DTEwSNIx38EBY0JnF9q+iRDD2jKgA6UJmLyTGJw07qXc0mDzJ8Z61XnKzq?=
 =?us-ascii?q?ohj14gQstJMm2rnap/9wnVB47UnESVjaeqdaIA3CHT8GeP13aBvEZdUARoS6XK?=
 =?us-ascii?q?QWgfZlfKrdT+/k7NVaSuCbQgMgtC08KCMLFFat/ygFVCRffjPsneYm2rl2exAx?=
 =?us-ascii?q?aI2q2DbI7wd2oB2yXdDVAOkxoP8naeKQg+GiChrnrdDDN0E1LjeUfs8ehkp3O9?=
 =?us-ascii?q?QU851AWKb0xn17qo9R8Zn/2cS/UP3r0avCctsSl7HFG439jOEdqPuxJhfLlAYd?=
 =?us-ascii?q?M6+FpIyHjWtxJjMZC6L6BtnFgecx9psEPo0Bl3DoZAkc0urH4xyApyKKSY0E5O?=
 =?us-ascii?q?dj+C3JDwPKHXJXf2/By1d6HW3VTe2s6M+qgT8PQ4t0njvAaxG0U/6Xpnzcda32?=
 =?us-ascii?q?Gc5prQCgoSSoz+UkAs+hh+prHaZDQ95ozO2X1tN6m0riHN29YzCOQ5zRages9V?=
 =?us-ascii?q?MLmYGw/qD80aG8+uJfQ2m1ioaxIEO/xS9K40Ps+8a/uKwqmrPPxknDKni2RH75?=
 =?us-ascii?q?tw0kaN9yp6V+7J0IwJw/Ce3gubSTj8iE2tvdzwmYBBfTsSBHawyTD4BI5NYa1/?=
 =?us-ascii?q?ZZwECWOwLMy42Np/h4ThVGVF9FG+HVwG3sypeR2Mb1Hm2Q1Q1EIXoWGomCeizj?=
 =?us-ascii?q?x0lS0pobSb3CDU3+vicx8HMHZRRGZ+lVfsPZS0j9cCUUmocggljgeq6Vz7xqhb?=
 =?us-ascii?q?vqt/KWbTTFxMfyj3KWFiT6SxuqCDY85J9JMnryFXXP6gblCdT773uwEa3D/7H2?=
 =?us-ascii?q?tC2DA7cCmnuo/4nxNmkm2dNmt8rH3DdcF22xjf/t3cSedN0TUcQCl3lCfYBkK7?=
 =?us-ascii?q?P9mv5tiUk5bDsuajV2OuTJFTcC/rzZ+euyu//2FlHRq/n/WrkN39DQc6yTP718?=
 =?us-ascii?q?VtVSjQrBf8Y5Pn1qSgPeJ8Y0loAkTx6857GoF4j4sxi4sc2XkchpWJ43UHlX3/?=
 =?us-ascii?q?Pslc2aL7dHANXyIEw8bJ4Aj5301uNnCJyJjjVnWewcthYMO2YngM1SI+7MBKCa?=
 =?us-ascii?q?GU46JCnSZuplq4rATRYeVynzsHyPsu7mIajP8NuAY30iqdBbUSF1FCPSPwjxSI?=
 =?us-ascii?q?88y+rKJPaWeva7ew01ByndKgDLGEuQxcXHf5epE/HS5/9Ml/MVTM0GHt5YHgYt?=
 =?us-ascii?q?XfcdUTthiMmRfak+dVMI4xluYNhSd/OmLyp3wlx/Q7jRxzx566uoeHJn5p/KK4?=
 =?us-ascii?q?BB5YKzL0a9kS+jHrkaZRgMKW05qzEZVmHzUBRIHoQu6wEDIOqfTnMB6DEDg9qn?=
 =?us-ascii?q?eYA7XTBwGe51l9r3LTDZ+rLWqYK2cDzdVtXxSdIE1fgAYJXDQ1hJI5FwaqxND/?=
 =?us-ascii?q?f0d9/Dwe+ln4qh5UwOJyKxb/SnvfpBuvajosVJifKx9W4htD5kjPN8ye8/lzHz?=
 =?us-ascii?q?pZ/pC6qAyNK2qbZxlHDG0TW0yEAUzjMaeq5dXa7+eYAe++JePUYbqSsexeS+uI?=
 =?us-ascii?q?xZW334R95TmMMcGPPmR4A/0/x0pORnR5G8XfmzUSRC0bjSPNb8iHpBii/i17tN?=
 =?us-ascii?q?yw8PPuWAj3/4uAF6NSMclz+xCxmaqDNfSfhCNnJjZDzJ8M2WXEyLsC3F4RliFu?=
 =?us-ascii?q?cSOiEa8buC7JTaLQnLJXDhEBZyNyMstI87wz3g1XNcHHjdP106ZyjuQpBFddSV?=
 =?us-ascii?q?zhhsapaNQKImG6KVPHHVuLO66AJTHR2MH3ZqW8SbJLgeVQth2wvyubEkD5MjSC?=
 =?us-ascii?q?kTnpSw6gMeVWgC6HOxxevZm3cgxxBmj7UNLmdhq7Pcd3jTIowL00hXDKNW8GPT?=
 =?us-ascii?q?h/aUNNqbKQ4j1CgvViAGxM9X5lLeiCmyaE4OjUMJcWsf13Aitqk+JW+mg1y7xQ?=
 =?us-ascii?q?7CtcXvx6hDPSrsJyo1GhiuSA0CdnXwFUqjlVhIOHp0FiOaTC+5lEWHbE+g8N7G?=
 =?us-ascii?q?qKBxQLodtlFsPgu6RKxtfTk6LzLS9I88jI8ssEG8jUNMWHPWI9MRroHT7YFhcK?=
 =?us-ascii?q?QSS3OmHfmUNdluqf9nmUrpg8t5jtl4ACSr5dVFwpCPwaDl5pE8AFIJdyRjkki6?=
 =?us-ascii?q?KUjNYU5XqiqxncXMVbsYrBVvKXAPXvLi6WjLhEZxQSx7P4Ip8eNon620xkd1l7?=
 =?us-ascii?q?k57GG0vWXdBRvCJhahU4r1lK8Hh7HSUP3BfZbQak+21bO/+7l1ZilgV/bu0F/z?=
 =?us-ascii?q?f25FI2O1+MozE/xhofg9Lg1ByYdj/8KO+OUJ1KBjC840Q4NJL2Ry57YxK2mQpv?=
 =?us-ascii?q?NGGXFPpqk7J8eDUz20fnspxVFKsZFPUcbQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAAC/HhJch0O0hNFjGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBgTCBOYECJ4wVjh8Ul0CBcxIBARgNBgGBS4V?=
 =?us-ascii?q?4IjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYQEBAQECAQEBASQTBgEBL?=
 =?us-ascii?q?AsBBQkBAQoOCgklAwwFEwEMAQUBIhMFgxwBgXgIAQQKmws8ih2BbDOCdgEBBYE?=
 =?us-ascii?q?wAQsBhQxnCBKLDoEcF4F/gwEkfoMFGQEEgSqDaYImizSEJpEtCgmBFoEShGWGL?=
 =?us-ascii?q?DODYgsYYHwjKoRPgnSHXiyKB4Nxin4GAgkHDyGBJYIOMxoIMDuCbAmCEgwXgyI?=
 =?us-ascii?q?ohRSFQD8ygQUBAYxRAQE?=
X-IPAS-Result: =?us-ascii?q?A0ABAAC/HhJch0O0hNFjGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBgTCBOYECJ4wVjh8Ul0CBcxIBARgNBgGBS4V4IjQJDQEDAQEBA?=
 =?us-ascii?q?QEBAgETAQEBCA0JCCkjDII2JAGCYQEBAQECAQEBASQTBgEBLAsBBQkBAQoOCgk?=
 =?us-ascii?q?lAwwFEwEMAQUBIhMFgxwBgXgIAQQKmws8ih2BbDOCdgEBBYEwAQsBhQxnCBKLD?=
 =?us-ascii?q?oEcF4F/gwEkfoMFGQEEgSqDaYImizSEJpEtCgmBFoEShGWGLDODYgsYYHwjKoR?=
 =?us-ascii?q?PgnSHXiyKB4Nxin4GAgkHDyGBJYIOMxoIMDuCbAmCEgwXgyIohRSFQD8ygQUBA?=
 =?us-ascii?q?YxRAQE?=
X-IronPort-AV: E=Sophos;i="5.56,348,1539673200"; 
   d="scan'208";a="44792775"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 13 Dec 2018 01:01:37 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727608AbeLMJBe (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 13 Dec 2018 04:01:34 -0500
Received: from mail-ed1-f68.google.com ([209.85.208.68]:41680 "EHLO
        mail-ed1-f68.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726847AbeLMJBe (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 13 Dec 2018 04:01:34 -0500
Received: by mail-ed1-f68.google.com with SMTP id z28so1353508edi.8
        for <linux-kernel@vger.kernel.org>; Thu, 13 Dec 2018 01:01:32 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=ffwll.ch; s=google;
        h=sender:date:from:to:cc:subject:message-id:mail-followup-to
         :references:mime-version:content-disposition:in-reply-to:user-agent;
        bh=k7jqSXyl0epgeHm/GfYZ/+xxR1QJOuX/FLgwINC/CiI=;
        b=Eju2Hm1yj+4LzrDcB6SKWZzVEnXZdz+3ITMDFWgKn/FGzuyfzxH2t8ZZUsTkLw5hMr
         5LTzU/XQ5HJNGrh6JdxdGFQxymVZfpleERxefwBm7b50msXS0EMQ5EQ/cpvQF8Pa4ucN
         6jr7rV4yVlXniqyVlXC8oeR2lqzsD3fMFC2Q8=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:sender:date:from:to:cc:subject:message-id
         :mail-followup-to:references:mime-version:content-disposition
         :in-reply-to:user-agent;
        bh=k7jqSXyl0epgeHm/GfYZ/+xxR1QJOuX/FLgwINC/CiI=;
        b=pI8LQW9r7kplv6w7kkUB42RQ/TcIM+mfdSzUhJPQn5shU5Bc8BLePC1jC5uYpHcSE2
         AjOBVQ/Y1IncDPk2l2kZZTeFWpf6cQV75KOmDfu1P/nlldLNmNKztoZA+NGEl7xqxxsv
         9tEKDs1rvGnVm5gmXXAuSJP5P+ErmPPWqFcOB9vgsxkR139mBhrAzYPd3ESjt2OzvDZ6
         KOcZL4zB/y5i3BJFIKr3qTqP4+S34BocisOz49Avu1hL+dqeRCixlOZDrQ/8PuhCstv9
         e5wCCpIkHRlJ2KNKfGAAf36GEtkVLlUIEko/XxYwN87keSWrGl/z5+pqJJ8Qy3p5owZ6
         fLNQ==
X-Gm-Message-State: AA+aEWbG1drPhCcHuQZchIVxvtV8nHlgHWToJ6I19iLeinSsd4IKOj20
        936XbdlCRUEMkM0EQEPEjvpnpeNILYQ=
X-Google-Smtp-Source: AFSGD/UKXlzdyyj3GyRSUT9JQydk2w2NBEcjTL0ewk/Jki53PQ3nGWMhisZHhWprxcK8bYdF2RymCw==
X-Received: by 2002:a17:906:6216:: with SMTP id s22-v6mr17231521ejk.18.1544691691609;
        Thu, 13 Dec 2018 01:01:31 -0800 (PST)
Received: from phenom.ffwll.local ([2a02:168:569e:0:3106:d637:d723:e855])
        by smtp.gmail.com with ESMTPSA id e26-v6sm231849ejb.29.2018.12.13.01.01.29
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Thu, 13 Dec 2018 01:01:30 -0800 (PST)
Date: Thu, 13 Dec 2018 10:01:28 +0100
From: Daniel Vetter <daniel@ffwll.ch>
To: Tomasz Figa <tfiga@chromium.org>
Cc: helen.koike@collabora.com, dnicoara@chromium.org,
        =?iso-8859-1?Q?St=E9phane?= Marchesin <marcheu@google.com>,
        Sean Paul <seanpaul@google.com>,
        Alexandros Frantzis <alexandros.frantzis@collabora.com>,
        David Airlie <airlied@linux.ie>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        dri-devel <dri-devel@lists.freedesktop.org>,
        Gustavo Padovan <gustavo.padovan@collabora.com>,
        kernel@collabora.com
Subject: Re: [PATCH v2] drm/atomic: add ATOMIC_AMEND flag to the Atomic IOCTL.
Message-ID: <20181213090128.GB21184@phenom.ffwll.local>
Mail-Followup-To: Tomasz Figa <tfiga@chromium.org>,
        helen.koike@collabora.com, dnicoara@chromium.org,
        =?iso-8859-1?Q?St=E9phane?= Marchesin <marcheu@google.com>,
        Sean Paul <seanpaul@google.com>,
        Alexandros Frantzis <alexandros.frantzis@collabora.com>,
        David Airlie <airlied@linux.ie>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        dri-devel <dri-devel@lists.freedesktop.org>,
        Gustavo Padovan <gustavo.padovan@collabora.com>,
        kernel@collabora.com
References: <20181123215354.14540-1-helen.koike@collabora.com>
 <CAAFQd5BHPjode=KqEHs=eNqqCe-xvsqx1ko9hQn29djFxuSWUA@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <CAAFQd5BHPjode=KqEHs=eNqqCe-xvsqx1ko9hQn29djFxuSWUA@mail.gmail.com>
X-Operating-System: Linux phenom 4.18.0-2-amd64 
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, Dec 13, 2018 at 04:43:57PM +0900, Tomasz Figa wrote:
> Hi Helen,
> 
> On Sat, Nov 24, 2018 at 6:54 AM Helen Koike <helen.koike@collabora.com> wrote:
> >
> > This flag tells core to jump ahead the queued update if the conditions
> > in drm_atomic_async_check() are met. That means we are only able to do an
> > async update if no modeset is pending and update for the same plane is
> > not queued.
> 
> First of all, thanks for the patch. Please see my comments below.
> 
> If the description above applies (and AFAICT that's what the existing
> code does indeed), then this doesn't sound like "amend" to me. It
> sounds exactly as the kernel code calls it - "async update" or perhaps
> "instantaneous commit" could better describe it?
> 
> >
> > It uses the already in place infrastructure for async updates.
> >
> > It is useful for cursor updates and async PageFlips over the atomic
> > ioctl, otherwise in some cases updates may be delayed to the point the
> > user will notice it. Note that for now it's only enabled for cursor
> > planes.
> >
> > DRM_MODE_ATOMIC_AMEND should be passed to the Atomic IOCTL to use this
> > feature.
> >
> > Signed-off-by: Gustavo Padovan <gustavo.padovan@collabora.com>
> > Signed-off-by: Enric Balletbo i Serra <enric.balletbo@collabora.com>
> > [updated for upstream]
> > Signed-off-by: Helen Koike <helen.koike@collabora.com>
> > ---
> > Hi,
> >
> > This is the second attempt to introduce the new ATOMIC_AMEND flag for atomic
> > operations, see the commit message for a more detailed description.
> >
> > This was tested using a small program that exercises the uAPI for easy
> > sanity testing. The program was created by Alexandros and modified by
> > Enric to test the capability flag [2].
> >
> > To test, just build the program and use the --atomic flag to use the cursor
> > plane with the ATOMIC_AMEND flag. E.g.
> >
> >   drm_cursor --atomic
> >
> > The test worked on a rockchip Ficus v1.1 board on top of mainline plus
> > the patch to update cursors asynchronously through atomic for the
> > drm/rockchip driver plus the DRM_CAP_ASYNC_UPDATE patch.
> >
> > Alexandros also did a proof-of-concept to use this flag and draw cursors
> > using atomic if possible on ozone [1].
> >
> > Thanks
> > Helen
> >
> > [1] https://chromium-review.googlesource.com/c/chromium/src/+/1092711
> > [2] https://gitlab.collabora.com/eballetbo/drm-cursor/commits/async-capability
> >
> >
> > Changes in v2:
> > - rebase tree
> > - do not fall back to a non-async update if if there isn't any
> > pending commit to amend
> >
> > Changes in v1:
> > - https://patchwork.freedesktop.org/patch/243088/
> > - Only enable it if userspace requests it.
> > - Only allow async update for cursor type planes.
> > - Rename ASYNC_UPDATE for ATOMIC_AMEND.
> >
> >  drivers/gpu/drm/drm_atomic_helper.c | 6 +++++-
> >  drivers/gpu/drm/drm_atomic_uapi.c   | 6 ++++++
> >  include/uapi/drm/drm_mode.h         | 4 +++-
> >  3 files changed, 14 insertions(+), 2 deletions(-)
> >
> > diff --git a/drivers/gpu/drm/drm_atomic_helper.c b/drivers/gpu/drm/drm_atomic_helper.c
> > index 269f1a74de38..333190c6a0a4 100644
> > --- a/drivers/gpu/drm/drm_atomic_helper.c
> > +++ b/drivers/gpu/drm/drm_atomic_helper.c
> > @@ -934,7 +934,7 @@ int drm_atomic_helper_check(struct drm_device *dev,
> >         if (ret)
> >                 return ret;
> >
> > -       if (state->legacy_cursor_update)
> > +       if (state->async_update || state->legacy_cursor_update)
> >                 state->async_update = !drm_atomic_helper_async_check(dev, state);
> >
> >         return ret;
> > @@ -1602,6 +1602,10 @@ int drm_atomic_helper_async_check(struct drm_device *dev,
> >         if (new_plane_state->fence)
> >                 return -EINVAL;
> >
> > +       /* Only allow async update for cursor type planes. */
> > +       if (plane->type != DRM_PLANE_TYPE_CURSOR)
> > +               return -EINVAL;
> > +
> 
> So the existing upstream code already allowed this for any planes and
> we're restricting this to cursor planes only. Is this expected? No
> potential users that already started using this for other plane types?

The backend supports it for anything right now (if the driver implements
it, that is). We do expose it through the legacy cursor api, and the
legacy page_flip api, but not through atomic itself. It also has the
problem that the not all drivers who support the async legacy cursor mode
in atomic use this new infrastructure, so there's a few problems. Plus
semantics are very ill-defined (we'd definitely need igt testcases for
this stuff, especially all the new combinations with events, fences, ...).

I think what we'd need here to make sure we're not digging an uapi hole:

1. Entirely remove the legacy_cursor_update hack. There's some patches
floating around, but would need to be polished.

2. Make sure all drivers supporting legacy async cursor updates do through
the async_plane update infrastructure.

3. Get the async plane update stuff merged for amdgpu. Iirc that's still
stuck somewhere (but I'm not 100% sure what exactly they're doing).

4. Pile of igt testcases for all the new corner cases exposing this in
atomic opens up. Many cases we might want to simply reject it.

5. Userspace. Big one I have is whether we need a flag like ALLOW_MODESET,
since the current code transparently falls back to vblank-synced updates
if async updates aren't available.

tldr; lots of work. Also maybe:

0. Dump this todo into Documentation/gpu/todo.rst so it won't get lost.

Cheers, Daniel


> 
> Best regards,
> Tomasz
> _______________________________________________
> dri-devel mailing list
> dri-devel@lists.freedesktop.org
> https://lists.freedesktop.org/mailman/listinfo/dri-devel

-- 
Daniel Vetter
Software Engineer, Intel Corporation
http://blog.ffwll.ch
