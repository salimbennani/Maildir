Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  14 Dec 2018 08:42:42 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id AA8F858079D;
	Thu, 13 Dec 2018 13:46:04 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 13 Dec 2018 13:46:04 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ANCebKReTgP24KmKZe9UwsARtlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc69YBON2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNwdWGRBQ91RVzRfDYyg?=
 =?us-ascii?q?c4sBAe0BPeNCoIn8oVsFsB+yCAaoCe/qzDJDm3340rAg0+k5Hw/I3BIuEc8Nvn?=
 =?us-ascii?q?Tao9r6KLodXuK7w6nT1TXObehb2Svh5IXSbhwtveuBUax2fMHMyUcvDQTFjlCI?=
 =?us-ascii?q?pILrJTyV0OUNvHaf7+F9Wu2glXInqx1vrTi128whjZTGiZgTylDF6yp5xJ04Jd?=
 =?us-ascii?q?O2SE91Zd6kFIFcuD2aN4ZvRM4pXm9muCE/yrIcuJ67ejAHyJsgxx7YZPyHd5aH?=
 =?us-ascii?q?7gj/W+aWJDd0nHxleLyxhha29Uis0PHzVsmy3V1XrSRFisHBum4R2xHX8MSLV/?=
 =?us-ascii?q?Vw8lm71TqS1A3f9vtILEE2mKbDNZIu2KI8moQWvEjeHyL7m0D7ga+Xe0gg5Oel?=
 =?us-ascii?q?7vjrb7Doq5OBK4N5iwTzPbkvl8GxA+k1NxUBUmqF9emy0bDs4070TbVKg/Awj6?=
 =?us-ascii?q?LXqorVJd4Bqa68GwJV0pgs6xK4Dzq+ztQYkmcILEhfdBKEkYfpIVfOL+78Dful?=
 =?us-ascii?q?hFSsijhry+jHPr3nHJrNMmDOnKn9cbt58UJQ1QQ+wc5F655JCbwNPOj/V07zud?=
 =?us-ascii?q?DACx82KQ20w+LpCNVn0YMeXHqCAquYMKPUrF+J6fsjI+qSa48PvjbyNfwl6+fp?=
 =?us-ascii?q?jX43n18SY7Op0IAJaHC3APtmOV+VYXnyjdcbF2cFoA4+QPbtiF2YXj5ff2yyUL?=
 =?us-ascii?q?4k5jEnFIKmCp/ORoSsgLyCwii3BJJXZn1dB1CIEHfocZiEWvgWZCKTJM9hjiIL?=
 =?us-ascii?q?Vby7R4A90hGusRfwy6B7IerM5i0YqZXj2cB15+LJlBEy6SZ7D8OH32GNUmF7hG?=
 =?us-ascii?q?UIRzAt0aB7oEx9zEqD0Kdij/xZE9xT++1GUgMgOZHAyOx6Dsj4WhjdcdeRVFam?=
 =?us-ascii?q?XtKmDCkzTtI23dACeUV9G9KkjhDF2CqnGLsVl72NBJwp/aPQxXnxJ8Bhy3nY0K?=
 =?us-ascii?q?ktlUUpQsxKNWe+nK5w6xDTB5LVk0Wej6ulb78c3C7K9GeA12aOpltXUAxrXKXB?=
 =?us-ascii?q?XHAfYFbWrNvj6kPDSb+uFaooMg9bxcGeLatKb8XjjU9aS/f7JNTef2Wxln+zBR?=
 =?us-ascii?q?mSwLOAdo7qe2QH0yXbB0gJiAQT/XeANQgjCSatuWPeDDpyFV3xZ0Pg6/VxqHS+?=
 =?us-ascii?q?TkUs1QGFc1Vh16ap+h4SnfGTVukc3qwatys7qzV7BlC938nIBNqGoAZheKZcYd?=
 =?us-ascii?q?Y54Fpc0WLZtgp9PoGvLqx4h14edRh3sF3q1xltFopAls0qpmswzAVuMaKYzE9B?=
 =?us-ascii?q?dzSA0J/tILLXNHf98Aqva6HM3FHey8iZ+qEU5fQ8qlXjuhypF0U4/3Vm1dlVz2?=
 =?us-ascii?q?WT5pHQAAUOVpLxV1499wJmqLHCfik9+4TU2GVwMam1tz/C3M4pBOslyxq6Y9dT?=
 =?us-ascii?q?KqSEFBX2E80bAciuJ/cnm1yobhICIeBT+7Q4P8Kgd/uaxqGrOPxsky6hjWRC+I?=
 =?us-ascii?q?p9yF6D9zJgSu7U2JYI2+uX3g+ZWDbzkligstr7lptZZT4PBGW/zyvkBIlPZqBp?=
 =?us-ascii?q?eYYLCGGuI9C4x9lkhp7tXWJY+0CnB18cxMCpfh+SZUTn3QJMzUQXvWCnmSygwj?=
 =?us-ascii?q?10jjEltLaQ0DbPwuTibhUHPGFLSXJmjVftJ4i0kt8bUFKpbwgviBuq+0L6y7JH?=
 =?us-ascii?q?q6R4KmnZWV1IcDTuL2F+TquwsaKPY9RO6Jw0qypXSvmzYVeARr77vRQaySLjE3?=
 =?us-ascii?q?JCyz8hczGlp4v2nwZ9iGKbN3tzqHvZecdtxRbQ/tDcRPhR3iYYSyl8kzXYGl+8?=
 =?us-ascii?q?P9yx99WOi5jDqvy+V36mVpBLcSjrzJmMtSuh6W1xHB2/meu+mtnmEQg8zC/62M?=
 =?us-ascii?q?NmVSTOrBbgfIbr0762Pv5gfkltHFX88dZ1Gplikossg5EdwXoaiY+P/XoEkmfz?=
 =?us-ascii?q?Ns9X2bnkY3oORj4LwtjV7xbj2EB4KnKJxoT5VmiSw8d7Ztm6ZH8W1Tw578xQFK?=
 =?us-ascii?q?iU67lElzNvolWktQLRfeR9njAFxPou8nEahPsFuAgsziWbGb0SGUhYPSrxlxWH?=
 =?us-ascii?q?9dy+raNXZHqxfri0zkZxgdehDLSaqAFGRHn5YosiHTN37shnM1LDynzz5pvkeN?=
 =?us-ascii?q?nNd90TsBKUngzEj+hULpIxi/ULiTBmOWL7oX0q1eo7gQZy0pG9uYiNM39t876h?=
 =?us-ascii?q?Ah5EKj31YNse+jTsjaZdhMmaxY6uEYt6GjUXQpToV+mnHywItfToLAuOFDw8qn?=
 =?us-ascii?q?GGGbvQBwOf6UFmr27RHJCvLX2YOH4ZzdB6ThmHOENfmBwUXCk9npMhCgCqw8nh?=
 =?us-ascii?q?fF145z8L4F74twBMyvlpNxTkVmffpQGoaio7SZSFLRpW6B1C6FnRMcCE8u1zGC?=
 =?us-ascii?q?RY9IW7rAORMmybexhIDWYRV0OfHV/jOb2u5cTa/+icG+qzNP/OYbSIqexDWPaE?=
 =?us-ascii?q?35Ov0o16/zmSMsWDJGVtD/o+2kBbR3B2B9zZmykTSywQjy/NbdSUpBKi9S1stM?=
 =?us-ascii?q?y/7O7nWAHy5YuMFrtSN89g+wutjKeHNu6Qgjt5KDlC2pMNw3/I1KYQ3FoIhy5y?=
 =?us-ascii?q?cDmtFKwKtTTRQ6LIhq9XExkbZjtzNctP8qI8xxRNNtTdit/vzb54ifg1C1heWF?=
 =?us-ascii?q?zlm8GpY9EKIm6nOFPGAkaLKKqJJTnRz87rZqO8TKVajP9IuB2opTabD0jjMyyD?=
 =?us-ascii?q?lzb3VhCvMuJMjCCBMBxdooG9dRltBnb5TNL7cR22K9t3jTwwwb0piXLGL28cMT?=
 =?us-ascii?q?5gc0xTqr2c9z9XgvJ6G2ZZ9HpqMfGEmzqF7+nfMpsZq+ZrDT9ul+1E4HU20b9V?=
 =?us-ascii?q?7CBfSfxxmSvSqMNuol68numOzDpnTARBqjJRiI2XukViPL3T9oNcVnbc4BIN8W?=
 =?us-ascii?q?KQBgwWp9tkD93jobxfxsLTm6LzNjhC9cnZ/c8dB8jSNcKGP2AtMRvvGD7IEgQF?=
 =?us-ascii?q?SSSnOn3Yh0xYiPuS7GGaroAmqpjwn5oDUr9aW0YzFvMfC0RlGsQNIZZ3Xjw+l7?=
 =?us-ascii?q?6bg9UF5X6/rBnXWcVbsYrLVvOUAfXzNjmZiaNIaAcPwbP9fswuMJbm0RlidkVi?=
 =?us-ascii?q?h9aNXEXKWs1VuWtuaQg7pEgL+397CWF03lnqaw/q52IPD/O9lR4nzwhze+Ig8H?=
 =?us-ascii?q?C2uw5nfwCT/3FpyhhsxpP7gjGNcy/1cayyB5hWVDPun1M0Lou9TAN8bAn0lkth?=
 =?us-ascii?q?fH+XerRKkrE1dXx3kBSO/txAA/lBVbYCbxgXyvWaIf4v1BNQ7SK/2Uha+bj5Ds?=
 =?us-ascii?q?5ZlAI7fJiqojpM0kpHccx9AKvNPqMBmkNQj7ODuCml0v0jxQgDPU8l/2abeSpO?=
 =?us-ascii?q?s0sNYOoIPS2tq8Bl7w2Pn3N9dXQQWuBi9v5j8EIwP8yOwT3k1/hIKhbiZKSkM6?=
 =?us-ascii?q?qFtj2YxoazSVQq2xZNyhBI?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AAAAAy0hJch0O0hNFjGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBgTCBOYECJ4N2iB+MEoINFIh/jkEUgRAFShI?=
 =?us-ascii?q?BARgNBgGBS4V6IjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2BQIDGgeCWwEBA?=
 =?us-ascii?q?QECAQECJBMGAQEMKwEFCQEBChgJJQMMBQ0QAwEFAQsXCAcEAQQUBASDAAGBaAM?=
 =?us-ascii?q?NCAEECpxwPIodgWwzgnYBAQWBMAGDUw2BLWcIEosOgRwXgX+BEYFwgSKCV0cCA?=
 =?us-ascii?q?oEsARIBhXqPWpEJJAoJgRaBEoRlhxyDJQsYYIFJh0OHXiyNeIERiW0GAgkHDyG?=
 =?us-ascii?q?BJW0wcTMaCDCDJwkKgggMFxKDECiKVD8yAQEBDXUBAYoER4F3AQE?=
X-IPAS-Result: =?us-ascii?q?A0AAAAAy0hJch0O0hNFjGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBgTCBOYECJ4N2iB+MEoINFIh/jkEUgRAFShIBARgNBgGBS4V6I?=
 =?us-ascii?q?jQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2BQIDGgeCWwEBAQECAQECJBMGAQE?=
 =?us-ascii?q?MKwEFCQEBChgJJQMMBQ0QAwEFAQsXCAcEAQQUBASDAAGBaAMNCAEECpxwPIodg?=
 =?us-ascii?q?WwzgnYBAQWBMAGDUw2BLWcIEosOgRwXgX+BEYFwgSKCV0cCAoEsARIBhXqPWpE?=
 =?us-ascii?q?JJAoJgRaBEoRlhxyDJQsYYIFJh0OHXiyNeIERiW0GAgkHDyGBJW0wcTMaCDCDJ?=
 =?us-ascii?q?wkKgggMFxKDECiKVD8yAQEBDXUBAYoER4F3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,349,1539673200"; 
   d="scan'208";a="56276138"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 13 Dec 2018 13:46:02 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727254AbeLMVp7 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 13 Dec 2018 16:45:59 -0500
Received: from mail-ed1-f67.google.com ([209.85.208.67]:42331 "EHLO
        mail-ed1-f67.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726442AbeLMVp7 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 13 Dec 2018 16:45:59 -0500
Received: by mail-ed1-f67.google.com with SMTP id j6so3286078edp.9
        for <linux-kernel@vger.kernel.org>; Thu, 13 Dec 2018 13:45:57 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=ffwll.ch; s=google;
        h=sender:date:from:to:cc:subject:message-id:mail-followup-to
         :references:mime-version:content-disposition:in-reply-to:user-agent;
        bh=uZ0bqykfwfS7xqXXkH9yOxSZXFj0skiY2tdj9DxaqIs=;
        b=Dwc1PNi4+HnvyitTPIoYHQ/NA9pq8yAmwCVYYWSg0TOrLxILoJeo17CDjxxTmDlSdg
         8/ncWP2sbTubTdqrYgPRSLpurftOSBE13ryNzqRQZiu+zVc6rL8Ml8vZiXy2QOUBJwxU
         PojrqIG+Sqx+EKmOt3ME8fz6LaC9TqB55LX7M=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:sender:date:from:to:cc:subject:message-id
         :mail-followup-to:references:mime-version:content-disposition
         :in-reply-to:user-agent;
        bh=uZ0bqykfwfS7xqXXkH9yOxSZXFj0skiY2tdj9DxaqIs=;
        b=AUAAwqNOKGV8rSt8x/MYJbJmy8Xq/y6UOQp6JYQqLZ08g46HnnmjAcYmoRGr5ofGrm
         C3vQmhcbVyhpW+d2eFCMcrbXtGqUMRlup5hE0xtR717yr6pG9nLDBU4OFa5GoL4a96m5
         sZCd822hXNCd1kFmWBOMC9LLoVbuv5MBPaCHrbl4v5FtQwaR2/27SsKBqnnhapk7y1hZ
         be905eWAkctdRgQE7HqYZOGLGxDuII+m95YoTzrNy4QWj/Sb2M18zd+GIYjMXg92QfbM
         Mv5JDugRtImhgBG5A8hBdOWAj29Cu/7g3ebJTAUxZgppcyJkehkZE0MEL1hjBgtsUA12
         vzmQ==
X-Gm-Message-State: AA+aEWYihsDCOQw3MXQaw8GVuFQwLQwNhe13+6wgXemcbLpa/WVE8IXa
        4D9JTESOT+X2ciGSISTI8i6bA3njQlA=
X-Google-Smtp-Source: AFSGD/Vt/eTlwWvciYamFvvSk0MX0MaBUrO+dLTmoi5vpWiBMGRXfEXqGXiCky27QDgYVXvNWCuP4w==
X-Received: by 2002:a17:906:45d8:: with SMTP id z24-v6mr618247ejq.19.1544737556854;
        Thu, 13 Dec 2018 13:45:56 -0800 (PST)
Received: from phenom.ffwll.local ([2a02:168:569e:0:3106:d637:d723:e855])
        by smtp.gmail.com with ESMTPSA id b46sm906181edc.57.2018.12.13.13.45.55
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Thu, 13 Dec 2018 13:45:55 -0800 (PST)
Date: Thu, 13 Dec 2018 22:45:53 +0100
From: Daniel Vetter <daniel@ffwll.ch>
To: Shayenne da Luz Moura <shayenneluzmoura@gmail.com>
Cc: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>,
        Maxime Ripard <maxime.ripard@bootlin.com>,
        Sean Paul <sean@poorly.run>, David Airlie <airlied@linux.ie>,
        dri-devel@lists.freedesktop.org, linux-kernel@vger.kernel.org,
        outreachy-kernel@googlegroups.com
Subject: Re: [Outreachy kernel] [RESEND PATCH v2] drm: Rename crtc_idr as
 object_idr to KMS cleanups
Message-ID: <20181213214553.GH21184@phenom.ffwll.local>
Mail-Followup-To: Shayenne da Luz Moura <shayenneluzmoura@gmail.com>,
        Maarten Lankhorst <maarten.lankhorst@linux.intel.com>,
        Maxime Ripard <maxime.ripard@bootlin.com>,
        Sean Paul <sean@poorly.run>, David Airlie <airlied@linux.ie>,
        dri-devel@lists.freedesktop.org, linux-kernel@vger.kernel.org,
        outreachy-kernel@googlegroups.com
References: <20181213212957.vkitkyl5cj2qh7qr@smtp.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181213212957.vkitkyl5cj2qh7qr@smtp.gmail.com>
X-Operating-System: Linux phenom 4.18.0-2-amd64 
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, Dec 13, 2018 at 07:29:57PM -0200, Shayenne da Luz Moura wrote:
> This patch solves this TODO task:
>  drm_mode_config.crtc_idr is misnamed, since it contains all KMS object.
>  Should be renamed to drm_mode_config.object_idr.
> 
> Signed-off-by: Shayenne da Luz Moura <shayenneluzmoura@gmail.com>
> 
> ---
> Changes in v2:
>  - Make commit message more clear and change header file

Applied now, thanks for your patch. For next time around, pls ping after a
week already, likely no answer after a week means the patch simply fell
through the cracks :-/

Can you pls follow up with a patch to remove the todo item, now that it's
completed?

Thanks, Daniel

> 
>  drivers/gpu/drm/drm_lease.c       | 6 +++---
>  drivers/gpu/drm/drm_mode_config.c | 4 ++--
>  drivers/gpu/drm/drm_mode_object.c | 8 ++++----
>  include/drm/drm_mode_config.h     | 6 +++---
>  4 files changed, 12 insertions(+), 12 deletions(-)
> 
> diff --git a/drivers/gpu/drm/drm_lease.c b/drivers/gpu/drm/drm_lease.c
> index 977f069f6d90..b2cbb58834bc 100644
> --- a/drivers/gpu/drm/drm_lease.c
> +++ b/drivers/gpu/drm/drm_lease.c
> @@ -218,7 +218,7 @@ static struct drm_master *drm_lease_create(struct drm_master *lessor, struct idr
>  
>  	idr_for_each_entry(leases, entry, object) {
>  		error = 0;
> -		if (!idr_find(&dev->mode_config.crtc_idr, object))
> +		if (!idr_find(&dev->mode_config.object_idr, object))
>  			error = -ENOENT;
>  		else if (!_drm_lease_held_master(lessor, object))
>  			error = -EACCES;
> @@ -434,7 +434,7 @@ static int fill_object_idr(struct drm_device *dev,
>  		/*
>  		 * We're using an IDR to hold the set of leased
>  		 * objects, but we don't need to point at the object's
> -		 * data structure from the lease as the main crtc_idr
> +		 * data structure from the lease as the main object_idr
>  		 * will be used to actually find that. Instead, all we
>  		 * really want is a 'leased/not-leased' result, for
>  		 * which any non-NULL pointer will work fine.
> @@ -675,7 +675,7 @@ int drm_mode_get_lease_ioctl(struct drm_device *dev,
>  
>  	if (lessee->lessor == NULL)
>  		/* owner can use all objects */
> -		object_idr = &lessee->dev->mode_config.crtc_idr;
> +		object_idr = &lessee->dev->mode_config.object_idr;
>  	else
>  		/* lessee can only use allowed object */
>  		object_idr = &lessee->leases;
> diff --git a/drivers/gpu/drm/drm_mode_config.c b/drivers/gpu/drm/drm_mode_config.c
> index ee80788f2c40..ab553b6465e2 100644
> --- a/drivers/gpu/drm/drm_mode_config.c
> +++ b/drivers/gpu/drm/drm_mode_config.c
> @@ -381,7 +381,7 @@ void drm_mode_config_init(struct drm_device *dev)
>  	INIT_LIST_HEAD(&dev->mode_config.property_list);
>  	INIT_LIST_HEAD(&dev->mode_config.property_blob_list);
>  	INIT_LIST_HEAD(&dev->mode_config.plane_list);
> -	idr_init(&dev->mode_config.crtc_idr);
> +	idr_init(&dev->mode_config.object_idr);
>  	idr_init(&dev->mode_config.tile_idr);
>  	ida_init(&dev->mode_config.connector_ida);
>  	spin_lock_init(&dev->mode_config.connector_list_lock);
> @@ -484,7 +484,7 @@ void drm_mode_config_cleanup(struct drm_device *dev)
>  
>  	ida_destroy(&dev->mode_config.connector_ida);
>  	idr_destroy(&dev->mode_config.tile_idr);
> -	idr_destroy(&dev->mode_config.crtc_idr);
> +	idr_destroy(&dev->mode_config.object_idr);
>  	drm_modeset_lock_fini(&dev->mode_config.connection_mutex);
>  }
>  EXPORT_SYMBOL(drm_mode_config_cleanup);
> diff --git a/drivers/gpu/drm/drm_mode_object.c b/drivers/gpu/drm/drm_mode_object.c
> index cd9bc0ce9be0..bb1dd46496cd 100644
> --- a/drivers/gpu/drm/drm_mode_object.c
> +++ b/drivers/gpu/drm/drm_mode_object.c
> @@ -38,7 +38,7 @@ int __drm_mode_object_add(struct drm_device *dev, struct drm_mode_object *obj,
>  	int ret;
>  
>  	mutex_lock(&dev->mode_config.idr_mutex);
> -	ret = idr_alloc(&dev->mode_config.crtc_idr, register_obj ? obj : NULL,
> +	ret = idr_alloc(&dev->mode_config.object_idr, register_obj ? obj : NULL,
>  			1, 0, GFP_KERNEL);
>  	if (ret >= 0) {
>  		/*
> @@ -79,7 +79,7 @@ void drm_mode_object_register(struct drm_device *dev,
>  			      struct drm_mode_object *obj)
>  {
>  	mutex_lock(&dev->mode_config.idr_mutex);
> -	idr_replace(&dev->mode_config.crtc_idr, obj, obj->id);
> +	idr_replace(&dev->mode_config.object_idr, obj, obj->id);
>  	mutex_unlock(&dev->mode_config.idr_mutex);
>  }
>  
> @@ -99,7 +99,7 @@ void drm_mode_object_unregister(struct drm_device *dev,
>  {
>  	mutex_lock(&dev->mode_config.idr_mutex);
>  	if (object->id) {
> -		idr_remove(&dev->mode_config.crtc_idr, object->id);
> +		idr_remove(&dev->mode_config.object_idr, object->id);
>  		object->id = 0;
>  	}
>  	mutex_unlock(&dev->mode_config.idr_mutex);
> @@ -131,7 +131,7 @@ struct drm_mode_object *__drm_mode_object_find(struct drm_device *dev,
>  	struct drm_mode_object *obj = NULL;
>  
>  	mutex_lock(&dev->mode_config.idr_mutex);
> -	obj = idr_find(&dev->mode_config.crtc_idr, id);
> +	obj = idr_find(&dev->mode_config.object_idr, id);
>  	if (obj && type != DRM_MODE_OBJECT_ANY && obj->type != type)
>  		obj = NULL;
>  	if (obj && obj->id != id)
> diff --git a/include/drm/drm_mode_config.h b/include/drm/drm_mode_config.h
> index d643d268693e..4750fccb5b4a 100644
> --- a/include/drm/drm_mode_config.h
> +++ b/include/drm/drm_mode_config.h
> @@ -385,18 +385,18 @@ struct drm_mode_config {
>  	/**
>  	 * @idr_mutex:
>  	 *
> -	 * Mutex for KMS ID allocation and management. Protects both @crtc_idr
> +	 * Mutex for KMS ID allocation and management. Protects both @object_idr
>  	 * and @tile_idr.
>  	 */
>  	struct mutex idr_mutex;
>  
>  	/**
> -	 * @crtc_idr:
> +	 * @object_idr:
>  	 *
>  	 * Main KMS ID tracking object. Use this idr for all IDs, fb, crtc,
>  	 * connector, modes - just makes life easier to have only one.
>  	 */
> -	struct idr crtc_idr;
> +	struct idr object_idr;
>  
>  	/**
>  	 * @tile_idr:
> -- 
> 2.19.1
> 
> -- 
> You received this message because you are subscribed to the Google Groups "outreachy-kernel" group.
> To unsubscribe from this group and stop receiving emails from it, send an email to outreachy-kernel+unsubscribe@googlegroups.com.
> To post to this group, send email to outreachy-kernel@googlegroups.com.
> To view this discussion on the web visit https://groups.google.com/d/msgid/outreachy-kernel/20181213212957.vkitkyl5cj2qh7qr%40smtp.gmail.com.
> For more options, visit https://groups.google.com/d/optout.

-- 
Daniel Vetter
Software Engineer, Intel Corporation
http://blog.ffwll.ch
