Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  14 Dec 2018 08:38:49 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E483058061F;
	Thu, 13 Dec 2018 07:48:55 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga004-1.fm.intel.com with ESMTP; 13 Dec 2018 07:48:54 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AzzsNEB9c71OSBP9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1uwTIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CS2RPXthfWTFCDIOy?=
 =?us-ascii?q?YIQAE/cOMuRWoInmv1sDrwCzBRWwCO711jNEmmX70bM83u88EQ/GxgsgH9cWvX?=
 =?us-ascii?q?rattr1MqYSXv6xzKLVwjrMce9W2Svj54jSbxsspuyDUqh2ccrQ10YvExjIjlue?=
 =?us-ascii?q?qY3rOzOV0v4BvHSb7+d5U++klmApqwZ0oje1x8csjJHEhowPyl/a6yp23Zg6Jc?=
 =?us-ascii?q?a7SE5nZt6kCIFctyaAN4t5Ws8iTW9ouSg+yr0Co5K0YCgKxZI6zBDcc/yKa5aE?=
 =?us-ascii?q?7g7nWeqLPDt1imxpdKiiixux7USs0OzxW8us3FpUtCVJjsfAu3UQ2xHS6cWKT/?=
 =?us-ascii?q?tw80al1DmR0g3f9uRJLE4pmabHKpMsx6M/m5sdvEnBGyL5hUf7gLGYe0gh5Oel?=
 =?us-ascii?q?6OTqb7Xgq5SBLYF7kBv+Pb4rmsGnAeQ3LAwOX2+D9OSi273s41f5TK9JjvIoiK?=
 =?us-ascii?q?nZto7VJcABqq6+GQ9V3Z4v6xe5Dzi4zNQVhWcLIE5BdR6dkoTkNU/CLOrlAfq8?=
 =?us-ascii?q?n1igijZmyvLeMr3kGJrNL3zDkLn7fbZ67k5R0A4zzdFZ55JJBbANOfHzVVHrtN?=
 =?us-ascii?q?zeEBA5NxW4w+HpCdV7yIweQ3mCArGWMKzMq1+E/OEvLPeWZI8Tpjn9L+Ip5/n0?=
 =?us-ascii?q?jX82gVMdZ7Wm3YMLaHCkGfRrO0GZYXvvgtgfC2sLsRc+QffuiF2DVz5TenmzU7?=
 =?us-ascii?q?g95jE9FIKpE4PDSpqxj7yG2SexBodWaXxeClCQDXfocJ2JW/cWZyKTPs9uiDsE?=
 =?us-ascii?q?WaKhS488zx6usgD6xqFjLurV/C0YqJ3i2MJ05+3ViRE96zh0A96B3GGKSmF+hn?=
 =?us-ascii?q?kISCMu3KBjvUx9zU+O0ap/g/NGD9BT5PRJUgE8NZ7b1OF6D9HyWgTcftaGUlqm?=
 =?us-ascii?q?Q9OmAS0vQdI12dMBf0F9G9C6hBDZwyWqG6MVl6CMBJEs6K3cxHjxJ8F+y3rczq?=
 =?us-ascii?q?kulVsmT9BLNW2ngK5/6gfSC5TIk0Wfi6ala6Ac0DTR+2eEyGqEpFtYXxJoUaXZ?=
 =?us-ascii?q?QXAfYVPbrdfj6UPEVbOuDbUnPRFHyc6NMaZKbtzpjVNbRPbsItjeYmSxm3uuCh?=
 =?us-ascii?q?aM3L+DcI3qe2AF1iXHFEcEixwT/WqBNQUmGyiuuXzeAyJ0GVLveUzs9/J+p229?=
 =?us-ascii?q?TkMzywGKbEhh176u9x4RhPycTe4T370etCcgrTV0AEiy39bMB9WcoApheb1WYc?=
 =?us-ascii?q?kh71dfyWLZqwt9M4S9IK94mF4RbR57v0P02BVxEYVPj84qoWguzApzL6KYzVxA?=
 =?us-ascii?q?eymZ3ZD2Jr3YNG3y8AqzZK7R31HUyMyW9bsX6PQkt1XjuxmkFlYj83Vi1NlVz3?=
 =?us-ascii?q?uc55XQAAoOS57xVVw39xx7p7HcbSkw/IfU1XxqMampvT7OwdMpBO05yhm+e9dT?=
 =?us-ascii?q?Kr+LFAj3E8cCHcihNPQqm0S1bhIDJO1d7qo0MN2pdvSY2K+nJv1vnC+7gmtd5o?=
 =?us-ascii?q?B90UWM9zRnR+7M3pYFxeyY3wSdWzf9ilehrt74mYReaT4OGWq/zDDuBJRNaa1q?=
 =?us-ascii?q?YYYLFWCuLtW3x9VjnZLiR2RU9V+jB1wc3s+pdgGfb1j83Q1WyEQWrmarmSq+zz?=
 =?us-ascii?q?xojT4pqrCT0zDJw+TnbBAHIHJERHF+jVfwJoi5l8oaXEm0YAczjhuq+EH6y7Jd?=
 =?us-ascii?q?pKthNWnTQF5EcDTsIGFmT6S/qKCCY8lJ6J4ztSVXUeK8YU2VS7Lnohsa1T/jEH?=
 =?us-ascii?q?VaxDwhaz6qvZD5lQRgiG2BNHZzsGbZecZoyBbf5dzQX/5Q0iAdRClljznaHVy8?=
 =?us-ascii?q?P9iv/dWJmJbPqOG+V2S9VpJNdSnn15+PtCy+5WdyGx2wg+izmsH7EQg9ySL71c?=
 =?us-ascii?q?NlVT/LrBb/ZYnnzb+6PvhkfklrBV/87dR1Godln4s0hZEQ32Uah5qP8XoGl2fz?=
 =?us-ascii?q?LctU2abkYHURQj4Lxsbf4BL51017MnKJ24X5W22dw8R7YNm2eGEW2iM7781RDK?=
 =?us-ascii?q?eU7bpEnTZ6o1airALRZ+R9kSkZyfc09HEahOQJshI3ziqBGrASAVVYPSv0mhSL?=
 =?us-ascii?q?9d++rb9bZGaycbeq0kp+ksusDLWDogFaRXb4dY0uHS527sVjLl3M1Gf/5Z3jeN?=
 =?us-ascii?q?nVddgTrAGbkw/cj+hJL5I8jv8KhStkOW3np3EkxfA0jQdy3Z6kpoiIMHti/Li2?=
 =?us-ascii?q?AhNDMj31ZsUT+izijKpEn8aW2ZyvEYtlGjkRQJToSveoGioItfv7LwaODCE8qn?=
 =?us-ascii?q?CDFLrDGg+f7V1qrnPVHJCtKnGXP2IZzdR5SRmZJUxfhh0UXTogkp44EACq2NLu?=
 =?us-ascii?q?cENj6j8N4V74rwNGyvh0OBnnTmffuACoZy8vR5eFKxpW6hxC613RMcyD9e9zGy?=
 =?us-ascii?q?BY/pu8rA2CMGCbZgJIDX0XVUyAHVzsIr6u5dzY+eiCGuW+N+fOYamJqeFGVfeH?=
 =?us-ascii?q?35ev3ZV9/zqWKsWDJHpiD+A42kpeW3B2Ad/Zli4LSywWkSLNcsGaqA29+i1xss?=
 =?us-ascii?q?Cw7vDrVBjz6ouIDrtYKc9v9AyugaefK+6Qgz50KDZf1pMR3H/I1aIQ3FgIhyF1?=
 =?us-ascii?q?cDmtF7sAuDXJTKLRnK9XEhEaZzlyNMtO86IzwA1NNdTHhdPy075yluQ1BEtdVV?=
 =?us-ascii?q?z9hsGpYtQHI2GjO1PGB0aLN7WGKSfIw8HtZqO8RqNfjP9Jtx2rojubF07jPjKe?=
 =?us-ascii?q?lzjmTRyvMOdMjD2FMxxaoo2ybhFtCW37RtL8dhK7KMN3jSExwbAsnHzKKHUTMS?=
 =?us-ascii?q?JifEJNtLGQ6SJYj+57G2xA6HplMOaFlzyY7+neNpYZr/9rDj5omOJd5XQw06FV?=
 =?us-ascii?q?4z1cRPxphCvSqcZjo02nkumK0DZoTABCpSpLhI2Vu0VvIqHZ9phGWXbZ8xMB92?=
 =?us-ascii?q?SQCxIWp9R7Dt3jobxfyt/KlKjrMjdN78rU/dcAB8jTMM+GMGAuMRzsGD7VCgsK?=
 =?us-ascii?q?VT+qNWHFiExbn/Gf7XmVrpk8qpjxl5sCUL5bVFopFvwEDkRpBsANIJByXmBsrb?=
 =?us-ascii?q?nOq8oF5mG3qhXLDOxcsoraTfKZAfjpKzHR2bBCawFSmeugBYsWP4z/nUdlbw8p?=
 =?us-ascii?q?sp7NHh/8VNZMrykpUAIovEhXuCxyR2sy1kbNZA2y5HtVHv7izU1+sRd3fel4rG?=
 =?us-ascii?q?Sk2FwwPFef4XJoyEQ=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAADEfhJch0O0hNFjGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBgTCBOYECJ4wVjiAUl0CBcxIBARgLCAGBS4V?=
 =?us-ascii?q?6IjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYQEBAQECAQEBASQTBgEBL?=
 =?us-ascii?q?AsBBQkBAQoOBwMJJQMMBRMBDAEFASITBYMcAYF4CAEECps1PIodgWwzgnYBAQW?=
 =?us-ascii?q?GRWcIEosOgRwXgX+BEYFwdC6DHgEEgUqDSYImiTeGI4E+j28KCYEWgRKEZYYsh?=
 =?us-ascii?q?BULGGB8TYRPgnSHXo4kin4GAgkHDyGBJYIOMxoIMDuCbAmCEgwXgyKFPIVAPzK?=
 =?us-ascii?q?BBQEBiXyCTAEB?=
X-IPAS-Result: =?us-ascii?q?A0ABAADEfhJch0O0hNFjGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBgTCBOYECJ4wVjiAUl0CBcxIBARgLCAGBS4V6IjQJDQEDAQEBA?=
 =?us-ascii?q?QEBAgETAQEBCA0JCCkjDII2JAGCYQEBAQECAQEBASQTBgEBLAsBBQkBAQoOBwM?=
 =?us-ascii?q?JJQMMBRMBDAEFASITBYMcAYF4CAEECps1PIodgWwzgnYBAQWGRWcIEosOgRwXg?=
 =?us-ascii?q?X+BEYFwdC6DHgEEgUqDSYImiTeGI4E+j28KCYEWgRKEZYYshBULGGB8TYRPgnS?=
 =?us-ascii?q?HXo4kin4GAgkHDyGBJYIOMxoIMDuCbAmCEgwXgyKFPIVAPzKBBQEBiXyCTAEB?=
X-IronPort-AV: E=Sophos;i="5.56,349,1539673200"; 
   d="scan'208";a="43930695"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 13 Dec 2018 07:48:53 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728856AbeLMPsv (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 13 Dec 2018 10:48:51 -0500
Received: from mail-ed1-f67.google.com ([209.85.208.67]:43326 "EHLO
        mail-ed1-f67.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727901AbeLMPsu (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 13 Dec 2018 10:48:50 -0500
Received: by mail-ed1-f67.google.com with SMTP id f9so2392230eds.10
        for <linux-kernel@vger.kernel.org>; Thu, 13 Dec 2018 07:48:48 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=ffwll.ch; s=google;
        h=sender:date:from:to:cc:subject:message-id:mail-followup-to
         :references:mime-version:content-disposition:in-reply-to:user-agent;
        bh=P7d5yHXUfSV/qxnehmAd/ytEzurRBkbvMqLCeiGC+5o=;
        b=LMuCpsmPSzrGETw612wUW3AtvpGl43PyQxAVYHESeXD947yRA7B8FcSNLcm62AN7Yy
         Q9/pBTqCMzo6Ha+euMUdOUpBz6hKpv6O5/iD6UdIhNtgQCN3wIcvcKFc0H4dClKNItGU
         O2CNL3ud3E/X0DE1nVXbom4oCvrdqK/RTSBtY=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:sender:date:from:to:cc:subject:message-id
         :mail-followup-to:references:mime-version:content-disposition
         :in-reply-to:user-agent;
        bh=P7d5yHXUfSV/qxnehmAd/ytEzurRBkbvMqLCeiGC+5o=;
        b=a54p8HEGup92g66qRu8RaTHQG70jcRGRAn+H3t1wJUIWTa28LLcs+qdRe0GWPgV8lT
         VMVALMGiIKlokPH9KYBn2JnaGpH748Uhye1nP2L4dcGGHSOG3KCHYQJMqH9at2CtUaAs
         Me4qgQ6zvobqP3ExanioMmvEhYWHbwp6xu2HnLS0kVSj32bE2t6pqGCprr/F7imwP1EH
         gZAxX3Tk1+AloVKI+uZGxjVaiCy6mnRtYqBLpj5+MDAXmlKw9nLAHxBaEQhxtapqPnzH
         aThEUbV9/EWkvw/NPE4EJ57IsH37/AUJCGUfGm2eX6iq2TvYSa04WPdFxTWpyprk4ZX+
         /Hfw==
X-Gm-Message-State: AA+aEWY8+feTBQ0Bk1G+6WA2oxWI9vGqfK1nPzxn5UooJqL29UBPzIo6
        Pnf+4FspWeR+rUVmK+zgDfuJBQ==
X-Google-Smtp-Source: AFSGD/XmcAeytAMIsFj/ep1FraCrKrxzwX3YijV1sDaXM5nfxdvulywv64yBDWvjI5ZvRhcRKs8l3w==
X-Received: by 2002:a50:b0e5:: with SMTP id j92mr21494990edd.188.1544716128120;
        Thu, 13 Dec 2018 07:48:48 -0800 (PST)
Received: from phenom.ffwll.local ([2a02:168:569e:0:3106:d637:d723:e855])
        by smtp.gmail.com with ESMTPSA id e53sm700371ede.90.2018.12.13.07.48.46
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Thu, 13 Dec 2018 07:48:47 -0800 (PST)
Date: Thu, 13 Dec 2018 16:48:45 +0100
From: Daniel Vetter <daniel@ffwll.ch>
To: Oleksandr Andrushchenko <andr2000@gmail.com>
Cc: xen-devel@lists.xenproject.org, linux-kernel@vger.kernel.org,
        dri-devel@lists.freedesktop.org, daniel.vetter@intel.com,
        jgross@suse.com, boris.ostrovsky@oracle.com,
        Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
Subject: Re: [PATCH] drm/xen-front: Make shmem backed display buffer coherent
Message-ID: <20181213154845.GF21184@phenom.ffwll.local>
Mail-Followup-To: Oleksandr Andrushchenko <andr2000@gmail.com>,
        xen-devel@lists.xenproject.org, linux-kernel@vger.kernel.org,
        dri-devel@lists.freedesktop.org, daniel.vetter@intel.com,
        jgross@suse.com, boris.ostrovsky@oracle.com,
        Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
References: <20181127103252.20994-1-andr2000@gmail.com>
 <b8f34c60-5692-c40d-3635-071d214bfeed@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <b8f34c60-5692-c40d-3635-071d214bfeed@gmail.com>
X-Operating-System: Linux phenom 4.18.0-2-amd64 
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, Dec 13, 2018 at 12:17:54PM +0200, Oleksandr Andrushchenko wrote:
> Daniel, could you please comment?

Cross-revieweing someone else's stuff would scale better, I don't think
I'll get around to anything before next year.
-Daniel

> 
> Thank you
> 
> On 11/27/18 12:32 PM, Oleksandr Andrushchenko wrote:
> > From: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
> > 
> > When GEM backing storage is allocated with drm_gem_get_pages
> > the backing pages may be cached, thus making it possible that
> > the backend sees only partial content of the buffer which may
> > lead to screen artifacts. Make sure that the frontend's
> > memory is coherent and the backend always sees correct display
> > buffer content.
> > 
> > Fixes: c575b7eeb89f ("drm/xen-front: Add support for Xen PV display frontend")
> > 
> > Signed-off-by: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
> > ---
> >   drivers/gpu/drm/xen/xen_drm_front_gem.c | 62 +++++++++++++++++++------
> >   1 file changed, 48 insertions(+), 14 deletions(-)
> > 
> > diff --git a/drivers/gpu/drm/xen/xen_drm_front_gem.c b/drivers/gpu/drm/xen/xen_drm_front_gem.c
> > index 47ff019d3aef..c592735e49d2 100644
> > --- a/drivers/gpu/drm/xen/xen_drm_front_gem.c
> > +++ b/drivers/gpu/drm/xen/xen_drm_front_gem.c
> > @@ -33,8 +33,11 @@ struct xen_gem_object {
> >   	/* set for buffers allocated by the backend */
> >   	bool be_alloc;
> > -	/* this is for imported PRIME buffer */
> > -	struct sg_table *sgt_imported;
> > +	/*
> > +	 * this is for imported PRIME buffer or the one allocated via
> > +	 * drm_gem_get_pages.
> > +	 */
> > +	struct sg_table *sgt;
> >   };
> >   static inline struct xen_gem_object *
> > @@ -77,10 +80,21 @@ static struct xen_gem_object *gem_create_obj(struct drm_device *dev,
> >   	return xen_obj;
> >   }
> > +struct sg_table *xen_drm_front_gem_get_sg_table(struct drm_gem_object *gem_obj)
> > +{
> > +	struct xen_gem_object *xen_obj = to_xen_gem_obj(gem_obj);
> > +
> > +	if (!xen_obj->pages)
> > +		return ERR_PTR(-ENOMEM);
> > +
> > +	return drm_prime_pages_to_sg(xen_obj->pages, xen_obj->num_pages);
> > +}
> > +
> >   static struct xen_gem_object *gem_create(struct drm_device *dev, size_t size)
> >   {
> >   	struct xen_drm_front_drm_info *drm_info = dev->dev_private;
> >   	struct xen_gem_object *xen_obj;
> > +	struct address_space *mapping;
> >   	int ret;
> >   	size = round_up(size, PAGE_SIZE);
> > @@ -113,10 +127,14 @@ static struct xen_gem_object *gem_create(struct drm_device *dev, size_t size)
> >   		xen_obj->be_alloc = true;
> >   		return xen_obj;
> >   	}
> > +
> >   	/*
> >   	 * need to allocate backing pages now, so we can share those
> >   	 * with the backend
> >   	 */
> > +	mapping = xen_obj->base.filp->f_mapping;
> > +	mapping_set_gfp_mask(mapping, GFP_USER | __GFP_DMA32);
> > +
> >   	xen_obj->num_pages = DIV_ROUND_UP(size, PAGE_SIZE);
> >   	xen_obj->pages = drm_gem_get_pages(&xen_obj->base);
> >   	if (IS_ERR_OR_NULL(xen_obj->pages)) {
> > @@ -125,8 +143,27 @@ static struct xen_gem_object *gem_create(struct drm_device *dev, size_t size)
> >   		goto fail;
> >   	}
> > +	xen_obj->sgt = xen_drm_front_gem_get_sg_table(&xen_obj->base);
> > +	if (IS_ERR_OR_NULL(xen_obj->sgt)){
> > +		ret = PTR_ERR(xen_obj->sgt);
> > +		xen_obj->sgt = NULL;
> > +		goto fail_put_pages;
> > +	}
> > +
> > +	if (!dma_map_sg(dev->dev, xen_obj->sgt->sgl, xen_obj->sgt->nents,
> > +			DMA_BIDIRECTIONAL)) {
> > +		ret = -EFAULT;
> > +		goto fail_free_sgt;
> > +	}
> > +
> >   	return xen_obj;
> > +fail_free_sgt:
> > +	sg_free_table(xen_obj->sgt);
> > +	xen_obj->sgt = NULL;
> > +fail_put_pages:
> > +	drm_gem_put_pages(&xen_obj->base, xen_obj->pages, true, false);
> > +	xen_obj->pages = NULL;
> >   fail:
> >   	DRM_ERROR("Failed to allocate buffer with size %zu\n", size);
> >   	return ERR_PTR(ret);
> > @@ -149,7 +186,7 @@ void xen_drm_front_gem_free_object_unlocked(struct drm_gem_object *gem_obj)
> >   	struct xen_gem_object *xen_obj = to_xen_gem_obj(gem_obj);
> >   	if (xen_obj->base.import_attach) {
> > -		drm_prime_gem_destroy(&xen_obj->base, xen_obj->sgt_imported);
> > +		drm_prime_gem_destroy(&xen_obj->base, xen_obj->sgt);
> >   		gem_free_pages_array(xen_obj);
> >   	} else {
> >   		if (xen_obj->pages) {
> > @@ -158,6 +195,13 @@ void xen_drm_front_gem_free_object_unlocked(struct drm_gem_object *gem_obj)
> >   							xen_obj->pages);
> >   				gem_free_pages_array(xen_obj);
> >   			} else {
> > +				if (xen_obj->sgt) {
> > +					dma_unmap_sg(xen_obj->base.dev->dev,
> > +						     xen_obj->sgt->sgl,
> > +						     xen_obj->sgt->nents,
> > +						     DMA_BIDIRECTIONAL);
> > +					sg_free_table(xen_obj->sgt);
> > +				}
> >   				drm_gem_put_pages(&xen_obj->base,
> >   						  xen_obj->pages, true, false);
> >   			}
> > @@ -174,16 +218,6 @@ struct page **xen_drm_front_gem_get_pages(struct drm_gem_object *gem_obj)
> >   	return xen_obj->pages;
> >   }
> > -struct sg_table *xen_drm_front_gem_get_sg_table(struct drm_gem_object *gem_obj)
> > -{
> > -	struct xen_gem_object *xen_obj = to_xen_gem_obj(gem_obj);
> > -
> > -	if (!xen_obj->pages)
> > -		return ERR_PTR(-ENOMEM);
> > -
> > -	return drm_prime_pages_to_sg(xen_obj->pages, xen_obj->num_pages);
> > -}
> > -
> >   struct drm_gem_object *
> >   xen_drm_front_gem_import_sg_table(struct drm_device *dev,
> >   				  struct dma_buf_attachment *attach,
> > @@ -203,7 +237,7 @@ xen_drm_front_gem_import_sg_table(struct drm_device *dev,
> >   	if (ret < 0)
> >   		return ERR_PTR(ret);
> > -	xen_obj->sgt_imported = sgt;
> > +	xen_obj->sgt = sgt;
> >   	ret = drm_prime_sg_to_page_addr_arrays(sgt, xen_obj->pages,
> >   					       NULL, xen_obj->num_pages);
> _______________________________________________
> dri-devel mailing list
> dri-devel@lists.freedesktop.org
> https://lists.freedesktop.org/mailman/listinfo/dri-devel

-- 
Daniel Vetter
Software Engineer, Intel Corporation
http://blog.ffwll.ch
