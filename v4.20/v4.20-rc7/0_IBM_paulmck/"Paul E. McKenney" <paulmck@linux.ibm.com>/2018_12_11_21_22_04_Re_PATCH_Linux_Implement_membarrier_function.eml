Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 12 Dec 2018 08:56:13 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 677B758079D;
	Tue, 11 Dec 2018 13:22:19 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 11 Dec 2018 13:22:18 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A8Nt61RagADHu+mWyGDjpu57/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpcm5bB7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyJPDIOi?=
 =?us-ascii?q?YYUSFeoBM+lXoJXgqFQMoxSwBhKsBPvtxzJTmn/6wbc33/g9HQzcwgAtGc8Fvn?=
 =?us-ascii?q?TOrNXyMacfSe65wrPSwjXea/NdxDjz5JLVeR4mvf6CWKx/cczXyUYxFwLJgEib?=
 =?us-ascii?q?pIv9PzyPy+QNt22b4PZjVe+0j24nqgdxoiWgx8s2i4nGnYcVxkrY+iV+xYY4PN?=
 =?us-ascii?q?u1Q1N1b96jFZtfrSCaN41uT8MtX2FkoiA6xaMauZO9YSMEy4wnygbBZ/Cbd4WE?=
 =?us-ascii?q?+A/vWeiPLTtimX5oe66ziwyz/EWi0uHxUtO43VRWoiZfkdTAqGoB2hLQ58WBV/?=
 =?us-ascii?q?Bz5F2u2SyV2ADW8uxEIV47la7cK5M53L4wmYQcsV7ZEi/1hkr2lqmWeVsg+uSy?=
 =?us-ascii?q?7OTneLrmqoedN49ylA7+LrwjltKjDek8KAQCQmaW9fqm2LH+/kD1XK9Gg/w0n6?=
 =?us-ascii?q?XBtZDVP8Ubpqq3Aw9P1YYj7g6yDzOn0NQegHkGI0tJeBGZgIjzPVHBPvT4Ae64?=
 =?us-ascii?q?g1Wiljdk2erGM6b/ApXCMHfDiq3tfbVj5E5Gzgo809Rf64hTCrEbL/L/QlXxu8?=
 =?us-ascii?q?DADh8lLwy0xP7qCNF81oMdR22DGKCYML7JvF+M5+IvJfSMZYAPtDb8Lfgl++Dh?=
 =?us-ascii?q?jXsjlVABeqmp2IMdaGqkEfR+P0WZfX3sj88BEWgQvwo+UPbliFqYXT5Tena9Ra?=
 =?us-ascii?q?Q85j4gBYKiDIfDQJ2tgbOb0Ce6GJ1Wen5JClSWHXj0cIWEXu8GaDiOLc95jjwE?=
 =?us-ascii?q?Sb+hRpcj1RGpqgD20blnLu3S+i0espLuz9x15+zVlREv+j14FcWd02eRT25qmm?=
 =?us-ascii?q?MEXSM53Kd6oUZl0FeMzbB4g+BEFdxU//5GSBw6NZ7bz+x5EdzyQBjOftWSRVai?=
 =?us-ascii?q?Q9WmBywxT90rz98PZUZ9B8utjhTZ0yW2BL8VkqSBBIYo/aLEw3jxO8F9xm7F1K?=
 =?us-ascii?q?Y7iVkqWM9PNWy8ia55+AjeHIrJk0Sfl6a3eqUQxi/N9GGfzWWQuEFUShJ/UaLA?=
 =?us-ascii?q?XXoHfEvZscz55l/eT7+pEbkoLxFOydCcJadQat3ml1NGROz9N9TYZG6xn2SwBR?=
 =?us-ascii?q?OMxr6XaIrqemMd3DjSCUQekgAT+2qGOhY6Biu7v23eCzluH0r1Y0zw6el+tG+7?=
 =?us-ascii?q?Tkgswg6XdUJhyaS69gQVhfOGTfMTxawLuCE6pjVwHVa92c/WCtWaqwpgeqVcfc?=
 =?us-ascii?q?0y4FNd2W3FsAx9O4SqL7p+iV4GbwR3o0Tu2g1rCoVBlMgqq28qzApyKK6CzFNN?=
 =?us-ascii?q?bTSY3Yr0Or3WLGny8wuia6rX2lHYzdaX9b0D6PU+q1X/og6pElAu/Glg09lQy3?=
 =?us-ascii?q?Gc/InFDBIOUZLtVUY67wJ1p7XEbSgy+YzV1WdgPrKpsjDfwd0pAuglyhG+f9pE?=
 =?us-ascii?q?NKOEFQnyE9AVBsS0KewqnUSpYQwAPOxI6KE0OMamfeOc2KG3JOZggC6mjWNf7Y?=
 =?us-ascii?q?F9z0KA7TZzRvTJ3pYF2f6Y2ASHWiz4jFegtMD3hI9FaSsTHmq51SjrGopRardu?=
 =?us-ascii?q?coYMDGekO9e3yclmh57xR35Y80auB0kH2MC1YxWSdUHy3QpK2UQRv3Ongyq4wy?=
 =?us-ascii?q?VonD4zqqqQwTLBw/7ldBoBIWNLQGhijVHxIYm7ldwaXU6obxQ3mxuh/0r1269b?=
 =?us-ascii?q?pKFnJWnJXUhIZzT2L31lUqaotruCYtRD6ZMyvSVMTeS8Z0uXSrr8oxscziPiEH?=
 =?us-ascii?q?FSxDE9dzG2pJr5mwZ2h36aLHZ2tHDZY91/xQ/D5NzAQv5cxjgGSzNiiTnUBVi8?=
 =?us-ascii?q?OMOl/c6OmJfAseC+VmShWYNVcSTwyYOAtS275XBlABGlnvCznMHnHhY+0SPhy9?=
 =?us-ascii?q?ZqUiDIpg7mYob3z6S6Lf5nfk5wCV788cV6HZtykokxhJEWwnUagpSV/XwakWb8?=
 =?us-ascii?q?K9lb2KT+bGYTSj4P2dLa/A/l2Eh7JHKT2435TmmdwtdmZ9SiYWMZwCM949pKCK?=
 =?us-ascii?q?eJ9rNEmyR1r0G8rQLQZ/h9gzgcxeEv6H4cn+EGpg4twj+BDbAVGElSJTbsmAiQ?=
 =?us-ascii?q?79CisKVXY36icb2x1Ep9h9+tFr+DrR9HWHblZJgiBzR/4dtlMFLDy3Dz7oDkeN?=
 =?us-ascii?q?/NbdMcrBGUkhHAj/RLJ5I1jPYFmS1nOWflt30/1+E7lQBu3Y29vIWfN2Vt+6e5?=
 =?us-ascii?q?DgRZNzLvYcMT5yrtjb1fnsuN24CvH5NhGigEXZfyTPKoFi4SuurjNwqUDDI8rX?=
 =?us-ascii?q?KbE6LFHQCD8Edms27PE5ezOn6MPnYZytFiRASHKExbnQAZRzE6np8/FgC3y83t?=
 =?us-ascii?q?akZ55jYN5lHmrhtA0P5nNx76Um3Hvgendi80SISDLBpR9gxC5V3aMcmA4eJoBS?=
 =?us-ascii?q?1Y4oetrA+QKmyYegRIC3sGWlefClDnP7mu48TA8ueCCuq/KfvOfauBqehEW/iU?=
 =?us-ascii?q?wpKv15Ns/yyQOcWXInliE/o711JDXHB+BsTZgigPRDYRly7XdM6boxG8+iJso8?=
 =?us-ascii?q?C78fTrXh/v5ISVB7tTN9Vv5w65gaOZO+GMgyZ5LC5S1okQyn/Q1LgfwFkShjlu?=
 =?us-ascii?q?dzazELQAti3NTKPKlq9UFR4bbCxzO9VS76IhxQlAIsrbitLz1r5lgf85EVZFVV?=
 =?us-ascii?q?r9ms63YcwGOX2yNFTCBEyTLrSJOSXLw93rYaO7UbBflvhUuAaquTmFE07vJDCD?=
 =?us-ascii?q?lzjyWhCrMOFMijybPRNEtIG8dBZtFXbsTNb8ZhKnN993iCU8wacoiXPSKW4cLT?=
 =?us-ascii?q?98fltRrr2R6CNUmOlwF3Zd4XplM+aEnT2U7+3ZKpYQrPtqDT54l+Nc4HQm1bRV?=
 =?us-ascii?q?6DtIS+BymCvXttRuuU2pkvGTyjp7VxpDsjZKi5iNvUVnOKXZ8IFPWHfE/B0X62?=
 =?us-ascii?q?WQBA8Hp99kCt3ppqBRxcLDlKP1KDde7d3U+dEQCNTTKMKCYzIdNk/AHDfSRDAZ?=
 =?us-ascii?q?QCStfTXEm0FHltmI8WKRp5427JjlgoQHULMdWVAoQKAgB1xhDeAFdY9+Qzchmr?=
 =?us-ascii?q?2ziM8O+Gr4rRPUAs5du8PpTPWXVL/XISudxZQCLz4D4r7+K4kCfMWvw0V/blxx?=
 =?us-ascii?q?n6zOGkzNTZZMqCgnZQgx9hYeuENiR3E+jhq2Ijim52UeQLvtxkY7?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BXAAAWKhBch0O0hNFlDg0BAQEBAwEBA?=
 =?us-ascii?q?QcDAQEBgWWCaoECjRqLM4INFJdSgV8SAQEYCwgBhy4iOBIBAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQgNCQgpIwyCNiQBgmEBAQEBAgEBAg8oOgUFAQkBAQoYCSUDDAUUBDEYHYJ/A?=
 =?us-ascii?q?YF5CAMCCptCiVgBAQGCHYQtAQsBd4R6BYw7EQaBQD+EI4MeBYEihhcCkDyQPwc?=
 =?us-ascii?q?CAocHhimEFAsYgVyIQIckjhaKdgIEBgUCEwGBXYF3cBWCCIEggiYXiCOFP1yBV?=
 =?us-ascii?q?gEBIYpCAQE?=
X-IPAS-Result: =?us-ascii?q?A0BXAAAWKhBch0O0hNFlDg0BAQEBAwEBAQcDAQEBgWWCaoE?=
 =?us-ascii?q?CjRqLM4INFJdSgV8SAQEYCwgBhy4iOBIBAwEBAQEBAQIBEwEBAQgNCQgpIwyCN?=
 =?us-ascii?q?iQBgmEBAQEBAgEBAg8oOgUFAQkBAQoYCSUDDAUUBDEYHYJ/AYF5CAMCCptCiVg?=
 =?us-ascii?q?BAQGCHYQtAQsBd4R6BYw7EQaBQD+EI4MeBYEihhcCkDyQPwcCAocHhimEFAsYg?=
 =?us-ascii?q?VyIQIckjhaKdgIEBgUCEwGBXYF3cBWCCIEggiYXiCOFP1yBVgEBIYpCAQE?=
X-IronPort-AV: E=Sophos;i="5.56,343,1539673200"; 
   d="scan'208";a="141721810"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 11 Dec 2018 13:22:17 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726295AbeLKVWO (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 11 Dec 2018 16:22:14 -0500
Received: from mx0a-001b2d01.pphosted.com ([148.163.156.1]:47386 "EHLO
        mx0a-001b2d01.pphosted.com" rhost-flags-OK-OK-OK-OK)
        by vger.kernel.org with ESMTP id S1726247AbeLKVWN (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 11 Dec 2018 16:22:13 -0500
Received: from pps.filterd (m0098399.ppops.net [127.0.0.1])
        by mx0a-001b2d01.pphosted.com (8.16.0.22/8.16.0.22) with SMTP id wBBLEHtT069215
        for <linux-kernel@vger.kernel.org>; Tue, 11 Dec 2018 16:22:12 -0500
Received: from e14.ny.us.ibm.com (e14.ny.us.ibm.com [129.33.205.204])
        by mx0a-001b2d01.pphosted.com with ESMTP id 2pajuye6nh-1
        (version=TLSv1.2 cipher=AES256-GCM-SHA384 bits=256 verify=NOT)
        for <linux-kernel@vger.kernel.org>; Tue, 11 Dec 2018 16:22:11 -0500
Received: from localhost
        by e14.ny.us.ibm.com with IBM ESMTP SMTP Gateway: Authorized Use Only! Violators will be prosecuted
        for <linux-kernel@vger.kernel.org> from <paulmck@linux.vnet.ibm.com>;
        Tue, 11 Dec 2018 21:22:10 -0000
Received: from b01cxnp23034.gho.pok.ibm.com (9.57.198.29)
        by e14.ny.us.ibm.com (146.89.104.201) with IBM ESMTP SMTP Gateway: Authorized Use Only! Violators will be prosecuted;
        (version=TLSv1/SSLv3 cipher=AES256-GCM-SHA384 bits=256/256)
        Tue, 11 Dec 2018 21:22:05 -0000
Received: from b01ledav003.gho.pok.ibm.com (b01ledav003.gho.pok.ibm.com [9.57.199.108])
        by b01cxnp23034.gho.pok.ibm.com (8.14.9/8.14.9/NCO v10.0) with ESMTP id wBBLM43b19660826
        (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=FAIL);
        Tue, 11 Dec 2018 21:22:04 GMT
Received: from b01ledav003.gho.pok.ibm.com (unknown [127.0.0.1])
        by IMSVA (Postfix) with ESMTP id 8C38BB2066;
        Tue, 11 Dec 2018 21:22:04 +0000 (GMT)
Received: from b01ledav003.gho.pok.ibm.com (unknown [127.0.0.1])
        by IMSVA (Postfix) with ESMTP id 5A6DCB2064;
        Tue, 11 Dec 2018 21:22:04 +0000 (GMT)
Received: from paulmck-ThinkPad-W541 (unknown [9.70.82.38])
        by b01ledav003.gho.pok.ibm.com (Postfix) with ESMTP;
        Tue, 11 Dec 2018 21:22:04 +0000 (GMT)
Received: by paulmck-ThinkPad-W541 (Postfix, from userid 1000)
        id 9113016C2BD9; Tue, 11 Dec 2018 13:22:04 -0800 (PST)
Date: Tue, 11 Dec 2018 13:22:04 -0800
From: "Paul E. McKenney" <paulmck@linux.ibm.com>
To: Alan Stern <stern@rowland.harvard.edu>
Cc: David Goldblatt <davidtgoldblatt@gmail.com>,
        mathieu.desnoyers@efficios.com,
        Florian Weimer <fweimer@redhat.com>, triegel@redhat.com,
        libc-alpha@sourceware.org, andrea.parri@amarulasolutions.com,
        will.deacon@arm.com, peterz@infradead.org, boqun.feng@gmail.com,
        npiggin@gmail.com, dhowells@redhat.com, j.alglave@ucl.ac.uk,
        luc.maranget@inria.fr, akiyks@gmail.com, dlustig@nvidia.com,
        linux-arch@vger.kernel.org, linux-kernel@vger.kernel.org
Subject: Re: [PATCH] Linux: Implement membarrier function
Reply-To: paulmck@linux.ibm.com
References: <20181211190801.GO4170@linux.ibm.com>
 <Pine.LNX.4.44L0.1812111446150.1538-100000@iolanthe.rowland.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <Pine.LNX.4.44L0.1812111446150.1538-100000@iolanthe.rowland.org>
User-Agent: Mutt/1.5.21 (2010-09-15)
X-TM-AS-GCONF: 00
x-cbid: 18121121-0052-0000-0000-000003659962
X-IBM-SpamModules-Scores: 
X-IBM-SpamModules-Versions: BY=3.00010214; HX=3.00000242; KW=3.00000007;
 PH=3.00000004; SC=3.00000270; SDB=6.01130375; UDB=6.00587369; IPR=6.00910508;
 MB=3.00024658; MTD=3.00000008; XFM=3.00000015; UTC=2018-12-11 21:22:09
X-IBM-AV-DETECTION: SAVI=unused REMOTE=unused XFE=unused
x-cbparentid: 18121121-0053-0000-0000-00005F11D72F
Message-Id: <20181211212204.GR4170@linux.ibm.com>
X-Proofpoint-Virus-Version: vendor=fsecure engine=2.50.10434:,, definitions=2018-12-11_07:,,
 signatures=0
X-Proofpoint-Spam-Details: rule=outbound_notspam policy=outbound score=0 priorityscore=1501
 malwarescore=0 suspectscore=0 phishscore=0 bulkscore=0 spamscore=0
 clxscore=1015 lowpriorityscore=0 mlxscore=0 impostorscore=0
 mlxlogscore=999 adultscore=0 classifier=spam adjust=0 reason=mlx
 scancount=1 engine=8.0.1-1810050000 definitions=main-1812110187
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Tue, Dec 11, 2018 at 03:09:33PM -0500, Alan Stern wrote:
> On Tue, 11 Dec 2018, Paul E. McKenney wrote:
> 
> > > Rewriting the litmus test in these terms gives:
> > > 
> > >         P0      P1      P2      P3      P4      P5
> > >         Wa=2    Wb=2    Wc=2    [mb23]  [mb14]  [mb05]
> > >         mb0s    mb1s    mb2s    Wd=2    We=2    Wf=2
> > >         mb0e    mb1e    mb2e    Re=0    Rf=0    Ra=0
> > >         Rb=0    Rc=0    Rd=0
> > > 
> > > Here the brackets in "[mb23]", "[mb14]", and "[mb05]" mean that the
> > > positions of these barriers in their respective threads' program
> > > orderings is undetermined; they need not come at the top as shown.
> > > 
> > > (Also, in case David is unfamiliar with it, the "Wa=2" notation is
> > > shorthand for "Write 2 to a" and "Rb=0" is short for "Read 0 from b".)
> > > 
> > > Finally, here are a few facts which may be well known and obvious, but
> > > I'll state them anyway:
> > > 
> > > 	A CPU cannot reorder instructions across a memory barrier.
> > > 	If x is po-after a barrier then x executes after the barrier
> > > 	is finished.
> > > 
> > > 	If a store is po-before a barrier then the store propagates
> > > 	to every CPU before the barrier finishes.
> > > 
> > > 	If a store propagates to some CPU before a load on that CPU
> > > 	reads from the same location, then the load will obtain the
> > > 	value from that store or a co-later store.  This implies that
> > > 	if a load obtains a value co-earlier than some store then the
> > > 	load must have executed before the store propagated to the
> > > 	load's CPU.
> > > 
> > > The proof consists of three main stages, each requiring three steps.
> > > Using the facts that b - f are all read as 0, I'll show that P1
> > > executes Rc before P3 executes Re, then that P0 executes Rb before P4
> > > executes Rf, and lastly that P5's Ra must obtain 2, not 0.  This will
> > > demonstrate that the litmus test is not allowed.
> > > 
> > > 1.	Suppose that mb23 ends up coming po-later than Wd in P3.
> > > 	Then we would have:
> > > 
> > > 		Wd propagates to P2 < mb23 < mb2e < Rd,
> > > 
> > > 	and so Rd would obtain 2, not 0.  Hence mb23 must come
> > > 	po-before Wd (as shown in the listing):  mb23 < Wd.
> > > 
> > > 2.	Since mb23 therefore occurs po-before Re and instructions
> > > 	cannot be reordered across barriers,  mb23 < Re.
> > > 
> > > 3.	Since Rc obtains 0, we must have:
> > > 
> > > 		Rc < Wc propagates to P1 < mb2s < mb23 < Re.
> > > 
> > > 	Thus Rc < Re.
> > > 
> > > 4.	Suppose that mb14 ends up coming po-later than We in P4.
> > > 	Then we would have:
> > > 
> > > 		We propagates to P3 < mb14 < mb1e < Rc < Re,
> > > 
> > > 	and so Re would obtain 2, not 0.  Hence mb14 must come
> > > 	po-before We (as shown in the listing):  mb14 < We.
> > > 
> > > 5.	Since mb14 therefore occurs po-before Rf and instructions
> > > 	cannot be reordered across barriers,  mb14 < Rf.
> > > 
> > > 6.	Since Rb obtains 0, we must have:
> > > 
> > > 		Rb < Wb propagates to P0 < mb1s < mb14 < Rf.
> > > 
> > > 	Thus Rb < Rf.
> > > 
> > > 7.	Suppose that mb05 ends up coming po-later than Wf in P5.
> > > 	Then we would have:
> > > 
> > > 		Wf propagates to P4 < mb05 < mb0e < Rb < Rf,
> > > 
> > > 	and so Rf would obtain 2, not 0.  Hence mb05 must come
> > > 	po-before Wf (as shown in the listing):  mb05 < Wf.
> > > 
> > > 8.	Since mb05 therefore occurs po-before Ra and instructions
> > > 	cannot be reordered across barriers,  mb05 < Ra.
> > > 
> > > 9.	Now we have:
> > > 
> > > 		Wa propagates to P5 < mb0s < mb05 < Ra,
> > > 
> > > 	and so Ra must obtain 2, not 0.  QED.
> > 
> > Like this, then, with maximal reordering of P3-P5's reads?
> > 
> >          P0      P1      P2      P3      P4      P5
> >          Wa=2
> >          mb0s
> >                                                  [mb05]
> >          mb0e                                    Ra=0
> >          Rb=0    Wb=2
> >                  mb1s
> >                                          [mb14]
> >                  mb1e                    Rf=0
> >                  Rc=0    Wc=2                    Wf=2
> >                          mb2s
> >                                  [mb23]
> >                          mb2e    Re=0
> >                          Rd=0            We=2
> >                                  Wd=2
> 
> Yes, that's right.  This shows how P5's Ra must obtain 2 instead of 0.
> 
> > But don't the sys_membarrier() calls affect everyone, especially given
> > the shared-variable communication?
> 
> They do, but the other effects are irrelevant for this proof.

If I understand correctly, the shared-variable communication within
sys_membarrier() is included in your proof in the form of ordering
between memory barriers in the mainline sys_membarrier() code and
in the IPI handlers.

> >  If so, why wouldn't this more strict
> > variant hold?
> > 
> >          P0      P1      P2      P3      P4      P5
> >          Wa=2
> >          mb0s
> >                                  [mb05]  [mb05]  [mb05]
> 
> You have misunderstood the naming scheme.  mb05 is the barrier injected 
> by P0's sys_membarrier call into P5.  So the three barriers above 
> should be named "mb03", "mb04", and "mb05".  And you left out mb01 and 
> mb02.

The former is a copy-and-paste error on my part, the latter was
intentional because the IPIs among P0, P1, and P2 don't seem to
strengthen the ordering.

> >          mb0e
> >          Rb=0    Wb=2
> >                  mb1s
> >                                  [mb14]  [mb14]  [mb14]
> >                  mb1e
> >                  Rc=0    Wc=2
> >                          mb2s
> >                                  [mb23]  [mb23]  [mb23]
> >                          mb2e    Re=0    Rf=0    Ra=0
> >                          Rd=0            We=2    Wf=2
> >                                  Wd=2
> 
> Yes, this does hold.  But since it doesn't affect the end result, 
> there's no point in mentioning all those other barriers.
> 
> > In which case, wouldn't this cycle be forbidden even if it had only one
> > sys_membarrier() call?
> 
> No, it wouldn't.  I don't understand why you might think it would.  

Because I hadn't yet thought of the scenario I showed below.

> This is just like RCU, if you imagine a tiny critical section between 
> each adjacent pair of instructions.  You wouldn't expect RCU to enforce 
> ordering among six CPUs with only one synchronize_rcu call.

Yes, I do now agree in light of the scenario shown below.

> > Ah, but the IPIs are not necessarily synchronized across the CPUs,
> > so that the following could happen:
> > 
> >          P0      P1      P2      P3      P4      P5
> >          Wa=2
> >          mb0s
> >                                  [mb05]  [mb05]  [mb05]
> >          mb0e                                    Ra=0
> >          Rb=0    Wb=2
> >                  mb1s
> >                                  [mb14]  [mb14]
> >                                          Rf=0
> >                                                  Wf=2
> >                                                  [mb14]
> >                  mb1e
> >                  Rc=0    Wc=2
> >                          mb2s
> >                                  [mb23]
> >                                  Re=0
> >                                          We=2
> >                                          [mb23]  [mb23]
> >                          mb2e
> >                          Rd=0
> >                                  Wd=2
> 
> Yes it could.  But even in this execution you would end up with Ra=2 
> instead of Ra=0.

Agreed.  Or I should have said that the above execution is forbidden,
either way.

> > I guess in light of this post in 2001, I really don't have an excuse,
> > do I?  ;-)
> > 
> > 	https://lists.gt.net/linux/kernel/223555
> > 
> > Or am I still missing something here?
> 
> You tell me...

I think I am on board.  ;-)

							Thanx, Paul

