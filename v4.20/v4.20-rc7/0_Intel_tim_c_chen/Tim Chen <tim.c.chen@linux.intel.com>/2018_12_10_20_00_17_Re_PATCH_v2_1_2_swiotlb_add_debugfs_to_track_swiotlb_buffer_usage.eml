Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:42:55 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 3272C580380;
	Mon, 10 Dec 2018 12:00:44 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga002-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 12:00:43 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AA41UxBLTFhYxFReiSdmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgUL//6rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZQ8hfSSJBDIO/?=
 =?us-ascii?q?YYUBAeUOMuRXoJXyqVsVtRuzBxKhBP/txDJSmnP6waM33uYnHArb3AIgBdUOsH?=
 =?us-ascii?q?HModvrNacSVP2+wbfIzTrdafNdxDDw6JTJchAku/2DQah8ftbRyUYxEQPIlVGQ?=
 =?us-ascii?q?qY3jPzOI2eUBqWmb7+x8Ve2xj24rsR1+oj+qxso1jITCm4Ebykjc+Cln3Io4Ic?=
 =?us-ascii?q?e0RFN1bNK6CpdcqiKXO5dsTs4jQWxkoDs2x7kYtZKhfCUHyI4ryh7BZ/CdboSE?=
 =?us-ascii?q?/xLuWeCMKjlinn1lYqiwhxOq/Eig1OL8Us603U5UripKjNbMrGoB1x/N5cidTP?=
 =?us-ascii?q?ty4EOh1SyI1wDJ5eFIOUE0lazFJJ492rM8iIYfvEDZEiPrlkj6krWaelgn9+S0?=
 =?us-ascii?q?8ejqY7frqoeZN4BuiwH+Nqoumta4AeQ9KgUOW2mb+eKh1Lzs5EH5Q6tFjucwkq?=
 =?us-ascii?q?bHtJDWPMMbp6C/AwBLyIYu8Ai/Dzi439QCh3UHL0xKeAiBj4f3P1HCOvf4De2w?=
 =?us-ascii?q?g1i0ijdk2+jGPqH9ApXKNnXDlLbhfbVj5EJGxwsz0MtS55ZVCrEHPfLyVVX9tN?=
 =?us-ascii?q?3eDh8lLQO0x/zrB8l61oMbQWiPGLOWMLvOsV+U4eIiO+mMa5UUuDbhMfcl4OTi?=
 =?us-ascii?q?jX8kmVAHe6mp0oAaaHS5HvRgPkWYbmDggtYHEWcWoAU+SPbmh0GFUT5Wf3yyRb?=
 =?us-ascii?q?4z5iknCIK6CofOXoKtgLuf0yuhHZ1WYWZGClaLEXrzc4WEWvEMaD+dI8N7kzwE?=
 =?us-ascii?q?U6ShRJEl1R20qAD6zL9nJPLO+iIErZLjyMR15+rLmB4o7jx0D8Od02KXQ2FuhG?=
 =?us-ascii?q?wIRSQ73KR+oUx711eC3rJ0g/1eFdxP+fxJVh02OoLbz+x/E9ryQB7Ofs+VSFa6?=
 =?us-ascii?q?RdWrGTIxQcg3w9MUZ0Z9Gs+tjhbM3yexB78VlrqLBIE7867G3njxIdp9xGjC1K?=
 =?us-ascii?q?U7k1YmRc5PP3W8hqFj7wjTG5LJk0KBmqm3b6scwjDC+H2DzWWUukFYSxB/UaPC?=
 =?us-ascii?q?UXAbZUvWqND561jGT7+vD7QnLwRAxdSDKqtMdt3mk1FGSO3/N9TZZmK7g32wCg?=
 =?us-ascii?q?qQxrOQcIrqfH0Q0zjHB0gajQ8f53aGOhI4Bie6vW3eCidjFVbuY0Pq7Ol/p2m3?=
 =?us-ascii?q?Tk4yzwGWcUJh06C59QIShfyZU/kTxK4LuD89qzVoG1awx87WC9uFpwpmYKVcYd?=
 =?us-ascii?q?M87E1b1W7DsAx9JJigL6Fkhl4RaAl3u0Lu1xNqCoRPi8QqrXUqzBZsJqKcyl9O?=
 =?us-ascii?q?azSY3ZXoML3NNmby5Ayva7LR2lzGytmW/rkA6fsmpFTjpg2mDVci/Gh93NlT0H?=
 =?us-ascii?q?uc4YvKAREWUZLwVEY36hd7q6vbYik7+4Pby3lsPbOovT/F3tIjHPElxQq4f9dD?=
 =?us-ascii?q?LKOEExf/Es0HB8S0NOMmgVmobhIeM+BU+645JMemd/qA2K62M+dshjOmjWJb4I?=
 =?us-ascii?q?9j1kKA7TZzSunN35wd2fGXwhOHVyvgjFemqs33g4FEai0IEWql1CfkA5RdZqts?=
 =?us-ascii?q?coYRCGeiOtG4yc96h5HwRXFY7lmjB1Ud1c+teBqSaUH93AJK2UQWp3ynhTW3zz?=
 =?us-ascii?q?hunz41qaqf2TTEw/7+exofJm5LWG5igE/sIIi1ldwbXFKkbxM0lBuj/kv6w6lb?=
 =?us-ascii?q?pKJiL2jcW0tIfi72L318Xau0rLaNf8lP6JYwuyVNTOu8eUyaSqL6oxYC0SPsBX?=
 =?us-ascii?q?FexDM4dzGtoJn5hAZ1iGGeLHZyqnrWZ8dwyAzb5NzdQ/5RwzUHSDN5iTnRGliz?=
 =?us-ascii?q?Id2p8c+ImJfEt+C0T3ihWYFLcSn30YOAszO25G1wDh24hfyzmNznEQ4h3C//1t?=
 =?us-ascii?q?lqUzjIrRnmbonq0aS6Lfxofk1yCFDg7Mp6H5l0kpEsi5EIxXgampKV8GIEkWjp?=
 =?us-ascii?q?MNVXw6L+bGcXSj4NzN7Y+wzl2ExlLnKUyIP1THSdws19Z9akZmMawD4y78dPCK?=
 =?us-ascii?q?2M9rxLgTN1okakrQLWefV9mzYdyfg053IAjeAGphEtzjmDDbAIBkZXIzbslxuT?=
 =?us-ascii?q?4tC6raVXYnuvcLeq2Ep/m9ChEK+NogVGVHnlfZciGDd67t9jP1LUzH3z9obkdc?=
 =?us-ascii?q?HMbdIUsx2YiRbBgPJTKJIsjfoKnitnNHn5vX0kze47kBNv0Yu7vIiBN2Vi4qa5?=
 =?us-ascii?q?DgREOT3yYsMZ4ivtgrpGnsaKw4CvGY1sFS4RU5vvSfKoDSgetfD6NwuVFD08q3?=
 =?us-ascii?q?GbGafQHAOF6UdmqW7PHI6vN32NOHYZytBiTgGHJENDmAAUQCk6npkhGwCo3sPh?=
 =?us-ascii?q?dVl25isL6l7ksBdMyf9oNxriUmfZvgiocSw5SJyeLBpQ8wFD6F3ZMc2Y7uJvAS?=
 =?us-ascii?q?5Y+oetoxCKKmyefw5IF30GWlSYB1D/Obmj/dnB8++FBuqnMvvBe7OOpfZFV/eP?=
 =?us-ascii?q?w5Kv3ZBr/zKNNsWJI3ljAOc32ktFXXBlBcvZny8DRDAQlyLId8Sbvguz+jVrrs?=
 =?us-ascii?q?Cj9/TmQALv6pWOC7tRMtVv+gq6gaSZN+6XiyZ2NyxY1o4XxXLTzLgf3VgSizxh?=
 =?us-ascii?q?djW3ELQAszLNQ7zUmqNNExEbbCZzPtNS760gxglNJdLbitTt27Fik/46EE1FWk?=
 =?us-ascii?q?Lhm82zYcwKInqwNFfGBEaNKbSHKifHw8DxYaOgV7JQiP9YuAG3uTaeC0XjJCiM?=
 =?us-ascii?q?lyH1VxCzNuFBlD2bPB1buI2nbhlhE3TsTNL4ZR29K9J3iTw2wbsphnLFL2IcMD?=
 =?us-ascii?q?58c19Tob2U9y9XnvJ/G2lZ5Hp/MeaEgzqZ7/XfKpsOsfpkGCJ0l+db4HQ807RU?=
 =?us-ascii?q?7SFES+ZzmCvdtdNup1Cmku+SyjtoShZOqzBLhJ6VskVmI6nW6p5AWXOXtC4KuE?=
 =?us-ascii?q?mXDRsOppNXCtTptOgExt/Jm6bybiVC+tTb1cwGDsPQJYSMN393dVLoHzvRESMB?=
 =?us-ascii?q?TCW3LifbhkpAgLSc8WCTopEmq5/q3p0URfsTUF0zC+NfCUl/GtEGCIl4Uylikr?=
 =?us-ascii?q?OBisMMo32ko0r/XsJf66zGU7q5AfjpYGKFjLwCbF0Dwb7+BYASMJDrnU1kdlR+?=
 =?us-ascii?q?2o/NHhyDDph2viR9Y1ps8w12+39kQzh2ghq9Zw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AIAAAsxQ5ch0O0hNFkGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUQYBAQELAYNrhCGIGYwQKYFkFJc9ggcrAYdtIjQJDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCA0JCCkvgjYkAYJiAQICAQECIBBGBQEJAQEKGgImAgIDVAYBDAgBAQGDH?=
 =?us-ascii?q?IF6CAWmPoEvhUCEZ4ELixZ6gRyBESeCa4gFglcCkDqFOoosVQcCgiWPJAYYkT2?=
 =?us-ascii?q?JIpAOgUaCDk0jUIJtgiMDF44+HgEBgTYBAYwYAQE?=
X-IPAS-Result: =?us-ascii?q?A0AIAAAsxQ5ch0O0hNFkGwEBAQEDAQEBBwMBAQGBUQYBAQE?=
 =?us-ascii?q?LAYNrhCGIGYwQKYFkFJc9ggcrAYdtIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkvg?=
 =?us-ascii?q?jYkAYJiAQICAQECIBBGBQEJAQEKGgImAgIDVAYBDAgBAQGDHIF6CAWmPoEvhUC?=
 =?us-ascii?q?EZ4ELixZ6gRyBESeCa4gFglcCkDqFOoosVQcCgiWPJAYYkT2JIpAOgUaCDk0jU?=
 =?us-ascii?q?IJtgiMDF44+HgEBgTYBAYwYAQE?=
X-IronPort-AV: E=Sophos;i="5.56,339,1539673200"; 
   d="scan'208";a="141536614"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 10 Dec 2018 12:00:42 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729690AbeLJUAV convert rfc822-to-8bit (ORCPT
        <rfc822;like.xu@linux.intel.com> + 23 others);
        Mon, 10 Dec 2018 15:00:21 -0500
Received: from mga14.intel.com ([192.55.52.115]:29399 "EHLO mga14.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1728290AbeLJUAS (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 10 Dec 2018 15:00:18 -0500
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga007.jf.intel.com ([10.7.209.58])
  by fmsmga103.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 12:00:17 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,339,1539673200"; 
   d="scan'208";a="97676935"
Received: from schen9-mobl3.jf.intel.com ([10.24.9.33])
  by orsmga007.jf.intel.com with ESMTP; 10 Dec 2018 12:00:17 -0800
Subject: Re: [PATCH v2 1/2] swiotlb: add debugfs to track swiotlb buffer usage
To: Dongli Zhang <dongli.zhang@oracle.com>,
        iommu@lists.linux-foundation.org, linux-kernel@vger.kernel.org
Cc: konrad.wilk@oracle.com, hch@lst.de, m.szyprowski@samsung.com,
        robin.murphy@arm.com, joe.jin@oracle.com
References: <1544402278-8175-1-git-send-email-dongli.zhang@oracle.com>
From: Tim Chen <tim.c.chen@linux.intel.com>
Message-ID: <41becd27-8c3a-da2b-e5ed-e361ba20e4d4@linux.intel.com>
Date: Mon, 10 Dec 2018 12:00:17 -0800
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.3.1
MIME-Version: 1.0
In-Reply-To: <1544402278-8175-1-git-send-email-dongli.zhang@oracle.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 8BIT
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org




On 12/9/18 4:37 PM, Dongli Zhang wrote:

> 
> diff --git a/kernel/dma/swiotlb.c b/kernel/dma/swiotlb.c
> index 045930e..3979c2c 100644
> --- a/kernel/dma/swiotlb.c
> +++ b/kernel/dma/swiotlb.c
> @@ -35,6 +35,9 @@
>  #include <linux/scatterlist.h>
>  #include <linux/mem_encrypt.h>
>  #include <linux/set_memory.h>
> +#ifdef CONFIG_DEBUG_FS
> +#include <linux/debugfs.h>
> +#endif

Seems like #ifdef CONFIG_DEBUG_FS is better located inside debugfs.h,
instead of requiring every file that includes it
to have a #ifdef CONFIG_DEBUG_FS.

>  
>  #include <asm/io.h>
>  #include <asm/dma.h>
> @@ -73,6 +76,13 @@ static phys_addr_t io_tlb_start, io_tlb_end;
>   */
>  static unsigned long io_tlb_nslabs;
>  
> +#ifdef CONFIG_DEBUG_FS
> +/*
> + * The number of used IO TLB block
> + */
> +static unsigned long io_tlb_used;
> +#endif
> +
>  /*
>   * This is a free list describing the number of free entries available from
>   * each index
> @@ -528,6 +538,9 @@ phys_addr_t swiotlb_tbl_map_single(struct device *hwdev,
>  		dev_warn(hwdev, "swiotlb buffer is full (sz: %zd bytes)\n", size);
>  	return SWIOTLB_MAP_ERROR;
>  found:
> +#ifdef CONFIG_DEBUG_FS
> +	io_tlb_used += nslots;
> +#endif

One nit I have about this patch is there are too many CONFIG_DEBUG_FS.

For example here, instead of io_tlb_used, we can have a macro defined,
perhaps something like inc_iotlb_used(nslots).  It can be placed in the
same section that swiotlb_create_debugfs is defined so there's a single
place where all the CONFIG_DEBUG_FS stuff is located.

Then define inc_iotlb_used to be null when we don't have
CONFIG_DEBUG_FS.

>  	spin_unlock_irqrestore(&io_tlb_lock, flags);
>  
>  	/*
> @@ -588,6 +601,10 @@ void swiotlb_tbl_unmap_single(struct device *hwdev, phys_addr_t tlb_addr,
>  		 */
>  		for (i = index - 1; (OFFSET(i, IO_TLB_SEGSIZE) != IO_TLB_SEGSIZE -1) && io_tlb_list[i]; i--)
>  			io_tlb_list[i] = ++count;
> +
> +#ifdef CONFIG_DEBUG_FS
> +		io_tlb_used -= nslots;
> +#endif
>  	}
>  	spin_unlock_irqrestore(&io_tlb_lock, flags);
>  }
> @@ -883,3 +900,36 @@ const struct dma_map_ops swiotlb_dma_ops = {
>  	.dma_supported		= dma_direct_supported,
>  };
>  EXPORT_SYMBOL(swiotlb_dma_ops);
> +
> +#ifdef CONFIG_DEBUG_FS
> +

Maybe move io_tlb_used definition here and define
inc_iotlb_used here.

> +static int __init swiotlb_create_debugfs(void)
> +{
> +	static struct dentry *d_swiotlb_usage;
> +	struct dentry *ent;
> +
> +	d_swiotlb_usage = debugfs_create_dir("swiotlb", NULL);
> +
> +	if (!d_swiotlb_usage)
> +		return -ENOMEM;
> +
> +	ent = debugfs_create_ulong("io_tlb_nslabs", 0400,
> +				   d_swiotlb_usage, &io_tlb_nslabs);
> +	if (!ent)
> +		goto fail;
> +
> +	ent = debugfs_create_ulong("io_tlb_used", 0400,
> +				    d_swiotlb_usage, &io_tlb_used);
> +	if (!ent)
> +		goto fail;
> +
> +	return 0;
> +
> +fail:
> +	debugfs_remove_recursive(d_swiotlb_usage);
> +	return -ENOMEM;
> +}
> +
> +late_initcall(swiotlb_create_debugfs);
> +
> +#endif
> 

Thanks.

Tim

