Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:40:04 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C75365807A2
	for <like.xu@linux.intel.com>; Mon, 10 Dec 2018 08:55:15 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 08:55:15 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AMrrerRyxdj/QjxvXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?2uITIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CS2RPXthfWS9DDYOy?=
 =?us-ascii?q?YIQAE+UPM/tAr4T/pVUDogayCAewCOzx0T9FnWP23bQg3ug9DQ3KwA4tEtQTu3?=
 =?us-ascii?q?rUttX1M6ISXPi2wqnHyjXDde5d1zDn54jNdxAuv+yDXbVuccHMzkQvFgbFgU+V?=
 =?us-ascii?q?qYzgITyay+MNvnOB7+V+SO2vi3Qoqx1rrjezwccsj5DEi4QIwV7H7SV02Jg5Kc?=
 =?us-ascii?q?G7RUJhfNKoDZhduzuEO4Z4Qs4uWXxktSQixrEYpZK2eDIGxIkpyhLBcfCLbouF?=
 =?us-ascii?q?7xz5WOqPIjp1gm9udqiliBao60egz/XxVsmq31ZOqSpIit3MtnEW1xzP8ciLUP?=
 =?us-ascii?q?R9/kG82TqV0ADT8O5ELVg1lardNZEh3qY9moQPvUnABCP6hVj6gayMekk69OWl?=
 =?us-ascii?q?6/7rbqjkq5OEMo97kAD+MqAgmsylBuQ4NxADX3GF9uS5yb3v5FD2T6tUjvIolq?=
 =?us-ascii?q?nVqYvVJcMGpq6/HwBazJ0j5xG7Dzen09QXg2MLLV1YeB+fi4jpOlfOIO33DPul?=
 =?us-ascii?q?glSslitryO7CPrH7HprNKX3DnaznfbZ67U5cxwwzzc1F65JTELEBL+r/WlXtu9?=
 =?us-ascii?q?zAEh85Lwu0zv7jCNV81YMRR3iDA6CEMK7JtV+I5+QvI/SDZYMPuTb9LeQl6ODq?=
 =?us-ascii?q?jXMjhVAdeqypjtMqbmulFKFmP1mBeiirxdMACnsR+Aw5SuPslRuFSzEUYn+zW6?=
 =?us-ascii?q?c14HY8EJ6nCoHYAZmghaHE0CqlE5kFW2ZdF1rZFH7pc5mDCe4BbT/XLsJ/nzhB?=
 =?us-ascii?q?T7W4VoI6yTmoswn1zachKfDbrTYFv5Du38Qg+uvIiBsp/iZ1BcnO72bYamhulS?=
 =?us-ascii?q?YhQTMsXehbvFZww0rLha1xmfdRE9BJ6rVNTx03PIP01eF2C9nuHAnGe4HaZkyh?=
 =?us-ascii?q?R4CHDjYrBvc4xtoDb0FjU4GjixnG2iemBJcPmrCLDYBy+aXZiSuib/1hwmrLgf?=
 =?us-ascii?q?Fyx2ItRdFCYCj/3vZy?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CDAQCWmQ5cmBHrdtBkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBZYExgk8Tg3qIeIswgg2JIJAkFBgUhECDLSI4EgEDAQEBAQEBAgETAQEBAQE?=
 =?us-ascii?q?ICwsGGw4vgjYFAgMaAQaCWwEBAQECAQECIAQfCikDAgEBAgYBAQoYAgIFGgMEA?=
 =?us-ascii?q?gIDAQtIBhMFgxyBdQUIAQSldXwziiCBC4sWF4FAP4ERgXCBIoUBgwSCVwKJFSS?=
 =?us-ascii?q?BcIQUkTgJkUQjiWaHV5kwgV2Bd00jFTuCbIInFxKODEAxgQccigWBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0CDAQCWmQ5cmBHrdtBkHAEBAQQBAQcEAQGBZYExgk8Tg3q?=
 =?us-ascii?q?IeIswgg2JIJAkFBgUhECDLSI4EgEDAQEBAQEBAgETAQEBAQEICwsGGw4vgjYFA?=
 =?us-ascii?q?gMaAQaCWwEBAQECAQECIAQfCikDAgEBAgYBAQoYAgIFGgMEAgIDAQtIBhMFgxy?=
 =?us-ascii?q?BdQUIAQSldXwziiCBC4sWF4FAP4ERgXCBIoUBgwSCVwKJFSSBcIQUkTgJkUQji?=
 =?us-ascii?q?WaHV5kwgV2Bd00jFTuCbIInFxKODEAxgQccigWBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,339,1539673200"; 
   d="scan'208";a="66134286"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mga01b.intel.com with ESMTP/TLS/AES256-SHA; 10 Dec 2018 08:55:14 -0800
Received: from localhost ([::1]:33682 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gWOpt-0000gn-9K
	for like.xu@linux.intel.com; Mon, 10 Dec 2018 11:55:13 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:36648)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <imammedo@redhat.com>) id 1gWOpi-0000gf-Gx
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 11:55:05 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <imammedo@redhat.com>) id 1gWOpe-00070r-Gb
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 11:55:02 -0500
Received: from mx1.redhat.com ([209.132.183.28]:58930)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <imammedo@redhat.com>) id 1gWOpe-0006zc-4A
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 11:54:58 -0500
Received: from smtp.corp.redhat.com (int-mx01.intmail.prod.int.phx2.redhat.com
	[10.5.11.11])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id A0FC49D781;
	Mon, 10 Dec 2018 16:54:56 +0000 (UTC)
Received: from Igors-MacBook-Pro.local (ovpn-112-73.ams2.redhat.com
	[10.36.112.73])
	by smtp.corp.redhat.com (Postfix) with ESMTP id E587A5C6CF;
	Mon, 10 Dec 2018 16:54:44 +0000 (UTC)
Date: Mon, 10 Dec 2018 17:54:41 +0100
From: Igor Mammedov <imammedo@redhat.com>
To: =?UTF-8?Q?Marc-Andr=C3=A9?= Lureau <marcandre.lureau@redhat.com>
Message-ID: <20181210175441.7d6e0dcd@Igors-MacBook-Pro.local>
In-Reply-To: <20181210174522.04b21215@Igors-MacBook-Pro.local>
References: <20181204142023.15982-1-marcandre.lureau@redhat.com>
	<20181204142023.15982-8-marcandre.lureau@redhat.com>
	<20181210174522.04b21215@Igors-MacBook-Pro.local>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.11
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.28]);
	Mon, 10 Dec 2018 16:54:56 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH for-3.2 v5 07/19] hw: apply accel compat
 properties without touching globals
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Stefano Stabellini <sstabellini@kernel.org>, ehabkost@redhat.com,
	qemu-devel@nongnu.org, Paolo Bonzini <pbonzini@redhat.com>,
	Anthony Perard <anthony.perard@citrix.com>,
	"open list:X86" <xen-devel@lists.xenproject.org>,
	Andreas =?UTF-8?Q?F=C3=A4rber?= <afaerber@suse.de>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Mon, 10 Dec 2018 17:45:22 +0100
Igor Mammedov <imammedo@redhat.com> wrote:

> On Tue,  4 Dec 2018 18:20:11 +0400
> Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com> wrote:
>=20
> > Instead of registering compat properties as globals, let's keep them
> > in their own array, to avoid mixing with user globals.
> >=20
> > Introduce object_apply_global_props() function, to apply compatibility
> > properties from a GPtrArray.
> >=20
> > Signed-off-by: Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com>
> > ---
> >  include/hw/qdev-core.h | 10 ++++++++++
> >  include/qom/object.h   |  3 +++
> >  include/sysemu/accel.h |  4 +---
> >  accel/accel.c          | 12 ------------
> >  hw/core/qdev.c         |  9 +++++++++
> >  hw/xen/xen-common.c    |  9 ++++++---
> >  qom/object.c           | 25 +++++++++++++++++++++++++
> >  vl.c                   |  1 -
> >  8 files changed, 54 insertions(+), 19 deletions(-)
> >=20
> [...]
> > diff --git a/hw/xen/xen-common.c b/hw/xen/xen-common.c
> > index 6ec14c73ca..4532aa8632 100644
> > --- a/hw/xen/xen-common.c
> > +++ b/hw/xen/xen-common.c
> > @@ -174,18 +174,21 @@ static GlobalProperty xen_compat_props[] =3D {
> >          .driver =3D "migration",
> >          .property =3D "send-section-footer",
> >          .value =3D "off",
> > -    },
> > -    { /* end of list */ },
> > +    }
> >  };
> > =20
> >  static void xen_accel_class_init(ObjectClass *oc, void *data)
> >  {
> >      AccelClass *ac =3D ACCEL_CLASS(oc);
> > +
> >      ac->name =3D "Xen";
> >      ac->init_machine =3D xen_init;
> >      ac->setup_post =3D xen_setup_post;
> >      ac->allowed =3D &xen_allowed;
> > -    ac->global_props =3D xen_compat_props;
> > +    ac->compat_props =3D g_ptr_array_new();
> where is matching free for that?
can we at least annotate it somehow so that valgrind won't complain about t=
his leak?

>=20
> > +
> > +    compat_props_add(ac->compat_props,
> > +                     xen_compat_props, G_N_ELEMENTS(xen_compat_props));
> >  }
> > =20
> >  #define TYPE_XEN_ACCEL ACCEL_CLASS_NAME("xen")
> > diff --git a/qom/object.c b/qom/object.c
> > index 17921c0a71..dbdab0aead 100644
> > --- a/qom/object.c
> > +++ b/qom/object.c
> > @@ -370,6 +370,31 @@ static void object_post_init_with_type(Object *obj=
, TypeImpl *ti)
> >      }
> >  }
> > =20
> > +void object_apply_global_props(Object *obj, const GPtrArray *props, Er=
ror **errp)
> > +{
> > +    Error *err =3D NULL;
> > +    int i;
> > +
> > +    if (!props) {
> > +        return;
> > +    }
> > +
> > +    for (i =3D 0; i < props->len; i++) {
> > +        GlobalProperty *p =3D g_ptr_array_index(props, i);
> > +
> > +        if (object_dynamic_cast(obj, p->driver) =3D=3D NULL) {
> > +            continue;
> > +        }
> > +        p->used =3D true;
> > +        object_property_parse(obj, p->value, p->property, &err);
> > +        if (err !=3D NULL) {
> > +            error_prepend(&err, "can't apply global %s.%s=3D%s: ",
> > +                          p->driver, p->property, p->value);
> > +            error_propagate(errp, err);
> > +        }
> > +    }
> > +}
> > +
> >  static void object_initialize_with_type(void *data, size_t size, TypeI=
mpl *type)
> >  {
> >      Object *obj =3D data;
> > diff --git a/vl.c b/vl.c
> > index a5ae5f23d2..88ba658572 100644
> > --- a/vl.c
> > +++ b/vl.c
> > @@ -2968,7 +2968,6 @@ static void user_register_global_props(void)
> >   */
> >  static void register_global_properties(MachineState *ms)
> >  {
> > -    accel_register_compat_props(ms->accelerator);
> >      machine_register_compat_props(ms);
> >      user_register_global_props();
> >  }
>=20
>=20


