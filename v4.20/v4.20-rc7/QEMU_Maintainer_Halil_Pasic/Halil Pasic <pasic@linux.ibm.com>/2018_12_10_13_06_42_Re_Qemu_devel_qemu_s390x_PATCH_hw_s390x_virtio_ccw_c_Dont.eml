Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:37:20 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 6055B5807C6
	for <like.xu@linux.intel.com>; Mon, 10 Dec 2018 05:07:10 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 05:07:10 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A8REQLBIM6TlHZIXUNtmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgfLf7xwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJPUMhRSSJOAI28?=
 =?us-ascii?q?b4wIAeUOIelWoIrzqUYWrRa8BwehC/7jxzFUinDoxq03yPghHAPc0QA8Bd8CrG?=
 =?us-ascii?q?rYodPoP6kSS+C1y6zIwC3BYfxM3Tf96YzIeQ07r/6WRrJwcNbewlQoGgPdlFqQ?=
 =?us-ascii?q?so3lMC+O2+QJsmib6fdgVO21h24msA5xpyKjydsrionMn48YzE3P+yZhwIstO9?=
 =?us-ascii?q?G0VE12bcS5HJdNtCyWLZV6T80iTm1ypSo3yKUKtJqhcCQXyJkr2QTTZviFfoSS?=
 =?us-ascii?q?/B7uW+ScLDFlj3x/Yr2/nQy98U24x+38SMa01FFKozJBktnNrXANywfT5tKISv?=
 =?us-ascii?q?t740etwzGP1xrc6u1cIEA0k7TUK4I5z7IuipYesl7PEjLrlEj1lqOaaEsp9+iy?=
 =?us-ascii?q?5+j6YLjqvpqcOJV1igH6PKQugMu/AeEgPwgXQWeb/Pm82KT+8kLnXrVFkPk2nr?=
 =?us-ascii?q?DCv5DdOMQboLK2DBFO0ook7xa/DjSm38oCkXgIMVJIYBaHj4nvO1HTL/H0F/a/?=
 =?us-ascii?q?g1KwkDh1w/DKJKHuApLILnXYlrfherB960FayAou19xf4IhUCr4ZLPLpRkDxrM?=
 =?us-ascii?q?DYDgM+MwGsx+bnCdZ92Z0EVWOAH6+UK6fSsV6O5uIyLOiAfo4VuDDhK/c74/7i?=
 =?us-ascii?q?l2M2mVgYffrh4J0MdXrtHuh6O17LJj3og8wdCiEMuQwxSvGsj0eNFjtaZnK3Vq?=
 =?us-ascii?q?R74SknCYWgFsDaS4WwxbCMwiq/TaBQfX1MX1WFEHP0cNedVvIRLS6fPMJl1yYJ?=
 =?us-ascii?q?TKWsUJMJ0xaouwnnjb19Ib3P5ycauJn/gcVz/PDZjhoo9DZ5XPiahlmAU2xu1k?=
 =?us-ascii?q?YBVjM72KQ39VRw1lqZl61xkvBVEdh74/JPWx09c5nGwLopJcr1X1fhd9OITB6e?=
 =?us-ascii?q?S86nCnllVtsqwtQmZ0d7BsXkjxrGmSGtBulGxPSwGJUo//eEjDDKLMFnxiODjf?=
 =?us-ascii?q?F5gg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AlAAD2Yw5cmBHrdtBjHgEGBwaBUQkLA?=
 =?us-ascii?q?QGBL4JijHKLMIINjh6JM4FzEgEBGBSEQIMtIjQJDQEDAQEBAQEBAgETAQEBAQE?=
 =?us-ascii?q?ICwsGGw4vQgEOAYFkBQIDGgEGglwBAQECAQECDxUTDAopAwIBAQIGAQEKIRoDC?=
 =?us-ascii?q?AMBC0gGEwUdgn+BeggBAgEBmj6JWAEBAYFqM4ofjCEXgX+BEYMShQGFWwKJFSS?=
 =?us-ascii?q?GSpByCZFEIwoCkTGZCQIEBgUCEwGBRoIOMxoIGxWDJ4JQjgxxgQchgS+JAoF3A?=
 =?us-ascii?q?QE?=
X-IPAS-Result: =?us-ascii?q?A0AlAAD2Yw5cmBHrdtBjHgEGBwaBUQkLAQGBL4JijHKLMII?=
 =?us-ascii?q?Njh6JM4FzEgEBGBSEQIMtIjQJDQEDAQEBAQEBAgETAQEBAQEICwsGGw4vQgEOA?=
 =?us-ascii?q?YFkBQIDGgEGglwBAQECAQECDxUTDAopAwIBAQIGAQEKIRoDCAMBC0gGEwUdgn+?=
 =?us-ascii?q?BeggBAgEBmj6JWAEBAYFqM4ofjCEXgX+BEYMShQGFWwKJFSSGSpByCZFEIwoCk?=
 =?us-ascii?q?TGZCQIEBgUCEwGBRoIOMxoIGxWDJ4JQjgxxgQchgS+JAoF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,338,1539673200"; 
   d="scan'208";a="44290088"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 10 Dec 2018 05:07:09 -0800
Received: from localhost ([::1]:60963 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gWLHA-0002c4-Rc
	for like.xu@linux.intel.com; Mon, 10 Dec 2018 08:07:08 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:58427)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <pasic@linux.ibm.com>) id 1gWLGw-0002bJ-FH
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 08:06:55 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <pasic@linux.ibm.com>) id 1gWLGr-00069u-Rx
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 08:06:54 -0500
Received: from mx0b-001b2d01.pphosted.com ([148.163.158.5]:41710
	helo=mx0a-001b2d01.pphosted.com)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <pasic@linux.ibm.com>) id 1gWLGr-00069H-Lf
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 08:06:49 -0500
Received: from pps.filterd (m0098419.ppops.net [127.0.0.1])
	by mx0b-001b2d01.pphosted.com (8.16.0.22/8.16.0.22) with SMTP id
	wBAD4hYn060621
	for <qemu-devel@nongnu.org>; Mon, 10 Dec 2018 08:06:48 -0500
Received: from e06smtp02.uk.ibm.com (e06smtp02.uk.ibm.com [195.75.94.98])
	by mx0b-001b2d01.pphosted.com with ESMTP id 2p9p757qba-1
	(version=TLSv1.2 cipher=AES256-GCM-SHA384 bits=256 verify=NOT)
	for <qemu-devel@nongnu.org>; Mon, 10 Dec 2018 08:06:48 -0500
Received: from localhost
	by e06smtp02.uk.ibm.com with IBM ESMTP SMTP Gateway: Authorized Use
	Only! Violators will be prosecuted
	for <qemu-devel@nongnu.org> from <pasic@linux.ibm.com>;
	Mon, 10 Dec 2018 13:06:46 -0000
Received: from b06cxnps3075.portsmouth.uk.ibm.com (9.149.109.195)
	by e06smtp02.uk.ibm.com (192.168.101.132) with IBM ESMTP SMTP Gateway:
	Authorized Use Only! Violators will be prosecuted; 
	(version=TLSv1/SSLv3 cipher=AES256-GCM-SHA384 bits=256/256)
	Mon, 10 Dec 2018 13:06:44 -0000
Received: from d06av24.portsmouth.uk.ibm.com (d06av24.portsmouth.uk.ibm.com
	[9.149.105.60])
	by b06cxnps3075.portsmouth.uk.ibm.com (8.14.9/8.14.9/NCO v10.0) with
	ESMTP id wBAD6h1p59703426
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256
	verify=FAIL); Mon, 10 Dec 2018 13:06:43 GMT
Received: from d06av24.portsmouth.uk.ibm.com (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 8996F42047;
	Mon, 10 Dec 2018 13:06:43 +0000 (GMT)
Received: from d06av24.portsmouth.uk.ibm.com (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 4B68A4203F;
	Mon, 10 Dec 2018 13:06:43 +0000 (GMT)
Received: from oc2783563651 (unknown [9.152.97.247])
	by d06av24.portsmouth.uk.ibm.com (Postfix) with ESMTP;
	Mon, 10 Dec 2018 13:06:43 +0000 (GMT)
Date: Mon, 10 Dec 2018 14:06:42 +0100
From: Halil Pasic <pasic@linux.ibm.com>
To: Peter Maydell <peter.maydell@linaro.org>
In-Reply-To: <20181210120436.30522-1-peter.maydell@linaro.org>
References: <20181210120436.30522-1-peter.maydell@linaro.org>
Organization: IBM
X-Mailer: Claws Mail 3.11.1 (GTK+ 2.24.31; x86_64-redhat-linux-gnu)
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-TM-AS-GCONF: 00
x-cbid: 18121013-0008-0000-0000-0000029F5036
X-IBM-AV-DETECTION: SAVI=unused REMOTE=unused XFE=unused
x-cbparentid: 18121013-0009-0000-0000-00002209C4AB
Message-Id: <20181210140642.4f2f457c@oc2783563651>
X-Proofpoint-Virus-Version: vendor=fsecure engine=2.50.10434:, ,
	definitions=2018-12-10_04:, , signatures=0
X-Proofpoint-Spam-Details: rule=outbound_notspam policy=outbound score=0
	priorityscore=1501
	malwarescore=0 suspectscore=0 phishscore=0 bulkscore=0 spamscore=0
	clxscore=1015 lowpriorityscore=0 mlxscore=0 impostorscore=0
	mlxlogscore=999 adultscore=0 classifier=spam adjust=0 reason=mlx
	scancount=1 engine=8.0.1-1810050000 definitions=main-1812100120
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 3.x [generic] [fuzzy]
X-Received-From: 148.163.158.5
Subject: Re: [Qemu-devel] [qemu-s390x] [PATCH] hw/s390x/virtio-ccw.c: Don't
 take address of fields in packed structs
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: David Hildenbrand <david@redhat.com>, Cornelia Huck <cohuck@redhat.com>,
	qemu-devel@nongnu.org, Christian Borntraeger <borntraeger@de.ibm.com>,
	qemu-s390x@nongnu.org, patches@linaro.org,
	Richard Henderson <rth@twiddle.net>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Mon, 10 Dec 2018 12:04:36 +0000
Peter Maydell <peter.maydell@linaro.org> wrote:

> Taking the address of a field in a packed struct is a bad idea, because
> it might not be actually aligned enough for that pointer type (and
> thus cause a crash on dereference on some host architectures). Newer
> versions of clang warn about this. Avoid the bug by not using the
> "modify in place" byte swapping functions.
> 
> Patch produced with scripts/coccinelle/inplace-byteswaps.cocci
> (with a couple of long lines manually wrapped).
> 
> Signed-off-by: Peter Maydell <peter.maydell@linaro.org>

Reviewed-by: Halil Pasic <pasic@linux.ibm.com>

I wonder if packed was a good idea in the first place. @Connie: Do you
have an opinion on this?

Regards,
Halil

> ---
> s390 also has some warnings in hw/s390x/css.c which are going to
> be harder to fix, relating to taking the address of the 'pmcw' and
> 'scsw' fields in the SCHUB struct...
> 
>  hw/s390x/virtio-ccw.c | 42 ++++++++++++++++++++++--------------------
>  1 file changed, 22 insertions(+), 20 deletions(-)
> 
> diff --git a/hw/s390x/virtio-ccw.c b/hw/s390x/virtio-ccw.c
> index 212b3d3dead..c2b78c8e9b1 100644
> --- a/hw/s390x/virtio-ccw.c
> +++ b/hw/s390x/virtio-ccw.c
> @@ -287,18 +287,18 @@ static int virtio_ccw_handle_set_vq(SubchDev *sch, CCW1 ccw, bool check_len,
>      }
>      if (is_legacy) {
>          ccw_dstream_read(&sch->cds, linfo);
> -        be64_to_cpus(&linfo.queue);
> -        be32_to_cpus(&linfo.align);
> -        be16_to_cpus(&linfo.index);
> -        be16_to_cpus(&linfo.num);
> +        linfo.queue = be64_to_cpu(linfo.queue);
> +        linfo.align = be32_to_cpu(linfo.align);
> +        linfo.index = be16_to_cpu(linfo.index);
> +        linfo.num = be16_to_cpu(linfo.num);
>          ret = virtio_ccw_set_vqs(sch, NULL, &linfo);
>      } else {
>          ccw_dstream_read(&sch->cds, info);
> -        be64_to_cpus(&info.desc);
> -        be16_to_cpus(&info.index);
> -        be16_to_cpus(&info.num);
> -        be64_to_cpus(&info.avail);
> -        be64_to_cpus(&info.used);
> +        info.desc = be64_to_cpu(info.desc);
> +        info.index = be16_to_cpu(info.index);
> +        info.num = be16_to_cpu(info.num);
> +        info.avail = be64_to_cpu(info.avail);
> +        info.used = be64_to_cpu(info.used);
>          ret = virtio_ccw_set_vqs(sch, &info, NULL);
>      }
>      sch->curr_status.scsw.count = 0;
> @@ -382,7 +382,7 @@ static int virtio_ccw_cb(SubchDev *sch, CCW1 ccw)
>                  features.features = 0;
>              }
>              ccw_dstream_rewind(&sch->cds);
> -            cpu_to_le32s(&features.features);
> +            features.features = cpu_to_le32(features.features);
>              ccw_dstream_write(&sch->cds, features.features);
>              sch->curr_status.scsw.count = ccw.count - sizeof(features);
>              ret = 0;
> @@ -403,7 +403,7 @@ static int virtio_ccw_cb(SubchDev *sch, CCW1 ccw)
>              ret = -EFAULT;
>          } else {
>              ccw_dstream_read(&sch->cds, features);
> -            le32_to_cpus(&features.features);
> +            features.features = le32_to_cpu(features.features);
>              if (features.index == 0) {
>                  virtio_set_features(vdev,
>                                      (vdev->guest_features & 0xffffffff00000000ULL) |
> @@ -546,7 +546,7 @@ static int virtio_ccw_cb(SubchDev *sch, CCW1 ccw)
>              ret = -EFAULT;
>          } else {
>              ccw_dstream_read(&sch->cds, indicators);
> -            be64_to_cpus(&indicators);
> +            indicators = be64_to_cpu(indicators);
>              dev->indicators = get_indicator(indicators, sizeof(uint64_t));
>              sch->curr_status.scsw.count = ccw.count - sizeof(indicators);
>              ret = 0;
> @@ -567,7 +567,7 @@ static int virtio_ccw_cb(SubchDev *sch, CCW1 ccw)
>              ret = -EFAULT;
>          } else {
>              ccw_dstream_read(&sch->cds, indicators);
> -            be64_to_cpus(&indicators);
> +            indicators = be64_to_cpu(indicators);
>              dev->indicators2 = get_indicator(indicators, sizeof(uint64_t));
>              sch->curr_status.scsw.count = ccw.count - sizeof(indicators);
>              ret = 0;
> @@ -588,14 +588,14 @@ static int virtio_ccw_cb(SubchDev *sch, CCW1 ccw)
>              ret = -EFAULT;
>          } else {
>              ccw_dstream_read(&sch->cds, vq_config.index);
> -            be16_to_cpus(&vq_config.index);
> +            vq_config.index = be16_to_cpu(vq_config.index);
>              if (vq_config.index >= VIRTIO_QUEUE_MAX) {
>                  ret = -EINVAL;
>                  break;
>              }
>              vq_config.num_max = virtio_queue_get_num(vdev,
>                                                       vq_config.index);
> -            cpu_to_be16s(&vq_config.num_max);
> +            vq_config.num_max = cpu_to_be16(vq_config.num_max);
>              ccw_dstream_write(&sch->cds, vq_config.num_max);
>              sch->curr_status.scsw.count = ccw.count - sizeof(vq_config);
>              ret = 0;
> @@ -621,9 +621,11 @@ static int virtio_ccw_cb(SubchDev *sch, CCW1 ccw)
>              if (ccw_dstream_read(&sch->cds, thinint)) {
>                  ret = -EFAULT;
>              } else {
> -                be64_to_cpus(&thinint.ind_bit);
> -                be64_to_cpus(&thinint.summary_indicator);
> -                be64_to_cpus(&thinint.device_indicator);
> +                thinint.ind_bit = be64_to_cpu(thinint.ind_bit);
> +                thinint.summary_indicator =
> +                    be64_to_cpu(thinint.summary_indicator);
> +                thinint.device_indicator =
> +                    be64_to_cpu(thinint.device_indicator);
>  
>                  dev->summary_indicator =
>                      get_indicator(thinint.summary_indicator, sizeof(uint8_t));
> @@ -654,8 +656,8 @@ static int virtio_ccw_cb(SubchDev *sch, CCW1 ccw)
>              break;
>          }
>          ccw_dstream_read_buf(&sch->cds, &revinfo, 4);
> -        be16_to_cpus(&revinfo.revision);
> -        be16_to_cpus(&revinfo.length);
> +        revinfo.revision = be16_to_cpu(revinfo.revision);
> +        revinfo.length = be16_to_cpu(revinfo.length);
>          if (ccw.count < len + revinfo.length ||
>              (check_len && ccw.count > len + revinfo.length)) {
>              ret = -EINVAL;


