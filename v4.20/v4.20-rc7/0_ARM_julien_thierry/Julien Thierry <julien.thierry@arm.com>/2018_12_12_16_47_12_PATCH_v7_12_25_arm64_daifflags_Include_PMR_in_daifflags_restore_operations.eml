Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 08:53:01 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 69949580380;
	Wed, 12 Dec 2018 08:49:35 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 12 Dec 2018 08:49:34 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ATz84ARRGqBOSzfTlrsEWArFbCNpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YBaBt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KptVRTmij?=
 =?us-ascii?q?oINyQh/W/XlMJ+kaxVrhGmqRN9zY7Ue5mVOfhlc6/BYd8XX3ZNU9xNWyBdBI63?=
 =?us-ascii?q?cosBD/AGPeZdt4Tzo0YOrR+/BQayAuPk1yFGhn/33aIkyeQhCwHH1xEnEtIMrX?=
 =?us-ascii?q?TUqNT1O7kUUeyv0KnIzTTDYO1M2Tfn6InFaQouoeuJXb5qbcXRzkwvGhrDg16N?=
 =?us-ascii?q?qoLlJyuY2voRv2Wf9eZsSOyih3A9pw1soTWj2t0gh4jLi44N1FzI6Cd0zJwoKd?=
 =?us-ascii?q?C3VEJ3e8OoHIdNuy2ANYZ6XsUvSHxytikg0L0Jo5u7cTAKyJs5wx7fbOSKc5aH?=
 =?us-ascii?q?4h39TuadOzR4i2x/eLK5mRmy9VKsyurmVsm7yFpKryxFncfQtn0VyRDf9syKRu?=
 =?us-ascii?q?Fg8kqvxzqDzR3f5+JYLUwulKfWKYYtwrsqmZoStUTDEDX2mELzjKKOckUk++6o?=
 =?us-ascii?q?6/noY7n/pZ+TKZV0igfgPaQqg8C/Buo5Mg4QUGiB4um8yrLj8lPjQLlQjf05jL?=
 =?us-ascii?q?PZsJbEKsQfvKK5BBVV0ok75xalEzimyMgYnWUALF9dfBKHjovpNE/ULPH3EPey?=
 =?us-ascii?q?mFCskDZtx/DbMbztGJTNLn7fkLj/ebZx8VJTyA02zdpH/ZJbFqkBIO7vWk/2rN?=
 =?us-ascii?q?HYDgU2Mw2ow+n9D9VxzIMeWX+VDa+fP6PfqluI5uMpI+mRa44Zojf9K/455/Hw?=
 =?us-ascii?q?iX81g0MSfa6s3ZEPcnC3AuxmI1mFYXrrmtoBE2AKsRQkQOzpj12CVzhTZ3GpUq?=
 =?us-ascii?q?I45zE7Dp+mDIjZSoCshryBwDm0HplMam9aDVCMFG/id5+YVPcUdCKSPshhnyQe?=
 =?us-ascii?q?Wri6S48h0hKuuBXgy7V9LOrZ4SkYtZPl1Nho6OzfjxAy9TpoD8uD12GBVX17nm?=
 =?us-ascii?q?QNRzUuxqBwvVR9ykuf0ah/m/FYFsZc5/VTXgc+NJ7T1ep6C9/pVwLFf9eJTkum?=
 =?us-ascii?q?Q9q8DTEwSNIx38EBY0JnF9q+iRDD2jKgA6UJmLyTGJw07qXc0mDsKMln1XbJyr?=
 =?us-ascii?q?Mtj1k8TctJLm2pmKh/+w/XB47KlkWZk72ndaAd3C7L6WeCwnCCvEBeUA5sT6rF?=
 =?us-ascii?q?WWoTaVfRrdT8/knCVaOhCaw7Mgtdzs6PMrZFZcf3jVpYXvvjOM7RY2Sqm2iuAx?=
 =?us-ascii?q?aF3beMbIvse2UA0yTREkkEkwYP/XmYMQgyHDuuo2XbDDZ2D1Lgf1vs8fViqHO8?=
 =?us-ascii?q?VkI00wCKb0hm17qp+h4UheaQS+8J0rIDoichrzR0HFCy39/ND9qApgxhfLhTYN?=
 =?us-ascii?q?8n4VdH037ZuBJ5PpC6M69igVseeRxtv0zyzxV3FplAkc8yoXwwyAp9N62Z301B?=
 =?us-ascii?q?dj+Cxp/wJ6DYJXP0/BCsbK7WxErT0NKX+qcJ9fQ5pE/vvACvFko+7Xpn18NZ3G?=
 =?us-ascii?q?eb5pXPFAASS47+Ul4r9xhmoLHXeik8557O2XJwK6W1sz/C1MgvBOsq0Ruge9Zf?=
 =?us-ascii?q?MKWZFA79CcEaBs6uKPA0lFitdB4LIOdS9KssNcO8a/SGwLKrPPpnnD++l2RH4Z?=
 =?us-ascii?q?xy3ViW9yVhTe7ExZAFzO+C3guGTjvzkE2ussTqlo9afzESGWy/xDPgBI5QYK1y?=
 =?us-ascii?q?YIkKBX2vI82x2tVxmZrtV2RE+16kAlMMwNWpdgaKb1zhwQ1Q0lwaoHymmSeizz?=
 =?us-ascii?q?14iSoprreZ3CHVx+TidRwHOnNERWV4jFfsJ5S0gM4eXESycwcpkx6l717gx6dH?=
 =?us-ascii?q?vKR/M3XTQUBQcij0NW5iSKiwtrmFY8JV85MnqyZXUOe9YVCcVLH9pQAX0yfiH2?=
 =?us-ascii?q?tY2TA6eCumupT/nxxmlm2dKGx/o2beecF13R3f/sDTReZN3joaQyl1kTnWCUK7?=
 =?us-ascii?q?P9Wz/9WUlpHDv/u6V2KgUJ1TbCbqwZmBtCu9+W1lHxm/k+qvld3gFAgwyTX72M?=
 =?us-ascii?q?VyVSXUsBb8ZZHm16egPuJmZEVoBEL85NB8GoFxiYYwgJAQ2X4HhpSa53YHkGHz?=
 =?us-ascii?q?MclF1qL6dnYCWTkLw9vN6gj/xEJjNm6Jx57+VniFx8thZtq6bXkM1iMz8c9KE7?=
 =?us-ascii?q?uU46JenSRuvFW4tw3RbON5njccz/su9XEbj/sIuAor0iWSHLQSEVNEMizrkhSC?=
 =?us-ascii?q?98q+o7lPZGazbbiw01JzncymDLGHuA1dWWz2epE/HS9r9cV/MUnB0Hny6oHiZd?=
 =?us-ascii?q?nRYsgfthySkxfckedVLIg9meYNhSpiIWj9p2Eqy/YnjRxy2pG3pJOIJH9q/KK9?=
 =?us-ascii?q?Hx5ULDn1Z94I9zHpjKZemNuW3o+1EpVgHDULQIXnTfayHD0OsvTnMh6EECcgpX?=
 =?us-ascii?q?eDBbrfAQif5V9kr33VFpCkKWqXKGMFzdl4RxmdOU9fgB0SXDoghZ40DQSqxM3n?=
 =?us-ascii?q?cEdk6TEd/F/4qh1Qyu12MxnzSHvQpACtaj0sUpiQMAJW7h1e50fSKcGf7uVzHz?=
 =?us-ascii?q?xB/p28tgONLHaXZx9PDWEPVUyJHFTjPrio5dnd/OmUHOu+L/3SYbqQrexSTeuH?=
 =?us-ascii?q?xZWq0oF+5TaDKt2PPmV+D/08wkdDXW52G8XamzUMSiwbjSHNb9ScpBez5CJ3tN?=
 =?us-ascii?q?2/8O/wVQLr5IuPDaZSMNp19xC3h6eDK/CfhCJjJTlE0ZMMwGfCyKID014KlyFu?=
 =?us-ascii?q?az6tHKwaui7QV63QgLFYDh4BZyN3NctF9KY83ghLOc7GhdL5zL94jvgpC1hbUV?=
 =?us-ascii?q?ztgN2mZcsPI2ulLlPIGF6LNKiaJT3M28z3faK8SbhKgOpIrRG/pTabHFHlPjmY?=
 =?us-ascii?q?kznpVhavMfxDjS2BPRxevp29fQhpCWT5UN3mbRi7OsdtjTIq2b00mm/KNWkEPD?=
 =?us-ascii?q?l8aUxNqLiQ7SJegvpnGm1B7mBqLe+LmyuC6+nYK5AWseZkAyhuluJa5mg6xKVR?=
 =?us-ascii?q?7C1eWPN1ny7S/ZZSpASik++S2n9uSh8LqTtRgo+PlUFjIrnCsJhGV2zN8B8E4S?=
 =?us-ascii?q?OXERtZicFiD4jNpqRRx96HqKLyJS1Y4pqA/9YYBsXSbt6HMXc7KwvBESTRSgAC?=
 =?us-ascii?q?SGj4Zinkm0VBnaTKpTWupZ8gp820lQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AvAABdOxFch0O0hNFkHgEGBwaBUggLA?=
 =?us-ascii?q?YFaghEnjHOLM4Ihlz+BcS4TAYc+IjUIDQEDAQEBAQEBAgETAQEBCA0JCCkvgjY?=
 =?us-ascii?q?igmUDAwECdgYJAQFQA1QZBYMcggIEAadYiiyHfYQ/gVc/g3WFfIUOAqEMBwKCI?=
 =?us-ascii?q?wSPMhaRRpsHAoIKMxojgzyCJxd/AQeNFj8BATGBBQEBjHwBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AvAABdOxFch0O0hNFkHgEGBwaBUggLAYFaghEnjHOLM4I?=
 =?us-ascii?q?hlz+BcS4TAYc+IjUIDQEDAQEBAQEBAgETAQEBCA0JCCkvgjYigmUDAwECdgYJA?=
 =?us-ascii?q?QFQA1QZBYMcggIEAadYiiyHfYQ/gVc/g3WFfIUOAqEMBwKCIwSPMhaRRpsHAoI?=
 =?us-ascii?q?KMxojgzyCJxd/AQeNFj8BATGBBQEBjHwBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,344,1539673200"; 
   d="scan'208";a="56617501"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 12 Dec 2018 08:49:33 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728230AbeLLQt1 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 12 Dec 2018 11:49:27 -0500
Received: from foss.arm.com ([217.140.101.70]:44604 "EHLO foss.arm.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1728055AbeLLQsQ (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 12 Dec 2018 11:48:16 -0500
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
        by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 9F38C15BF;
        Wed, 12 Dec 2018 08:48:15 -0800 (PST)
Received: from e112298-lin.cambridge.arm.com (usa-sjc-imap-foss1.foss.arm.com [10.72.51.249])
        by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPA id D2F903F575;
        Wed, 12 Dec 2018 08:48:13 -0800 (PST)
From: Julien Thierry <julien.thierry@arm.com>
To: linux-arm-kernel@lists.infradead.org
Cc: linux-kernel@vger.kernel.org, daniel.thompson@linaro.org,
        joel@joelfernandes.org, marc.zyngier@arm.com,
        christoffer.dall@arm.com, james.morse@arm.com,
        catalin.marinas@arm.com, will.deacon@arm.com, mark.rutland@arm.com,
        Julien Thierry <julien.thierry@arm.com>
Subject: [PATCH v7 12/25] arm64: daifflags: Include PMR in daifflags restore operations
Date: Wed, 12 Dec 2018 16:47:12 +0000
Message-Id: <1544633245-6036-13-git-send-email-julien.thierry@arm.com>
X-Mailer: git-send-email 1.9.1
In-Reply-To: <1544633245-6036-1-git-send-email-julien.thierry@arm.com>
References: <1544633245-6036-1-git-send-email-julien.thierry@arm.com>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

The addition of PMR should not bypass the semantics of daifflags.

When DA_F are set, I bit is also set as no interrupts (even of higher
priority) is allowed.

When DA_F are cleared, I bit is cleared and interrupt enabling/disabling
goes through ICC_PMR_EL1.

Signed-off-by: Julien Thierry <julien.thierry@arm.com>
Cc: Catalin Marinas <catalin.marinas@arm.com>
Cc: Will Deacon <will.deacon@arm.com>
Cc: James Morse <james.morse@arm.com>
---
 arch/arm64/include/asm/daifflags.h | 31 +++++++++++++++++++++++++++----
 1 file changed, 27 insertions(+), 4 deletions(-)

diff --git a/arch/arm64/include/asm/daifflags.h b/arch/arm64/include/asm/daifflags.h
index 546bc39..1fd390e 100644
--- a/arch/arm64/include/asm/daifflags.h
+++ b/arch/arm64/include/asm/daifflags.h
@@ -18,6 +18,8 @@
 
 #include <linux/irqflags.h>
 
+#include <asm/cpufeature.h>
+
 #define DAIF_PROCCTX		0
 #define DAIF_PROCCTX_NOIRQ	PSR_I_BIT
 
@@ -36,7 +38,13 @@ static inline unsigned long local_daif_save(void)
 {
 	unsigned long flags;
 
-	flags = arch_local_save_flags();
+	flags = read_sysreg(daif);
+
+	if (system_uses_irq_prio_masking()) {
+		/* If IRQs are masked with PMR, reflect it in the flags */
+		if (read_sysreg_s(SYS_ICC_PMR_EL1) <= GIC_PRIO_IRQOFF)
+			flags |= PSR_I_BIT;
+	}
 
 	local_daif_mask();
 
@@ -45,12 +53,27 @@ static inline unsigned long local_daif_save(void)
 
 static inline void local_daif_restore(unsigned long flags)
 {
-	if (!arch_irqs_disabled_flags(flags))
+	bool irq_disabled = flags & PSR_I_BIT;
+
+	if (!irq_disabled) {
 		trace_hardirqs_on();
 
-	arch_local_irq_restore(flags);
+		if (system_uses_irq_prio_masking())
+			arch_local_irq_enable();
+	} else if (!(flags & PSR_A_BIT)) {
+		/*
+		 * If interrupts are disabled but we can take
+		 * asynchronous errors, we can take NMIs
+		 */
+		if (system_uses_irq_prio_masking()) {
+			flags &= ~PSR_I_BIT;
+			arch_local_irq_disable();
+		}
+	}
+
+	write_sysreg(flags, daif);
 
-	if (arch_irqs_disabled_flags(flags))
+	if (irq_disabled)
 		trace_hardirqs_off();
 }
 
-- 
1.9.1

