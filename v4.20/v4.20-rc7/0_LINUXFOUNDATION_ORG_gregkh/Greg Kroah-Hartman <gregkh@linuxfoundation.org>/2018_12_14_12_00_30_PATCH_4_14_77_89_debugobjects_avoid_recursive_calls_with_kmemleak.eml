Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  14 Dec 2018 20:30:39 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id BBF6D5805FC;
	Fri, 14 Dec 2018 04:29:45 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga003-1.jf.intel.com with ESMTP; 14 Dec 2018 04:29:45 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AXfwSrxTAmQN8xp8PINyhOYNbw9psv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YRaCt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZAo2y?=
 =?us-ascii?q?cZYBAeQCM+hfrYb9qVUBohSiCgejH+Pv0j1Fi2Tq3aA53ektDRvL0RYiEt8IrX?=
 =?us-ascii?q?/arM/1NKAXUe2tzafI1yvMb/xL0jn48ojIdQouofGVUbxya8XR01UvFwbfgVWW?=
 =?us-ascii?q?tIfoODyV1v4TvGiU7OpgVfmii2omqwF3vziuycksio7UhoIT11/L7zl5wIcyJd?=
 =?us-ascii?q?2+UkJ7ZsSkEJRJuiycKoB4TMQiQ2RytyY7zL0LoZ27czYQyJQh2RHfb+aLc4+S?=
 =?us-ascii?q?4hLsUuuaPDR2hGp9db6hmxq/9VKsxvDyW8WqylpGsylInsXWun0M1RHf8suKR/?=
 =?us-ascii?q?Vn8kqi2DuDzQPe5+VeLUwpiabWKZgsyaMqmJUJq0TMBCr2lV32jKCIckUk/fCl?=
 =?us-ascii?q?6/roYrr4vJ+QLYx0hR/kMqQohMO/Bf40Mg8UX2iU4ei81bvj8lPlQLhSkPE6jq?=
 =?us-ascii?q?3UvIrHKckVuKK1GRJZ34U/5xqlDjqr0swUnXwdI1JEfBKHgZLpO1bLIP3gCfe/?=
 =?us-ascii?q?glKskCpkxvzfPb3uHI/NLn7dn7flZLp97EBdyAwtwtBF/J9UFL4BL+zpWkPrt9?=
 =?us-ascii?q?zXEAU5MwqqzObjEtl90ZkeWW2XDq+DLKzSqUOI5v4oI+SUYI8VuTX9JOY/6//h?=
 =?us-ascii?q?kH80glsdfaiv3ZsKZ3G0BPVmI0OFYXXyhtcNC3sFvg07TObykl2NTSZTZ2quX6?=
 =?us-ascii?q?I7/jw7CJipDYbfRo+3h7yNxie7HoBMaWBABVCBCnPod4SCW/cRZyOeOM5hkjoY?=
 =?us-ascii?q?Vbe/T48tzw2htAj/y7B/NOrb5jUYtY7/1Nhy/+DTlxYy+iJuA8Se1GGNSWd0nm?=
 =?us-ascii?q?QTSj8y3aB/p1F9y1iZ3ah5hfxYCcJc5/dTXggmMp7cyvRwC8ruVQLZYteJVFGm?=
 =?us-ascii?q?T828DjEqTtIxxNwOb1xnG9q4jBDOxC6qA74Tl7yWC5046KPc337tJ8ljz3bKzr?=
 =?us-ascii?q?Uuj14jQsFXL22pmrZ/9xTPB47Oi0iZlLyldaIG0C7J9WeM12yOvE5DXQ50UKXF?=
 =?us-ascii?q?W20fZ0TModT44EPCU6GhCbA9PgRdzs6CL7NAasf1glVeWPfjJNPebnqslGiqGx?=
 =?us-ascii?q?aH2KmAbIrwdGUbxyXSFk4EnwcX/XaFMAg+Ajyso2bfDDxoCFLubFng8eh4qHOn?=
 =?us-ascii?q?UEA0yxuGYFFm17qw4hQVn+CTS+sP3rIYvycssyh7E0yj393IEdaApxBufKNHYd?=
 =?us-ascii?q?wj5ldKzmbZtw17Ppy9IKFunF8ecwJrv0zw0xV7EJlPkc8vrHky1gp9NbqY0E9d?=
 =?us-ascii?q?dzOfxZ3wJrzXKmz1/BCza67X2kvS0MqM9qcI8vQ4r1TjvAemFkc593Vn0t9V02?=
 =?us-ascii?q?aT55nQDQoSV47xXVgz9xRgu77aZSw97ZvO1XJwKam0riPC29UxCeQ/zhavYdhe?=
 =?us-ascii?q?P72EFQPoCMIaGtWhJ/Ysm1iqaRIEIvtf9Ko1P8OgavuH17SnPOdmnDK6k2tH5J?=
 =?us-ascii?q?px3V6L9yp5UuTIxYoKw+mE3gubUDfxlFegst3tlY9Yfz0TH2q/xjLiBI5efaBy?=
 =?us-ascii?q?eYcLCWGzI8y43Nl+hpjtW2JG+16nHV8JxMipeR+KZVznwQJQzVgXoWCgmSag1T?=
 =?us-ascii?q?x0ki0mobCF3CPTxOTubhwHNXBRRGljlFvjPZK7j9QHU0e2dQgpkx2l6F3+x6ha?=
 =?us-ascii?q?oqR/MmbSTV1JfyjwM2FtTK+wuqCebM5I7ZMiqT9XX/ikYVCGVr79pAMX0iPiH2?=
 =?us-ascii?q?dExDE3bSqquoj/nxFhjGKdLXBzrGfWeM1qxBff4sDcSuBV3jYcWCZ4jjzXDECm?=
 =?us-ascii?q?P9a15dWUi4vDsuemWmKjTJJTayrrzYCHtCeh/m1lGx6/n/Oymt3hDwc61zT219?=
 =?us-ascii?q?1rVSXOsRb9bZPn16W8MeJ7YEZoAEXw5NZ9GoF7ioEwno0f2WAGhpWJ+noKiWfy?=
 =?us-ascii?q?Ps9c2a7kbnoNRDgLzsXR4Ajk3k1jM32Iy5j4VnWb3stued26bnkK1SI66sBAEL?=
 =?us-ascii?q?2U46BcnStpvlq4qhrcYftnkTcc0/cu6GMajPsPuAoi1SidBrESHU9FPS3jjRiI?=
 =?us-ascii?q?7ta+rLlJa2ara7S/yE1+ndW5BrGYvg5cQGr5eoslHSJo68V/MVHM32fp5oDqZt?=
 =?us-ascii?q?bQds4TuQOOkxjbkedVMp0xm+EOhSpmP2L9oHIkx/Q6jRxowZG1ooyHJ39x86K+?=
 =?us-ascii?q?Bx5SLif1aN8L+jHxkaZemd6b35yoHpVkADkKXYHnTfS1EDIJrvTnNh2DEDk9qn?=
 =?us-ascii?q?edBLreEhWT6EZgr3LTDZ+rM2ubK2UezdVnXBOdPlBQgBgIXDUmmZ40Dhuly9bm?=
 =?us-ascii?q?cEd9+zAd/Fr4qgZXx+JsNhn/VHrfpQiyZjc1TpifMARZ7gVY60jJNsye6/p5Hz?=
 =?us-ascii?q?tE8Z25sAyNNmubahxKDW4TX0yLGUvjMqOy5dXa8OiYG+m+L+bIYbqUsuxTTPOI?=
 =?us-ascii?q?xZOp0ot78DeALMSPPn9+D/Il3kpPR2x2G8Pcmz8XUSwYizrNb9KHpBe74iB2rs?=
 =?us-ascii?q?e/8OnyWALy/4SPDaFeMc5o+xCwjqeOLOqQhCd/KTZF2ZIA337IyL4D3FEMjyFi?=
 =?us-ascii?q?bSWiEbMFtSTVVqLfhrdXDwIHayN0LMZI77wz3ghOOc7Yi9P5zL14juQyC1dKS1?=
 =?us-ascii?q?PhgNypZdcRLmG5NVPHAluLNbucKT3KxcH3fb2zSblKgOpIsB2wvC6RE1X/MTSb?=
 =?us-ascii?q?iznpSxevPPlWgyGGJxNeop+ycxZ3BWjnTdLrcRm7MN5xjT0rzrw4nHLKNWgAMT?=
 =?us-ascii?q?did0NBtKGf7SRdgv9nAWxO8mJlLfWYmyae9+TYNpcWsf5xDitoje5V/HQ6xKVT?=
 =?us-ascii?q?7CxfQPx1mS3SrsNhol28k+mPzCZnXwRKqjpRmI2LukBiM73D9pZcQXbE4A4N7W?=
 =?us-ascii?q?KIBhUKvdRlDNjvu6FWytfXlaPzKC1N89Tb/cYHA8jUKcSHMGcuMBbzGT7UChcF?=
 =?us-ascii?q?QiCvNW3Fm0Ndl/SSpTWpqc0+q57xiN8NR6VdWVgdCPwXEAJmEcYELZMxWSkrwp?=
 =?us-ascii?q?CBi8tdymCzo1HyXsJTvtXnX+iOBPzpYGKWl7RLZBsgxbL+MJQdMZD910V+a158?=
 =?us-ascii?q?2oPQFByDDph2viR9Y1ps8w12+39kQzh2ghq9Zw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ATAAD9oBNch0O0hNFjHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGCaYECJ4N8iBlfjTqOL4kUgXEWGAsIAYdHIjQJDQEDAQEBAQEBAgETAQE?=
 =?us-ascii?q?BCA0JCCkjDII2JAGCYgMDAQIgBAsBDQEBNwEFCQEBJAIFIQICAwxIGQWDHAGBa?=
 =?us-ascii?q?AMVBAEKpEpwfAwngnYBAQWBMAGFeQiBC4ZygyWBHBeBf4ERhWmCd4I5gleJICS?=
 =?us-ascii?q?BdJUbRwmHDYpCI4FdTYRPilmLLoMDizCBRoIOMxoIKAiDJwkKgggMF4hehUA/M?=
 =?us-ascii?q?gEBgQADAQEhE40DAQE?=
X-IPAS-Result: =?us-ascii?q?A0ATAAD9oBNch0O0hNFjHQEBBQEHBQGBUQgBCwGCaYECJ4N?=
 =?us-ascii?q?8iBlfjTqOL4kUgXEWGAsIAYdHIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2J?=
 =?us-ascii?q?AGCYgMDAQIgBAsBDQEBNwEFCQEBJAIFIQICAwxIGQWDHAGBaAMVBAEKpEpwfAw?=
 =?us-ascii?q?ngnYBAQWBMAGFeQiBC4ZygyWBHBeBf4ERhWmCd4I5gleJICSBdJUbRwmHDYpCI?=
 =?us-ascii?q?4FdTYRPilmLLoMDizCBRoIOMxoIKAiDJwkKgggMF4hehUA/MgEBgQADAQEhE40?=
 =?us-ascii?q?DAQE?=
X-IronPort-AV: E=Sophos;i="5.56,352,1539673200"; 
   d="scan'208";a="57479008"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 14 Dec 2018 04:29:42 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1731258AbeLNMK1 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 14 Dec 2018 07:10:27 -0500
Received: from mail.kernel.org ([198.145.29.99]:56260 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1731373AbeLNMKY (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 14 Dec 2018 07:10:24 -0500
Received: from localhost (5356596B.cm-6-7b.dynamic.ziggo.nl [83.86.89.107])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 4AD24214D9;
        Fri, 14 Dec 2018 12:10:23 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1544789423;
        bh=gmGAB9DFrtE9rUCRd96HLYIwHgcO5ij7LiYLnoYYSGI=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=YYPEH6yacXG6xnCozeLDvEnUid87VJe7ieftnaLEvE5zncgoP2s+wSVbQ9dgH7HoS
         5GAnye1poREZ2AsRT7v08VuGr67DmzZemtgHyTYeElWfMvk29YWTPorPgIUQWz+z2D
         ra1U8u5tdQenbjizWtC0tAuqjG82yFx+/Via71qA=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Qian Cai <cai@gmx.us>,
        Catalin Marinas <catalin.marinas@arm.com>,
        Waiman Long <longman@redhat.com>,
        Thomas Gleixner <tglx@linutronix.de>,
        Yang Shi <yang.shi@linux.alibaba.com>,
        Arnd Bergmann <arnd@arndb.de>,
        Andrew Morton <akpm@linux-foundation.org>,
        Linus Torvalds <torvalds@linux-foundation.org>,
        Sasha Levin <sashal@kernel.org>
Subject: [PATCH 4.14 77/89] debugobjects: avoid recursive calls with kmemleak
Date: Fri, 14 Dec 2018 13:00:30 +0100
Message-Id: <20181214115733.502311885@linuxfoundation.org>
X-Mailer: git-send-email 2.20.0
In-Reply-To: <20181214115729.658859279@linuxfoundation.org>
References: <20181214115729.658859279@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
X-Patchwork-Hint: ignore
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

4.14-stable review patch.  If anyone has any objections, please let me know.

------------------

[ Upstream commit 8de456cf87ba863e028c4dd01bae44255ce3d835 ]

CONFIG_DEBUG_OBJECTS_RCU_HEAD does not play well with kmemleak due to
recursive calls.

fill_pool
  kmemleak_ignore
    make_black_object
      put_object
        __call_rcu (kernel/rcu/tree.c)
          debug_rcu_head_queue
            debug_object_activate
              debug_object_init
                fill_pool
                  kmemleak_ignore
                    make_black_object
                      ...

So add SLAB_NOLEAKTRACE to kmem_cache_create() to not register newly
allocated debug objects at all.

Link: http://lkml.kernel.org/r/20181126165343.2339-1-cai@gmx.us
Signed-off-by: Qian Cai <cai@gmx.us>
Suggested-by: Catalin Marinas <catalin.marinas@arm.com>
Acked-by: Waiman Long <longman@redhat.com>
Acked-by: Catalin Marinas <catalin.marinas@arm.com>
Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Yang Shi <yang.shi@linux.alibaba.com>
Cc: Arnd Bergmann <arnd@arndb.de>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
Signed-off-by: Sasha Levin <sashal@kernel.org>
---
 lib/debugobjects.c | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

diff --git a/lib/debugobjects.c b/lib/debugobjects.c
index 99308479b1c8..bacb00a9cd9f 100644
--- a/lib/debugobjects.c
+++ b/lib/debugobjects.c
@@ -111,7 +111,6 @@ static void fill_pool(void)
 		if (!new)
 			return;
 
-		kmemleak_ignore(new);
 		raw_spin_lock_irqsave(&pool_lock, flags);
 		hlist_add_head(&new->node, &obj_pool);
 		debug_objects_allocated++;
@@ -1085,7 +1084,6 @@ static int __init debug_objects_replace_static_objects(void)
 		obj = kmem_cache_zalloc(obj_cache, GFP_KERNEL);
 		if (!obj)
 			goto free;
-		kmemleak_ignore(obj);
 		hlist_add_head(&obj->node, &objects);
 	}
 
@@ -1141,7 +1139,8 @@ void __init debug_objects_mem_init(void)
 
 	obj_cache = kmem_cache_create("debug_objects_cache",
 				      sizeof (struct debug_obj), 0,
-				      SLAB_DEBUG_OBJECTS, NULL);
+				      SLAB_DEBUG_OBJECTS | SLAB_NOLEAKTRACE,
+				      NULL);
 
 	if (!obj_cache || debug_objects_replace_static_objects()) {
 		debug_objects_enabled = 0;
-- 
2.19.1



