Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  14 Dec 2018 20:29:02 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 2391D5807A2;
	Fri, 14 Dec 2018 04:13:52 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 14 Dec 2018 04:13:52 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ACfV6fxPBwIcXkWogEVAl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPn5osbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRsZfWTJcDI2y?=
 =?us-ascii?q?bIUBCOgOPehWoIbyu1QAogC+BRGuCe701j9FhXH70bEg3uk7EwzL2hErEdIUsH?=
 =?us-ascii?q?TTqdX4LKYcUfqrw6nH0D7NaulW2TDn54jIaxwvo+uDXahsccrU00YvER7Og1Kf?=
 =?us-ascii?q?qYz/ITyV2ecNs2iA4upkVOKvjXMnqg5/ojio28csjJTGiZgJylDF8iV5xpw5Jd?=
 =?us-ascii?q?qiSE50eNOpFoZbuS+dN4tzWMwiQmdotT45yrIYo567ejYFyJA9yx7YcfyHfI6F?=
 =?us-ascii?q?6Q/gWuaJOTp0mm5pdbalixqv/0Ws1PfwWtS33VpWtCZIk9vBumgO2hHd8MSKSf?=
 =?us-ascii?q?pw8l2i1DuLzQzf9/1ILEIymKHGMZAu2KQwmYAWsUnbHi/5hkH2jKiOe0U69ein?=
 =?us-ascii?q?9f7nbq/lppCCLY90jB/xMqA0lsy4G+Q4PRACX2md+euiyL3u5VP1TKlOg/Esj6?=
 =?us-ascii?q?XUvo7WKd4GqqO6HwNZyIcu5hSnAzejytsYnH0HLFxfeBKAiojkI1XOIPH+Dfei?=
 =?us-ascii?q?jFWgiTRryO7cPr3nHJrNKmHPkLDvfLZ79UFc0hE+zc5Q551KELENOvHzVVHrtN?=
 =?us-ascii?q?zeEBA5Nxa4w+H9CNVyzo8eQ36AAreFMKPOtl+F/uYvI+iPZIALojr8JOUl6uXq?=
 =?us-ascii?q?jX84n18dYKao0YEWaHC+AvRpPUGZbWDwjdcGFGcAphA+Q/DyiF2eTT5TYG6/X6?=
 =?us-ascii?q?Im6TE6FIKpF4DDSpqtgLycxii7GJJWa3tCClCNF3foaoqFV+0NaCKUPs9ujDgE?=
 =?us-ascii?q?WaK9RI8m0BGkrBX6xKZ/LurI5i0Ysoru1Npy5+LNjx0y9jt0D8Kb02GKVGx0mm?=
 =?us-ascii?q?IIRzkr3KFwu0B9y1GD0bRmjPxcD9Bc+/RJUgIiP57G0+N6E8zyWh7GftqRUlmm?=
 =?us-ascii?q?WdWmATYyTt4r2d8BeUR9Fs6mjhDC2SqqHrAUm6aKBJwy7qLTwXzxK9xhxHbB0a?=
 =?us-ascii?q?krl0MmTddXNW26mq5/8BDeB43TnEWfjaqqcaUc0zTL9GeM1meOuEBYUAhtUaTK?=
 =?us-ascii?q?R3wfZ03Wrcjn6UPGVbOhFbMnMg5Zw86YNqRKcsHpjUlBRPr7JdvReXyxlHmqCR?=
 =?us-ascii?q?aI3LyMapHqdHsb3CnaDEgEkAUT/XKdOAg6ByehpX/eDTN0GVLuZUPs7fdxqHeh?=
 =?us-ascii?q?QkAoyAGKalVr16Cp9R4NmfycV/QT06oZtyg7tTV7Akyx39LMBNqGvApuYqNcbM?=
 =?us-ascii?q?g54FdG02LZqgN8MoahL6Bkml4RbQB3s1ny2BVwD4VKidIqo28yzApuNaKY10tM?=
 =?us-ascii?q?dy+Z3ZD1Pb3XNmny/RC1Z67KwF3e18yW+qMO6PQ+pFXupwWpFksk83V63NhZyX?=
 =?us-ascii?q?qc5pPWDAUMVZL9SFo49x9/p7vCeCky+5vU1WFwMamzqjLNwdYpC/Uqyxm+f9ZT?=
 =?us-ascii?q?KriLFBLvHMIAAciuK+sqm0ayYxIAPeBS8rM0Psy8e/uH3q6rIPhvnDa8gWtb54?=
 =?us-ascii?q?B911qG9zBgRe7Qw5YF3/aY0xOHVjfhlluurtr7mIFEZT4IGGq/xjPpBIpQZq10?=
 =?us-ascii?q?YIYKBn2iI8yxxtVimZHtX2RU+0KkB1MDwMWpYwadb0Th3Q1M0kQauWanmSqkwD?=
 =?us-ascii?q?NuiTEms62f0DbIw+v8bhoHO3dHS3V4glfoPIe7kcoaXE+ubwUykBul5ED6x7VU?=
 =?us-ascii?q?pahlLmnTR1tIcDbyL214TqSwsb+CadZV6Jw0qSVXTPi8YVeCR7/9ohsWySPiE3?=
 =?us-ascii?q?FFxDAmcTGnoZH5nx18iGKAI3d/tnvZecdsxRjB4NzQX+Je3j0DRCNgkznYGkC8?=
 =?us-ascii?q?P8W1/dWTj5rDsPqxV3iiVp1Qdinn15iAuzG45W1pAB2/me68mtv8HAg+0C/70c?=
 =?us-ascii?q?RqVCrSoBb9ZInry7q1MeZ9ckZ0A1/87tJwGptinYsomJEQxX8ai42V/HUdlmf/?=
 =?us-ascii?q?K9db2aP4bHcWQT4LwtjV4BXq2UF5L3KJwZ75WWuZwsd7e9a6ZWYW0Don789WEK?=
 =?us-ascii?q?eU8KBEnSxtr1q7tw3RYOJxnjcAyfQ07n4ajPoEuA4sziWbH7ATElNUPS3qlxSU?=
 =?us-ascii?q?8d++qL9ba3qocbi1zEB+h8yuDKmeogFAX3b0YpIiHS5z7splKl7N3mP86pr4eN?=
 =?us-ascii?q?bOd9IcrQObkw3Pj+VOLJIxl/wKhTdoOG7nvH0lzfI7ggJq3Z2goIeHLGBt9rqj?=
 =?us-ascii?q?AhFELj31e98T+jb1gKZCmcaW2pqjH5R7FTUNQZvoVumoEDMJuPTjNgaOFiA8q3?=
 =?us-ascii?q?iBFbreGw+f9Flpr3bVH5+3MHGXIWETzc9+SxmFOExfnAcUUS0hkZEjEQCqwNHh?=
 =?us-ascii?q?fF195jAM/VP4rhpMyuR1NxjwSGvfpQGoaisqR5ibNhZZ8gZC50LNO8yE8u1zBz?=
 =?us-ascii?q?1Y/oGmrAGVKGyUfQFIAn8SWkCeG1DvJLqu5cTD8+iFAOqxNeDObK6KqexfUfeI?=
 =?us-ascii?q?2J2u3pFn/zaKKsWAIH1iA+cn1UpEWHBzA97ZlCkXSywLiyLNaNaWpRe7+i1qt8?=
 =?us-ascii?q?C/7e7kWAT16YuUDLtSN9pv9guygaeCMe6QmSl4JSxZ1pMK2X/H1rwf0EQOhCFp?=
 =?us-ascii?q?cjmnCa4AujLVTKLMhq9XCAYWayNtO8tJ7KI83QhNNdTYitPv0b54geA6C01YVV?=
 =?us-ascii?q?z6gcypYc0KI2egNFLIHkqLNbKGJSHVzMHze6+zVbpQjOBMvR2qpTmbC1PjPiiE?=
 =?us-ascii?q?lzTxTR+vLPpDjDuFMx1eoo29dhdtBHPnTNLnbB27LdB2gSc3wb0ymnPFK2ocPS?=
 =?us-ascii?q?JgfENKq72a9TlYjelnG2xd8nplKvGJmzqY7+ndMJoZreFnDTh0l+1E5nQ30L9V?=
 =?us-ascii?q?7CBCRPxolyretN9uo1e6kuaRzjprSgZBqjFOhIiTp0VtJb3Z9oVcWXbD5B8M7X?=
 =?us-ascii?q?+fCxIPp9tkDN3go6FRytjVm6L1JzdP6NbU/coaB8jJJ8OLKnshMRz1GDHKCAsJ?=
 =?us-ascii?q?VyKkNWbahx8VrPbH8nyTs4h/qZX2npcKYqFUWUZzFf4ADElhWtsYL8RZRDQhxJ?=
 =?us-ascii?q?GBgcFAxmC5pRmUZMxAopXOULrGDu/iJzWZpb1FYQYYz7TlK4gaKoz83QplcFYs?=
 =?us-ascii?q?z9eCIFbZQd0Y+n4pVQQzukgYtSEmFmA=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A3AACYnRNch0O0hNFbCB0BAQUBBwUBg?=
 =?us-ascii?q?VMGAQsBgmmBAieDfIh4jTqJAIUvhBeEfRSBXxQYCwgBh0ciNgcNAQMBAQEBAQE?=
 =?us-ascii?q?CARMBAQEIDQkIKSMMgjYkAYJiAwMBAiAECwENAQE3AQUJAQEkAgUhAgIDDBI2G?=
 =?us-ascii?q?QWDHAGBaAMVBAEKpFxwfAwngnYBAQWBMAGDWA2CFAiBC4ZygyWBHBeBf4ERhWm?=
 =?us-ascii?q?CBQ2DHoJXiUAEgXSKP4pcGC8Jhw2HHYMlI4FdTYRPhFqFfyyLAoMDgRKKHoFNA?=
 =?us-ascii?q?YIGMxoIKAiDJwkKggiCXIYlhUA/MgEBgQADAQEhE40DAQE?=
X-IPAS-Result: =?us-ascii?q?A0A3AACYnRNch0O0hNFbCB0BAQUBBwUBgVMGAQsBgmmBAie?=
 =?us-ascii?q?DfIh4jTqJAIUvhBeEfRSBXxQYCwgBh0ciNgcNAQMBAQEBAQECARMBAQEIDQkIK?=
 =?us-ascii?q?SMMgjYkAYJiAwMBAiAECwENAQE3AQUJAQEkAgUhAgIDDBI2GQWDHAGBaAMVBAE?=
 =?us-ascii?q?KpFxwfAwngnYBAQWBMAGDWA2CFAiBC4ZygyWBHBeBf4ERhWmCBQ2DHoJXiUAEg?=
 =?us-ascii?q?XSKP4pcGC8Jhw2HHYMlI4FdTYRPhFqFfyyLAoMDgRKKHoFNAYIGMxoIKAiDJwk?=
 =?us-ascii?q?KggiCXIYlhUA/MgEBgQADAQEhE40DAQE?=
X-IronPort-AV: E=Sophos;i="5.56,352,1539673200"; 
   d="scan'208";a="44972204"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 14 Dec 2018 04:13:50 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1732141AbeLNMNc (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 14 Dec 2018 07:13:32 -0500
Received: from mail.kernel.org ([198.145.29.99]:60988 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1732106AbeLNMNX (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 14 Dec 2018 07:13:23 -0500
Received: from localhost (5356596B.cm-6-7b.dynamic.ziggo.nl [83.86.89.107])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 636B420892;
        Fri, 14 Dec 2018 12:13:22 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1544789602;
        bh=wbN8ZAMfKRTCchSqS2d0nRdYPouYi3cQ+3GTbK4OToY=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=MCIIrlIq0Py+gZJbenrIZKqIg7sAu9RnWM8K7j4i1vP3a6sKwAL1jfZUX4NN4xMeL
         KK+CY9xv4BWH+HHT6vNQ/2goWlLAPwOtgELIK4rNJaG3e2h4CLGhAu7eSUz8upDKf+
         /C9fSby++OL6GzIVi3ZhHuMU9WCk3xsF3B8hbca4=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Larry Chen <lchen@suse.com>,
        Changwei Ge <ge.changwei@h3c.com>,
        Mark Fasheh <mark@fasheh.com>,
        Joel Becker <jlbec@evilplan.org>,
        Junxiao Bi <junxiao.bi@oracle.com>,
        Joseph Qi <jiangqi903@gmail.com>,
        Andrew Morton <akpm@linux-foundation.org>,
        Linus Torvalds <torvalds@linux-foundation.org>,
        Sasha Levin <sashal@kernel.org>
Subject: [PATCH 4.9 45/51] ocfs2: fix deadlock caused by ocfs2_defrag_extent()
Date: Fri, 14 Dec 2018 13:00:47 +0100
Message-Id: <20181214115717.119288312@linuxfoundation.org>
X-Mailer: git-send-email 2.20.0
In-Reply-To: <20181214115713.244259772@linuxfoundation.org>
References: <20181214115713.244259772@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
X-Patchwork-Hint: ignore
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

4.9-stable review patch.  If anyone has any objections, please let me know.

------------------

[ Upstream commit e21e57445a64598b29a6f629688f9b9a39e7242a ]

ocfs2_defrag_extent may fall into deadlock.

ocfs2_ioctl_move_extents
    ocfs2_ioctl_move_extents
      ocfs2_move_extents
        ocfs2_defrag_extent
          ocfs2_lock_allocators_move_extents

            ocfs2_reserve_clusters
              inode_lock GLOBAL_BITMAP_SYSTEM_INODE

	  __ocfs2_flush_truncate_log
              inode_lock GLOBAL_BITMAP_SYSTEM_INODE

As backtrace shows above, ocfs2_reserve_clusters() will call inode_lock
against the global bitmap if local allocator has not sufficient cluters.
Once global bitmap could meet the demand, ocfs2_reserve_cluster will
return success with global bitmap locked.

After ocfs2_reserve_cluster(), if truncate log is full,
__ocfs2_flush_truncate_log() will definitely fall into deadlock because
it needs to inode_lock global bitmap, which has already been locked.

To fix this bug, we could remove from
ocfs2_lock_allocators_move_extents() the code which intends to lock
global allocator, and put the removed code after
__ocfs2_flush_truncate_log().

ocfs2_lock_allocators_move_extents() is referred by 2 places, one is
here, the other does not need the data allocator context, which means
this patch does not affect the caller so far.

Link: http://lkml.kernel.org/r/20181101071422.14470-1-lchen@suse.com
Signed-off-by: Larry Chen <lchen@suse.com>
Reviewed-by: Changwei Ge <ge.changwei@h3c.com>
Cc: Mark Fasheh <mark@fasheh.com>
Cc: Joel Becker <jlbec@evilplan.org>
Cc: Junxiao Bi <junxiao.bi@oracle.com>
Cc: Joseph Qi <jiangqi903@gmail.com>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
Signed-off-by: Sasha Levin <sashal@kernel.org>
---
 fs/ocfs2/move_extents.c | 47 +++++++++++++++++++++++------------------
 1 file changed, 26 insertions(+), 21 deletions(-)

diff --git a/fs/ocfs2/move_extents.c b/fs/ocfs2/move_extents.c
index 4e8f32eb0bdb..c179afd0051a 100644
--- a/fs/ocfs2/move_extents.c
+++ b/fs/ocfs2/move_extents.c
@@ -156,18 +156,14 @@ static int __ocfs2_move_extent(handle_t *handle,
 }
 
 /*
- * lock allocators, and reserving appropriate number of bits for
- * meta blocks and data clusters.
- *
- * in some cases, we don't need to reserve clusters, just let data_ac
- * be NULL.
+ * lock allocator, and reserve appropriate number of bits for
+ * meta blocks.
  */
-static int ocfs2_lock_allocators_move_extents(struct inode *inode,
+static int ocfs2_lock_meta_allocator_move_extents(struct inode *inode,
 					struct ocfs2_extent_tree *et,
 					u32 clusters_to_move,
 					u32 extents_to_split,
 					struct ocfs2_alloc_context **meta_ac,
-					struct ocfs2_alloc_context **data_ac,
 					int extra_blocks,
 					int *credits)
 {
@@ -192,13 +188,6 @@ static int ocfs2_lock_allocators_move_extents(struct inode *inode,
 		goto out;
 	}
 
-	if (data_ac) {
-		ret = ocfs2_reserve_clusters(osb, clusters_to_move, data_ac);
-		if (ret) {
-			mlog_errno(ret);
-			goto out;
-		}
-	}
 
 	*credits += ocfs2_calc_extend_credits(osb->sb, et->et_root_el);
 
@@ -260,10 +249,10 @@ static int ocfs2_defrag_extent(struct ocfs2_move_extents_context *context,
 		}
 	}
 
-	ret = ocfs2_lock_allocators_move_extents(inode, &context->et, *len, 1,
-						 &context->meta_ac,
-						 &context->data_ac,
-						 extra_blocks, &credits);
+	ret = ocfs2_lock_meta_allocator_move_extents(inode, &context->et,
+						*len, 1,
+						&context->meta_ac,
+						extra_blocks, &credits);
 	if (ret) {
 		mlog_errno(ret);
 		goto out;
@@ -286,6 +275,21 @@ static int ocfs2_defrag_extent(struct ocfs2_move_extents_context *context,
 		}
 	}
 
+	/*
+	 * Make sure ocfs2_reserve_cluster is called after
+	 * __ocfs2_flush_truncate_log, otherwise, dead lock may happen.
+	 *
+	 * If ocfs2_reserve_cluster is called
+	 * before __ocfs2_flush_truncate_log, dead lock on global bitmap
+	 * may happen.
+	 *
+	 */
+	ret = ocfs2_reserve_clusters(osb, *len, &context->data_ac);
+	if (ret) {
+		mlog_errno(ret);
+		goto out_unlock_mutex;
+	}
+
 	handle = ocfs2_start_trans(osb, credits);
 	if (IS_ERR(handle)) {
 		ret = PTR_ERR(handle);
@@ -606,9 +610,10 @@ static int ocfs2_move_extent(struct ocfs2_move_extents_context *context,
 		}
 	}
 
-	ret = ocfs2_lock_allocators_move_extents(inode, &context->et, len, 1,
-						 &context->meta_ac,
-						 NULL, extra_blocks, &credits);
+	ret = ocfs2_lock_meta_allocator_move_extents(inode, &context->et,
+						len, 1,
+						&context->meta_ac,
+						extra_blocks, &credits);
 	if (ret) {
 		mlog_errno(ret);
 		goto out;
-- 
2.19.1



