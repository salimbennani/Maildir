Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  15 Dec 2018 13:08:41 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id A0FD158061F;
	Fri, 14 Dec 2018 10:44:25 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 14 Dec 2018 10:44:25 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A0DhQQBHp9f6KMAZ9kdLmnZ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75os++bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJSyNODZ6y?=
 =?us-ascii?q?YYsIAeUDM+hWoIrzp1UQoxulHQmhBvjiyiNRhn/zwaE60/gtHAPA0Qc9H9wOqn?=
 =?us-ascii?q?PUrNDtOaoOV+C60anJxijFYfNLxTf9743IchE7ofGXXrJwcNfaxE4rFwPYklWQ?=
 =?us-ascii?q?rpfoMCmQ1usXr2eU9fJgVeOzi2E9rwF9uD6vydkwioTQgI8e11PK9T1hzYorOd?=
 =?us-ascii?q?G1TFR3bcOqHZdOrS2WKoh7Tt84T2xpuis20qMKtJ+ncCQWzZkr2gLTZ+Gbf4WN?=
 =?us-ascii?q?+R3vSOmcLSt9iX9kYr2wmw29/E27xeLhS8a7zlNHriRKn9nCsn0A0gDc58mbRv?=
 =?us-ascii?q?Rj+0qs1zmC2xzJ5exCPEs6j7DUK4Q7zb41jpcTsVrMHivxmEjukq+WeVsr+vKy?=
 =?us-ascii?q?5+TkfLrmvJmcOJFwig3kNaQugMO/Dfw5MggIQWeb5fyx2KP/8UD9WrlGk/M7nr?=
 =?us-ascii?q?fDvJzHJskXurS1Dg5X34o77hawFTam0NAWnXkdK1JFfQqKj4zoO1HIPfD5Au6z?=
 =?us-ascii?q?g1eynzdxwfDJILnhDozKLnnNlrfuY6x95lVCyAo8099f/YhYCrIfL/LpXE/+qt?=
 =?us-ascii?q?jYAgU+MwyuzObrEM992Z8GWWKTHq+ZN7vfsVuJ5uIsPeaAfoAUuCvmJvgh5v7u?=
 =?us-ascii?q?i2I5mFAHcamo25sXdG63HvB8L0qFZnrsh88LEX0WsQomUOzqlFqCXCZTZ3moXq?=
 =?us-ascii?q?I8+is0CIW8AYfDW4CimrqB3CigE51SZ2BGDE2MEHjye4WFXfcMdDydIst7njMY?=
 =?us-ascii?q?UrihTpcr1Quyuw/i17pnMu3U9zUatZLkytd5/e7TlRY09TxyCMSQyGWNT2Bynm?=
 =?us-ascii?q?MVSD46xqF/oUphylid1ah0meBXFdtW5/lRSAc1KYbcz/BmC9D1Qg/OZMyJSFah?=
 =?us-ascii?q?QtWlGz0xVMg+w90VbkZ5GtWiiA3D3iWwD78UkbyLGII78qbG03ftIMZ9zm7M1L?=
 =?us-ascii?q?M9gFk+XstPKWqmi7Z89wfJAY7FiUGZl6eweqQa0y7A72ODzWuIvEFFXw98S6TF?=
 =?us-ascii?q?XXYDZkTIqdT1/F/NT7irCb4/KAtO1daCKrdWat3ulVhJWe3sOMrAbG6rm2e/Hx?=
 =?us-ascii?q?CIxqiSY4rsfGkd2CbdCE0Akw0I+XaGNA4+Bjquom7EDTxuE07vbF3o8eVktHy7?=
 =?us-ascii?q?SUo0xRmQb0J9z7q15gIVhfuERvwOxL0Epjkupy90HFmn2dLWEMSPpwx6caVYYN?=
 =?us-ascii?q?M95kpH1G3Duwx8OJygM75thloEfwtruEPu0g19Cp9cnsgysHMq0A1yJLqE0FNA?=
 =?us-ascii?q?cjOY2ozwOr3XK2Xo4BCjcanW2kva0NaX/KcP5+81q1HivAGvC0oj/G9r09hT03?=
 =?us-ascii?q?uA+JrKCBAeXo72UkYy7xJ6va3VYjEh54PI0n1hKbO7sjvc1NMmGuQkygyscMxC?=
 =?us-ascii?q?MKyZDgDyFc4aB8+wKOExn1ipbxQEPP1d9aIuPsOmceeG17CvPOp6gD2mimFH6p?=
 =?us-ascii?q?hn0k2Q7yp8VvLI35EdzvCYwwuLTSvzgE2gs8D3g49EYz4SE3G7ySjlAo5Re6Jz?=
 =?us-ascii?q?cZwKCWeoP8242NF+i4TxVH5f8V6pH0kG19OxeRqOc1z92hVd1V4WoXO7gyS41S?=
 =?us-ascii?q?F7kzYzoqqZwiPO2eXieAMbNWFRQGltkEnjIZKzj9AcR0WoawkplB245Uf13aRb?=
 =?us-ascii?q?paJ/L3XNTkdMZST5M2ZiUq6ovLqYf8FP8I8osTlQUOmkYVGaS6TxohsA3yP4Am?=
 =?us-ascii?q?tewis2dzWrupX/ghx7h3iRLHd1rHrFZ85wwQ3T68DbRf5UxjAGXjV3iSHLBlig?=
 =?us-ascii?q?ONmk5deUmI3ZsuC9VGKhUYdfcTLxwoODtyu75GtqDgO5n/2ont3nEA460TL01t?=
 =?us-ascii?q?VwVCXIqgr8bZfv16igLe1neUxoDkfm68VmAoF+jpcwhJYI1HkanJqV+mALkWXy?=
 =?us-ascii?q?MdVdwq/+aHsNRTgWw9/a+gTl2UtjLm6XyIL9THmS3sxhZ9yiaGMMxi0999xKCL?=
 =?us-ascii?q?uT7LFcnit6uFu4oRjRYfhghDgdz/Qu5WUeg+EIvgot0yqcDqoTHUleISzjiRCI?=
 =?us-ascii?q?48qio6VQYWalaaKw21ZmndC9ELGCpRlRWHP4epchByB89Mt+P0zX0H3v9I7kYs?=
 =?us-ascii?q?LfYswJth2biBrAi+lVKJQslvsFnyZnOGT9vWE7xO4/lxBhwZa6vI2fIWV34K25?=
 =?us-ascii?q?GgJYNiHyZ84L5jHtiqNektyX3o+1GJVhBy4LXIDpTf+zFDIStPLnNxuBETEmq3?=
 =?us-ascii?q?ebH6bfEhGb6Et8s33PFJWrPWmNJHYF1dViWAWdJEtHjQ8PRjo6mZo5Fh2wyMzl?=
 =?us-ascii?q?bUd0/TQR5l/+qhtRxeNkLRj/UmHDpAi2bjc4UoSQLB1T7gta/UfaLdSe7v5vHy?=
 =?us-ascii?q?Ff5pChrhaCKmmFaARTF20JRlaIB1P+Prmt+NnA9fKXBvGlIvvKYLWOr/FeVviS?=
 =?us-ascii?q?yZKu1Itm4yiDNsGVMnZ+CP0731JJXWplFMTBhzUPVysXmjrNbs6cuRe84zB3od?=
 =?us-ascii?q?q58PjxQwLv4o2PC7RJPNVr+hC2h7qDNuGKiCZ4LzZYyo0DxXvSxLcD214Sjjlk?=
 =?us-ascii?q?dyOxHrQYqS7NUKXQl7dXDxEFaiNzN8hI76Mm0glOI87bjdz12aBijv4oEFdITl?=
 =?us-ascii?q?jhmsCvZcwXLGCxLlLHBECXNLuYIT3H2d34YaS5SbdIluVbqwWwuSqHE0/kJjmM?=
 =?us-ascii?q?jSTpWAu1Me5SjCCXJhheuICmfxZpCGjjSs/maxKhPN92iz023aM7hnfQOWEANj?=
 =?us-ascii?q?h8dltHrqeM4iNAnvV/B2tB42J5LemFniaV9fXXJowKvvtrHCt0kflX4HA7y7tT?=
 =?us-ascii?q?8SFFS+Z5mCrUrt5yvV6mlvODxSZgUBpLsjxLnp6EvV1+OaXF8ZlNQXbF8wgL7W?=
 =?us-ascii?q?WVChQKocNqC9zvu69KzNjPm7n+KDND89LS4MsdCNLYKMOBMHo9LxXpHCTYAxcC?=
 =?us-ascii?q?TT6uZinjgBlmnfiUvlaVtJkhtp/0mJcUUbhdHAguG/ocTEYjF9wYIYxrWSsknK?=
 =?us-ascii?q?SAi8gg5HyioR2XT8Jf6MPpTPWXVNzpJCfRqaRYYB4J26j7LMxHMpDn3GRrb1Bx?=
 =?us-ascii?q?lZzLB0PUG9ZAvnsyPUcPvExR/S0mHSUI0EX/Z1bouSdLGA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AMAAD7+BNch0O0hNFlGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUwQBAQELAYEwgjsng3yUEVABAQaBECUUiQ6JOIR9gSQDTBIBARgTAYR?=
 =?us-ascii?q?AgwciNgcNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkAYJhAQEBAQIBAQIgHQEBN?=
 =?us-ascii?q?wEEAQkBAQoYAgImAgIDMQEFARwGEwWDHIF0BQgBBJpbPIofcIEvgnYBAQWHJQg?=
 =?us-ascii?q?SeYdHg2wXeIEHgREnDBOBTn6FAYMGMYImiziFFJBOCZFyiXOHXyyWMIJeAgQCB?=
 =?us-ascii?q?AUCBQ8hgSwNgXp7CmUBgkE+gV01gziKdB8yAYEEAQEhjQ0BAQ?=
X-IPAS-Result: =?us-ascii?q?A0AMAAD7+BNch0O0hNFlGwEBAQEDAQEBBwMBAQGBUwQBAQE?=
 =?us-ascii?q?LAYEwgjsng3yUEVABAQaBECUUiQ6JOIR9gSQDTBIBARgTAYRAgwciNgcNAQMBA?=
 =?us-ascii?q?QEBAQECARMBAQEIDQkIKSMMgjYkAYJhAQEBAQIBAQIgHQEBNwEEAQkBAQoYAgI?=
 =?us-ascii?q?mAgIDMQEFARwGEwWDHIF0BQgBBJpbPIofcIEvgnYBAQWHJQgSeYdHg2wXeIEHg?=
 =?us-ascii?q?REnDBOBTn6FAYMGMYImiziFFJBOCZFyiXOHXyyWMIJeAgQCBAUCBQ8hgSwNgXp?=
 =?us-ascii?q?7CmUBgkE+gV01gziKdB8yAYEEAQEhjQ0BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,354,1539673200"; 
   d="scan'208";a="45027528"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 14 Dec 2018 10:44:23 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730643AbeLNSoO (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 14 Dec 2018 13:44:14 -0500
Received: from mail-pf1-f193.google.com ([209.85.210.193]:34853 "EHLO
        mail-pf1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1730410AbeLNSoO (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 14 Dec 2018 13:44:14 -0500
Received: by mail-pf1-f193.google.com with SMTP id z9so3246142pfi.2
        for <linux-kernel@vger.kernel.org>; Fri, 14 Dec 2018 10:44:13 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=amacapital-net.20150623.gappssmtp.com; s=20150623;
        h=mime-version:subject:from:in-reply-to:date:cc
         :content-transfer-encoding:message-id:references:to;
        bh=UgS6J86CMwYvBNmo4VnoSUzznIzimIMiXT751GNxMWo=;
        b=xbkk6Bz4KAft7vG8FXpGtekFbLN0kS+YYIsE9hYWlfX8MHBZvO2sMZSgUy26xyvi3t
         mAngJIEs2M2yLKSlsGRxM9UyEJpyDfw9DJsnFcN3nulJmfPfB9P84D1k19ASXmxZpisx
         1V9dw27bwboAJxqCG4aJcVR6NFbwvfzeupnIv3mlNOiGbge8BvR2kojexieRqMydVSkK
         LRj5mJyQwCfsKHnlMPGKiMCY4bJ1EXfFQTzxN8JCEx0NZeX8qoHsjcAqZinIJUEZZJNb
         J0UzVlLP87xWTkXMigvBuI4FaLR6luhEdib/9Y32nriMY1yJHbiXl46brX4nE5+CzpYw
         DbEA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:subject:from:in-reply-to:date:cc
         :content-transfer-encoding:message-id:references:to;
        bh=UgS6J86CMwYvBNmo4VnoSUzznIzimIMiXT751GNxMWo=;
        b=gq/pT0GI2n/OtskBPhmo09CTs27zlWDYZcEacZ2Z3baWu9Mp1BZeyuaDQyq10NVJpR
         5XU4b5KFSn/2BMVERhADwXJ0UGC/NnlYUNn5+gSWXSskiIGiCkl2OQBMZQl+dPmsH1fe
         rSDvrS/vWAKHMT84vcV1NbjIXtcyDaipDK6DcW5SkJYNHxnCy593zP6H+gqHEK70DodR
         +EBj/QcQpDgClDIA1zilElmaNMnKs2k9SgjlRjblc7tYIb3bcBUDfao1hb1+7ZehY44N
         29kEhcKDJbsJLr493xL3WnHs5t0tIbG2KHPBDPeh4r99ByzsqW1mv/zNp7yw137LdAEn
         KJ6A==
X-Gm-Message-State: AA+aEWa/tL9tHSCghCrypij8g7Ei4gP8vNfJSyBfqaqIei5Dnppf6pb7
        izXGJKSQZBhgx32DbkVu3e/jRg==
X-Google-Smtp-Source: AFSGD/Ubz6PIlicz+j8UpM2HvGEBHf99bjaHpPYoQlj3mJbCYU20E9PvyVQxbyrXhKpfD9h8KMAQAQ==
X-Received: by 2002:a63:4706:: with SMTP id u6mr3470678pga.95.1544813052931;
        Fri, 14 Dec 2018 10:44:12 -0800 (PST)
Received: from ?IPv6:2600:1010:b040:6acb:bdde:f4f9:c60e:340a? ([2600:1010:b040:6acb:bdde:f4f9:c60e:340a])
        by smtp.gmail.com with ESMTPSA id f67sm15374004pff.29.2018.12.14.10.44.11
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Fri, 14 Dec 2018 10:44:12 -0800 (PST)
Content-Type: text/plain;
        charset=utf-8
Mime-Version: 1.0 (1.0)
Subject: Re: [RFC PATCH v4 5/5] x86/vdso: Add __vdso_sgx_enter_enclave() to wrap SGX enclave transitions
From: Andy Lutomirski <luto@amacapital.net>
X-Mailer: iPhone Mail (16B92)
In-Reply-To: <20181214170310.GC22063@linux.intel.com>
Date: Fri, 14 Dec 2018 10:44:10 -0800
Cc: Jethro Beekman <jethro@fortanix.com>,
        Andy Lutomirski <luto@kernel.org>,
        Thomas Gleixner <tglx@linutronix.de>,
        Ingo Molnar <mingo@redhat.com>, Borislav Petkov <bp@alien8.de>,
        "x86@kernel.org" <x86@kernel.org>,
        Dave Hansen <dave.hansen@linux.intel.com>,
        Peter Zijlstra <peterz@infradead.org>,
        Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>,
        "H. Peter Anvin" <hpa@zytor.com>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        "linux-sgx@vger.kernel.org" <linux-sgx@vger.kernel.org>,
        Josh Triplett <josh@joshtriplett.org>,
        Haitao Huang <haitao.huang@linux.intel.com>,
        "Dr . Greg Wettstein" <greg@enjellic.com>
Content-Transfer-Encoding: quoted-printable
Message-Id: <90D05734-1583-4306-A9A4-18E4A1390F3B@amacapital.net>
References: <20181213213135.12913-1-sean.j.christopherson@intel.com> <20181213213135.12913-6-sean.j.christopherson@intel.com> <cda13cff-1a56-a40f-7d69-f0f1ab752f8e@fortanix.com> <20181214151204.GA22063@linux.intel.com> <20181214153830.GB22063@linux.intel.com> <20181214170310.GC22063@linux.intel.com>
To: Sean Christopherson <sean.j.christopherson@intel.com>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org



> On Dec 14, 2018, at 9:03 AM, Sean Christopherson <sean.j.christopherson@in=
tel.com> wrote:
>=20
>> On Fri, Dec 14, 2018 at 07:38:30AM -0800, Sean Christopherson wrote:
>>> On Fri, Dec 14, 2018 at 07:12:04AM -0800, Sean Christopherson wrote:
>>>> On Fri, Dec 14, 2018 at 09:55:49AM +0000, Jethro Beekman wrote:
>>>>> On 2018-12-14 03:01, Sean Christopherson wrote:
>>>>> +2:    pop    %rbx
>>>>> +    pop    %r12
>>>>> +    pop    %r13
>>>>> +    pop    %r14
>>>>> +    pop    %r15
>>>>> +    pop    %rbp
>>>>> +    ret
>>>>=20
>>>> x86-64 ABI requires that you call CLD here (enclave may set it).
>>>=20
>>> Ugh.  Technically MXCSR and the x87 CW also need to be preserved.
>>>=20
>>> What if rather than treating the enclave as hostile we require it to be
>>> compliant with the x86-64 ABI like any other function?  That would solve=

>>> the EFLAGS.DF, MXCSR and x87 issues without adding unnecessary overhead.=

>>> And we wouldn't have to save/restore R12-R15.  It'd mean we couldn't use=

>>> the stack's red zone to hold @regs and @e, but that's poor form anyways.=

>>=20
>> Grr, except the processor crushes R12-R15, FCW and MXCSR on asynchronous
>> exits.  But not EFLAGS.DF, that's real helpful.
>=20
> I can think of three options that are at least somewhat reasonable:
>=20
>  1) Save/restore MXCSR and FCW
>=20
>     + 100% compliant with the x86-64 ABI
>     + Callable from any code
>     + Minimal documentation required
>     - Restoring MXCSR/FCW is likely unnecessary 99% of the time
>     - Slow
>=20
>  2) Clear EFLAGS.DF but not save/restore MXCSR and FCW
>=20
>     + Mostly compliant with the x86-64 ABI
>     + Callable from any code that doesn't use SIMD registers
>     - Need to document deviations from x86-64 ABI
>=20
>  3) Require the caller to save/restore everything.
>=20
>     + Fast
>     + Userspace can pass all GPRs to the enclave (minus EAX, RBX and RCX)
>     - Completely custom ABI
>     - For all intents and purposes must be called from an assembly wrapper=

>=20
> Option (3) actually isn't all that awful.  RCX can be used to pass an
> optional pointer to a 'struct sgx_enclave_exception' and we can still
> return standard error codes, e.g. -EFAULT.

I like 3, but:

>=20
> E.g.:
>=20
> /**
> * __vdso_sgx_enter_enclave() - Enter an SGX enclave
> *
> * %eax:    ENCLU leaf, must be EENTER or ERESUME
> * %rbx:    TCS, must be non-NULL
> * %rcx:    Optional pointer to 'struct sgx_enclave_exception'
> *
> * Return:
> *  0 on a clean entry/exit to/from the enclave
> *  -EINVAL if ENCLU leaf is not allowed or if TCS is NULL
> *  -EFAULT if ENCLU or the enclave faults
> */
> ENTRY(__vdso_sgx_enter_enclave)
>    /* EENTER <=3D leaf <=3D ERESUME */
>    cmp    $0x2, %eax
>    jb    bad_input
>=20
>    cmp    $0x3, %eax
>    ja    bad_input
>=20
>    /* TCS must be non-NULL */
>    test    %rbx, %rbx
>    je    bad_input
>=20
>    /* save @exception pointer */
>    push    %rcx
>=20
>    /* load leaf, TCS and AEP for ENCLU */
>    lea    1f(%rip),  %rcx
> 1:    enclu
>=20
>    add    0x8, %rsp
>    xor    %eax, %eax
>    ret
>=20
> bad_input:
>    mov     $(-EINVAL), %rax
>    ret
>=20
> .pushsection .fixup, "ax"
> 2:    pop    %rcx   =20
>    test    %rcx, %rcx
>    je    3f
>=20
>    mov    %eax, EX_LEAF(%rcx)
>    mov    %di,  EX_TRAPNR(%rcx)
>    mov    %si,  EX_ERROR_CODE(%rcx)
>    mov    %rdx, EX_ADDRESS(%rcx)
> 3:    mov     $(-EFAULT), %rax
>    ret

I=E2=80=99m not totally sold on -EFAULT as the error code.  That usually ind=
icates a bad pointer.  I=E2=80=99m not sure I have a better suggestion.

> .popsection
>=20
> _ASM_VDSO_EXTABLE_HANDLE(1b, 3b)
>=20
> ENDPROC(__vdso_sgx_enter_enclave)
