Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  15 Dec 2018 13:05:10 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 51F2C58061F;
	Fri, 14 Dec 2018 05:56:47 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 14 Dec 2018 05:56:47 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Am1NMIx8QlnPhu/9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1u8VIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CSmVBUMReWSxPDI2/?=
 =?us-ascii?q?coUBEfYOPf1Ar4T/vFYOsQeyCBOwCO/z1jNFhHn71rA63eQ7FgHG2RQtEc4PsH?=
 =?us-ascii?q?vIrNX6Lr0SXv2ox6bI0zrDbvVW1izj54jSfRAuv+uMVq93fMrLyEkgCwPFgU+K?=
 =?us-ascii?q?qYP4JT+U2PoCs2md7+V7S+2vkWEnpB9rojW0yccsj5PGhoMRylze6Sp5x4M1KM?=
 =?us-ascii?q?S+RUVmb9CkF55QuDubN4twWs4iRHpntzggyr0GpJ67eTYFyI49yxHDbPyHdo6F?=
 =?us-ascii?q?6Q/gWuaJOTp0mm5pdbalixqv/0Ws1PfwWtS33VpWtCZIk9vBumgT2xDP7sWLUP?=
 =?us-ascii?q?hw80e71TqRyQzf9/tILEE3mKfdNpUv2KQ/loAJvkTGBiL2mFv5jKuRdkg85Oio?=
 =?us-ascii?q?5ProYq/8qp+fKYB0kAf+PboqmsClBuQ4KAcOU3Ca+eS6yrLj4VX0TKtWgvAyiK?=
 =?us-ascii?q?XVrZ7XKdoBqqKkAAJZzpwv5he9Aju+1dQXh3gHLFZLeBKdiIjpPknDIPT5Dfe5?=
 =?us-ascii?q?nlStny5nx/PYMb37BJXCMHzDnK7mfbdz7U5T1hAzwMtB55JbFL4BOuj/Wkzvu9?=
 =?us-ascii?q?zCCB82LQi0z/zgCNVn2YMSQXiPDbOBMKPOrV+I4foiI+2NZI8WpjnxMfck5+P1?=
 =?us-ascii?q?gH89mF8de7Sp3JQNZHC5GPRmP1uWYX72jtgdFmcKuxI0TPb2h12aTT5Te3GyUr?=
 =?us-ascii?q?o85j4hCYKmEZ3MRoe3jLyBwSe0BJtWZm9dB1CIEHfocZiEWvgWZCKTJM9hjiIL?=
 =?us-ascii?q?Vby7R4A90hGusRfwy6B7IerM5i0YqZXj2cB35+3Uix4+7z90D8Ob02GLSGF5hW?=
 =?us-ascii?q?cIRz4w3KBirk1x0FaD0a5kg/NGEdxf/e9GUgA/NZTE1ex1F8jyWh7dfteOUFup?=
 =?us-ascii?q?WM6mATE2TtIy2dMOeVxyG9e5gxDH3iqqBaIVlrORCJw19KLcw2b+J8Jnx3na06?=
 =?us-ascii?q?khikEsQtFTOm2+mq5/6w/TCpbKk0qDkaamb6Ac3C/X+2eFwmqDp0VYUA92UaXY?=
 =?us-ascii?q?UnETfErWrdLl5kzcS7+iE6goMgxEycSaMKtFdsXpjUlaRPfkINnRfni+m3muCh?=
 =?us-ascii?q?qSxrODdozqe34D0yXbD0QElwMT/XOCNQUlAiehomTeDCFhFF71YkPs9/V+p22/?=
 =?us-ascii?q?TkMu0w6KaEhh3aKv+hEJnfycV+8T3rUctSg8sTp0Akiy08jWC9WaoQphZ7tTYd?=
 =?us-ascii?q?Um7VdD1GLZsRF9P5O6I6BjgF4ebxp4v0f02xprDYVAlNAgrGk2wwpqNaKYzFRB?=
 =?us-ascii?q?eiuE3ZDxP73XLXXy/BCvaqLMxlHSytGW+r0L6PQ5rVXjsxqkFk4j83VhztlU3G?=
 =?us-ascii?q?GQ5pTMDAoOT53xVlw7+AR9p7HfeiM9/Z/b1WVwMamotT/Pw8gmBO87xRevYdhe?=
 =?us-ascii?q?MLmIGxTvE8IHHceuLu8qm1+3bh8fOOBS9ag0P96pdvec2a6rOvpgkyyijWhd/I?=
 =?us-ascii?q?991UeM/TJmSuHUx5YF3+2Y3gyfWjb8kVetqNz4lZpFZDESBGW/zyfkCZVVZq1z?=
 =?us-ascii?q?e4YLFGivL9e2xtV4m57iRXpY+ES/CFMB3c+jYQCSYEDl3Q1MyUQXpmSqmTG5zz?=
 =?us-ascii?q?NoiT4ptLeQ3CvUz+TkahUHIG9LSHB+glj2JYi7ks4VXFKvbwgvjxal4Uf6x65G?=
 =?us-ascii?q?pKVwNWXTQEFIfzToIGFmSKe/qr2CY8tX4pMyrSpXSPi8YUydSrPloxoa0jnvHm?=
 =?us-ascii?q?tEyDAgajGqvI70nxh7iGKbMXZyo2DVecB2xRfD+tPcQeRd0SYBRCl9kTPXHESz?=
 =?us-ascii?q?P8G1/dWIkJfOquK+WHi7Vp1QcinrypmMtDCh6m1pAh2/nvazlcPhEQUh1S/71t?=
 =?us-ascii?q?9qVTjHrRrmY4nr0bi6PvxjfkVyGFD87M96EJlkkoQsnJEQxWQahpKN8HsHi2jz?=
 =?us-ascii?q?Ns9X2aD/bHoLXjMLx9/V4A742ExsNH6JxoT5VmmDzctlfdW1fmQW2icl5cBQFK?=
 =?us-ascii?q?iU9KBEnTdyolegrgLee/l9ki0dyfsz8nEahe4JtREpziWcBLASAEZZMTbtlxSO?=
 =?us-ascii?q?89CxsqFXaHyzfri30Up0hcqhA62aogFARHb5fY8vHSpx7sV8Kl3AynPy5Z//eN?=
 =?us-ascii?q?nMc90TrAabnAnaj+haM58xkvsKhSx6OWPyp3Elyug7jQBw0pG+poSIN2Jt/Keh?=
 =?us-ascii?q?CB5CKjL1f98T+i3qjatGgsaW2IWvEo9gGzoRWpvoUOmoECkTtfn8MwaOETs8qm?=
 =?us-ascii?q?qUGLbFHA+f7ltmoGzLE5yxK36XI3wZx814RBaBPExfnBwUXDIik5EiDA+qw8jh?=
 =?us-ascii?q?cFpj6jAV+171sR9MyuNuNxniXWbTvgaoajEoSJeBKBpa9B1N50DQMcaG9OJ8Az?=
 =?us-ascii?q?lY/oG9rAyKMmGbZR5HDWQXVUyfHVzjIqOi5drd8+ibG+q+KeHBYa6VpOxaVveI?=
 =?us-ascii?q?w4+v04R88zaNMMWPImdtD/kh1kVfWnB5HtzTmy8TRCwPiyLNc8mbqQ+8+y1ws8?=
 =?us-ascii?q?C/6enrVxjp5YeVELtSNtNv+x+tjKeHNu6Qgjt5KDlC2pMNw3/I1KYQ3FoIhy5y?=
 =?us-ascii?q?cDmtFKwKtTTRQ6LIhq9XExkbZjtzNMRW7qI83QpNOc/BhtP2zL54ifE1BElfVV?=
 =?us-ascii?q?z8gcGkfsgKI2C7NFPaC0eHLrWGJTvXw87pZaOwU6FfjOJRtxeoozaUD1fjPiif?=
 =?us-ascii?q?lznuTx2gK/xMgzqBPBNAuICxaBJtCWn4QdLiax27NsJ3jDIszb01gHPKKXATMT?=
 =?us-ascii?q?xmf0xRqb2Q6DtSgu9jFGxZ8nplMe6Elj6F7+nZL5Yaq+dkDj5omOJa/ns6zaBY?=
 =?us-ascii?q?7CVFRPxzhSvTocRio1CgkumT1DVnVABCpSpMhIKOpU9iI7nW9oFcWXbY+xIA9W?=
 =?us-ascii?q?WRBA4Mp9tgC93vvbhfy9nPlK3pLjdC/MnZ/c8dB8jSNcKGP2AtMRvvGD7IEgQF?=
 =?us-ascii?q?SSSnOn3Yh0xYw7mu8Sjfi5EgqYX30LRIevl5EhQSHP4ACllgEcZIaMNyVyknjK?=
 =?us-ascii?q?Wzi8QF/3qjqRTLAs5du8aUeOiVBKDVKT2ZhKNILyQFwLXyIJ4cO5ezj1ZjYVlz?=
 =?us-ascii?q?hoiMBEfRW9pAuCJsdCc7pUxM9D51SWhliBGtUR+k/HJGTa38pRUxkAYrJL11rD?=
 =?us-ascii?q?o=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AmAABbthNch0O0hNFcCB4BBgcGgVEJC?=
 =?us-ascii?q?wGCaYECJ4N8g3uSIhSJf41EgXMsBwwBhDwCgwkiNAkNAQMBAQEBAQECARMBAQE?=
 =?us-ascii?q?IDQkIKSMMgjYkAYJiAQIDAQIgHQEbHQEDAgkBAQUFBwQNAgImAgIDHwERAQUBH?=
 =?us-ascii?q?AYTBQODGQGBZwEDFQWaIDyLD4ESBQEXgncFhD8KGScNXYE3AgYSeYszgVc/gRG?=
 =?us-ascii?q?DEoRcgyuCVwKJboFIhBWQfFEHAoIkBI8yGIFdhRyKWZlSMIElgg5wgQGCOwmCE?=
 =?us-ascii?q?gwXg0qKVD4zgQUBAY03AQE?=
X-IPAS-Result: =?us-ascii?q?A0AmAABbthNch0O0hNFcCB4BBgcGgVEJCwGCaYECJ4N8g3u?=
 =?us-ascii?q?SIhSJf41EgXMsBwwBhDwCgwkiNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkA?=
 =?us-ascii?q?YJiAQIDAQIgHQEbHQEDAgkBAQUFBwQNAgImAgIDHwERAQUBHAYTBQODGQGBZwE?=
 =?us-ascii?q?DFQWaIDyLD4ESBQEXgncFhD8KGScNXYE3AgYSeYszgVc/gRGDEoRcgyuCVwKJb?=
 =?us-ascii?q?oFIhBWQfFEHAoIkBI8yGIFdhRyKWZlSMIElgg5wgQGCOwmCEgwXg0qKVD4zgQU?=
 =?us-ascii?q?BAY03AQE?=
X-IronPort-AV: E=Sophos;i="5.56,353,1539673200"; 
   d="scan'208";a="44981941"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 14 Dec 2018 05:56:45 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730103AbeLNN4l (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 14 Dec 2018 08:56:41 -0500
Received: from mail-wr1-f68.google.com ([209.85.221.68]:37208 "EHLO
        mail-wr1-f68.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1729641AbeLNN4l (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 14 Dec 2018 08:56:41 -0500
Received: by mail-wr1-f68.google.com with SMTP id s12so5088720wrt.4
        for <linux-kernel@vger.kernel.org>; Fri, 14 Dec 2018 05:56:39 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=MfkVA1cvUFm6l9t+etnGa86DMGuVQeEpE9AwskkVrDM=;
        b=UXHbywmJL/JAdoiz9KaCZDRsHbhL83oD6upSmz75bso/1SNRS6vuvuyhoYYOCYrSza
         5ykoFbFs2vxmh3KenJWadPqqltIBk0EH/U2POqkaaYulj4+hbq8p8TlI3ppWrmdoow1H
         +d5UYg8+3ko7tb5OdK7KIs2Iok0coiFTQSxA9OUbJyzFMO97Lxiy9VmR1wJ30gCsV0VV
         3mA3TVuiW/ICzwLCDOX0yiHDk/lJRaj9F35F5M+AQRVZTBApNnuhxnJ+7AhW5xUAQuAb
         VzJ8XT7uPUoQfdbR+CxLS5axCH6ongkEWV6nwwD36gKvoqSuqtzzXZ4rnaPFetrhT91T
         uxWg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=MfkVA1cvUFm6l9t+etnGa86DMGuVQeEpE9AwskkVrDM=;
        b=GblCZCGi5TWdl5LjQASnASz53MZq9Q5Trgbb9aWOQf+Kua2q4+g0CBiCIGYKPY00pl
         xOjpkfeg/SjiIiEsRNVwAH0uZi5HVR6pQ/Zu2ZTyjhRoeAyZKasREGUX7IrdrM03M6Jw
         LHXkSeQtxopKMF/itaSmLDvCWP29y5WgLXSU6HUG47h5w3P8RyYL3NIrDxs/GIBRUJNf
         /AB0I+2XQQFzX3wpbP0I2Hv6am6toXA/NTVCH9rGaZ4LR7HxvmwvtfhhUWnVreks1BLb
         Qylfc0NleJ0bOb274PmNexgAETIyQuZkmSWByz7UCsqIp4dEZeVK8PxwvPgdjt1aYJ3p
         tRLQ==
X-Gm-Message-State: AA+aEWZNcUpPGwolZu0J3jIxEs3LXUFygLfddARJ2UYU8k62TgrepoZk
        FHvIf+M3irYrhgEP+e3MI/+cJAS7VG+N0Z80yTI=
X-Google-Smtp-Source: AFSGD/WDS0iPek6MPIjugXC76c2Y2AtyNB5SXitXq6H3A7vG8BKugqL/bKFliPwZWoCq4/BnwHTS8u4t+u01FGHwJS4=
X-Received: by 2002:adf:b102:: with SMTP id l2mr2624320wra.296.1544795798889;
 Fri, 14 Dec 2018 05:56:38 -0800 (PST)
MIME-Version: 1.0
References: <BLUPR13MB0289EFEB79833470EE62F48EDFD10@BLUPR13MB0289.namprd13.prod.outlook.com>
 <20181128135242.gy3avmbp2pdmjaka@twin.jikos.cz> <5C0654EE.5040001@oberhumer.com>
 <SN1PR13MB030484F09EE8A00DB094CDFADFA80@SN1PR13MB0304.namprd13.prod.outlook.com>
 <5C093A30.4020705@oberhumer.com> <BLUPR13MB0289EC81589A10E95912675FDFA70@BLUPR13MB0289.namprd13.prod.outlook.com>
 <5C110083.8060502@oberhumer.com>
In-Reply-To: <5C110083.8060502@oberhumer.com>
From: Richard Weinberger <richard.weinberger@gmail.com>
Date: Fri, 14 Dec 2018 14:56:26 +0100
Message-ID: <CAFLxGvzj=P2FY6w7CBYztsUjJ5Td53zCzGa_FUjrfxA94cmSgA@mail.gmail.com>
Subject: Re: [PATCH v2] lzo: fix ip overrun during compress.
To: "Markus F.X.J. Oberhumer" <markus@oberhumer.com>
Cc: liyueyi@live.com, dsterba@suse.cz,
        Greg KH <gregkh@linuxfoundation.org>, Willy Tarreau <w@1wt.eu>,
        donb@securitymouse.com, Jiri Kosina <jikos@kernel.org>,
        LKML <linux-kernel@vger.kernel.org>,
        Kees Cook <keescook@chromium.org>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

[CC'ing Kees]

On Wed, Dec 12, 2018 at 1:37 PM Markus F.X.J. Oberhumer
<markus@oberhumer.com> wrote:
>
> I still claim that (0xfffffffffffff000, 4096) is not a valid C "pointer
> to an object" according to the C standard - please see my reply below.
>
> And I thought ASLR was introduced to improve security and not to create
> new security problems - someone from the ASLR team has to comment on this.
>
> Cheers,
> Markus
>
>
> On 2018-12-12 06:21, Yueyi Li wrote:
> > Hi Markus,
> >
> > OK, thanks. I`ll change it in v3.
> >
> > Thanks,
> > Yueyi
> >
> > On 2018/12/6 23:03, Markus F.X.J. Oberhumer wrote:
> >> Hi Yueyi,
> >>
> >> yes, my LZO patch works for all cases.
> >>
> >> The reason behind the issue in the first place is that if KASLR
> >> includes the very last page 0xfffffffffffff000 then we do not have a
> >> valid C "pointer to an object" anymore because of address wraparound.
> >>
> >> Unrelated to my patch I'd argue that KASLR should *NOT* include the
> >> very last page - indeed that might cause similar wraparound problems
> >> in lots of code.
> >>
> >> Eg, look at this simple clear_memory() implementation:
> >>
> >> void clear_memory(char *p, size_t len) {
> >>          char *end = p + len;
> >>          while (p < end)
> >>                  *p++= 0;
> >> }
> >>
> >> Valid code like this will fail horribly when (p, len) is the very
> >> last virtual page (because end will be the NULL pointer in this case).
> >>
> >> Cheers,
> >> Markus
> >>
> >>
> >>
> >> On 2018-12-05 04:07, Yueyi Li wrote:
> >>> Hi Markus,
> >>>
> >>> Thanks for your review.
> >>>
> >>> On 2018/12/4 18:20, Markus F.X.J. Oberhumer wrote:
> >>>> Hi,
> >>>>
> >>>> I don't think that address space wraparound is legal in C, but I
> >>>> understand that we are in kernel land and if you really want to
> >>>> compress the last virtual page 0xfffffffffffff000 the following
> >>>> small patch should fix that dubious case.
> >>> I guess the VA 0xfffffffffffff000 is available because KASLR be
> >>> enabled. For this case we can see:
> >>>
> >>> crash> kmem 0xfffffffffffff000
> >>>         PAGE               PHYSICAL      MAPPING       INDEX CNT FLAGS
> >>> ffffffbfffffffc0        1fffff000 ffffffff1655ecb9  7181fd5  2
> >>> 8000000000064209 locked,uptodate,owner_priv_1,writeback,reclaim,swapbacked
> >>>
> >>>> This also avoids slowing down the the hot path of the compression
> >>>> core function.
> >>>>
> >>>> Cheers,
> >>>> Markus
> >>>>
> >>>>
> >>>>
> >>>> diff --git a/lib/lzo/lzo1x_compress.c b/lib/lzo/lzo1x_compress.c
> >>>> index 236eb21167b5..959dec45f6fe 100644
> >>>> --- a/lib/lzo/lzo1x_compress.c
> >>>> +++ b/lib/lzo/lzo1x_compress.c
> >>>> @@ -224,8 +224,8 @@ int lzo1x_1_compress(const unsigned char *in, size_t in_len,
> >>>>
> >>>>           while (l > 20) {
> >>>>                   size_t ll = l <= (M4_MAX_OFFSET + 1) ? l : (M4_MAX_OFFSET + 1);
> >>>> -               uintptr_t ll_end = (uintptr_t) ip + ll;
> >>>> -               if ((ll_end + ((t + ll) >> 5)) <= ll_end)
> >>>> +               // check for address space wraparound
> >>>> +               if (((uintptr_t) ip + ll + ((t + ll) >> 5)) <= (uintptr_t) ip)
> >>>>                           break;
> >>>>                   BUILD_BUG_ON(D_SIZE * sizeof(lzo_dict_t) > LZO1X_1_MEM_COMPRESS);
> >>>>                   memset(wrkmem, 0, D_SIZE * sizeof(lzo_dict_t));
> >>> I parsed panic ramdump and loaded CPU register values,  can see:
> >>>
> >>> -000|lzo1x_1_do_compress(
> >>>       |    in = 0xFFFFFFFFFFFFF000,
> >>>       |  ?,
> >>>       |    out = 0xFFFFFFFF2E2EE000,
> >>>       |    out_len = 0xFFFFFF801CAA3510,
> >>>       |  ?,
> >>>       |    wrkmem = 0xFFFFFFFF4EBC0000)
> >>>       |  dict = 0xFFFFFFFF4EBC0000
> >>>       |  op = 0x1
> >>>       |  ip = 0x9
> >>>       |  ii = 0x9
> >>>       |  in_end = 0x0
> >>>       |  ip_end = 0xFFFFFFFFFFFFFFEC
> >>>       |  m_len = 0
> >>>       |  m_off = 1922
> >>> -001|lzo1x_1_compress(
> >>>       |    in = 0xFFFFFFFFFFFFF000,
> >>>       |    in_len = 0,
> >>>       |    out = 0xFFFFFFFF2E2EE000,
> >>>       |    out_len = 0x00000001616FB7D0,
> >>>       |    wrkmem = 0xFFFFFFFF4EBC0000)
> >>>       |  ip = 0xFFFFFFFFFFFFF000
> >>>       |  op = 0xFFFFFFFF2E2EE000
> >>>       |  l = 4096
> >>>       |  t = 0
> >>>       |  ll = 4096
> >>>
> >>> ll = l = in_len = 4096 in lzo1x_1_compress,  so your patch is working
> >>> for this panic case, but, I`m
> >>> not sure, is it possible that in = 0xFFFFFFFFFFFFF000 and  in_len < 4096?
> >>>
> >>>
> >>> Thanks,
> >>> Yueyi
> >>>
> >
> >
>
> --
> Markus Oberhumer, <markus@oberhumer.com>, http://www.oberhumer.com/



-- 
Thanks,
//richard
