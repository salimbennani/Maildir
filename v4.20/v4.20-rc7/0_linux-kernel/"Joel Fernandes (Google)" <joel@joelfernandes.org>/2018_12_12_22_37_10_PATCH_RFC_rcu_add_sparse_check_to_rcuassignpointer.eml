Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 08:56:43 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 45AA958079D;
	Wed, 12 Dec 2018 14:37:26 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga001-1.jf.intel.com with ESMTP; 12 Dec 2018 14:37:26 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AV1AWWBafxC9qQ2dD6Yss7/X/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpcm5Yh7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyxPDJ2h?=
 =?us-ascii?q?YYUBDOQPOulXoYbmp1sWrxazHhWgCeD1xzNUnHL6wbE23uI8Gg/GxgwgGNcOvW?=
 =?us-ascii?q?zaoNvxM6cdT+S1x7TIwzrddfNW3y3y6I7VfR8/uvGHQLZ8f8vWyUkoGAPFikuf?=
 =?us-ascii?q?pYnrMziI0ekNsW+b4PRkVe+0iW4nrB9+ojyhxsgykInJgJgaylbZ+ipn24Y5P9?=
 =?us-ascii?q?q4SFR0YdO9FpZbqiKUN5NuT888X21lvDw2xqAItJKlZiQG1ZcqywLFZ/GGcYWE?=
 =?us-ascii?q?+gzvWeePLTtkgX9pZLeyiwuu/US81uHxU9S43VdWoiZYl9TBuGoC2ALd6sWCRP?=
 =?us-ascii?q?Zx40is2TiK2g/I7uxLP1o7mK/YJpMixrMwmJweulnZECDsgkX5lqqWe10k+ue2?=
 =?us-ascii?q?7+TnZa3rpoGTN4BqkAHyKKculdKlAeQ+LAcOW3KX+eOm1L3s5UH5QbNKgeMqkq?=
 =?us-ascii?q?TBrpzWOcAWqrSkDwJbzIov8QuzAjS63NgCnHQKLkpJeBedgIjoP1HOLur4DfC6?=
 =?us-ascii?q?g1m0lDdrxvbGPqDuA5nULXjMjq3hfbBj5E5Y0QYzyt5e55RKBbEbO//zREDxu8?=
 =?us-ascii?q?LCDhMjMAy73fznCNNj2YMaQ26PBbWZMKzKvV+S+u0vO/WMZJMSuDvlL/gl5v3u?=
 =?us-ascii?q?gmEjlV4SYKmkxp8XaHG+HvR7LESVe3vsgtEdEWgUugoyVvDliFqHUTRLfXa9Q7?=
 =?us-ascii?q?o85i0nCIKhFYrDRpqigL2d3CihGZ1afGBGCk2WHnfueIWJQPMMaCOUIs98nT0I?=
 =?us-ascii?q?T7mhS4k91R6wsA/20aZoLu3R+icAr5LsyMB15/HPlRE17TF0DcOd3H+XQ2F3mW?=
 =?us-ascii?q?MIQTk23KdkrEx5y1eD17V4gvNCGdxS4fNJThk1NZrGw+NmDNDyXxrLfs2VR1a+?=
 =?us-ascii?q?XtWmHTYxQ8orzN8VY0Z9HNaiggrZ3yWwAb8YjLiLBJ0y8qLB0Hn9Pcd9y3Da1K?=
 =?us-ascii?q?Y/i1kqWNdANWqjhqRn7QjcG5bJk1mFl6atbakc3zTC9GGZwWqKvUFXSghwUare?=
 =?us-ascii?q?UHAbZ0vWq8n550zYQ7+vD7QnLhVOycqYJqRWbd3piE1MRO3/N9TGf2Kxh2CwCA?=
 =?us-ascii?q?6VybyWcorlZX8R3CXHB0gCiAAc43CGOQ86BieipmLeCCdjFVbuY0Pq7Ol/p2m3?=
 =?us-ascii?q?Tk4yzwGWcUJh06C59QIShfyZU/kTxK4LuD89qzVoG1awx8/ZBMCepwV/ZqlcYc?=
 =?us-ascii?q?ky4FFc1W3HsQxwJZigL6Fkhl4DfAV7pULu1xNrCopelcgmtm8lzA13KaiAylNO?=
 =?us-ascii?q?ayuY3YzsOr3QMmTy4BGva6vR2lHC0NaX+r0D6Ogip1XkpgGpEksi83No09RO13?=
 =?us-ascii?q?uc55PKDBcdUJ7rU0Y38QR6qK/eYiUn+4zU0nhsO7GusjDew9IpGPclyhG4cthF?=
 =?us-ascii?q?NKOLCgDzHNMaBsS0M+MqhkWmYQgCPOBR8640Idird/+H2K6tIeZhkyiqjWVB4I?=
 =?us-ascii?q?BhzE2M8zBwRfLP35YA2/uYxBeIVy/gjFe9tcD6gYBFZSwIEmWj0yTlBY5Rabd0?=
 =?us-ascii?q?fYYEEmquJ8y3xtNjh5/iQXJY9VijB08Y18+tYxadc1v93QhI30QNvXOngTe4zy?=
 =?us-ascii?q?BzkzwxtKqf3TDBzP74dBUaPW5HXm9igkn2IYi1ltwVQFKnbww0mxS7/0b6wK5b?=
 =?us-ascii?q?qb97L2nSR0dIYif3I3tjUqu2qrqNfcpP5Ik0viVQVeS2eUqaRaLloxsGzyPjGH?=
 =?us-ascii?q?NTxTA6dz2wupT1hQd6iH+bLHtoqHrZeMdwxQrQ5dDGRP5R2CYGSzd8iTXNGle8?=
 =?us-ascii?q?ONyp982Ol5jfquC+S36hVppLfCnp14yArii75W5tARGlhPC8gN7nEQs70S/9yd?=
 =?us-ascii?q?ZqUz7FrBL9YontyqS7PvhrfkhuBF/g9cV6HptynZc3hJEVwXIanIma/WIbkWfv?=
 =?us-ascii?q?NtVWwaL/Y2AKRTIRwd7V4Q7l1VZnLnKIwYL5S3qcztFgZ9m8fmMZxCY949pWB6?=
 =?us-ascii?q?eT6bxOhTF1rUagrQLNffh9mS8Qyfg0534bme0JuBctwT+bArAdBkRYOS3slxKV?=
 =?us-ascii?q?79GxtqlXZWCvcaSu20p6h9yuELaCogREUnbjZpgiBTNw7tl4MF/U1X3z64Lkd8?=
 =?us-ascii?q?PKYdMdqBKUiAvAgPZPKJ0qiPUKnyVnNHn5vX0kze47kBNv0Yu7vIiBN2Vi4qa5?=
 =?us-ascii?q?DgREOT3yYsMZ4ivtgrpGnsaKw4CvGY1sGikMXJvtV/6pESgdtfL6NwaVCz08q2?=
 =?us-ascii?q?yWGb7eHQ+Z9UdnoGjDE5GtN3GLOnYZyc9uSwWaJExamAoURik1noYlFgC2w8zs?=
 =?us-ascii?q?aFx26SoW5l78txtA0OZoNwTkX2fbpQeobCo0SZeFIBpX6AFC+1naMciE4u1vGC?=
 =?us-ascii?q?FY+4WrrBaRJWyDewRIEWYJV1SGB1/5O7mh+8LA//KEBuakLPvOfLaOqfFYV/iS?=
 =?us-ascii?q?3pKiyY9m/zeKNsWSMXhuFfw72kxfXX9nH8TVgSkASysSlyjVdc6UuA+8+jFrrs?=
 =?us-ascii?q?C46PnqWAXv5ZaWC7tPK9pv/Qq6gbyEN+6WiyZ0MjJY1pIKxX/Vx7kTxl8Siydy?=
 =?us-ascii?q?dzazFbQMrzLCTKXVmqVPFR4UdztzNNdU76I7xgRNOdDUitL21r57j/45EVRFVU?=
 =?us-ascii?q?bmmsGme8MKOXy9NEjcCUaPNbSGIyDLws7tbaO9T71QkPtbtxmqtTmHFE/jOyyJ?=
 =?us-ascii?q?lyP1WBC3LeFMkCabMQREt4GgaRltE3bsTdL8Zh2/Md96ljk2wbwyhnPXOm8QKz?=
 =?us-ascii?q?l8c0VRrrKO6SNUmOlwG2tE7nB9N+mLhz6Z7/XEKpYRqfZrHiV0l+dA7Hsm0bda?=
 =?us-ascii?q?8CFES+JzmCbJqt5uolemkvSAyzZ9URpOrCpLi5yPvUl4JarZ8ZxAU27e/B0R9W?=
 =?us-ascii?q?WQFwgKp9x9B9zvoa9QzN3PlKP1KDha8tPU/dETB87bKM+cNHohMBzpGCPbDQcf?=
 =?us-ascii?q?TD6rM33fiFJZkP2I6nKVqZ06+dDQn88KS7lGRBk2G+kcB0BNAtMPOtF0UykinL?=
 =?us-ascii?q?rdi9QHtlSkqxyEDudds5SPeP+IB/zpJDuCxflrYBwHxb65Z8xHNIr232RgbVR+?=
 =?us-ascii?q?konQHUPWUd1W5Cp7YVln8w127HFiQzhriAreYQS37SpWTKbskw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AOAAC5jBFch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTCCOyeMFYwSgiGSQ4R8gXMSAQEYEwGHPiI0CQ0BAwEBAQEBAQI?=
 =?us-ascii?q?BEwEBAQgNCQgpIwyCNiQBgmkCLwENAQE3AQUJAlADMQEFATUFgxyCAgEEmzw8i?=
 =?us-ascii?q?h2CH4J2AQEFhyUIEodrgyOBHBc+gUGBEYNthBSFbYsygkiCS5BJCQKFOAeFCYc?=
 =?us-ascii?q?CI4lph1wBLJhsAgQCBAUCBQ8hgSVtgSF9CIMnghsMF4hehWAfMoEFAQGMawEB?=
X-IPAS-Result: =?us-ascii?q?A0AOAAC5jBFch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBgTC?=
 =?us-ascii?q?COyeMFYwSgiGSQ4R8gXMSAQEYEwGHPiI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpI?=
 =?us-ascii?q?wyCNiQBgmkCLwENAQE3AQUJAlADMQEFATUFgxyCAgEEmzw8ih2CH4J2AQEFhyU?=
 =?us-ascii?q?IEodrgyOBHBc+gUGBEYNthBSFbYsygkiCS5BJCQKFOAeFCYcCI4lph1wBLJhsA?=
 =?us-ascii?q?gQCBAUCBQ8hgSVtgSF9CIMnghsMF4hehWAfMoEFAQGMawEB?=
X-IronPort-AV: E=Sophos;i="5.56,346,1539673200"; 
   d="scan'208";a="43835166"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 12 Dec 2018 14:37:25 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728383AbeLLWhW (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 12 Dec 2018 17:37:22 -0500
Received: from mail-pg1-f193.google.com ([209.85.215.193]:38375 "EHLO
        mail-pg1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726294AbeLLWhV (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 12 Dec 2018 17:37:21 -0500
Received: by mail-pg1-f193.google.com with SMTP id g189so27842pgc.5
        for <linux-kernel@vger.kernel.org>; Wed, 12 Dec 2018 14:37:21 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=joelfernandes.org; s=google;
        h=from:to:cc:subject:date:message-id:mime-version
         :content-transfer-encoding;
        bh=UFd3YwLBcxp6yAJtaHUNNfNu3+WWgtg3kk2/4oOmH+A=;
        b=VwcrKzr+NN1op4Hpo0jqWBNkVB/J747Aftu0QtxghTC3DHZcYIP+PWd+aOGxkdlb6M
         isX82CLttb7zTTlRuC9PIDyVvF177pQZVPwT3RZDeaqhxxalKJCJCFjhtEUsrm9Rcfsu
         tJ0ihbpNh44b90EqWBGkFwBPz7YV/fzhDZP14=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:mime-version
         :content-transfer-encoding;
        bh=UFd3YwLBcxp6yAJtaHUNNfNu3+WWgtg3kk2/4oOmH+A=;
        b=NSnMyk0iJkoO6bfzCbcNNWqACRfFQj0mSbGp0pV/OIEe7IDN4zqNKO1D2CDnLXnomX
         /Wfj4NNTW1Ai7/wIZ2qoRmR43jadKNr+MnB0AIi7dRyKovjWrwJLMCsEMJdg5IxoGv4w
         ovsBh55bS9uL9yeBMm6VJayeY8n1RN2LsSloMjp9DlXMsz8kV3Z+F8Qa9Qhkcfng5pMu
         7/yh24x2s+heAlNEeixRG3MPEO4LBO7zoqqbiP7vIcM92OF+3JMB/GvNe3Uz2KdYcEHs
         rdMQpbp53rlbRogqJlgZP0kR5rgV/Uw2f+pW1wlQCAnsXPTjRUhrm+ZC6XLNl55CHF+6
         5SUg==
X-Gm-Message-State: AA+aEWaPCFIQdzRgcrW/b37c5qmflK0es6iE+GkVfq0EMLgaLiFuyzC1
        1huVmNJXm9YttBwc225DDYaLimPerbk=
X-Google-Smtp-Source: AFSGD/WwURh0hcAiQhwxElH0uTn1OtPDmZiHDK6e2iX3KEAdS2hVgd8uUBw8dZFDKYmMInsDANslSg==
X-Received: by 2002:aa7:8045:: with SMTP id y5mr21730423pfm.62.1544654240212;
        Wed, 12 Dec 2018 14:37:20 -0800 (PST)
Received: from joelaf.mtv.corp.google.com ([2620:0:1000:1601:3aef:314f:b9ea:889f])
        by smtp.gmail.com with ESMTPSA id g15sm45153pfj.131.2018.12.12.14.37.18
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Wed, 12 Dec 2018 14:37:19 -0800 (PST)
From: "Joel Fernandes (Google)" <joel@joelfernandes.org>
To: linux-kernel@vger.kernel.org
Cc: "Joel Fernandes (Google)" <joel@joelfernandes.org>,
        Josh Triplett <josh@joshtriplett.org>,
        Lai Jiangshan <jiangshanlai@gmail.com>,
        Mathieu Desnoyers <mathieu.desnoyers@efficios.com>,
        "Paul E. McKenney" <paulmck@linux.vnet.ibm.com>,
        Steven Rostedt <rostedt@goodmis.org>
Subject: [PATCH RFC] rcu: add sparse check to rcu_assign_pointer
Date: Wed, 12 Dec 2018 14:37:10 -0800
Message-Id: <20181212223710.215094-1-joel@joelfernandes.org>
X-Mailer: git-send-email 2.20.0.rc1.387.gf8505762e3-goog
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

rcu_assign_pointer currently doesn't do any sparse checking on a pointer
assigned. So its possible that a pointer that is not __rcu annotated is
assigned with rcu_assign_pointer without sparse complainting.
rcu_dereference already does such checking so lets also make
rcu_assign_pointer to do the same. The extra error could be helpful in
cases where an RCU pointer is assigned with rcu_assign_pointer but not
annotated with __rcu.

This doesn't generate any code in the normal case because __CHECKER__ is
defined only in the context of sparse.

Also we rename rcu_dereference_sparse to rcu_check_parse since the
checking now happens not only during derereferencing but also during
assignment.

Test: Introduced an rcu_assign_pointer in code and checked the output of
sparse with and without this change. The change correctly causes sparse
to throw an error.

Signed-off-by: Joel Fernandes (Google) <joel@joelfernandes.org>
---
 include/linux/rcupdate.h | 13 +++++++------
 1 file changed, 7 insertions(+), 6 deletions(-)

diff --git a/include/linux/rcupdate.h b/include/linux/rcupdate.h
index 4db8bcacc51a..9e6f10da7f26 100644
--- a/include/linux/rcupdate.h
+++ b/include/linux/rcupdate.h
@@ -309,16 +309,16 @@ static inline void rcu_preempt_sleep_check(void) { }
  */
 
 #ifdef __CHECKER__
-#define rcu_dereference_sparse(p, space) \
+#define rcu_check_sparse(p, space) \
 	((void)(((typeof(*p) space *)p) == p))
 #else /* #ifdef __CHECKER__ */
-#define rcu_dereference_sparse(p, space)
+#define rcu_check_sparse(p, space)
 #endif /* #else #ifdef __CHECKER__ */
 
 #define __rcu_access_pointer(p, space) \
 ({ \
 	typeof(*p) *_________p1 = (typeof(*p) *__force)READ_ONCE(p); \
-	rcu_dereference_sparse(p, space); \
+	rcu_check_sparse(p, space); \
 	((typeof(*p) __force __kernel *)(_________p1)); \
 })
 #define __rcu_dereference_check(p, c, space) \
@@ -326,13 +326,13 @@ static inline void rcu_preempt_sleep_check(void) { }
 	/* Dependency order vs. p above. */ \
 	typeof(*p) *________p1 = (typeof(*p) *__force)READ_ONCE(p); \
 	RCU_LOCKDEP_WARN(!(c), "suspicious rcu_dereference_check() usage"); \
-	rcu_dereference_sparse(p, space); \
+	rcu_check_sparse(p, space); \
 	((typeof(*p) __force __kernel *)(________p1)); \
 })
 #define __rcu_dereference_protected(p, c, space) \
 ({ \
 	RCU_LOCKDEP_WARN(!(c), "suspicious rcu_dereference_protected() usage"); \
-	rcu_dereference_sparse(p, space); \
+	rcu_check_sparse(p, space); \
 	((typeof(*p) __force __kernel *)(p)); \
 })
 #define rcu_dereference_raw(p) \
@@ -382,6 +382,7 @@ static inline void rcu_preempt_sleep_check(void) { }
 #define rcu_assign_pointer(p, v)					      \
 ({									      \
 	uintptr_t _r_a_p__v = (uintptr_t)(v);				      \
+	rcu_check_sparse(p, __rcu);				      \
 									      \
 	if (__builtin_constant_p(v) && (_r_a_p__v) == (uintptr_t)NULL)	      \
 		WRITE_ONCE((p), (typeof(p))(_r_a_p__v));		      \
@@ -785,7 +786,7 @@ static inline notrace void rcu_read_unlock_sched_notrace(void)
  */
 #define RCU_INIT_POINTER(p, v) \
 	do { \
-		rcu_dereference_sparse(p, __rcu); \
+		rcu_check_sparse(p, __rcu); \
 		WRITE_ONCE(p, RCU_INITIALIZER(v)); \
 	} while (0)
 
-- 
2.20.0.rc1.387.gf8505762e3-goog

