Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:41:26 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 2F336580380;
	Mon, 10 Dec 2018 10:03:39 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga006-1.fm.intel.com with ESMTP; 10 Dec 2018 10:03:38 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A+W7Y5Ramg1KeedBdk1soK1f/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpci4Zh7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v6bpgRh31hy?=
 =?us-ascii?q?cdLzM38H/ZhNF+gqxYuxKhvx5yzpXIbI2JLvdyYr/Rcc8GSWdHQ81fVzZBAoS5?=
 =?us-ascii?q?b4YXAeYPOfxUpJThqVcUsBCwHAqsC/ntyj9Jg3/5x6M22PkmHAHG2wwgGMgBsH?=
 =?us-ascii?q?LTrNXzKKsfUe+1wbLHzTXGdfxW2DP95JLUfRAmpPGBRLR9etfSx0k3Dw7JkEmc?=
 =?us-ascii?q?pIj/Mz+I2OkBrXKX4/djWO6zkWIqqgN8riCxyssxjoTFnJ8Zxk3Y+Slj3Yo4Id?=
 =?us-ascii?q?61RFRmbdOnEZZdsTyROZFsTcM4WW5ovT43yr0Ytp6/eygH0IonxxHBZPydaYSI?=
 =?us-ascii?q?4QzsVPyXIThmgHJpYrW/hwy98US4y+38UNe70EpSoyZbjtXBsmoB2wHd58SZUP?=
 =?us-ascii?q?dx40Ss1SqV2w3S6OxIOUU0mrDaK54lzL4wjJ0TsUHbEy/ymUX2irKWd0o99uir?=
 =?us-ascii?q?9evneLPmqYGYN4NtjQH/PKIuldKlAekjLAgOUHaU+f6m2L3g40L5WrNKgeMykq?=
 =?us-ascii?q?XDt5DaP8sbqrajAwBJyoYj9wq/DzC+3dQcnHkHL0xKdAiIjoj0IFzOJPH4DfGi?=
 =?us-ascii?q?g1WjijtrxvbGPqH/DZXJNHTMjLDhfbNl4U5G1AUz1cxf545TCrwZIPL8QE7xtM?=
 =?us-ascii?q?DCAR8+KQC0w/vnB8971oMRQm+PBq6ZMKXPsV6H/O4vIu+MZJMLtzb5MfQq+/nu?=
 =?us-ascii?q?jXohk18HYaapxYcXaGy/Hvl+IUWZZmTjjs0CEWcNuAo+SuvqhUaGUT5SYXayQq?=
 =?us-ascii?q?096is6CIKgEYfMWIStjKad0ye8G51cfnpGBUyUEXf0a4WEXO8BZziJIs9hlTwE?=
 =?us-ascii?q?VqKtS5U72hGsrwL6z7tnLuzJ+iwXr57j1d515/HNmhE27zB7E8Od02SVRWFugm?=
 =?us-ascii?q?wIXyM23Lx4oUFlyVeMy654j+ZcFdxS/fxJVAg6OIXYz+x7DdDyRw3Acs2ISFag?=
 =?us-ascii?q?XtWpHzUxQsgtzN8JZkZ3A8+igQzb3yq2H78VkKSGC4Eu/aLCwXf9PcZ9xGzA1K?=
 =?us-ascii?q?k6kVYmRMxDNWmlhq568wjeHIrJk0Sfl6a3eqUQxi/N9GGfzWWQuEFUShJ/UaLA?=
 =?us-ascii?q?XXoHfEvZscz55l/eT7+pEbkoLxFOydCcJadQat3ml1NGROz9N9TYeG+xn2awBR?=
 =?us-ascii?q?CVxrKDdobqemMd3DnDB0gAiQwc4XGGNQ0mDCe7v23eFCBuFU7oY0707el+qXa7?=
 =?us-ascii?q?TkgozwGKb0xtzaa19gQShfyGT/MT37QEuCg6pjVwHVa92c/WCtWaqwpgeqVcfc?=
 =?us-ascii?q?0y4FNd2W3FsAx9O4SqL7p+iV4GbwR3o0Tu2g1tBYVEj8cro20lzQpoJa2DzVNO?=
 =?us-ascii?q?aimX3ZbzOr3QNGn/5xSva6/Q2lHD39ea4KYP6PIkq1r9uAGlDFYt83Ji09NNyX?=
 =?us-ascii?q?uT+o3KDBYOUZL2Sks29wV6q6vGbSUn5oLU1WdjMa+7sjLZ39IpBe0lyguvfttF?=
 =?us-ascii?q?MaOEEhPyHNMeB8S0NOMqnF2pZAoePO9O7K40I9+md/ye1a6xPeZvgCipjX5a74?=
 =?us-ascii?q?B6yE6M8TRzSvTJ35oc3/6XxA+HWCrig1e7tcD3n5tJZTUTHmq51CjlC5RdZqx0?=
 =?us-ascii?q?fYYXF2iuJ9e7ycl5h57oQ3RY7kKsB0sa2M+1fhqfd1z83QxK2UUXu3Cngja4zz?=
 =?us-ascii?q?pvnjEtr6qf2jHOwuv4eBoGPG5LWHdtjVP2LYeoiNAaWVCibxI1mxu9+Ub6269b?=
 =?us-ascii?q?qbx9L2bJW0dIfCv2L2Z4XqurrLWCYM1P6JIusSpJVuSxelSaSr/7oxsH3CLvBW?=
 =?us-ascii?q?pexDYndz60vpX1hQB1iGWYLHxrtnrWZdlwxQvD5NzbXfNQ3iAJRC5ihTnVB1i8?=
 =?us-ascii?q?OcKk/dGVl5fFr+C/WHitVpxVcSn304yAsDG36nFtAR26h/qzgMHoERAm0S/n0N?=
 =?us-ascii?q?lnTSbIowz9YoXx16S6LPhofk9nBFLn78p6G4d+kpY/hZ0K2HgagImV8mQDkWvp?=
 =?us-ascii?q?Ldpb3qf+ZmIXRTEX297V/BTl2Ep7I3KMxoL5VW+SztFvZtakeWMWxjwy79pRB6?=
 =?us-ascii?q?iK9rxEkjB4ol65rQLXfPh8kS0Ryfoo6H4Gne4JvBAhwTmaArAXBUNYJzDjlwyU?=
 =?us-ascii?q?79Ciq6VafHqvcb+11EZknNGuFreCohxHWHbie5cvBitw7sR5MFLR33z/8IDkeN?=
 =?us-ascii?q?/Mbd0Nsh2YiQvPj+9QKJgpjPoFmTJnOX7hvX0i0+M0lgZh3Za+vIiaMWlt+L+5?=
 =?us-ascii?q?DwVcNj30YcMT5z7sgbxfnsaQw4CgAJFhFi8XU5vvSPKiCCgSuuj/NwaSDD08rW?=
 =?us-ascii?q?+WGbjFEg+a9khmtGjDE4yxO3GUOXkZzshiRB+HK0xEmw0UWDQ6npgkFgGl3sDh?=
 =?us-ascii?q?cUF55iwP6V78sBdD1uVoNxznWGfFuAiocis0SISYLBdO7gBC4FrVMdWD7u1pGS?=
 =?us-ascii?q?FU5IahrAuLKmyUfAlICWAJWkqZB1HsJLWu5N/A8/SGCeq6NffBfbKOqelGXfeS?=
 =?us-ascii?q?2Z2vypdm/yqLNsiXPnltEfw72klAXXB4AcjZmC8PSysYly3Tdc6buQy89zZzrs?=
 =?us-ascii?q?C+9vTrRQ3u6ZGOC7tULdVg5RS2jb2fOO6XgSZzMSxY2Y8UxX/U1Lgf20YfhDtz?=
 =?us-ascii?q?dza2C7QPqy7MQLjUmq9WFBMbbyJzNM1V76MzxAVNOMjbis/r2b58lPI6F1BFVV?=
 =?us-ascii?q?n5kMGzecMKO329NE/ABEuTKLSGJDjLz9vrbq+mVbJQjPtbtxurtDafEk/jOCmD?=
 =?us-ascii?q?ljbzWxCuN+FMkD+UPBhEtI6hdRZtDHDpTMj6ZR2jLN93kTo2zKU0h3zQM24cND?=
 =?us-ascii?q?l8c0VVobyR7SNXmPN/G2Na43phLOmEnTuZ7ubCJpYXt/trHjp7l+ZA7HsmzLtV?=
 =?us-ascii?q?6XIMePsgnSrUodlGuVyqkuCTjDFgVV4GoyxJjYSjuURkJLWf959cVHKC9xUIvk?=
 =?us-ascii?q?uKDBFf7fkjQuep84dTw9rOkau5YGNC9NXd+8waX5XbAM2COXsldxHuHWiHX0M+?=
 =?us-ascii?q?UTe3ODSH1ARmm/aI+yjNow=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BPAwANqg5ch0O0hNFkHQIfBQ2BRwKDa?=
 =?us-ascii?q?o0ZizBSBoFJiQ9ug3yJRBSCHgGCF4VWIjYHDQEDAQEBAQEBAgETAQEBCA0JCCk?=
 =?us-ascii?q?vgjYigmwCJDUdBgkCKxQRAwwUGSIXgxyBaQELDAEFpy4WBQEXGgKHEgoZgRGBP?=
 =?us-ascii?q?4whgQ+BB4kMhXMCiTYDCYV7fI9nVQcBAQKGRIshCooAA4Q4gngsiHaRWweCAHC?=
 =?us-ascii?q?DPZBpgWcBAQGJTSuCIAEB?=
X-IPAS-Result: =?us-ascii?q?A0BPAwANqg5ch0O0hNFkHQIfBQ2BRwKDao0ZizBSBoFJiQ9?=
 =?us-ascii?q?ug3yJRBSCHgGCF4VWIjYHDQEDAQEBAQEBAgETAQEBCA0JCCkvgjYigmwCJDUdB?=
 =?us-ascii?q?gkCKxQRAwwUGSIXgxyBaQELDAEFpy4WBQEXGgKHEgoZgRGBP4whgQ+BB4kMhXM?=
 =?us-ascii?q?CiTYDCYV7fI9nVQcBAQKGRIshCooAA4Q4gngsiHaRWweCAHCDPZBpgWcBAQGJT?=
 =?us-ascii?q?SuCIAEB?=
X-IronPort-AV: E=Sophos;i="5.56,339,1539673200"; 
   d="scan'208";a="43465268"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 10 Dec 2018 10:03:33 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728967AbeLJSDb (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 10 Dec 2018 13:03:31 -0500
Received: from mfb01-md.ns.itscom.net ([175.177.155.109]:39361 "EHLO
        mfb01-md.ns.itscom.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727190AbeLJSDb (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 10 Dec 2018 13:03:31 -0500
X-Greylist: delayed 412 seconds by postgrey-1.27 at vger.kernel.org; Mon, 10 Dec 2018 13:03:30 EST
Received: from mail05-md.ns.itscom.net (mail05-md.ns.itscom.net [175.177.155.115])
        by mfb01-md.ns.itscom.net (Postfix) with ESMTP id 55FC5238C21
        for <linux-kernel@vger.kernel.org>; Tue, 11 Dec 2018 02:56:38 +0900 (JST)
Received: from scan26-mds.s.noc.itscom.net (scan26-md.ns.itscom.net [175.177.155.80])
        by mail05-md-outgoing.ns.itscom.net (Postfix) with ESMTP id A8374658562;
        Tue, 11 Dec 2018 02:56:36 +0900 (JST)
Received: from unknown (HELO mail04-md-outgoing.ns.itscom.net) ([175.177.155.114])
  by scan26-mds.s.noc.itscom.net with ESMTP; 11 Dec 2018 02:56:36 +0900
Received: from jromail.nowhere (h219-110-198-186.catv02.itscom.jp [219.110.198.186])
        by mail04-md-outgoing.ns.itscom.net (Postfix) with ESMTP;
        Tue, 11 Dec 2018 02:56:36 +0900 (JST)
Received: from jro by jrobl id 1gWPnI-0000EC-9P ; Tue, 11 Dec 2018 02:56:36 +0900
From: "J. R. Okajima" <hooanon05g@gmail.com>
To: mingo@redhat.com, arjan@linux.intel.com
Cc: linux-kernel@vger.kernel.org
Subject: Q. re-using lock_classes[]
Date: Tue, 11 Dec 2018 02:56:36 +0900
Message-ID: <879.1544464596@jrobl>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hello,

"Troubleshooting" section in Documentation/locking/lockdep-design.txt
describes
----------------------------------------
1.	Repeated module loading and unloading while running the validator
	will result in lock-class leakage.  The issue here is that each
	load of the module will create a new set of lock classes for
	that module's locks, but module unloading does not remove old
	classes (see below discussion of reuse of lock classes for why).
	Therefore, if that module is loaded and unloaded repeatedly,
	the number of lock classes will eventually reach the maximum.
:::
One might argue that the validator should be modified to allow
lock classes to be reused.  However, if you are tempted to make this
argument, first review the code and think through the changes that would
be required, keeping in mind that the lock classes to be removed are
likely to be linked into the lock-dependency graph.  This turns out to
be harder to do than to say.
----------------------------------------

I am wondering these
	"module unloading does not remove old classes"
	"the lock classes to be removed are likely to be linked into the
	lock-dependency graph"
sentences are still valid?
Does "the lock-dependency graph" mean
	class->hash_entry
	class->lock_entry
	and/or
	list_entries[]?
Those are handled by zap_class() at unloading the module.

Here is my question.
Doesn't zap_class() make the slot in lock_classes[] logically unused?
If so, can we re-use the unused slot by searchng and testing some
members in struct lock_class?  For example,

bool test_unused(class)
{
	return !rcu_access_pointer(class->name)
		&& !rcu_access_pointer(class->key)
		&& list_empty(&class->lock_entry)
		&& hlist_unhashed(&class->hash_entry);
}

Though a new function list_del_init_rcu() for zap_class() will be
necessary.


J. R. Okajima
