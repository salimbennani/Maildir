Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  16 Dec 2018 10:42:01 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id BF0575805F0
	for <like.xu@linux.intel.com>; Sat, 15 Dec 2018 06:05:17 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga002-1.jf.intel.com with ESMTP; 15 Dec 2018 06:05:17 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A7hBxghNvEbn7EJdeoT0l6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0IvX8rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0yRD+s7bpkSAXwhS?=
 =?us-ascii?q?kHKTA3/mLZhc5+jKxGuBKspR5xzoHJbIybKPZxYLjdcMgGSWZdRMtdSzBNDp+g?=
 =?us-ascii?q?Y4YJEuEPPfxYr474p1YWohW+HwisC//ywTJVgn/5x6463Po8GgzBwgMvBNYOv2?=
 =?us-ascii?q?7XrNrrL6oSS/66w7TIzTrZc/Nawyvy6I/Nch04p/yHQLF+cdLJxEUxCw/IjU+c?=
 =?us-ascii?q?pZH4Mz6WzOgBrWaW4up6We6yiWMrsx99riSry8s2l4XEiJwZxkrZ+Sh6zos5P8?=
 =?us-ascii?q?O0RU19bNW5CpVfrTuaOJFzQs46Q2FnpiI6yroetJ6/fSgK04gnxwXFZ/yIdYiI?=
 =?us-ascii?q?/wjvVOGLITd3nH5lebS/iAiu8UW41OHwSsq53ExXoiZYkdTArG4B2hLT58SdV/?=
 =?us-ascii?q?dw/F+t2TOV2ADS7uFEL1o0la3eK5M5274/iJ8TsVnaEiDrhkr2krGZdkE99uez?=
 =?us-ascii?q?7OTnf7PmqYOCOI9vjQ3+NqUums+hDugiPQkOQnCW+eC91L3l4E34T69Gjvwwkq?=
 =?us-ascii?q?nFrp/aId4XqbK+Aw9QyYsj7RG/DzGp0NQegHkLNlVFeAiIj4TxIVHBPOj4Deuj?=
 =?us-ascii?q?g1SriDprw/HGPr7/DZnXIXnDjazsfbJ8605a1QoywspT55NSCrEdPv3zXlX9u8?=
 =?us-ascii?q?DfDh88YESJxf36AoB9yp8GQjDIRauYK7/J91mP4O0pPq+LfoBSvT/8L/0s4bnp?=
 =?us-ascii?q?lWM4nlkGOrCk2IZSZH2mE/A1HkOCfHC5h94AFXsN7BMzSfGvhFCcXDoWfXurQq?=
 =?us-ascii?q?8n+hk9D4SpC5qFQZqi16ec1iW2FYEDe2ZdF1qXGm3pfYjXZ/BZcS+XP4ptnyIJ?=
 =?us-ascii?q?UZCnTIku0wzosxX1mJR9Ke+B1zcZvtrJ0NF26qWHmBs2/D95J96Q32GEUyd/mW?=
 =?us-ascii?q?ZeFGx+57x2vUEokgTL6qN/mfENTdE=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0COAAAaCRVchxHrdtBkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBVAQBAQsBgTCCYox0ixmUaIZwFBgUh0ciNwYNAQMBAQEBAQECARMBAQEKCwk?=
 =?us-ascii?q?IGw4vgjYFAgMYCYJcAwMBAiQfCikDAwECBgEBSAgDAVMZBYMdggEBBKYRM4VAh?=
 =?us-ascii?q?G+MPheBQD+JDoV1AolChgt+kE4JkU8LGIlzh18sgRKCSJVegVyBeDMaCBsVO4J?=
 =?us-ascii?q?sgicXjjwiMYEHHIp+gXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0COAAAaCRVchxHrdtBkHAEBAQQBAQcEAQGBVAQBAQsBgTC?=
 =?us-ascii?q?CYox0ixmUaIZwFBgUh0ciNwYNAQMBAQEBAQECARMBAQEKCwkIGw4vgjYFAgMYC?=
 =?us-ascii?q?YJcAwMBAiQfCikDAwECBgEBSAgDAVMZBYMdggEBBKYRM4VAhG+MPheBQD+JDoV?=
 =?us-ascii?q?1AolChgt+kE4JkU8LGIlzh18sgRKCSJVegVyBeDMaCBsVO4JsgicXjjwiMYEHH?=
 =?us-ascii?q?Ip+gXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,357,1539673200"; 
   d="scan'208";a="44184813"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 15 Dec 2018 06:05:17 -0800
Received: from localhost ([::1]:39179 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gYAZA-0005Sp-8A
	for like.xu@linux.intel.com; Sat, 15 Dec 2018 09:05:16 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:34530)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <eblake@redhat.com>) id 1gYAOJ-0004vL-DW
	for qemu-devel@nongnu.org; Sat, 15 Dec 2018 08:54:04 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <eblake@redhat.com>) id 1gYAOG-0008Fp-W1
	for qemu-devel@nongnu.org; Sat, 15 Dec 2018 08:54:03 -0500
Received: from mx1.redhat.com ([209.132.183.28]:36528)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <eblake@redhat.com>)
	id 1gYAOE-0008D2-87; Sat, 15 Dec 2018 08:53:58 -0500
Received: from smtp.corp.redhat.com (int-mx06.intmail.prod.int.phx2.redhat.com
	[10.5.11.16])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 8933FC049599;
	Sat, 15 Dec 2018 13:53:57 +0000 (UTC)
Received: from red.redhat.com (ovpn-122-76.rdu2.redhat.com [10.10.122.76])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 548BC5C1B2;
	Sat, 15 Dec 2018 13:53:56 +0000 (UTC)
From: Eric Blake <eblake@redhat.com>
To: qemu-devel@nongnu.org
Date: Sat, 15 Dec 2018 07:53:15 -0600
Message-Id: <20181215135324.152629-14-eblake@redhat.com>
In-Reply-To: <20181215135324.152629-1-eblake@redhat.com>
References: <20181215135324.152629-1-eblake@redhat.com>
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.16
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.31]);
	Sat, 15 Dec 2018 13:53:57 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [PATCH v2 13/22] nbd/client: Split out
 nbd_send_one_meta_context()
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: nsoffer@redhat.com, vsementsov@virtuozzo.com, jsnow@redhat.com,
	rjones@redhat.com, qemu-block@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Refactor nbd_negotiate_simple_meta_context() to pull out the
code that can be reused to send a LIST request for 0 or 1 query.
No semantic change.

Signed-off-by: Eric Blake <eblake@redhat.com>

---
v2: split patch into easier-to-review pieces [Rich, Vladimir]
---
 nbd/client.c     | 64 ++++++++++++++++++++++++++++++++++--------------
 nbd/trace-events |  2 +-
 2 files changed, 46 insertions(+), 20 deletions(-)

diff --git a/nbd/client.c b/nbd/client.c
index b6a85fc3ef8..5b6b9964097 100644
--- a/nbd/client.c
+++ b/nbd/client.c
@@ -627,6 +627,48 @@ static QIOChannel *nbd_receive_starttls(QIOChannel *ioc,
     return QIO_CHANNEL(tioc);
 }

+/* nbd_send_one_meta_context:
+ * Send 0 or 1 set/list meta context queries.
+ * return 0 on success, -1 with errp set for any error
+ */
+static int nbd_send_one_meta_context(QIOChannel *ioc,
+                                     uint32_t opt,
+                                     const char *export,
+                                     const char *query,
+                                     Error **errp)
+{
+    int ret;
+    uint32_t export_len = strlen(export);
+    uint32_t queries = !!query;
+    uint32_t context_len = 0;
+    uint32_t data_len;
+    char *data;
+    char *p;
+
+    data_len = sizeof(export_len) + export_len + sizeof(queries);
+    if (query) {
+        context_len = strlen(query);
+        data_len += sizeof(context_len) + context_len;
+    } else {
+        assert(opt == NBD_OPT_LIST_META_CONTEXT);
+    }
+    data = g_malloc(data_len);
+    p = data;
+
+    trace_nbd_opt_meta_request(nbd_opt_lookup(opt), query ?: "(all)", export);
+    stl_be_p(p, export_len);
+    memcpy(p += sizeof(export_len), export, export_len);
+    stl_be_p(p += export_len, queries);
+    if (query) {
+        stl_be_p(p += sizeof(uint32_t), context_len);
+        memcpy(p += sizeof(context_len), query, context_len);
+    }
+
+    ret = nbd_send_option_request(ioc, opt, data_len, data, errp);
+    g_free(data);
+    return ret;
+}
+
 /* nbd_negotiate_simple_meta_context:
  * Request the server to set the meta context for export @info->name
  * using @info->x_dirty_bitmap with a fallback to "base:allocation",
@@ -651,26 +693,10 @@ static int nbd_negotiate_simple_meta_context(QIOChannel *ioc,
     NBDOptionReply reply;
     const char *context = info->x_dirty_bitmap ?: "base:allocation";
     bool received = false;
-    uint32_t export_len = strlen(info->name);
-    uint32_t context_len = strlen(context);
-    uint32_t data_len = sizeof(export_len) + export_len +
-                        sizeof(uint32_t) + /* number of queries */
-                        sizeof(context_len) + context_len;
-    char *data = g_malloc(data_len);
-    char *p = data;

-    trace_nbd_opt_meta_request(context, info->name);
-    stl_be_p(p, export_len);
-    memcpy(p += sizeof(export_len), info->name, export_len);
-    stl_be_p(p += export_len, 1);
-    stl_be_p(p += sizeof(uint32_t), context_len);
-    memcpy(p += sizeof(context_len), context, context_len);
-
-    ret = nbd_send_option_request(ioc, NBD_OPT_SET_META_CONTEXT, data_len, data,
-                                  errp);
-    g_free(data);
-    if (ret < 0) {
-        return ret;
+    if (nbd_send_one_meta_context(ioc, NBD_OPT_SET_META_CONTEXT,
+                                  info->name, context, errp) < 0) {
+        return -1;
     }

     if (nbd_receive_option_reply(ioc, NBD_OPT_SET_META_CONTEXT, &reply,
diff --git a/nbd/trace-events b/nbd/trace-events
index 446d10b8603..00872a6f9d4 100644
--- a/nbd/trace-events
+++ b/nbd/trace-events
@@ -11,7 +11,7 @@ nbd_receive_query_exports_start(const char *wantname) "Querying export list for
 nbd_receive_query_exports_success(const char *wantname) "Found desired export name '%s'"
 nbd_receive_starttls_new_client(void) "Setting up TLS"
 nbd_receive_starttls_tls_handshake(void) "Starting TLS handshake"
-nbd_opt_meta_request(const char *context, const char *export) "Requesting to set meta context %s for export %s"
+nbd_opt_meta_request(const char *optname, const char *context, const char *export) "Requesting %s %s for export %s"
 nbd_opt_meta_reply(const char *context, uint32_t id) "Received mapping of context %s to id %" PRIu32
 nbd_receive_negotiate(void *tlscreds, const char *hostname) "Receiving negotiation tlscreds=%p hostname=%s"
 nbd_receive_negotiate_magic(uint64_t magic) "Magic is 0x%" PRIx64
-- 
2.17.2


