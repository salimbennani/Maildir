Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 08:55:52 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 41CF95807A2
	for <like.xu@linux.intel.com>; Wed, 12 Dec 2018 13:50:40 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga007-1.jf.intel.com with ESMTP; 12 Dec 2018 13:50:40 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AsVV2chbvBhTRjgmx5VX7gRr/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZrsm+bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjmk8qxlSgLniD?=
 =?us-ascii?q?0fOjA57m/ZhM9+g6BVoB2uuxNxzJPaYJmXOfR8ca7RYN0XSXZfUcZKTCFBHpq8?=
 =?us-ascii?q?YpETA+YdIepVrY/wrEYOoxukAgmsAfvixDhSiX/swaI2yvgsEQfb0ww6BdUFrX?=
 =?us-ascii?q?LarMjvNKgMS++10bTDwDLGb/xMwzfy9JLHchY8rvGWQ718a87RyVQ1FwzblFqQ?=
 =?us-ascii?q?tJfoPymL2esQs2iU9fZgWfizhG4grgF8uz6izdovhInRno8Z1EzI+CZjzIooON?=
 =?us-ascii?q?G1S1R3bcCqHZZQrS2WKol7Tts8T210vCs20KAKtJClcCQQ1ZgqxBDSZ+aZf4WL?=
 =?us-ascii?q?5B/oSfyfLi1ihH1/fbKynxay/lakyu37TsS01FdKrjFZktnXrHwN2BrT6tWdRv?=
 =?us-ascii?q?t65Eeh1i6D1wHV6u5aPUA5jbTXJ4Iiz7Iqi5YfrEfOEjXolEj4jKKabFgo9+qw?=
 =?us-ascii?q?5+TieLrmp5ucN4FuigH5N6QjgtW/Dvo9MggTRmSU5Pqz1KP98k39WblFlfo2kr?=
 =?us-ascii?q?TfsJ/GO8sbvam1AwtU0oYg9RmzFTin0MkAkHkDLVJFfg+HjofzN1HPJvD4Eemw?=
 =?us-ascii?q?g1C2nDh3wPDGO6bsApPKLnjFn7fhe6t951RbyAopwtBT/4hUBa0ZIPLvRk/xs8?=
 =?us-ascii?q?TVDhs4Mwy33enrEtp81p4FVGKLA6+ZNr7SsFCS6uIuJemMeJEauDLnJ/c54P7u?=
 =?us-ascii?q?iCxxpFkGYKP83YcLcGvqWbNiIl6FejzqhdEOF3pMuRAxC+njiVmHWDgUYG6uXq?=
 =?us-ascii?q?U6/XYiBYe7SIvOWI2p04GHxzqxS5hfZ2RaDQKVHHL1MomJRfoILTifO9JsiSAs?=
 =?us-ascii?q?U7+nRIk8kxa0u1jh1rBlI+HIrzAero/pz9Nv5ufexi01oCV5CtnY32yTQmVcmG?=
 =?us-ascii?q?QOSDkrmqdlrh9T0FCGhI1xmfcdPNpf/XIBdhogOJfBh7h/Asr5UwTNZNrPTEu8?=
 =?us-ascii?q?T9y7KSs8QtI435kFZEMrSIbqtQzKwyf/W+xdrLeMHpFhqq8=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0B7AwBagRFcmBHrdtBkHgEGBwaBZYExg?=
 =?us-ascii?q?mKDfIh4izSbVxAYFIc+IjgSAQMBAQEBAQECARMBAQEBAQgLCwYbDi+CNgUCAxg?=
 =?us-ascii?q?JglwDAwECFwkEHwopAwMBAgYBASQCIgQCAgMBUxkFgxyCAgEEpwZ8M4VAg1+BD?=
 =?us-ascii?q?YELizGCFoERixeCVwKJPYYIe5BMBwKRTAsYiWmHXZk/gV2BdzMaI4M8gicXEo4?=
 =?us-ascii?q?QPDGBBxyKWIF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0B7AwBagRFcmBHrdtBkHgEGBwaBZYExgmKDfIh4izSbVxA?=
 =?us-ascii?q?YFIc+IjgSAQMBAQEBAQECARMBAQEBAQgLCwYbDi+CNgUCAxgJglwDAwECFwkEH?=
 =?us-ascii?q?wopAwMBAgYBASQCIgQCAgMBUxkFgxyCAgEEpwZ8M4VAg1+BDYELizGCFoERixe?=
 =?us-ascii?q?CVwKJPYYIe5BMBwKRTAsYiWmHXZk/gV2BdzMaI4M8gicXEo4QPDGBBxyKWIF3A?=
 =?us-ascii?q?QE?=
X-IronPort-AV: E=Sophos;i="5.56,346,1539673200"; 
   d="scan'208";a="57238534"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 12 Dec 2018 13:49:48 -0800
Received: from localhost ([::1]:48294 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gXCO3-0001zn-S9
	for like.xu@linux.intel.com; Wed, 12 Dec 2018 16:49:47 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:53330)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <marcandre.lureau@redhat.com>) id 1gXCNg-0001wD-H2
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 16:49:27 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <marcandre.lureau@redhat.com>) id 1gXCNc-00061y-Gs
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 16:49:24 -0500
Received: from mx1.redhat.com ([209.132.183.28]:26634)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <marcandre.lureau@redhat.com>)
	id 1gXCNa-0005pw-ED
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 16:49:20 -0500
Received: from smtp.corp.redhat.com (int-mx03.intmail.prod.int.phx2.redhat.com
	[10.5.11.13])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id D0B329F75D
	for <qemu-devel@nongnu.org>; Wed, 12 Dec 2018 21:49:12 +0000 (UTC)
Received: from localhost (ovpn-112-51.ams2.redhat.com [10.36.112.51])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 12E42608EB;
	Wed, 12 Dec 2018 21:49:09 +0000 (UTC)
From: =?UTF-8?q?Marc-Andr=C3=A9=20Lureau?= <marcandre.lureau@redhat.com>
To: qemu-devel@nongnu.org
Date: Thu, 13 Dec 2018 01:48:25 +0400
Message-Id: <20181212214850.29953-4-marcandre.lureau@redhat.com>
In-Reply-To: <20181212214850.29953-1-marcandre.lureau@redhat.com>
References: <20181212214850.29953-1-marcandre.lureau@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.13
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.39]);
	Wed, 12 Dec 2018 21:49:12 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [PATCH v6 03/28] hw: apply machine compat properties
 without touching globals
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: imammedo@redhat.com, ehabkost@redhat.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Similarly to accel properties, move compat properties out of globals
registration, and apply the machine compat properties during
device_post_init().

Signed-off-by: Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com>
---
 include/hw/boards.h        |  3 +-
 hw/arm/virt.c              | 27 ++++++++----
 hw/core/machine.c          | 19 +--------
 hw/core/qdev.c             |  2 +
 hw/i386/pc_piix.c          | 87 +++++++++++++++++++++++++-------------
 hw/i386/pc_q35.c           | 33 ++++++++++-----
 hw/ppc/spapr.c             | 42 ++++++++++++------
 hw/s390x/s390-virtio-ccw.c | 30 ++++++++-----
 vl.c                       |  1 -
 9 files changed, 150 insertions(+), 94 deletions(-)

diff --git a/include/hw/boards.h b/include/hw/boards.h
index 92aa43a40e..f02d5a1bbd 100644
--- a/include/hw/boards.h
+++ b/include/hw/boards.h
@@ -69,7 +69,6 @@ int machine_kvm_shadow_mem(MachineState *machine);
 int machine_phandle_start(MachineState *machine);
 bool machine_dump_guest_core(MachineState *machine);
 bool machine_mem_merge(MachineState *machine);
-void machine_register_compat_props(MachineState *machine);
 HotpluggableCPUList *machine_query_hotpluggable_cpus(MachineState *machi=
ne);
 void machine_set_cpu_numa_node(MachineState *machine,
                                const CpuInstanceProperties *props,
@@ -191,7 +190,7 @@ struct MachineClass {
     const char *default_machine_opts;
     const char *default_boot_order;
     const char *default_display;
-    GArray *compat_props;
+    GPtrArray *compat_props;
     const char *hw_version;
     ram_addr_t default_ram_size;
     const char *default_cpu_type;
diff --git a/hw/arm/virt.c b/hw/arm/virt.c
index 6b534b4f10..91c8cdc275 100644
--- a/hw/arm/virt.c
+++ b/hw/arm/virt.c
@@ -1879,7 +1879,8 @@ static GlobalProperty virt_compat_3_1[] =3D {
 static void virt_machine_3_1_options(MachineClass *mc)
 {
     virt_machine_4_0_options(mc);
-    SET_MACHINE_COMPAT(mc, virt_compat_3_1);
+    compat_props_add(mc->compat_props,
+                     virt_compat_3_1, G_N_ELEMENTS(virt_compat_3_1));
 }
 DEFINE_VIRT_MACHINE(3, 1)
=20
@@ -1890,7 +1891,8 @@ static GlobalProperty virt_compat_3_0[] =3D {
 static void virt_machine_3_0_options(MachineClass *mc)
 {
     virt_machine_3_1_options(mc);
-    SET_MACHINE_COMPAT(mc, virt_compat_3_0);
+    compat_props_add(mc->compat_props,
+                     virt_compat_3_0, G_N_ELEMENTS(virt_compat_3_0));
 }
 DEFINE_VIRT_MACHINE(3, 0)
=20
@@ -1903,7 +1905,8 @@ static void virt_machine_2_12_options(MachineClass =
*mc)
     VirtMachineClass *vmc =3D VIRT_MACHINE_CLASS(OBJECT_CLASS(mc));
=20
     virt_machine_3_0_options(mc);
-    SET_MACHINE_COMPAT(mc, virt_compat_2_12);
+    compat_props_add(mc->compat_props,
+                     virt_compat_2_12, G_N_ELEMENTS(virt_compat_2_12));
     vmc->no_highmem_ecam =3D true;
     mc->max_cpus =3D 255;
 }
@@ -1918,7 +1921,8 @@ static void virt_machine_2_11_options(MachineClass =
*mc)
     VirtMachineClass *vmc =3D VIRT_MACHINE_CLASS(OBJECT_CLASS(mc));
=20
     virt_machine_2_12_options(mc);
-    SET_MACHINE_COMPAT(mc, virt_compat_2_11);
+    compat_props_add(mc->compat_props,
+                     virt_compat_2_11, G_N_ELEMENTS(virt_compat_2_11));
     vmc->smbios_old_sys_ver =3D true;
 }
 DEFINE_VIRT_MACHINE(2, 11)
@@ -1930,7 +1934,8 @@ static GlobalProperty virt_compat_2_10[] =3D {
 static void virt_machine_2_10_options(MachineClass *mc)
 {
     virt_machine_2_11_options(mc);
-    SET_MACHINE_COMPAT(mc, virt_compat_2_10);
+    compat_props_add(mc->compat_props,
+                     virt_compat_2_10, G_N_ELEMENTS(virt_compat_2_10));
     /* before 2.11 we never faulted accesses to bad addresses */
     mc->ignore_memory_transaction_failures =3D true;
 }
@@ -1943,7 +1948,8 @@ static GlobalProperty virt_compat_2_9[] =3D {
 static void virt_machine_2_9_options(MachineClass *mc)
 {
     virt_machine_2_10_options(mc);
-    SET_MACHINE_COMPAT(mc, virt_compat_2_9);
+    compat_props_add(mc->compat_props,
+                     virt_compat_2_9, G_N_ELEMENTS(virt_compat_2_9));
 }
 DEFINE_VIRT_MACHINE(2, 9)
=20
@@ -1956,7 +1962,8 @@ static void virt_machine_2_8_options(MachineClass *=
mc)
     VirtMachineClass *vmc =3D VIRT_MACHINE_CLASS(OBJECT_CLASS(mc));
=20
     virt_machine_2_9_options(mc);
-    SET_MACHINE_COMPAT(mc, virt_compat_2_8);
+    compat_props_add(mc->compat_props,
+                     virt_compat_2_8, G_N_ELEMENTS(virt_compat_2_8));
     /* For 2.8 and earlier we falsely claimed in the DT that
      * our timers were edge-triggered, not level-triggered.
      */
@@ -1973,7 +1980,8 @@ static void virt_machine_2_7_options(MachineClass *=
mc)
     VirtMachineClass *vmc =3D VIRT_MACHINE_CLASS(OBJECT_CLASS(mc));
=20
     virt_machine_2_8_options(mc);
-    SET_MACHINE_COMPAT(mc, virt_compat_2_7);
+    compat_props_add(mc->compat_props,
+                     virt_compat_2_7, G_N_ELEMENTS(virt_compat_2_7));
     /* ITS was introduced with 2.8 */
     vmc->no_its =3D true;
     /* Stick with 1K pages for migration compatibility */
@@ -1990,7 +1998,8 @@ static void virt_machine_2_6_options(MachineClass *=
mc)
     VirtMachineClass *vmc =3D VIRT_MACHINE_CLASS(OBJECT_CLASS(mc));
=20
     virt_machine_2_7_options(mc);
-    SET_MACHINE_COMPAT(mc, virt_compat_2_6);
+    compat_props_add(mc->compat_props,
+                     virt_compat_2_6, G_N_ELEMENTS(virt_compat_2_6));
     vmc->disallow_affinity_adjustment =3D true;
     /* Disable PMU for 2.6 as PMU support was first introduced in 2.7 */
     vmc->no_pmu =3D true;
diff --git a/hw/core/machine.c b/hw/core/machine.c
index c51423b647..6e24924aba 100644
--- a/hw/core/machine.c
+++ b/hw/core/machine.c
@@ -647,6 +647,7 @@ static void machine_class_base_init(ObjectClass *oc, =
void *data)
         assert(g_str_has_suffix(cname, TYPE_MACHINE_SUFFIX));
         mc->name =3D g_strndup(cname,
                             strlen(cname) - strlen(TYPE_MACHINE_SUFFIX))=
;
+        mc->compat_props =3D g_ptr_array_new();
     }
 }
=20
@@ -834,24 +835,6 @@ void machine_run_board_init(MachineState *machine)
     machine_class->init(machine);
 }
=20
-void machine_register_compat_props(MachineState *machine)
-{
-    MachineClass *mc =3D MACHINE_GET_CLASS(machine);
-    int i;
-    GlobalProperty *p;
-
-    if (!mc->compat_props) {
-        return;
-    }
-
-    for (i =3D 0; i < mc->compat_props->len; i++) {
-        p =3D g_array_index(mc->compat_props, GlobalProperty *, i);
-        /* Machine compat_props must never cause errors: */
-        p->errp =3D &error_abort;
-        qdev_prop_register_global(p);
-    }
-}
-
 static const TypeInfo machine_info =3D {
     .name =3D TYPE_MACHINE,
     .parent =3D TYPE_OBJECT,
diff --git a/hw/core/qdev.c b/hw/core/qdev.c
index 53b507164f..d510340bac 100644
--- a/hw/core/qdev.c
+++ b/hw/core/qdev.c
@@ -974,11 +974,13 @@ static void device_post_init(Object *obj)
 {
     if (object_dynamic_cast(qdev_get_machine(), TYPE_MACHINE)) {
         MachineState *m =3D MACHINE(qdev_get_machine());
+        MachineClass *mc =3D MACHINE_GET_CLASS(m);
         AccelClass *ac =3D ACCEL_GET_CLASS(m->accelerator);
=20
         if (ac->compat_props) {
             object_apply_global_props(obj, ac->compat_props, &error_abor=
t);
         }
+        object_apply_global_props(obj, mc->compat_props, &error_abort);
     }
=20
     qdev_prop_set_globals(DEVICE(obj));
diff --git a/hw/i386/pc_piix.c b/hw/i386/pc_piix.c
index 8ade7318e0..9baca6d6ee 100644
--- a/hw/i386/pc_piix.c
+++ b/hw/i386/pc_piix.c
@@ -447,7 +447,8 @@ static void pc_i440fx_3_1_machine_options(MachineClas=
s *m)
     pc_i440fx_4_0_machine_options(m);
     m->is_default =3D 0;
     m->alias =3D NULL;
-    SET_MACHINE_COMPAT(m, pc_compat_3_1);
+    compat_props_add(m->compat_props,
+                     pc_compat_3_1, G_N_ELEMENTS(pc_compat_3_1));
 }
=20
 DEFINE_I440FX_MACHINE(v3_1, "pc-i440fx-3.1", NULL,
@@ -460,7 +461,8 @@ static GlobalProperty pc_compat_3_0[] =3D {
 static void pc_i440fx_3_0_machine_options(MachineClass *m)
 {
     pc_i440fx_3_1_machine_options(m);
-    SET_MACHINE_COMPAT(m, pc_compat_3_0);
+    compat_props_add(m->compat_props,
+                     pc_compat_3_0, G_N_ELEMENTS(pc_compat_3_0));
 }
=20
 DEFINE_I440FX_MACHINE(v3_0, "pc-i440fx-3.0", NULL,
@@ -473,7 +475,8 @@ static GlobalProperty pc_compat_2_12[] =3D {
 static void pc_i440fx_2_12_machine_options(MachineClass *m)
 {
     pc_i440fx_3_0_machine_options(m);
-    SET_MACHINE_COMPAT(m, pc_compat_2_12);
+    compat_props_add(m->compat_props,
+                     pc_compat_2_12, G_N_ELEMENTS(pc_compat_2_12));
 }
=20
 DEFINE_I440FX_MACHINE(v2_12, "pc-i440fx-2.12", NULL,
@@ -486,7 +489,8 @@ static GlobalProperty pc_compat_2_11[] =3D {
 static void pc_i440fx_2_11_machine_options(MachineClass *m)
 {
     pc_i440fx_2_12_machine_options(m);
-    SET_MACHINE_COMPAT(m, pc_compat_2_11);
+    compat_props_add(m->compat_props,
+                     pc_compat_2_11, G_N_ELEMENTS(pc_compat_2_11));
 }
=20
 DEFINE_I440FX_MACHINE(v2_11, "pc-i440fx-2.11", NULL,
@@ -499,7 +503,8 @@ static GlobalProperty pc_compat_2_10[] =3D {
 static void pc_i440fx_2_10_machine_options(MachineClass *m)
 {
     pc_i440fx_2_11_machine_options(m);
-    SET_MACHINE_COMPAT(m, pc_compat_2_10);
+    compat_props_add(m->compat_props,
+                     pc_compat_2_10, G_N_ELEMENTS(pc_compat_2_10));
     m->auto_enable_numa_with_memhp =3D false;
 }
=20
@@ -513,7 +518,8 @@ static GlobalProperty pc_compat_2_9[] =3D {
 static void pc_i440fx_2_9_machine_options(MachineClass *m)
 {
     pc_i440fx_2_10_machine_options(m);
-    SET_MACHINE_COMPAT(m, pc_compat_2_9);
+    compat_props_add(m->compat_props,
+                     pc_compat_2_9, G_N_ELEMENTS(pc_compat_2_9));
     m->numa_auto_assign_ram =3D numa_legacy_auto_assign_ram;
 }
=20
@@ -527,7 +533,8 @@ static GlobalProperty pc_compat_2_8[] =3D {
 static void pc_i440fx_2_8_machine_options(MachineClass *m)
 {
     pc_i440fx_2_9_machine_options(m);
-    SET_MACHINE_COMPAT(m, pc_compat_2_8);
+    compat_props_add(m->compat_props,
+                     pc_compat_2_8, G_N_ELEMENTS(pc_compat_2_8));
 }
=20
 DEFINE_I440FX_MACHINE(v2_8, "pc-i440fx-2.8", NULL,
@@ -540,7 +547,8 @@ static GlobalProperty pc_compat_2_7[] =3D {
 static void pc_i440fx_2_7_machine_options(MachineClass *m)
 {
     pc_i440fx_2_8_machine_options(m);
-    SET_MACHINE_COMPAT(m, pc_compat_2_7);
+    compat_props_add(m->compat_props,
+                     pc_compat_2_7, G_N_ELEMENTS(pc_compat_2_7));
 }
=20
 DEFINE_I440FX_MACHINE(v2_7, "pc-i440fx-2.7", NULL,
@@ -556,7 +564,8 @@ static void pc_i440fx_2_6_machine_options(MachineClas=
s *m)
     pc_i440fx_2_7_machine_options(m);
     pcmc->legacy_cpu_hotplug =3D true;
     pcmc->linuxboot_dma_enabled =3D false;
-    SET_MACHINE_COMPAT(m, pc_compat_2_6);
+    compat_props_add(m->compat_props,
+                     pc_compat_2_6, G_N_ELEMENTS(pc_compat_2_6));
 }
=20
 DEFINE_I440FX_MACHINE(v2_6, "pc-i440fx-2.6", NULL,
@@ -572,7 +581,8 @@ static void pc_i440fx_2_5_machine_options(MachineClas=
s *m)
     pc_i440fx_2_6_machine_options(m);
     pcmc->save_tsc_khz =3D false;
     m->legacy_fw_cfg_order =3D 1;
-    SET_MACHINE_COMPAT(m, pc_compat_2_5);
+    compat_props_add(m->compat_props,
+                     pc_compat_2_5, G_N_ELEMENTS(pc_compat_2_5));
 }
=20
 DEFINE_I440FX_MACHINE(v2_5, "pc-i440fx-2.5", NULL,
@@ -588,7 +598,8 @@ static void pc_i440fx_2_4_machine_options(MachineClas=
s *m)
     pc_i440fx_2_5_machine_options(m);
     m->hw_version =3D "2.4.0";
     pcmc->broken_reserved_end =3D true;
-    SET_MACHINE_COMPAT(m, pc_compat_2_4);
+    compat_props_add(m->compat_props,
+                     pc_compat_2_4, G_N_ELEMENTS(pc_compat_2_4));
 }
=20
 DEFINE_I440FX_MACHINE(v2_4, "pc-i440fx-2.4", NULL,
@@ -602,7 +613,8 @@ static void pc_i440fx_2_3_machine_options(MachineClas=
s *m)
 {
     pc_i440fx_2_4_machine_options(m);
     m->hw_version =3D "2.3.0";
-    SET_MACHINE_COMPAT(m, pc_compatp_2_3);
+    compat_props_add(m->compat_props,
+                     pc_compatp_2_3, G_N_ELEMENTS(pc_compatp_2_3));
 }
=20
 DEFINE_I440FX_MACHINE(v2_3, "pc-i440fx-2.3", pc_compat_2_3,
@@ -618,7 +630,8 @@ static void pc_i440fx_2_2_machine_options(MachineClas=
s *m)
     pc_i440fx_2_3_machine_options(m);
     m->hw_version =3D "2.2.0";
     m->default_machine_opts =3D "firmware=3Dbios-256k.bin,suppress-vmdes=
c=3Don";
-    SET_MACHINE_COMPAT(m, pc_compatp_2_2);
+    compat_props_add(m->compat_props,
+                     pc_compatp_2_2, G_N_ELEMENTS(pc_compatp_2_2));
     pcmc->rsdp_in_ram =3D false;
 }
=20
@@ -635,7 +648,8 @@ static void pc_i440fx_2_1_machine_options(MachineClas=
s *m)
     pc_i440fx_2_2_machine_options(m);
     m->hw_version =3D "2.1.0";
     m->default_display =3D NULL;
-    SET_MACHINE_COMPAT(m, pc_compatp_2_1);
+    compat_props_add(m->compat_props,
+                     pc_compatp_2_1, G_N_ELEMENTS(pc_compatp_2_1));
     pcmc->smbios_uuid_encoded =3D false;
     pcmc->enforce_aligned_dimm =3D false;
 }
@@ -652,7 +666,8 @@ static void pc_i440fx_2_0_machine_options(MachineClas=
s *m)
     PCMachineClass *pcmc =3D PC_MACHINE_CLASS(m);
     pc_i440fx_2_1_machine_options(m);
     m->hw_version =3D "2.0.0";
-    SET_MACHINE_COMPAT(m, pc_compatp_2_0);
+    compat_props_add(m->compat_props,
+                     pc_compatp_2_0, G_N_ELEMENTS(pc_compatp_2_0));
     pcmc->smbios_legacy_mode =3D true;
     pcmc->has_reserved_memory =3D false;
     /* This value depends on the actual DSDT and SSDT compiled into
@@ -689,7 +704,8 @@ static void pc_i440fx_1_7_machine_options(MachineClas=
s *m)
     m->hw_version =3D "1.7.0";
     m->default_machine_opts =3D NULL;
     m->option_rom_has_mr =3D true;
-    SET_MACHINE_COMPAT(m, pc_compatp_1_7);
+    compat_props_add(m->compat_props,
+                     pc_compatp_1_7, G_N_ELEMENTS(pc_compatp_1_7));
     pcmc->smbios_defaults =3D false;
     pcmc->gigabyte_align =3D false;
     pcmc->legacy_acpi_table_size =3D 6414;
@@ -708,7 +724,8 @@ static void pc_i440fx_1_6_machine_options(MachineClas=
s *m)
     pc_i440fx_1_7_machine_options(m);
     m->hw_version =3D "1.6.0";
     m->rom_file_has_mr =3D false;
-    SET_MACHINE_COMPAT(m, pc_compatp_1_6);
+    compat_props_add(m->compat_props,
+                     pc_compatp_1_6, G_N_ELEMENTS(pc_compatp_1_6));
     pcmc->has_acpi_build =3D false;
 }
=20
@@ -723,7 +740,8 @@ static void pc_i440fx_1_5_machine_options(MachineClas=
s *m)
 {
     pc_i440fx_1_6_machine_options(m);
     m->hw_version =3D "1.5.0";
-    SET_MACHINE_COMPAT(m, pc_compatp_1_5);
+    compat_props_add(m->compat_props,
+                     pc_compatp_1_5, G_N_ELEMENTS(pc_compatp_1_5));
 }
=20
 DEFINE_I440FX_MACHINE(v1_5, "pc-i440fx-1.5", pc_compat_1_5,
@@ -738,7 +756,8 @@ static void pc_i440fx_1_4_machine_options(MachineClas=
s *m)
     pc_i440fx_1_5_machine_options(m);
     m->hw_version =3D "1.4.0";
     m->hot_add_cpu =3D NULL;
-    SET_MACHINE_COMPAT(m, pc_compatp_1_4);
+    compat_props_add(m->compat_props,
+                     pc_compatp_1_4, G_N_ELEMENTS(pc_compatp_1_4));
 }
=20
 DEFINE_I440FX_MACHINE(v1_4, "pc-i440fx-1.4", pc_compat_1_4,
@@ -769,7 +788,8 @@ static void pc_i440fx_1_3_machine_options(MachineClas=
s *m)
 {
     pc_i440fx_1_4_machine_options(m);
     m->hw_version =3D "1.3.0";
-    SET_MACHINE_COMPAT(m, pc_compatp_1_3);
+    compat_props_add(m->compat_props,
+                     pc_compatp_1_3, G_N_ELEMENTS(pc_compatp_1_3));
 }
=20
 DEFINE_I440FX_MACHINE(v1_3, "pc-1.3", pc_compat_1_3,
@@ -809,7 +829,8 @@ static void pc_i440fx_1_2_machine_options(MachineClas=
s *m)
 {
     pc_i440fx_1_3_machine_options(m);
     m->hw_version =3D "1.2.0";
-    SET_MACHINE_COMPAT(m, pc_compatp_1_2);
+    compat_props_add(m->compat_props,
+                     pc_compatp_1_2, G_N_ELEMENTS(pc_compatp_1_2));
 }
=20
 DEFINE_I440FX_MACHINE(v1_2, "pc-1.2", pc_compat_1_2,
@@ -853,7 +874,8 @@ static void pc_i440fx_1_1_machine_options(MachineClas=
s *m)
 {
     pc_i440fx_1_2_machine_options(m);
     m->hw_version =3D "1.1.0";
-    SET_MACHINE_COMPAT(m, pc_compatp_1_1);
+    compat_props_add(m->compat_props,
+                     pc_compatp_1_1, G_N_ELEMENTS(pc_compatp_1_1));
 }
=20
 DEFINE_I440FX_MACHINE(v1_1, "pc-1.1", pc_compat_1_2,
@@ -884,7 +906,8 @@ static void pc_i440fx_1_0_machine_options(MachineClas=
s *m)
 {
     pc_i440fx_1_1_machine_options(m);
     m->hw_version =3D "1.0";
-    SET_MACHINE_COMPAT(m, pc_compatp_1_0);
+    compat_props_add(m->compat_props,
+                     pc_compatp_1_0, G_N_ELEMENTS(pc_compatp_1_0));
 }
=20
 DEFINE_I440FX_MACHINE(v1_0, "pc-1.0", pc_compat_1_2,
@@ -899,7 +922,8 @@ static void pc_i440fx_0_15_machine_options(MachineCla=
ss *m)
 {
     pc_i440fx_1_0_machine_options(m);
     m->hw_version =3D "0.15";
-    SET_MACHINE_COMPAT(m, pc_compatp_0_15);
+    compat_props_add(m->compat_props,
+                     pc_compatp_0_15, G_N_ELEMENTS(pc_compatp_0_15));
 }
=20
 DEFINE_I440FX_MACHINE(v0_15, "pc-0.15", pc_compat_1_2,
@@ -939,7 +963,8 @@ static void pc_i440fx_0_14_machine_options(MachineCla=
ss *m)
 {
     pc_i440fx_0_15_machine_options(m);
     m->hw_version =3D "0.14";
-    SET_MACHINE_COMPAT(m, pc_compatp_0_14);
+    compat_props_add(m->compat_props,
+                     pc_compatp_0_14, G_N_ELEMENTS(pc_compatp_0_14));
 }
=20
 DEFINE_I440FX_MACHINE(v0_14, "pc-0.14", pc_compat_1_2,
@@ -975,7 +1000,8 @@ static void pc_i440fx_0_13_machine_options(MachineCl=
ass *m)
     PCMachineClass *pcmc =3D PC_MACHINE_CLASS(m);
     pc_i440fx_0_14_machine_options(m);
     m->hw_version =3D "0.13";
-    SET_MACHINE_COMPAT(m, pc_compatp_0_13);
+    compat_props_add(m->compat_props,
+                     pc_compatp_0_13, G_N_ELEMENTS(pc_compatp_0_13));
     pcmc->kvmclock_enabled =3D false;
 }
=20
@@ -1011,7 +1037,8 @@ static void pc_i440fx_0_12_machine_options(MachineC=
lass *m)
 {
     pc_i440fx_0_13_machine_options(m);
     m->hw_version =3D "0.12";
-    SET_MACHINE_COMPAT(m, pc_compat_0_12);
+    compat_props_add(m->compat_props,
+                     pc_compat_0_12, G_N_ELEMENTS(pc_compat_0_12));
 }
=20
 DEFINE_I440FX_MACHINE(v0_12, "pc-0.12", pc_compat_0_13,
@@ -1044,7 +1071,8 @@ static void pc_i440fx_0_11_machine_options(MachineC=
lass *m)
     pc_i440fx_0_12_machine_options(m);
     m->hw_version =3D "0.11";
     m->deprecation_reason =3D "use a newer machine type instead";
-    SET_MACHINE_COMPAT(m, pc_compat_0_11);
+    compat_props_add(m->compat_props,
+                     pc_compat_0_11, G_N_ELEMENTS(pc_compat_0_11));
 }
=20
 DEFINE_I440FX_MACHINE(v0_11, "pc-0.11", pc_compat_0_13,
@@ -1079,7 +1107,8 @@ static void pc_i440fx_0_10_machine_options(MachineC=
lass *m)
 {
     pc_i440fx_0_11_machine_options(m);
     m->hw_version =3D "0.10";
-    SET_MACHINE_COMPAT(m, pc_compat_0_10);
+    compat_props_add(m->compat_props,
+                     pc_compat_0_10, G_N_ELEMENTS(pc_compat_0_10));
 }
=20
 DEFINE_I440FX_MACHINE(v0_10, "pc-0.10", pc_compat_0_13,
diff --git a/hw/i386/pc_q35.c b/hw/i386/pc_q35.c
index 0c02a72e00..72795812e5 100644
--- a/hw/i386/pc_q35.c
+++ b/hw/i386/pc_q35.c
@@ -328,7 +328,8 @@ static void pc_q35_3_1_machine_options(MachineClass *=
m)
 {
     pc_q35_4_0_machine_options(m);
     m->alias =3D NULL;
-    SET_MACHINE_COMPAT(m, pc_compat_3_1);
+    compat_props_add(m->compat_props,
+                     pc_compat_3_1, G_N_ELEMENTS(pc_compat_3_1));
 }
=20
 DEFINE_Q35_MACHINE(v3_1, "pc-q35-3.1", NULL,
@@ -341,7 +342,8 @@ static GlobalProperty pc_compat_3_0[] =3D {
 static void pc_q35_3_0_machine_options(MachineClass *m)
 {
     pc_q35_3_1_machine_options(m);
-    SET_MACHINE_COMPAT(m, pc_compat_3_0);
+    compat_props_add(m->compat_props,
+                     pc_compat_3_0, G_N_ELEMENTS(pc_compat_3_0));
 }
=20
 DEFINE_Q35_MACHINE(v3_0, "pc-q35-3.0", NULL,
@@ -354,7 +356,8 @@ static GlobalProperty pc_compat_2_12[] =3D {
 static void pc_q35_2_12_machine_options(MachineClass *m)
 {
     pc_q35_3_0_machine_options(m);
-    SET_MACHINE_COMPAT(m, pc_compat_2_12);
+    compat_props_add(m->compat_props,
+                     pc_compat_2_12, G_N_ELEMENTS(pc_compat_2_12));
 }
=20
 DEFINE_Q35_MACHINE(v2_12, "pc-q35-2.12", NULL,
@@ -370,7 +373,8 @@ static void pc_q35_2_11_machine_options(MachineClass =
*m)
=20
     pc_q35_2_12_machine_options(m);
     pcmc->default_nic_model =3D "e1000";
-    SET_MACHINE_COMPAT(m, pc_compat_2_11);
+    compat_props_add(m->compat_props,
+                     pc_compat_2_11, G_N_ELEMENTS(pc_compat_2_11));
 }
=20
 DEFINE_Q35_MACHINE(v2_11, "pc-q35-2.11", NULL,
@@ -383,7 +387,8 @@ static GlobalProperty pc_compat_2_10[] =3D {
 static void pc_q35_2_10_machine_options(MachineClass *m)
 {
     pc_q35_2_11_machine_options(m);
-    SET_MACHINE_COMPAT(m, pc_compat_2_10);
+    compat_props_add(m->compat_props,
+                     pc_compat_2_10, G_N_ELEMENTS(pc_compat_2_10));
     m->numa_auto_assign_ram =3D numa_legacy_auto_assign_ram;
     m->auto_enable_numa_with_memhp =3D false;
 }
@@ -398,7 +403,8 @@ static GlobalProperty pc_compat_2_9[] =3D {
 static void pc_q35_2_9_machine_options(MachineClass *m)
 {
     pc_q35_2_10_machine_options(m);
-    SET_MACHINE_COMPAT(m, pc_compat_2_9);
+    compat_props_add(m->compat_props,
+                     pc_compat_2_9, G_N_ELEMENTS(pc_compat_2_9));
 }
=20
 DEFINE_Q35_MACHINE(v2_9, "pc-q35-2.9", NULL,
@@ -411,7 +417,8 @@ static GlobalProperty pc_compat_2_8[] =3D {
 static void pc_q35_2_8_machine_options(MachineClass *m)
 {
     pc_q35_2_9_machine_options(m);
-    SET_MACHINE_COMPAT(m, pc_compat_2_8);
+    compat_props_add(m->compat_props,
+                     pc_compat_2_8, G_N_ELEMENTS(pc_compat_2_8));
 }
=20
 DEFINE_Q35_MACHINE(v2_8, "pc-q35-2.8", NULL,
@@ -425,7 +432,8 @@ static void pc_q35_2_7_machine_options(MachineClass *=
m)
 {
     pc_q35_2_8_machine_options(m);
     m->max_cpus =3D 255;
-    SET_MACHINE_COMPAT(m, pc_compat_2_7);
+    compat_props_add(m->compat_props,
+                     pc_compat_2_7, G_N_ELEMENTS(pc_compat_2_7));
 }
=20
 DEFINE_Q35_MACHINE(v2_7, "pc-q35-2.7", NULL,
@@ -441,7 +449,8 @@ static void pc_q35_2_6_machine_options(MachineClass *=
m)
     pc_q35_2_7_machine_options(m);
     pcmc->legacy_cpu_hotplug =3D true;
     pcmc->linuxboot_dma_enabled =3D false;
-    SET_MACHINE_COMPAT(m, pc_compat_2_6);
+    compat_props_add(m->compat_props,
+                     pc_compat_2_6, G_N_ELEMENTS(pc_compat_2_6));
 }
=20
 DEFINE_Q35_MACHINE(v2_6, "pc-q35-2.6", NULL,
@@ -457,7 +466,8 @@ static void pc_q35_2_5_machine_options(MachineClass *=
m)
     pc_q35_2_6_machine_options(m);
     pcmc->save_tsc_khz =3D false;
     m->legacy_fw_cfg_order =3D 1;
-    SET_MACHINE_COMPAT(m, pc_compat_2_5);
+    compat_props_add(m->compat_props,
+                     pc_compat_2_5, G_N_ELEMENTS(pc_compat_2_5));
 }
=20
 DEFINE_Q35_MACHINE(v2_5, "pc-q35-2.5", NULL,
@@ -473,7 +483,8 @@ static void pc_q35_2_4_machine_options(MachineClass *=
m)
     pc_q35_2_5_machine_options(m);
     m->hw_version =3D "2.4.0";
     pcmc->broken_reserved_end =3D true;
-    SET_MACHINE_COMPAT(m, pc_compat_2_4);
+    compat_props_add(m->compat_props,
+                     pc_compat_2_4, G_N_ELEMENTS(pc_compat_2_4));
 }
=20
 DEFINE_Q35_MACHINE(v2_4, "pc-q35-2.4", NULL,
diff --git a/hw/ppc/spapr.c b/hw/ppc/spapr.c
index 6145a9909d..a6ed88ba95 100644
--- a/hw/ppc/spapr.c
+++ b/hw/ppc/spapr.c
@@ -3970,7 +3970,8 @@ static GlobalProperty spapr_compat_3_1[] =3D {
 static void spapr_machine_3_1_class_options(MachineClass *mc)
 {
     spapr_machine_4_0_class_options(mc);
-    SET_MACHINE_COMPAT(mc, spapr_compat_3_1);
+    compat_props_add(mc->compat_props,
+                     spapr_compat_3_1, G_N_ELEMENTS(spapr_compat_3_1));
 }
=20
 DEFINE_SPAPR_MACHINE(3_1, "3.1", false);
@@ -3987,7 +3988,8 @@ static void spapr_machine_3_0_class_options(Machine=
Class *mc)
     sPAPRMachineClass *smc =3D SPAPR_MACHINE_CLASS(mc);
=20
     spapr_machine_3_1_class_options(mc);
-    SET_MACHINE_COMPAT(mc, spapr_compat_3_0);
+    compat_props_add(mc->compat_props,
+                     spapr_compat_3_0, G_N_ELEMENTS(spapr_compat_3_0));
=20
     smc->legacy_irq_allocation =3D true;
     smc->irq =3D &spapr_irq_xics_legacy;
@@ -4017,7 +4019,8 @@ static void spapr_machine_2_12_class_options(Machin=
eClass *mc)
     sPAPRMachineClass *smc =3D SPAPR_MACHINE_CLASS(mc);
=20
     spapr_machine_3_0_class_options(mc);
-    SET_MACHINE_COMPAT(mc, spapr_compat_2_12);
+    compat_props_add(mc->compat_props,
+                     spapr_compat_2_12, G_N_ELEMENTS(spapr_compat_2_12))=
;
=20
     /* We depend on kvm_enabled() to choose a default value for the
      * hpt-max-page-size capability. Of course we can't do it here
@@ -4054,7 +4057,8 @@ static void spapr_machine_2_11_class_options(Machin=
eClass *mc)
=20
     spapr_machine_2_12_class_options(mc);
     smc->default_caps.caps[SPAPR_CAP_HTM] =3D SPAPR_CAP_ON;
-    SET_MACHINE_COMPAT(mc, spapr_compat_2_11);
+    compat_props_add(mc->compat_props,
+                     spapr_compat_2_11, G_N_ELEMENTS(spapr_compat_2_11))=
;
 }
=20
 DEFINE_SPAPR_MACHINE(2_11, "2.11", false);
@@ -4069,7 +4073,8 @@ static GlobalProperty spapr_compat_2_10[] =3D {
 static void spapr_machine_2_10_class_options(MachineClass *mc)
 {
     spapr_machine_2_11_class_options(mc);
-    SET_MACHINE_COMPAT(mc, spapr_compat_2_10);
+    compat_props_add(mc->compat_props,
+                     spapr_compat_2_10, G_N_ELEMENTS(spapr_compat_2_10))=
;
 }
=20
 DEFINE_SPAPR_MACHINE(2_10, "2.10", false);
@@ -4091,7 +4096,8 @@ static void spapr_machine_2_9_class_options(Machine=
Class *mc)
     sPAPRMachineClass *smc =3D SPAPR_MACHINE_CLASS(mc);
=20
     spapr_machine_2_10_class_options(mc);
-    SET_MACHINE_COMPAT(mc, spapr_compat_2_9);
+    compat_props_add(mc->compat_props,
+                     spapr_compat_2_9, G_N_ELEMENTS(spapr_compat_2_9));
     mc->numa_auto_assign_ram =3D numa_legacy_auto_assign_ram;
     smc->pre_2_10_has_unused_icps =3D true;
     smc->resize_hpt_default =3D SPAPR_RESIZE_HPT_DISABLED;
@@ -4114,7 +4120,8 @@ static GlobalProperty spapr_compat_2_8[] =3D {
 static void spapr_machine_2_8_class_options(MachineClass *mc)
 {
     spapr_machine_2_9_class_options(mc);
-    SET_MACHINE_COMPAT(mc, spapr_compat_2_8);
+    compat_props_add(mc->compat_props,
+                     spapr_compat_2_8, G_N_ELEMENTS(spapr_compat_2_8));
     mc->numa_mem_align_shift =3D 23;
 }
=20
@@ -4203,7 +4210,8 @@ static void spapr_machine_2_7_class_options(Machine=
Class *mc)
     spapr_machine_2_8_class_options(mc);
     mc->default_cpu_type =3D POWERPC_CPU_TYPE_NAME("power7_v2.3");
     mc->default_machine_opts =3D "modern-hotplug-events=3Doff";
-    SET_MACHINE_COMPAT(mc, spapr_compat_2_7);
+    compat_props_add(mc->compat_props,
+                     spapr_compat_2_7, G_N_ELEMENTS(spapr_compat_2_7));
     smc->phb_placement =3D phb_placement_2_7;
 }
=20
@@ -4225,7 +4233,8 @@ static void spapr_machine_2_6_class_options(Machine=
Class *mc)
 {
     spapr_machine_2_7_class_options(mc);
     mc->has_hotpluggable_cpus =3D false;
-    SET_MACHINE_COMPAT(mc, spapr_compat_2_6);
+    compat_props_add(mc->compat_props,
+                     spapr_compat_2_6, G_N_ELEMENTS(spapr_compat_2_6));
 }
=20
 DEFINE_SPAPR_MACHINE(2_6, "2.6", false);
@@ -4248,7 +4257,8 @@ static void spapr_machine_2_5_class_options(Machine=
Class *mc)
=20
     spapr_machine_2_6_class_options(mc);
     smc->use_ohci_by_default =3D true;
-    SET_MACHINE_COMPAT(mc, spapr_compat_2_5);
+    compat_props_add(mc->compat_props,
+                     spapr_compat_2_5, G_N_ELEMENTS(spapr_compat_2_5));
 }
=20
 DEFINE_SPAPR_MACHINE(2_5, "2.5", false);
@@ -4266,7 +4276,8 @@ static void spapr_machine_2_4_class_options(Machine=
Class *mc)
=20
     spapr_machine_2_5_class_options(mc);
     smc->dr_lmb_enabled =3D false;
-    SET_MACHINE_COMPAT(mc, spapr_compat_2_4);
+    compat_props_add(mc->compat_props,
+                     spapr_compat_2_4, G_N_ELEMENTS(spapr_compat_2_4));
 }
=20
 DEFINE_SPAPR_MACHINE(2_4, "2.4", false);
@@ -4286,7 +4297,8 @@ static GlobalProperty spapr_compat_2_3[] =3D {
 static void spapr_machine_2_3_class_options(MachineClass *mc)
 {
     spapr_machine_2_4_class_options(mc);
-    SET_MACHINE_COMPAT(mc, spapr_compat_2_3);
+    compat_props_add(mc->compat_props,
+                     spapr_compat_2_3, G_N_ELEMENTS(spapr_compat_2_3));
 }
 DEFINE_SPAPR_MACHINE(2_3, "2.3", false);
=20
@@ -4305,7 +4317,8 @@ static GlobalProperty spapr_compat_2_2[] =3D {
 static void spapr_machine_2_2_class_options(MachineClass *mc)
 {
     spapr_machine_2_3_class_options(mc);
-    SET_MACHINE_COMPAT(mc, spapr_compat_2_2);
+    compat_props_add(mc->compat_props,
+                     spapr_compat_2_2, G_N_ELEMENTS(spapr_compat_2_2));
     mc->default_machine_opts =3D "modern-hotplug-events=3Doff,suppress-v=
mdesc=3Don";
 }
 DEFINE_SPAPR_MACHINE(2_2, "2.2", false);
@@ -4320,7 +4333,8 @@ static GlobalProperty spapr_compat_2_1[] =3D {
 static void spapr_machine_2_1_class_options(MachineClass *mc)
 {
     spapr_machine_2_2_class_options(mc);
-    SET_MACHINE_COMPAT(mc, spapr_compat_2_1);
+    compat_props_add(mc->compat_props,
+                     spapr_compat_2_1, G_N_ELEMENTS(spapr_compat_2_1));
 }
 DEFINE_SPAPR_MACHINE(2_1, "2.1", false);
=20
diff --git a/hw/s390x/s390-virtio-ccw.c b/hw/s390x/s390-virtio-ccw.c
index 3ca5ce7913..275cbe5da4 100644
--- a/hw/s390x/s390-virtio-ccw.c
+++ b/hw/s390x/s390-virtio-ccw.c
@@ -772,7 +772,8 @@ static void ccw_machine_3_0_class_options(MachineClas=
s *mc)
=20
     s390mc->hpage_1m_allowed =3D false;
     ccw_machine_3_1_class_options(mc);
-    SET_MACHINE_COMPAT(mc, ccw_compat_3_0);
+    compat_props_add(mc->compat_props,
+                     ccw_compat_3_0, G_N_ELEMENTS(ccw_compat_3_0));
 }
 DEFINE_CCW_MACHINE(3_0, "3.0", false);
=20
@@ -786,7 +787,8 @@ static void ccw_machine_2_12_instance_options(Machine=
State *machine)
 static void ccw_machine_2_12_class_options(MachineClass *mc)
 {
     ccw_machine_3_0_class_options(mc);
-    SET_MACHINE_COMPAT(mc, ccw_compat_2_12);
+    compat_props_add(mc->compat_props,
+                     ccw_compat_2_12, G_N_ELEMENTS(ccw_compat_2_12));
 }
 DEFINE_CCW_MACHINE(2_12, "2.12", false);
=20
@@ -802,7 +804,8 @@ static void ccw_machine_2_11_instance_options(Machine=
State *machine)
 static void ccw_machine_2_11_class_options(MachineClass *mc)
 {
     ccw_machine_2_12_class_options(mc);
-    SET_MACHINE_COMPAT(mc, ccw_compat_2_11);
+    compat_props_add(mc->compat_props,
+                     ccw_compat_2_11, G_N_ELEMENTS(ccw_compat_2_11));
 }
 DEFINE_CCW_MACHINE(2_11, "2.11", false);
=20
@@ -814,7 +817,8 @@ static void ccw_machine_2_10_instance_options(Machine=
State *machine)
 static void ccw_machine_2_10_class_options(MachineClass *mc)
 {
     ccw_machine_2_11_class_options(mc);
-    SET_MACHINE_COMPAT(mc, ccw_compat_2_10);
+    compat_props_add(mc->compat_props,
+                     ccw_compat_2_10, G_N_ELEMENTS(ccw_compat_2_10));
 }
 DEFINE_CCW_MACHINE(2_10, "2.10", false);
=20
@@ -833,7 +837,8 @@ static void ccw_machine_2_9_class_options(MachineClas=
s *mc)
     S390CcwMachineClass *s390mc =3D S390_MACHINE_CLASS(mc);
=20
     ccw_machine_2_10_class_options(mc);
-    SET_MACHINE_COMPAT(mc, ccw_compat_2_9);
+    compat_props_add(mc->compat_props,
+                     ccw_compat_2_9, G_N_ELEMENTS(ccw_compat_2_9));
     s390mc->css_migration_enabled =3D false;
 }
 DEFINE_CCW_MACHINE(2_9, "2.9", false);
@@ -846,7 +851,8 @@ static void ccw_machine_2_8_instance_options(MachineS=
tate *machine)
 static void ccw_machine_2_8_class_options(MachineClass *mc)
 {
     ccw_machine_2_9_class_options(mc);
-    SET_MACHINE_COMPAT(mc, ccw_compat_2_8);
+    compat_props_add(mc->compat_props,
+                     ccw_compat_2_8, G_N_ELEMENTS(ccw_compat_2_8));
 }
 DEFINE_CCW_MACHINE(2_8, "2.8", false);
=20
@@ -861,7 +867,8 @@ static void ccw_machine_2_7_class_options(MachineClas=
s *mc)
=20
     s390mc->cpu_model_allowed =3D false;
     ccw_machine_2_8_class_options(mc);
-    SET_MACHINE_COMPAT(mc, ccw_compat_2_7);
+    compat_props_add(mc->compat_props,
+                     ccw_compat_2_7, G_N_ELEMENTS(ccw_compat_2_7));
 }
 DEFINE_CCW_MACHINE(2_7, "2.7", false);
=20
@@ -876,7 +883,8 @@ static void ccw_machine_2_6_class_options(MachineClas=
s *mc)
=20
     s390mc->ri_allowed =3D false;
     ccw_machine_2_7_class_options(mc);
-    SET_MACHINE_COMPAT(mc, ccw_compat_2_6);
+    compat_props_add(mc->compat_props,
+                     ccw_compat_2_6, G_N_ELEMENTS(ccw_compat_2_6));
 }
 DEFINE_CCW_MACHINE(2_6, "2.6", false);
=20
@@ -888,7 +896,8 @@ static void ccw_machine_2_5_instance_options(MachineS=
tate *machine)
 static void ccw_machine_2_5_class_options(MachineClass *mc)
 {
     ccw_machine_2_6_class_options(mc);
-    SET_MACHINE_COMPAT(mc, ccw_compat_2_5);
+    compat_props_add(mc->compat_props,
+                     ccw_compat_2_5, G_N_ELEMENTS(ccw_compat_2_5));
 }
 DEFINE_CCW_MACHINE(2_5, "2.5", false);
=20
@@ -900,7 +909,8 @@ static void ccw_machine_2_4_instance_options(MachineS=
tate *machine)
 static void ccw_machine_2_4_class_options(MachineClass *mc)
 {
     ccw_machine_2_5_class_options(mc);
-    SET_MACHINE_COMPAT(mc, ccw_compat_2_4);
+    compat_props_add(mc->compat_props,
+                     ccw_compat_2_4, G_N_ELEMENTS(ccw_compat_2_4));
 }
 DEFINE_CCW_MACHINE(2_4, "2.4", false);
=20
diff --git a/vl.c b/vl.c
index 88ba658572..65f0dddb74 100644
--- a/vl.c
+++ b/vl.c
@@ -2968,7 +2968,6 @@ static void user_register_global_props(void)
  */
 static void register_global_properties(MachineState *ms)
 {
-    machine_register_compat_props(ms);
     user_register_global_props();
 }
=20
--=20
2.20.0


