Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  14 Dec 2018 20:23:40 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id BF5D95803DC;
	Thu, 13 Dec 2018 19:13:09 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 13 Dec 2018 19:13:09 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AI3ZwOh/w6c5DHf9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1uoWIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CSmVBUMReWSxPDI2/?=
 =?us-ascii?q?coUBEfYOPf1Ar4T/vFYOsQeyCBOwCO/z1jNFhHn71rA63eQ7FgHG2RQtEdQJsH?=
 =?us-ascii?q?TJrdX1L7oZXP6yzKnMyTXMdelW1irg44XPdhAhpuyMXbNrccXNzkkvEwfFgU+K?=
 =?us-ascii?q?qYP4JD6ayuQNs3Kc7+plVOKvlmsnpxt2oji1ycchk4/EjZ8bxFDD8CV22oc1Jd?=
 =?us-ascii?q?ugRU54f9GkCp1QuD+eN4dsRcMiWW5otSAnwbMFoZ62ZDYGxIgjyhLFdvCKfZaE?=
 =?us-ascii?q?7gj+WOuSPTt0nnNodbCnixqs7UStzvfwW8q03VpQsCZJj8XAumoM2hHQ7MWMV+?=
 =?us-ascii?q?Fz8V272TmV0gDe8uFELl4wlarcM5Mh3LEwmYQJsUjZHS/5hl/2jKmIeUUg4OSo?=
 =?us-ascii?q?7P7nYrr+qp+dMY97lB3+P7wwlsCjBek0KBUCUmaF9eimybHu/lH1TK9Lg/A0iq?=
 =?us-ascii?q?XZtYrVJcUfpq63GQ9V1YMj5g67Dzen1tQYgHYGIEtGeB2ZlYjpPU/BIPThAfe4?=
 =?us-ascii?q?jVWslilkx+rdM73/DZXCMGLDnK3ifblj8U5czhQ8zdRF65JTELEBL+r/WlXtu9?=
 =?us-ascii?q?zAEh85Lwu0zv7jCNV81YMRR3iDA6CEMK7JtV+I5+QvI/SDZYMPuTb9LeQl6ODq?=
 =?us-ascii?q?jXMjhVAdeqyp14MNaH+kBvRmP1mZYX30j9cBC2gKvxY+Q/btiFGYUT5Temy9X6?=
 =?us-ascii?q?Qz5jwgDIKmDIHDRp2igbCb3Se7GIFWaX5CClyWDXjocICEUe8WaC2OOs9hjiAE?=
 =?us-ascii?q?Vb+5Ro8j0hGhqhX2y7lgLurS/C0Ysonu1Nx05+3ViBEz+iZ4D8Wb02GRUW50mn?=
 =?us-ascii?q?kESCMx3KB6uUZ90EuM0bBkg/xEEtxe/+lGUhw6NZ7bzOx2EcryVRjDftqSTFam?=
 =?us-ascii?q?Q9OmASw+T94rwt8OZVp9FMumjhzZwyWqBLoVnaSRBJMo6qLcw2TxJ8FlxnbFzq?=
 =?us-ascii?q?YhiUMqQs9ONWK8gK5/+BPeB4rIk0Wfiqarer4Q3C/L9Gef02WOuFtUXxJ3UaXA?=
 =?us-ascii?q?RXoffFfZrczl5kPeSL+jEakoPRFfycGcMKdKasfmjVNdRPj9PtTSZGaxm2S1BR?=
 =?us-ascii?q?aM3b6MaIvqe2MA3CTSEkQEkgYT/WqYOgg6HCuuv2XeDDl2H1L1f0zs6fV+qG+8?=
 =?us-ascii?q?TkIs0g6FdVNh2KSv9h4Vn/OcTegT0awCuCo6rzV0HVC938/ZCtaapgpherlcbs?=
 =?us-ascii?q?054FtdyW3ZsAl9NIS6L69+nl4ebxh3v0T22hVrC4VAlM8qrG8qzAtyM66YzElN?=
 =?us-ascii?q?dzSC3ZD0O73XLGby8Qura67X3FHezdmX9r0O6PQ+t1XsogWpGlA+/HVg1tlfy2?=
 =?us-ascii?q?Gc6YnSDAoOTZLxVV46+AJ+p77EbSgy+YPV2Wd3PqmprzDNwdQpBOgiyha+ZNpf?=
 =?us-ascii?q?NKKEFAnvE8wVHcSuKeoqm0S3YRIAJuxd6Kk0P8a+ffucxKGrJPpgnC6hjWlf4I?=
 =?us-ascii?q?F9z1iA+DZmRu/J35YK2feY3gScWjf4jVehtN33mI9eaTETGGq/1TbrBIpLaqJu?=
 =?us-ascii?q?eoYLDH+kI9erydVmm57tR3lY+Ua5B1MHxMCmYwCSYEH63QFK00QYv2anmSqhwz?=
 =?us-ascii?q?NoiT4pqreQ0zLUw+TlchoKIWpLRGhkjVfxLom4ldEaXE60bwc3kBup/1r1x69e?=
 =?us-ascii?q?pK5nNWncXV9IfzTqL2FlSqaxtruCb9RP6Z8yqiVXTeK8bEueSr78pRsaziziE3?=
 =?us-ascii?q?FfxDA9azGlpJH5kwZmh2KaKXZ5tGDZdt1oxRfD+NzcQuZc3jgcSyliijnXBV+8?=
 =?us-ascii?q?M8Oy/dqOlJfDseG+V2S/WZ1VaiTryYKAtC2m5WxlGxG/nvazmsH5Hgg+yyP0y9?=
 =?us-ascii?q?5qVSDQphbmfobrz7i6Mf5gfkRwBF7z8c16Fpt8kosxgpEdwnwahpST/Xoanmb/?=
 =?us-ascii?q?K9Rb2aTibHUTQT4H2cLa4A/g2Ed7NHKG25r5VmmBwstmf9S6YXkZ2iMn48BKFa?=
 =?us-ascii?q?eb9rpEnSRur1q8rALRZ+V9nzgHxfsv7n4an/8GuA43wiqBBbASGFFSPTbwmBSQ?=
 =?us-ascii?q?89C+sKJXaX6qcbix10pxh8qtDb+crQFHRHb2ZI0iEjRu4cVlP1LBy3nz6oDieN?=
 =?us-ascii?q?nNYtMfrByUkxHcj+dLLJI9jOYFhS1iOWjlp30q1/Y7jQBy3ZG9pIWHN2Jt/Kej?=
 =?us-ascii?q?Dh9ZLDL1Yd4T+ir2jaZfhcuW24GvHpN8GjQERpfoTPSoEC4MuvTjLQqBDDo8qn?=
 =?us-ascii?q?KDE7rFAQCf8Ftmr27IE52zLH6YPn4ZzdF/RBWHIExfnRsZXDE7np4/CwCry9bt?=
 =?us-ascii?q?cEZ/5jAN+FH4rgFAxf5vNxn6Sm3fvhunai8oSJiDKxpb9gNC6F3QMcOA9eJ/BT?=
 =?us-ascii?q?1Y8oeirAyQKWybegJIAnsSWkGfA1DjP7+u5cTP8uSCB+q+KefObquKqeBES/iI?=
 =?us-ascii?q?wpev2JN8/zmQLsWPImViD/oj10tDWnB5Bt3ZmygVRCwRjS7NdMmbpBGz+iBsqs?=
 =?us-ascii?q?C/8fLrWB/g5IeVCrtSN8lv9A6ygauZK+GQgyN5Iy5C1pwQ3X/I1KQf3FkKhiFu?=
 =?us-ascii?q?aTatELcAtS3MTK7Kma9XFRkbayxtO8tS8qI8xRJAOcraitPzy755geQ5C1ZDVV?=
 =?us-ascii?q?z9hM6pYdYGLH26NFPCHEyLLqiJJSXXw8HrZqOxUadfjPhPuB2qpzmaE1XvPjCC?=
 =?us-ascii?q?lzTyUxCvMOdMjDyUPRBEuYG9dAptBnbnTN78dhK7N9p3hyUswbIonnPKKXIcMT?=
 =?us-ascii?q?9kfkNRr72Q6DlUjellF2Nd7npqM++Elj2d7+nZLJYWrPRqDj51l+Jc/HQ11b9V?=
 =?us-ascii?q?4DtYS/xynSvYtsRurE2+kumT1jpnVwJDqzZRi4KNuEViOKPZ+YFBWHbE5h0N62?=
 =?us-ascii?q?qQBg8Op9tkDN3vpq9RxsLOlKL1NDdN7dbU8dEACMjTLcLUeEYmZBPzFHjeDQYe?=
 =?us-ascii?q?TTO2K2zbr0hclviI8TuStJdphILrnc8qTaJaTxQeEfceA15pVIgGJ4p2RTgjlb?=
 =?us-ascii?q?qSlsIg7nqkqxzQWcAcuYrIAKHBSc7zISqU2OEXLyADxqn1eMFKbtX2?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AfAAAYHxNch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUwUBAQsBgmmBAieDfJQqgg0Ul0GBcywLCAGHRSI2Bw0BAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQgNCQgpIwyCNiQBgmIBAgMBAiAdAQE3AQUJAQEKCw0CAiYCAgMfEgEFARwZB?=
 =?us-ascii?q?YMcAYIABQqbSzyKHXCBL4J2AQEFgTABhXkDBRJ5iXGBQheBQD+EI4gFgleLNoU?=
 =?us-ascii?q?Sj3dWCYIohGWKTBiBXYhGhyiOJosbMIErAYIHMxowdAaCNYIbDBeIXoVMMjMBg?=
 =?us-ascii?q?QQBAYxlAQE?=
X-IPAS-Result: =?us-ascii?q?A0AfAAAYHxNch0O0hNFjHAEBAQQBAQcEAQGBUwUBAQsBgmm?=
 =?us-ascii?q?BAieDfJQqgg0Ul0GBcywLCAGHRSI2Bw0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCN?=
 =?us-ascii?q?iQBgmIBAgMBAiAdAQE3AQUJAQEKCw0CAiYCAgMfEgEFARwZBYMcAYIABQqbSzy?=
 =?us-ascii?q?KHXCBL4J2AQEFgTABhXkDBRJ5iXGBQheBQD+EI4gFgleLNoUSj3dWCYIohGWKT?=
 =?us-ascii?q?BiBXYhGhyiOJosbMIErAYIHMxowdAaCNYIbDBeIXoVMMjMBgQQBAYxlAQE?=
X-IronPort-AV: E=Sophos;i="5.56,351,1539673200"; 
   d="scan'208";a="66786728"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 13 Dec 2018 19:13:08 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727706AbeLNDNE (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 13 Dec 2018 22:13:04 -0500
Received: from mail-ot1-f68.google.com ([209.85.210.68]:36514 "EHLO
        mail-ot1-f68.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727343AbeLNDND (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 13 Dec 2018 22:13:03 -0500
Received: by mail-ot1-f68.google.com with SMTP id k98so4118830otk.3
        for <linux-kernel@vger.kernel.org>; Thu, 13 Dec 2018 19:13:03 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=chromium.org; s=google;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=2AfwIEnQV2gcX8K8XHGh8E/wqLeCY++AnSbUXsIpU2c=;
        b=KmTFleu6s7QFI9N9hsdNGhj08R5mdgXPTiCheMRFKW+UCaAnytRG+HPrPFP+30N1sT
         LhznwPwH44sZ5YMkPx+VU4Gpf+n1zXrI2CbjSWa24VVPcaBjzDYLFA2fFhFdcBoBHXlZ
         n8t1JTlsknOR9Xr97awexslC6TLdu5UqQrlLY=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=2AfwIEnQV2gcX8K8XHGh8E/wqLeCY++AnSbUXsIpU2c=;
        b=J7a6AE598vgmdmP/01hp2Czu7kFwohctFTquHvBsWxK/leDOWxJHAVAZKaVxhG4pGp
         ROVlUHTJu1XDqE6FV4RF7N1291bZvpOhBaLdTrYxm9xs9Hp98nyodJHkhynqmM8X3p9L
         HBzz3nrn75L00H3U6m+eoJPbE9qZo1JensxX1ELYZFNK70lWBw0av/kiTquOX4pvt0fg
         Y1lwWLEYRgfbcdEjpXNOJFFAfslT+9tCGNvEvRA0lxEqGli9s+qH6BXgtFn+uMy1a2CL
         u841LVbyzwD5PMElXcScyVTj78hKJiTnA2JEYyjIqKI4a9JOXHoVvf381FE3o//zY6J9
         OB5g==
X-Gm-Message-State: AA+aEWaHHuc3VfaI6je1W7nQwM7vPFouWtb8p9DMES5+1yPcrTLRnvoI
        faDOhT10pgciYs2KZ+8f6hkd9E9mJwVFWaK+SJlCKA==
X-Google-Smtp-Source: AFSGD/UqC2jLUJKx5LTzOU+3oZcBje/NtazGbuUgGv+RYoOB2r0gPEMcSPBYL03uNIBQfK1YN9w7Vt7NlUcrS7XhSBc=
X-Received: by 2002:a9d:22e2:: with SMTP id y89mr941032ota.108.1544757182542;
 Thu, 13 Dec 2018 19:13:02 -0800 (PST)
MIME-Version: 1.0
References: <20181213091848.81327-1-louiscollard@chromium.org> <CAKv+Gu9sWw=VHjYivokAkhGP+p1P15bs3ThfRghARNesW5kyOA@mail.gmail.com>
In-Reply-To: <CAKv+Gu9sWw=VHjYivokAkhGP+p1P15bs3ThfRghARNesW5kyOA@mail.gmail.com>
From: Louis Collard <louiscollard@chromium.org>
Date: Fri, 14 Dec 2018 11:12:51 +0800
Message-ID: <CAKNRAJXub7xpwnFHiJ-VYPUatR4yhhvagjv-LqcU6Z3r3Kk9gw@mail.gmail.com>
Subject: Re: [PATCH v2] Allow hwrng to initialize crng.
To: ard.biesheuvel@linaro.org
Cc: linux-crypto@vger.kernel.org, mpm@selenic.com,
        Herbert Xu <herbert@gondor.apana.org.au>,
        Arnd Bergmann <arnd@arndb.de>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Gary R Hook <gary.hook@amd.com>, Michael Buesch <m@bues.ch>,
        PrasannaKumar Muralidharan <prasannatsmkumar@gmail.com>,
        mst@redhat.com, linux-kernel@vger.kernel.org,
        Andrey Pronin <apronin@chromium.org>,
        Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>,
        linux@mniewoehner.de, "David R. Bild" <david.bild@xaptum.com>,
        tytso@mit.edu
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, Dec 13, 2018 at 5:48 PM Ard Biesheuvel
<ard.biesheuvel@linaro.org> wrote:
>
> On Thu, 13 Dec 2018 at 10:18, Louis Collard <louiscollard@chromium.org> wrote:
> >
> > Some systems, for example embedded systems, do not generate
> > enough entropy on boot through interrupts, and boot may be blocked for
> > several minutes waiting for a call to getrandom to complete.
> >
> > Currently, random data is read from a hwrng when it is registered,
> > and is loaded into primary_crng. This data is treated in the same
> > way as data that is device-specific but otherwise unchanging, and
> > so primary_crng cannot become initialized with the data from the
> > hwrng.
> >
> > This change causes the data initially read from the hwrng to be
> > treated the same as subsequent data that is read from the hwrng if
> > it's quality score is non-zero.
> >
> > The implications of this are:
> >
> > The data read from hwrng can cause primary_crng to become
> > initialized, therefore avoiding problems of getrandom blocking
> > on boot.
> >
> > Calls to getrandom (with GRND_RANDOM) may be using entropy
> > exclusively (or in practise, almost exclusively) from the hwrng.
> >
> > Regarding the latter point; this behavior is the same as if a
> > user specified a quality score of 1 (bit of entropy per 1024 bits)
> > so hopefully this is not too scary a change to make.
> >
> > This change is the result of the discussion here:
> > https://patchwork.kernel.org/patch/10453893/
> >
> > Signed-off-by: Louis Collard <louiscollard@chromium.org>
> > Acked-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
> > ---
> >  drivers/char/hw_random/core.c | 11 +++++++++--
> >  1 file changed, 9 insertions(+), 2 deletions(-)
> >
> > diff --git a/drivers/char/hw_random/core.c b/drivers/char/hw_random/core.c
> > index 95be7228f327..7736e1a96321 100644
> > --- a/drivers/char/hw_random/core.c
> > +++ b/drivers/char/hw_random/core.c
> > @@ -24,6 +24,7 @@
> >  #include <linux/sched.h>
> >  #include <linux/slab.h>
> >  #include <linux/uaccess.h>
> > +#include <crypto/chacha20.h>
> >
> >  #define RNG_MODULE_NAME                "hw_random"
> >
> > @@ -64,13 +65,19 @@ static size_t rng_buffer_size(void)
> >  static void add_early_randomness(struct hwrng *rng)
> >  {
> >         int bytes_read;
> > -       size_t size = min_t(size_t, 16, rng_buffer_size());
> > +       /* Read enough to initialize crng. */
> > +       size_t size = min_t(size_t,
> > +                           2*CHACHA20_KEY_SIZE,
>
> This should be as symbolic constant that retains its meaning even if
> we move away from ChaCha20 or modify the current implementation
>
> > +                           rng_buffer_size());
> >
> >         mutex_lock(&reading_mutex);
> >         bytes_read = rng_get_data(rng, rng_buffer, size, 1);
> >         mutex_unlock(&reading_mutex);
> >         if (bytes_read > 0)
> > -               add_device_randomness(rng_buffer, bytes_read);
> > +               /* Allow crng to become initialized, but do not add
> > +                * entropy to the pool.
> > +                */
> > +               add_hwgenerator_randomness(rng_buffer, bytes_read, 0);
> >  }
> >
> >  static inline void cleanup_rng(struct kref *kref)
> > --
> > 2.13.5
> >

Right, this should be [equal to] CRNG_INIT_CNT_THRESH from random.c -
I wasn't sure where/how to pull this out to though..
