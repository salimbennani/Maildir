Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:42:09 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id CC342580380;
	Mon, 10 Dec 2018 11:03:41 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga007-1.jf.intel.com with ESMTP; 10 Dec 2018 11:03:41 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AaUjrSx28wOPoHjDFsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segQK/nxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJPUMhRSSJPH4Cy?=
 =?us-ascii?q?YIQTAOUcM+lYtJH9qlkVoBuiGQWhHv/jxiNSi3Po26AxzuQvERvB3AwlB98Cvn?=
 =?us-ascii?q?XarMjuNKcOS++10q7IxijfYv9MxDzz9JLEeQ08r/GNWbJwb9DexUcyHA7CgVWQ?=
 =?us-ascii?q?tJflPy+P2eQTtGiW9PRvVee0hGE5tg5+vyagydorionTnI4a1lfE9SBgzYszON?=
 =?us-ascii?q?a2Rkl7Ydu+H5tRsSGXL452Tdk4Q250oio6y7sGuZC8fCUM1Z8pxAbfZuSZf4SU?=
 =?us-ascii?q?5h/vTvudLDlmiH5/Zb6yhAq+/VKhx+D+TsW4zVVHoy5fntXStn0Bywbf58qbRv?=
 =?us-ascii?q?dn4EutxTiC2gbO4e9eO080j7DUK5s5z74wiJUTtUPDEzfomEX5kqCWbF8o+uu2?=
 =?us-ascii?q?5OT9ZLXpuJucO5VzigHkPaQigs2/AeImPQgSR2WX5/iw2bn58UHkTrhGkOc6nr?=
 =?us-ascii?q?TavZzGP8gWp6y0DxdQ0ok56ha/Czmm0M4fnXkCNF9FfBOHj470O1DBOfz4Dumw?=
 =?us-ascii?q?g06qkDh1w/DKJ7rhA5vLLnfdirfsZqh960FCxwop19xf5IxbCqsHIP3tXk/9rt?=
 =?us-ascii?q?vYDgU2MwCs2eboFM191p8CWWKIGqKZNKLSsVyW6e41LOiMeZQYuDL8K/gj+v7v?=
 =?us-ascii?q?gmU1mV4bfam1w5QXbGq0EehhI0WceXDsmMsOEX8WvgoiS+znkF2CXiRSZ3auRa?=
 =?us-ascii?q?084Ss3CIK7DYjZQICtj6eM3CO6Hp1Qe2BHBUqAEXbud4WYRfgMbDieLdNmkjwB?=
 =?us-ascii?q?TbKhUZMu1QmytA/mzLpqNujU+ioGup7519h14OvTlRc19TFvC8Sd0meNT3x7n2?=
 =?us-ascii?q?8SRj822rx/rlJ5yluZzad4hPlYH8RJ5/xVSgc6KYLcz+tiBt/oQQLBftCJSFW8?=
 =?us-ascii?q?TtW8Gz4xTMk8w9sPY0Z7BtWjgQrP3yusA78JibOLAIY4/b7b33j0P8x90WrJ1L?=
 =?us-ascii?q?E9j1k6RctCLW6mibR59wTJA47Jkl+Wl6CldakH2C7N9WGDzXeBvU1CUQ5wV7nF?=
 =?us-ascii?q?Um4bZkfMsdv54UbCRae0Cbs7KgtB1dKCKqxSZ9L0l1pGWunsNM7eY22rnWewHg?=
 =?us-ascii?q?iHxrWLYIrueGUd2SHdBVMAkwAS+3aGKAc/Cj2go2LYEDxhC1bvb1nw/ul5rXOx?=
 =?us-ascii?q?VlU0wB2Sb019y7q1/QYYiuGGRPMNwL0IoichpC9yHFamwd3WDcGNpw5gfKVafN?=
 =?us-ascii?q?M8701L1WPftwxhIJOgK7puiUIZcwRyp0nuzQl4Cp1ckcg2q3Mn1BZyKaOd0FNG?=
 =?us-ascii?q?azOY3ZDxNqfLKmXo+xCvcarW2lDY0NaZ4aoP7PU4q1P+vACmDEYi8nNn08VL3H?=
 =?us-ascii?q?uY/JnFEA0SUZfpWEYt6xd6v63aYjU6547Mz3JsNbe7szDc1NMpHucq0QugcMpF?=
 =?us-ascii?q?P6OCFw/yFNMaCtOqKOwrnVipcx0FMPpT9K4yI8Opaf+G1LS3M+ZnmTKslX5H75?=
 =?us-ascii?q?xl0kKQ6yp8TfbF3pYYw/2CwgSLTTb9jFe7vcDxloBJfjUSHmu5ySj5C49dfKxy?=
 =?us-ascii?q?fYAXCWiwJ8273Mlxh5noW3RA7l6sG0sG2NO1eRqVd1H9xwxQ2lgNrny9hCS4yC?=
 =?us-ascii?q?Z4kzc3oaqF3SzC2vjtewADOmFWWmZil1DsIY6vgtAeXUioaRUplRS/6Ub7wahb?=
 =?us-ascii?q?uLpwL23JTUhUeCj2KnloUrGsubqaf85P9JQovD1XUeS9e1ybSqTxowAH0yPlBG?=
 =?us-ascii?q?ZewDE7dze3upT2hRB6iWSdLGpto3rdY81/2RDf5NnET/5LwjUGXDV4iSXQBlWk?=
 =?us-ascii?q?Pdmm58+Ul5TAsuC5TW6hTYdccSrozYOBsiu0+2tqDAa7n/CynN3nDAc73TX619?=
 =?us-ascii?q?lsSSXHshL8bpP32KS9NOJtZlNoC0Pk68pmBoF+lZM9hZEK1ngdnJmV/3sHkWHo?=
 =?us-ascii?q?PNVf2KL+amcNRDERz97U5gjlxFNsLnaTy43lUXWdx9NrZ8OmbWMOxiI988dKBb?=
 =?us-ascii?q?+X7LNenCt5uFq4rR/Lbvh7kTcQ0v8u6H8cg+EUtwsh1CSdArYOHUZGOSzgjQiH?=
 =?us-ascii?q?79e7rK9PfmagbaCw1FZindCmFLyCpwBcWHXjdZs4Ey5/8N5/ME7S333p8Y7rZs?=
 =?us-ascii?q?PQbd0Iux2QkhfAifVVKZ0rmvoLgypnJXzyvXk/x+Enihxu2ImwvJKbJGV14KK5?=
 =?us-ascii?q?HhlYOyXpZ8MU/zHhl6dfkdyQ34CyBZVhATQLUYDsTfKpFjISqPvmOxyPED06tn?=
 =?us-ascii?q?eUB77fERWD50dhqnLFC4qrOG2PJHkF0dViQwGQK1dFjwATWDU6g4Q1FgS3xMH6?=
 =?us-ascii?q?dEd55zYR5kP3qxdWy+JoMQX/XXnbpAuydjg0T52fJgJM7g5e/0fVLdCe7uVrEi?=
 =?us-ascii?q?Fa5JKhqRKCKneBawRUF20JWVGEB1P+Prmo/9bA6POVBu6/L/vIfLWPpvZSV/aO?=
 =?us-ascii?q?xZKzzIRm+yyAOdmIPnlnF/c7wFZMXWhlG8TFnDUCUywWlyXQb86CuRez4Ct3ot?=
 =?us-ascii?q?qk8PTsXgLv6pCCC79TMdVp5hC3jr2PN++WhCZlNzlY0okAymPPyLgaxFQSkT1h?=
 =?us-ascii?q?dyGxEbQcsi7AVKLQlbFWDx4YaCNzNdFE76Em3glKNs7UlMn11qNjjvMuD1dFVF?=
 =?us-ascii?q?rhmtymZMAQImG9Mk/HC1iPNLicOTLLxMT3a7umSbJMlOVUqwGwuTGDHkD5IzSM?=
 =?us-ascii?q?jCPpWA6vMO1WiCGbPQdTuIW8chZrFGjiQ8jqahy9MN9rkzI2xac4iW/NNW4ZKT?=
 =?us-ascii?q?J8aV9CrqWM7SNEhfVyA3BB7ntgLeWehymV9fXXKpYIvvttGSl0k+Na4HIny7pa?=
 =?us-ascii?q?9i1ERfp1mDfMod5quV2pju6Pyj9/WhpUtjlLnJ6LvVllOajB9phPQ3DE/BcM7W?=
 =?us-ascii?q?WWExsLpttlBcfpu6Bf0dXPkKPzKDFf89Pb58ccBs7UKN6ZP3olKxbmBDnUDA5W?=
 =?us-ascii?q?BQKsYCvzjlJcnLmpsDWwr5w+p4Km0M4CQ6FWUXQ5H+0XD0BiEsBEJpprCHdsuL?=
 =?us-ascii?q?qWnMMZrVmjvh/cWN5doNiTVe+AB/jzADOC1/9FYQFOyLi+N5lFcsXb2kBvY1p7?=
 =?us-ascii?q?1LXtIGrxc+1vg2U1fwgvoEtQ8nlWSmw1xlKgaxuzvjkUD/HizTAsjQ4rK8sw7y?=
 =?us-ascii?q?vl/VB/DxyCnm14q0g1h9yvyWSebSXtJbm3dYxTASf4u0U9NYm9SAFwO17h1Xd4?=
 =?us-ascii?q?PSvJEuoCx4Brcnpm3UqF4cNC?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AEAABHtw5ch0O0hNFkDg0BAQEBAwEBA?=
 =?us-ascii?q?QcDAQEBgVEGAQEBCwGCaYECJ4wTjA+CIY15iUSBbjELCAGHbSI0CQ0BAwEBAQE?=
 =?us-ascii?q?BAQIBEwEBAQgNCQgpIwyCNiQBgmkCJBM/BgkCKyUDDAVJARIFgxwBggECAwqnJ?=
 =?us-ascii?q?jOKHwWMIREGgXkGh0EEGIR8giYCkDqQOwcCAocGhluDYSMKAoFzh3eHRgGJIoR?=
 =?us-ascii?q?zjGGCDnAVgycTgW0nF4Yjhz9aU4EFAQEhE4tkAQE?=
X-IPAS-Result: =?us-ascii?q?A0AEAABHtw5ch0O0hNFkDg0BAQEBAwEBAQcDAQEBgVEGAQE?=
 =?us-ascii?q?BCwGCaYECJ4wTjA+CIY15iUSBbjELCAGHbSI0CQ0BAwEBAQEBAQIBEwEBAQgNC?=
 =?us-ascii?q?QgpIwyCNiQBgmkCJBM/BgkCKyUDDAVJARIFgxwBggECAwqnJjOKHwWMIREGgXk?=
 =?us-ascii?q?Gh0EEGIR8giYCkDqQOwcCAocGhluDYSMKAoFzh3eHRgGJIoRzjGGCDnAVgycTg?=
 =?us-ascii?q?W0nF4Yjhz9aU4EFAQEhE4tkAQE?=
X-IronPort-AV: E=Sophos;i="5.56,339,1539673200"; 
   d="scan'208";a="56868872"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 10 Dec 2018 11:03:40 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728962AbeLJTDg (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 10 Dec 2018 14:03:36 -0500
Received: from gateway23.websitewelcome.com ([192.185.49.184]:28498 "EHLO
        gateway23.websitewelcome.com" rhost-flags-OK-OK-OK-OK)
        by vger.kernel.org with ESMTP id S1726024AbeLJTDg (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 10 Dec 2018 14:03:36 -0500
X-Greylist: delayed 1325 seconds by postgrey-1.27 at vger.kernel.org; Mon, 10 Dec 2018 14:03:36 EST
Received: from cm14.websitewelcome.com (cm14.websitewelcome.com [100.42.49.7])
        by gateway23.websitewelcome.com (Postfix) with ESMTP id C6EBEEB2F
        for <linux-kernel@vger.kernel.org>; Mon, 10 Dec 2018 12:41:30 -0600 (CST)
Received: from gator4166.hostgator.com ([108.167.133.22])
        by cmsmtp with SMTP
        id WQUkgRsvvkBj6WQUkgLv27; Mon, 10 Dec 2018 12:41:30 -0600
X-Authority-Reason: nr=8
Received: from [189.250.70.203] (port=36268 helo=embeddedor)
        by gator4166.hostgator.com with esmtpa (Exim 4.91)
        (envelope-from <gustavo@embeddedor.com>)
        id 1gWQUj-001EIf-23; Mon, 10 Dec 2018 12:41:30 -0600
Date: Mon, 10 Dec 2018 12:41:24 -0600
From: "Gustavo A. R. Silva" <gustavo@embeddedor.com>
To: "David S. Miller" <davem@davemloft.net>,
        Alexey Kuznetsov <kuznet@ms2.inr.ac.ru>,
        Hideaki YOSHIFUJI <yoshfuji@linux-ipv6.org>
Cc: netdev@vger.kernel.org, linux-kernel@vger.kernel.org,
        "Gustavo A. R. Silva" <gustavo@embeddedor.com>
Subject: [PATCH] ipv4: Fix potential Spectre v1 vulnerability
Message-ID: <20181210184124.GA24497@embeddedor>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.9.4 (2018-02-28)
X-AntiAbuse: This header was added to track abuse, please include it with any abuse report
X-AntiAbuse: Primary Hostname - gator4166.hostgator.com
X-AntiAbuse: Original Domain - vger.kernel.org
X-AntiAbuse: Originator/Caller UID/GID - [47 12] / [47 12]
X-AntiAbuse: Sender Address Domain - embeddedor.com
X-BWhitelist: no
X-Source-IP: 189.250.70.203
X-Source-L: No
X-Exim-ID: 1gWQUj-001EIf-23
X-Source: 
X-Source-Args: 
X-Source-Dir: 
X-Source-Sender: (embeddedor) [189.250.70.203]:36268
X-Source-Auth: gustavo@embeddedor.com
X-Email-Count: 5
X-Source-Cap: Z3V6aWRpbmU7Z3V6aWRpbmU7Z2F0b3I0MTY2Lmhvc3RnYXRvci5jb20=
X-Local-Domain: yes
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

vr.vifi is indirectly controlled by user-space, hence leading to
a potential exploitation of the Spectre variant 1 vulnerability.

This issue was detected with the help of Smatch:

net/ipv4/ipmr.c:1616 ipmr_ioctl() warn: potential spectre issue 'mrt->vif_table' [r] (local cap)
net/ipv4/ipmr.c:1690 ipmr_compat_ioctl() warn: potential spectre issue 'mrt->vif_table' [r] (local cap)

Fix this by sanitizing vr.vifi before using it to index mrt->vif_table'

Notice that given that speculation windows are large, the policy is
to kill the speculation on the first load and not worry if it can be
completed with a dependent load/store [1].

[1] https://marc.info/?l=linux-kernel&m=152449131114778&w=2

Cc: stable@vger.kernel.org
Signed-off-by: Gustavo A. R. Silva <gustavo@embeddedor.com>
---
 net/ipv4/ipmr.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/net/ipv4/ipmr.c b/net/ipv4/ipmr.c
index ea04e38f56e9..8c03fb05d3e6 100644
--- a/net/ipv4/ipmr.c
+++ b/net/ipv4/ipmr.c
@@ -69,6 +69,8 @@
 #include <net/nexthop.h>
 #include <net/switchdev.h>
 
+#include <linux/nospec.h>
+
 struct ipmr_rule {
 	struct fib_rule		common;
 };
@@ -1612,6 +1614,7 @@ int ipmr_ioctl(struct sock *sk, int cmd, void __user *arg)
 			return -EFAULT;
 		if (vr.vifi >= mrt->maxvif)
 			return -EINVAL;
+		vr.vifi = array_index_nospec(vr.vifi, mrt->maxvif);
 		read_lock(&mrt_lock);
 		vif = &mrt->vif_table[vr.vifi];
 		if (VIF_EXISTS(mrt, vr.vifi)) {
@@ -1686,6 +1689,7 @@ int ipmr_compat_ioctl(struct sock *sk, unsigned int cmd, void __user *arg)
 			return -EFAULT;
 		if (vr.vifi >= mrt->maxvif)
 			return -EINVAL;
+		vr.vifi = array_index_nospec(vr.vifi, mrt->maxvif);
 		read_lock(&mrt_lock);
 		vif = &mrt->vif_table[vr.vifi];
 		if (VIF_EXISTS(mrt, vr.vifi)) {
-- 
2.17.1

