Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 08:54:26 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 22231580380;
	Wed, 12 Dec 2018 10:45:13 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 12 Dec 2018 10:45:12 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AmvkgjR+Ktbe2y/9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1egfIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyaM/Rwc63ZcN4aXGZNQttdWzVcD4O9?=
 =?us-ascii?q?dIsEEu4NMfhEo4XholcDqxmwChOpBO3t1DBHnGL50rMg0+ohEAHJwgggEM8Tu3?=
 =?us-ascii?q?rWstr6LrodXv6vzKLV0DvMc/RW2S386IjOfRAqvPWAUattfcbNzEUiER7OgFeN?=
 =?us-ascii?q?poz/Jz6b2OQDvXaG4eRjW+KghHIopBxzrTeh3ccskovEi5kJylzY7yh13Jo5KM?=
 =?us-ascii?q?e6RUN9fNWqEIFQtyafN4ZuX84iRHtouCchyr0Co5G7YjUBxo45yB7DaPyHdJaI?=
 =?us-ascii?q?6Q/kWemKOTd1n2hqeLa+hxms90ityffwWdSq31tTqCdOj9fCtncI1xPJ68iHTO?=
 =?us-ascii?q?Nw8V2k2TmSzQzc9uZEIUUymKHGKJAh2qY9moQPvUnHBCP6hUv7gLGMekk5+eWk?=
 =?us-ascii?q?9/7rb7Tkq5OEKYN4lh3yP6orl8OhHes1NxYCUHOH9uuh0bDs4E70TKlWgvAzkK?=
 =?us-ascii?q?TWrJ7aKtkeq6O2GQBY04Uu5hO8Ajqk3tkUgXwKIVFFdR+DkoTkPUzFLuriAvel?=
 =?us-ascii?q?mVuslS9mx/DYMb3lBZXANmbDkLj/crZn8UJcyxQ8zcpZ551KDrENOvXzWlX+tN?=
 =?us-ascii?q?DADx85NRK7w/r/Bdljyo8TXXiDDrKXPa/Mq1OE++EiL/WWaIIUujvxM/0l6OTv?=
 =?us-ascii?q?jX89l18dZ66p3Z4PZXC8H/RmJViZYHX1jtcCD2gKpAw+Q/LuiFGbVj5SaXCyUL?=
 =?us-ascii?q?wm5jwgFoKmApnMRpq3jLyCwii7BJtWaX5CClyWFnfobYqEV+8WaC2OOs9hjiAE?=
 =?us-ascii?q?Vb+5Ro8l1BGutxH1x6BoL+rJ4SAYsZPj1N5o5+zcjx0y9Dp0D9iD3GGJVW17gm?=
 =?us-ascii?q?QIRzou1qBlvUN90kuD0bR/g/FAFdxc/fJJUhsgOp7b1eB6C83yVRjHfteGU1um?=
 =?us-ascii?q?RtSmATcsTtM+2dMOYkB9G8m8gRDHxSalH7gVl7mTDpwu7q3cx2TxJ9p6y3ve1q?=
 =?us-ascii?q?khiEcpTtFMNW2hgK5/8Q/TCpXNk0WYkaaqaKsd0DTM9GeF0WqBokVYXBRsXqXC?=
 =?us-ascii?q?WHAVflHWosjh5kPeU7+uDqwqPRFayc6CLatKacfljU9cS/fhI9neZ2Oxm2GtBR?=
 =?us-ascii?q?eH3L+MbYzqe3kD0yXZEkQLjwcT/XOePwgkGiihu37eDCBpFV/3YEPj6+9+pGm/?=
 =?us-ascii?q?Tk811Q6KaUJh2qGx+h4Ug/ycVvwS0qgFuCcntzV7AlK908jKBNqHogprZL9cbs?=
 =?us-ascii?q?8l4FdbyWLZsBRwMYG6IKB8mFESaQR3sFno1xVsFIpAl88mrHcpzAp3LaKVy1dB?=
 =?us-ascii?q?dzKe3ZDtNbzbMGjy/Baza6HI3lHSysqZ+qAK6P4gsVXsoBmpFlY+83Vgy9Razm?=
 =?us-ascii?q?GT5ovUAwYIUZL+SEA39wNkqLHceSQ944LU1XtxMai7qDPC2tQpBPc7xRakZdtQ?=
 =?us-ascii?q?LKSEFArqGc0AG8euMPAqm0Subh8cIOBS9as0P8S6d/uG2K+nJvpgkCihjWRd5I?=
 =?us-ascii?q?B900SM9yVnR+7M3pYFxeyY3wSdWzf9ilehrt74mYReaT4OGWq/zDDuBJRNaa1q?=
 =?us-ascii?q?YYYLFWCuLtWtydV6mZHsVGBX9V65C1wdxc+mZACdb1r+3Q1Xy0QauninmSq+zz?=
 =?us-ascii?q?xpnDAltKuf3CrSw+v8cBoLIHJERG5njV30O4i7k8gaXFS0bwgujBak5Vv6y7JH?=
 =?us-ascii?q?q6hlLmjTQV1Hfy75L2x5Vquwt7yCY9NA6Z8ysCVXVvi8bk6eSrLnvxQa1CbjFX?=
 =?us-ascii?q?NExD8nbzGqpon5nxtihWKHLXZ8sGDWedttyhfY/tDcQ+Be3iAHRCVhlTbYHFy8?=
 =?us-ascii?q?MMS38tWOkJfDtPuzV2agVp1VbCnqwpmMtCq95W12HxK/m+q/lcHgEQg/ySX7zc?=
 =?us-ascii?q?VlVT3UrBbgZYnmz6S7MeN9ckhoHlP88Nd6Godln4s0hZEQ32Uah5qP8XoGl2fz?=
 =?us-ascii?q?LctU2abkYHURQj4Lxsbf4BL51017MnKJ24X5W22fwsR7fdm6YWAW2iUn48BREq?=
 =?us-ascii?q?iU779EnSpzolWmqwLcevx9njYbyfsz538WmeAJuAwxziqDBrAeB1VXPSvplx6Q?=
 =?us-ascii?q?9dCxsL1XZHqzcbi3zEd/ncquDLaYrgFeWXb5fIwvHStx7sV5LVLN32f/6oDieN?=
 =?us-ascii?q?nMc90TsgeYnAvHj+hQMJgxjOYFhTJ7OWLhun0o0+07ggZv3Z2gvIiHNn9i/KS2?=
 =?us-ascii?q?AhNDMj31ZsUT+izijKpEn8aW2ZyvEYtlGjkRQJToSveoGioItfv7LwaODCE8qn?=
 =?us-ascii?q?CDFLraHA+f611po2jBEp+1LHGXOGcWzc95SxaDPkxfjxsZXDE7np4/CwCry9bt?=
 =?us-ascii?q?cEZ/5jAN+FH4rgFAxf5vNxn6Sm3fvhunai8oSJiDKxpb9h1C50DQMcCE7+N8BS?=
 =?us-ascii?q?dY/oC6rAyWK2yWfABIDWAPWkyZCFHvJLiu5d/c8+eGAuqyNefBYbKLqeZGTfeH?=
 =?us-ascii?q?2Yqv0pd6/zaLLsiAJWNtD/o/2kpeR3x5H9nZli4LSywWkSLNcsGaqA29+i1xss?=
 =?us-ascii?q?Cw7vDrVBjz6ouIDrtYKc9v9AyugaefK+6Qgz50KTRC2ZMJ23DI06IT3EIIhyFt?=
 =?us-ascii?q?ajmtEqkAtSjXQ6LLgaJXCx8bayVuNMpH9a483w9NOdLFhdPxzLJ3kvk1C1JdX1?=
 =?us-ascii?q?z7hs6pfdAKI326NF7fBEeLM6mGJSTWw87tZ6OwU6ZQjOJStx2/ojubF07jPjKe?=
 =?us-ascii?q?lzjmTRyvMOdMjD2FMxxaoo2ybhFtCW37RtL8dhK7KMN3jSExwbAshnPFK28cMT?=
 =?us-ascii?q?t/c0NMtLGQ7jlYgvJwG2Nf9HplMPKElj2d7+nZLJYWrPRqDj51l+Jc/HQ11b9V?=
 =?us-ascii?q?4DtYS/xynSvYtsRurE2+kumT1jpnVwJDpSxWhI2Qp0VtJ6XY+oNEWXbF5x8N6W?=
 =?us-ascii?q?SQCxIXp9pqENHvuqZQysTRm6L3MjtN79XU/c4EDcjONM2HKGYhMQbuGDPMEAsF?=
 =?us-ascii?q?TDurOXvDiEBHjP6S9mOarp4hp5jomZoOTKJbVVMvGvMbDERlAMINIJNtUjw4lr?=
 =?us-ascii?q?6bidYC5WCioxnJWMVaopfHW+qSAPr1LjaZiLhEZx0QzrL5LYQcLIv720N5Z1l+?=
 =?us-ascii?q?nYTKHVfQXN9Xri1gaA80vFtC8HxkQmIv3ELlb1Dl3HhGPPi4j1YSlxd5ZOU37z?=
 =?us-ascii?q?TtqwMzO0bNjCg9ik88nZPimz/HIxDrK6Lld4ZMCjHwvlZ5Cp7nQAFrJVm4hWRt?=
 =?us-ascii?q?MDbJQeIXg7Y2JjMjsxPVpZYaQa0UdqZDehJFlKma?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AEAADEVRFch0O0hNFkGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUwIBAQEBAQsBgTCBOYECJ4N8iHiLAjCCDRSTSoN1gXEWGA8?=
 =?us-ascii?q?EAYc+IjYHDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2DAwDAwEBgmYBAQEBAQEBA?=
 =?us-ascii?q?QIgHQEBLAsBBAEJAQEKDgoCAgUhAgIDDAVJGIMcAUGBOAgBAwEKpWpwgS+CdgE?=
 =?us-ascii?q?BBYEwAVADhSADBYELihWBHBeBQD+BEYMSgjZoA4RkMYImiRsSQIFFlVwJgRaFd?=
 =?us-ascii?q?YpBI4FchRqCfodSjh2LIoFNBIIDMxoIHBSDJ4Ibg20ziiE/MgEQAnEBAQGNAAE?=
 =?us-ascii?q?B?=
X-IPAS-Result: =?us-ascii?q?A0AEAADEVRFch0O0hNFkGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUwIBAQEBAQsBgTCBOYECJ4N8iHiLAjCCDRSTSoN1gXEWGA8EAYc+IjYHDQEDA?=
 =?us-ascii?q?QEBAQEBAgETAQEBCA0JCCkjDII2DAwDAwEBgmYBAQEBAQEBAQIgHQEBLAsBBAE?=
 =?us-ascii?q?JAQEKDgoCAgUhAgIDDAVJGIMcAUGBOAgBAwEKpWpwgS+CdgEBBYEwAVADhSADB?=
 =?us-ascii?q?YELihWBHBeBQD+BEYMSgjZoA4RkMYImiRsSQIFFlVwJgRaFdYpBI4FchRqCfod?=
 =?us-ascii?q?Sjh2LIoFNBIIDMxoIHBSDJ4Ibg20ziiE/MgEQAnEBAQGNAAEB?=
X-IronPort-AV: E=Sophos;i="5.56,345,1539673200"; 
   d="scan'208";a="55641953"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 12 Dec 2018 10:45:11 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728227AbeLLSpJ (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 12 Dec 2018 13:45:09 -0500
Received: from mail.skyhub.de ([5.9.137.197]:50000 "EHLO mail.skyhub.de"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727910AbeLLSpI (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 12 Dec 2018 13:45:08 -0500
Received: from zn.tnic (p200300EC2BCDD8007CFD4A6887308591.dip0.t-ipconnect.de [IPv6:2003:ec:2bcd:d800:7cfd:4a68:8730:8591])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.skyhub.de (SuperMail on ZX Spectrum 128k) with ESMTPSA id 09D3C1EC0AC4;
        Wed, 12 Dec 2018 19:45:06 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=alien8.de; s=dkim;
        t=1544640307;
        h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
         to:to:cc:cc:mime-version:mime-version:content-type:content-type:
         content-transfer-encoding:in-reply-to:in-reply-to:  references:references;
        bh=8EEzVwbJSnq5zQmBptdnyW9u44R7hAzK9i+qfnnKTGw=;
        b=eyBJsRCqvI3mxrz1tUxS6JQiaugEEY/B3d6WkEpZIFdZfYcwY0R5FZMXqiZ0PhWPsl+Ois
        VYR6Gx8+OJ2cQMpZmWx/uHwIn57Nez0Knk6BAAFhzEdYAO3KCOpT6KHlnSgFO1gxBXE8ku
        FxpKuRHeeuX60C7X2pL/Tw2bC8+Fm1E=
Date: Wed, 12 Dec 2018 19:44:59 +0100
From: Borislav Petkov <bp@alien8.de>
To: Andy Lutomirski <luto@kernel.org>
Cc: Tom Lendacky <Thomas.Lendacky@amd.com>,
        LKML <linux-kernel@vger.kernel.org>, X86 ML <x86@kernel.org>,
        "H. Peter Anvin" <hpa@zytor.com>,
        Josh Poimboeuf <jpoimboe@redhat.com>,
        Peter Zijlstra <peterz@infradead.org>,
        John Stultz <john.stultz@linaro.org>
Subject: Re: [RFC PATCH 4/4] x86/TSC: Use RDTSCP
Message-ID: <20181212184459.GE6653@zn.tnic>
References: <20181211222326.14581-1-bp@alien8.de>
 <20181211222326.14581-5-bp@alien8.de>
 <CALCETrVArfAAbQKJ-g_5pOy6dMVgx-FC_mjdC9xzL1jU9T07jw@mail.gmail.com>
 <59aad362-4a5b-dd8b-642f-0dc3f83cf7ee@amd.com>
 <20181211233901.GV27375@zn.tnic>
 <CALCETrXvZ4avdUh2bTLVTTz3Jxogo3zK5akWTsJ=rkJpf1XiDg@mail.gmail.com>
 <20181212100814.GB6653@zn.tnic>
 <CALCETrWSG5825HrxwEJGqbSoRz=A_2O-GSBD+K_q9YPHu2TB6A@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
In-Reply-To: <CALCETrWSG5825HrxwEJGqbSoRz=A_2O-GSBD+K_q9YPHu2TB6A@mail.gmail.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Wed, Dec 12, 2018 at 10:07:03AM -0800, Andy Lutomirski wrote:
> You're proving my point, I think.  CPUID, IRET, MOV to CR, etc are
> "serializing".  LFENCE, on many CPUd and depending on MSRs, is a
> different kind of serializing.  MFENCE is something else.  All LOCK
> instructions are some kind of barrier, but I don't think anyone calls
> them "serializing".

Yeah, peterz and I hashed it out a bit today on IRC about the different
meanings of serializing. I see your point now.

> The uaccess users of barrier_nospec() are presumably looking for a
> speculation barrier in the sense of "CPU, please don't execute the
> code after this until you're sure that this code should be executed
> for real and until all inputs are known, not guessed."

Yeah, I believe AMD's paper has this nicely written:

"MITIGATION G-2

Description: Set an MSR in the processor so that LFENCE is a dispatch
serializing instruction and then use LFENCE in code streams to
serialize dispatch (LFENCE is faster than RDTSCP which is also dispatch
serializing). This mode of LFENCE may be enabled by setting MSR
C001_1029[1]=1.

Effect: Upon encountering an LFENCE when the MSR bit is set, dispatch
will stop until the LFENCE instruction becomes the oldest instruction in
the machine."

https://developer.amd.com/wp-content/resources/90343-B_SoftwareTechniquesforManagingSpeculation_WP_7-18Update_FNL.pdf

which is basically what you want for the whole mitigation crap if you
want to kill speculation - you simply hold dispatch until the LFENCE
retires.

> The property I want for RDTSC ordering is much weaker: I want it to be
> ordered like a load.  Imagine that, instead of an on-chip TSC, the TSC
> is literally a location in main memory that gets incremented by an
> extra dedicated CPU every nanosecond or so.  I want users of RDTSC to
> work as if they were reading such a location in memory using an
> ordinary load.  I believe this gives the real desired property that it
> should be impossible to observe the TSC going backwards.  This is a
> much weaker form of serialization.

Well, in that case you need something new.

Because, the moment you have a RDTSC in flight and a second RDTSC comes
in and that second RDTSC must *not* bypass the first one and execute
earlier due to OoO, you need to impose some ordering. And that's pretty
much uarch-dependent, I'd say.

And I guess on AMD the way to do that is to stop dispatch until the
first RDTSC retires.

Can it be done faster? Sure. And I'm pretty sure there's a lot of pesky
little hw details we're not even hearing of, which get in the way.

-- 
Regards/Gruss,
    Boris.

Good mailing practices for 400: avoid top-posting and trim the reply.
