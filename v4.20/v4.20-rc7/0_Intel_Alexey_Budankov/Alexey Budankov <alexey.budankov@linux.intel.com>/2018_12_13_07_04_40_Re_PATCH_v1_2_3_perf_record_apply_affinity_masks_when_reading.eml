Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 21:20:32 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 599F1580380;
	Wed, 12 Dec 2018 23:04:52 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga002-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 12 Dec 2018 23:04:51 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ArUcT3BYm1/CLBWxTBlxPDzD/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpcizYR7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyxPDJ6i?=
 =?us-ascii?q?YYsBCOoPPuhWoIfyqFQMsRSwChKsBPvtxzJTmn/737c33/g9HQzI3gEtGc8Fvn?=
 =?us-ascii?q?TOrNXyMacfSfy4zK3WwjTMcfxX2Sr25ZXVch88u/6MW7Fwcc3PyUIyEA7KlFGQ?=
 =?us-ascii?q?ppLqPjyL1uUBqXOU7/d9Wu21jW4nqAZxoia0y8coi4nJgJ8Vy1/e+SV4xoY1Oc?=
 =?us-ascii?q?O3SEphbdG4F5tQsjiXOo1rSc0hW2FloDg2xqECtJKhYSQHxoorywTCZ/GEb4SE?=
 =?us-ascii?q?+BPuWeSJLTtlgH9pZqizihay/ES6yuDwSNO43EtEoydElNTHq2oD2AbJ6sedT/?=
 =?us-ascii?q?tw5keh1iiL1wDU8uxEP080mrTBK5I7wb4/iIATsULdES/ygkn2i7WWdko89uip?=
 =?us-ascii?q?7eTofKnmq4eCO4NojgzyKLkil8KhDegiLwQDXHSX9f692bDh5UH5Ra9Fjvwykq?=
 =?us-ascii?q?nXqpDaIsEbq7a9Aw9U1IYj9hm+Ay6l0NsGh3kHKkxKeBaeg4juNVDOJu73De2k?=
 =?us-ascii?q?jlSynzdk2erGMqfiAprTNHjDlqnufbJn505b0gozwshT54hIBbEZPPLzRkjxuc?=
 =?us-ascii?q?TcDh84MAy73fzrCdpg1o4FXWKPA6mZML7dsFOS5+IvJfWMa5ERuDrnN/cl4Pvu?=
 =?us-ascii?q?h2cjmVABZampwYcXaHegE/RmOUqZYGbsjc0GEWsQvgo+UfbliFuNUTNIY3ayXq?=
 =?us-ascii?q?Q85iw0CY68DIfDQJytj6KF3CuhApJWYWVGAEiWEXj0b4WER+sMaCWKL89jlTwL?=
 =?us-ascii?q?S6KtS4wm1RGosg/6zKFqLu7V+i0eqJLi28J55+zVlREu6zN0C96R3H2KT2Fxhm?=
 =?us-ascii?q?kIXSM53LhjoUxhzVeOybJ3g+dYFdxU5PNFSB06OoTez+FhD9DyWwTBfsqGSVq8?=
 =?us-ascii?q?Q9WmBy0xQcw1w9MUf0l9HNCihAjZ3yW2G78Vi6CLBJss/6LfxXfxIdxxy3LH1K?=
 =?us-ascii?q?Y7iVkmTdBCNWmnhq556gjSCJTFk0Sfl6a2a6sc2DTB+3uEzWqLpEtYShJ/Ub3Z?=
 =?us-ascii?q?XXADYUvbtcn26VncT7CwE7gnMhFOyciZKqRUbN3lilFGRPTmONTaeG+xn2awBR?=
 =?us-ascii?q?CVxrKDdobqemMd3DnDB0gAiQwc4XGGNQ0mDCe7v23eFCBuFU7oY0707OZxsm27?=
 =?us-ascii?q?QVEuwwGKdUJh0aG19QAThfGHT/MT37QEuDouqjluHVa92c7WBMSEpwZ7YKpcZt?=
 =?us-ascii?q?Y96k9d1W3Frwx9IoCgL6d6i14CcgR3ukTu1wl3CoRAi8QqsGkmzA1oKaKc0VNB?=
 =?us-ascii?q?cTyY0Iv0Or3WLGny4R+uZ7TX2lHYzNaZ5KMP5O4kpFXkuQGjDlAi/Gl/09lJz3?=
 =?us-ascii?q?uc4Y3HAxAWUZ3vXUc46Rh7q6vBbSkg+ozbz3tsMaqzsj/cwN8pAOolyhC9f9ZQ?=
 =?us-ascii?q?Kq+EFQnyE9EECMiqMuAlh1+pbhccNuBI6KE0J9+md+eB2KOzPOdggSiqgnhd7I?=
 =?us-ascii?q?F80kKD7Sx8SuHT0pYBwvGY2BaHVjjmgFegtMD3hZ5LZTUIEmWjzijkAZZbZrdu?=
 =?us-ascii?q?coYTFWeuP8q3y81kh57sR3FX7kSjCE4B2MOzfxqdcUb93QxJ2UsLu3OnnTa3wC?=
 =?us-ascii?q?JukzEuqKqSxyjOw+XkdBoaNW9HXmhijVHwIYeqi9AWRlSnbw8slBG9/0b127Bb?=
 =?us-ascii?q?pLhjL2nUWUpJfyn2I3tiU6eqrbqCfshP5YgssSVWVuS8fF+bRqT8oxsczyPsAW?=
 =?us-ascii?q?9eyConeDGtv5XzhwZ6h36FLHZvsHrZftl9xRXF69zGRv5R3T0GSDNjiTbNBVi8?=
 =?us-ascii?q?PNip/dOKmJfFqe2+U2OhVptOcSjk14+AtS275XF0Dh27hfy8htrnEQ0i2y/hy9?=
 =?us-ascii?q?ZqTTnIrAr7YoTz16W1K+VnclNqBF/97cp3AYV+koo2hJEN1nkWnJSV/XwbkWjt?=
 =?us-ascii?q?NdVXw77xbH0IRTQT2d7a/BDl2FF/LnKO34/5VW+Swsp7a9m6f2MZwCQ9789RBa?=
 =?us-ascii?q?eQ7bxEmzZ1o1WioQLQZ/h9gikSyf805HEGhOEJvRInzj+BDbAKAUlYISvsmgyN?=
 =?us-ascii?q?79C/r6VYfnyjcLau20plgdCuEquCrRpCV3bjdZcvBitw7sR5MFLR33z/8IDkeN?=
 =?us-ascii?q?/Mbd0Nsh2YiQvPj+9QKJgpjPoFmTJnOX7hvX0i0+M7kRtu3ZSgsImGMWpt+r+5?=
 =?us-ascii?q?AgVDNj30fM4T/jDtjaBDnseZxYyvH5NhGikVU5vsV/6nDDUStfH/PQaUDDI8sm?=
 =?us-ascii?q?ubGabYHQKH80hptXXPE5S2N32NIHkZ0M5vRB2cJExZnQAVUy82np8/FgC22sPh?=
 =?us-ascii?q?dF116SwW5l79shFM0P5nNwHjUmfDowelcjU0R4KaLBVI9QFO/VvVPdad7uJuHC?=
 =?us-ascii?q?FY45uhoxaWKmGAYwRIDGcJWlGLBlz5P7mu48XA/PacBuakM/TOZrCOo/REV/iU?=
 =?us-ascii?q?3ZKvzpdm/zGUO8SPOXliEuQ72ldZUnB/AcjZgDIPSyoYly/Wa86bpRG8+jB4r8?=
 =?us-ascii?q?yl8fTrXh7v6pWLC7dILdpv/BW2i7+ZN+GMnCZ5NSpY1pQUyH/I1rcf3V0SiyJv?=
 =?us-ascii?q?dzW3ErQArynNTK3Ola9NEh4bcDh+NM9J76I6wwlMNtTXitLz1r5kkPE1D01JWk?=
 =?us-ascii?q?DmmsGsfcYKOX2yNEvbBEaXM7SLPSfEw9zsbqOmV7JRjP9YtxmxuTuAF0/jPzKD?=
 =?us-ascii?q?lyTmVhy1MOFMij2bMwJauI2nbhltDm3jRsr8ahKnKN93kSE2wbosi3PWNG4cNC?=
 =?us-ascii?q?JwfF9XorKM7SNXnPN/FndF7npkK+mEhimY4/PZKpYQrftkHCB0m/hG73Q9zrtf?=
 =?us-ascii?q?9DtES+BtmCvOst5upEmrk+mVxTphVRpOqzBLi5qKvEViI6rZ8JZAVG3A/BIM62?=
 =?us-ascii?q?WQFhsLq8FkCt3pp6Bf1NzPmLjvJzdF9tKHtfcbUurVMsPPF346OFK9GjnQFwIt?=
 =?us-ascii?q?VzOnNWjDwUdalafB2GeSq80TrpX8lYtGYKJXXVo2Ee1SXk1hEcwPMdF9Qz8tl7?=
 =?us-ascii?q?2ckuYM5HyjvF/QQtlXutbMUffEUqanEyqQkbQRP0hA+rj/N4lGc9Sjg0E=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAAAuAxJch0O0hNFjGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBgVWCFieDfIgZjBKCDRSXP4FzFBgTAYdAIjQ?=
 =?us-ascii?q?JDQEDAQEBAQEBAgETAQEBCA0JCCkvgjYkAYJhAQEBAQIBAQIgBFIFAQkBAQoOC?=
 =?us-ascii?q?gICJgICA1QGDQYCAQEBgxyBeQgFpwh8M4o2gQuLMTQBgSI/gTiCa4gFglcCiWW?=
 =?us-ascii?q?BS4RcNJBMBwKCIwSPKgYYgVyFGoMDJocnklaGaYFGgg5NI4M8kF48AQExAYEEA?=
 =?us-ascii?q?QGMWgEB?=
X-IPAS-Result: =?us-ascii?q?A0ABAAAuAxJch0O0hNFjGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBgVWCFieDfIgZjBKCDRSXP4FzFBgTAYdAIjQJDQEDAQEBAQEBA?=
 =?us-ascii?q?gETAQEBCA0JCCkvgjYkAYJhAQEBAQIBAQIgBFIFAQkBAQoOCgICJgICA1QGDQY?=
 =?us-ascii?q?CAQEBgxyBeQgFpwh8M4o2gQuLMTQBgSI/gTiCa4gFglcCiWWBS4RcNJBMBwKCI?=
 =?us-ascii?q?wSPKgYYgVyFGoMDJocnklaGaYFGgg5NI4M8kF48AQExAYEEAQGMWgEB?=
X-IronPort-AV: E=Sophos;i="5.56,347,1539673200"; 
   d="scan'208";a="54997807"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 12 Dec 2018 23:04:50 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726837AbeLMHEp (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 13 Dec 2018 02:04:45 -0500
Received: from mga12.intel.com ([192.55.52.136]:23188 "EHLO mga12.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726500AbeLMHEp (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 13 Dec 2018 02:04:45 -0500
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga002.fm.intel.com ([10.253.24.26])
  by fmsmga106.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 12 Dec 2018 23:04:44 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,347,1539673200"; 
   d="scan'208";a="125491785"
Received: from linux.intel.com ([10.54.29.200])
  by fmsmga002.fm.intel.com with ESMTP; 12 Dec 2018 23:04:43 -0800
Received: from [10.125.251.221] (abudanko-mobl.ccr.corp.intel.com [10.125.251.221])
        by linux.intel.com (Postfix) with ESMTP id A74AF580380;
        Wed, 12 Dec 2018 23:04:41 -0800 (PST)
From: Alexey Budankov <alexey.budankov@linux.intel.com>
Subject: Re: [PATCH v1 2/3] perf record: apply affinity masks when reading
 mmap buffers
To: Jiri Olsa <jolsa@redhat.com>
Cc: Arnaldo Carvalho de Melo <acme@kernel.org>,
        Ingo Molnar <mingo@redhat.com>,
        Peter Zijlstra <peterz@infradead.org>,
        Namhyung Kim <namhyung@kernel.org>,
        Alexander Shishkin <alexander.shishkin@linux.intel.com>,
        Andi Kleen <ak@linux.intel.com>,
        linux-kernel <linux-kernel@vger.kernel.org>
References: <42c2dcb4-7e6f-fcdb-7c87-e55ccb9884b0@linux.intel.com>
 <6e5df6f0-5dfa-265e-73cd-803de96ac9b2@linux.intel.com>
 <20181212121531.GD25240@krava>
Organization: Intel Corp.
Message-ID: <23e17f0d-ed4a-e1f9-3e22-9ef983836eaf@linux.intel.com>
Date: Thu, 13 Dec 2018 10:04:40 +0300
User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:52.0) Gecko/20100101
 Thunderbird/52.9.1
MIME-Version: 1.0
In-Reply-To: <20181212121531.GD25240@krava>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org


Hi,
On 12.12.2018 15:15, Jiri Olsa wrote:
> On Wed, Dec 12, 2018 at 10:40:22AM +0300, Alexey Budankov wrote:
>>
>> Build node cpu masks for mmap data buffers. Bind AIO data buffers
>> to nodes according to kernel data buffers location. Apply node cpu
>> masks to trace reading thread every time it references memory cross
>> node or cross cpu.
>>
>> Signed-off-by: Alexey Budankov <alexey.budankov@linux.intel.com>
>> ---
>>  tools/perf/builtin-record.c |  9 +++++++++
>>  tools/perf/util/evlist.c    |  6 +++++-
>>  tools/perf/util/mmap.c      | 38 ++++++++++++++++++++++++++++++++++++-
>>  tools/perf/util/mmap.h      |  1 +
>>  4 files changed, 52 insertions(+), 2 deletions(-)
>>
>> diff --git a/tools/perf/builtin-record.c b/tools/perf/builtin-record.c
>> index 4979719e54ae..1a1438c73f96 100644
>> --- a/tools/perf/builtin-record.c
>> +++ b/tools/perf/builtin-record.c
>> @@ -532,6 +532,9 @@ static int record__mmap_evlist(struct record *rec,
>>  	struct record_opts *opts = &rec->opts;
>>  	char msg[512];
>>  
>> +	if (opts->affinity != PERF_AFFINITY_SYS)
>> +		cpu__setup_cpunode_map();
>> +
>>  	if (perf_evlist__mmap_ex(evlist, opts->mmap_pages,
>>  				 opts->auxtrace_mmap_pages,
>>  				 opts->auxtrace_snapshot_mode,
>> @@ -751,6 +754,12 @@ static int record__mmap_read_evlist(struct record *rec, struct perf_evlist *evli
>>  		struct perf_mmap *map = &maps[i];
>>  
>>  		if (map->base) {
>> +			if (rec->opts.affinity != PERF_AFFINITY_SYS &&
>> +			    !CPU_EQUAL(&rec->affinity_mask, &map->affinity_mask)) {
>> +				CPU_ZERO(&rec->affinity_mask);
>> +				CPU_OR(&rec->affinity_mask, &rec->affinity_mask, &map->affinity_mask);
>> +				sched_setaffinity(0, sizeof(rec->affinity_mask), &rec->affinity_mask);
>> +			}
> 
> hum, so you change affinity every time you read different map?

That is what exactly happens when --affinity=cpu. With --affinity=node
thread affinity changes only when the thread gets mmap buffer allocated
at the remote node. For dual socket machine it is twice at max for one
loop execution.

> I'm surprised this is actualy faster..

Imagine that some app's thread running on cpu 0 of node 1 generates samples
into a kernel buffer which is also allocated at node 1. The tool thread 
running on cpu 0 of node 0 takes the buffer and puts some part of it into 
write syscall what can cause cross node memory move and induce collection 
overhead (from the kernel buffer into fs cache buffers executing some portion
of write syscall code on cpu 0 of node 0).

> 
> anyway this patch is doing 2 things.. binding the memory allocation
> to nodes and setting the process affinity, please seprate those and
> explain the logic behind

Separated in v2. Binding is implemented for AIO user space buffers only
to map them to the same nodes kernel buffers are mapped to. Tool thread 
affinity mask bouncing is implemented and applicable as for serial as
for AIO streaming. AIO streaming without binding can result in cross node 
memory moves from kernel buffers to AIO ones.

Thanks,
Alexey

> 
> thanks,
> jirka
> 
