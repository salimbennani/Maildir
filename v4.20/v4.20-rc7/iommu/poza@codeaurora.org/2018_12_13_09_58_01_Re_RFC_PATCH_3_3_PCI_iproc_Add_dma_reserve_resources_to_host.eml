Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 21:22:04 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 193B4580380;
	Thu, 13 Dec 2018 01:58:12 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 13 Dec 2018 01:58:11 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AOIdsrRfQT17lqkjbFzaiG4O9lGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc6+YRGN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRODYyg?=
 =?us-ascii?q?YIUBAeoPM/hFoYb/qVsArhS/Cge3BOP3yDJFnWP20K840+g9DQ3LxhIsEtQTu3?=
 =?us-ascii?q?rUttX1M6ISXPitzKnPzDTMdehb1iv66IfVbB8uu+yMXah3ccrL00YjDQTFjk+f?=
 =?us-ascii?q?qYHjIjib2OMNs22B4OphU+Kik2onqwJ0ojir3MssjZPJho0Tx1vZ9it52J44Kc?=
 =?us-ascii?q?OkREN/e9KoDZVduz+AO4drQc4uX3tktSc4x7EepJK2eCsHxI46yxPQa/GLaZaE?=
 =?us-ascii?q?7xb5WOuVIDp1gm9udqiliBao60egz/XxVsmq31ZOqSpIisfMtn8T2BzJ8MSHSe?=
 =?us-ascii?q?Vy/l2n2TmR0wDf8OZEIVo7labDKp4hxKA/loYLvEjdAiP7nF/6gLKYe0k64OSk?=
 =?us-ascii?q?9ufqbqn8qpKdNYJ4kgT+Pb4vmsy7D+Q4KA8OX22D9OS41b3j+1D5QbpTgv01jK?=
 =?us-ascii?q?bZqpbaKtofpqKgBA9U3IAj5AilDzq9ztQYkmcILEhfdBKEkYfpIVfOL+78Dful?=
 =?us-ascii?q?hFSsijhry+jcPrL9GpXNMmTDkLD5cLZ56k5cyxQ8wcpQ5pJJEbwBJPPzWknstN?=
 =?us-ascii?q?3XFBM5Mgq0w/r5B9V5zI8RRWWPAqqBOqPIrVCI/v4vI/WLZIINuDbyMfkl5+L0?=
 =?us-ascii?q?gn8+g1MdfbSp0oERaHC3BflmJ0SZYXzxgtYOC2sKvww+TPD0h12GSzJce3GyX6?=
 =?us-ascii?q?ck7DEhFI2mFZvDRpyqgLGZ3ie7GYNZanpFClCLF3focYKEVuwIaCKTJM9hjzMF?=
 =?us-ascii?q?WaKgS48nyRGhqgv6x6B7IerT/y0SrYjj28Rt5+3PiREy8iR5AN6G02GNSGF0nX?=
 =?us-ascii?q?kERyUs06B9ukF9zlaD0a5lg/1XD9BT5vVJUhskOp7Y1eB1F9fyWgfZdNeTVFmm?=
 =?us-ascii?q?WsmmAS02Tt8pwN8BeUB9F8+mjhDCxSWqBbAVmqePBJw19KLcwnfwK9x8y3bAyK?=
 =?us-ascii?q?kukV0mTtFTOm2hg6517xLTCJLRk0WFi6aqcrwR0zPX+2ed02WCpkFYXxR2UaXe?=
 =?us-ascii?q?Q38fYEzardD65kPHS7+jErAnMgpHyc6fJapGcNzpjVNaRPj9PNTSeX6+m2C1BR?=
 =?us-ascii?q?yQ3LODcJLqe3kB3CXaEEULjhoc/WiYOgQkBieuuWTeDCdwGlLpeE7s9eh+qHWm?=
 =?us-ascii?q?Tk471Q2Kbkth16ar9R4Rn/CTV/QT3rccsic7tzp0BEq9387RC9eYuwphfaBcYd?=
 =?us-ascii?q?Qh4FdH1WPVrRB9MoanL6B4gl4ecgJ3v0z12hVzC4VAl9UqrXwwwApzL6KYzE1O?=
 =?us-ascii?q?dzeC0Z/sPb3XL3H4/AqzZK7OxlHezNGW978V5/Q8tVrisx+mF0o4/3p8ztlazm?=
 =?us-ascii?q?GT5pPJDAoVT5L8SUI39xl8p7HHbSgx/YLU1XtwMaaqtj/Owc4mBOwgyhy4ZddQ?=
 =?us-ascii?q?LLuEFBPuE80dH8WvKPEql0K1YR4ePeFS9LQ7P8Wpd/ad3K6rPeBgnC+pjGhd4Y?=
 =?us-ascii?q?B91F6M+DR4SuLSw5kFxPSY1BOdVzjglFehrtz3mYdcaDEIH2qw1TLrBJRMaa11?=
 =?us-ascii?q?Z4oLD3mhI9e2xtlnm5HiQXpY+0O9CFMc38+pfwGfb1j83Q1WyEQWrmarmSq+zz?=
 =?us-ascii?q?xojT4pqrCT0zDJw+TnbBAHIHJERHF+jVfwJoi5l9AbXEmyYwkpjhel/lv6x65A?=
 =?us-ascii?q?qaR7LmnTR1pIfifsI2FjVKuwqqSNY8pV5Jw0tiVXVfy2YUqGRb7lvxsazyTjEn?=
 =?us-ascii?q?NcxD8hbTGquZb5nxtghGKGNnlzr3nZecB2xRjB4tzRXvpR3jsARCllhjjbHFm8?=
 =?us-ascii?q?P9+1/dqKk5fPqPyxV2WkVpdLaynk0ZuAtDen5W1tGRC+n+q8mtr9HQg40C/70c?=
 =?us-ascii?q?JnVSHJrBb6f4nq2L62MeNhfkl0GlD879B2FZ15kos1nJsQw2QVho2J/Xoblmf+?=
 =?us-ascii?q?KdZb1rj/bHYXRT4L3sTa4A7q2EB4KnKJxoT5VmiSw8d7Ztm6ZH8W1Tw578xQFK?=
 =?us-ascii?q?iU67lElzNvolWktQLRfeR9njAFxPsr6X4agPsGtBAjzyqDGbASAVdXPTb3mBuW?=
 =?us-ascii?q?9dC+o75aZGKucbi2yUp/ksqtDLCEogFARnn5fo0uEjN37sV6KFjMymH86pn4eN?=
 =?us-ascii?q?nMatIergGUkxDFj+RPKZM+jPwKhTd8OWLmvH0o0Oo7jR1o3ZGns4mLMWRt/KSl?=
 =?us-ascii?q?AhFGMj35fd8c+jbojaxGhMaZw5ivHol9GjUMRJbnVuinEDUWtfT6LQqOFCA8p2?=
 =?us-ascii?q?yfGbreGw+f9Uhno2jOE5CtK3GYOn0Zwc9+SxmaIUxVmBoUUykinp4lCgCqw9Ts?=
 =?us-ascii?q?cEVj6TAU+FH4sQFAyv5yOxn8T2ffpxqoajEuR5iENxdW6gBC50HIMc2R9O5zHi?=
 =?us-ascii?q?dY/oG/owyJMGCUewNIDWQRUEyeG1/jJqWu5cXH8+WABuu+KObOYayTqeNEUfeE?=
 =?us-ascii?q?34mv0oxg/zaDLciPOnhiD/sm2ktMR3x5GsLZmykRRCwTjS7Cc8mbpBKk8C1tss?=
 =?us-ascii?q?+/6OjrWB7o5YaXC7tdL9Rv+xO1gaeCLeKQhzx5KTFX1pwS33/I1aMf0UUWiyFv?=
 =?us-ascii?q?cTmtDLsBuTTMTKLWhq9YERobZzlvO8tP6qI2xhNNNtLDitPpyr54ieY4BE1YVV?=
 =?us-ascii?q?P6gMGme8wLL3u5NFPGH0uLMLWGJTvWw8D4e6+8SLtQjPlKuB20ozqUD0jjPjGb?=
 =?us-ascii?q?nTnzSx+vKf1MjD2cPBFGpIG9cxNtBXL/Q978dhK7MMF4jTstzL0wh3PKM3McMD?=
 =?us-ascii?q?dmf0NMqL2Q8T1XgvFlF2Nd6XplKPGOmzyF4OnANpYWrfxrDzx0lu1A5nQ6zrpV?=
 =?us-ascii?q?7CdcS/10mCvdtNhuo169n+mLyzpnVgdOqzlRiIKKu0ViJbvW9p1aVXnY+xIN6D?=
 =?us-ascii?q?bYNxNfnMFkDNTzu+h1w97Jnae7fCxY8tTd4ctaAsHSLsuCGHA7NhPlEznRSgAC?=
 =?us-ascii?q?SGj4G3vYghlFl+Ob3naSopUzt4LrgpNITaVUBw99Le8TFkkwRI9KG5xwRD5x1O?=
 =?us-ascii?q?fD1MM=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BwAAAkLBJch0O0hNFjHgEGBwaBVAYLA?=
 =?us-ascii?q?YJpgQInjHSNQBSZMywHDAGENgEJgwMiNwYNAQMBAQEBAQECARMBAQEIDQkIKSM?=
 =?us-ascii?q?MgjYkAYJhAQEBAQIBAQIkEQIGAQE3AQQBCQEBAwcYLgMpKwYLCAUDgxkBgXgIB?=
 =?us-ascii?q?QqlXoFsM4J2AQEFgTABhFuBJAMFiSJWgSiBHBeBf4ERgmQugwWBZi+FQokvggW?=
 =?us-ascii?q?EXDaFPIsPCYcNgz+HBSCBXIUcgnSHXo01GVaNAYF4fUOCbB+BfAwXiF6FRzcBM?=
 =?us-ascii?q?oEFAQGMUQEB?=
X-IPAS-Result: =?us-ascii?q?A0BwAAAkLBJch0O0hNFjHgEGBwaBVAYLAYJpgQInjHSNQBS?=
 =?us-ascii?q?ZMywHDAGENgEJgwMiNwYNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkAYJhAQEBA?=
 =?us-ascii?q?QIBAQIkEQIGAQE3AQQBCQEBAwcYLgMpKwYLCAUDgxkBgXgIBQqlXoFsM4J2AQE?=
 =?us-ascii?q?FgTABhFuBJAMFiSJWgSiBHBeBf4ERgmQugwWBZi+FQokvggWEXDaFPIsPCYcNg?=
 =?us-ascii?q?z+HBSCBXIUcgnSHXo01GVaNAYF4fUOCbB+BfAwXiF6FRzcBMoEFAQGMUQEB?=
X-IronPort-AV: E=Sophos;i="5.56,348,1539673200"; 
   d="scan'208";a="56730755"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 13 Dec 2018 01:58:10 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728076AbeLMJ6H (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 13 Dec 2018 04:58:07 -0500
Received: from smtp.codeaurora.org ([198.145.29.96]:45282 "EHLO
        smtp.codeaurora.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727210AbeLMJ6G (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 13 Dec 2018 04:58:06 -0500
Received: by smtp.codeaurora.org (Postfix, from userid 1000)
        id 09DC5601E7; Thu, 13 Dec 2018 09:58:03 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
        s=default; t=1544695085;
        bh=PctqfZZzTayhuob8pZMMrG+T2WCtccXx79xuu6ZTxX8=;
        h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
        b=juWi0RLbrn/MQKHhu64icxzYFMpsy4IgT5ayxOSbbGQy6xJjkcSsurnHGGuUi21mq
         z82Ct1dRzp9Bj/dWHUbVYMO5bcnJKl+aLPajQoTv0v5uOaJdgGQjuFM8UOOcjcklGg
         +eY5m9BAm+DqClNb89kieuRHNnjYkN3XPNm5hqnQ=
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
        pdx-caf-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-2.7 required=2.0 tests=ALL_TRUSTED,BAYES_00,
        DKIM_INVALID,DKIM_SIGNED,T_MIXED_ES autolearn=no autolearn_force=no
        version=3.4.0
Received: from mail.codeaurora.org (localhost.localdomain [127.0.0.1])
        by smtp.codeaurora.org (Postfix) with ESMTP id 77FB4601EA;
        Thu, 13 Dec 2018 09:58:01 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
        s=default; t=1544695081;
        bh=PctqfZZzTayhuob8pZMMrG+T2WCtccXx79xuu6ZTxX8=;
        h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
        b=SYckUIIvB6CN7nFHeBjCv7SAbzacgaWbQ1J6dSd122sG76Z1SaHtSewnCmM8fT7zv
         S/2sT6ya6LhFOK0tgmhz9Kegfe4w93SPKgdy8/TsiN+44+sut2C1wBnVS40Ba9f0Lq
         n/Zm42DY7DWt0m76jfriiHIReqO8znOSCHfi/O/g=
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII;
 format=flowed
Content-Transfer-Encoding: 7bit
Date: Thu, 13 Dec 2018 15:28:01 +0530
From: poza@codeaurora.org
To: Srinath Mannam <srinath.mannam@broadcom.com>
Cc: Bjorn Helgaas <bhelgaas@google.com>,
        Robin Murphy <robin.murphy@arm.com>,
        Joerg Roedel <joro@8bytes.org>,
        Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>,
        Ray Jui <rjui@broadcom.com>,
        BCM Kernel Feedback <bcm-kernel-feedback-list@broadcom.com>,
        linux-pci@vger.kernel.org, iommu@lists.linux-foundation.org,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        linux-pci-owner@vger.kernel.org
Subject: Re: [RFC PATCH 3/3] PCI: iproc: Add dma reserve resources to host
In-Reply-To: <CABe79T4fqHoW4rww2jRNNaiirzOqm7dTvap3Eqi1w17SV4j+qQ@mail.gmail.com>
References: <1544593569-8923-1-git-send-email-srinath.mannam@broadcom.com>
 <1544593569-8923-4-git-send-email-srinath.mannam@broadcom.com>
 <117bb87c4567d14f189642b685dd8813@codeaurora.org>
 <CABe79T4fqHoW4rww2jRNNaiirzOqm7dTvap3Eqi1w17SV4j+qQ@mail.gmail.com>
Message-ID: <8d490281d496deb1b46d957b8220688e@codeaurora.org>
X-Sender: poza@codeaurora.org
User-Agent: Roundcube Webmail/1.2.5
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 2018-12-13 14:47, Srinath Mannam wrote:
> Hi Oza,
> 
> Thank you for the review.
> Please find my comments in lined.
> 
> On Thu, Dec 13, 2018 at 11:33 AM <poza@codeaurora.org> wrote:
>> 
>> On 2018-12-12 11:16, Srinath Mannam wrote:
>> > IPROC host has the limitation that it can use
>> > only those address ranges given by dma-ranges
>> > property as inbound address.
>> > So that the memory address holes in dma-ranges
>> > should be reserved to allocate as DMA address.
>> >
>> > All such reserved addresses are created as resource
>> > entries and add to dma_resv list of pci host bridge.
>> >
>> > These dma reserve resources created by parsing
>> > dma-ranges parameter.
>> >
>> > Ex:
>> > dma-ranges = < \
>> >   0x43000000 0x00 0x80000000 0x00 0x80000000 0x00 0x80000000 \
>> >   0x43000000 0x08 0x00000000 0x08 0x00000000 0x08 0x00000000 \
>> >   0x43000000 0x80 0x00000000 0x80 0x00000000 0x40 0x00000000>
>> >
>> > In the above example of dma-ranges, memory address from
>> > 0x0 - 0x80000000,
>> > 0x100000000 - 0x800000000,
>> > 0x1000000000 - 0x8000000000 and
>> > 0x10000000000 - 0xffffffffffffffff.
>> > are not allowed to use as inbound addresses.
>> > So that we need to add these address range to dma_resv
>> > list to reserve their IOVA address ranges.
>> >
>> > Signed-off-by: Srinath Mannam <srinath.mannam@broadcom.com>
>> > ---
>> >  drivers/pci/controller/pcie-iproc.c | 49
>> > +++++++++++++++++++++++++++++++++++++
>> >  1 file changed, 49 insertions(+)
>> >
>> > diff --git a/drivers/pci/controller/pcie-iproc.c
>> > b/drivers/pci/controller/pcie-iproc.c
>> > index 3160e93..43e465a 100644
>> > --- a/drivers/pci/controller/pcie-iproc.c
>> > +++ b/drivers/pci/controller/pcie-iproc.c
>> > @@ -1154,25 +1154,74 @@ static int iproc_pcie_setup_ib(struct
>> > iproc_pcie *pcie,
>> >       return ret;
>> >  }
>> >
>> > +static int
>> > +iproc_pcie_add_dma_resv_range(struct device *dev, struct list_head
>> > *resources,
>> > +                           uint64_t start, uint64_t end)
>> > +{
>> > +     struct resource *res;
>> > +
>> > +     res = devm_kzalloc(dev, sizeof(struct resource), GFP_KERNEL);
>> > +     if (!res)
>> > +             return -ENOMEM;
>> > +
>> > +     res->start = (resource_size_t)start;
>> > +     res->end = (resource_size_t)end;
>> > +     pci_add_resource_offset(resources, res, 0);
>> > +
>> > +     return 0;
>> > +}
>> > +
>> >  static int iproc_pcie_map_dma_ranges(struct iproc_pcie *pcie)
>> >  {
>> > +     struct pci_host_bridge *host = pci_host_bridge_from_priv(pcie);
>> >       struct of_pci_range range;
>> >       struct of_pci_range_parser parser;
>> >       int ret;
>> > +     uint64_t start, end;
>> > +     LIST_HEAD(resources);
>> >
>> >       /* Get the dma-ranges from DT */
>> >       ret = of_pci_dma_range_parser_init(&parser, pcie->dev->of_node);
>> >       if (ret)
>> >               return ret;
>> >
>> > +     start = 0;
>> >       for_each_of_pci_range(&parser, &range) {
>> > +             end = range.pci_addr;
>> > +             /* dma-ranges list expected in sorted order */
>> > +             if (end < start) {
>> > +                     ret = -EINVAL;
>> > +                     goto out;
>> > +             }
>> >               /* Each range entry corresponds to an inbound mapping region */
>> >               ret = iproc_pcie_setup_ib(pcie, &range, IPROC_PCIE_IB_MAP_MEM);
>> >               if (ret)
>> >                       return ret;
>> > +
>> > +             if (end - start) {
>> > +                     ret = iproc_pcie_add_dma_resv_range(pcie->dev,
>> > +                                                         &resources,
>> > +                                                         start, end);
>> > +                     if (ret)
>> > +                             goto out;
>> > +             }
>> > +             start = range.pci_addr + range.size;
>> >       }
>> >
>> > +     end = ~0;
>> Hi Srinath,
>> 
>> this series is based on following patch sets.
>> 
>> https://lkml.org/lkml/2017/5/16/19
>> https://lkml.org/lkml/2017/5/16/23
>> https://lkml.org/lkml/2017/5/16/21,
>> 
> Yes, this patch series is done based on the inputs of the patches you
> sent earlier.
> 
>> some comments to be adapted from the patch-set I did.
>> 
>> end = ~0;
>> you should consider DMA_MASK, to see iproc controller is in 32 bit or 
>> 64
>> bit system.
>> please check following code snippet.
>> 
>> if (tmp_dma_addr < DMA_BIT_MASK(sizeof(dma_addr_t) * 8)) {
>> +                       lo = iova_pfn(iovad, tmp_dma_addr);
>> +                       hi = iova_pfn(iovad,
>> +                                     DMA_BIT_MASK(sizeof(dma_addr_t) 
>> * 8) - 1);
>> +                       reserve_iova(iovad, lo, hi);
>> +               }
>> 
>> Also if this controller is integrated to 64bit platform, but decide to
>> restrict DMA to 32 bit for some reason, the code should address such
>> scenarios.
>> so it is always safe to do
>> 
>> #define BITS_PER_BYTE 8
>> DMA_BIT_MASK(sizeof(dma_addr_t) * BITS_PER_BYTE)
>> so please use kernle macro to find the end of DMA region.
>> 
> this change done with the assumption, that end_address is max bus
> address(~0) instead
> pcie RC dma mask.
> Even dma-ranges has 64bit size dma-mask of PCIe host is forced to 
> 32bit.
> // in of_dma_configure function
>     dev->coherent_dma_mask = DMA_BIT_MASK(32);
> And dma-mask of endpoint was set to 64bit in their drivers. also SMMU 
> supported
> dma mask is 48-bit.
> But here requirement is all address ranges except dma-ranges address
> between 0x0 - ~0x0
> have to be reserved.
> as you suggested I will change ~0 to DMA_BIT_MASK macro it will look
> more cleaner.
>> 

agreed, makes sense;

>> Also ideally according to SBSA v5
>> 
>> 8.3 PCI Express device view of memory
>> 
>> Transactions from a PCI express device will either directly address 
>> the
>> memory system of the base server system
>> or be presented to a SMMU for optional address translation and
>> permission policing.
>> In systems that are compatible with level 3 or above of the SBSA, the
>> addresses sent by PCI express devices
>> must be presented to the memory system or SMMU unmodified. In a system
>> where the PCI express does not use
>> an SMMU, the PCI express devices have the same view of physical memory
>> as the PEs. In a system with a
>> SMMU for PCI express there are no transformations to addresses being
>> sent by PCI express devices before they
>> are presented as an input address to the SMMU.
>> 
>> which is a limitation of iproc controller, please list the limitation 
>> in
>> detail as it violates SBSA.
> Inbound address sent by pcie devices to the host will not be translate
> (unchanged) before it comes to
> SMMU or directly to PE. but the there is limitation that, few address
> ranges are not allowed by
> IPROC PCIe RC and those were filtered out. That is the reason forces
> this change request.
> I will append these details in commit message.
> 

My intention was just to make sure that commit message clearly mentions 
limitation.
so yes, since controller has to be programmed for incoming address and 
there is no way around to disable those 1:1 translations, and allow 
everything incoming.
that is the HW limitation.

Thanks for addressing.

> Regards,
> Srinath.
>> 
>> Regards,
>> Oza.
>> 
>> > +     if (end - start) {
>> > +             ret = iproc_pcie_add_dma_resv_range(pcie->dev, &resources,
>> > +                                                 start, end);
>> > +             if (ret)
>> > +                     goto out;
>> > +     }
>> > +
>> > +     list_splice_init(&resources, &host->dma_resv);
>> > +
>> >       return 0;
>> > +out:
>> > +     pci_free_resource_list(&resources);
>> > +     return ret;
>> >  }
>> >
>> >  static int iproce_pcie_get_msi(struct iproc_pcie *pcie,
>> 
>> 
>> 
>> 
>> 
