Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  14 Dec 2018 20:27:41 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga008.fm.intel.com (fmsmga008.fm.intel.com [10.253.24.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id AD6B95803DC;
	Fri, 14 Dec 2018 03:28:25 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga008-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 14 Dec 2018 03:28:25 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Apij2kR01btxsnqlksmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segSL/jxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJPUMhRSSJPH4Cy?=
 =?us-ascii?q?b4UAAOUdIOlXrYfyp0AWrRa8HgSsGP/jxyVUinPqx6A2zeIsGhzG0gw6GNIOtW?=
 =?us-ascii?q?zZotvvO6cMT+++0a7Gwi/Zb/NK2Df97pXDfxcvr/6WQ7J/b9Ddx041GAPfklWQ?=
 =?us-ascii?q?qIrlMiiP2eQXtmiX9fZvVeWqi2M+rQx6vzuhxt80h4XXmo4YzkrI+Th3zYorP9?=
 =?us-ascii?q?G0VU12bcK+HJZRtSyWL5V6Tt4gTm1ypSo3xaEKtYSmcCQW1Zgr3RzSZ+CBfoOV?=
 =?us-ascii?q?+BzsTvyRLi19hH99eLKwmRKy8U+4x+3iWcm7zkxKojBGktbSrHAN0QLc6sydRv?=
 =?us-ascii?q?t65Eeh1i6D1wHV6u5aPUA5jbTXJ4Ilz7Iqi5Yev1rPEjXrlEj1kKOabEQp9+qw?=
 =?us-ascii?q?5+TieLrmp5ucN4FuigH5N6Qjgsi/AeU+MggTUGmX4Oe826P5/U3/XrpKiuQ6kq?=
 =?us-ascii?q?7XsZDcO8sbvLW0AxFa0ok98RazFTSm38oCnXkBMl1FfAiLj4/zO1HBOPz4F+uw?=
 =?us-ascii?q?g0ywkDd3wPDLJrnhApTOLnfdirvgcqt95lVYyAoyy9Bf+p1VBqsAIPL1Rk/+qt?=
 =?us-ascii?q?jYAgUlPAyzxubtEM992Z8GWWKTHq+ZN7vfsV+S6eIuP+mDfogVtCz9K/g4/fHu?=
 =?us-ascii?q?i3A5lEQZfamo25sXdX+5Eu5nI0WffXrjnNMBHX0WsQo5SezgkEeCXiJLZ3auQ6?=
 =?us-ascii?q?I84Sk2CIChDYjdXIytg7uB3CG9Hp1RfW1GDlGMEXH1d4SLQfsMaSSSItN/nTwA?=
 =?us-ascii?q?T7SuV4gh1RS2vg/g17VnNvbU+jEftZ/7ztd1/O3TlRYx9TBuFcSSyWONQnpwnm?=
 =?us-ascii?q?MJQT82wa9+rVZ8yleFzah3nfhYGcZP6PNOVwcwLYTcwPBiC9DuRgLBec+ESFW8?=
 =?us-ascii?q?TdWgGz0xStMxzMUIY0ZyANiiihHD3yy3A74ajbCLBZo08r7C0Hj1Pcpy13HG1K?=
 =?us-ascii?q?w5hVk8XsRPLXGmhrJ49wXLGoHGiVuZmLiweaQcxiHN8nyDwnSIvE1fVA5wUqDF?=
 =?us-ascii?q?XXQEa0vSrNT54F7CTrC0BbQmNAtB1dCNKq9QZtL1ilVGQe/pOM7CbGKph2ewGR?=
 =?us-ascii?q?GIy6uRY4XwZWUSwj/RCEgenAAV5naJKw4+Czylo2LfCjxuCF3ub1nt8el4tHO0?=
 =?us-ascii?q?UEs0wxuWYE1m0rq/4gQViuCES/MPwrIEvz8sqyl1HFa42NLWF9qApgp7cKVAe9?=
 =?us-ascii?q?89501H1WbYtwx7MZytNKRihl8YcwRqsELizRR3CoNckcc0qHMm1hZ9KaWd0FlZ?=
 =?us-ascii?q?bTOXwYjwOqHLKmn15B2gcarW1U/R0dmI+qYD8u83q0j+sw6zEEoi8HJn08dO3n?=
 =?us-ascii?q?uY55XKChcSUJ3rXkY28Rh6u6/VYi0n64zI0n1sNLG+siXe1NIxGOsl1hGgcs9f?=
 =?us-ascii?q?MaOZDgP9D9cWBsmuKOMwnVipYQkJPORT9K4yIsOneOGK2K+tPOZ8gj2miX5L75?=
 =?us-ascii?q?x60kKJ7yB8UPLH344Zw/GE2QuKTy38jFa9vc/tg4BLeDYSEnC5ySf6Ho5RZ7R+?=
 =?us-ascii?q?cpoRBmeqPsK42M9+h5nrW3ND8F6jBlUG2NKmeBaIblz92xFQ2loToXC9hSS4yD?=
 =?us-ascii?q?l0mSkzrqWDxCzO3/jidB0fN29LRWlul1ftLZKvj9AHWkildAwplBqj5UbnyKlX?=
 =?us-ascii?q?vqV/L2/PQUhWeyj6NX1tUqy1trCaec5A9IsosTlLUOS7eV2aSKTyowEZ0yPgGG?=
 =?us-ascii?q?tS3is7eCupupX6nhx6jnySLHBooXrdeMFwwwrf5dPGSf5Q2DoGWDd3iT3NCleg?=
 =?us-ascii?q?ONmp+M2el43fveCmS2KhSppTfDHrzIyasyu3/29qARy5n/2ont3nEA460TL01t?=
 =?us-ascii?q?VwVCXIqgr8bZfv16igLe1neUxoDkfm68VmAoF+jpcwhJYI1HgZnJqV/GALkWfu?=
 =?us-ascii?q?MdpB36L+Y2EARToKw97T/Qjk11dvLnOPx4LlSHqdxtFtaMW9YmMTwig99dxFCL?=
 =?us-ascii?q?+I7LxYmit4ul+4rQPSYfdnhDscx+Uh6GUGg+4Xogoi1TuSAqodHURDOSzslhKI?=
 =?us-ascii?q?782xralNZWavd6Sw21R6ndy7EL6CpQRcUm7jepg+BS9w8tl/MFXU3X3v7YHkfc?=
 =?us-ascii?q?PcbNMJuR2SjhfAlPNVKJMqm/oOhCpnP3/9vHI/x+46ixxuwY+1vIydJ2px+6K5?=
 =?us-ascii?q?BwZSNifpaMML5jHtkaFek96N0I+1GZVhHigLUIHsTfK1Cz8SsfXnNwCTEDwzsH?=
 =?us-ascii?q?ubGLzfHROB50ditX7AD5erN3SPLnkD0dpiXAWdJFBYgA0MXjU1hJs5GR6xxMD7?=
 =?us-ascii?q?bEd1/DMR5kP7qhtRzOJnLQL/X3zbpAepbDc0VZeeIABX7gFE+0faL8ie4vhvEC?=
 =?us-ascii?q?Ff+52rtBaNJXCDZwRUEWEJXVSJBlDkPrmz/NnA7vKXBuykI/vVZrWOr+NeWuyM?=
 =?us-ascii?q?xZKu1Itm4jmNOt+OPnlkE/00xE5DUWplFMTenjUFUzYXmD7Vb86HuBe8/TV6rs?=
 =?us-ascii?q?Ch//TqWwLv5oqPB6FRMdV1/BC2jrmMN/SNhCZiMjtY0pIMxXnVyLkQxlISiidu?=
 =?us-ascii?q?dyWzHrQEryLCUKXQmqpPBR4BdyxzLNdI77473gRVI8Hbl8j61qRmgf81EVtFUV?=
 =?us-ascii?q?3hl9qtZcwLJWG9KVzGCFyKNLSAOT3E3cX3bbmgRr1XieVerwewtiqDE0//IjSD?=
 =?us-ascii?q?kCHkVwyuMeFJli2UIAZSt529chlzD2juV9bmahy9MN9qgjw627w0hnXWNWECNT?=
 =?us-ascii?q?hwaV9CrrqV7SlAmPVwB3RB7mZ5LemDgyuY7/PXKpATsftqBCR7j+Nb4HQgxLtT?=
 =?us-ascii?q?4yFJX/h1mCrUrt5zrFCqiOiPyjx7UBVQrjZHnp6EvUJnOfaRyp4VYmrJ4h8LpV?=
 =?us-ascii?q?2KCh8H749+FtDxtqYW0sLOn6/bIS1HtdnT+J1PKdLTLZerOWQseT/gAiLVCkNR?=
 =?us-ascii?q?YTe1OCf6jlZBkfe6/2eQ6JM9r86/y9I1VrZHWQltRbshAUN/EYlHec8vUw=3D?=
 =?us-ascii?q?=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ACAACfkhNch0O0hNFjGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUwIBAQEBAQsBg2sUE4x0ixmCDRSXQYFzLBMBh0ciNgcNAQM?=
 =?us-ascii?q?BAQEBAQECARMBAQEIDQkIKS+CNiQBgmEBAQEBAwECJBMZJgYJAQEKFQMJJQMMB?=
 =?us-ascii?q?UkTBYMcggEEAaZnM4ovjD6BVz+BEYMSiDaCJgKhGAcCgiiPJyORTZslBoIBMxo?=
 =?us-ascii?q?jgzyCUI4LPwEBMYEFAQGMVgEB?=
X-IPAS-Result: =?us-ascii?q?A0ACAACfkhNch0O0hNFjGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUwIBAQEBAQsBg2sUE4x0ixmCDRSXQYFzLBMBh0ciNgcNAQMBAQEBAQECARMBA?=
 =?us-ascii?q?QEIDQkIKS+CNiQBgmEBAQEBAwECJBMZJgYJAQEKFQMJJQMMBUkTBYMcggEEAaZ?=
 =?us-ascii?q?nM4ovjD6BVz+BEYMSiDaCJgKhGAcCgiiPJyORTZslBoIBMxojgzyCUI4LPwEBM?=
 =?us-ascii?q?YEFAQGMVgEB?=
X-IronPort-AV: E=Sophos;i="5.56,352,1539673200"; 
   d="scan'208";a="55902071"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 14 Dec 2018 03:28:24 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729554AbeLNL2V (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 14 Dec 2018 06:28:21 -0500
Received: from usa-sjc-mx-foss1.foss.arm.com ([217.140.101.70]:49572 "EHLO
        foss.arm.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727540AbeLNL2V (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 14 Dec 2018 06:28:21 -0500
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
        by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 917AAEBD;
        Fri, 14 Dec 2018 03:28:20 -0800 (PST)
Received: from e103592.cambridge.arm.com (usa-sjc-imap-foss1.foss.arm.com [10.72.51.249])
        by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id A0B623F6A8;
        Fri, 14 Dec 2018 03:28:18 -0800 (PST)
Date: Fri, 14 Dec 2018 11:28:16 +0000
From: Dave Martin <Dave.Martin@arm.com>
To: Steven Price <steven.price@arm.com>
Cc: Will Deacon <will.deacon@arm.com>, mark.rutland@arm.com,
        suzuki.poulose@arm.com, marc.zyngier@arm.com,
        catalin.marinas@arm.com, ykaukab@suse.de,
        linux-kernel@vger.kernel.org,
        Jeremy Linton <jeremy.linton@arm.com>,
        linux-arm-kernel@lists.infradead.org, shankerd@codeaurora.org
Subject: Re: [PATCH 5/6] arm64: add sysfs vulnerability show for speculative
 store bypass
Message-ID: <20181214112809.GF3505@e103592.cambridge.arm.com>
References: <20181206234408.1287689-1-jeremy.linton@arm.com>
 <20181206234408.1287689-6-jeremy.linton@arm.com>
 <901bdfff-df83-846f-1695-a89e8bbfa787@arm.com>
 <20181214103644.GB1872@edgewater-inn.cambridge.arm.com>
 <96ac8a3f-9c03-9ad9-e148-5f3422c51075@arm.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <96ac8a3f-9c03-9ad9-e148-5f3422c51075@arm.com>
User-Agent: Mutt/1.5.23 (2014-03-12)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Fri, Dec 14, 2018 at 10:41:42AM +0000, Steven Price wrote:
> On 14/12/2018 10:36, Will Deacon wrote:
> > On Fri, Dec 14, 2018 at 10:34:31AM +0000, Steven Price wrote:
> >> On 06/12/2018 23:44, Jeremy Linton wrote:
> >>> From: Mian Yousaf Kaukab <ykaukab@suse.de>
> >>>
> >>> Return status based no ssbd_state and the arm64 SSBS feature.
> >>                       ^^ on
> >>
> >>> Return string "Unknown" in case CONFIG_ARM64_SSBD is
> >>> disabled or arch workaround2 is not available
> >>> in the firmware.
> >>>
> >>> Signed-off-by: Mian Yousaf Kaukab <ykaukab@suse.de>
> >>> [Added SSBS logic]
> >>> Signed-off-by: Jeremy Linton <jeremy.linton@arm.com>
> >>> ---
> >>>  arch/arm64/kernel/cpu_errata.c | 28 ++++++++++++++++++++++++++++
> >>>  1 file changed, 28 insertions(+)
> >>>
> >>> diff --git a/arch/arm64/kernel/cpu_errata.c b/arch/arm64/kernel/cpu_errata.c
> >>> index 6505c93d507e..8aeb5ca38db8 100644
> >>> --- a/arch/arm64/kernel/cpu_errata.c
> >>> +++ b/arch/arm64/kernel/cpu_errata.c
> >>> @@ -423,6 +423,7 @@ static bool has_ssbd_mitigation(const struct arm64_cpu_capabilities *entry,
> >>>  		ssbd_state = ARM64_SSBD_UNKNOWN;
> >>>  		return false;
> >>>  
> >>> +	/* machines with mixed mitigation requirements must not return this */
> >>>  	case SMCCC_RET_NOT_REQUIRED:
> >>>  		pr_info_once("%s mitigation not required\n", entry->desc);
> >>>  		ssbd_state = ARM64_SSBD_MITIGATED;
> >>> @@ -828,4 +829,31 @@ ssize_t cpu_show_spectre_v2(struct device *dev, struct device_attribute *attr,
> >>>  	}
> >>>  }
> >>>  
> >>> +ssize_t cpu_show_spec_store_bypass(struct device *dev,
> >>> +		struct device_attribute *attr, char *buf)
> >>> +{
> >>> +	/*
> >>> +	 *  Two assumptions: First, get_ssbd_state() reflects the worse case
> >>> +	 *  for hetrogenous machines, and that if SSBS is supported its
> >>                                                   ^^^^ SSBD
> >>> +	 *  supported by all cores.
> >>> +	 */
> >>> +	switch (arm64_get_ssbd_state()) {
> >>> +	case ARM64_SSBD_MITIGATED:
> >>> +		return sprintf(buf, "Not affected\n");
> >>> +
> >>> +	case ARM64_SSBD_KERNEL:
> >>> +	case ARM64_SSBD_FORCE_ENABLE:
> >>> +		if (cpus_have_cap(ARM64_SSBS))
> >>> +			return sprintf(buf, "Not affected\n");
> >>> +		return sprintf(buf,
> >>> +			"Mitigation: Speculative Store Bypass disabled\n");
> >>
> >> NIT: To me this reads as the mitigation is disabled. Can we call it
> >> "Speculative Store Bypass Disable" (with a capital 'D' and without the
> >> 'd at the end)?
> > 
> > Whilst I agree that the strings are reasonably confusing (especially when
> > you pile on the double-negatives all the way up the stack!), we really
> > have no choice but to follow x86's lead with these strings.
> > 
> > I don't think it's worth forking the ABI in an attempt to make this clearer.
> 
> Ah, sorry I hadn't checked the x86 string - yes we should match that.

This is rather why I feel these strings are either a) useless or
b) should be documented somewhere.

Putting at least a skeleton document somewhere could be a good start,
and would require little effort.


What decisions do we expect userspace to make based on this information?

Cheers
---Dave
