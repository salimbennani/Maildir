Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 08:50:37 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E760B580380
	for <like.xu@linux.intel.com>; Wed, 12 Dec 2018 05:43:03 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 12 Dec 2018 05:43:03 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AA7//lBe6YvrchRki+fFsj8p/lGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxcSzbB7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v6bpgRh31hy?=
 =?us-ascii?q?cdLzM38H/ZhMJzgq1ZrhKuqBNxzZPMYIyXNvRzcb7RcN0GSWVfRcZcTDBNApqm?=
 =?us-ascii?q?YocTE+YNIfpUoo/grFUOtxu+AgysCfvqxDBWmH/23Ks62PkhHgHB2AwgEc8FvX?=
 =?us-ascii?q?PXrNT7M6cSVe61wbLSzTrdcvxW2S3y6JTSfh89pvGMWKt9fMzMwkcsDwPIlkuc?=
 =?us-ascii?q?pZDmMj+Py+gBrmuW4/B+We+hi2MrsRx9rzq3yssyloXEgpgZxk3K+Cln2oo5ON?=
 =?us-ascii?q?61RUBhbdK6E5ZdsTyROZFsTcM4WW5ovT43yr0Ytp6/eygH0JAnxx/Ea/ybaIiE?=
 =?us-ascii?q?+B3jVOCMITtig3JlYr2/iw6z8Uim1OL8StG53EhWoidGiNXAq20B2h/J5sSZRP?=
 =?us-ascii?q?Zw/l2t1SuN2gzL7+FLO0E0la7VK547xb4wk4IesV3dES/zhUX6lbKZeVs6+ue2?=
 =?us-ascii?q?7+Tre67pppiBN49ylg7xLL8ulsu7AeQ5MQgBQXKX+Ouh1LD7+U35QbNKjuA5k6?=
 =?us-ascii?q?XDsZDaI9gbqbC9AwNPzokj7BO/Aiyg0NQfm3kHI1RFeA+dg4juIVHOL+j0De2j?=
 =?us-ascii?q?jFS0jDdr2/fGM6XlApXMLXjMjq3tfLlg60NHzAozzNZf549bC70bIfLzXFPxu8?=
 =?us-ascii?q?LcDhMjLwO0xOPnW51A0JgDUzePHrOBK/GV9luJ/f40Ze+LYoATpXD6Mfdi4vfv?=
 =?us-ascii?q?iXownxgaZbWo2p0ML2m1G+kjL0iHbH6/v9EaDG1fuwM/SPDt2kSPVCMWa3usUq?=
 =?us-ascii?q?Z5/DwiFY+9Ea/FQYaihqHH2z20SYZLbGJLAUzZDHHzao+fUO0NYi/BHsg0izEB?=
 =?us-ascii?q?SP2rT4gq1jmoswn1zachKfDbqQMCspe299Vr5uubqhY2+3QgDNua12+lVWx4nm?=
 =?us-ascii?q?oUATQx2fYs8gRG1l6f3P0g0LRjHttJ6qYRXw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CsAABxDxFcmBHrdtBjHQEBBQEHBQGBV?=
 =?us-ascii?q?AUBCwGBMIJijHOLM5tRFhgUhz4iNwYNAQMBAQEBAQECARMBAQEBAQgLCwYbDi+?=
 =?us-ascii?q?CNgUCAxgJglwDAwECJB8KKQMDAQIGAQFICAMBUxkFgxyCAgEEpl8zhUCEb4w8F?=
 =?us-ascii?q?4FAP4ERiGCEbCICiT2XTwmRTAsYgVyIDTaHJyyZE4FcgXgzGggbFYMngicXEo4?=
 =?us-ascii?q?MQDGBBxyKaYF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0CsAABxDxFcmBHrdtBjHQEBBQEHBQGBVAUBCwGBMIJijHO?=
 =?us-ascii?q?LM5tRFhgUhz4iNwYNAQMBAQEBAQECARMBAQEBAQgLCwYbDi+CNgUCAxgJglwDA?=
 =?us-ascii?q?wECJB8KKQMDAQIGAQFICAMBUxkFgxyCAgEEpl8zhUCEb4w8F4FAP4ERiGCEbCI?=
 =?us-ascii?q?CiT2XTwmRTAsYgVyIDTaHJyyZE4FcgXgzGggbFYMngicXEo4MQDGBBxyKaYF3A?=
 =?us-ascii?q?QE?=
X-IronPort-AV: E=Sophos;i="5.56,344,1539673200"; 
   d="scan'208";a="55589090"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 12 Dec 2018 05:43:02 -0800
Received: from localhost ([::1]:44982 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gX4n0-00067v-4V
	for like.xu@linux.intel.com; Wed, 12 Dec 2018 08:43:02 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:46410)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <kwolf@redhat.com>) id 1gX4Yw-00037E-M7
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 08:28:33 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <kwolf@redhat.com>) id 1gX4Yv-0001VE-Ks
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 08:28:30 -0500
Received: from mx1.redhat.com ([209.132.183.28]:54039)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <kwolf@redhat.com>)
	id 1gX4Yt-0001S5-Ir; Wed, 12 Dec 2018 08:28:27 -0500
Received: from smtp.corp.redhat.com (int-mx02.intmail.prod.int.phx2.redhat.com
	[10.5.11.12])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id E64013086259;
	Wed, 12 Dec 2018 13:28:26 +0000 (UTC)
Received: from linux.fritz.box.com (ovpn-117-245.ams2.redhat.com
	[10.36.117.245])
	by smtp.corp.redhat.com (Postfix) with ESMTP id D79C460C44;
	Wed, 12 Dec 2018 13:28:25 +0000 (UTC)
From: Kevin Wolf <kwolf@redhat.com>
To: qemu-block@nongnu.org
Date: Wed, 12 Dec 2018 14:27:15 +0100
Message-Id: <20181212132735.16080-22-kwolf@redhat.com>
In-Reply-To: <20181212132735.16080-1-kwolf@redhat.com>
References: <20181212132735.16080-1-kwolf@redhat.com>
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.12
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.49]);
	Wed, 12 Dec 2018 13:28:26 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [PULL 21/41] file-posix: Move read/write operation
 logic out of aio_worker()
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: kwolf@redhat.com, peter.maydell@linaro.org, qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

aio_worker() for reads and writes isn't boring enough yet. It still does
some postprocessing for handling short reads and turning the result into
the right return value.

However, there is no reason why handle_aiocb_rw() couldn't do the same,
and even without duplicating code between the read and write path. So
move the code there.

Signed-off-by: Kevin Wolf <kwolf@redhat.com>
---
 block/file-posix.c | 40 ++++++++++++++++++++--------------------
 1 file changed, 20 insertions(+), 20 deletions(-)

diff --git a/block/file-posix.c b/block/file-posix.c
index 4a94597b80..877c0700e1 100644
--- a/block/file-posix.c
+++ b/block/file-posix.c
@@ -1311,7 +1311,8 @@ static ssize_t handle_aiocb_rw(RawPosixAIOData *aio=
cb)
          * we can just use plain pread/pwrite without any problems.
          */
         if (aiocb->io.niov =3D=3D 1) {
-            return handle_aiocb_rw_linear(aiocb, aiocb->io.iov->iov_base=
);
+            nbytes =3D handle_aiocb_rw_linear(aiocb, aiocb->io.iov->iov_=
base);
+            goto out;
         }
         /*
          * We have more than one iovec, and all are properly aligned.
@@ -1323,7 +1324,7 @@ static ssize_t handle_aiocb_rw(RawPosixAIOData *aio=
cb)
             nbytes =3D handle_aiocb_rw_vector(aiocb);
             if (nbytes =3D=3D aiocb->aio_nbytes ||
                 (nbytes < 0 && nbytes !=3D -ENOSYS)) {
-                return nbytes;
+                goto out;
             }
             preadv_present =3D false;
         }
@@ -1341,7 +1342,8 @@ static ssize_t handle_aiocb_rw(RawPosixAIOData *aio=
cb)
      */
     buf =3D qemu_try_blockalign(aiocb->bs, aiocb->aio_nbytes);
     if (buf =3D=3D NULL) {
-        return -ENOMEM;
+        nbytes =3D -ENOMEM;
+        goto out;
     }
=20
     if (aiocb->aio_type & QEMU_AIO_WRITE) {
@@ -1375,7 +1377,21 @@ static ssize_t handle_aiocb_rw(RawPosixAIOData *ai=
ocb)
     }
     qemu_vfree(buf);
=20
-    return nbytes;
+out:
+    if (nbytes =3D=3D aiocb->aio_nbytes) {
+        return 0;
+    } else if (nbytes >=3D 0 && nbytes < aiocb->aio_nbytes) {
+        if (aiocb->aio_type & QEMU_AIO_WRITE) {
+            return -EINVAL;
+        } else {
+            iov_memset(aiocb->io.iov, aiocb->io.niov, nbytes,
+                      0, aiocb->aio_nbytes - nbytes);
+            return 0;
+        }
+    } else {
+        assert(nbytes < 0);
+        return nbytes;
+    }
 }
=20
 #ifdef CONFIG_XFS
@@ -1779,25 +1795,9 @@ static int aio_worker(void *arg)
     switch (aiocb->aio_type & QEMU_AIO_TYPE_MASK) {
     case QEMU_AIO_READ:
         ret =3D handle_aiocb_rw(aiocb);
-        if (ret >=3D 0 && ret < aiocb->aio_nbytes) {
-            iov_memset(aiocb->io.iov, aiocb->io.niov, ret,
-                      0, aiocb->aio_nbytes - ret);
-
-            ret =3D aiocb->aio_nbytes;
-        }
-        if (ret =3D=3D aiocb->aio_nbytes) {
-            ret =3D 0;
-        } else if (ret >=3D 0 && ret < aiocb->aio_nbytes) {
-            ret =3D -EINVAL;
-        }
         break;
     case QEMU_AIO_WRITE:
         ret =3D handle_aiocb_rw(aiocb);
-        if (ret =3D=3D aiocb->aio_nbytes) {
-            ret =3D 0;
-        } else if (ret >=3D 0 && ret < aiocb->aio_nbytes) {
-            ret =3D -EINVAL;
-        }
         break;
     case QEMU_AIO_IOCTL:
         ret =3D handle_aiocb_ioctl(aiocb);
--=20
2.19.2


