Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 08:51:02 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 305C658079D
	for <like.xu@linux.intel.com>; Wed, 12 Dec 2018 06:06:02 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 12 Dec 2018 06:06:01 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AOy7ktxcRoMAXKCoAqJXYPObRlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxcSzbB7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v6bpgRh31hy?=
 =?us-ascii?q?cdLzM38H/ZhMJzgq1ZrhKuqBNxzZPMYIyXNvRzcb7RcN0GSWVfRcZcTDBNApqm?=
 =?us-ascii?q?YocTE+YNIfpUoo/grFUOtxu+AgysCfvqxDBWmH/23Ks62PkhHgHB2AwgEc8FvX?=
 =?us-ascii?q?PXrNT7M6cSVe61wbLSzTrdcvxW2S3y6JTSfh89pvGMWKt9fMzMwkcsDwPIlkuc?=
 =?us-ascii?q?pZDmMj+Py+gBrmuW4/B+We+hi2MrsRx9rzq3yssyloXEgpgZxk3K+Cln2oo5ON?=
 =?us-ascii?q?61RUBhbdK6E5ZdsTyROZFsTcM4WW5ovT43yr0Ytp6/eygH0JAnxx/Ea/ybaIiE?=
 =?us-ascii?q?+B3jVOCMITtig3JlYr2/iw6z8Uim1OL8StG53EhWoidGiNXAq20B2h/J5sSZRP?=
 =?us-ascii?q?Zw/l2t1SuN2gzL7+FLO0E0la7VK547xb4wk4IesV3dES/zhUX6lbKZeVs6+ue2?=
 =?us-ascii?q?7+Tre67pppiBN49ylg7xLL8ulsu7AeQ5MQgBQXKX+Ouh1LD7+U35QbNKjuA5k6?=
 =?us-ascii?q?XDsZDaI9gbqbC9AwNPzokj7BO/Aiyg0NQfm3kHI1RFeA+dg4juIVHOL+j0De2j?=
 =?us-ascii?q?jFS0jDdr2/fGM6XlApXMLXjMjq3tfLlg60NHzAozzNZf549bC70bIfLzXFPxu8?=
 =?us-ascii?q?LcDhMjLwO0xOPnW51A0JgDUzePHrOBK/GV9luJ/f40Ze+LYoATpXD6Mfdi4vfv?=
 =?us-ascii?q?iXownxgaZbWo2p0ML2m1G+kjL0iHbH6/v9EaDG1fuwM/SPDt2kSPVCMWa3usUq?=
 =?us-ascii?q?Z5/DwiFY+9Ea/FQYaihqHH2z20SYZLbGJLAUzZDHHzao+fUO0NYi/BHsg0izEB?=
 =?us-ascii?q?SP2rT4gq1jmoswn1zachKfDbqQMCspe299Vr5uubqhY2+3QgDNua12+lVWx4nm?=
 =?us-ascii?q?oUATQx2fYs8gRG1l6f3P0g0LRjHttJ6qYRXw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AnAAAQFRFcmBHrdtBjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTCCYowUX4szgg2SV4R8gXEWGBSDLIQSIjQJDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBAQEICwsGGw4vgjYFAgMYCYJcAwMBAiQfCikDAwECBgEBHykIAwFTGQWDH?=
 =?us-ascii?q?IICAQSmajOFQIRvjDwXgUA/gRGIYIUOAok9l08JkUwLGIFciA02hycsmROBRoI?=
 =?us-ascii?q?OMxoIGxWDJ4InFxKODEAxgQccimmBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AnAAAQFRFcmBHrdtBjHAEBAQQBAQcEAQGBUQcBAQsBgTC?=
 =?us-ascii?q?CYowUX4szgg2SV4R8gXEWGBSDLIQSIjQJDQEDAQEBAQEBAgETAQEBAQEICwsGG?=
 =?us-ascii?q?w4vgjYFAgMYCYJcAwMBAiQfCikDAwECBgEBHykIAwFTGQWDHIICAQSmajOFQIR?=
 =?us-ascii?q?vjDwXgUA/gRGIYIUOAok9l08JkUwLGIFciA02hycsmROBRoIOMxoIGxWDJ4InF?=
 =?us-ascii?q?xKODEAxgQccimmBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,344,1539673200"; 
   d="scan'208";a="54875097"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 12 Dec 2018 06:06:01 -0800
Received: from localhost ([::1]:45188 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gX59E-0008AX-CO
	for like.xu@linux.intel.com; Wed, 12 Dec 2018 09:06:00 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:46675)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <kwolf@redhat.com>) id 1gX4ZB-0003PF-FG
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 08:28:46 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <kwolf@redhat.com>) id 1gX4ZA-0001iJ-Ed
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 08:28:45 -0500
Received: from mx1.redhat.com ([209.132.183.28]:50828)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <kwolf@redhat.com>)
	id 1gX4Z6-0001eW-Hc; Wed, 12 Dec 2018 08:28:40 -0500
Received: from smtp.corp.redhat.com (int-mx02.intmail.prod.int.phx2.redhat.com
	[10.5.11.12])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id D2653307D861;
	Wed, 12 Dec 2018 13:28:39 +0000 (UTC)
Received: from linux.fritz.box.com (ovpn-117-245.ams2.redhat.com
	[10.36.117.245])
	by smtp.corp.redhat.com (Postfix) with ESMTP id C090860C44;
	Wed, 12 Dec 2018 13:28:38 +0000 (UTC)
From: Kevin Wolf <kwolf@redhat.com>
To: qemu-block@nongnu.org
Date: Wed, 12 Dec 2018 14:27:24 +0100
Message-Id: <20181212132735.16080-31-kwolf@redhat.com>
In-Reply-To: <20181212132735.16080-1-kwolf@redhat.com>
References: <20181212132735.16080-1-kwolf@redhat.com>
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.12
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.48]);
	Wed, 12 Dec 2018 13:28:39 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [PULL 30/41] block: Use bdrv_reopen_set_read_only() in
 stream_start/complete()
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: kwolf@redhat.com, peter.maydell@linaro.org, qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

From: Alberto Garcia <berto@igalia.com>

This patch replaces the bdrv_reopen() calls that set and remove the
BDRV_O_RDWR flag with the new bdrv_reopen_set_read_only() function.

Signed-off-by: Alberto Garcia <berto@igalia.com>
Reviewed-by: Max Reitz <mreitz@redhat.com>
Signed-off-by: Kevin Wolf <kwolf@redhat.com>
---
 block/stream.c | 20 ++++++++++----------
 1 file changed, 10 insertions(+), 10 deletions(-)

diff --git a/block/stream.c b/block/stream.c
index 81a7ec8ece..7a49ac0992 100644
--- a/block/stream.c
+++ b/block/stream.c
@@ -34,7 +34,7 @@ typedef struct StreamBlockJob {
     BlockDriverState *base;
     BlockdevOnError on_error;
     char *backing_file_str;
-    int bs_flags;
+    bool bs_read_only;
 } StreamBlockJob;
=20
 static int coroutine_fn stream_populate(BlockBackend *blk,
@@ -89,10 +89,10 @@ static void stream_clean(Job *job)
     BlockDriverState *bs =3D blk_bs(bjob->blk);
=20
     /* Reopen the image back in read-only mode if necessary */
-    if (s->bs_flags !=3D bdrv_get_flags(bs)) {
+    if (s->bs_read_only) {
         /* Give up write permissions before making it read-only */
         blk_set_perm(bjob->blk, 0, BLK_PERM_ALL, &error_abort);
-        bdrv_reopen(bs, s->bs_flags, NULL);
+        bdrv_reopen_set_read_only(bs, true, NULL);
     }
=20
     g_free(s->backing_file_str);
@@ -226,12 +226,12 @@ void stream_start(const char *job_id, BlockDriverSt=
ate *bs,
 {
     StreamBlockJob *s;
     BlockDriverState *iter;
-    int orig_bs_flags;
+    bool bs_read_only;
=20
     /* Make sure that the image is opened in read-write mode */
-    orig_bs_flags =3D bdrv_get_flags(bs);
-    if (!(orig_bs_flags & BDRV_O_RDWR)) {
-        if (bdrv_reopen(bs, orig_bs_flags | BDRV_O_RDWR, errp) !=3D 0) {
+    bs_read_only =3D bdrv_is_read_only(bs);
+    if (bs_read_only) {
+        if (bdrv_reopen_set_read_only(bs, false, errp) !=3D 0) {
             return;
         }
     }
@@ -261,7 +261,7 @@ void stream_start(const char *job_id, BlockDriverStat=
e *bs,
=20
     s->base =3D base;
     s->backing_file_str =3D g_strdup(backing_file_str);
-    s->bs_flags =3D orig_bs_flags;
+    s->bs_read_only =3D bs_read_only;
=20
     s->on_error =3D on_error;
     trace_stream_start(bs, base, s);
@@ -269,7 +269,7 @@ void stream_start(const char *job_id, BlockDriverStat=
e *bs,
     return;
=20
 fail:
-    if (orig_bs_flags !=3D bdrv_get_flags(bs)) {
-        bdrv_reopen(bs, orig_bs_flags, NULL);
+    if (bs_read_only) {
+        bdrv_reopen_set_read_only(bs, true, NULL);
     }
 }
--=20
2.19.2


