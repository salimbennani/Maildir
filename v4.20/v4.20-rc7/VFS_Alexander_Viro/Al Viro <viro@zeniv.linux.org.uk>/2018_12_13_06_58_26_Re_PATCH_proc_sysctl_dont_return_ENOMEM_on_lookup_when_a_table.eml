Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 21:20:31 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 3D11D580380;
	Wed, 12 Dec 2018 22:58:46 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 12 Dec 2018 22:58:44 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ARHtzchU1kJymdKIGuGxmwsCiG/nV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhCDtKdThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGo2y?=
 =?us-ascii?q?YYsRAeQcPuhYoYbyqEcTohS8CwasH/vvxz1Ti3/qwaE3yfgtHR3c0QA+Gd8FrX?=
 =?us-ascii?q?TarM/yNKcXSe240K3IxijMYPNXwzf975XDfxc/ofGNR7JwdtHcyEgxGAPDj1WQ?=
 =?us-ascii?q?t5bpPzeU1uQLrmia4PBsVeW1i24osQ1xvzuvy94qh4LUhYwV0kjJ+TtlzIsxP9?=
 =?us-ascii?q?G0VUB2bcC+HJdNtCyWK5F6T8IgTm1wpSo3zr0LtYS/cSQU0pgr2R7SZvKdf4SW?=
 =?us-ascii?q?5B/oSfyfLi1ihH1/fbKynxay/lakyu37TsS0zllKoTRfktXWtXACyQbT6s6ZRf?=
 =?us-ascii?q?t55Euh3iyP1w/L5uFFJ0A7i7bbJoY/zrIskpcfq1nPEyHolEnskaObdVko9vKp?=
 =?us-ascii?q?5unlernmo4WTN45wigHwKKQuncm/DPw8MggPWWib5Ou92KTg/ULnWrVKiOM5kq?=
 =?us-ascii?q?3AvJDdK8UboLC2AxVO34Y95BawES2m3M4bnXYZNlJFfgyIj4zzN1HJOvD4Au+z?=
 =?us-ascii?q?g06wnzdz2/DGIrrhD43JLnjCk7fuY6xx6kFByAcoydBf5pRUCqwOIf7pW0/xss?=
 =?us-ascii?q?DYAQE9MwCu3+nnD9B93JsEWW2TGq+ZLL/SsViQ6+IvOeaMZZMVtyz6K/Q/5/7u?=
 =?us-ascii?q?kGU2mVkSfaSy2ZsXaXa4HulpIkmDYHrshMsBHnkOvgYkUOPqj1iCWyZJZ3muR6?=
 =?us-ascii?q?I8+i07CIW+AIfBQYCinqaN3CS8Hp1QYGBGDUuBEXPpd4WCRvcNZzieIs5nkjwY?=
 =?us-ascii?q?S7ehT5Ut2g2ptA//07BnNPbb+jUEtZL/09h4//fclQoy9TxzDMSRyXuNQHt2nm?=
 =?us-ascii?q?4TQz823aZ/oVFyy1uZ0Kh4heBYGsJX5/9TTgg6MpvcxfRgC9/uQgLBYsuJSFG+?=
 =?us-ascii?q?T9WlGz4xSMg9w9sPY0lnHdWigQvO3y6rA78TiryKC4Y48qPa33jtOcl9z2zK27?=
 =?us-ascii?q?Umj1kjWsFPL3GphrZj9wjPAI7Ei1iWmLy0dasCxiLN9H2MzWyVvE5GVg58VqHF?=
 =?us-ascii?q?XXMaZkvSttn54kLCT7mzCbUoKAdByMiCKrdUZd3tl1lJWPDjONHGaWKrh2iwHQ?=
 =?us-ascii?q?qIxq+LbIfyZmoSxjvdB1YenwAT53mGMxM+CTmno2/FCDxuFFTvY17j8OVkqXO7?=
 =?us-ascii?q?SFM0wB+Ob0F7y7W1/RsVj+SGS/wPxrIEpDshqzJsEVah3tLWDt2ApxZhfKRce9?=
 =?us-ascii?q?89/E1L1WXDtwx5P5ygKa9ii0UacwR2uUPuyhp2Bp9BkcgssHMl0g5yJbiE31NG?=
 =?us-ascii?q?cjOSxYrwNaHPKmnu4BCvbLbb1Uva0NmI9aYA9vQ5p0/4swG0C0Ut6XNn09pS03?=
 =?us-ascii?q?uC/ZjKCAsSUZTsUkc47RR6prfaYjUj6IPQz3FjLa60sjra0dIzGOQl0gqgf8tY?=
 =?us-ascii?q?MK6cFA7yDtcWCNS0JO0rm1imdBQEPO9J+a4wPsOmceaG2aGxMOZhmjKmkXpI4I?=
 =?us-ascii?q?Rn3k2Q8Cp8T/bC34wZzPGAwguHSzD8gU+7ssD2hY9LfysSEXe4yST+Ao5eeLdy?=
 =?us-ascii?q?fYcSBWiyOcK3wshxiID3W35f8l6uHFcG2M6veRqPYF3xxwxQ1UILoXO5nSu01S?=
 =?us-ascii?q?B7kzYsrqCHxizB3/zidAYbOm5MXGRjjVbsLZK0jtwAR0iocg4pmQCh5Ub7wahb?=
 =?us-ascii?q?uat+I3PSQUdOYyj5MWViXrGsubqFZs5F8IkovjlPUOSgfVCaTabwoxkA3CP5HG?=
 =?us-ascii?q?texzc7eyuxuprjnBx6i2OdLHBto3rfYsxwwRbf5NrBRf9exDYGRS94iSXJCVi4?=
 =?us-ascii?q?JdWm4dKUl5LbuOCkS22hToFTcTXszY6YtCq0/2pqDQe9n/CynN3qCgw60S7919?=
 =?us-ascii?q?l3WiTEthf8Yo/316ukNeJrZFVnBFj568BiAIFxjpMwhI0M2XgdnpiV/mAIkWbp?=
 =?us-ascii?q?PdVbxKLxdnwNRTEQzt7R4Qjl3lBjL32Ty4L4UHWd3tVuZ92gbmwK3SI96thACL?=
 =?us-ascii?q?2I47xcgSt1vl24oBrUYfh8nTcS0+Ei6XAEjOESpAoi0D+dDasMEklCMizhjBCI?=
 =?us-ascii?q?79G4rKVKa2eja7mw1Exind+/CLGOuB1TWHH8ep06By9/8t1/ME7Q0H308ozkZN?=
 =?us-ascii?q?7QbdcJuhyViRjAifVVKIkqlvoLnidnPWP9vXs4y+80lxBu3Je6vJSZJGVp5q62?=
 =?us-ascii?q?HhlYNjjtbcMJ5j7tlbpentqR3423BZpuADILXJ/1Tf6yFDISqO/qNwKPED06t3?=
 =?us-ascii?q?eaFqDTHQ6Z6Ed6sX3PF4qnOG2QJHkc1d9iXgWSJFRDgAAIWzU3hpw5GRqvxMP/?=
 =?us-ascii?q?a0d1/CwR6kT7qhtRyeJoKh//XX3EpAqzbjc0SZ6fLAdZ7w1Y5kfVN9Ce4fx3Hy?=
 =?us-ascii?q?1C4pKhqwmNIHSBZwtUFWEJRlCEB1f7M7iu4tnA7vGYBvekIPvIe7mOsuteV/GH?=
 =?us-ascii?q?xZ+01otm/jCMNtiAP3V4Dv073FZDUm59G8jDhzoPTCkXnTrXb8GHvBe85jF3rs?=
 =?us-ascii?q?en/fTrRg3v5IiPC7hTMdl1+BC2m6CDN+GOiyZjNDZYzYgBxXvJyLgZwV4ThDti?=
 =?us-ascii?q?dzirEbQcqyHNSLjclbNQDx4ecylzLtdH77og3glRPs7Wksn61qNjgf4vFVhEVU?=
 =?us-ascii?q?btmsWoZcERJ2G9NVXHBFuENbicJD3Lxd33br24SbFKkOpUsBiwsy6BE0D/JjSD?=
 =?us-ascii?q?iyXpVxe3POFQjSGbOQZSt52nfhlxCWjsUtTmZwa/MN92iz023LI1imnLNW4aLT?=
 =?us-ascii?q?hzbUdNoqeM4iNfh/V1A3ZB4WZ9LemYhyaZ6PHVK5YMvvttByR0luRa72w7yrtV?=
 =?us-ascii?q?9i5EQvN1lTDWrt5vpVGmj+aOxiBmUBpItjZEmoaLsV9+NqXe85kTEUrDqTMT5G?=
 =?us-ascii?q?PYJxkOrt9sDNHi8/RbzdzIkqvbIS1D6M7du8AbAp6HBtiANS8INVLXGSTTRF8b?=
 =?us-ascii?q?TCSsHXPSgU1D1vWT8GCF6J8gpd7xm8xdGfdgSFUpG6ZCWQxeF9sYLcIyB2t8nA?=
 =?us-ascii?q?=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ACAAC/ARJch0O0hNFjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUgQBAQEBCwGDayeYJ4INFJc/FIFdLhMBh0AiNQgNAQMBAQEBAQE?=
 =?us-ascii?q?CARMBAQEIDQkIKS+CNiQBgmIBAgMBAiQTPwYJAQEKDgoJExIDDAUoIRMFgxyCA?=
 =?us-ascii?q?QQBqAMzijaMPBeBf4ERgxKEaYVzAoswlVwJkUwLGIFcj2qKLpBYAYIMTTQEgye?=
 =?us-ascii?q?CUI4LPzOBBQEBjFoBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ACAAC/ARJch0O0hNFjGgEBAQEBAgEBAQEHAgEBAQGBUgQ?=
 =?us-ascii?q?BAQEBCwGDayeYJ4INFJc/FIFdLhMBh0AiNQgNAQMBAQEBAQECARMBAQEIDQkIK?=
 =?us-ascii?q?S+CNiQBgmIBAgMBAiQTPwYJAQEKDgoJExIDDAUoIRMFgxyCAQQBqAMzijaMPBe?=
 =?us-ascii?q?Bf4ERgxKEaYVzAoswlVwJkUwLGIFcj2qKLpBYAYIMTTQEgyeCUI4LPzOBBQEBj?=
 =?us-ascii?q?FoBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,347,1539673200"; 
   d="scan'208";a="66620594"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 12 Dec 2018 22:58:43 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726935AbeLMG6i (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 13 Dec 2018 01:58:38 -0500
Received: from zeniv.linux.org.uk ([195.92.253.2]:40516 "EHLO
        ZenIV.linux.org.uk" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726542AbeLMG6h (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 13 Dec 2018 01:58:37 -0500
Received: from viro by ZenIV.linux.org.uk with local (Exim 4.91 #2 (Red Hat Linux))
        id 1gXKx0-0006KL-8m; Thu, 13 Dec 2018 06:58:26 +0000
Date: Thu, 13 Dec 2018 06:58:26 +0000
From: Al Viro <viro@zeniv.linux.org.uk>
To: Ivan Delalande <colona@arista.com>
Cc: Luis Chamberlain <mcgrof@kernel.org>,
        Kees Cook <keescook@chromium.org>,
        Andrew Morton <akpm@linux-foundation.org>,
        "Eric W. Biederman" <ebiederm@xmission.com>,
        Alexey Dobriyan <adobriyan@gmail.com>,
        linux-kernel@vger.kernel.org, linux-fsdevel@vger.kernel.org
Subject: Re: [PATCH] proc/sysctl: don't return ENOMEM on lookup when a table
 is unregistering
Message-ID: <20181213065826.GL2217@ZenIV.linux.org.uk>
References: <20181213015742.GA28776@visor>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181213015742.GA28776@visor>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Wed, Dec 12, 2018 at 05:57:43PM -0800, Ivan Delalande wrote:
> proc_sys_lookup can fail with ENOMEM instead of ENOENT when the
> corresponding sysctl table is being unregistered. In our case we see
> this upon opening /proc/sys/net/*/conf files while network interfaces
> are being removed, which confuses our configuration daemon.
> 
> The problem was successfully reproduced and this fix tested on v4.9.122
> and v4.20-rc6.
> 
> Fixes: ace0c791e6c3 ("proc/sysctl: Don't grab i_lock under sysctl_lock.")
> Cc: stable@vger.kernel.org
> Signed-off-by: Ivan Delalande <colona@arista.com>
> ---
>  fs/proc/proc_sysctl.c | 9 +++++----
>  1 file changed, 5 insertions(+), 4 deletions(-)
> 
> diff --git a/fs/proc/proc_sysctl.c b/fs/proc/proc_sysctl.c
> index 89921a0d2ebb..834be5bc3d07 100644
> --- a/fs/proc/proc_sysctl.c
> +++ b/fs/proc/proc_sysctl.c
> @@ -474,7 +474,7 @@ static struct inode *proc_sys_make_inode(struct super_block *sb,
>  	if (unlikely(head->unregistering)) {
>  		spin_unlock(&sysctl_lock);
>  		iput(inode);
> -		inode = NULL;
> +		inode = ERR_PTR(-ENOENT);
>  		goto out;
>  	}
>  	ei->sysctl = head;
> @@ -549,10 +549,11 @@ static struct dentry *proc_sys_lookup(struct inode *dir, struct dentry *dentry,
>  			goto out;
>  	}
>  
> -	err = ERR_PTR(-ENOMEM);
>  	inode = proc_sys_make_inode(dir->i_sb, h ? h : head, p);
> -	if (!inode)
> +	if (IS_ERR_OR_NULL(inode)) {
> +		err = inode ? ERR_CAST(inode) : ERR_PTR(-ENOMEM);

*gags*

If you want to return specific errors, do just that and for pity sake,
do *NOT* invent such hybrids.  "Pointer to object on success,
ERR_PTR(-E...) on failure, NULL means ERR_PTR(-ENOMEM)" is a bitch to
reason about and prone to breakage.

"Return NULL on error" and "return ERR_PTR() on error" do not mix.
Just make proc_sys_make_inode() return ERR_PTR(-ENOMEM) on allocation
failures and update the callers (as you have to, anyway).

IS_ERR_OR_NULL() is usually a sign of bad calling conventions and it
certainly is just that in this case.

Just do
        inode = new_inode(sb);
        if (!inode)
                return ERR_PTR(-ENOMEM);
in there, in addition to your return of ERR_PTR(-ENOENT), and lose those
IS_ERR_OR_NULL() things.  Make those IS_ERR() and turn the assignment
to err into straight ERR_CAST().  All there is to it...

