Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 08:53:19 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 64D1F58079D;
	Wed, 12 Dec 2018 09:13:04 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 12 Dec 2018 09:13:03 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3An0aYXB9/zG302f9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1ugfIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CRWRPQNtfVzBPDI2/?=
 =?us-ascii?q?YYsADe0PPedEoIfyqFQOtgO+CAu3CePz0z9Ig2P63a0m3+g/FwzNwQwuH8gJsH?=
 =?us-ascii?q?TRtNj7KaASUea6zKLVyzvDbu5W0ir65YjTdRAhp/6MXbZxccrM0kYvDRnKjkuR?=
 =?us-ascii?q?qYzjMDOYzeoNvHOB4+V8UuKvjncqpgdsqTas3schkpfFip4Rx1ze6Cl0zpg5Kc?=
 =?us-ascii?q?elREN4fdKoCppduiOCO4doQ84uXX1ktSMnxrEapJG2eTQFxIgjyhLDbvGLbZSE?=
 =?us-ascii?q?7g7mWeuUITp1gXxodbCkiBms6USgxPPzW8qo3FtPqydKiMTAu3EN2hHW6MWIUO?=
 =?us-ascii?q?dy8Vmk1DmS1A3c8ORJLl0qmqfaK5MsxKM7mIAJvkTZBCD2nV37jK+IeUUg/eil?=
 =?us-ascii?q?8/rnYrr4qZ+GLYN0iR/xMr4omsOhBeQ0KA8OX3KU+eik1b3j+1P2QKlSg/Eojq?=
 =?us-ascii?q?XUtIrWKdkVq6KnGQNZz4Uu5wqlAzqn0tkUhXwHI0hEeBKDgYjpIVbOIPXgAPe7?=
 =?us-ascii?q?glSsliprxv/fMr3iHJrNNH7Dn6nlfbpk7E5dxgwzws5F559PFLEBL+z8WlXruN?=
 =?us-ascii?q?zbEBA5KQq0zPjjCNln0YMeQ22PDreDMKzOqV+I+v4vI+6UaY8RuTb9KOYq6+Th?=
 =?us-ascii?q?jH8kglIdeaip3Z0KaHG3BPhmIkOZYWbyjdcFC2sFog0+TOnygl2YTTFTf2qyX7?=
 =?us-ascii?q?475jwjCIKpF4bDRpy3j7yGxiu7HoBWaXpAClCDCnroc4SEW/ERaCOdOMNhkzoE?=
 =?us-ascii?q?VaS/RI8lzx2hqAj6y79/JOrO5iIYrY7j1MRy5+DLlxEy8iJ7A96e02GKSWF0mG?=
 =?us-ascii?q?QISiQy3KB+p0x911iC3bJ5g/xeCdxc+fdJXh0mOp7byuxwE8ryVR7ZfteVVFam?=
 =?us-ascii?q?Rc2rDisqTtIxxN8OYFxxG8+4gRDBxCeqB74Vl7qWBJ076K7c3n7xJ9pjxHbCzq?=
 =?us-ascii?q?Uuk14mQs5XP228mqF/7xTTB5LOk0iBlKalb6Ic0DTJ9GeC12WOuk5YXRV0UaXE?=
 =?us-ascii?q?W3Afe0TXoc745kPEU7+hF7AnPhFdxs6FL6tAcsfpgkleRPf/JNTeZHq8lHqqCh?=
 =?us-ascii?q?aW2LyAdorqdH8b3CXGFkcElQcf/XKFNQg7AiesuGbeDD1oFVLybELg6+h+qHWn?=
 =?us-ascii?q?TkAqywGGdVFu172w+hQNn/yTV+sT3q4YuCcmszh7AUyy38zIBNaapwpuZqNcYc?=
 =?us-ascii?q?gj71dBzm/Zsw19Ppq9L6FtnFIecgJ3v1/w2BVzEIlPjc8qrHYyxgpoNa2YyE9B?=
 =?us-ascii?q?dy+f3Z3oJr3XK2zy/Beza67W2lDSysqW9r0I6PQir1XjvQepFkU5/nVj0tlV1W?=
 =?us-ascii?q?ac55rQAAoTV5LxTlg49xxgq77GZSk94pve1WdwPqmsrj/Cx9UpCfM/xRakYdhe?=
 =?us-ascii?q?P72LFQ/oH8IBGsihNfYlm16qbhIDIuBf76o0P8Kgd/ub16+nJudgnDS6jWtZ5I?=
 =?us-ascii?q?BxyF6D9y15SuTQxZYK3+mY3hebVzf7lFqgst33lZpYaj0IH2u/yTLrBIheZqBp?=
 =?us-ascii?q?eYYLCGGuI9C4x9lkhp7tXWJY+0CnB18cxMCpfh+SZUTn3QJMzUQXvWCnmSygwj?=
 =?us-ascii?q?xukjEmsrCQ3DbTzOTlbhYHPHBERHNjjVv1PYe7ldQaU1W2YAgzkxul4133x6xa?=
 =?us-ascii?q?pKR5MmnSTl1EfynwL2F+TKSwsqCObNJI6JMtqS9XSvizYUiGSr7hpBsXyyPiH2?=
 =?us-ascii?q?pEyDE7bT2qoYj5nxphhWKZLXZzqmfZeM5qyRfe4tzcWeBe3j4cSCZkjjnXA0C2?=
 =?us-ascii?q?P8O18tWMi5fDrue+WnqjVpJJaynrzoCAtCyh6W1xGxK/nPOzmtzhEQck1y/2zN?=
 =?us-ascii?q?1qVSTOrBbhbYjnzaW6MeR7fkZ2AF/w8dZ1GoZ7koEonpEfxWAahomJ/XoAiWry?=
 =?us-ascii?q?Mc9U2aXkYHoPRD4LxcXY4Azk2E1lM3KIyJj1VnSbwst9eda6Znka1T4678BPEK?=
 =?us-ascii?q?2U9qBLnTNpolqkqgLceft9kS0cyfc06H4anvsGuAwiziiGBrASHE9YPTHjlhiS?=
 =?us-ascii?q?7tC+qrlXa3ircbSqyEV+mtWhBqmYog5AQHb5ZosiHSho48V6MVLM02f85pvqed?=
 =?us-ascii?q?bOdtITqgObkw3bgOdLMpIxmeEHhS5mOWL7oH0kxPQ3jR1o3ZGmooeHL39h876+?=
 =?us-ascii?q?Ah5dLjf1fd8c+inxjaZCmcabx5yvHpJkGjkRXZrnV/SoEC8JtfT8NgaDCzk8qn?=
 =?us-ascii?q?adGbrCEg6T8kZmr3TTE5+1M3GbPmUWzdJnRBOFPkxQnBgUXCkmnp4+Dg2l39bu?=
 =?us-ascii?q?cEB95jAM/FL4rgZMx/lsNxn+VGffuQipZi01SJiZMBpZ8AVC613JPsyZ6+J5Bz?=
 =?us-ascii?q?tY8YG5rAyRNmybYBxFDWMTVUyBGV/jJaOi5cXa/+ibG+q+LObOYbOUpuxFTPqI?=
 =?us-ascii?q?wZOv0o17/zeDLMmPP39iD+El1UpHR3x2B8PZmzAXQSwNiy3Nd9KbpAu7+iBvrs?=
 =?us-ascii?q?G/9+nrWBvy5YSVDbteK85v+xewgaeMLOOQgCd5KTBF1pID33PIyb4f3EIMhCFq?=
 =?us-ascii?q?bTWiDbMAtSvVRqLKhqBXFwIbaz90NMZQ76IzwAhNOc3YitP0zLJ4jeQ1C1BKVV?=
 =?us-ascii?q?P/gMGpeNcKLnq5NFPGAkaLKbuHKSfKw8HxfaOzV7lQgP9IuB23vDaRC1XjMSib?=
 =?us-ascii?q?lzn1SxCvNvlBgzuGPBNFooGybBZsBXLnTNLncRC7NN53jTsrwbw7nH/KNGgcMS?=
 =?us-ascii?q?RifENJtLGf8SRYgvBnEWxb8nVlNfWEmzqe7+TANpYWsP5rDj5omO5A/Hs6y6Va?=
 =?us-ascii?q?7CdfSfxxmSvSqMNuol68numOzDpnTARBqjJRiI2XukViPL3T9oNcVnbc4BIN8W?=
 =?us-ascii?q?KQBgwKptR/DN3vvqFQyt7Xm6PyKDdN6dTU/cQHCsjQKcKHNmchMBXzFD7VCgsF?=
 =?us-ascii?q?USCkNWXFi0NBl/GS8y7dkp9vkpXwlYBGeL5ZUEcpDPpSXlxoANEYMr92WD0+mL?=
 =?us-ascii?q?KWhcJO4mCx+kr/XsJf66vAUP3aJfTyYGKCir9LYxoVy6nxM4UVOaX10QppbVws?=
 =?us-ascii?q?z9eCIFbZQd0Y+n4pVQQzukgYtSEmFmA=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BZAQAwQBFch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBZYExKoICBAsnh0MDhS6LM4INFJJDhiADTBIBARgTAYRAgn4iOBIBAwEBAQE?=
 =?us-ascii?q?BAQIBEwEBAQgNCQgpIwyCNiQBgmEBAQEBAgEBAg8VEwYBATcBBAEJAQEBAQgYH?=
 =?us-ascii?q?hADLyUCBA4FBR2CNEuBagMNCAEEmygCLolYAQEBgWozgnYBAQWFBhiCCQiMPBe?=
 =?us-ascii?q?Bf4E4H4JMhQGDNYImizKEFZByVQmCJ49IgVyPaiyKAowNgl0CAgICBAUCDQEBB?=
 =?us-ascii?q?YFdgXczGiN6AYJBPoFdDBeDSopTcoEFAQEhjF8BAQ?=
X-IPAS-Result: =?us-ascii?q?A0BZAQAwQBFch0O0hNFkHAEBAQQBAQcEAQGBZYExKoICBAs?=
 =?us-ascii?q?nh0MDhS6LM4INFJJDhiADTBIBARgTAYRAgn4iOBIBAwEBAQEBAQIBEwEBAQgNC?=
 =?us-ascii?q?QgpIwyCNiQBgmEBAQEBAgEBAg8VEwYBATcBBAEJAQEBAQgYHhADLyUCBA4FBR2?=
 =?us-ascii?q?CNEuBagMNCAEEmygCLolYAQEBgWozgnYBAQWFBhiCCQiMPBeBf4E4H4JMhQGDN?=
 =?us-ascii?q?YImizKEFZByVQmCJ49IgVyPaiyKAowNgl0CAgICBAUCDQEBBYFdgXczGiN6AYJ?=
 =?us-ascii?q?BPoFdDBeDSopTcoEFAQEhjF8BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,345,1539673200"; 
   d="scan'208";a="56622375"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 12 Dec 2018 09:13:01 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728017AbeLLRJ6 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 12 Dec 2018 12:09:58 -0500
Received: from mx0b-00082601.pphosted.com ([67.231.153.30]:46922 "EHLO
        mx0a-00082601.pphosted.com" rhost-flags-OK-OK-OK-FAIL)
        by vger.kernel.org with ESMTP id S1726358AbeLLRJ5 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 12 Dec 2018 12:09:57 -0500
Received: from pps.filterd (m0001255.ppops.net [127.0.0.1])
        by mx0b-00082601.pphosted.com (8.16.0.27/8.16.0.27) with SMTP id wBCH3649027115;
        Wed, 12 Dec 2018 09:09:20 -0800
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=fb.com; h=from : to : cc : subject
 : date : message-id : references : in-reply-to : content-type : content-id
 : content-transfer-encoding : mime-version; s=facebook;
 bh=QJO/MH41lqXRg7+FpNbsXk/mYa0CxnJZUr/Y6ZXFOQM=;
 b=A3bqJQCako3j9HMMDLkKSnkSy2G2vPCUDKZtilgxrQPKMJgxLMTtbNGICIVlF8rWQXGc
 Tca37qgEFKR7SsMgbKiB1aFkBaf3BPVX4SOf3PLTmvUyo76kv40bNTRtOAy61HWNI3Ro
 CCwL75IDUYiD7YxANCiIzxWsNdl+hNRskgs= 
Received: from maileast.thefacebook.com ([199.201.65.23])
        by mx0b-00082601.pphosted.com with ESMTP id 2pb4a58hs6-2
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-SHA384 bits=256 verify=NOT);
        Wed, 12 Dec 2018 09:09:20 -0800
Received: from frc-mbx02.TheFacebook.com (2620:10d:c0a1:f82::26) by
 frc-hub01.TheFacebook.com (2620:10d:c021:18::171) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384) id
 15.1.1531.3; Wed, 12 Dec 2018 09:09:20 -0800
Received: from frc-hub02.TheFacebook.com (2620:10d:c021:18::172) by
 frc-mbx02.TheFacebook.com (2620:10d:c0a1:f82::26) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384) id
 15.1.1531.3; Wed, 12 Dec 2018 09:09:19 -0800
Received: from NAM05-CO1-obe.outbound.protection.outlook.com (192.168.183.28)
 by o365-in.thefacebook.com (192.168.177.72) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384) id 15.1.1531.3
 via Frontend Transport; Wed, 12 Dec 2018 09:09:19 -0800
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=fb.onmicrosoft.com;
 s=selector1-fb-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=QJO/MH41lqXRg7+FpNbsXk/mYa0CxnJZUr/Y6ZXFOQM=;
 b=NpvNIiUN05zQtaPhevK3kL64YajjyPCeaS83vaYwO09x96GaMRj3GUn7keVVvCJe+p5iiCzIzK8MxNi3Q+c05pSnn5S6RTi0hxB5HoGFwZeyPnGe4dv8ZLw90dfQ5DJ3tkdK464x0FXgbzsjvkqeht8ehGtzDleOZ0oQwISnbEU=
Received: from MWHPR15MB1165.namprd15.prod.outlook.com (10.175.2.19) by
 MWHPR15MB1951.namprd15.prod.outlook.com (10.175.8.148) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.1425.19; Wed, 12 Dec 2018 17:09:17 +0000
Received: from MWHPR15MB1165.namprd15.prod.outlook.com
 ([fe80::a165:7ace:d8a:de65]) by MWHPR15MB1165.namprd15.prod.outlook.com
 ([fe80::a165:7ace:d8a:de65%8]) with mapi id 15.20.1404.026; Wed, 12 Dec 2018
 17:09:17 +0000
From: Song Liu <songliubraving@fb.com>
To: Peter Zijlstra <peterz@infradead.org>
CC: lkml <linux-kernel@vger.kernel.org>,
        "netdev@vger.kernel.org" <netdev@vger.kernel.org>,
        "ast@kernel.org" <ast@kernel.org>,
        "daniel@iogearbox.net" <daniel@iogearbox.net>,
        Kernel Team <Kernel-team@fb.com>,
        "acme@kernel.org" <acme@kernel.org>,
        Steven Rostedt <rostedt@goodmis.org>
Subject: Re: [PATCH v3 perf, bpf-next 1/4] perf, bpf: Introduce
 PERF_RECORD_BPF_EVENT
Thread-Topic: [PATCH v3 perf, bpf-next 1/4] perf, bpf: Introduce
 PERF_RECORD_BPF_EVENT
Thread-Index: AQHUkan/BrxKv3p0HEGwaC6e4kWgY6V7FkWAgABBOQA=
Date: Wed, 12 Dec 2018 17:09:17 +0000
Message-ID: <C6E2C200-4C86-4EE0-97FA-228C0E0629B1@fb.com>
References: <20181211233351.4036381-1-songliubraving@fb.com>
 <20181211233351.4036381-2-songliubraving@fb.com>
 <20181212131549.GZ5289@hirez.programming.kicks-ass.net>
In-Reply-To: <20181212131549.GZ5289@hirez.programming.kicks-ass.net>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-mailer: Apple Mail (2.3445.101.1)
x-originating-ip: [2620:10d:c090:200::5:37be]
x-ms-publictraffictype: Email
x-microsoft-exchange-diagnostics: 1;MWHPR15MB1951;20:6DZu+xUljy8dNR6zmLlEXUUzFtFkrvPq7t26GJMtf18iKd112/3sokLhs1yHsfHfPx5bMKNininnF1bu5W2juia99mUVyIFgi+9Tq9PdQZuO8DnJ/RXxvW5rMcmee5TzS/LAYL5efPESG6C7+btmFRcDgr1EYXlRKiuUc7hinRs=
x-ms-exchange-antispam-srfa-diagnostics: SOS;
x-ms-office365-filtering-correlation-id: 839ee669-a9cd-4ae3-05c1-08d660548cea
x-microsoft-antispam: BCL:0;PCL:0;RULEID:(2390098)(7020095)(4652040)(8989299)(5600074)(711020)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(2017052603328)(7153060)(7193020);SRVR:MWHPR15MB1951;
x-ms-traffictypediagnostic: MWHPR15MB1951:
x-microsoft-antispam-prvs: <MWHPR15MB1951BD6A9D8639244647E13AB3A70@MWHPR15MB1951.namprd15.prod.outlook.com>
x-ms-exchange-senderadcheck: 1
x-exchange-antispam-report-cfa-test: BCL:0;PCL:0;RULEID:(8211001083)(6040522)(2401047)(8121501046)(5005006)(823302103)(93006095)(93001095)(10201501046)(3231455)(999002)(11241501185)(944501520)(52105112)(3002001)(148016)(149066)(150057)(6041310)(20161123558120)(20161123562045)(201703131423095)(201702281528075)(20161123555045)(201703061421075)(201703061406153)(20161123560045)(20161123564045)(201708071742011)(7699051)(76991095);SRVR:MWHPR15MB1951;BCL:0;PCL:0;RULEID:;SRVR:MWHPR15MB1951;
x-forefront-prvs: 0884AAA693
x-forefront-antispam-report: SFV:NSPM;SFS:(10019020)(136003)(39860400002)(396003)(346002)(366004)(376002)(199004)(189003)(82746002)(57306001)(33656002)(25786009)(575784001)(446003)(86362001)(2616005)(71200400001)(71190400001)(486006)(11346002)(83716004)(476003)(6116002)(6916009)(46003)(2906002)(102836004)(6506007)(53546011)(76176011)(256004)(186003)(14444005)(14454004)(54906003)(478600001)(99286004)(7736002)(106356001)(105586002)(316002)(6246003)(68736007)(50226002)(36756003)(305945005)(4326008)(97736004)(81166006)(81156014)(6486002)(8676002)(6436002)(229853002)(53936002)(8936002)(5660300001)(6512007);DIR:OUT;SFP:1102;SCL:1;SRVR:MWHPR15MB1951;H:MWHPR15MB1165.namprd15.prod.outlook.com;FPR:;SPF:None;LANG:en;PTR:InfoNoRecords;A:1;MX:1;
x-microsoft-antispam-message-info: XzvZUbyH2zjzS6fsESR7I72fKg4gi7ONic0a7JbV3iQXuYpebeIs9yHXX6UH/QA78VR54r5GgLVCHemBx1xmgQkbsPjxx9NRSmxATfh4Cwdiyx7yHre1Gf8K/mtBy3wrNZe/mAyO3PYhs/zuKLA7NETs0iJe6LXO8623iULgimlkzf8HfTmcYNYXYwvf3tePjLy5bgqaIjvR7cAr77ftud4dg7678jugIGSvSslMLXf1hIIlPyLa1IkbuUDS/zHxblbDJYXRGp28i2W9LNS36f8jjNBHSwdW7Wqb0hdYZJvrADe3puBj3kuujrVJSXgo
spamdiagnosticoutput: 1:99
spamdiagnosticmetadata: NSPM
Content-Type: text/plain; charset="us-ascii"
Content-ID: <DB5A9B926D22734B83D0DE961A3ECDC1@namprd15.prod.outlook.com>
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
X-MS-Exchange-CrossTenant-Network-Message-Id: 839ee669-a9cd-4ae3-05c1-08d660548cea
X-MS-Exchange-CrossTenant-originalarrivaltime: 12 Dec 2018 17:09:17.5308
 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 8ae927fe-1255-47a7-a2af-5f3a069daaa2
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MWHPR15MB1951
X-OriginatorOrg: fb.com
X-Proofpoint-Virus-Version: vendor=fsecure engine=2.50.10434:,, definitions=2018-12-12_04:,,
 signatures=0
X-Proofpoint-Spam-Reason: safe
X-FB-Internal: Safe
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org



> On Dec 12, 2018, at 5:15 AM, Peter Zijlstra <peterz@infradead.org> wrote:
>=20
> On Tue, Dec 11, 2018 at 03:33:47PM -0800, Song Liu wrote:
>> For better performance analysis of BPF programs, this patch introduces
>> PERF_RECORD_BPF_EVENT, a new perf_event_type that exposes BPF program
>> load/unload information to user space.
>>=20
>> Each BPF program may contain up to BPF_MAX_SUBPROGS (256) sub programs.
>> The following example shows kernel symbols for a BPF program with 7
>> sub programs:
>>=20
>>    ffffffffa0257cf9 t bpf_prog_b07ccb89267cf242_F
>>    ffffffffa02592e1 t bpf_prog_2dcecc18072623fc_F
>>    ffffffffa025b0e9 t bpf_prog_bb7a405ebaec5d5c_F
>>    ffffffffa025dd2c t bpf_prog_a7540d4a39ec1fc7_F
>>    ffffffffa025fcca t bpf_prog_05762d4ade0e3737_F
>>    ffffffffa026108f t bpf_prog_db4bd11e35df90d4_F
>>    ffffffffa0263f00 t bpf_prog_89d64e4abf0f0126_F
>>    ffffffffa0257cf9 t bpf_prog_ae31629322c4b018__dummy_tracepoi
>=20
> Doesn't BPF have enough information to generate 'saner' names? Going by
> the thing below, these sub-progs are actually functions, right?

These sub programs/functions will have their descriptive names from BTF
function types (coming in 4.21). However, BTF is optional in normal cases,=
=20
when BTF is missing, they will be named as bpf_prog_<tag>_F. The main BPF
program has a name up to 16 byte long. In the example above, the last=20
program has name _dummy_tracepoint.=20

I think these sub programs are more like "programs" than "functions",=20
because each sub program occupies its own page(s).=20

>=20
>>        /*
>>         * Record different types of bpf events:
>>         *  enum perf_bpf_event_type {
>>         *     PERF_BPF_EVENT_UNKNOWN           =3D 0,
>>         *     PERF_BPF_EVENT_PROG_LOAD         =3D 1,
>>         *     PERF_BPF_EVENT_PROG_UNLOAD       =3D 2,
>>         *  };
>>         *
>>         * struct {
>>         *      struct perf_event_header header;
>>         *      u32                             type;
>>         *      u32                             flags;
>>         *      u32                             id; // prog_id or other i=
d
>>         *      u32                             sub_id; // subprog id
>>         *
>>         *      // for bpf_prog types, bpf prog or subprog
>>         *      u8                              tag[BPF_TAG_SIZE];
>>         *      u64                             addr;
>>         *      u64                             len;
>>         *      char                            name[];
>>         *      struct sample_id                sample_id;
>>         * };
>>         */
>=20
> Isn't this mixing two different things (poorly)? The kallsym update and
> the BPF load/unload ?

I would say these two things are actually two parts of the same event.=20
Fields id, sub_id, and tag provide information about which program is
mapped to this ksym. They are equivalent to "pgoff + filename" in=20
PERF_RECORD_MMAP, or "maj, min, ino, and ino_generation" in=20
PERF_RECORD_MMAP2.=20

>=20
> And while this tracks the bpf kallsyms, it does not do all kallsyms.
>=20
> .... Oooh, I see the problem, everybody is doing their own custom
> kallsym_{add,del}() thing, instead of having that in generic code :-(
>=20
> This, for example, doesn't track module load/unload nor ftrace
> trampolines, even though both affect kallsyms.

I think we can use PERF_RECORD_MMAP(or MMAP2) for module load/unload.=20
That could be separate sets of patches.=20

Thanks,
Song

>=20
>> +void perf_event_bpf_event_prog(enum perf_bpf_event_type type,
>> +			       struct bpf_prog *prog)
>> +{
>> +	if (!atomic_read(&nr_bpf_events))
>> +		return;
>> +
>> +	if (type !=3D PERF_BPF_EVENT_PROG_LOAD &&
>> +	    type !=3D PERF_BPF_EVENT_PROG_UNLOAD)
>> +		return;
>> +
>> +	if (prog->aux->func_cnt =3D=3D 0) {
>> +		perf_event_bpf_event_subprog(type, prog,
>> +					     prog->aux->id, 0);
>> +	} else {
>> +		int i;
>> +
>> +		for (i =3D 0; i < prog->aux->func_cnt; i++)
>> +			perf_event_bpf_event_subprog(type, prog->aux->func[i],
>> +						     prog->aux->id, i);
>> +	}
>> +}
>=20
>=20

