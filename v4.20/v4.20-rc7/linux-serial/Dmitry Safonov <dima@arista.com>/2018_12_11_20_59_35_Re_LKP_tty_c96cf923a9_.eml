Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 12 Dec 2018 08:56:06 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 35C1558079D;
	Tue, 11 Dec 2018 12:59:46 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by fmsmga005-1.fm.intel.com with ESMTP; 11 Dec 2018 12:59:45 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Acjkj6hBTLF8guwyVX7V3UyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP7+pciwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95MWSJfDIOy?=
 =?us-ascii?q?b4gBAeQPMulXrYbyu1QArQCmBQSuH+7v1j1Fi2Xq0aEm3eksEQfL1xEgEdIUt3?=
 =?us-ascii?q?TUqc34OqkXUeC00KnI1zXCZO5L1zjn5ojIdRYhofaSXbltdsfe1EgvFwbfgViL?=
 =?us-ascii?q?s4PlJTKV1v8Rs2eB9eZvSeWvi2s+pgx3vzOhyMAsiozTiYIUzFDJ7SZ5z5gvJd?=
 =?us-ascii?q?2+VkF7ZcSoEJxKtyGVMYZ9X8AsQ3lwtSok1rELvYS3cDUExZg53RLTdv+Kf5SS?=
 =?us-ascii?q?7h/iVuudOSl0iG9ndb6lmhq/80atxvf4W8S1ylpGsytIn9jKu3sQzRLc8NKHRe?=
 =?us-ascii?q?F4/kq52TaAyQTT6uZcLEAqmqrUNYQhzqQzlpUNq0TDGDH5mEHsgK+RbEUk9fCk?=
 =?us-ascii?q?6+XhYrr4up+RL5F4hh36P6g0h8CyD/o0PhITU2WY5eiwzrzu8E/hTLVPlPI2k6?=
 =?us-ascii?q?3ZsJ7AJcQco660GwtV0ocl6xaiADaqydcYkmcdLFJDZh2Hi5HlO1bAIfD+E/i/?=
 =?us-ascii?q?mU+hkClkx//YJL3tGJbNIWbZkLfnY7l971RQyA0pzdBQ/55UEK0OIOrvWk/ts9?=
 =?us-ascii?q?zVFhs5Mw23w+n5Etl82Z4eVHmLAq+YNqPSrFCJ6vguI+mKeI8apjL9J+I56P7p?=
 =?us-ascii?q?iH8zgUUdcrWx3ZsLdHC4GexrI0WDbnrtntcOC2AKshA+TOz3klKCVzFTam22X6?=
 =?us-ascii?q?I94DE7FY2nAZ3CRoCrnLyOwiO7EodKaWBBD1CGCW3oeJmcW/cQdCKSJddskj4D?=
 =?us-ascii?q?Vbe/UYMh1hautAn8y7pgNefU/iwYtZT+1Nl6/eHTlBcy9SBqAMSZyW2CU2Z0nm?=
 =?us-ascii?q?YQTT8swK9/uVB9ykuE0aVgmfNYDtxT5/RKUgsgL57T1e56Bsv2WgLAeNeJVVmn?=
 =?us-ascii?q?Ts+nATE3UtI+3dsOb1xhFNWlixDJxzCqDKMNl7yXGJw09brR33vrKMZ70XrG0K?=
 =?us-ascii?q?ghgEMgQstALmCmgq9/9w7OB4/GiUmZlqCqdbgC0y7J7muM0W2OvERAWg5qTarF?=
 =?us-ascii?q?RWwfZlfRrdnh+0zNVaGuBqo9PgtB08GCLLBKZcPvjVlBQPfjO9HeY2aqlme0BB?=
 =?us-ascii?q?aIwK6MbYXwd2Uc2iXdFFYLkwQJ8XmaMgg+Az+ro3jCAzx2CVLvf0Ts/PFjp3yh?=
 =?us-ascii?q?UE870RuGb0172Lqz4R4am/qcRugX3rIFvichtjp1EEy839LQF9qPuQ5hcL9Abt?=
 =?us-ascii?q?M65VdNzXjZuBBlPpy8M6BigUYTcxh2v0Pr0BV3FoVAkMgwoHM21gZyLriY0FdA?=
 =?us-ascii?q?dzOe0pD9IbnXKmj0/BCyZK/awFDe0NCK+qgR7PQ0sUnsvAasFkA66XVoz8FV02?=
 =?us-ascii?q?eA5pXNFAcdS5bxXVg49hdkp7DWeDIy557J2nJ2N6m0sTjC28wyCeshyxagecpf?=
 =?us-ascii?q?MayeGA/zFc0aG9ahKOgwl1e1aRIEOfhY9LQoMMO+a/uGxKmrMf5gnTK7l2hI/J?=
 =?us-ascii?q?px00OM9yVmTO7I0I0Iw/WZ3guBSjf9g02tssHxmYBYez4SGnCzxjTjBI5Ufqdy?=
 =?us-ascii?q?Z5oECX+yI82rwdVzn4TtW39E+1G5HVMJxcipdQCUb1Pjxw1Q1F0brmC9liu80j?=
 =?us-ascii?q?N7jSsprq2Z3CHVx+TidRwHOnNERWV4jFfsJ5S0gM4eXESycwcpkx6l717gx6dH?=
 =?us-ascii?q?vKR/M3XTQUBQcin2LmFuSKuxuqCZY85S7pMlqiFXUOW6YVCHRb/xuRoa0yX/H2?=
 =?us-ascii?q?RAwDA3bS2lupL8nxZikmKSMG5zrGbFecF33Rrf5sbTReRS3joFQyl0kyLXCUK/?=
 =?us-ascii?q?P9mq/NWUkYnMsualWmKlV51TdzTrzIyauCu6421qHQOwn/SpltL7Fgg61Dfx18?=
 =?us-ascii?q?N2WiXQsBb8fo7r2ry6MO19eUlkHl3868t8GoxlloswhZcQ2WUVh5mP/HoHl3vz?=
 =?us-ascii?q?Pstf2a7kcHUNQjsLycbP4Af5wE1jMm6Jx4XhW3We2MRhZsO2YmML2i0n6cBKB7?=
 =?us-ascii?q?yZ7LhFnStzv1q5ohjdYfl7njcB1/Qu7GQWjP0OuAoo1i+dGKwdHVFEPSzwkBSF?=
 =?us-ascii?q?99W+rKRUZGm1a7Sx2lRxncu9DL6cuAFTQ2j2eo0tHSJr6sV/MVTM0GD8643+ed?=
 =?us-ascii?q?nQa84TuQOQkxvak+dVL5cxnOIQhSV7IWL9oWEly+kjgBxy2pG6uZKLKmR386K/?=
 =?us-ascii?q?Hx5YLSb1Z8II9zHpjKZemNuW3o+1EpVgHDULQIXnTfayHD0OsvTnMh6EECcgpX?=
 =?us-ascii?q?eDBbrfAQif5V99oH3VFJCrM2yXKGMdzdV/XxSdIE1fgAYJXDQ1hJI5FwaqxND/?=
 =?us-ascii?q?f0d9/Dwe+ln4qh5UwOJyKxb/SnvfpBuvajosSpiQNh9W4R9Z50vPLcyS9OFzHz?=
 =?us-ascii?q?xb/p28qgyCMHebah9MDWEIXEyEGl/iMqOv5dnG7+iXGO6+I+HSbrWJrOxUT+2I?=
 =?us-ascii?q?yo630ot64zaMMd2CP3llD/0mw0pDQGp2G8LDlzUUTCwXkS3NYtWfpBe9/C13s8?=
 =?us-ascii?q?++/O7qWALp+YuAFb9SPc9z9BCxhKeJL/SQizphKTZEypMMwmfFyLgB014TiCFu?=
 =?us-ascii?q?dDitHa4DtS7XS6LQlbFYDwQGayNoL8ZI66M83g9QOc/UkN/117h4juIrBFdBT1?=
 =?us-ascii?q?DuhsapZckSKWGnKFzHHFqLNKiBJTDT2c73fLizSadOg+RUrRGwvTebHlTnPjSC?=
 =?us-ascii?q?kTnpSh+uPftNjCGdIBxRpoW9fgxxBmjkSdLscge7P8NvjT0q3b00gWvHNXIdMT?=
 =?us-ascii?q?h5aU9Csqec4j9YgvphHWxM9X5lLeiCmyaE4OjUMJcWsf13Aitqk+JW+mg1y7xQ?=
 =?us-ascii?q?7CtcXvx6hDPSrsJyo1GhiuSOyiBoUBxLqjZKgoKEpURjOaXD+ZlGVnbJ5xYN7W?=
 =?us-ascii?q?SWCxQXqNppENzvu6ZMytfRkKL/MitN89XR/ZhUO8+BCsOdMTIaNRPjCXaADhAB?=
 =?us-ascii?q?RDS6HXrCnEEbm+PEsjWWo4I8p5ykhJcVVvdBU1YyCrtOEENjE5oLZpx3UzUMkL?=
 =?us-ascii?q?iHgcpO7n27+kr/XsJf67zCV+6IEL3UITiei75aL08EwLbxBY0JN5bn0gppbVws?=
 =?us-ascii?q?z9eCIFbZQd0Y+n4pVQQzukgYtSEmFmA=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ARAACsJBBch0O0hNFlGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUQYBAQELAYJpgQInjBSMElABAQaBCAglFIkNiTWEfIFzEgEBGAsIAYc?=
 =?us-ascii?q?uIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYgECAwECJBkBASkOAQUJA?=
 =?us-ascii?q?QEKDgouAzEBBQEcBgEMCAEBARaDBgGBdA0EAQqaMDyKHYFsM4J2AQEFgkOEaQM?=
 =?us-ascii?q?FEosNgRwXeIEHgREnDIJfilyJPYFwhBRGkHYJhwmDPIcGBhiBXIUXgnMQh0osi?=
 =?us-ascii?q?HeEc4p2AgQCBAUCBQ8hgSWCDjMaCBsVgyeCGwsBFxKDOIUUhT9AMgGBBAEBimM?=
 =?us-ascii?q?BAQ?=
X-IPAS-Result: =?us-ascii?q?A0ARAACsJBBch0O0hNFlGwEBAQEDAQEBBwMBAQGBUQYBAQE?=
 =?us-ascii?q?LAYJpgQInjBSMElABAQaBCAglFIkNiTWEfIFzEgEBGAsIAYcuIjQJDQEDAQEBA?=
 =?us-ascii?q?QEBAgETAQEBCA0JCCkjDII2JAGCYgECAwECJBkBASkOAQUJAQEKDgouAzEBBQE?=
 =?us-ascii?q?cBgEMCAEBARaDBgGBdA0EAQqaMDyKHYFsM4J2AQEFgkOEaQMFEosNgRwXeIEHg?=
 =?us-ascii?q?REnDIJfilyJPYFwhBRGkHYJhwmDPIcGBhiBXIUXgnMQh0osiHeEc4p2AgQCBAU?=
 =?us-ascii?q?CBQ8hgSWCDjMaCBsVgyeCGwsBFxKDOIUUhT9AMgGBBAEBimMBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,343,1539673200"; 
   d="scan'208";a="57059002"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 11 Dec 2018 12:59:44 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726386AbeLKU7k (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 11 Dec 2018 15:59:40 -0500
Received: from mail-ed1-f65.google.com ([209.85.208.65]:37824 "EHLO
        mail-ed1-f65.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726146AbeLKU7j (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 11 Dec 2018 15:59:39 -0500
Received: by mail-ed1-f65.google.com with SMTP id h15so13750207edb.4
        for <linux-kernel@vger.kernel.org>; Tue, 11 Dec 2018 12:59:37 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=arista.com; s=googlenew;
        h=subject:to:cc:references:from:message-id:date:user-agent
         :mime-version:in-reply-to:content-language:content-transfer-encoding;
        bh=H/uzZxNOJ/zQ7NPBnilu6RMhiHAcIHCvhkJLWedK6NA=;
        b=jy7oRFljun1PKNnHrDsEaqX1ilZJFpEZV8+Fni1dh/vBPwCXHX6DF9326JfFXVDSNH
         Q8GQXKZ8A7940Nz0l9Jn/DyLYr1jB36lQLL7B5Qf2damiDOzDhI7k7TQQf2PUi5hbH1c
         PwBZD0UjB44F/so/xORD/2Kbt9nV4yxpV1oCCb06aj8ruc5M/aDnNjogQHdWQADTjOb8
         2cdvkDTCAlUD1zMbgK39dYK0cmNZiHZxprp6eoVsm/sqPiBSvySwTfbvS5WeTBMsxu87
         VkHUZWjuQXBqpFdMMZgSc5Vf6pbHp7orLnN/sLJ4C224o8eA5ilaboqs2Naa4YPFQpbD
         VY6g==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:subject:to:cc:references:from:message-id:date
         :user-agent:mime-version:in-reply-to:content-language
         :content-transfer-encoding;
        bh=H/uzZxNOJ/zQ7NPBnilu6RMhiHAcIHCvhkJLWedK6NA=;
        b=abbKAeIVyUcjeExEUjC0JQoTOrwBnXgsai+yETNGG3xZ5XOcS4TjWLbKSiw5dooiCy
         YP7JueLxJ/XFtbZmE4e4am+JYQ6jAHh+gffI0NrQ4Rht7sd6EmuaQYYyRMWGEkZEX7rn
         en/+mvuQrSBjzgd2lW0sT4TecU+SwZSp7Jtlk4qKyDQq85KSczcsiDUulhW9nVZqqWsx
         Esyypa3JX+vKk4ztcJx17GYLMgHaKqNU6dBLRriG3Wtutn/6yA55jKcOb4R3ss+0eazt
         2zBv8vAww9PTaGNLpmaFGCRoxafX+JueGa9aCoxVMnh7YJvLnQsvjeSUALgkFVijFgR1
         p5ww==
X-Gm-Message-State: AA+aEWa+E9vszZqwsUtRL5BRYVMzTSd60zGl8oGnAU62h5pu5WulUy2g
        JGXJUksI0jdB7NdQXmYNjrjs9Q==
X-Google-Smtp-Source: AFSGD/W27SfVTy8upnKoOQ8IzSjAUrQazR18Mv3WtZXYslxQPFbHVJnb76MvNxX1FmaUK4r0j1oQ2w==
X-Received: by 2002:a17:906:7751:: with SMTP id o17-v6mr13461517ejn.15.1544561977142;
        Tue, 11 Dec 2018 12:59:37 -0800 (PST)
Received: from [10.83.36.153] ([217.173.96.166])
        by smtp.gmail.com with ESMTPSA id w10sm4350453eda.77.2018.12.11.12.59.35
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 11 Dec 2018 12:59:36 -0800 (PST)
Subject: Re: [LKP] [tty] c96cf923a9:
 WARNING:possible_circular_locking_dependency_detected
To: Jiri Slaby <jslaby@suse.cz>,
        kernel test robot <rong.a.chen@intel.com>
Cc: lkp@01.org, Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Mikulas Patocka <mpatocka@redhat.com>,
        LKML <linux-kernel@vger.kernel.org>,
        linux-serial@vger.kernel.org,
        Sergey Senozhatsky <sergey.senozhatsky@gmail.com>,
        Petr Mladek <pmladek@suse.com>,
        Steven Rostedt <rostedt@goodmis.org>
References: <20181211091154.GL23332@shao2-debian>
 <b8a5b151-9eaa-b098-f24f-b17c1886f456@suse.cz>
From: Dmitry Safonov <dima@arista.com>
Message-ID: <2780774e-b397-dcc2-6950-cccb527d5014@arista.com>
Date: Tue, 11 Dec 2018 20:59:35 +0000
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.3.3
MIME-Version: 1.0
In-Reply-To: <b8a5b151-9eaa-b098-f24f-b17c1886f456@suse.cz>
Content-Type: text/plain; charset=windows-1252
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi, everyone,

I'm looking into that.

Greg, please, keep tty patches set in linux-next, I'll address this
report before it goes into master.

This theoretical issue is not strictly related to the patches set, but
can be hit without patches.

On 12/11/18 1:49 PM, Jiri Slaby wrote:
> On 11. 12. 18, 10:11, kernel test robot wrote:
>> FYI, we noticed the following commit (built with gcc-7):
>>
>> commit: c96cf923a98d1b094df9f0cf97a83e118817e31b ("tty: Don't block on IO when ldisc change is pending")
>> https://git.kernel.org/cgit/linux/kernel/git/gregkh/tty.git tty-testing
> ...
>> [   87.209665] WARNING: possible circular locking dependency detected
>> [   87.210547] 4.20.0-rc4-00057-gc96cf92 #1 Tainted: G        W        
>> [   87.211449] ------------------------------------------------------
>> [   87.212405] getty/519 is trying to acquire lock:
>> [   87.213074] (____ptrval____) (&obj_hash[i].lock){-.-.}, at: debug_check_no_obj_freed+0xb4/0x302
>> [   87.214343] 
>> [   87.214343] but task is already holding lock:
>> [   87.215174] (____ptrval____) (&port_lock_key){-.-.}, at: uart_shutdown+0x3a3/0x4e2
> 
> This looks sensible -- normal use case.
> 
>> [   87.216260] which lock already depends on the new lock.
>> [   87.216260] 
>> [   87.217421] 
>> [   87.217421] the existing dependency chain (in reverse order) is:
> 
> This is during console init, so even if the report is not false
> positive, the deadlock is unlikely to happen. And only triggered with
> CONFIG_DEBUG_OBJECTS_FREE.
> 
> In any way, I don't see any connection between #2 and #0 below. The
> stack traces are completely different -- one from start_kernel, one from
> exit syscall.
> 
> I also wonder how could the commit above start causing this? Well, it
> might make it happen more likely due to more of EAGAINs.

Yes, as far as I can see right now, this is not related to tty changes,
but to non-clear locking policy between
DEBUG_OBJECTS_FREE hash bucket lock <-> uart's port->mutex.

As far as I remember WARN() prints can't be deferred and it makes sense
to have WARN() in debug objects.
I see probably fast and quite simple solution: to copy debug object's
state on stack and call debug_print_object() without bucket lock...
But not sure how straight-forward is this. I mean if speaking from
lib/debugobjects perspective.

I'll prepare a patch for that as it seems the easiest way (I haven't
looked long yet, though).

+Cc: Sergey, Petr, Steven - with their console_unlock()/printk() and
deferring expertise they probably have more brighter ideas.

>> [   87.218483] -> #2 (&port_lock_key){-.-.}:
>> [   87.219282]        lock_acquire+0x28c/0x2e7
>> [   87.219901]        _raw_spin_lock_irqsave+0x35/0x49
>> [   87.220601]        serial8250_console_write+0x110/0x5b5
>> [   87.221354]        univ8250_console_write+0x5f/0x64
>> [   87.222056]        console_unlock+0x61c/0x7cf
>> [   87.222680]        register_console+0x63a/0x7b0
>> [   87.223345]        univ8250_console_init+0x1e/0x28
>> [   87.224041]        console_init+0x3be/0x57e
>> [   87.224641]        start_kernel+0x441/0x6c6
>> [   87.225246]        x86_64_start_reservations+0x29/0x2b
>> [   87.225979]        x86_64_start_kernel+0x6f/0x72
>> [   87.226637]        secondary_startup_64+0xa4/0xb0
>> [   87.227314] 
>> [   87.227314] -> #1 (console_owner){-...}:
>> [   87.228127]        lock_acquire+0x28c/0x2e7
>> [   87.228728]        console_unlock+0x424/0x7cf
>> [   87.229363]        vprintk_emit+0x22d/0x252
>> [   87.229969]        vprintk_default+0x18/0x1a
>> [   87.230576]        vprintk_func+0xa9/0xab
>> [   87.231156]        printk+0x97/0xbe
>> [   87.231659]        __debug_object_init+0x8db/0x92d
>> [   87.232349]        debug_object_init+0x14/0x17
>> [   87.232987]        __init_work+0x1b/0x1d
>> [   87.233551]        rhashtable_init+0x53b/0x602
>> [   87.234192]        rhltable_init+0xe/0x41
>> [   87.234772]        test_insert_dup+0xac/0xa94
>> [   87.235467]        test_rht_init+0x387/0x79c
>> [   87.236222]        do_one_initcall+0x23c/0x4af
>> [   87.236869]        kernel_init_freeable+0x5ec/0x69f
>> [   87.237855]        kernel_init+0xc/0x100
>> [   87.238470]        ret_from_fork+0x3a/0x50
>> [   87.239071] 
>> [   87.239071] -> #0 (&obj_hash[i].lock){-.-.}:
>> [   87.239904]        __lock_acquire+0x1f78/0x22d1
>> [   87.240556]        lock_acquire+0x28c/0x2e7
>> [   87.241173]        _raw_spin_lock_irqsave+0x35/0x49
>> [   87.241882]        debug_check_no_obj_freed+0xb4/0x302
>> [   87.242620]        free_unref_page_prepare+0x33a/0x483
>> [   87.243368]        free_unref_page+0x48/0x80
>> [   87.243991]        __free_pages+0x2e/0x40
>> [   87.244611]        free_pages+0x54/0x5a
>> [   87.245188]        uart_shutdown+0x3df/0x4e2
>> [   87.245817]        uart_hangup+0x123/0x280
>> [   87.246406]        __tty_hangup+0x4da/0x50f
>> [   87.247025]        tty_vhangup_session+0xe/0x10
>> [   87.247680]        disassociate_ctty+0xeb/0x5c5
>> [   87.248349]        do_exit+0xc97/0x1daf
>> [   87.248920]        __x64_sys_exit_group+0x0/0x3e
>> [   87.249587]        __wake_up_parent+0x0/0x52
>> [   87.250211]        do_syscall_64+0x5e8/0x881
>> [   87.250839]        entry_SYSCALL_64_after_hwframe+0x49/0xbe
>> [   87.251637] 
>> [   87.251637] other info that might help us debug this:
>> [   87.251637] 
>> [   87.252790] Chain exists of:
>> [   87.252790]   &obj_hash[i].lock --> console_owner --> &port_lock_key
>> [   87.252790] 
>> [   87.254307]  Possible unsafe locking scenario:
>> [   87.254307] 
>> [   87.255156]        CPU0                    CPU1
>> [   87.255813]        ----                    ----
>> [   87.256460]   lock(&port_lock_key);
>> [   87.256973]                                lock(console_owner);
>> [   87.257829]                                lock(&port_lock_key);
>> [   87.258680]   lock(&obj_hash[i].lock);
>> [   87.259223] 
>> [   87.259223]  *** DEADLOCK ***
>> [   87.259223] 
>> [   87.260067] 3 locks held by getty/519:
>> [   87.260605]  #0: (____ptrval____) (&tty->legacy_mutex){+.+.}, at: tty_lock+0x5c/0x68
>> [   87.261717]  #1: (____ptrval____) (&port->mutex){+.+.}, at: uart_hangup+0x4b/0x280
>> [   87.262795]  #2: (____ptrval____) (&port_lock_key){-.-.}, at: uart_shutdown+0x3a3/0x4e2
>> [   87.263974] 
>> [   87.263974] stack backtrace:
>> [   87.264631] CPU: 0 PID: 519 Comm: getty Tainted: G        W         4.20.0-rc4-00057-gc96cf92 #1
>> [   87.265893] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1 04/01/2014
>> [   87.267082] Call Trace:
>> [   87.267451]  dump_stack+0x86/0xc3
>> [   87.267942]  print_circular_bug+0x4a8/0x4b9
>> [   87.268635]  check_prevs_add+0x466/0x109c
>> [   87.269230]  ? quarantine_put+0x114/0x135
>> [   87.269821]  ? quarantine_put+0x114/0x135
>> [   87.270399]  ? serial_do_unlink+0x266/0x272
>> [   87.271009]  ? print_circular_bug_header+0x122/0x122
>> [   87.271722]  ? __kasan_slab_free+0x1e8/0x1fd
>> [   87.272341]  ? __kasan_slab_free+0x153/0x1fd

Thanks,
          Dmitry
