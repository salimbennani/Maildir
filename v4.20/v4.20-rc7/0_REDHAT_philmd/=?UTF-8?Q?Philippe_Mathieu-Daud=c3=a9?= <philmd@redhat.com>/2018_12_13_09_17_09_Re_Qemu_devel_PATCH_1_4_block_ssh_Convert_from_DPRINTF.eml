Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 21:21:37 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 626315807A0
	for <like.xu@linux.intel.com>; Thu, 13 Dec 2018 01:17:45 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga006-1.jf.intel.com with ESMTP; 13 Dec 2018 01:17:45 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3Ar/QGcBIKltsb88/SEdmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgXKvn8rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZQMhRWSxPDICy?=
 =?us-ascii?q?YYQBAOUOP/pXoYbgqVsWrxawBwahCP7hxzNUmHD2xrY30/giHAzcwAAsA9wDvX?=
 =?us-ascii?q?bSod7oNKkSS+e1zKzQwDvZb/NW2DP96InQchA5v/6DRbV+ftDNyUkvFgPKkEiQ?=
 =?us-ascii?q?pZXrMTyPy+QCrnKc5PdnWOK3i24nqgVxoj2yyco3kInGmJ8aylDe+iVl2oo6Od?=
 =?us-ascii?q?q4SEtibNOiDZBeuSaaN45sTcMjRWFloCI6yrwdtp6gZygKyIorywTYa/ydfIiF?=
 =?us-ascii?q?5A/oWuWJITpgmn5pZLGyiwyv/US9yeDwTNe43VhKoyZfj9XBtGgB2h/Q58SdVP?=
 =?us-ascii?q?dx412t1SiT2wzN8O1IPEI5mbTdJpU82LA/jIATvl7GHiLumEX5kquWdkI89+is?=
 =?us-ascii?q?6uTneanmpoSGO497jAH+L74imsulAeQ3KgQOXm6b9vqg1LD740H1XLZHgucrnq?=
 =?us-ascii?q?XEs53WP9oXq6C5DgNPz4ou6Q6zDzK839QZmXkHIkhFeBWCj4XxIlHBPvX4Deqm?=
 =?us-ascii?q?j1uxjjhr2e7JPrn4DprWKXjDjbHhcqpj5E5HzwYzydFf55FKBb0bL/PzR1f8tN?=
 =?us-ascii?q?jZDh8/Lgy1zPzrCNR71oMCR22PBrWVP7/VsV+N/e8vJe6MZIkauDb7Nvgp/fnu?=
 =?us-ascii?q?jWU2mVMFZ6mmwYMXaGykHvRhO0iZZXvsgtQfHmsQsQs+UffniFmDUT5VenazUL?=
 =?us-ascii?q?gw5jA9CIK6E4jDQpqhj6CG3Ce+TdVrYHtbAAWMDWvwbNfDHPMNcz6JZMlmlDMC?=
 =?us-ascii?q?SP6mUYBm0BivsArzzf1gNvbV/SsD8ovu0cUw6+DNmBVhyDpvEs7I1miMS31zzH?=
 =?us-ascii?q?oFQiJz0K1hrEg40FqazKVjn9ReEtpc4e4PVR01YoXBxe53AMynRwTaY92SQ0yn?=
 =?us-ascii?q?SNj1PTZkatss2dIIfw5DGsujgwqLiy60AqEUmqajHpE48qvAmXP2IpA5g2/L0b?=
 =?us-ascii?q?Rkg1Q4T89nM2qgiahisQ/JCN3niUKcwp6qdKAdxDbAw0KK0WqPsVwdfAdtXSSN?=
 =?us-ascii?q?CWgfZ0/Tofzj60/CRqPoArMiZFgSgfWeI7dHP4W6xW5NQ+3ubZGHOzq8?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BqAAA1IxJcmBHrdtBjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBZYExgTkDgRMTg3yIeI0TLZlHEgEBGAsJh0MiOBIBAwEBAQEBAQI?=
 =?us-ascii?q?BEwEBAQEBCAsLBhsOIwyCNgUCAxoBBoJcAQIDAQIgBAsBEwopAwMBAgYBAQoOC?=
 =?us-ascii?q?gICIgQCAgMBMAEFARwGAQwGAgEBAYMcAYFzDQEDAQqbDDyLDXwziSiBDRJ5izE?=
 =?us-ascii?q?XgX+BESeCa4MeA4RkglcCiT+Bc5VdCZFTBhiJbBCHTokuj3QCBAIEBQIFDyGBP?=
 =?us-ascii?q?IF3MyIbFYMnCYIbAxcSiEyFQHEBgQaKWoF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0BqAAA1IxJcmBHrdtBjGgEBAQEBAgEBAQEHAgEBAQGBZYE?=
 =?us-ascii?q?xgTkDgRMTg3yIeI0TLZlHEgEBGAsJh0MiOBIBAwEBAQEBAQIBEwEBAQEBCAsLB?=
 =?us-ascii?q?hsOIwyCNgUCAxoBBoJcAQIDAQIgBAsBEwopAwMBAgYBAQoOCgICIgQCAgMBMAE?=
 =?us-ascii?q?FARwGAQwGAgEBAYMcAYFzDQEDAQqbDDyLDXwziSiBDRJ5izEXgX+BESeCa4MeA?=
 =?us-ascii?q?4RkglcCiT+Bc5VdCZFTBhiJbBCHTokuj3QCBAIEBQIFDyGBPIF3MyIbFYMnCYI?=
 =?us-ascii?q?bAxcSiEyFQHEBgQaKWoF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,348,1539673200"; 
   d="scan'208";a="57301575"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 13 Dec 2018 01:17:41 -0800
Received: from localhost ([::1]:51283 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gXN7l-0001ln-3M
	for like.xu@linux.intel.com; Thu, 13 Dec 2018 04:17:41 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:51673)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <philmd@redhat.com>) id 1gXN7N-0001eV-RA
	for qemu-devel@nongnu.org; Thu, 13 Dec 2018 04:17:19 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <philmd@redhat.com>) id 1gXN7J-0006wp-VT
	for qemu-devel@nongnu.org; Thu, 13 Dec 2018 04:17:17 -0500
Received: from mail-wm1-f41.google.com ([209.85.128.41]:56109)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <philmd@redhat.com>) id 1gXN7J-0006vB-Hq
	for qemu-devel@nongnu.org; Thu, 13 Dec 2018 04:17:13 -0500
Received: by mail-wm1-f41.google.com with SMTP id y139so1507451wmc.5
	for <qemu-devel@nongnu.org>; Thu, 13 Dec 2018 01:17:12 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:subject:to:cc:references:from:openpgp:message-id
	:date:user-agent:mime-version:in-reply-to:content-language
	:content-transfer-encoding;
	bh=cIUokZqyV+zRQVcQmDT8Rc63agmg/PuYeaO+9IUMnkU=;
	b=sUEN8aAUtRqDA7392LmKAGNml3DoWiERV6SbKx1r10MIF18DcS5hMdVZKQ0Ti3hRrC
	fndoKWupH0/+sqkSoSIRJfaDccaaZztViNttuiq7O4IVcieMG6I7gvHi5ybBjXdOCwKu
	DZ2x9DeiJe3xNYX9yk3O5alW3j/QCpU5YE0g6FKV6kdr6xyD84cqH5+RTpbjqm7YoMab
	eIyX2jUNHOiJv58J9fv043oubATnIrX94uCKcMVCBniatAB2lxtYsXbVk9mlCcs0zVuG
	/h+bjFkXpz2m5Upk25nHKsgSRK3/yK8KN6HxkCkRapHQ67c6vTMTCwWyNtGxSqTh/5im
	RfeQ==
X-Gm-Message-State: AA+aEWYU+iLjWhpYD4g6Nf1Z1MCUlMyxGVtemt/rbBqlFZTi0E/sWJR9
	Y0QlC95HkkvMT7TS/F8jkmUf5A==
X-Google-Smtp-Source: AFSGD/VnJG7Jk/nexYDB8SMJBX9G3MVpLJUEFV1rSn5KlUUj+jdNgA/qh9dNEGkDIzgqqeT3RK+kVw==
X-Received: by 2002:a1c:de57:: with SMTP id v84mr9147970wmg.55.1544692631801; 
	Thu, 13 Dec 2018 01:17:11 -0800 (PST)
Received: from [192.168.1.34] (172.red-88-21-202.staticip.rima-tde.net.
	[88.21.202.172]) by smtp.gmail.com with ESMTPSA id
	f66sm1292209wmd.28.2018.12.13.01.17.10
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Thu, 13 Dec 2018 01:17:11 -0800 (PST)
To: Laurent Vivier <lvivier@redhat.com>, qemu-devel@nongnu.org
References: <20181212194009.2951-1-lvivier@redhat.com>
	<20181212194009.2951-2-lvivier@redhat.com>
From: =?UTF-8?Q?Philippe_Mathieu-Daud=c3=a9?= <philmd@redhat.com>
Openpgp: id=89C1E78F601EE86C867495CBA2A3FD6EDEADC0DE;
	url=http://pgp.mit.edu/pks/lookup?op=get&search=0xA2A3FD6EDEADC0DE
Message-ID: <0437051b-f816-6afb-e0d1-8f67a84dd59c@redhat.com>
Date: Thu, 13 Dec 2018 10:17:09 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.1
MIME-Version: 1.0
In-Reply-To: <20181212194009.2951-2-lvivier@redhat.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 8bit
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.85.128.41
Subject: Re: [Qemu-devel] [PATCH 1/4] block/ssh: Convert from DPRINTF()
 macro to trace events
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Kevin Wolf <kwolf@redhat.com>, qemu-block@nongnu.org,
	qemu-trivial@nongnu.org, "Richard W.M. Jones" <rjones@redhat.com>,
	=?UTF-8?Q?Philippe_Mathieu-Daud=c3=a9?= <f4bug@amsat.org>,
	Liu Yuan <namei.unix@gmail.com>, Max Reitz <mreitz@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On 12/12/18 8:40 PM, Laurent Vivier wrote:
> Signed-off-by: Laurent Vivier <lvivier@redhat.com>
> ---
>  block/ssh.c        | 46 +++++++++++++++++-----------------------------
>  block/trace-events | 17 +++++++++++++++++
>  2 files changed, 34 insertions(+), 29 deletions(-)
> 
> diff --git a/block/ssh.c b/block/ssh.c
> index 7fbc27abdf..bbc513e095 100644
> --- a/block/ssh.c
> +++ b/block/ssh.c
> @@ -41,27 +41,17 @@
>  #include "qapi/qmp/qstring.h"
>  #include "qapi/qobject-input-visitor.h"
>  #include "qapi/qobject-output-visitor.h"
> +#include "trace.h"
>  
> -/* DEBUG_SSH=1 enables the DPRINTF (debugging printf) statements in
> - * this block driver code.
> - *
> +/*
>   * TRACE_LIBSSH2=<bitmask> enables tracing in libssh2 itself.  Note
>   * that this requires that libssh2 was specially compiled with the
>   * `./configure --enable-debug' option, so most likely you will have
>   * to compile it yourself.  The meaning of <bitmask> is described
>   * here: http://www.libssh2.org/libssh2_trace.html
>   */
> -#define DEBUG_SSH     0
>  #define TRACE_LIBSSH2 0 /* or try: LIBSSH2_TRACE_SFTP */
>  
> -#define DPRINTF(fmt, ...)                           \
> -    do {                                            \
> -        if (DEBUG_SSH) {                            \
> -            fprintf(stderr, "ssh: %-15s " fmt "\n", \
> -                    __func__, ##__VA_ARGS__);       \
> -        }                                           \
> -    } while (0)
> -
>  typedef struct BDRVSSHState {
>      /* Coroutine. */
>      CoMutex lock;
> @@ -336,7 +326,7 @@ static int check_host_key_knownhosts(BDRVSSHState *s,
>      switch (r) {
>      case LIBSSH2_KNOWNHOST_CHECK_MATCH:
>          /* OK */
> -        DPRINTF("host key OK: %s", found->key);
> +        trace_ssh_check_host_key_knownhosts(found->key);
>          break;
>      case LIBSSH2_KNOWNHOST_CHECK_MISMATCH:
>          ret = -EINVAL;
> @@ -721,8 +711,7 @@ static int connect_to_ssh(BDRVSSHState *s, BlockdevOptionsSsh *opts,
>      }
>  
>      /* Open the remote file. */
> -    DPRINTF("opening file %s flags=0x%x creat_mode=0%o",
> -            opts->path, ssh_flags, creat_mode);
> +    trace_ssh_connect_to_ssh(opts->path, ssh_flags, creat_mode);
>      s->sftp_handle = libssh2_sftp_open(s->sftp, opts->path, ssh_flags,
>                                         creat_mode);
>      if (!s->sftp_handle) {
> @@ -890,7 +879,7 @@ static int coroutine_fn ssh_co_create_opts(const char *filename, QemuOpts *opts,
>      /* Get desired file size. */
>      ssh_opts->size = ROUND_UP(qemu_opt_get_size_del(opts, BLOCK_OPT_SIZE, 0),
>                                BDRV_SECTOR_SIZE);
> -    DPRINTF("total_size=%" PRIi64, ssh_opts->size);
> +    trace_ssh_co_create_opts(ssh_opts->size);
>  
>      uri_options = qdict_new();
>      ret = parse_uri(filename, uri_options, errp);
> @@ -946,7 +935,7 @@ static void restart_coroutine(void *opaque)
>      BDRVSSHState *s = bs->opaque;
>      AioContext *ctx = bdrv_get_aio_context(bs);
>  
> -    DPRINTF("co=%p", restart->co);
> +    trace_ssh_restart_coroutine(restart->co);
>      aio_set_fd_handler(ctx, s->sock, false, NULL, NULL, NULL, NULL);
>  
>      aio_co_wake(restart->co);
> @@ -974,13 +963,12 @@ static coroutine_fn void co_yield(BDRVSSHState *s, BlockDriverState *bs)
>          wr_handler = restart_coroutine;
>      }
>  
> -    DPRINTF("s->sock=%d rd_handler=%p wr_handler=%p", s->sock,
> -            rd_handler, wr_handler);
> +    trace_ssh_co_yield(s->sock, rd_handler, wr_handler);
>  
>      aio_set_fd_handler(bdrv_get_aio_context(bs), s->sock,
>                         false, rd_handler, wr_handler, NULL, &restart);
>      qemu_coroutine_yield();
> -    DPRINTF("s->sock=%d - back", s->sock);
> +    trace_ssh_co_yield_back(s->sock);
>  }
>  
>  /* SFTP has a function `libssh2_sftp_seek64' which seeks to a position
> @@ -1003,7 +991,7 @@ static void ssh_seek(BDRVSSHState *s, int64_t offset, int flags)
>      bool force = (flags & SSH_SEEK_FORCE) != 0;
>  
>      if (force || op_read != s->offset_op_read || offset != s->offset) {
> -        DPRINTF("seeking to offset=%" PRIi64, offset);
> +        trace_ssh_seek(offset);
>          libssh2_sftp_seek64(s->sftp_handle, offset);
>          s->offset = offset;
>          s->offset_op_read = op_read;
> @@ -1019,7 +1007,7 @@ static coroutine_fn int ssh_read(BDRVSSHState *s, BlockDriverState *bs,
>      char *buf, *end_of_vec;
>      struct iovec *i;
>  
> -    DPRINTF("offset=%" PRIi64 " size=%zu", offset, size);
> +    trace_ssh_read(offset, size);
>  
>      ssh_seek(s, offset, SSH_SEEK_READ);
>  
> @@ -1038,9 +1026,9 @@ static coroutine_fn int ssh_read(BDRVSSHState *s, BlockDriverState *bs,
>       */
>      for (got = 0; got < size; ) {
>      again:
> -        DPRINTF("sftp_read buf=%p size=%zu", buf, end_of_vec - buf);
> +        trace_ssh_read_buf(buf, end_of_vec - buf);
>          r = libssh2_sftp_read(s->sftp_handle, buf, end_of_vec - buf);
> -        DPRINTF("sftp_read returned %zd", r);
> +        trace_ssh_read_return(r);
>  
>          if (r == LIBSSH2_ERROR_EAGAIN || r == LIBSSH2_ERROR_TIMEOUT) {
>              co_yield(s, bs);
> @@ -1094,7 +1082,7 @@ static int ssh_write(BDRVSSHState *s, BlockDriverState *bs,
>      char *buf, *end_of_vec;
>      struct iovec *i;
>  
> -    DPRINTF("offset=%" PRIi64 " size=%zu", offset, size);
> +    trace_ssh_write(offset, size);
>  
>      ssh_seek(s, offset, SSH_SEEK_WRITE);
>  
> @@ -1108,9 +1096,9 @@ static int ssh_write(BDRVSSHState *s, BlockDriverState *bs,
>  
>      for (written = 0; written < size; ) {
>      again:
> -        DPRINTF("sftp_write buf=%p size=%zu", buf, end_of_vec - buf);
> +        trace_ssh_write_buf(buf, end_of_vec - buf);
>          r = libssh2_sftp_write(s->sftp_handle, buf, end_of_vec - buf);
> -        DPRINTF("sftp_write returned %zd", r);
> +        trace_ssh_write_return(r);
>  
>          if (r == LIBSSH2_ERROR_EAGAIN || r == LIBSSH2_ERROR_TIMEOUT) {
>              co_yield(s, bs);
> @@ -1187,7 +1175,7 @@ static coroutine_fn int ssh_flush(BDRVSSHState *s, BlockDriverState *bs)
>  {
>      int r;
>  
> -    DPRINTF("fsync");
> +    trace_ssh_flush();
>   again:
>      r = libssh2_sftp_fsync(s->sftp_handle);
>      if (r == LIBSSH2_ERROR_EAGAIN || r == LIBSSH2_ERROR_TIMEOUT) {
> @@ -1238,7 +1226,7 @@ static int64_t ssh_getlength(BlockDriverState *bs)
>  
>      /* Note we cannot make a libssh2 call here. */
>      length = (int64_t) s->attrs.filesize;
> -    DPRINTF("length=%" PRIi64, length);
> +    trace_ssh_getlength(length);
>  
>      return length;
>  }
> diff --git a/block/trace-events b/block/trace-events
> index 3e8c47bb24..b13b1e9706 100644
> --- a/block/trace-events
> +++ b/block/trace-events
> @@ -156,3 +156,20 @@ nvme_cmd_map_qiov_iov(void *s, int i, void *page, int pages) "s %p iov[%d] %p pa
>  
>  # block/iscsi.c
>  iscsi_xcopy(void *src_lun, uint64_t src_off, void *dst_lun, uint64_t dst_off, uint64_t bytes, int ret) "src_lun %p offset %"PRIu64" dst_lun %p offset %"PRIu64" bytes %"PRIu64" ret %d"
> +
> +# block/ssh.c
> +ssh_restart_coroutine(void *co) "co=%p"
> +ssh_flush(void) "fsync"
> +ssh_check_host_key_knownhosts(const char *key) "host key OK: %s"
> +ssh_connect_to_ssh(char *path, int flags, int mode) "opening file %s flags=0x%x creat_mode=0%o"
> +ssh_co_yield(int sock, void *rd_handler, void *wr_handler) "s->sock=%d rd_handler=%p wr_handler=%p"
> +ssh_co_yield_back(int sock) "s->sock=%d - back"
> +ssh_getlength(int64_t length) "length=%" PRIi64
> +ssh_co_create_opts(uint64_t size) "total_size=%" PRIu64
> +ssh_read(int64_t offset, size_t size) "offset=%" PRIi64 " size=%zu"
> +ssh_read_buf(void *buf, size_t size) "sftp_read buf=%p size=%zu"
> +ssh_read_return(size_t ret) "sftp_read returned %zd"
> +ssh_write(int64_t offset, size_t size) "offset=%" PRIi64 " size=%zu"
> +ssh_write_buf(void *buf, size_t size) "sftp_write buf=%p size=%zu"
> +ssh_write_return(size_t ret) "sftp_write returned %zd"

%zu?

Reviewed-by: Philippe Mathieu-Daudé <philmd@redhat.com>

> +ssh_seek(uint64_t offset) "seeking to offset=%" PRIi64
> 

