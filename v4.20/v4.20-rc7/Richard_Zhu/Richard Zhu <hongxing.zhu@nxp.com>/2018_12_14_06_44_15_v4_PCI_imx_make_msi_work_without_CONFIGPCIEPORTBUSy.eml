Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  14 Dec 2018 20:25:02 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 8A17B58079D;
	Thu, 13 Dec 2018 22:44:23 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 13 Dec 2018 22:44:23 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3APEd/GBK5GcNQp91wztmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULP/8rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0yRD+s7bpkSAXwhS?=
 =?us-ascii?q?kHKTA37X3XhMJzgqxcoRKuuxNxzIHPYIGNNvdzZb/dfcoASGZdRMtdSzFND4Wh?=
 =?us-ascii?q?ZIUPFeoBOuNYopHhqVsPsRS+BROjBPnyxTRVhXD23bA62PkmHAHG2wwgGd0OsX?=
 =?us-ascii?q?vVrNXzO6ceS+G0zKnVzTjYafNX1i/95JLUfRAmpPGBRLR9etfSx0k3Dw7JkEmc?=
 =?us-ascii?q?pIj/Mz+I2OkBrXKX4/djWO6zkWIqqgN8riCyyssxjoTFnIwYxk3e+Slkwos4Ks?=
 =?us-ascii?q?e0RU96bNK8HptfqSKXO5dzT84nR2xltyg6x74DtJO7cigF1YkoyhvRa/GJcIWF?=
 =?us-ascii?q?7RfuWeWLLjd2h39ofq+0iQyo/ki60OL8U9G50FZUoSpBldnBrm4N1xPN5cidUP?=
 =?us-ascii?q?d9/Vmu2SyJ1w/N7uFIO0c0lbDUK5I5w74wkIQcsVjbEyPohEn7iLWaelgq9+S2?=
 =?us-ascii?q?8ejrf7brqoOGO4J1iAzyKqEulda+AeQ8PAgORW+b+eGk2b3n/E35RqhKj/Ivnq?=
 =?us-ascii?q?narp/aP8IbqbC9AwNM1YYi5RC/ACm80NkDg3kHI0xKeAidg4jqJV7OOvb4Aum7?=
 =?us-ascii?q?g1i2lzdr3f/GMqX7AprRNnjDjKvhfbFl5k5YyQozzs5Q64hbC7EcO//zXk7xtN?=
 =?us-ascii?q?rFDh42KQC0wuDnCMlj2YMaQ26AHqiZMKbKu1+S+u0vO/WMZJMSuDvlK/gq/f/u?=
 =?us-ascii?q?jWMjll8aZ6Wp3YYXZ2q+HvRpOEiZZXvsgtEcEWYFpAY+TerqiEGcXj5XfXq9Q6?=
 =?us-ascii?q?U85jQjAoK8EYjDXpytgKCG3CqjHJ1WYX5JBkqPEXfvcYWEXfAMZTmWIs9glDwE?=
 =?us-ascii?q?SLegR5Ug1RGoqA/11b5nIvDI9S0fsJLpzMJ16PHLlREu6Tx0CNyQ3HuWT2F0mW?=
 =?us-ascii?q?MIRCU63Lplrkx/0VqD1al4g/pFFd1c/f9JUwE6NYLCwOx+Edz9RgXBftKRQla8?=
 =?us-ascii?q?XtqmGS0xTs42w9IWYEZyAdOiggrH3yqrGbAVkbOLCYcw8qLd2XjxOsl8x2zH1K?=
 =?us-ascii?q?knk1kpXM9POXe6ia548gjZH5TJnFmBl6a2aaQc2zbA+3qZwmqQok5USg5wXr/D?=
 =?us-ascii?q?XXAEeETWq9P15kfBT7+rDbQqKQ9Byc+EKqtXZdzll1RGRPH/ONvAZ2K9gXu/BR?=
 =?us-ascii?q?GNxrmUdorlZ30d3DnBCEgDiw0c4GyJNRYgCSu7o2LRFjpuFUnxbEPq6uR+rHK7?=
 =?us-ascii?q?TkkpzwCFdUFh1ry1+gILivyYUf8cwrUEuCI5oTVuAFm9x87WC8aHpwd5YKVcYN?=
 =?us-ascii?q?Y94FBb1WLZtw1xJICgI7plhl4EdwR3vkXu1xpsB4VEkMgqqm4qzQVoJaKZ1lNB?=
 =?us-ascii?q?ay2X3ZTqNrLLLWny+Qila7TK1VHGzNaW5qAP5ewipFXnog6oGVQt8nV939ZOzn?=
 =?us-ascii?q?uT+4/FDAwRUZL2TEY67Bx6p7DcYikg6ILYz3xsMa+osjDc39IlHvcqyhGlf91H?=
 =?us-ascii?q?KqOLCBfyE9EGB8ipMOErm0WpYggYM+xI9a80P9mpd/2J2KOwOOZgnTSmjXlI4Y?=
 =?us-ascii?q?xn00KM8TZ8RfDM35of3/6Y2Q6HXS/mjFi9qsD3hZxEZTYKE2qlyCjrGJReZrdv?=
 =?us-ascii?q?coYME2uuJdO4xs9/h5L0R3FX7lqjCE4Y18+zfhqSaUfw3QlR1UQRvHymljG0zz?=
 =?us-ascii?q?1ykzE1sKWf2DbCzPjldBoCImRLXnVtjU/wIYioiNAXREipbwkzmBql/0r63LVb?=
 =?us-ascii?q?pKJkImnXQEdIeTX2Lm54XquxsLqCf9BA6JcyvSpLV+S8ZEiQSqThrBsCzyPjA2?=
 =?us-ascii?q?xeySg5dz6woJX5nB96iGWHIHZotnXZesJwxRbZ5NPCQ/5cxT4GRCh+iTnKCVmw?=
 =?us-ascii?q?Jdip/dOIl5jdtuCyTX6uVppWcSPz14OPqDO75XF2AR24h/2ymsfoEQ8g3S/51t?=
 =?us-ascii?q?lqUz7FrBL9YontyqS7PvhrfkhuBF/g9cV6HptynZc3hJEVwXIanIma/WIbkWfv?=
 =?us-ascii?q?NtVWwaH+Y2AMRTIRw97V/RLq2EtsLn+Sw4L5V3OdwtZuZtWgY2MW3D494N5OCK?=
 =?us-ascii?q?uO8LNEmi51qEKirQ3Nefh9gisdyfw25X4fguEJuxAiwj+TA78MBklYITLjlw6T?=
 =?us-ascii?q?4N+gtqVXa32icbyx1Ep4gNCgA6uOogBaWHblZJgiGTV84dl4MFLJyHfz8J3reM?=
 =?us-ascii?q?HMbdIPsR2ZiwvAj+9QKJ4rl/sFnyxnOX/mvX0+yu42lhhu3ZC8vIiaJGRh5qO5?=
 =?us-ascii?q?AhhENjLrY8Mf4C3ijaFbnsyOxYCgAo1hGikXXJvvVf+nCygdtfPjNwaTCjE8rm?=
 =?us-ascii?q?qbFKHbHQ+e7kdmsn3OH4qqN3GROHkW09FiSAOBK0xYhQAeRC86kYIhFgC22Mzh?=
 =?us-ascii?q?d1905jIL6V79tBRM0fhkNwXlXmfcuQeoaSo0SJ6FIxpN9QxC40bVMcqD7uN8BS?=
 =?us-ascii?q?1Y/5uhrBCTJWyffQhHEWYJWkmcDVD5Irau/cXA8/SfBuemL/rOZqiOqfVDV/iS?=
 =?us-ascii?q?w5KjyJBm/zGKNsWAJXRiC/w72kxeXXF2AcjZmjMPSzAJmCLJdcKUuBC8+ihvpM?=
 =?us-ascii?q?Cl7PvrQB7v5ZeIC7ZKMdVg5RG2gaSAN+6Rnip5KixY1pQDxXDW0rgfwUUShjpq?=
 =?us-ascii?q?dzmsF7QAqCHMQLjRmq9REx4UdSdzONFU4KI72wlHIdTbhc/t1r5kkv41DE9IWk?=
 =?us-ascii?q?b8ms6yf8wFPWG8OEnDBEaKL7mGITzLw8fqYaKzU7FQjeNUtwGutjafCUPsIjOD?=
 =?us-ascii?q?lzzxXRC1Le5MlD2bPABZuIylbhZtCG3jQMj6ZRGhLNB3jSM5wbsvi3PONG4cNy?=
 =?us-ascii?q?V8ckxXor2R6yNYnutwG2hb4nV5KumEnj6T7/PEJZYOrftrHiN0mvpa4XsgzbtV?=
 =?us-ascii?q?6SBERPptlyrTrt5huVemkuaUxzpjURpOrCtLhY2RsUVjP6XZ6odPWXLe8B0R6m?=
 =?us-ascii?q?WQDkdCm9wwQNfvtqRfw9HUvK30LzhG/pTf+s5WT5zeKM+DP3MoKjLmHznbCAZD?=
 =?us-ascii?q?RjmuYyWXzUhaivyU5HrTtpk3sJHomYEPYrZBURo+EfZQQhBhG8YPJoVwGCslnK?=
 =?us-ascii?q?SSiM8T5FK3thyXT8Jf6NSPHPbUGunmIzaxlbRCaAYU27T+LJRVOoCxkxhmLEJm?=
 =?us-ascii?q?lY/KM1LdW99QvjdmaA4k5klApjw2BGQ111jodUW25X4JE/mqthEzgwp6J+8q8X?=
 =?us-ascii?q?2kt14xKkDHu20rlUgrn9L7qT+UeT/1aqy3WNcFJTDzsh0LM5j7Shx5JT+ygAQw?=
 =?us-ascii?q?NDDCSKJQibQmZ2B2oAnMod1EHvsKHv4MWwMZ2fzCP6Zg6l9bsCjynUI=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0D2AgCNUBNch0O0hNFjgheBMVCBXAQLJ?=
 =?us-ascii?q?wqHOQOQFkqCIZJEhH2BcRUBGBMBh0UiNAkNAQMBAQEBAQECARMBAQEIDQkIKSM?=
 =?us-ascii?q?MgjYigmwCJBkBATcBBQkCAQFOAy8nBAENBQWDHIIAAQECAptpAooHgWwzgnYBA?=
 =?us-ascii?q?QWHKgiHfYRBghaOf5ARkQQHApFbFpFLLIkEj3kCBAIEBQINAQEFgUaCDjMaI4M?=
 =?us-ascii?q?8hgiKU3KBBQEBIYslAYEeAQE?=
X-IPAS-Result: =?us-ascii?q?A0D2AgCNUBNch0O0hNFjgheBMVCBXAQLJwqHOQOQFkqCIZJ?=
 =?us-ascii?q?EhH2BcRUBGBMBh0UiNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYigmwCJBkBA?=
 =?us-ascii?q?TcBBQkCAQFOAy8nBAENBQWDHIIAAQECAptpAooHgWwzgnYBAQWHKgiHfYRBgha?=
 =?us-ascii?q?Of5ARkQQHApFbFpFLLIkEj3kCBAIEBQINAQEFgUaCDjMaI4M8hgiKU3KBBQEBI?=
 =?us-ascii?q?YslAYEeAQE?=
X-IronPort-AV: E=Sophos;i="5.56,351,1539673200"; 
   d="scan'208";a="56872549"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 13 Dec 2018 22:44:21 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727411AbeLNGoT (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 14 Dec 2018 01:44:19 -0500
Received: from mail-eopbgr60060.outbound.protection.outlook.com ([40.107.6.60]:36223
        "EHLO EUR04-DB3-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1727179AbeLNGoS (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 14 Dec 2018 01:44:18 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=nxp.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=OulzC/eyu6I3AFh6MTraStAHRz2PIDcUqxH16bJ394Q=;
 b=WA2hL9u5JNHlHYqJDNxLvDsXKHaV6JR0exgI60ez3gosQxSfnieOCsDa/cUShv4GGtommwHTjpW3VfUF0qa5vaRrbsss2KeiYBYaIqX7d2JMBKdwFlikVuqlVucI2/OjXz3lG8z8OAiCq4FV6x50QHaMqt4jQncQ+4jSPq1ZIFw=
Received: from AM0PR0402MB3570.eurprd04.prod.outlook.com (52.133.46.11) by
 AM0PR0402MB3491.eurprd04.prod.outlook.com (52.133.45.144) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.1425.19; Fri, 14 Dec 2018 06:44:15 +0000
Received: from AM0PR0402MB3570.eurprd04.prod.outlook.com
 ([fe80::94f8:5fdd:f384:8af8]) by AM0PR0402MB3570.eurprd04.prod.outlook.com
 ([fe80::94f8:5fdd:f384:8af8%8]) with mapi id 15.20.1425.021; Fri, 14 Dec 2018
 06:44:15 +0000
From: Richard Zhu <hongxing.zhu@nxp.com>
To: "bhelgaas@google.com" <bhelgaas@google.com>,
        "lorenzo.pieralisi@arm.com" <lorenzo.pieralisi@arm.com>,
        "l.stach@pengutronix.de" <l.stach@pengutronix.de>,
        "andrew.smirnov@gmail.com" <andrew.smirnov@gmail.com>
CC: "linux-pci@vger.kernel.org" <linux-pci@vger.kernel.org>,
        "linux-arm-kernel@lists.infradead.org" 
        <linux-arm-kernel@lists.infradead.org>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        Richard Zhu <hongxing.zhu@nxp.com>
Subject: [v4] PCI: imx: make msi work without CONFIG_PCIEPORTBUS=y
Thread-Topic: [v4] PCI: imx: make msi work without CONFIG_PCIEPORTBUS=y
Thread-Index: AQHUk3htX9ByhenO70SYEZSF8G6UHg==
Date: Fri, 14 Dec 2018 06:44:15 +0000
Message-ID: <1544768762-18124-1-git-send-email-hongxing.zhu@nxp.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-mailer: git-send-email 2.7.4
x-clientproxiedby: HK2PR04CA0063.apcprd04.prod.outlook.com
 (2603:1096:202:14::31) To AM0PR0402MB3570.eurprd04.prod.outlook.com
 (2603:10a6:208:1c::11)
authentication-results: spf=none (sender IP is )
 smtp.mailfrom=hongxing.zhu@nxp.com; 
x-ms-exchange-messagesentrepresentingtype: 1
x-originating-ip: [119.31.174.66]
x-ms-publictraffictype: Email
x-microsoft-exchange-diagnostics: 1;AM0PR0402MB3491;6:6wa5B2/6CqFyOBHykD3HlrTb/GainQQqrCWPygJ3kc239L6re61wr88+10h+Hgvo97lop+JSK1raGreu4otIGT5hxmucWQsUDLDiuvgx0W9XyWZTQIHJLv1km/MnhvX1EVfNq63EA07gg0A75HE61nmEx+tqXwkYgxBp0Zu4X7wnCkxHYvqhJhZgCCheyLvKroOL2LpwpgGOFY4iNMLd2CtFtLq5PxgZ2FE02Itv4YZL7ItrI0aoC9GgAcd6/GGy8eLeyF+8fikJZxM+C6pRmtCyc+EA+1edhY5AZhJ1AYDHtNTY3tGudHbKjtI3i8YyanBds5WFaEax7W3aiHVK6ikfxAnZcjVCkhLsAdk/StlgYUKm3A/RkFwS8dOC2v5sGzQ/rFEKnijNDtHS5OGXmpko4wAwX6AJEyZAhYQQKLWzYVOQTBRKnKKaHjCBLgKapuDUljB0PTCcFuNhhK8OAg==;5:bZyOkIFMmkwLniQ/hspzAamJ4e083hDjchGGPWprpigvqpfISwDKvnaLHxFBbqL0VUEGUn6dcMk6rfkfS6ti6EqxYPQR7nhDPX/h4yeWU9q0+1Gjj9Yp8MMPr53TQU223c8Ps4JEH0RWXnCu3ezfv7xbu8FqQsdyVFKu7ekUBmE=;7:qGekjGcUDgUE2CGLKyork7Ndl3Ba1VfW+Fkn7AYkV89i+PbmafY1FywvVWiWzNZwJFHPnQ7UIkJjTqZaC2QLJiOS9KZrbem2fQG1bMv6eox1EHwpDC1brTD9vMbBkHJDWIjt+HIxMHKSp4w5kfrGpw==
x-ms-office365-filtering-correlation-id: d523edcb-6112-4472-be68-08d6618f9059
x-ms-office365-filtering-ht: Tenant
x-microsoft-antispam: BCL:0;PCL:0;RULEID:(2390118)(7020095)(4652040)(8989299)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(5600074)(711020)(4618075)(2017052603328)(7153060)(7193020);SRVR:AM0PR0402MB3491;
x-ms-traffictypediagnostic: AM0PR0402MB3491:
x-microsoft-antispam-prvs: <AM0PR0402MB3491027BFAA55B64F09D924A8CA10@AM0PR0402MB3491.eurprd04.prod.outlook.com>
x-ms-exchange-senderadcheck: 1
x-exchange-antispam-report-cfa-test: BCL:0;PCL:0;RULEID:(8211001083)(3230021)(999002)(6040522)(2401047)(5005006)(8121501046)(93006095)(93001095)(3231475)(944501520)(52105112)(3002001)(10201501046)(6055026)(148016)(149066)(150057)(6041310)(20161123560045)(20161123564045)(20161123558120)(20161123562045)(201703131423095)(201702281528075)(20161123555045)(201703061421075)(201703061406153)(201708071742011)(7699051)(76991095);SRVR:AM0PR0402MB3491;BCL:0;PCL:0;RULEID:;SRVR:AM0PR0402MB3491;
x-forefront-prvs: 08864C38AC
x-forefront-antispam-report: SFV:NSPM;SFS:(10009020)(346002)(376002)(136003)(366004)(396003)(39860400002)(189003)(199004)(50226002)(3846002)(6116002)(486006)(2616005)(36756003)(2906002)(39060400002)(6512007)(476003)(2501003)(105586002)(8936002)(81156014)(8676002)(81166006)(53936002)(2201001)(106356001)(66066001)(478600001)(14454004)(25786009)(54906003)(110136005)(97736004)(316002)(52116002)(99286004)(186003)(6506007)(386003)(26005)(102836004)(86362001)(305945005)(7736002)(6436002)(6486002)(71200400001)(256004)(14444005)(575784001)(71190400001)(68736007)(4326008)(5660300001);DIR:OUT;SFP:1101;SCL:1;SRVR:AM0PR0402MB3491;H:AM0PR0402MB3570.eurprd04.prod.outlook.com;FPR:;SPF:None;LANG:en;PTR:InfoNoRecords;MX:1;A:1;
x-microsoft-antispam-message-info: xuj7g8gtewbpRRiHj36As+BY4nsAWWecV6T4xXzeZpSBM8im4PMgL3KBLzIilYDYkoEQ3CR7bYEJKG1dPsrMPYY744pUjsDBctIiMaF0OX1rYboDvJ5ReFaRQDjHnBvIXxFgu6mrG+/a2lX6zKnwdJlzMxkkQHly0aKC5dFS8ss8n88k7HCkwt20N9jgeBuQDqGOWZ5HNY752qvkTsWKgSj5ysPlJ1dhZTAzA7IiDlJjvLjB4T12RGlwLhvcXAapamwv6sPf6O0b4ROkd8ZCHUb7IcGNwIuq7rTioqInbD+b/LKezxiczLIexrShNV8r
spamdiagnosticoutput: 1:99
spamdiagnosticmetadata: NSPM
Content-Type: text/plain; charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
X-OriginatorOrg: nxp.com
X-MS-Exchange-CrossTenant-Network-Message-Id: d523edcb-6112-4472-be68-08d6618f9059
X-MS-Exchange-CrossTenant-originalarrivaltime: 14 Dec 2018 06:44:15.1613
 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 686ea1d3-bc2b-4c6f-a92c-d99c5c301635
X-MS-Exchange-Transport-CrossTenantHeadersStamped: AM0PR0402MB3491
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Assertion of the MSI Enable bit of RC's MSI CAP is mandatory required to
trigger MSI on i.MX6 PCIe.
This bit would be asserted when CONFIG_PCIEPORTBUS=3Dy.
Thus, the MSI works fine on i.MX6 PCIe before the commit "f3fdfc4".

Assert it unconditionally when MSI is enabled.
Otherwise, the MSI wouldn't be triggered although the EP is present and
the MSIs are assigned.

Signed-off-by: Richard Zhu <hongxing.zhu@nxp.com>
Reviewed-by: Lucas Stach <l.stach@pengutronix.de>
---
Changes v1 -> v2:
* Assert the MSI_EN unconditionally when MSI is supported.
Changes v2 -> v3:
* Remove the IS_ENABLED(CONFIG_PCI_MSI) since the driver depends on
PCI_MSI_IRQ_DOMAIN
* Extended with a check for pci_msi_enabled() to see if the user
explicitly want legacy IRQs
Changes v3 -> v4:
* Refer to Bjorn's comments, refine the subject and commit log and change
the PCI_MSI_CAP to PCIE_RC_IMX6_MSI_CAP.
---
 drivers/pci/controller/dwc/pci-imx6.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/drivers/pci/controller/dwc/pci-imx6.c b/drivers/pci/controller=
/dwc/pci-imx6.c
index 26087b3..639bb27 100644
--- a/drivers/pci/controller/dwc/pci-imx6.c
+++ b/drivers/pci/controller/dwc/pci-imx6.c
@@ -74,6 +74,7 @@ struct imx6_pcie {
 #define PHY_PLL_LOCK_WAIT_USLEEP_MAX	200
=20
 /* PCIe Root Complex registers (memory-mapped) */
+#define PCIE_RC_IMX6_MSI_CAP			0x50
 #define PCIE_RC_LCR				0x7c
 #define PCIE_RC_LCR_MAX_LINK_SPEEDS_GEN1	0x1
 #define PCIE_RC_LCR_MAX_LINK_SPEEDS_GEN2	0x2
@@ -926,6 +927,7 @@ static int imx6_pcie_probe(struct platform_device *pdev=
)
 	struct resource *dbi_base;
 	struct device_node *node =3D dev->of_node;
 	int ret;
+	u16 val;
=20
 	imx6_pcie =3D devm_kzalloc(dev, sizeof(*imx6_pcie), GFP_KERNEL);
 	if (!imx6_pcie)
@@ -1071,6 +1073,14 @@ static int imx6_pcie_probe(struct platform_device *p=
dev)
 	if (ret < 0)
 		return ret;
=20
+	if (pci_msi_enabled()) {
+		val =3D dw_pcie_readw_dbi(pci, PCIE_RC_IMX6_MSI_CAP +
+				PCI_MSI_FLAGS);
+		val |=3D PCI_MSI_FLAGS_ENABLE;
+		dw_pcie_writew_dbi(pci, PCIE_RC_MSI_IMX6_CAP +
+				PCI_MSI_FLAGS, val);
+	}
+
 	return 0;
 }
=20
--=20
2.7.4

