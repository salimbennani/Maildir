Return-Path: <virtualization-bounces@lists.linux-foundation.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 08:50:20 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 0A9FA58079D
	for <like.xu@linux.intel.com>; Wed, 12 Dec 2018 05:23:04 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 12 Dec 2018 05:23:03 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A2ZYqVhMlsFFkVZkEc+Yl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0K/z9ocbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRsZfWTJcDI2y?=
 =?us-ascii?q?bIUADeQBPf5aoof/qFYCsBWzCRWjC+zzxTFInWH50LYm0+kjCwzKwBAsE84QvH?=
 =?us-ascii?q?nSsd77NL0SUeewzKTQzDvMcelW1irg44bKdRAhr/+MXbdqfsrXz0kkCgTIjlaK?=
 =?us-ascii?q?qYP/MDKayOANvnOB7+V+SO2vi3Qoqx1rrjezwccsj5DEi4QIwV7K8iV5xZw6Jd?=
 =?us-ascii?q?y+SENjZd6kEZ1QtzyVNot4RcMiXmdotzsgxb0auJ67ey4KxI4gxx7FZPyKdZWD?=
 =?us-ascii?q?7BH7VOuJPDt1i25pdKihixqv7ESs0PDwW8iw3VpQsyZJjMHAum4R2xHX8MSLV/?=
 =?us-ascii?q?Vw8lm71TqS1A3e5PtILV43mKfdNpUv2KQ/loAJvkTGBiL2mFv5jKuRdkg8/+in?=
 =?us-ascii?q?8eXnYrH8qp+YNo90jBz+M6sgmsy4HOQ4NBUBUHKH+eS9073j+1f1QLJQjv05iq?=
 =?us-ascii?q?XZsZbaKtoHpqOhHgNY3Zov5wyhAzu7zdgUh2QLIVNBdR6dkoTlJUnCIPXiAve+?=
 =?us-ascii?q?h1Ssni1rx/fDPrD5HJXNL2LDkKv8fbln705cyQsywspD55JVDbEBJuv/VVT2tN?=
 =?us-ascii?q?zFCB82LxK7w/38BdV514MeQn6PArSDPKPWsF+I4P8vIuaVaI8bvzb9Nv4l6OP0?=
 =?us-ascii?q?gn8lmF8deq+p0YEQaHCiEfRqO1+Zbmb0gtcdDWcKuRIzTOjriF2BTzFffXmzX7?=
 =?us-ascii?q?8n6zE/CYKmC5rDR4+3jLyA2ie7AoNZZmRcBl+QFnfoctbMZvEXdSjHItN9iidW?=
 =?us-ascii?q?Ev+lSpQ9zleqtQnn27RgM+zY8zEZspSl08J6oOjalBU3/DozCNyB0maLVCZqn3?=
 =?us-ascii?q?kUWjYy3bJ2vU16zAS+17NlialdHN1X+/QbTAYgKYPVy+1oAszzXQSEZNqQVVu9?=
 =?us-ascii?q?Xv2iACotVZQ1wtkTcwNzHMikghnf3i2sRbgPmOuQGZY2/6nAimX3PNt30H3c1a?=
 =?us-ascii?q?Ms3GUhF8dVNCiqi7By8yDXBpXViAOXjauneakH3zLK7CGE12XdkltfVVtfXL/J?=
 =?us-ascii?q?FVAYaEXTpNL/rhfBVba+BLAPKAZNyceebKBNb4u63h19WP7/NYGGMCqKkGCqCE?=
 =?us-ascii?q?PNn+vUYQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ACAAC8ChFchwyp04xjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGCaYEpjBRfizNQAQEGglaIAIUhiRGBcxQYCwmDeoN?=
 =?us-ascii?q?EIjQJDQEDAQEBAQEBAgETAQEBCgsJCCkjDII2BQIDGgEGglwBAgMBAQEkEwwKH?=
 =?us-ascii?q?gsDAwECBgEBQAQECAMBIwEEKxkFgxwBgXQNBQqmTjOFQIRwjDwXeIEHh0EBBIc?=
 =?us-ascii?q?5Aok9gXOEXJA6RgmHC4YshBULGIIphz4Ch10sjXGLIoFGgg5NIxU7gmwJgh4Xh?=
 =?us-ascii?q?hSCSoVAPgEBMYEjimmBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0ACAAC8ChFchwyp04xjGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGCaYEpjBRfizNQAQEGglaIAIUhiRGBcxQYCwmDeoNEIjQJDQEDAQEBA?=
 =?us-ascii?q?QEBAgETAQEBCgsJCCkjDII2BQIDGgEGglwBAgMBAQEkEwwKHgsDAwECBgEBQAQ?=
 =?us-ascii?q?ECAMBIwEEKxkFgxwBgXQNBQqmTjOFQIRwjDwXeIEHh0EBBIc5Aok9gXOEXJA6R?=
 =?us-ascii?q?gmHC4YshBULGIIphz4Ch10sjXGLIoFGgg5NIxU7gmwJgh4XhhSCSoVAPgEBMYE?=
 =?us-ascii?q?jimmBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,344,1539673200"; 
   d="scan'208";a="55586849"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from mail.linuxfoundation.org ([140.211.169.12])
  by mtab.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 12 Dec 2018 05:23:03 -0800
Received: from mail.linux-foundation.org (localhost [127.0.0.1])
	by mail.linuxfoundation.org (Postfix) with ESMTP id 517B0ED9;
	Wed, 12 Dec 2018 13:22:00 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@mail.linuxfoundation.org
Received: from smtp2.linuxfoundation.org (smtp2.linux-foundation.org
	[172.17.192.36])
	by mail.linuxfoundation.org (Postfix) with ESMTPS id A1C0EDCF
	for <virtualization@lists.linux-foundation.org>;
	Wed, 12 Dec 2018 13:21:21 +0000 (UTC)
X-Greylist: domain auto-whitelisted by SQLgrey-1.7.6
Received: from mx1.redhat.com (mx1.redhat.com [209.132.183.28])
	by smtp2.linuxfoundation.org (Postfix) with ESMTPS id 5EC941DD4F
	for <virtualization@lists.linux-foundation.org>;
	Wed, 12 Dec 2018 13:21:20 +0000 (UTC)
Received: from smtp.corp.redhat.com (int-mx07.intmail.prod.int.phx2.redhat.com
	[10.5.11.22])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id D458085550;
	Wed, 12 Dec 2018 13:21:19 +0000 (UTC)
Received: from sirius.home.kraxel.org (ovpn-117-174.ams2.redhat.com
	[10.36.117.174])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 475A81054FD9;
	Wed, 12 Dec 2018 13:21:14 +0000 (UTC)
Received: by sirius.home.kraxel.org (Postfix, from userid 1000)
	id CCAF95E195; Wed, 12 Dec 2018 14:21:11 +0100 (CET)
From: Gerd Hoffmann <kraxel@redhat.com>
To: dri-devel@lists.freedesktop.org
Subject: [PATCH v2 15/18] drm/qxl: use qxl_num_crtc directly
Date: Wed, 12 Dec 2018 14:21:06 +0100
Message-Id: <20181212132109.8126-16-kraxel@redhat.com>
In-Reply-To: <20181212132109.8126-1-kraxel@redhat.com>
References: <20181212132109.8126-1-kraxel@redhat.com>
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.22
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.28]);
	Wed, 12 Dec 2018 13:21:19 +0000 (UTC)
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	smtp2.linux-foundation.org
Cc: David Airlie <airlied@linux.ie>, open list <linux-kernel@vger.kernel.org>,
	"open list:DRM DRIVER FOR QXL VIRTUAL GPU"
	<virtualization@lists.linux-foundation.org>, spice-devel@redhat.com,
	"open list:DRM DRIVER FOR QXL VIRTUAL GPU"
	<spice-devel@lists.freedesktop.org>, Dave Airlie <airlied@redhat.com>
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.12
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>,
	<mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>,
	<mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
MIME-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: virtualization-bounces@lists.linux-foundation.org
Errors-To: virtualization-bounces@lists.linux-foundation.org

qdev->monitors_config->max_allowed is effectively set by the
qxl.num_heads module parameter, stored in the qxl_num_crtc variable.
Lets get rid of the indirection and use the variable qxl_num_crtc
directly.  The kernel doesn't need to dereference pointers each time it
needs the value, and when reading the code you don't have to trace where
and why qdev->monitors_config->max_allowed is set.

Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
---
 drivers/gpu/drm/qxl/qxl_display.c | 25 +++++++++++--------------
 1 file changed, 11 insertions(+), 14 deletions(-)

diff --git a/drivers/gpu/drm/qxl/qxl_display.c b/drivers/gpu/drm/qxl/qxl_display.c
index fc88826b69..6ea5d031d0 100644
--- a/drivers/gpu/drm/qxl/qxl_display.c
+++ b/drivers/gpu/drm/qxl/qxl_display.c
@@ -80,10 +80,10 @@ static int qxl_display_copy_rom_client_monitors_config(struct qxl_device *qdev)
 		DRM_DEBUG_KMS("no client monitors configured\n");
 		return status;
 	}
-	if (num_monitors > qdev->monitors_config->max_allowed) {
+	if (num_monitors > qxl_num_crtc) {
 		DRM_DEBUG_KMS("client monitors list will be truncated: %d < %d\n",
-			      qdev->monitors_config->max_allowed, num_monitors);
-		num_monitors = qdev->monitors_config->max_allowed;
+			      qxl_num_crtc, num_monitors);
+		num_monitors = qxl_num_crtc;
 	} else {
 		num_monitors = qdev->rom->client_monitors_config.count;
 	}
@@ -96,8 +96,7 @@ static int qxl_display_copy_rom_client_monitors_config(struct qxl_device *qdev)
 		return status;
 	}
 	/* we copy max from the client but it isn't used */
-	qdev->client_monitors_config->max_allowed =
-				qdev->monitors_config->max_allowed;
+	qdev->client_monitors_config->max_allowed = qxl_num_crtc;
 	for (i = 0 ; i < qdev->client_monitors_config->count ; ++i) {
 		struct qxl_urect *c_rect =
 			&qdev->rom->client_monitors_config.heads[i];
@@ -204,7 +203,7 @@ static int qxl_add_monitors_config_modes(struct drm_connector *connector,
 
 	if (!qdev->monitors_config)
 		return 0;
-	if (h >= qdev->monitors_config->max_allowed)
+	if (h >= qxl_num_crtc)
 		return 0;
 	if (!qdev->client_monitors_config)
 		return 0;
@@ -307,8 +306,7 @@ static void qxl_crtc_update_monitors_config(struct drm_crtc *crtc,
 		return;
 	}
 
-	if (!qdev->monitors_config ||
-	    qdev->monitors_config->max_allowed <= i)
+	if (!qdev->monitors_config || qxl_num_crtc <= i)
 		return;
 
 	head.id = i;
@@ -350,9 +348,10 @@ static void qxl_crtc_update_monitors_config(struct drm_crtc *crtc,
 	if (oldcount != qdev->monitors_config->count)
 		DRM_DEBUG_KMS("active heads %d -> %d (%d total)\n",
 			      oldcount, qdev->monitors_config->count,
-			      qdev->monitors_config->max_allowed);
+			      qxl_num_crtc);
 
 	qdev->monitors_config->heads[i] = head;
+	qdev->monitors_config->max_allowed = qxl_num_crtc;
 	qxl_send_monitors_config(qdev);
 }
 
@@ -1148,9 +1147,8 @@ int qxl_create_monitors_object(struct qxl_device *qdev)
 {
 	int ret;
 	struct drm_gem_object *gobj;
-	int max_allowed = qxl_num_crtc;
 	int monitors_config_size = sizeof(struct qxl_monitors_config) +
-		max_allowed * sizeof(struct qxl_head);
+		qxl_num_crtc * sizeof(struct qxl_head);
 
 	ret = qxl_gem_object_create(qdev, monitors_config_size, 0,
 				    QXL_GEM_DOMAIN_VRAM,
@@ -1172,9 +1170,8 @@ int qxl_create_monitors_object(struct qxl_device *qdev)
 		qxl_bo_physical_address(qdev, qdev->monitors_config_bo, 0);
 
 	memset(qdev->monitors_config, 0, monitors_config_size);
-	qdev->monitors_config->max_allowed = max_allowed;
-
-	qdev->dumb_heads = kcalloc(max_allowed, sizeof(qdev->dumb_heads[0]), GFP_KERNEL);
+	qdev->dumb_heads = kcalloc(qxl_num_crtc, sizeof(qdev->dumb_heads[0]),
+				   GFP_KERNEL);
 	return 0;
 }
 
-- 
2.9.3

_______________________________________________
Virtualization mailing list
Virtualization@lists.linux-foundation.org
https://lists.linuxfoundation.org/mailman/listinfo/virtualization
