Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:37:59 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 20CC35807A2
	for <like.xu@linux.intel.com>; Mon, 10 Dec 2018 06:08:39 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 06:08:38 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AB7tIkx8kRFPV2/9uRHKM819IXTAuvvDOBiVQ1KB2?=
 =?us-ascii?q?1OgcTK2v8tzYMVDF4r011RmVBdWds6oMotGVmpioYXYH75eFvSJKW713fDhBt/?=
 =?us-ascii?q?8rmRc9CtWOE0zxIa2iRSU7GMNfSA0tpCnjYgBaF8nkelLdvGC54yIMFRXjLwp1?=
 =?us-ascii?q?Ifn+FpLPg8it2O2+557ebx9UiDahfLh/MAi4oQLNu8cMnIBsMLwxyhzHontJf+?=
 =?us-ascii?q?RZ22ZlLk+Nkhj/+8m94odt/zxftPw9+cFAV776f7kjQrxDEDsmKWE169b1uhTF?=
 =?us-ascii?q?UACC+2ETUmQSkhpPHgjF8BT3VYr/vyfmquZw3jSRMMvrRr42RDui9b9mRh/2hi?=
 =?us-ascii?q?kJNDA37XnXh85ygq9UvR6sqQBzzJDPYIyOKPZyYrnQcc8GSWZdQspcUTFKDIOm?=
 =?us-ascii?q?b4sICuoMJedWoJfnp1QTsBCwBw6sBO3hyj9NnHD226s62PkmHAHFxgwvBd0Pv2?=
 =?us-ascii?q?rQrNjuLqcdT/26zKnSwjXfdf9ZxTD96I3Rfx0nvPqCU7Vwcc/LxkkuEQPIlk+f?=
 =?us-ascii?q?ppf+Pz+Py+sCqXSb4PB4We20l24nrRt9rSW1yccwkIbFnpgVxU7A9Slj3Yk6P8?=
 =?us-ascii?q?G4R1R9bNW5E5VQrzmXO5VqTs4hWW1kpTs2x74ctZKlciUHyI4rywPdZvCfbYSE?=
 =?us-ascii?q?/hbuWPyMLTp2mn5pYq+zihW8/ES61OHxVc+520tQoCVfiNnDrHUN2gTT6seZTv?=
 =?us-ascii?q?t9+V+s2TKO1wDI9uFEOlo4laXdK5482LIwkYATsUvbEi/3nkX5krOWe1069uS0?=
 =?us-ascii?q?6OnreKjqqoKfOoNulA3zPKQjltaiDek6KgQOWnKU+eW41L3t5035R7BKg+Uvkq?=
 =?us-ascii?q?bHtZDaON0XqbOnDA9LzIkj7w+zACyh0NQFm3kIMExKeAmAg4jtOlHOI+73Ae2w?=
 =?us-ascii?q?glSxiDprw/HGPrv8ApTCNHTDkbHhfapj5E5Y0gY80ddf55dPB7EHJ/LzXEDxtN?=
 =?us-ascii?q?rFDhMjNAy02ennBM1n1owCQWKPHrOZMKTKvF+M5+IvIPeDaJUauTbgMPUl4//u?=
 =?us-ascii?q?jXkkmV4SZ6Wp3J0XaGymEfRiOUmWfX3sgtJSWVoMpRc0Gez2lEWZA3kUY3epQ7?=
 =?us-ascii?q?l64DY9B4S7S4DZSceoib2F2S69WZpOemFBDEvLCHrtasCIVukBbHGvJNR8mGkB?=
 =?us-ascii?q?XLmlV4hzzByrqUr2xqRqKq/O9zQFuIn//N5y4eLViFc17zMjFNmX0WyGUzRpmH?=
 =?us-ascii?q?gVTSQ9xqF1rB9BzQKa3K1lxvBVC9FXz/VOVAg8KNjb1eMpJcr1X1fuc82FAHah?=
 =?us-ascii?q?TNujCDc3BoYy2dYebkJVAdiujhnfmSGtBulGxPSwGJUo//eEjDDKLMFnxiOe2Q?=
 =?us-ascii?q?=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CiAgBAcw5cmBHrdtBjHgEGBwaBZYExg?=
 =?us-ascii?q?mKMcoswUgaKRw6QJBQYFIdtIjgSAQMBAQEBAQECARMBAQEBAQgLCwYbDi+CNgU?=
 =?us-ascii?q?CAxgJgl8EAiQfCikDAwECBgJICAMBHQtEBYMcgWoDCA0BBKYtM4VAgjYNghyMI?=
 =?us-ascii?q?Rd4gQeGeogFAokVJJcOLgmOIIMkCxiJZodXjyOKDYFdgXdNIxWDJ4InF44eQDG?=
 =?us-ascii?q?BBxyKNoF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0CiAgBAcw5cmBHrdtBjHgEGBwaBZYExgmKMcoswUgaKRw6?=
 =?us-ascii?q?QJBQYFIdtIjgSAQMBAQEBAQECARMBAQEBAQgLCwYbDi+CNgUCAxgJgl8EAiQfC?=
 =?us-ascii?q?ikDAwECBgJICAMBHQtEBYMcgWoDCA0BBKYtM4VAgjYNghyMIRd4gQeGeogFAok?=
 =?us-ascii?q?VJJcOLgmOIIMkCxiJZodXjyOKDYFdgXdNIxWDJ4InF44eQDGBBxyKNoF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,338,1539673200"; 
   d="scan'208";a="55692779"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 10 Dec 2018 06:08:31 -0800
Received: from localhost ([::1]:33018 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gWMEX-0004Yt-Ow
	for like.xu@linux.intel.com; Mon, 10 Dec 2018 09:08:29 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:49164)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <kraxel@redhat.com>) id 1gWMEJ-0004KS-Cw
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 09:08:17 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <kraxel@redhat.com>) id 1gWMEG-0007mc-8X
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 09:08:15 -0500
Received: from mx1.redhat.com ([209.132.183.28]:54876)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <kraxel@redhat.com>) id 1gWMEF-0007m9-Qa
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 09:08:12 -0500
Received: from smtp.corp.redhat.com (int-mx05.intmail.prod.int.phx2.redhat.com
	[10.5.11.15])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 1F6B83084257;
	Mon, 10 Dec 2018 14:08:10 +0000 (UTC)
Received: from sirius.home.kraxel.org (ovpn-116-59.ams2.redhat.com
	[10.36.116.59])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 939DF5D738;
	Mon, 10 Dec 2018 14:08:09 +0000 (UTC)
Received: by sirius.home.kraxel.org (Postfix, from userid 1000)
	id C7A507530; Mon, 10 Dec 2018 15:08:08 +0100 (CET)
From: Gerd Hoffmann <kraxel@redhat.com>
To: qemu-devel@nongnu.org
Date: Mon, 10 Dec 2018 15:08:08 +0100
Message-Id: <20181210140808.26794-1-kraxel@redhat.com>
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.15
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.40]);
	Mon, 10 Dec 2018 14:08:10 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [PATCH] input: avoid malloc for mouse events
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: felix.yzg@gmail.com, Gerd Hoffmann <kraxel@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

There is no reason to allocate mouse events using malloc, we can
allcoate them from stack instead, save a few cpu cycles and make the
code more readable with c99 initializers.

Suggested-by: FelixYao <felix.yzg@gmail.com>
Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
---
 include/ui/input.h |  3 ---
 ui/input.c         | 68 +++++++++++++++++++++++++-----------------------------
 2 files changed, 31 insertions(+), 40 deletions(-)

diff --git a/include/ui/input.h b/include/ui/input.h
index 34ebc67c5a..8c8ccb999f 100644
--- a/include/ui/input.h
+++ b/include/ui/input.h
@@ -49,7 +49,6 @@ int qemu_input_key_value_to_scancode(const KeyValue *value, bool down,
                                      int *codes);
 int qemu_input_linux_to_qcode(unsigned int lnx);
 
-InputEvent *qemu_input_event_new_btn(InputButton btn, bool down);
 void qemu_input_queue_btn(QemuConsole *src, InputButton btn, bool down);
 void qemu_input_update_buttons(QemuConsole *src, uint32_t *button_map,
                                uint32_t button_old, uint32_t button_new);
@@ -58,8 +57,6 @@ bool qemu_input_is_absolute(void);
 int qemu_input_scale_axis(int value,
                           int min_in, int max_in,
                           int min_out, int max_out);
-InputEvent *qemu_input_event_new_move(InputEventKind kind,
-                                      InputAxis axis, int value);
 void qemu_input_queue_rel(QemuConsole *src, InputAxis axis, int value);
 void qemu_input_queue_abs(QemuConsole *src, InputAxis axis, int value,
                           int min_in, int max_in);
diff --git a/ui/input.c b/ui/input.c
index 7c9a4109c4..f9d413fef9 100644
--- a/ui/input.c
+++ b/ui/input.c
@@ -458,22 +458,18 @@ void qemu_input_event_send_key_delay(uint32_t delay_ms)
     }
 }
 
-InputEvent *qemu_input_event_new_btn(InputButton btn, bool down)
-{
-    InputEvent *evt = g_new0(InputEvent, 1);
-    evt->u.btn.data = g_new0(InputBtnEvent, 1);
-    evt->type = INPUT_EVENT_KIND_BTN;
-    evt->u.btn.data->button = btn;
-    evt->u.btn.data->down = down;
-    return evt;
-}
-
 void qemu_input_queue_btn(QemuConsole *src, InputButton btn, bool down)
 {
-    InputEvent *evt;
-    evt = qemu_input_event_new_btn(btn, down);
-    qemu_input_event_send(src, evt);
-    qapi_free_InputEvent(evt);
+    InputBtnEvent bevt = {
+        .button = btn,
+        .down = down,
+    };
+    InputEvent evt = {
+        .type = INPUT_EVENT_KIND_BTN,
+        .u.btn.data = &bevt,
+    };
+
+    qemu_input_event_send(src, &evt);
 }
 
 void qemu_input_update_buttons(QemuConsole *src, uint32_t *button_map,
@@ -513,37 +509,35 @@ int qemu_input_scale_axis(int value,
     return ((int64_t)value - min_in) * range_out / range_in + min_out;
 }
 
-InputEvent *qemu_input_event_new_move(InputEventKind kind,
-                                      InputAxis axis, int value)
-{
-    InputEvent *evt = g_new0(InputEvent, 1);
-    InputMoveEvent *move = g_new0(InputMoveEvent, 1);
-
-    evt->type = kind;
-    evt->u.rel.data = move; /* evt->u.rel is the same as evt->u.abs */
-    move->axis = axis;
-    move->value = value;
-    return evt;
-}
-
 void qemu_input_queue_rel(QemuConsole *src, InputAxis axis, int value)
 {
-    InputEvent *evt;
-    evt = qemu_input_event_new_move(INPUT_EVENT_KIND_REL, axis, value);
-    qemu_input_event_send(src, evt);
-    qapi_free_InputEvent(evt);
+    InputMoveEvent move = {
+        .axis = axis,
+        .value = value,
+    };
+    InputEvent evt = {
+        .type = INPUT_EVENT_KIND_REL,
+        .u.rel.data = &move,
+    };
+
+    qemu_input_event_send(src, &evt);
 }
 
 void qemu_input_queue_abs(QemuConsole *src, InputAxis axis, int value,
                           int min_in, int max_in)
 {
-    InputEvent *evt;
-    int scaled = qemu_input_scale_axis(value, min_in, max_in,
+    InputMoveEvent move = {
+        .axis = axis,
+        .value = qemu_input_scale_axis(value, min_in, max_in,
                                        INPUT_EVENT_ABS_MIN,
-                                       INPUT_EVENT_ABS_MAX);
-    evt = qemu_input_event_new_move(INPUT_EVENT_KIND_ABS, axis, scaled);
-    qemu_input_event_send(src, evt);
-    qapi_free_InputEvent(evt);
+                                       INPUT_EVENT_ABS_MAX),
+    };
+    InputEvent evt = {
+        .type = INPUT_EVENT_KIND_ABS,
+        .u.abs.data = &move,
+    };
+
+    qemu_input_event_send(src, &evt);
 }
 
 void qemu_input_check_mode_change(void)
-- 
2.9.3


