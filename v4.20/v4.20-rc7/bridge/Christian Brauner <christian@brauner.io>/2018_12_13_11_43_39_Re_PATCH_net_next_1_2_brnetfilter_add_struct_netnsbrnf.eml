Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 21:23:05 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from FMSMGA003.fm.intel.com (fmsmga003.fm.intel.com [10.253.24.29])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 6B2BC58061F;
	Thu, 13 Dec 2018 03:46:54 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by FMSMGA003-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 13 Dec 2018 03:46:54 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A20nATRHcE4fPNj7XYNe2Op1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75os6zbnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJWSJPAp2y?=
 =?us-ascii?q?YZYMAeoPMulXs5TyqFkAohulHQmhBvjiyiNUinLswaE2z/4sHAPA0Qc9H9wOqn?=
 =?us-ascii?q?PUrNDtOaoMUeC11qjIzS7fb/NXwzj97pXDfw07of6WQLJwd9TeyVMyHA7CklqQ?=
 =?us-ascii?q?qZblPzKO1uQRsmiU9exgWPm0hG49sQ5xvz6vydk2ioXTh4IVzUnJ+CNky4g2Pd?=
 =?us-ascii?q?21UFB3bcKgHZdKqi2XOZV6Ttk/T2xrpCo20LwLtJyjcCQU0psr2wDTZvmEfoSU?=
 =?us-ascii?q?4B/vSOOcLDR7iX15Zr6yghm//VS8xuHgU8S50VJHoTRHn9TJuX0A1wDc58yCR/?=
 =?us-ascii?q?dg/kqtxzKC2gXO5uxFIE07iKzWIIM7zLEqjJocq0HDEzf2mEroiK+WcV0p+van?=
 =?us-ascii?q?6+v5eLXqvJycOJFuigH4LKsuntazAeMiMggBR2Sb+OK826P//UDhXrlGkvk7nr?=
 =?us-ascii?q?PEvJ3UO8gXvLO1DgxJ3oo56huyDS+q0NECknkGKFJFdgiHj4/sO1zWJPD4DPG/?=
 =?us-ascii?q?g0mjkTtyxPDJIKfhApPTIXjHibvherh860hCxwop1t1f+Z1UBa8bIP7pWU/+qs?=
 =?us-ascii?q?bYDhknPAyw2ernD8991owGVWKVHqCZKL/SsUOP5u83J+mMZYwVtyjnJ/kq+v7j?=
 =?us-ascii?q?lns5mV4bfam00pobcnG4HvJ6I0qHZXrgmMsOEWAPvgAmVuzllEWCUSJPZ3a1R6?=
 =?us-ascii?q?885is0CIO6DYjZQYChmryB3DqhEZ1QaWBLEVSMEXbud4WZVPYAciOSIsl9kjMa?=
 =?us-ascii?q?UbitUZMu1RartAXi0bpoMvLU+jEEtZLkzNV15erTmg8o+Tx3CMSd1WeNT2Zvk2?=
 =?us-ascii?q?MMRj822r1/oENnxleC16h4n+JXFdhJ6/xVVQc6MIbWz/ZmBNDqRgLBYtCJRU68?=
 =?us-ascii?q?TdW9ATExSdExz8UUY0lnGdWvlRTD3yusA78ImL2HHp008qTA33fvI8Zx0WrJ1K?=
 =?us-ascii?q?4kj1M+WMtAKXWmhrJj9wjUH4PJkF+Wl6CweaQY3S7C7mGDzWWVsUFcUQ5wV7jF?=
 =?us-ascii?q?XH8FakvXq9T5+l3NT7u0Bbs7NQtBzNaIKrFWZd3xkVVGWPDjNczDbG2rhWe/Gw?=
 =?us-ascii?q?yExrOWY4rsYGUSwiPdBE8AkwAQ+HaGMRMzBiOgo2LYETxvGkjjY0Lq8elitny7?=
 =?us-ascii?q?SlU4wB2Nb01kz7C14AIaheSAS/MP2bIJoDoupC9qHFmjxd7WC8CPpwx6fKpCZ9?=
 =?us-ascii?q?Mw+1NH1WPftwxgMZ2sNaFihlgCcwtpu0PizQl4CoJFkcIytnMl0BJyKb6E0FNG?=
 =?us-ascii?q?bz6YwZHwOrjQKmnu/BCua7Ta2k3E3NaR4KcP7PU4q1PsvAyyEkoi8nNn08Ra0n?=
 =?us-ascii?q?eG55XKChYSXoz1Ukot6xd6oLTaaDEn54zIzX1sLbW0sjja1t0zAOsq1BmhcMlf?=
 =?us-ascii?q?Ma+eDwDyDtAVCNKoKOwpnFipcAkJPORT9K4yIsOneOGK2K+tPOZ8gj2miX5L75?=
 =?us-ascii?q?x60kKJ7yB8UPLH344Zw/GE2QuKTzf9jEq7vs/rg4xFZDESEXC5ySjrH4NRYqxy?=
 =?us-ascii?q?fYAWCWahOcG3x9N+h4LzVH5c7lKsG1QG2MqxcxqIc1P9xRFQ1VgQoXG/gyu4zi?=
 =?us-ascii?q?B7nCszrqWC2yzC2eLiewQdOm5KXWVtkU3jIYypgN8ERkioaA4pmQCh5Ub7wahb?=
 =?us-ascii?q?uat+I3PSQUdOYyj5MWViXrGsubqFZs5F8IkovjlPUOSgfVCaTabwohsb0y/5H2?=
 =?us-ascii?q?pS3is7dyysupjimxx6iWSdLGt8rXbDeMFwwwvf68LYRfJLwjUGQyx4gyHNBleg?=
 =?us-ascii?q?J9mp4cmUl5Dbv+C8TW2hTJ5TcSrszY+aryu0/25qAR6+n/C1hNLnFxM30Sv619?=
 =?us-ascii?q?lsSCXJowzwYojt16SmL+1nelNkC0P768p/Aot+iJc/hIkM2XgGgZWY5XoGnn30?=
 =?us-ascii?q?MdlB26L+bXwNSCUPw97U5gjlxUJiImiIx4L/SnWS3M9ha8OmbWMR3yI399pKB7?=
 =?us-ascii?q?uM7LxYgSt1pUK1rQHLbvh8hDsdyeYu52Qcg+EGowctyiSdArYPHUhXJyDslhKI?=
 =?us-ascii?q?78ygo6VTfmqgbb+w1E9ml9C7EL6Cuh1cWGr+epo6GC9w78Z/P0jW3Hz99I7kY8?=
 =?us-ascii?q?XQYswJthKPjRjAledVJYk1lvoLgypnJG38sWcky+49kRxhw5W6sJKbJGVq+aKz?=
 =?us-ascii?q?GgRYOSHtZ8MP5jHtir5TntqR34CqBJlgGy8EXJ31TfKzCzIStO/qNwKPED06t3?=
 =?us-ascii?q?eaFqDTHQ6Z6Ed6sX3PF4qnOG2QJHkc1d9iXgWSJFRDgAAIWzU3hoU2GRqtxMzl?=
 =?us-ascii?q?bUd1/DQR5kPjpxtIy+JoMQT/U2jFqAepbDc0VIaQLB5M4g5e4EfVNNSU7vhvEC?=
 =?us-ascii?q?FA4p2hsAuNJ3SZZwtSCGEGRFeEC0r/PrW05tnA7uuYBve4L/TUerWDsuheV/aO?=
 =?us-ascii?q?xZKy3Ypq5TeMNsOTPnZ8C/03wFZMXXd8G87BgTUAVzQXlz7Rb86cvBq9+ip3rt?=
 =?us-ascii?q?2m8PT2Qg3v45GDC6BVMdVp9BC7mqODN++WhCZkJjdUzJIMxXnUyLcB2F4ekT1h?=
 =?us-ascii?q?dz6oEb4Yry7CULrQmrNLDx4ccy5zNNVH76M/3glOOM7XkND11qR/jv46FVhFT0?=
 =?us-ascii?q?HhmtqyaMwOImG9Mk7HBUmROLSHIz3L39/4YaemRbJMi+VUsgW6uSyHHE/7IjSD?=
 =?us-ascii?q?iz7pWgi1PuFRly6bJgJRuYGnfhZpCGjuV9bmahy9MN9qgjw627w0hnXWNWECNT?=
 =?us-ascii?q?hwaV9CrrqV7SlAmPVwB3RB7mZ5LemDgyuZ8+jYKpMMvfR3GCh7i+Ja72o8y7ZO?=
 =?us-ascii?q?6CFERfp1mDbdr9J0olGmlPWPxSRjUBZUtjlLg4eLt114OarF7plARWrE/BUV4G?=
 =?us-ascii?q?SQERsKod5lCtzpu69Iy9nPlLj8KDFN89/P+cscBs7UKN+IMXY7MBrpHiLUAxUB?=
 =?us-ascii?q?TTKxKW7fgEldw7mu8Sitp5I+rdDKlZsUQ/dyRUEuEbtOEk1vGNsqJpprUDIgjb?=
 =?us-ascii?q?OByskS6iztggPWQZBxvorGTe6TCPOnAiyQkL9JfVNcyrPiLJ8PN4T980Z4Y0R8?=
 =?us-ascii?q?kZ6MGk2GDoMFmTFocgJh+BYFy3N5VGBmnhu9Mg4=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AHAAA1RhJch0O0hNFjGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUgUBAQELAYEwJYIWJ4N8ljgUl0CCBQEBKwGHRCI1CA0BAwEBAQEBAQI?=
 =?us-ascii?q?BEwEBAQgNCQgpIwyCNiQBgmIBAgMBAiAdAQE3AQUJAQEKGAICBSECAgMMJQEFA?=
 =?us-ascii?q?QIaBhgWgwaCAQEEmyk8ih1wgS+CdgEBBYctCBJ5ihWBHBeBf4QjiAWCV4kdl3Q?=
 =?us-ascii?q?JgiiHaIc+I2B8hRyCdIdeLJh2BgIJBw8hgSYBggwzGiyDM4IbCQMXhi6HbgI/M?=
 =?us-ascii?q?oEEAQEBjFEBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AHAAA1RhJch0O0hNFjGwEBAQEDAQEBBwMBAQGBUgUBAQE?=
 =?us-ascii?q?LAYEwJYIWJ4N8ljgUl0CCBQEBKwGHRCI1CA0BAwEBAQEBAQIBEwEBAQgNCQgpI?=
 =?us-ascii?q?wyCNiQBgmIBAgMBAiAdAQE3AQUJAQEKGAICBSECAgMMJQEFAQIaBhgWgwaCAQE?=
 =?us-ascii?q?Emyk8ih1wgS+CdgEBBYctCBJ5ihWBHBeBf4QjiAWCV4kdl3QJgiiHaIc+I2B8h?=
 =?us-ascii?q?RyCdIdeLJh2BgIJBw8hgSYBggwzGiyDM4IbCQMXhi6HbgI/MoEEAQEBjFEBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,348,1539673200"; 
   d="scan'208";a="56739717"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 13 Dec 2018 03:46:52 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728792AbeLMLno (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 13 Dec 2018 06:43:44 -0500
Received: from mail-wr1-f67.google.com ([209.85.221.67]:44954 "EHLO
        mail-wr1-f67.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727826AbeLMLno (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 13 Dec 2018 06:43:44 -0500
Received: by mail-wr1-f67.google.com with SMTP id z5so1655235wrt.11
        for <linux-kernel@vger.kernel.org>; Thu, 13 Dec 2018 03:43:42 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=brauner.io; s=google;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=qtsedI8FBgcuUwNusiVxliHjJjL3XLLHyByPD/7zUrc=;
        b=H92LCtHDVfokvBSbcJJY2B1OIlxm7N9zPU5K9/FTHFXpzMwI3C36xg6+xoE5jJT3xQ
         0RQBjH76oJNlJ3oHz2NXotDwrFfTFfXlHbcbkO3CnxRU84k4Zf7bjSAN2XNSJ07QDAJY
         myINCwSe15Sx5BCDJfCS2CBc43R3cf1ZKUSTVnokh0q35Qv/eMeg77Dt03ASkq66oafD
         5/sHpOrszaJ6Yb53PZfaPPVXiGSo4+v0WeSZOPAFn698VLF/0EkSWR4L+nNJHTebCBf+
         x2oh23u/kb5lOUkyVHElGFRmMZilXMLxI3638jFMZHviPkqRKzpmt0ruIceJKvzTJ9fC
         2TmQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:cc:subject:message-id:references
         :mime-version:content-disposition:in-reply-to:user-agent;
        bh=qtsedI8FBgcuUwNusiVxliHjJjL3XLLHyByPD/7zUrc=;
        b=CM1N+xs/aVImXnOfQPM+Nyt/npPHqlxO/QfAYPDVXNWtuvA5gJkz6mZZnkMODUhF5B
         JwmVHPdyH44yVKFcBiFizB8OELfiC6oObfQva70l8wG8zWfQQO/QOm/qA6ymyreoZ39U
         7CbwCoYODhicsr/D60TEFd35Vc0yE6V23gZDpRHJuaGj6uWWCmBBBeJehlKfy4fXPlEr
         LYZx8Fg8RGYLAsukaA/r31U1jWduxn+3KaY2ROB2iF7C9Yaukj3plnpdH2prXvcVQOIJ
         7mbHX0LWcvMn6WHQAQDX2oNXp1qJGIbCehFoJWO33nVOvDkUfWCRBe6Pj30+xRoklrVx
         xClQ==
X-Gm-Message-State: AA+aEWYjHfFnU9Fg3L2YPM4YDTveekyC3xwyRJadrsbqQ0UVIZWn32A0
        QLMXJTSys+LMfBUUps4N1RUvug==
X-Google-Smtp-Source: AFSGD/V3jg5E+w4V3rnJ+1OTgyy2qKKdpnYzvklHr0k2lyGQYvHQnIHfh1rL/thmRaIyH6uGjh4I0A==
X-Received: by 2002:adf:f28d:: with SMTP id k13mr21579769wro.78.1544701421623;
        Thu, 13 Dec 2018 03:43:41 -0800 (PST)
Received: from brauner.io ([2a02:8070:88c2:4000:69e7:45c9:1529:166d])
        by smtp.gmail.com with ESMTPSA id g67sm1824976wmd.38.2018.12.13.03.43.40
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Thu, 13 Dec 2018 03:43:41 -0800 (PST)
Date: Thu, 13 Dec 2018 12:43:39 +0100
From: Christian Brauner <christian@brauner.io>
To: Pablo Neira Ayuso <pablo@netfilter.org>
Cc: davem@davemloft.net, netdev@vger.kernel.org,
        linux-kernel@vger.kernel.org, netfilter-devel@vger.kernel.org,
        coreteam@netfilter.org, bridge@lists.linux-foundation.org,
        tyhicks@canonical.com, kadlec@blackhole.kfki.hu, fw@strlen.de,
        roopa@cumulusnetworks.com, nikolay@cumulusnetworks.com
Subject: Re: [PATCH net-next 1/2] br_netfilter: add struct netns_brnf
Message-ID: <20181213114338.j3thzzu7cvrpz72e@brauner.io>
References: <20181107134859.19896-1-christian@brauner.io>
 <20181107134859.19896-2-christian@brauner.io>
 <20181127002047.7jzpfy32oupsthtj@salvia>
 <20181127022043.mzpqxlknqxcl6fmg@brauner.io>
 <20181127082349.ummq2perajt6olhh@salvia>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
In-Reply-To: <20181127082349.ummq2perajt6olhh@salvia>
User-Agent: NeoMutt/20180716
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Tue, Nov 27, 2018 at 09:23:49AM +0100, Pablo Neira Ayuso wrote:
> On Tue, Nov 27, 2018 at 03:20:45AM +0100, Christian Brauner wrote:
> > On Tue, Nov 27, 2018 at 01:20:47AM +0100, Pablo Neira Ayuso wrote:
> > > Hi,
> > > 
> > > On Wed, Nov 07, 2018 at 02:48:58PM +0100, Christian Brauner wrote:
> > > [...]
> > > > diff --git a/include/net/netns/netfilter.h b/include/net/netns/netfilter.h
> > > > index ca043342c0eb..eedbd1ac940e 100644
> > > > --- a/include/net/netns/netfilter.h
> > > > +++ b/include/net/netns/netfilter.h
> > > > @@ -35,4 +35,20 @@ struct netns_nf {
> > > >  	bool			defrag_ipv6;
> > > >  #endif
> > > >  };
> > > > +
> > > > +struct netns_brnf {
> > > > +#ifdef CONFIG_SYSCTL
> > > > +	struct ctl_table_header *ctl_hdr;
> > > > +#endif
> > > > +
> > > > +	/* default value is 1 */
> > > > +	int call_iptables;
> > > > +	int call_ip6tables;
> > > > +	int call_arptables;
> > > > +
> > > > +	/* default value is 0 */
> > > > +	int filter_vlan_tagged;
> > > > +	int filter_pppoe_tagged;
> > > > +	int pass_vlan_indev;
> > > > +};
> > > 
> > > I have spun on this several times, wondering if there's a way to avoid
> > > scratching these many bytes per netns to expose these sysctl entries
> > > that are plain on/off toggles... You said this:
> > > 
> > > >Currently, the /proc/sys/net/bridge folder is only created in the
> > > >initial network namespace
> > > 
> > > I think we can add one single sysctl to expose these as flags from net
> > > namespaces. Idea is to keep the existing (legacy) sysctl entries for
> > > init_net only, and add a new single new one that exposes these as flags
> > > (should be also available for consistency in init_net I'd suggest).
> > > Flags could be map in this way, eg.
> > > 
> > >         0x1     call_iptables
> > >         0x2     call_ip6tables
> > >         0x4     call_arptables
> > >         0x8     filter_vlan_tagged
> > >         ...
> > > 
> > > Also documentation would be good to have for this.
> > > 
> > > Would this idea fly for you? Thanks.
> > 
> > My suggestion is to keep these files per network namespace but have a
> > single flag argument in struct netns_brnf:
> > +struct netns_brnf {
> > +#ifdef CONFIG_SYSCTL
> > +        struct ctl_table_header *ctl_hdr;
> > +#endif
> > +
> > +       /* default value is 1 */
> > +       unsigned int filter_flags;
> > +};
> > 
> > #define BRNF_CALL_IPTABLES    0x1
> > #define BRNF_CALL_IP6TABLES   0x2
> > #define BRNF_CALL_ARPTABLES   0x4
> > #define BRNF_CALL_VLAN_TAGGED 0x8
> > 
> > a write to the corresponding file would then cause the flag to be set or
> > unset in filter_flags.
> > This way we are a) space-efficient internally not bloating struct net
> > while b) not breaking running tools in non-initial network namespaces
> > that expect the files to be there. b) is really the important bit here. :)
> 
> OK, please, go explore this space-efficient approach. Thanks.

Sorry for the wait. Other patches came up. :)
So, I looked into this approach and it is annoying to do:
- the sysctl proc parsing infrastructure is not equipped to deal with
  flags at all and expanding it to it would be a lot of code
- we would need either an atomic type or locking for filter_flags in the
  netns_brnf struct if multiple proc sysctl handlers try to raise or
  lower bits in filter_flags via different files at the same time

So I feel that this is not a feasible solution. We could make netns_brnf
a pointer in struct net and allocate it on new network namespace
creation if we care about space but then we take the performance hit of
k*alloc().
What I stressed before: for userspace it's important that we don't
change the semantics how br netfilter is configured in a non-initial
network namespace to not break existing tools in such environments.

Christian
