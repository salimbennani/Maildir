Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 12 Dec 2018 08:58:20 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id D2CA658079D;
	Tue, 11 Dec 2018 16:15:31 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 11 Dec 2018 16:15:31 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ARvKPWx2qd50SfJu1smDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segeKfTxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QLYpUjqg8qhrUgflhi?=
 =?us-ascii?q?cZOTAk/m/Zict+g6BVoBK6vxxywZXZbJ2JOPdkYq/QZ88WSXZHU81MVyJBGIS8?=
 =?us-ascii?q?b44XAuQdPOZXs4r9rEYBoxSjCgmjGv/gyjhNhnDtw6IxzuMsERvH3AM8HNICqm?=
 =?us-ascii?q?zUoM/rO6gPXuC60rXHzTLGb/xNxzjw84nIchY9of6SWbJ8a9beyU4qFw7ciFib?=
 =?us-ascii?q?tI/rPyuN2+gTr2SW6/BsWf+hhmI5sQ19vzuiyts2hoTIhI8Z0k3I+CFnzIovJd?=
 =?us-ascii?q?C1SFR3bN66HJdKqi2WKZd6T8U/SG9yoik60KcJuZujcSgK1psnwxnfZuSZc4iH?=
 =?us-ascii?q?/B3jTvydITRmi3J/frKwmRKy/VKnyu3mWcm4yFdKrixbndnQrn0ByQDf58ydRv?=
 =?us-ascii?q?dg8EqtxyyD2x3Q5+1YO0w5lKjWJ4YkwrEql5oTtUrDHjXxmEXzlKKWckQk+u61?=
 =?us-ascii?q?6+Xoe7nmpYGTN5Vyig7gNqQig8u/AOo+MgcQRWiW4vq81LL98k3jWrlKjeM5kr?=
 =?us-ascii?q?PfsJ/EIcQXvKm5AxVa0oo78RawEy+m0MgEnXkANF9FfBOHj4v3NF3UL/H4EOyy?=
 =?us-ascii?q?g1CtkDdt2vDHMaftApTLLnjfjrjheaxx5FJbyAo21dpf/Y5bCqkdIPLvXU/8rN?=
 =?us-ascii?q?zYAQU4Mwyo2ennD89x1oMDWW2VBK+ZP7jfsVuJ5uIpPumNa5UZuDf7K/g5+fHu?=
 =?us-ascii?q?iWU1lkMafamsxZEXcmy3Hux6I0WFZnrhmtUBEWAUsQYkT+zqj1uCUThUZ3upW6?=
 =?us-ascii?q?I85zc7CJ+pDIvZR4CthqCB0zm/HpFMem9GDVWMG2/yd4qYQ/cMdD6SIsh5nzMe?=
 =?us-ascii?q?TrihS4gh1RK0uA/g0bVnLPHZ+ikZtZLlydh06PfflRA09TxoEcud13uBQH1znm?=
 =?us-ascii?q?MNXzU2xrxwoVRhylef1qh1m/9YGsZV5/9TVgc6NITTz+p1C93pXgLBf9GJSEup?=
 =?us-ascii?q?Q9m8ADExSM4xzMEKY0pnB9qiiRXD1TKwA7AJj7yLGIA08qXE0nfsPcl91WjJ2L?=
 =?us-ascii?q?Mhj1Y8RMtPLnOphqh4+wjXBI7JlkGZmr2udaQd2i7N6WiCwXCPvEFeTA5/T6HF?=
 =?us-ascii?q?UWoDaUvRqNTz/lnCQKO2CbQ7LgtBztaPJbZQZd33k1pKXvfjN87YY2KqhWiwAw?=
 =?us-ascii?q?2FxreNbIrsZmUc0z/RCEkCkwAP43mGMRIyCTumo2LbFDZuD07gY1vw8elir3O2?=
 =?us-ascii?q?VlM0zwCPb01my7q1+h4UieaAS/8J2bIEoiMhqzRyHFayxN/WD9uApwx8fKRTe9?=
 =?us-ascii?q?894VFH1X7HuAx5JJCvM6dihlsGeQRto0zuzwl3CplHkcUytnwqyBR9KK2G31JB?=
 =?us-ascii?q?bT+Xxo3wNaDNJWn0/xCvbLDW10ra0NaX/KcP9fs5p0/ivAGvCkot7XFn38NJ3H?=
 =?us-ascii?q?ub45XAFBASXo7pUkYr6xh6oKnXYykg54/OyXJgK6i1sj/Y1NIvC+so0RKgf9ZZ?=
 =?us-ascii?q?MKOZGw7+CcwaB86yKOM0n1ildA4LPOdX9KQsJcOpa+OG2LK3POZnhD+ml2VH75?=
 =?us-ascii?q?xn3UKW6iV8TfTE35AbzPGC3wuLTivzg02lss/qh49EfzYSHmykxCjgBY5RYLBy?=
 =?us-ascii?q?fIkRBWevJc232stxh5r3V3FE816jAksM2NW1dhqKc1z9wQpQ2FwXoHymgye5zy?=
 =?us-ascii?q?Z4kyo0rqqZxyHOx+XidBwaOm9EXmVijFHsIZSqgNAeRkSncw8plB6970bg26db?=
 =?us-ascii?q?vLh/L3XUQUpQfSj5NXtiUqiztrqFecJP84knsSZUUOS9Z1CVVLj9rgAe0yPiGW?=
 =?us-ascii?q?te2T86eyurupX/gxx1lmadIGxvo3refMF63Q3f68DERf5NwjoGQzF1iDnNCVi7?=
 =?us-ascii?q?JdWp/9SUl5HYv+C6VmKhUIBTcCbxwYOBsiu7+XNlARmlk/+vnd3nFBAw0TXn2N?=
 =?us-ascii?q?lySSXIsBH8b5Ho16ugMOJrZEloBELm5Mp8FYFziY8whJAW2XgHiZSZ53sHkWHv?=
 =?us-ascii?q?MdpF3aLydmYCRTkOw9TN+gjqxFVjLm6Vx4L+Tnidx8phZ9qgbW8M1CMy8dtKCL?=
 =?us-ascii?q?uK47xehiR6vEC4rQ3KbPh5nzcdz+Yu6XEAj+EIvgot0juSArQIEUZEOizskgyC?=
 =?us-ascii?q?78qio6VPeGavbb+w2VJindCmCbGOuABdV2z/epc/Bi9w9cR/PUnI0H3y7IHkZd?=
 =?us-ascii?q?bRYcgSth2SjxfPkexVJIgtmfoNgCptIXj9smE9y+4nkRxu2om3s5OdJGVq+KK5?=
 =?us-ascii?q?HwRUNjnoZ84I/jHtjKBentuZ3oy1H5VhHCkLU4XsTf6yDD0SsvHnPR6UEDIgsn?=
 =?us-ascii?q?ebBabfHQiH5UdktX3PFo6kN2qNKHkF19liRwSdJE9CgAASRjo6hYU0FgSrxMzn?=
 =?us-ascii?q?bUd46Sod5l/+qhtQ1O1oMwPzXXvYpAetcj00UoSQLAJK7gFe4EfYKcyf7uVuHy?=
 =?us-ascii?q?FB452utgqNJnaAZwRPC2EJVVeJB1TiPrmo+NnB/PKUBuu4L/vSf7qOrfZSWOuP?=
 =?us-ascii?q?xZKqyoFm5SqDNt2TPnl+CP02wkpDUm54G8TamDUPSjYblyHXb86cqxez5Dd3rt?=
 =?us-ascii?q?2k8PnwXALv5I2PC6ZdMNl1+hC2h7uDOPCUhCpjNTlY0ZYMz2fSyLcDxF4Slz1u?=
 =?us-ascii?q?dz61HLsaqC7CV7jQlbFXDhIBbyNzNdBF76Y93glLJM7ahcn51r9+jv4pFVhFUU?=
 =?us-ascii?q?btld2uZcwPO2u9Lk/IBF6XNLSaIj3G2933YaK5SbFKkOpYrQG/uTaFHE/lJTmD?=
 =?us-ascii?q?kzjpVxayMeBDli2bPRpeuJ2jfRZpE2TsUNXmahijOt9tkTI22aE0hm/NNWMEMT?=
 =?us-ascii?q?lzaUVNrriR7SNemvp+GmxB4WBjLemLgCuZ6+jYKpALsfpkGCh0luRa4GgkxLtR?=
 =?us-ascii?q?9i1LWPt1mC6B5uJp9liliuynzjthTQoLpDFWgo6CoURlP+Pe7JYEEXLZ4BUl7m?=
 =?us-ascii?q?iKDRkO4dx/BZmnpKFUzp7Dmav4LzFq+sjRu8AbAoycLMOBLWpkNB/BGyDdBwhD?=
 =?us-ascii?q?SiSkcSnbhkpAgLSR+2eTo5wStJfhgtwNR6VdWVhzEekVTgxmEcYELZMyXjo+nb?=
 =?us-ascii?q?OdjcgHzX6/twXKAsJCs5bYX/aWR/7oLXLRi7BaahYOh7W+N40UHon63VFyLEd8?=
 =?us-ascii?q?kZiMGkDVG9tKp2kpZwk1pANWtntzVW06xUvgdxmx4G47FPiokxpwgQx7Jawh/S?=
 =?us-ascii?q?nh5n87L0THoS83nlV3n9j5xXiUcD/rJaK5QalVBjDyukx3NYn0B05vahaukEB4?=
 =?us-ascii?q?HDjDQL5UjqAmcnpkzEfZuJ1AHtZGQKFEaQNWzvaSI70hykh0qSi9w0JDo+zfBt?=
 =?us-ascii?q?8qmAIscJOoh3NH1A9qdtQyNerWKbYNhlpdl7+mvSKy0O01hggEKAJF9mqXeTIg?=
 =?us-ascii?q?pkkXP6MrYSGv+6gk7wGelzZdUHYDWuBsof9w8E45feOawGao2qRPbEqwOvefIr?=
 =?us-ascii?q?6Htmzokc+OS0k3kEQSmA0N/7Fw18cLfE2TWEQiirCWEkcnL83HfDtUZMka2XTc?=
 =?us-ascii?q?cC2JtO/AicZvPo6+UPiuQOOBua0Th0ipNAcvA4kIqM8GG8//gwnjMc77Ietdml?=
 =?us-ascii?q?0W7wPxKQDdAQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ALAAAxUhBch0O0hNFlGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUQYBAQELAYNrJ4wUjBIpgT85lz6BcRYYEwGHLiI0CQ0BAwEBAQEBAQI?=
 =?us-ascii?q?BEwEBAQgNCQgpL4I2IoJlAwMBAiRSBgkBAVADVAcSBYMcggIFpwMzhAEBhiyHf?=
 =?us-ascii?q?IQ/eoEcgUSNOwKJO4cBkD8HAoImjyALGJFAiSOQEIFGgg5NI4M8gicXjWZYHgE?=
 =?us-ascii?q?BMQGBBAEBimQBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ALAAAxUhBch0O0hNFlGwEBAQEDAQEBBwMBAQGBUQYBAQE?=
 =?us-ascii?q?LAYNrJ4wUjBIpgT85lz6BcRYYEwGHLiI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpL?=
 =?us-ascii?q?4I2IoJlAwMBAiRSBgkBAVADVAcSBYMcggIFpwMzhAEBhiyHfIQ/eoEcgUSNOwK?=
 =?us-ascii?q?JO4cBkD8HAoImjyALGJFAiSOQEIFGgg5NI4M8gicXjWZYHgEBMQGBBAEBimQBA?=
 =?us-ascii?q?Q?=
X-IronPort-AV: E=Sophos;i="5.56,343,1539673200"; 
   d="scan'208";a="56513992"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 11 Dec 2018 16:15:30 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726365AbeLLAM2 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 11 Dec 2018 19:12:28 -0500
Received: from mga04.intel.com ([192.55.52.120]:56050 "EHLO mga04.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726267AbeLLAMJ (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 11 Dec 2018 19:12:09 -0500
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga005.jf.intel.com ([10.7.209.41])
  by fmsmga104.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 11 Dec 2018 16:12:08 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,343,1539673200"; 
   d="scan'208";a="282839406"
Received: from rpedgeco-desk5.jf.intel.com ([10.54.75.141])
  by orsmga005.jf.intel.com with ESMTP; 11 Dec 2018 16:12:07 -0800
From: Rick Edgecombe <rick.p.edgecombe@intel.com>
To: akpm@linux-foundation.org, luto@kernel.org, will.deacon@arm.com,
        linux-mm@kvack.org, linux-kernel@vger.kernel.org,
        kernel-hardening@lists.openwall.com,
        naveen.n.rao@linux.vnet.ibm.com, anil.s.keshavamurthy@intel.com,
        davem@davemloft.net, mhiramat@kernel.org, rostedt@goodmis.org,
        mingo@redhat.com, ast@kernel.org, daniel@iogearbox.net,
        jeyu@kernel.org, namit@vmware.com, netdev@vger.kernel.org,
        ard.biesheuvel@linaro.org, jannh@google.com
Cc: kristen@linux.intel.com, dave.hansen@intel.com,
        deneen.t.dock@intel.com,
        Rick Edgecombe <rick.p.edgecombe@intel.com>
Subject: [PATCH v2 3/4] bpf: switch to new vmalloc vfree flags
Date: Tue, 11 Dec 2018 16:03:53 -0800
Message-Id: <20181212000354.31955-4-rick.p.edgecombe@intel.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20181212000354.31955-1-rick.p.edgecombe@intel.com>
References: <20181212000354.31955-1-rick.p.edgecombe@intel.com>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

This switches to use the new vmalloc flags to control freeing memory with
special permissions.

Signed-off-by: Rick Edgecombe <rick.p.edgecombe@intel.com>
---
 include/linux/filter.h | 26 ++++++++++++--------------
 kernel/bpf/core.c      |  1 -
 2 files changed, 12 insertions(+), 15 deletions(-)

diff --git a/include/linux/filter.h b/include/linux/filter.h
index 795ff0b869bb..2aeb93d3337d 100644
--- a/include/linux/filter.h
+++ b/include/linux/filter.h
@@ -20,6 +20,7 @@
 #include <linux/set_memory.h>
 #include <linux/kallsyms.h>
 #include <linux/if_vlan.h>
+#include <linux/vmalloc.h>
 
 #include <net/sch_generic.h>
 
@@ -487,7 +488,6 @@ struct bpf_prog {
 	u16			pages;		/* Number of allocated pages */
 	u16			jited:1,	/* Is our filter JIT'ed? */
 				jit_requested:1,/* archs need to JIT the prog */
-				undo_set_mem:1,	/* Passed set_memory_ro() checkpoint */
 				gpl_compatible:1, /* Is filter GPL compatible? */
 				cb_access:1,	/* Is control block accessed? */
 				dst_needed:1,	/* Do we need dst entry? */
@@ -699,24 +699,23 @@ bpf_ctx_narrow_access_ok(u32 off, u32 size, u32 size_default)
 
 static inline void bpf_prog_lock_ro(struct bpf_prog *fp)
 {
-	fp->undo_set_mem = 1;
-	set_memory_ro((unsigned long)fp, fp->pages);
-}
+	struct vm_struct *vm = find_vm_area(fp);
 
-static inline void bpf_prog_unlock_ro(struct bpf_prog *fp)
-{
-	if (fp->undo_set_mem)
-		set_memory_rw((unsigned long)fp, fp->pages);
+	if (vm)
+		vm->flags |= VM_HAS_SPECIAL_PERMS;
+	set_memory_ro((unsigned long)fp, fp->pages);
 }
 
 static inline void bpf_jit_binary_lock_ro(struct bpf_binary_header *hdr)
 {
-	set_memory_ro((unsigned long)hdr, hdr->pages);
-}
+	struct vm_struct *vm = find_vm_area(hdr);
 
-static inline void bpf_jit_binary_unlock_ro(struct bpf_binary_header *hdr)
-{
-	set_memory_rw((unsigned long)hdr, hdr->pages);
+	if (vm) {
+		vm->flags |= VM_HAS_SPECIAL_PERMS;
+		vm->flags |= VM_IMMEDIATE_UNMAP;
+	}
+
+	set_memory_ro((unsigned long)hdr, hdr->pages);
 }
 
 static inline struct bpf_binary_header *
@@ -746,7 +745,6 @@ void __bpf_prog_free(struct bpf_prog *fp);
 
 static inline void bpf_prog_unlock_free(struct bpf_prog *fp)
 {
-	bpf_prog_unlock_ro(fp);
 	__bpf_prog_free(fp);
 }
 
diff --git a/kernel/bpf/core.c b/kernel/bpf/core.c
index b1a3545d0ec8..bd3efd7ce526 100644
--- a/kernel/bpf/core.c
+++ b/kernel/bpf/core.c
@@ -663,7 +663,6 @@ void __weak bpf_jit_free(struct bpf_prog *fp)
 	if (fp->jited) {
 		struct bpf_binary_header *hdr = bpf_jit_binary_hdr(fp);
 
-		bpf_jit_binary_unlock_ro(hdr);
 		bpf_jit_binary_free(hdr);
 
 		WARN_ON_ONCE(!bpf_prog_kallsyms_verify_off(fp));
-- 
2.17.1

