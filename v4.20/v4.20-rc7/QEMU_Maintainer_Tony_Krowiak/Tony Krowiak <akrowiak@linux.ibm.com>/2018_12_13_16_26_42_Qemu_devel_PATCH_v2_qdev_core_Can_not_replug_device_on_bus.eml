Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  14 Dec 2018 08:39:12 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id D660D58079D
	for <like.xu@linux.intel.com>; Thu, 13 Dec 2018 08:27:21 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 13 Dec 2018 08:27:21 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AO/A/qRc4X7sD3rXhfd3hDvCelGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxcW7ZB7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v6bpgRh31hy?=
 =?us-ascii?q?cdLzM38H/ZhMJ3gqxYvRyhvx5yzYzbbY2IOvdyYr3SfcgBSGZdQspcTTBND5mg?=
 =?us-ascii?q?Y4cTCecKIOZWr5P6p1sLtRawGw6sBOXvyzRVg3H2x6o60uogEQ7c3wwrAtUDv2?=
 =?us-ascii?q?7XrNXvM6cTX+G1w7PLzTjYa/NW2DH96JXHcxw7oPGDRrdwfdDNxkkoEgPIl1Od?=
 =?us-ascii?q?opHmMTONzukBrXSX4ul6We6ylmIqqBt9riahy8oskIXFm4AYxkjA+CljwYs5Oc?=
 =?us-ascii?q?e0RUx7bNK+DpdduSGXOo1rSc04WW5oojw1yrgetJ67YicKzJMnygbba/yGaIiI?=
 =?us-ascii?q?/gnjWPyeITd+mXJpYrW/hwy98US4y+38UNe70EpSoyZbjtXBtWoB2wHO5sWEUP?=
 =?us-ascii?q?dx4Ems1DaV2wzO6OxIOUU0mrDaK54lzL4wjJ0TsUHbEy/vhkr2ibKWelw59ee2?=
 =?us-ascii?q?9eTofLHmqoaHOI9zlwH+NLghldKkAeg/NggOXmub9vqm2Lzs4E30WLFKjvwwkq?=
 =?us-ascii?q?nEv5HWP8UbpqilAwBL1oYv8QqwDzCj0NkDm3kHK1RFeB2Bj4j0IV3OJ+r4Dfin?=
 =?us-ascii?q?j1S2jDhr3+zGPqHmApjVKnjDkbThcqhn509T1Qo+1tRf55NSCrEcL/P/QE7xtN?=
 =?us-ascii?q?rEDhAnNwy42froCNJ41tBWZGSUH6XMML/OqUTaoaUrIvKQf8kTvzDyLeVj4OTh?=
 =?us-ascii?q?ynowmFsYdK/u2oMLaXe+BbN/LkCEJHbhnNoFQloMpRc0GenjiVmeVmxKanOvGq?=
 =?us-ascii?q?4x+Dw/TZirFJrOXZyFhruH0yGmWJpMaTddF1qOHHz0IpiCQOoGcymII8VswQAD?=
 =?us-ascii?q?AKGsTpJk2RywuQvSzb1hIezJvCoCusHNzt9wstHUkwB61iZzEMWU0CnZRmJumX?=
 =?us-ascii?q?wJTjwe2KF5vFw7y12Gl6N/hqoLRpRo+/pVX1JiZtbnxOtgBoWqVw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BuCgAGhxJcmBHrdtBjHAEBAR8EAQEFA?=
 =?us-ascii?q?QGBTAKBL4JijHSlFYFxFAEBGBSHRSI2Bw0BAwEBAQEBAQIBEwEBAQEBCAsLBhs?=
 =?us-ascii?q?OL4I2BQIDGAmCXgEEAg8VHwopAwMBAgYCSAgDAWwFHYJ/ggEBAgKcV4lYAQEBg?=
 =?us-ascii?q?WozijSHfYQ/F4F/gRGCZIR4gQSFDgKPR36QSgmRWQIWkUqDBJYeAgQGBQITAYF?=
 =?us-ascii?q?NCIF/MxoIGxWDJ4InFxKOKVSBB4l7VoF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0BuCgAGhxJcmBHrdtBjHAEBAR8EAQEFAQGBTAKBL4JijHS?=
 =?us-ascii?q?lFYFxFAEBGBSHRSI2Bw0BAwEBAQEBAQIBEwEBAQEBCAsLBhsOL4I2BQIDGAmCX?=
 =?us-ascii?q?gEEAg8VHwopAwMBAgYCSAgDAWwFHYJ/ggEBAgKcV4lYAQEBgWozijSHfYQ/F4F?=
 =?us-ascii?q?/gRGCZIR4gQSFDgKPR36QSgmRWQIWkUqDBJYeAgQGBQITAYFNCIF/MxoIGxWDJ?=
 =?us-ascii?q?4InFxKOKVSBB4l7VoF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,349,1539673200"; 
   d="scan'208";a="56224899"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 13 Dec 2018 08:27:21 -0800
Received: from localhost ([::1]:53563 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gXTpY-0006AP-F3
	for like.xu@linux.intel.com; Thu, 13 Dec 2018 11:27:20 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:41881)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <akrowiak@linux.ibm.com>) id 1gXTpA-0005xT-Ve
	for qemu-devel@nongnu.org; Thu, 13 Dec 2018 11:26:57 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <akrowiak@linux.ibm.com>) id 1gXTp7-0001mB-M8
	for qemu-devel@nongnu.org; Thu, 13 Dec 2018 11:26:56 -0500
Received: from mx0a-001b2d01.pphosted.com ([148.163.156.1]:49766)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <akrowiak@linux.ibm.com>)
	id 1gXTp7-0001k6-D4
	for qemu-devel@nongnu.org; Thu, 13 Dec 2018 11:26:53 -0500
Received: from pps.filterd (m0098399.ppops.net [127.0.0.1])
	by mx0a-001b2d01.pphosted.com (8.16.0.22/8.16.0.22) with SMTP id
	wBDGOSb0033748
	for <qemu-devel@nongnu.org>; Thu, 13 Dec 2018 11:26:52 -0500
Received: from e16.ny.us.ibm.com (e16.ny.us.ibm.com [129.33.205.206])
	by mx0a-001b2d01.pphosted.com with ESMTP id 2pbtgt9wd8-1
	(version=TLSv1.2 cipher=AES256-GCM-SHA384 bits=256 verify=NOT)
	for <qemu-devel@nongnu.org>; Thu, 13 Dec 2018 11:26:51 -0500
Received: from localhost
	by e16.ny.us.ibm.com with IBM ESMTP SMTP Gateway: Authorized Use Only!
	Violators will be prosecuted
	for <qemu-devel@nongnu.org> from <akrowiak@linux.ibm.com>;
	Thu, 13 Dec 2018 16:26:50 -0000
Received: from b01cxnp22036.gho.pok.ibm.com (9.57.198.26)
	by e16.ny.us.ibm.com (146.89.104.203) with IBM ESMTP SMTP Gateway:
	Authorized Use Only! Violators will be prosecuted; 
	(version=TLSv1/SSLv3 cipher=AES256-GCM-SHA384 bits=256/256)
	Thu, 13 Dec 2018 16:26:47 -0000
Received: from b01ledav001.gho.pok.ibm.com (b01ledav001.gho.pok.ibm.com
	[9.57.199.106])
	by b01cxnp22036.gho.pok.ibm.com (8.14.9/8.14.9/NCO v10.0) with ESMTP id
	wBDGQkas12976358
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256
	verify=FAIL); Thu, 13 Dec 2018 16:26:46 GMT
Received: from b01ledav001.gho.pok.ibm.com (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id EE16228075;
	Thu, 13 Dec 2018 16:26:45 +0000 (GMT)
Received: from b01ledav001.gho.pok.ibm.com (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id C1D122806E;
	Thu, 13 Dec 2018 16:26:45 +0000 (GMT)
Received: from akrowiak-ThinkPad-P50.endicott.ibm.com (unknown [9.60.75.235])
	by b01ledav001.gho.pok.ibm.com (Postfix) with ESMTPS;
	Thu, 13 Dec 2018 16:26:45 +0000 (GMT)
From: Tony Krowiak <akrowiak@linux.ibm.com>
To: qemu-devel@nongnu.org
Date: Thu, 13 Dec 2018 11:26:42 -0500
X-Mailer: git-send-email 2.7.4
X-TM-AS-GCONF: 00
x-cbid: 18121316-0072-0000-0000-000003D8EB26
X-IBM-SpamModules-Scores: 
X-IBM-SpamModules-Versions: BY=3.00010219; HX=3.00000242; KW=3.00000007;
	PH=3.00000004; SC=3.00000271; SDB=6.01131236; UDB=6.00582089;
	IPR=6.00911368; 
	MB=3.00024682; MTD=3.00000008; XFM=3.00000015; UTC=2018-12-13 16:26:48
X-IBM-AV-DETECTION: SAVI=unused REMOTE=unused XFE=unused
x-cbparentid: 18121316-0073-0000-0000-00004A6ECAD1
Message-Id: <1544718402-8703-1-git-send-email-akrowiak@linux.ibm.com>
X-Proofpoint-Virus-Version: vendor=fsecure engine=2.50.10434:, ,
	definitions=2018-12-13_03:, , signatures=0
X-Proofpoint-Spam-Details: rule=outbound_notspam policy=outbound score=0
	priorityscore=1501
	malwarescore=0 suspectscore=1 phishscore=0 bulkscore=0 spamscore=0
	clxscore=1015 lowpriorityscore=0 mlxscore=0 impostorscore=0
	mlxlogscore=999 adultscore=0 classifier=spam adjust=0 reason=mlx
	scancount=1 engine=8.0.1-1810050000 definitions=main-1812130141
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 3.x [generic] [fuzzy]
X-Received-From: 148.163.156.1
Subject: [Qemu-devel] [PATCH v2] qdev/core: Can not replug device on bus
 that allows one device
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: pasic@linux.ibm.com, mammedo@redhat.com,
	Tony Krowiak <akrowiak@linux.ibm.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

If the maximum number of devices allowed on a bus is 1 and a device
which is plugged into the bus is subsequently unplugged, attempting to replug
the device fails with error "Bus 'xxx' does not support hotplugging".
The "error" is detected in the qbus_is_full(BusState *bus) function
(qdev_monitor.c) because bus->max_index >= bus_class->max_dev. The
root of the problem is that the bus->max_index is not decremented when a device
is unplugged from the bus. This patch fixes that problem.

Signed-off-by: Tony Krowiak <akrowiak@linux.ibm.com>
---
 hw/core/qdev.c         | 3 +++
 include/hw/qdev-core.h | 1 +
 qdev-monitor.c         | 2 +-
 3 files changed, 5 insertions(+), 1 deletion(-)

diff --git a/hw/core/qdev.c b/hw/core/qdev.c
index 6b3cc55b27c2..956923f33520 100644
--- a/hw/core/qdev.c
+++ b/hw/core/qdev.c
@@ -59,6 +59,8 @@ static void bus_remove_child(BusState *bus, DeviceState *child)
             snprintf(name, sizeof(name), "child[%d]", kid->index);
             QTAILQ_REMOVE(&bus->children, kid, sibling);
 
+            bus->num_children--;
+
             /* This gives back ownership of kid->child back to us.  */
             object_property_del(OBJECT(bus), name, NULL);
             object_unref(OBJECT(kid->child));
@@ -73,6 +75,7 @@ static void bus_add_child(BusState *bus, DeviceState *child)
     char name[32];
     BusChild *kid = g_malloc0(sizeof(*kid));
 
+    bus->num_children++;
     kid->index = bus->max_index++;
     kid->child = child;
     object_ref(OBJECT(kid->child));
diff --git a/include/hw/qdev-core.h b/include/hw/qdev-core.h
index a24d0dd566e3..521f0a947ead 100644
--- a/include/hw/qdev-core.h
+++ b/include/hw/qdev-core.h
@@ -206,6 +206,7 @@ struct BusState {
     HotplugHandler *hotplug_handler;
     int max_index;
     bool realized;
+    int num_children;
     QTAILQ_HEAD(ChildrenHead, BusChild) children;
     QLIST_ENTRY(BusState) sibling;
 };
diff --git a/qdev-monitor.c b/qdev-monitor.c
index 07147c63bf8b..45a8ba49644c 100644
--- a/qdev-monitor.c
+++ b/qdev-monitor.c
@@ -414,7 +414,7 @@ static DeviceState *qbus_find_dev(BusState *bus, char *elem)
 static inline bool qbus_is_full(BusState *bus)
 {
     BusClass *bus_class = BUS_GET_CLASS(bus);
-    return bus_class->max_dev && bus->max_index >= bus_class->max_dev;
+    return bus_class->max_dev && bus->num_children >= bus_class->max_dev;
 }
 
 /*
-- 
2.7.4


