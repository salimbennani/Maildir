Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 27 Nov 2018 08:39:05 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from FMSMGA003.fm.intel.com (fmsmga003.fm.intel.com [10.253.24.29])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 23B0F580322;
	Mon, 26 Nov 2018 09:52:25 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by FMSMGA003-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 26 Nov 2018 09:52:24 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A8W2M6RPdoFsiWCbaPK8l6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPn/pcbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzcaTBc90aW2dNR99dWjFbDYyh?=
 =?us-ascii?q?c4YAEuwBM/pEoInjulQCswa1CQ2sCe/yzzNFgGL9068n3OQ7CQzI3BIuEc8Avn?=
 =?us-ascii?q?rXq9v6NqkSXu+6wqnT1TXObehb1Sv+5YXSbhwsu+2AUa52fMHMyUcvDQTFjlCI?=
 =?us-ascii?q?pILqOTOVzOUNvHSG5Od9T+2vj2onpB9toje0wccnl4jJjZ8IxF/a7yV52pw6Ls?=
 =?us-ascii?q?C/RUFlZ96kCppQuD2AO4RtWMwiR2VotzgmyrIdvp62ZzQFyJMjxx7bcfOIaI+I?=
 =?us-ascii?q?4gj5W+qLPTh4g3dldau5ih2v8kag0vXxWteo3FtOtCZJj9fBum4X2xDO6cWLVu?=
 =?us-ascii?q?Fx80aj1DqX2A3e6/tILV46mKfbMZIt3KA8m5gJvUjdACP7mkP7h7KMeEo+4Oin?=
 =?us-ascii?q?8eHnb63mppCCM490jRnzMrohmsOhG+Q0KAsOUHaB+eS6yrLj+Vf1QLJQjv05iq?=
 =?us-ascii?q?XZsZbaKtoHpqOhHQNZzoIu5wyiAzqoztgUh2QLIVFZdB6djoXkOUnCIPXiAve+?=
 =?us-ascii?q?h1Ssni1rx/fDPrD5BpXNL37DkKrufLpk6E5T1hAzzdZB6JJQE70BJ/zyWknvu9?=
 =?us-ascii?q?zCFRI5LQO0zPj9CNln1YMRR3iPAqmHP6PWq1OI4fgvI+aUaI8PpDn9M+Ql5+Lp?=
 =?us-ascii?q?jXIhnV8dfKqp0oUNZHG3A/RrOEGZYXvqgtccHmYGpAs+TOr2iFKcVT5ffWq9X6?=
 =?us-ascii?q?U55jsjEoKpEZ/DRpyxgLyGxCq7HodZZmFaCl+WFnfkbYWEW+oWZyKULc9siTgE?=
 =?us-ascii?q?VbmnS4882hCirg76y7x7LuXK/i0Ur47s1N9w5+fLjxE96SR0D9iB02GKV2x0nG?=
 =?us-ascii?q?QISCEs0KB8pkx9zFGD0a9jjvxcFNxT4e5JUwggOZ7dyex6F879WgbbctiVT1am?=
 =?us-ascii?q?R82sASstQdIp398Of0F9Fs24gRDY3yqqBLwVm6aRBJMu8KLRxHzxJ8d7y3bb26?=
 =?us-ascii?q?gtlVgmQs1TNWK4gq5z7RTcB4nMk0+Bjaalabwc3DLR9GeE1WeOv1tXUAhqXaXB?=
 =?us-ascii?q?XHAQfE3Wrdvi60PGTr+uD6knMwRbxc6DLKtKdsPmjVFcSPj/P9TeZnq7m32sCh?=
 =?us-ascii?q?aQ2rOMcI3qdn0A0yrHFkgLjRof/XacOgg4HSeuvWTeADtqFVLsZkPs9fJzqHe6?=
 =?us-ascii?q?Tk8y0gGLYFdt17uz+h4Jm/OcT+kf0a4DuCcksz90Bkqy38rKC9qcoApsZLhTbs?=
 =?us-ascii?q?kj4FhZz27ZtxZyPpq7L698gF4TaAB3v0Lo1xVqBYRMi8kqrHU2zAVsLaKUyk9O?=
 =?us-ascii?q?dzSd3ZroIL3YNnHy/Ayza67RwlzezNeW+qII6PQkq1XivBulFlY4/3VgydlV13?=
 =?us-ascii?q?qc5pPFDAcJVZLxU0A39wV1pr3AYyk94Z/U2mNoMaWurjDC3NcpDvM/yhm8Z9df?=
 =?us-ascii?q?LL+EFAjqHsIAA8ihNuMrlEapbx4eJ+9S6bM7MNmgd/uF366rIv1tnDanjWRB/Y?=
 =?us-ascii?q?B83ViA9yt6Su7UwZkFx+uU0ReAVzf5lF2hqNz4mZhYZTEOGWqy0SjlBJNLaqJu?=
 =?us-ascii?q?Z4oKCGeuLNexxtVxnJPtX39Y9Fi+B1IJwsOpeBySb0Dj0g1Uz0gYvXunmS6gxT?=
 =?us-ascii?q?xujz4ptraf3DDJw+n6bhoHO3JES3N4jVjxJoi4ldYaU1aybwgojReq+Vz1x6xG?=
 =?us-ascii?q?q6thNWnTRkFIcjPyL2FjVKuwq7WDb9RO6JMurSVYTuC8bUqGRb76phsQyznjEH?=
 =?us-ascii?q?dGxDAnazGqvY30nhx7iG6HLHd/tmHZedx2xRrE4NzcRPhR3icJRSViiDnXAES8?=
 =?us-ascii?q?MMet/dmOi5jDteW+XXq7VpJPaSnr0Z+AtCyj6G1oGxK/hfOzmt7gEQQgyi/0zd?=
 =?us-ascii?q?pqVSbJrBb6fIbr0b+3MeZmfkluGV/95NB2GoB4kossmp4Q3WIWiYmS/XoCiW3z?=
 =?us-ascii?q?K8lU2bribHoRQj4G297U7xLi2EF5LHKJxoT5W26ZwstgYdm6f2wX1jg878BMFK?=
 =?us-ascii?q?eb8rhEkTFprVq/qALbeeJ9kSsFyfsy9H4ahPkEuAk3wSWcGLwSHVRYMjbqlxSH?=
 =?us-ascii?q?9N2+qKRXZGCycbm/zkZ+nNahDK2crQFYQnr2ZpAiHSpo5MVlLF3MyGHz6p3jeN?=
 =?us-ascii?q?TIaNITtx6UnA3ag+lbNp0xjeYKijR9OW3mo3Il0eE7gAdq3ZG7uoiHNmps8Li4?=
 =?us-ascii?q?Ah5eKj36eccT9ivxgqZZm8acx5qvEYl5GjUXQJvoSuqlEC4VtfTiLQqPESczqn?=
 =?us-ascii?q?GGGbrEBg+f6Vxrr3bOE5CtKnGWK2MVzdRkRBmBOkNfhBoYUyk9np48Dgqq3tDu?=
 =?us-ascii?q?cF9l5jAN4V71sgBDxfhvNxn7T2fTvgOoaiovRZibLRpW6BxC5kjPPcyf6OJzAz?=
 =?us-ascii?q?9X/pm7oAORLWybYhxCDXsVVUycG1DjIr6u6MHC8+eCA+qxMeDOba+SqeBEVPeI?=
 =?us-ascii?q?2JGv0pZg/zmWLcWCJX1iD/w92kpeUnF1AcXZmzMTSyMJkyLBddKUpBC5+idvtM?=
 =?us-ascii?q?Cw7OzrWB7z5YuIE7ZTMdJv+w2vgaeeLeGQgjx1KS1f1pMKyn/F07wf3F8UiyFz?=
 =?us-ascii?q?eDihC7UAtSjRTK3Onq9bFQIUayR2NMFQ9aIzwhFNOdLHitPyzrN4juA6C1ZGVV?=
 =?us-ascii?q?zim8Glf88KI3u6NFPIGkmLLqmGJSbQzsHzYKO8T6BQjepOux2xvzabD1HsPjCZ?=
 =?us-ascii?q?mzb1UBCvNPlGjDuHMxxGpIG9bhFtBHD5Q9L7cRK7KsF4jD0szb0wh3PHLmocMT?=
 =?us-ascii?q?l6c0NQobyc9yJYgvNjG2Nf6nppN/WLmyGc7+PAMJYZreNrAjhol+Jd+Hk617pV?=
 =?us-ascii?q?7CReSPNpgifdst5urE+gkuSUzjpnURxOqitEhY6RvEViP7nZ+YdEWXre4B0N6m?=
 =?us-ascii?q?CQAQwQp9R5Et3vp7xQyt/XmaPzMjhC9dfU/coaB8fMKcOHMGAuMRzmGDPPCAsF?=
 =?us-ascii?q?TDirNXzQhkBHkfGS8GGVoYY+qpT2hJUOTbpbBxQJEaYeB0kjHtsELYxfWjIimK?=
 =?us-ascii?q?ScyskS6imQth7UEehcpJHMHtibBfHiNDyexbgMXBYS27qweYkVLIzwnUZrbl13?=
 =?us-ascii?q?gI7NM0HXWdREqCp7Z0k/p0Aboys2dXE6x0+wMlDl23QUD/Ph20Jnhw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AWAABFMvxbh0O0hNFjHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGDayeMEYwCgiGSMYR3FIFfLBMBgz+FJCI0CQ0BAwEBAQEBAQIBEwEBAQg?=
 =?us-ascii?q?NCQgpL4I2JIJjAwMBAiQLAUYGCQEBPhIDVBkFgxyCAgQBpyYziiKHXoQrgVc/g?=
 =?us-ascii?q?RGHeIVzAokjhXaQaQcCkSQjiWGHJyyZSoINTSODPIJQjgs+M4EFAQGJLimCJAE?=
 =?us-ascii?q?B?=
X-IPAS-Result: =?us-ascii?q?A0AWAABFMvxbh0O0hNFjHQEBBQEHBQGBUQgBCwGDayeMEYw?=
 =?us-ascii?q?CgiGSMYR3FIFfLBMBgz+FJCI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpL4I2JIJjA?=
 =?us-ascii?q?wMBAiQLAUYGCQEBPhIDVBkFgxyCAgQBpyYziiKHXoQrgVc/gRGHeIVzAokjhXa?=
 =?us-ascii?q?QaQcCkSQjiWGHJyyZSoINTSODPIJQjgs+M4EFAQGJLimCJAEB?=
X-IronPort-AV: E=Sophos;i="5.56,283,1539673200"; 
   d="scan'208";a="139609145"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 26 Nov 2018 09:52:23 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727131AbeK0ErD (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 26 Nov 2018 23:47:03 -0500
Received: from bhuna.collabora.co.uk ([46.235.227.227]:43850 "EHLO
        bhuna.collabora.co.uk" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726735AbeK0ErD (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 26 Nov 2018 23:47:03 -0500
Received: from [127.0.0.1] (localhost [127.0.0.1])
        (Authenticated sender: eballetbo)
        with ESMTPSA id 170A227DA2E
From: Enric Balletbo i Serra <enric.balletbo@collabora.com>
To: lee.jones@linaro.org
Cc: gwendal@chromium.org, drinkcat@chromium.org,
        linux-kernel@vger.kernel.org, groeck@chromium.org,
        kernel@collabora.com, bleung@chromium.org,
        Olof Johansson <olof@lixom.net>
Subject: [PATCH v2 7/8] platform/chrome: cros_ec_lightbar: instantiate only if the EC has a lightbar.
Date: Mon, 26 Nov 2018 18:51:57 +0100
Message-Id: <20181126175158.5425-8-enric.balletbo@collabora.com>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181126175158.5425-1-enric.balletbo@collabora.com>
References: <20181126175158.5425-1-enric.balletbo@collabora.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Due to the way attribute groups visibility work, the function
cros_ec_lightbar_attrs_are_visible is called multiple times, once per
attribute, and each of these calls makes an EC transaction. For what is
worth the EC log reports multiple errors on boot when the lightbar is
not available. Instead, check if the EC has a lightbar in the probe
function and only instantiate the device.

Ideally we should have instantiate the driver only if the
EC_FEATURE_LIGHTBAR is defined, but that's not possible because that flag
is not in the very first Pixel Chromebook (Link), only on Samus. So, the
driver is instantiated by his parent always.

This patch changes a bit the actual behaviour. Before the patch if an EC
doesn't have a lightbar an empty lightbar folder is created in
/sys/class/chromeos/<ec device>, after the patch the empty folder is not
created, so, the folder is only created if the lightbar exists.

Signed-off-by: Enric Balletbo i Serra <enric.balletbo@collabora.com>
---

Changes in v2:
- Removed ec_with_lightbar variable.

 drivers/platform/chrome/cros_ec_lightbar.c | 40 +++++++---------------
 1 file changed, 12 insertions(+), 28 deletions(-)

diff --git a/drivers/platform/chrome/cros_ec_lightbar.c b/drivers/platform/chrome/cros_ec_lightbar.c
index 874d0b03a95d..6f6a4cbfc3fc 100644
--- a/drivers/platform/chrome/cros_ec_lightbar.c
+++ b/drivers/platform/chrome/cros_ec_lightbar.c
@@ -43,7 +43,6 @@ static unsigned long lb_interval_jiffies = 50 * HZ / 1000;
  * If this is true, we won't do anything during suspend/resume.
  */
 static bool userspace_control;
-static struct cros_ec_dev *ec_with_lightbar;
 
 static ssize_t interval_msec_show(struct device *dev,
 				  struct device_attribute *attr, char *buf)
@@ -381,9 +380,6 @@ static int lb_manual_suspend_ctrl(struct cros_ec_dev *ec, uint8_t enable)
 	struct cros_ec_command *msg;
 	int ret;
 
-	if (ec != ec_with_lightbar)
-		return 0;
-
 	msg = alloc_lightbar_cmd_msg(ec);
 	if (!msg)
 		return -ENOMEM;
@@ -567,37 +563,26 @@ static struct attribute *__lb_cmds_attrs[] = {
 	NULL,
 };
 
-static bool ec_has_lightbar(struct cros_ec_dev *ec)
+static bool cros_ec_has_lightbar(struct cros_ec_dev *ec_dev)
 {
-	return !!get_lightbar_version(ec, NULL, NULL);
-}
-
-static umode_t cros_ec_lightbar_attrs_are_visible(struct kobject *kobj,
-						  struct attribute *a, int n)
-{
-	struct device *dev = container_of(kobj, struct device, kobj);
-	struct cros_ec_dev *ec = to_cros_ec_dev(dev);
-	struct platform_device *pdev = to_platform_device(ec->dev);
+	struct platform_device *pdev = to_platform_device(ec_dev->dev);
 	struct cros_ec_platform *pdata = pdev->dev.platform_data;
 	int is_cros_ec;
 
 	is_cros_ec = strcmp(pdata->ec_name, CROS_EC_DEV_NAME);
 
 	if (is_cros_ec != 0)
-		return 0;
+		return false;
 
-	/* Only instantiate this stuff if the EC has a lightbar */
-	if (ec_has_lightbar(ec)) {
-		ec_with_lightbar = ec;
-		return a->mode;
-	}
-	return 0;
+	if (!!get_lightbar_version(ec_dev, NULL, NULL))
+		return true;
+
+	return false;
 }
 
 struct attribute_group cros_ec_lightbar_attr_group = {
 	.name = "lightbar",
 	.attrs = __lb_cmds_attrs,
-	.is_visible = cros_ec_lightbar_attrs_are_visible,
 };
 
 static int cros_ec_lightbar_probe(struct platform_device *pd)
@@ -606,10 +591,9 @@ static int cros_ec_lightbar_probe(struct platform_device *pd)
 	struct device *dev = &pd->dev;
 	int ret;
 
-	if (!ec_dev) {
-		dev_err(dev, "No EC dev found\n");
-		return -EINVAL;
-	}
+	/* Only instantiate this stuff if the EC has a lightbar */
+	if (!cros_ec_has_lightbar(ec_dev))
+		return -ENODEV;
 
 	/* Take control of the lightbar from the EC. */
 	lb_manual_suspend_ctrl(ec_dev, 1);
@@ -640,7 +624,7 @@ static int __maybe_unused cros_ec_lightbar_resume(struct device *dev)
 {
 	struct cros_ec_dev *ec_dev = dev_get_drvdata(dev);
 
-	if (userspace_control || ec_dev != ec_with_lightbar)
+	if (userspace_control)
 		return 0;
 
 	return lb_send_empty_cmd(ec_dev, LIGHTBAR_CMD_RESUME);
@@ -650,7 +634,7 @@ static int __maybe_unused cros_ec_lightbar_suspend(struct device *dev)
 {
 	struct cros_ec_dev *ec_dev = dev_get_drvdata(dev);
 
-	if (userspace_control || ec_dev != ec_with_lightbar)
+	if (userspace_control)
 		return 0;
 
 	return lb_send_empty_cmd(ec_dev, LIGHTBAR_CMD_SUSPEND);
-- 
2.19.1

