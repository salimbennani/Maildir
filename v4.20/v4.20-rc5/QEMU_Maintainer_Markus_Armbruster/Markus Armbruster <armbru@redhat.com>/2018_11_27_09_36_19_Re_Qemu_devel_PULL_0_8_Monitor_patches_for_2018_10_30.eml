Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 27 Nov 2018 19:19:10 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 8EB615802E4
	for <like.xu@linux.intel.com>; Tue, 27 Nov 2018 01:49:23 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 27 Nov 2018 01:49:23 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AyGBomBMZXN4IS07ZzWMl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0I/v5rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZXshfSSJBDI2+?=
 =?us-ascii?q?YIUMAeUOMvpXoZTlp1YMrxWzChSgCe3zxjBWnX/7xrE63/g7HA3awAAtBc4CvX?=
 =?us-ascii?q?LJp9v1LqcSVuW1wbHPwzrZdfNW2ir96JPVeR09u/GMWKl/cdDMyUk0CwPKkE+Q?=
 =?us-ascii?q?opHiMjyPzOQNtnOU7/B9Ve+0kW4otRx+oji1yccwkIXGmoUVylXd+Ch/3Y07Js?=
 =?us-ascii?q?W4RVZlbdK4E5ZcrTyWO5Z1T884XW1ltiY3xqcbtZO5ZCQG1ogryhrFZ/CafYWE?=
 =?us-ascii?q?/AjvWPuSLDp2nn5pZrGyihCv+ka60OL8TNO70FNSoypFjNbMsncN2gTX6siGUf?=
 =?us-ascii?q?t94lyh1SyA1wDV9+FIO0c0lbDUK5I5w74wkIQcsVjbEyPohEn7j7Waelg59uWr?=
 =?us-ascii?q?8ejrfLvrq5+GO4NpiAzyKqEulda+AeQ8PAgORW+b+eGk2b3640L5RahKguQrna?=
 =?us-ascii?q?bHrpDVO8AbqreiDA9Sz4Yj7QqwACm90NgfmXkHLVFFdwydg4nmJlHDOPT4Dfa5?=
 =?us-ascii?q?g1SxnzZn3fHGPrv9AprTKnjPiqvufbF460NHzgozytZf551SCrEcOv7zXVXxtN?=
 =?us-ascii?q?PAAh8jLwO02/rnCMl61o4GXWKPA6yZP73IvV6H++IiOO2MZI4TuDbgJPkp/f/u?=
 =?us-ascii?q?jXklmVADeamlx4cYaHe9HqcuHkOCfHC5gssdCXxY+U06Tff2kxuEVjhcYWv0WL?=
 =?us-ascii?q?gzoTQyCYajBIGEQZixgbuHx2CiE5hLI2xLFF2IQkrubJiODvIFaSaOJZ14nzkZ?=
 =?us-ascii?q?ELSsVYIlkAujrRL30KZPKO3S9SsF85X5249u+ufRmBouoCFyFNmXyGqXTmt5zV?=
 =?us-ascii?q?8PEgc7wK1l6XxgggOb3LR1mexwD9Ff5/pVFAw9MMiP4fZ9DoXXUxjCY8zBYUyj?=
 =?us-ascii?q?SM+7Gi08VJplysULaVxgM8+vghDKw2yhBLpDxO/DP4A97q+Jhyu5HM160XuTkf?=
 =?us-ascii?q?B511Q=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AeAAC3Ev1bhxHrdtBdBxwBAQEEAQEHB?=
 =?us-ascii?q?AEBgVMFAQELAYEwKoIlE4xwjTR8iCGOI4FzFBgUiHIiNgcNAQMBAQEBAQECARM?=
 =?us-ascii?q?BAQEKCwkIGw4vgjYFAgMaAQaCWwEBAQECAQECQwopAwIBAQIGAQEKGAkdCAMBC?=
 =?us-ascii?q?wEEGDETBYJRS4F1BQgBBKZSijKKO4FSF4F/gRGCXTWBQYMthW4CiVWWNwmRMBi?=
 =?us-ascii?q?JUoc5mDeBTQKCBHAVgyeCM44pQDGBBxyLASktgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AeAAC3Ev1bhxHrdtBdBxwBAQEEAQEHBAEBgVMFAQELAYE?=
 =?us-ascii?q?wKoIlE4xwjTR8iCGOI4FzFBgUiHIiNgcNAQMBAQEBAQECARMBAQEKCwkIGw4vg?=
 =?us-ascii?q?jYFAgMaAQaCWwEBAQECAQECQwopAwIBAQIGAQEKGAkdCAMBCwEEGDETBYJRS4F?=
 =?us-ascii?q?1BQgBBKZSijKKO4FSF4F/gRGCXTWBQYMthW4CiVWWNwmRMBiJUoc5mDeBTQKCB?=
 =?us-ascii?q?HAVgyeCM44pQDGBBxyLASktgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,286,1539673200"; 
   d="scan'208";a="53472434"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 27 Nov 2018 01:49:22 -0800
Received: from localhost ([::1]:40963 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gRZzc-00054x-TK
	for like.xu@linux.intel.com; Tue, 27 Nov 2018 04:49:20 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:49845)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <armbru@redhat.com>) id 1gRZn7-00016h-8H
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 04:36:27 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <armbru@redhat.com>) id 1gRZn4-0000Ss-3K
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 04:36:25 -0500
Received: from mx1.redhat.com ([209.132.183.28]:60086)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <armbru@redhat.com>) id 1gRZn3-0000SU-SR
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 04:36:22 -0500
Received: from smtp.corp.redhat.com (int-mx01.intmail.prod.int.phx2.redhat.com
	[10.5.11.11])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 2E59A309EFFC;
	Tue, 27 Nov 2018 09:36:21 +0000 (UTC)
Received: from blackfin.pond.sub.org (ovpn-116-104.ams2.redhat.com
	[10.36.116.104])
	by smtp.corp.redhat.com (Postfix) with ESMTPS id C1D0E18AD4;
	Tue, 27 Nov 2018 09:36:20 +0000 (UTC)
Received: by blackfin.pond.sub.org (Postfix, from userid 1000)
	id 55E1F1132928; Tue, 27 Nov 2018 10:36:19 +0100 (CET)
From: Markus Armbruster <armbru@redhat.com>
To: Peter Xu <peterx@redhat.com>
References: <CAFEAcA8RdNrbCLL7tXY=e95N2Y0LcZdCPr3EuQo1_hu08qJuaQ@mail.gmail.com>
	<87sh0eyzb0.fsf@dusky.pond.sub.org> <20181107025628.GB17134@xz-x1>
	<CAFEAcA_FhkA_1DiDM2PWDw27dupsAdP==kBUxRrw5rGDnLzMwg@mail.gmail.com>
	<20181108024406.GB3170@xz-x1> <20181119061727.GA1901@xz-x1>
	<20181119070558.GB1901@xz-x1> <87ftvxlz3m.fsf@dusky.pond.sub.org>
	<20181120063143.GB24163@xz-x1> <874lcbbq4k.fsf@dusky.pond.sub.org>
	<20181121032819.GC24163@xz-x1> <8736ru6hju.fsf@dusky.pond.sub.org>
Date: Tue, 27 Nov 2018 10:36:19 +0100
In-Reply-To: <8736ru6hju.fsf@dusky.pond.sub.org> (Markus Armbruster's message
	of "Wed, 21 Nov 2018 08:00:53 +0100")
Message-ID: <87tvk2svzg.fsf@dusky.pond.sub.org>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/26.1 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.11
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.41]);
	Tue, 27 Nov 2018 09:36:21 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PULL 0/8] Monitor patches for 2018-10-30
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Peter Maydell <peter.maydell@linaro.org>,
	QEMU Developers <qemu-devel@nongnu.org>,
	"Dr. David Alan Gilbert" <dgilbert@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Markus Armbruster <armbru@redhat.com> writes:

> Peter Xu <peterx@redhat.com> writes:
>
>> On Tue, Nov 20, 2018 at 06:44:27PM +0100, Markus Armbruster wrote:
>>> 
>>> We want the test to drive QEMU into the "queue full" state with an
>>> out-of-band command unreceived, then watch the queue drain and the
>>> out-of-band command overtaking part of it.
>>> 
>>> Driving QEMU into this state is easy enough: we can use a blocking
>>> in-band command to plug the queue's drain.
>>> 
>>> Once we have QEMU in this state, we can unblock that command and watch
>>> the show.  But we really have to wait until QEMU reaches this state
>>> before we unblock.
>>> 
>>> Our problem is the test can't easily observe when QEMU reaches this
>>> state.
>>> 
>>> You mentioned sending a "queue full" event, and that adding such an
>>> event just for testing is hard to justify.  I agree.  Could such an
>>> event have a non-testing use?  All I can think of is letting the
>>> management application detect "we mismanaged the queue and compromised
>>> monitor availability for out-of-band commands".  Doesn't sound
>>> particularly convincing to me, but we can talk with libvirt guys to see
>>> whether they want it.
>>> 
>>> Can the test observe the monitor is suspended just from the behavior of
>>> its monitor socket?  Not reliably: sending lots of input eventually
>>> fails with EAGAIN when the monitor is suspended, but it can also fail
>>> when the monitor reads the input too slowly.
>>> 
>>> Can the test observe the monitor_suspend trace point?  Awkward, because
>>> the trace backends are configurable.  We could have the test monitor the
>>> "simple" backend's output file, skipping the test when "simple" isn't
>>> available.  Hmm.
>>> 
>>> Here comes the heavy hammer: extend the qtest protocol.  When the
>>> monitor suspends / resumes, send a suitable asynchronous message to the
>>> qtest socket.  Have libqtest use that to track monitor suspend state.
>>> The test can then busy-wait for the state to flip to suspended.
>>> 
>>> Other ideas?
>>
>> I don't have more to add (already a lot of ideas! :-).  I'd say I
>> would prefer to start with the queue full event and we can discuss
>> with libvirt on that after 3.1 when proper.  And besides libvirt
>> (which I am not quite sure whether this event could be really useful
>> in the near future) maybe it can also be used as a hint for any new
>> QMP client when people want to complain about "hey, why my QMP client
>> didn't get any respond from QEMU" - if the client didn't get any
>> response but however it sees this event then we know the answer even
>> before debugging more.
>
> Good point.
>
> Say we implement full flow control, i.e. we also suspend when the output
> buffer becomes too large.  Then the event won't really help, because the
> client won't see it until it fixed the situation by draining the output
> buffer.  But it won't really hurt, either: even a client that misbehaves
> in a really unfortunate way can't trigger many events without also
> generating much more other output.  Orders of magnitude more.
>
>>> >> > Markus, do you want me to repost a new version with this change?  Is
>>> >> > it still possible to have the oob-default series for 3.1?
>>> >> 
>>> >> We're trying to, but we need to get the test to work.
>>> >> 
>>> >> Two problems:
>>> >> 
>>> >> 1. The test doesn't seem to succed at testing "queue full".
>>> >> 
>>> >> 2. The test might still be racy.
>>> >> 
>>> >> I suspect the code we test is solid, and it's "only" the test we screwed
>>> >> up.
>>> >
>>> > I agree.  Do you have better idea to test queue full?  I'd be more
>>> > than glad to try any suggestions here, otherwise I am thinking whether
>>> > we can just simply drop the queue full test (which is the last patch
>>> > of the oob series) for now but merge the rest.  We can introduce new
>>> > queue full test after 3.1 if we want, though again I really doubt
>>> > whether we can without new things introduced into the procedure.
>>> >
>>> > Thoughts?
>>> 
>>> I'm afraid dropping the test (for now?) is what we have to do.
>>
>> Agreed.
>
> Okay, I'll prepare the pull request later today.

I didn't.  I decided it's too late for 3.1.  Sigh...

I'm keeping it queued for 4.0.

