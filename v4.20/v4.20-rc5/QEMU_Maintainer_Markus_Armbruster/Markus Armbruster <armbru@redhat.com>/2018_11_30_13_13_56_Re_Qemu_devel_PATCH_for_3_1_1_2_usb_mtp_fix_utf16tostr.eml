Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:17:53 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id D42D3580224
	for <like.xu@linux.intel.com>; Fri, 30 Nov 2018 05:15:36 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga002-1.fm.intel.com with ESMTP; 30 Nov 2018 05:15:36 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A5J4e5RanJ0VaRb94mShqiNf/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZrs+8bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjmk8qxlSgLniD?=
 =?us-ascii?q?0fOjA57m/XhMJ+g6BYrh2vqBNw35PaYJmXOfR8ca7RYN0XSXZfUcZKTCFBHp+w?=
 =?us-ascii?q?YpETA+YdJ+tUs4/wrEYOoxukAgmsAfvixDhSiX/s3q06zv8hGhza0Qw6GtIBq2?=
 =?us-ascii?q?7UrMjuNKcOT++11rTDwDLZYPNM3Dfy85LIcg06rPGWQ71/bMrRxlMzFw/fklqQ?=
 =?us-ascii?q?ronlMiqT2+8QsGab9/JtWfyzh2MksQ19vyWjy8Q2hoXXiI8YykrI+Th7zYotO9?=
 =?us-ascii?q?G0VEp2bcS5HJZeqS2WLZZ6T8AsTm1ypio3ybsLsoOhcicQ0pQo3RvfZuSHc4eW?=
 =?us-ascii?q?5hLjU/6cITN5hHJ+ZLK/nAy+8Uemyu3hTMW010xKriVdntnNsHACyQDT59CZRv?=
 =?us-ascii?q?dh/UqtwyuD2x3Q5+1eP0w5m6rWJ4Q8zrMyjpYTtF7MHi7ymEX4lq+WcUAk9/Cx?=
 =?us-ascii?q?6+v5Z7Xmu4aQOJJqhQHgLKsuntWzDv8/MggTWWiU5fqz1Kbk8U39QbVKjeM5nr?=
 =?us-ascii?q?PWsZDHPckboq+5AwlI0ocs8Rq/DjGm0MgGknkDNl5KZBWHj43yNlHIJ/D4C/i/?=
 =?us-ascii?q?g1KxkDtxwPDGJLLhDo3XLnffiLfhYap960lExQo3zNBf5IxbBqsOIfLuQULxsN?=
 =?us-ascii?q?3YDhkkMw272ernCdN91p8AVmKLGKOWLKTSsVrbrt8pOPSGMY8JpC7meb9i4//1?=
 =?us-ascii?q?kWR/n1gbcq+0m5wNZze9F/ViJkyfJn30ntYGF3xNpwc7UanmhUOPVW1uYW2vVf?=
 =?us-ascii?q?c57zA/FIX0FIrGW8WhjaKM2GKhE4RLa3taIlaLF3juasODQfhbcz+YIMJqjmkZ?=
 =?us-ascii?q?U6O8QZQqzxCkuVzGzO9II/DYsg0fu5zm3d5zr7nQjxgi+DhcFcmR02iRCWpzmz?=
 =?us-ascii?q?VbaSUx2fVaqFZ+10zL+LJ9ieZFDsBe/bsdWx0/P4TB5/Z3B9D7RkTKedLfGwXu?=
 =?us-ascii?q?ecmvHTxkFoF5+NQJeUsoQ9g=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A6AAA+NwFchxHrdtBjHQEBBQEHBQGBU?=
 =?us-ascii?q?gcBCwGBMIJPE4xwiymCDXyII44pgXEWGBSHdiI1CA0BAwEBAQEBAQIBEwEBAQo?=
 =?us-ascii?q?LCQgbDi+CNgUCAxgJglwBAgIBAQIkHwopAwIBAQIGAQEKDhMdCAMBCwEEGDETB?=
 =?us-ascii?q?YMcgXUFCAEEp2Izii2MGxeBf4ERgl01hG2FbwKPKZEICZE3GIlZh0YsmC6BSAO?=
 =?us-ascii?q?CCHAVgyeCJAMXjh5AMYEHHIszVYF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0A6AAA+NwFchxHrdtBjHQEBBQEHBQGBUgcBCwGBMIJPE4x?=
 =?us-ascii?q?wiymCDXyII44pgXEWGBSHdiI1CA0BAwEBAQEBAQIBEwEBAQoLCQgbDi+CNgUCA?=
 =?us-ascii?q?xgJglwBAgIBAQIkHwopAwIBAQIGAQEKDhMdCAMBCwEEGDETBYMcgXUFCAEEp2I?=
 =?us-ascii?q?zii2MGxeBf4ERgl01hG2FbwKPKZEICZE3GIlZh0YsmC6BSAOCCHAVgyeCJAMXj?=
 =?us-ascii?q?h5AMYEHHIszVYF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,298,1539673200"; 
   d="scan'208";a="42237078"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 30 Nov 2018 05:14:35 -0800
Received: from localhost ([::1]:60007 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gSict-0000hn-70
	for like.xu@linux.intel.com; Fri, 30 Nov 2018 08:14:35 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:37035)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <armbru@redhat.com>) id 1gSica-0000eK-Rc
	for qemu-devel@nongnu.org; Fri, 30 Nov 2018 08:14:21 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <armbru@redhat.com>) id 1gSicP-0003dk-EG
	for qemu-devel@nongnu.org; Fri, 30 Nov 2018 08:14:11 -0500
Received: from mx1.redhat.com ([209.132.183.28]:53040)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <armbru@redhat.com>) id 1gSicN-0003Qh-6q
	for qemu-devel@nongnu.org; Fri, 30 Nov 2018 08:14:03 -0500
Received: from smtp.corp.redhat.com (int-mx01.intmail.prod.int.phx2.redhat.com
	[10.5.11.11])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 18C593001FF7
	for <qemu-devel@nongnu.org>; Fri, 30 Nov 2018 13:14:01 +0000 (UTC)
Received: from blackfin.pond.sub.org (ovpn-116-104.ams2.redhat.com
	[10.36.116.104])
	by smtp.corp.redhat.com (Postfix) with ESMTPS id 5E9DA601B9;
	Fri, 30 Nov 2018 13:13:58 +0000 (UTC)
Received: by blackfin.pond.sub.org (Postfix, from userid 1000)
	id D330F1132928; Fri, 30 Nov 2018 14:13:56 +0100 (CET)
From: Markus Armbruster <armbru@redhat.com>
To: Gerd Hoffmann <kraxel@redhat.com>
References: <20181130111222.25386-1-kraxel@redhat.com>
	<20181130111222.25386-2-kraxel@redhat.com>
Date: Fri, 30 Nov 2018 14:13:56 +0100
In-Reply-To: <20181130111222.25386-2-kraxel@redhat.com> (Gerd Hoffmann's
	message of "Fri, 30 Nov 2018 12:12:21 +0100")
Message-ID: <87woouk8rv.fsf@dusky.pond.sub.org>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/26.1 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.11
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.45]);
	Fri, 30 Nov 2018 13:14:01 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH for-3.1 1/2] usb-mtp: fix utf16_to_str
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Gerd Hoffmann <kraxel@redhat.com> writes:

> Make utf16_to_str return an allocated string.  Remove the assumtion that
> the number of string bytes equals the number of utf16 chars (which is
> only true for ascii chars).  Instead call wcstombs twice, once to figure
> the storage size and once for the actual conversion (as suggested by the
> wcstombs manpage).
>
> Reported-by: Michael Hanselmann (hansmi.ch)
> Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
> ---
>  hw/usb/dev-mtp.c | 17 +++++++++++------
>  1 file changed, 11 insertions(+), 6 deletions(-)
>
> diff --git a/hw/usb/dev-mtp.c b/hw/usb/dev-mtp.c
> index 00a3691bae..fbe1ace035 100644
> --- a/hw/usb/dev-mtp.c
> +++ b/hw/usb/dev-mtp.c
> @@ -1593,17 +1593,22 @@ static void usb_mtp_cancel_packet(USBDevice *dev, USBPacket *p)
>      fprintf(stderr, "%s\n", __func__);
>  }
>  
> -static void utf16_to_str(uint8_t len, uint16_t *arr, char *name)
> +static char *utf16_to_str(uint8_t len, uint16_t *arr)
>  {
> -    int count;
> -    wchar_t *wstr = g_new0(wchar_t, len);
> +    wchar_t *wstr = g_new0(wchar_t, len + 1);
> +    int count, dlen;
> +    char *dest;
>  
>      for (count = 0; count < len; count++) {
>          wstr[count] = (wchar_t)arr[count];
>      }
> +    wstr[count] = 0;
>  
> -    wcstombs(name, wstr, len);
> +    dlen = wcstombs(NULL, wstr, 0) + 1;
> +    dest = g_malloc(dlen);
> +    wcstombs(dest, wstr, dlen);
>      g_free(wstr);
> +    return dest;
>  }

Preexisting: casting uint16_t to wchar_t is iffy for at least two
reasons:

* When wchar_t is UCS-4, things fall apart for surrogate pairs.  For
  instance, the surrogate pair

      uint16_t arr = { 0xD834, 0xDD1E };

  should map to the single wchar_t 0x1D11E.

* wchar_t needn't even be Unicode.  It might well be on any host we care
  for, but are you *sure*?

I guess g_utf16_to_utf8() would be differently wrong: it converts to
UTF-8, but we need to convert to the current locale's multibyte string.

>  
>  /* Wrapper around write, returns 0 on failure */
> @@ -1703,7 +1708,7 @@ static void usb_mtp_write_metadata(MTPState *s)
>  {
>      MTPData *d = s->data_out;
>      ObjectInfo *dataset = (ObjectInfo *)d->data;
> -    char *filename = g_new0(char, dataset->length);
> +    char *filename;
>      MTPObject *o;
>      MTPObject *p = usb_mtp_object_lookup(s, s->dataset.parent_handle);
>      uint32_t next_handle = s->next_handle;
> @@ -1711,7 +1716,7 @@ static void usb_mtp_write_metadata(MTPState *s)
>      assert(!s->write_pending);
>      assert(p != NULL);
>  
> -    utf16_to_str(dataset->length, dataset->filename, filename);
> +    filename = utf16_to_str(dataset->length, dataset->filename);
>  
>      o = usb_mtp_object_lookup_name(p, filename, dataset->length);
>      if (o != NULL) {

