Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 29 Nov 2018 18:19:28 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id BF7BA5803ED
	for <like.xu@linux.intel.com>; Thu, 29 Nov 2018 02:17:41 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 29 Nov 2018 02:17:41 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3Acs5fPxd7g5R3AQfDW6qGob8ilGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc26YR2N2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRBDI2i?=
 =?us-ascii?q?YYsBAegOM+VWoIbyu1QAsAO+CAuuCu7g1zNFiGP60rMh0+k6DQHKwBYtE84SvH?=
 =?us-ascii?q?nOsNn4MroZX+CvzKnPyDXOd/RY1i3n6IjLbxAhuuyHUK5qccrU0kYvDR7Fjk6M?=
 =?us-ascii?q?qYP7JTOey+MAvHKB7+plTu2vkXMnphprojex28gsipPGhp4Pxl/Y8iV5xZ84KN?=
 =?us-ascii?q?ulQ0B1Zt6kFYFftyCcN4ZuXswiRX1otDw7yr0BoZK7cykKyIgnxx7CcPOLaZSH?=
 =?us-ascii?q?4hXmVOqJLjd4gm9ldKi4hxao/kitzPD3WMqs0FtSsCZJjtrBumoQ2xDO6cWLUO?=
 =?us-ascii?q?Vx80mh1DqVygze6PlILV4omaffMZIt37A9moQJvUjeHSL7ll/6gLGVe0gi5+Om?=
 =?us-ascii?q?8f7oYq/8qZ+ZL4J0ih/xMqApmsGnBeQ4MxMOX3SA+eim273j+1D5TK9Njv0sna?=
 =?us-ascii?q?nVqJHaJcIFqa6lGwJZzJov5hWlAzu7zdgVnmMLIExLdR+HlYTlJlPDLOj9Dfil?=
 =?us-ascii?q?glSslDlrx+rBPr3kGpjNN2bMkLL8fbpk9kFT1hQzws5b555NEb4BJ+/zWkntu9?=
 =?us-ascii?q?PGFR81NAi0w+fkCNpjzI8fVn+PD7edMKPTt1+I++0uL/ONZI8TpDbyNfwl6+Ty?=
 =?us-ascii?q?gn8+nF8QZq+p3ZwRaHC3GPRmPl+VYX32gtcOCWsKpBYxTPT2iF2eVj5ef3KyX6?=
 =?us-ascii?q?M/5j4lEo6nAprDS5upgLyA2ie7A5JXanpHClCKDXfnaYGEV+0QZyKVJ88y2gEC?=
 =?us-ascii?q?TqWrHo89yQm15ki9z7t8MvGS/CoeupT+kt9v6KrWnBA28DVySMOFz2CKSXozh2?=
 =?us-ascii?q?4NWno60b5ypR9AzEye2/19iv1cCdsB/v5MT0I2OIDRy6lgBsnvVxndVtGOTlmg?=
 =?us-ascii?q?X5OhGz5mVc87wdIFfxNgHc6/hAvIxSugDuwpkOmnDZo1/6aU/3X3Pcdk1nuO/q?=
 =?us-ascii?q?A7hV40S4MbOWSgh6N79wKPXtXhnECQlqLsfqMZin3j7mCGmE+HpkJFS0ZZS6DP?=
 =?us-ascii?q?R20EekbM5YDw/EbIVaKGE7krMgJdj8WFL/0ZOZXSkVxaSaK7a5zlaGWrljL1XE?=
 =?us-ascii?q?7Qyw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AbAACFvP9bhxHrdtBeBxwBAQEEAQEHB?=
 =?us-ascii?q?AEBgVEHAQELAYEwKoEPgSmMEV+LKVABAQaBNXyIFA6OJBSBXxQYCwmHciI0CQ0?=
 =?us-ascii?q?BAwEBAQEBAQIBEwEBAQoLCQgbDiMMgjYFAgMaAQaCXAECAgEBAiQfCh4LAwIBA?=
 =?us-ascii?q?QIGAQEKIQQZCAMBCwEEDQcEMRMFglFLAYFpAwgFCAEECqc1M4QtAQMCDEKDAw2?=
 =?us-ascii?q?CFwWMFhd4gQeBEYJdNYJXRwEBAQKBQgUEhW4CiQeMQ4orLgmGfoYYcIMsGIlYh?=
 =?us-ascii?q?0SNV4ELiWqBRoINcBU7gmyCJxcSgziFFIVAQDEBgQYcik8pLYF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0AbAACFvP9bhxHrdtBeBxwBAQEEAQEHBAEBgVEHAQELAYE?=
 =?us-ascii?q?wKoEPgSmMEV+LKVABAQaBNXyIFA6OJBSBXxQYCwmHciI0CQ0BAwEBAQEBAQIBE?=
 =?us-ascii?q?wEBAQoLCQgbDiMMgjYFAgMaAQaCXAECAgEBAiQfCh4LAwIBAQIGAQEKIQQZCAM?=
 =?us-ascii?q?BCwEEDQcEMRMFglFLAYFpAwgFCAEECqc1M4QtAQMCDEKDAw2CFwWMFhd4gQeBE?=
 =?us-ascii?q?YJdNYJXRwEBAQKBQgUEhW4CiQeMQ4orLgmGfoYYcIMsGIlYh0SNV4ELiWqBRoI?=
 =?us-ascii?q?NcBU7gmyCJxcSgziFFIVAQDEBgQYcik8pLYF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,294,1539673200"; 
   d="scan'208";a="42795202"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 29 Nov 2018 02:17:32 -0800
Received: from localhost ([::1]:53217 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gSJNz-00067M-Pj
	for like.xu@linux.intel.com; Thu, 29 Nov 2018 05:17:31 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:47562)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <armbru@redhat.com>) id 1gSJNZ-000643-Ix
	for qemu-devel@nongnu.org; Thu, 29 Nov 2018 05:17:12 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <armbru@redhat.com>) id 1gSJNW-0004Z2-EC
	for qemu-devel@nongnu.org; Thu, 29 Nov 2018 05:17:05 -0500
Received: from mx1.redhat.com ([209.132.183.28]:12976)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <armbru@redhat.com>) id 1gSJNW-0004YO-5U
	for qemu-devel@nongnu.org; Thu, 29 Nov 2018 05:17:02 -0500
Received: from smtp.corp.redhat.com (int-mx03.intmail.prod.int.phx2.redhat.com
	[10.5.11.13])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 571C089AEF;
	Thu, 29 Nov 2018 10:17:01 +0000 (UTC)
Received: from blackfin.pond.sub.org (ovpn-116-104.ams2.redhat.com
	[10.36.116.104])
	by smtp.corp.redhat.com (Postfix) with ESMTPS id 5AD55608E6;
	Thu, 29 Nov 2018 10:16:58 +0000 (UTC)
Received: by blackfin.pond.sub.org (Postfix, from userid 1000)
	id DD6121132928; Thu, 29 Nov 2018 11:16:56 +0100 (CET)
From: Markus Armbruster <armbru@redhat.com>
To: Daniel Henrique Barboza <danielhb413@gmail.com>
References: <20181109173309.25212-1-danielhb413@gmail.com>
	<20181109173309.25212-2-danielhb413@gmail.com>
Date: Thu, 29 Nov 2018 11:16:56 +0100
In-Reply-To: <20181109173309.25212-2-danielhb413@gmail.com> (Daniel Henrique
	Barboza's message of "Fri, 9 Nov 2018 15:33:07 -0200")
Message-ID: <87pnuo9oiv.fsf@dusky.pond.sub.org>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/26.1 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.13
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.26]);
	Thu, 29 Nov 2018 10:17:01 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH for-3.2 v10 1/3] qmp: query-current-machine
 with wakeup-suspend-support
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: ehabkost@redhat.com, mst@redhat.com, qemu-devel@nongnu.org,
	mdroth@linux.vnet.ibm.com, armbru@redhat.com, imammedo@redhat.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Daniel Henrique Barboza <danielhb413@gmail.com> writes:

> When issuing the qmp/hmp 'system_wakeup' command, what happens in a
> nutshell is:
>
> - qmp_system_wakeup_request set runstate to RUNNING, sets a wakeup_reason
> and notify the event
> - in the main_loop, all vcpus are paused, a system reset is issued, all
> subscribers of wakeup_notifiers receives a notification, vcpus are then
> resumed and the wake up QAPI event is fired
>
> Note that this procedure alone doesn't ensure that the guest will awake
> from SUSPENDED state - the subscribers of the wake up event must take
> action to resume the guest, otherwise the guest will simply reboot. At
> this moment, only the ACPI machines via acpi_pm1_cnt_init has wake-up
> from suspend support.

the ACPI machines via acpi_pm1_cnt_init have

>
> However, only the presence of 'system_wakeup' is required for QGA to
> support 'guest-suspend-ram' and 'guest-suspend-hybrid' at this moment.
> This means that the user/management will expect to suspend the guest using
> one of those suspend commands and then resume execution using system_wakeup,
> regardless of the support offered in system_wakeup in the first place.
>
> This patch creates a new API called query-current-machine [1], that holds
> a new flag called 'wakeup-suspend-support' that indicates if the guest
> supports wake up from suspend via system_wakeup. The machine is considered
> to implement wake-up support if a call to a new 'qemu_register_wakeup_support'
> is made during its init, as it is now being done inside acpi_pm1_cnt_init.

In xen_hvm_init(), too.

Doesn't that contradict "only the ACPI machines via acpi_pm1_cnt_init
has wake-up from suspend support"?

> This allows for any other machine type to declare wake-up support regardless
> of ACPI state or wakeup_notifiers subscription, making easier for
> newer implementations that might have its own mechanisms in the future.

their own mechanisms

>
> This is the expected output of query-current-machine when running a x86
> guest:
>
> {"execute" : "query-current-machine"}
> {"return": {"wakeup-suspend-support": true}}
>
> Running the same x86 guest, but with the --no-acpi option:
>
> {"execute" : "query-current-machine"}
> {"return": {"wakeup-suspend-support": false}}
>
> This is the output when running a pseries guest:
>
> {"execute" : "query-current-machine"}
> {"return": {"wakeup-suspend-support": false}}
>
> With this extra tool, management can avoid situations where a guest
> that does not have proper suspend/wake capabilities ends up in
> inconsistent state (e.g.
> https://github.com/open-power-host-os/qemu/issues/31).
>
> [1] the decision of creating the query-current-machine API is based
> on discussions in the QEMU mailing list where it was decided that
> query-target wasn't a proper place to store the wake-up flag, neither
> was query-machines because this isn't a static property of the
> machine object. This new API can then be used to store other
> dynamic machine properties that are scattered around the code
> ATM. More info at:
> https://lists.gnu.org/archive/html/qemu-devel/2018-05/msg04235.html
>
> Reported-by: Balamuruhan S <bala24@linux.vnet.ibm.com>
> Signed-off-by: Daniel Henrique Barboza <danielhb413@gmail.com>
> ---
>  hw/acpi/core.c          |  6 ++++++
>  hw/i386/xen/xen-hvm.c   |  5 +++++
>  include/sysemu/sysemu.h |  1 +
>  qapi/misc.json          | 24 ++++++++++++++++++++++++
>  vl.c                    | 19 +++++++++++++++++++
>  5 files changed, 55 insertions(+)
>
> diff --git a/hw/acpi/core.c b/hw/acpi/core.c
> index aafdc61648..52e18d7810 100644
> --- a/hw/acpi/core.c
> +++ b/hw/acpi/core.c
> @@ -617,6 +617,12 @@ void acpi_pm1_cnt_init(ACPIREGS *ar, MemoryRegion *parent,
>      ar->pm1.cnt.s4_val = s4_val;
>      ar->wakeup.notify = acpi_notify_wakeup;
>      qemu_register_wakeup_notifier(&ar->wakeup);
> +
> +    /*
> +     * Register wake-up support in QMP query-current-machine API
> +     */
> +    qemu_register_wakeup_support();
> +

Not sure we really need the comment.  Up to the maintainer.

>      memory_region_init_io(&ar->pm1.cnt.io, memory_region_owner(parent),
>                            &acpi_pm_cnt_ops, ar, "acpi-cnt", 2);
>      memory_region_add_subregion(parent, 4, &ar->pm1.cnt.io);
> diff --git a/hw/i386/xen/xen-hvm.c b/hw/i386/xen/xen-hvm.c
> index 935a3676c8..2143d33b18 100644
> --- a/hw/i386/xen/xen-hvm.c
> +++ b/hw/i386/xen/xen-hvm.c
> @@ -1405,6 +1405,11 @@ void xen_hvm_init(PCMachineState *pcms, MemoryRegion **ram_memory)
>      state->wakeup.notify = xen_wakeup_notifier;
>      qemu_register_wakeup_notifier(&state->wakeup);
>  
> +    /*
> +     * Register wake-up support in QMP query-current-machine API
> +     */
> +    qemu_register_wakeup_support();
> +

Likewise.

>      rc = xen_map_ioreq_server(state);
>      if (rc < 0) {
>          goto err;
> diff --git a/include/sysemu/sysemu.h b/include/sysemu/sysemu.h
> index 8d6095d98b..0446adacc6 100644
> --- a/include/sysemu/sysemu.h
> +++ b/include/sysemu/sysemu.h
> @@ -77,6 +77,7 @@ void qemu_register_suspend_notifier(Notifier *notifier);
>  void qemu_system_wakeup_request(WakeupReason reason);
>  void qemu_system_wakeup_enable(WakeupReason reason, bool enabled);
>  void qemu_register_wakeup_notifier(Notifier *notifier);
> +void qemu_register_wakeup_support(void);
>  void qemu_system_shutdown_request(ShutdownCause reason);
>  void qemu_system_powerdown_request(void);
>  void qemu_register_powerdown_notifier(Notifier *notifier);
> diff --git a/qapi/misc.json b/qapi/misc.json
> index 6c1c5c0a37..9b86576e61 100644
> --- a/qapi/misc.json
> +++ b/qapi/misc.json
> @@ -2008,6 +2008,30 @@
>  ##
>  { 'command': 'query-machines', 'returns': ['MachineInfo'] }
>  
> +##
> +# @CurrentMachineParams:
> +#
> +# Information describing the running machine parameters.
> +#
> +# @wakeup-suspend-support: true if the machine supports wake up from
> +#                          suspend
> +#
> +# Since: 3.2.0

The next release is going to be named 4.0.  Perhaps the maintainer can
fix that up for you.

> +##
> +{ 'struct': 'CurrentMachineParams',
> +  'data': { 'wakeup-suspend-support': 'bool'} }
> +
> +##
> +# @query-current-machine:
> +#
> +# Return information on the current virtual machine.
> +#
> +# Returns: CurrentMachineParams
> +#
> +# Since: 3.2.0
> +##
> +{ 'command': 'query-current-machine', 'returns': 'CurrentMachineParams' }
> +
>  ##
>  # @CpuDefinitionInfo:
>  #
> diff --git a/vl.c b/vl.c
> index 55bab005b6..5813a8785f 100644
> --- a/vl.c
> +++ b/vl.c
> @@ -191,6 +191,7 @@ bool boot_strict;
>  uint8_t *boot_splash_filedata;
>  size_t boot_splash_filedata_size;
>  uint8_t qemu_extra_params_fw[2];
> +bool wakeup_suspend_enabled;
>  
>  int icount_align_option;
>  
> @@ -1782,6 +1783,24 @@ void qemu_register_wakeup_notifier(Notifier *notifier)
>      notifier_list_add(&wakeup_notifiers, notifier);
>  }
>  
> +void qemu_register_wakeup_support(void)
> +{
> +    wakeup_suspend_enabled = true;
> +}
> +
> +static bool qemu_wakeup_suspend_enabled(void)
> +{
> +    return wakeup_suspend_enabled;
> +}
> +
> +CurrentMachineParams *qmp_query_current_machine(Error **errp)
> +{
> +    CurrentMachineParams *params = g_malloc0(sizeof(*params));
> +    params->wakeup_suspend_support = qemu_wakeup_suspend_enabled();
> +
> +    return params;
> +}
> +
>  void qemu_system_killed(int signal, pid_t pid)
>  {
>      shutdown_signal = signal;

Patch looks good to me.

