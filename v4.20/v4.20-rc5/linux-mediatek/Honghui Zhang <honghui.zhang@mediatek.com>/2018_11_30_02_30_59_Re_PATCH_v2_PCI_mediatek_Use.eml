Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 30 Nov 2018 11:05:56 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 3BB58580460;
	Thu, 29 Nov 2018 18:31:17 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga006-1.jf.intel.com with ESMTP; 29 Nov 2018 18:31:17 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ALs64/BI+Jq3EacdirNmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULvT8rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZXchfSixPDJ2y?=
 =?us-ascii?q?YYQNAeoOIeFWoYbyqFsVtRuzBxKhBP/txzJSmnP7x7E23uYnHArb3AIgBdUOsH?=
 =?us-ascii?q?HModv3M6cSV++1zKnVzTXCcvhZ2jf955LOchAuvPqBWrJwcc3XyUkgFwPFk1SQ?=
 =?us-ascii?q?pZbkPjOVzOsNtWeb4vFlVe2xlmEnqht+oiSxyccvkIXGmoUVylXd+Ch/3Y07Js?=
 =?us-ascii?q?W4RVZlbdK4FJZcrTyWOoVoTs84Xm1luzo2xqcHtJO5ZCQG1Y4rywDDZ/GJaYSE?=
 =?us-ascii?q?/xPuWeiLLTp7mX5ofq+0iQyo/ki60OL8U9G50FZUoSpBldnBrm4N1xPN5cidUP?=
 =?us-ascii?q?d9/Vmu2SyJ1w/N7uFIO0c0lbDUK5I5w74wkIQcsVjbEyPohEn7iLWaelgq9+S2?=
 =?us-ascii?q?8ejrf7brqoOGO4J1iAzyKqEulda+AeQ8PAgORW+b+eGk2b3n/E35RqhKj/Ivnq?=
 =?us-ascii?q?narp/aP8IbqbC9AwNM1YYi5RC/ACm80NkDg3kHI0xKeAidg4jqJV7OOvb4Aum7?=
 =?us-ascii?q?g1i2lzdr3f/GMqX7AprRNnjDjKvhfbFl5k5YyQozzs5Q64hbC7EcO//zXk7xtN?=
 =?us-ascii?q?rFDh42KQC0wuDnCMlj2YMaQ26AHqiZMKbKu1+S+u0vO/WMZJMSuDvlK/gq/f/u?=
 =?us-ascii?q?jWMjll8aZ6Wp3YYXZ2q+HvRpOEiZZXvsgtEcEWYFpAY+TerqiEGcXj5XfXq9Q6?=
 =?us-ascii?q?U85jQjAoK8EYjDXpytgKCG3CqjHJ1WYX5JBkqPEXfvcYWEXfAMZTmWIs9glDwE?=
 =?us-ascii?q?SLegR5Ug1RGoqA/11b5nIvDI9S0fsJLpzMJ16PHLlREu6Tx0CNyQ3HuWT2F0mW?=
 =?us-ascii?q?MIRCU63Lplrkx/0VqD1al4g/pFFd1c/f9JUwE6NYLCwOx+Edz9RgXBftKRQla8?=
 =?us-ascii?q?XtqmGS0xTs42w9IWYEZyAdOiggrH3yqrGbAVkbOLCYcw8qLd2XjxOsl8x2zH1K?=
 =?us-ascii?q?knk1kpXM9POXe6ia548gjZH5TJnFmBl6a2aaQc2zbA+3qZwmqQok5USg5wXr/D?=
 =?us-ascii?q?XXAEeETWq9P15kfBT7+rDbQqKQ9Byc+EKqtXZdzll1RGRPH/ONvAZ2K9gXu/BR?=
 =?us-ascii?q?GNxrmUdorlZ30d3DnBCEgDiw0c4GyJNRYgCSu7o2LRFjpuFUnxbEPq6uR+rHK7?=
 =?us-ascii?q?TkkpzwCFdUFh1ry1+gILivyYUf8cwrUEuCI5oTVuAFm9x87WC8aHpwd5YKVcYN?=
 =?us-ascii?q?Y94FBb1WLZtw1xJICgI7plhl4EdwR3vkXu1xpsB4VEkMgqqm4qzQVoJaKZ1lNB?=
 =?us-ascii?q?ay2X3ZTqNrLLLWny+Qila7TK1VHGzNaW5qAP5ewipFXnog6oGVQt8nV939ZOzn?=
 =?us-ascii?q?uT+4/FDAwRUZL2TEY67Bx6p7DcYikg6ILYz3xsMa+osjDc39IlHvcqyhGlf91H?=
 =?us-ascii?q?KqOLCBfyE9EGB8ipMOErm0WpYggYM+xI9a80P9mpd/2J2KOwOOZgnTSmjXlI4Y?=
 =?us-ascii?q?xn00KM8TZ8RfDM35of3/6Y2Q6HXS/mjFi9qsD3hZxEZTYKE2qlyCjrGJReZrdv?=
 =?us-ascii?q?coYME2uuJdO4xs9/h5L0R3FX7lqjCE4Y18+zfhqSaUfw3QlR1UQRvHymljG0zz?=
 =?us-ascii?q?1ykzE1sKWf2DbCzPjldBoCImRLXnVtjU/wIYioiNAXREipbwkzmBql/0r63LVb?=
 =?us-ascii?q?pKJkImnXQEdIeTX2Lm54XquxsLqCf9BA6JcyvSpLV+S8ZEiQSqThrBsCzyPjA2?=
 =?us-ascii?q?xeySg5dz6woJX5nB96iGWHIHZotnXZesJwxRbZ5NPCQ/5cxT4GRCh+iTnKCVmw?=
 =?us-ascii?q?Jdip/dOIl5jdtuCyTX6uVppWcSPz14OPqDO75XF2AR24h/2ymsfoEQ8g3S/51t?=
 =?us-ascii?q?lqUz7FrBL9YontyqS7PvhrfkhuBF/g9cV6HptynZc3hJEVwXIanIma/WIbkWfv?=
 =?us-ascii?q?NtVWwaH+Y2AMRTIRw97V/RLq2EtsLn+Sw4L5V3OdwtZuZtWgY2MW3D494N5OCK?=
 =?us-ascii?q?uO8LNEmi51qEKirQ3Nefh9gisdyfw25X4fguEJuxAiwj+TA78MBklYITLjlw6T?=
 =?us-ascii?q?4N+gtqVXa32icbyx1Ep4gNCgA6uOogBaWHblZJgiGTV84dl4MFLJyHfz8J3reM?=
 =?us-ascii?q?HMbdIPsR2ZiwvAj+9QKJ4rl/sFnyxnOX/mvX0+yu42lhhu3ZC8vIiaJGRh5qO5?=
 =?us-ascii?q?AhhENjLrY8Mf4C3ijaFbnsyOxYCgAo1hGikXXJvvVf+nCygdtfPjNwaTCjE8rm?=
 =?us-ascii?q?qbFKHbHQ+e7kdmsn3OH4qqN3GROHkW09FiSAOBK0xYhQAeRC86kYIhFgC22Mzh?=
 =?us-ascii?q?d1905jIL6V79tBRM0fhkNwXlXmfcuQeoaSo0SJ6FIxpN9QxC40bVMcqD7uN8BS?=
 =?us-ascii?q?1Y/5uhrBCTJWyffQhHEWYJWkmcDVD5Irau/cXA8/SfBuemL/rOZqiOqfVDV/iS?=
 =?us-ascii?q?w5KjyJBm/zGKNsWAJXRiC/w72kxeXXF2AcjZmjMPSzAJmCLJdcKUuBC8+ihvpM?=
 =?us-ascii?q?Cl7PvrQB7v5ZeIC7ZKMdVg5RG2gaSAN+6Rnip5KixY1pQDxXDW0rgfwUUShjpq?=
 =?us-ascii?q?dzmsF7QAqCHMQLjRmq9REx4UdSdzONFU4KI72wlHIdTbhc/t1r5kkv41DE9IWk?=
 =?us-ascii?q?b8ms6yf8wFPWG8OEnDBEaKL7mGITzLw8fqYaKzU7FQjeNUtwGutjafCUPsIjOD?=
 =?us-ascii?q?lzzxXRC1Le5MlD2bPABZuIylbhZtCG3jQMj6ZRGhLNB3jSM5wbsvi3PONG4cNy?=
 =?us-ascii?q?V8ckxXor2R6yNYnutwG2hb4nV5KumEnj6T7/PEJZYOrftrHiN0mvpa4XsgzbtV?=
 =?us-ascii?q?6SBERPptlyrTrt5huVemkuaUxzpjURpOrCtLhY2RsUVjP6XZ6odPWXLe8B0R6m?=
 =?us-ascii?q?WQDkdCm9wwLtr1tqZCzZD3la/pITND6NOcqc8bHcXSOsXBKHssKxPtGSXVJAIf?=
 =?us-ascii?q?SHigMmSJ1GJHl/TH1nqToZgnq9DemJMIRfcPVFszGfMHCwJ3HNUEL79yUz8lmK?=
 =?us-ascii?q?KWj4gD4n/o/0qZf9lTop2SDqHaOv7oMjvMyOAcPxY=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ADAACbnwBch0O0hNFkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGCaYECJ4N5iBiMCYINFI4ohBCEeIFzFBgDEAGDLIR?=
 =?us-ascii?q?IIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYQEBAQECAQECIARAEgUBC?=
 =?us-ascii?q?QEBChUDAgImAgIDVAYOBQUZgwMBgXkHAQWoW3wzijGBC4sLgVc/hCOIBYJXAok?=
 =?us-ascii?q?hCoFuhA1EM1GEXIpZBwKCHQSEXYpMCgKCG4dBhzQsmCKBRoINMxojgzwJgh4XE?=
 =?us-ascii?q?oYcgW2GDzIBATGBBQEBimwqgiMBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ADAACbnwBch0O0hNFkGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGCaYECJ4N5iBiMCYINFI4ohBCEeIFzFBgDEAGDLIRIIjQJDQEDAQEBA?=
 =?us-ascii?q?QEBAgETAQEBCA0JCCkjDII2JAGCYQEBAQECAQECIARAEgUBCQEBChUDAgImAgI?=
 =?us-ascii?q?DVAYOBQUZgwMBgXkHAQWoW3wzijGBC4sLgVc/hCOIBYJXAokhCoFuhA1EM1GEX?=
 =?us-ascii?q?IpZBwKCHQSEXYpMCgKCG4dBhzQsmCKBRoINMxojgzwJgh4XEoYcgW2GDzIBATG?=
 =?us-ascii?q?BBQEBimwqgiMBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,297,1539673200"; 
   d="scan'208";a="42188693"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 29 Nov 2018 18:31:15 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727284AbeK3Niw (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 30 Nov 2018 08:38:52 -0500
Received: from mailgw02.mediatek.com ([1.203.163.81]:17198 "EHLO
        mailgw02.mediatek.com" rhost-flags-OK-FAIL-OK-FAIL) by vger.kernel.org
        with ESMTP id S1726161AbeK3Niw (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 30 Nov 2018 08:38:52 -0500
X-UUID: e502bc003ce848efb427af08f1479f7f-20181130
X-UUID: e502bc003ce848efb427af08f1479f7f-20181130
Received: from mtkcas32.mediatek.inc [(172.27.4.250)] by mailgw02.mediatek.com
        (envelope-from <honghui.zhang@mediatek.com>)
        (mailgw01.mediatek.com ESMTP with TLS)
        with ESMTP id 1413464676; Fri, 30 Nov 2018 10:31:01 +0800
Received: from MTKCAS32.mediatek.inc (172.27.4.184) by MTKMBS31DR.mediatek.inc
 (172.27.6.102) with Microsoft SMTP Server (TLS) id 15.0.1395.4; Fri, 30 Nov
 2018 10:30:59 +0800
Received: from [10.17.3.153] (10.17.3.153) by MTKCAS32.mediatek.inc
 (172.27.4.170) with Microsoft SMTP Server id 15.0.1395.4 via Frontend
 Transport; Fri, 30 Nov 2018 10:30:59 +0800
Message-ID: <1543545059.3753.4.camel@mhfsdcap03>
Subject: Re: [PATCH v2] PCI: mediatek: Use
 devm_of_pci_get_host_bridge_resources() to parse DT
From: Honghui Zhang <honghui.zhang@mediatek.com>
To: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
CC: <bhelgaas@google.com>, <linux-arm-kernel@lists.infradead.org>,
        <linux-mediatek@lists.infradead.org>, <linux-pci@vger.kernel.org>,
        <linux-kernel@vger.kernel.org>, <ryder.lee@mediatek.com>,
        <devicetree@vger.kernel.org>, <youlin.pei@mediatek.com>,
        <jianjun.wang@mediatek.com>
Date: Fri, 30 Nov 2018 10:30:59 +0800
In-Reply-To: <20181129113324.GA27228@e107981-ln.cambridge.arm.com>
References: <1541645815-30340-1-git-send-email-honghui.zhang@mediatek.com>
         <20181129113324.GA27228@e107981-ln.cambridge.arm.com>
Content-Type: text/plain; charset="UTF-8"
X-Mailer: Evolution 3.2.3-0ubuntu6 
Content-Transfer-Encoding: 7bit
MIME-Version: 1.0
X-MTK: N
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, 2018-11-29 at 11:33 +0000, Lorenzo Pieralisi wrote:
> On Thu, Nov 08, 2018 at 10:56:55AM +0800, honghui.zhang@mediatek.com wrote:
> > From: Honghui Zhang <honghui.zhang@mediatek.com>
> > 
> > Use the devm_of_pci_get_host_bridge_resources() API in place of the PCI OF
> > DT parser.
> > 
> > Signed-off-by: Honghui Zhang <honghui.zhang@mediatek.com>
> > ---
> >  drivers/pci/controller/pcie-mediatek.c | 98 +++++++++-------------------------
> >  1 file changed, 24 insertions(+), 74 deletions(-)
> > 
> > diff --git a/drivers/pci/controller/pcie-mediatek.c b/drivers/pci/controller/pcie-mediatek.c
> > index 2a1f97c..0590a93 100644
> > --- a/drivers/pci/controller/pcie-mediatek.c
> > +++ b/drivers/pci/controller/pcie-mediatek.c
> > @@ -197,11 +197,7 @@ struct mtk_pcie_port {
> >   * @dev: pointer to PCIe device
> >   * @base: IO mapped register base
> >   * @free_ck: free-run reference clock
> > - * @io: IO resource
> > - * @pio: PIO resource
> >   * @mem: non-prefetchable memory resource
> > - * @busn: bus range
> > - * @offset: IO / Memory offset
> >   * @ports: pointer to PCIe port information
> >   * @soc: pointer to SoC-dependent operations
> >   */
> > @@ -210,14 +206,7 @@ struct mtk_pcie {
> >  	void __iomem *base;
> >  	struct clk *free_ck;
> >  
> > -	struct resource io;
> > -	struct resource pio;
> >  	struct resource mem;
> > -	struct resource busn;
> > -	struct {
> > -		resource_size_t mem;
> > -		resource_size_t io;
> > -	} offset;
> >  	struct list_head ports;
> >  	const struct mtk_pcie_soc *soc;
> >  };
> > @@ -1045,55 +1034,43 @@ static int mtk_pcie_setup(struct mtk_pcie *pcie)
> >  {
> >  	struct device *dev = pcie->dev;
> >  	struct device_node *node = dev->of_node, *child;
> > -	struct of_pci_range_parser parser;
> > -	struct of_pci_range range;
> > -	struct resource res;
> >  	struct mtk_pcie_port *port, *tmp;
> > +	struct pci_host_bridge *host = pci_host_bridge_from_priv(pcie);
> > +	struct list_head *windows = &host->windows;
> > +	struct resource_entry *win, *tmp_win;
> > +	resource_size_t io_base;
> >  	int err;
> >  
> > -	if (of_pci_range_parser_init(&parser, node)) {
> > -		dev_err(dev, "missing \"ranges\" property\n");
> > -		return -EINVAL;
> > -	}
> > +	err = devm_of_pci_get_host_bridge_resources(dev, 0, 0xff,
> > +						    windows, &io_base);
> > +	if (err)
> > +		return err;
> >  
> > -	for_each_of_pci_range(&parser, &range) {
> > -		err = of_pci_range_to_resource(&range, node, &res);
> > -		if (err < 0)
> > -			return err;
> > +	err = devm_request_pci_bus_resources(dev, windows);
> > +	if (err < 0)
> > +		return err;
> >  
> > -		switch (res.flags & IORESOURCE_TYPE_BITS) {
> > +	/* Get the I/O and memory ranges from DT */
> > +	resource_list_for_each_entry_safe(win, tmp_win, windows) {
> > +		switch (resource_type(win->res)) {
> >  		case IORESOURCE_IO:
> > -			pcie->offset.io = res.start - range.pci_addr;
> > -
> > -			memcpy(&pcie->pio, &res, sizeof(res));
> > -			pcie->pio.name = node->full_name;
> > -
> > -			pcie->io.start = range.cpu_addr;
> > -			pcie->io.end = range.cpu_addr + range.size - 1;
> > -			pcie->io.flags = IORESOURCE_MEM;
> > -			pcie->io.name = "I/O";
> > -
> > -			memcpy(&res, &pcie->io, sizeof(res));
> > +			err = devm_pci_remap_iospace(dev, win->res, io_base);
> > +			if (err) {
> > +				dev_warn(dev, "error %d: failed to map resource %pR\n",
> > +					 err, win->res);
> > +				resource_list_destroy_entry(win);
> > +			}
> >  			break;
> > -
> >  		case IORESOURCE_MEM:
> > -			pcie->offset.mem = res.start - range.pci_addr;
> > -
> > -			memcpy(&pcie->mem, &res, sizeof(res));
> > +			memcpy(&pcie->mem, win->res, sizeof(*win->res));
> >  			pcie->mem.name = "non-prefetchable";
> >  			break;
> > +		case IORESOURCE_BUS:
> > +			host->busnr = win->res->start;
> > +			break;
> >  		}
> >  	}
> >  
> > -	err = of_pci_parse_bus_range(node, &pcie->busn);
> > -	if (err < 0) {
> > -		dev_err(dev, "failed to parse bus ranges property: %d\n", err);
> > -		pcie->busn.name = node->name;
> > -		pcie->busn.start = 0;
> > -		pcie->busn.end = 0xff;
> > -		pcie->busn.flags = IORESOURCE_BUS;
> > -	}
> > -
> >  	for_each_available_child_of_node(node, child) {
> >  		int slot;
> >  
> > @@ -1125,28 +1102,6 @@ static int mtk_pcie_setup(struct mtk_pcie *pcie)
> >  	return 0;
> >  }
> >  
> > -static int mtk_pcie_request_resources(struct mtk_pcie *pcie)
> > -{
> > -	struct pci_host_bridge *host = pci_host_bridge_from_priv(pcie);
> > -	struct list_head *windows = &host->windows;
> > -	struct device *dev = pcie->dev;
> > -	int err;
> > -
> > -	pci_add_resource_offset(windows, &pcie->pio, pcie->offset.io);
> > -	pci_add_resource_offset(windows, &pcie->mem, pcie->offset.mem);
> > -	pci_add_resource(windows, &pcie->busn);
> > -
> > -	err = devm_request_pci_bus_resources(dev, windows);
> > -	if (err < 0)
> > -		return err;
> > -
> > -	err = devm_pci_remap_iospace(dev, &pcie->pio, pcie->io.start);
> > -	if (err < 0)
> > -		return err;
> > -
> > -	return 0;
> > -}
> > -
> >  static int mtk_pcie_probe(struct platform_device *pdev)
> >  {
> >  	struct device *dev = &pdev->dev;
> > @@ -1169,11 +1124,6 @@ static int mtk_pcie_probe(struct platform_device *pdev)
> >  	if (err)
> >  		return err;
> >  
> > -	err = mtk_pcie_request_resources(pcie);
> > -	if (err)
> > -		goto put_resources;
> > -
> > -	host->busnr = pcie->busn.start;
> >  	host->dev.parent = pcie->dev;
> >  	host->ops = pcie->soc->ops;
> >  	host->map_irq = of_irq_parse_and_map_pci;
> 
> I would prefer having all the host initialization carried out in a
> single function. I appreciate you may need to reintroduce a temporary
> busnumber value or reshuffle the code to do that, sorry for asking to
> change it again but I do not want to see the struct pci_host_bridge
> variables initialization scattered around, it is confusing.
> 
Okay, I will change it in the next version, and I will ask Ryder for
review internally and if it's OK with him I will add his ack directly in
the next version.

Thanks.

> Thanks,
> Lorenzo


