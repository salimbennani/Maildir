Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 29 Nov 2018 08:39:06 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 421805802E4
	for <like.xu@linux.intel.com>; Wed, 28 Nov 2018 09:26:34 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga005-1.fm.intel.com with ESMTP; 28 Nov 2018 09:26:33 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3ASqNW4BwQoVP1pB7XCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0uoQL/ad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWRPUMZPWSJCDIOz?=
 =?us-ascii?q?YJcAAPcDMulWsof9v1kDoxmxCAWxCu7j1iFHhmTt0K0mz+gsCx3K0BA6Et4Qtn?=
 =?us-ascii?q?nfsdX7NL0VUeCw1KTGwijMb+5M1jfn9YfIdQ0qr/OWUr1rcsrRzlIvFx/YhViX?=
 =?us-ascii?q?t4PlPyma2f8Os2ic9OpgSfmii3Q5pA5sojig3NsshpPViYISz1DJ7CN0y5s7K9?=
 =?us-ascii?q?2/TU50e9+kEJ1IuiGCN4p2WtktT3tpuCY90rEGo4C0czIXx5Q7xx7QdeGIc4+U?=
 =?us-ascii?q?7RL4TuqRIDB4iGp5eLKlmRmy9UygyurmWsao11ZKqyxImcTPuHAVzxHf9NSLR/?=
 =?us-ascii?q?hn8ku8xDqC1Brf5v9KLE00j6bXNpwszqYumpYPtUnPBDL6lUvogKOMa0kp+eal?=
 =?us-ascii?q?5/75brjloJKXKpV6hRvkMqs0n8yyGeQ4PRYKX2ic4em80Lzj/VblQLVRlPE2na?=
 =?us-ascii?q?/ZsI3AKcQcvK65DBdZ0ocl6xmhEzeryMoUkWUEIV5fZR6LkovkN0vQLP32Dfqz?=
 =?us-ascii?q?mUmgnTVzy/DDJLLhA5HNLnbZkLfmeLZw81dcxxQ2zdBC/p5bF68OIOztVU/1rd?=
 =?us-ascii?q?DXFRg5MxGyw+n7Ftp9zYQSWWaOAq+aLqzeq1CJ5v83LumIZY8Vviv9Kvc/6/7v?=
 =?us-ascii?q?i385hUESfa2z0ZQLb3C4G+9rI0OeYXrqjdcBF3oKshA5TOzwh12OSSRTaGqqX6?=
 =?us-ascii?q?Ig+jE7D5qrDYPCRoCunrONxii6HoBNa2BCC1CMF2rodoqeV/cNbiKSPtFukjge?=
 =?us-ascii?q?Wbe9TI8h0ELmiQnh1rAyLvbI4jZK8tXn1cNp/KvVkhc98yEyCN6SlGSETmVxl2?=
 =?us-ascii?q?VPQCcq3ad5ugtkx1KelKR1nfFcRuFV/O5DBwIzNJrAyL5jBtXvHw7MYNqNDUyr?=
 =?us-ascii?q?W8irGi0ZSNU3zNkTJUFnFIK5kxrB0iG2VqITjKGBH5cu86jRjET2cv50zHLBnI?=
 =?us-ascii?q?MmiUsnRMoHYXWsgaht9g7SL5TEn0WQi+ChcqFKjwDX82LW4GaTtVtUV0ZQWK/G?=
 =?us-ascii?q?WmsDLh/brd3z5UTZU5e0BLgnOxcHwsmHfPgZIub1hElLEa+wcO/VZHi8ziLpXU?=
 =?us-ascii?q?6F?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AgAADJzv5bhxHrdtBjGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBVAMBAQELAYEwgTmBFhOMcIspgg18lWGCWBQYDQeHbiI3Bg0BAwEBAQE?=
 =?us-ascii?q?BAQIBEwEBAQoLCQgbDiMMgjYFAgMaAQaCWwEBAQEDAQI3DAopAwMBAgYBAQoOB?=
 =?us-ascii?q?AMDCR0IAwELBTUUEwWDHAGCAQEECqgUhC0BhgWMFheBQD+BEYIUSTWDEwsBAgG?=
 =?us-ascii?q?HOgKJASiBbpUECYZ9iikjgVqFEIJuhz2NVIp0gVyBdzMaCBsVO4JsCQqFdYJki?=
 =?us-ascii?q?AcpMQEBgQUciyCBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AgAADJzv5bhxHrdtBjGwEBAQEDAQEBBwMBAQGBVAMBAQE?=
 =?us-ascii?q?LAYEwgTmBFhOMcIspgg18lWGCWBQYDQeHbiI3Bg0BAwEBAQEBAQIBEwEBAQoLC?=
 =?us-ascii?q?QgbDiMMgjYFAgMaAQaCWwEBAQEDAQI3DAopAwMBAgYBAQoOBAMDCR0IAwELBTU?=
 =?us-ascii?q?UEwWDHAGCAQEECqgUhC0BhgWMFheBQD+BEYIUSTWDEwsBAgGHOgKJASiBbpUEC?=
 =?us-ascii?q?YZ9iikjgVqFEIJuhz2NVIp0gVyBdzMaCBsVO4JsCQqFdYJkiAcpMQEBgQUciyC?=
 =?us-ascii?q?BdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,291,1539673200"; 
   d="scan'208";a="41935982"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 28 Nov 2018 09:26:32 -0800
Received: from localhost ([::1]:49105 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gS3bb-0008D0-MZ
	for like.xu@linux.intel.com; Wed, 28 Nov 2018 12:26:31 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:34932)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <ehabkost@redhat.com>) id 1gS3bI-0008AD-EL
	for qemu-devel@nongnu.org; Wed, 28 Nov 2018 12:26:16 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <ehabkost@redhat.com>) id 1gS3bB-0007ZX-Ji
	for qemu-devel@nongnu.org; Wed, 28 Nov 2018 12:26:12 -0500
Received: from mx1.redhat.com ([209.132.183.28]:57338)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <ehabkost@redhat.com>)
	id 1gS3b0-0006q9-26; Wed, 28 Nov 2018 12:25:56 -0500
Received: from smtp.corp.redhat.com (int-mx03.intmail.prod.int.phx2.redhat.com
	[10.5.11.13])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 0E50E307D90E;
	Wed, 28 Nov 2018 17:25:43 +0000 (UTC)
Received: from localhost (ovpn-116-21.gru2.redhat.com [10.97.116.21])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 528697A5E7;
	Wed, 28 Nov 2018 17:25:36 +0000 (UTC)
Date: Wed, 28 Nov 2018 15:25:34 -0200
From: Eduardo Habkost <ehabkost@redhat.com>
To: Paolo Bonzini <pbonzini@redhat.com>
Message-ID: <20181128172534.GW18284@habkost.net>
References: <20181031003120.26771-1-ehabkost@redhat.com>
	<20181031003120.26771-13-ehabkost@redhat.com>
	<824abd40-2e3b-f40d-d995-394d84d8d20c@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <824abd40-2e3b-f40d-d995-394d84d8d20c@redhat.com>
User-Agent: Mutt/1.9.2 (2017-12-15)
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.13
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.48]);
	Wed, 28 Nov 2018 17:25:43 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PULL 12/15] Acceptance tests: add make rule for
 running them
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Kevin Wolf <kwolf@redhat.com>, Peter Maydell <peter.maydell@linaro.org>,
	Fam Zheng <famz@redhat.com>, qemu-block@nongnu.org, qemu-devel@nongnu.org,
	Philippe =?iso-8859-1?Q?Mathieu-Daud=E9?= <f4bug@amsat.org>,
	Cleber Rosa <crosa@redhat.com>, Max Reitz <mreitz@redhat.com>,
	Alex =?iso-8859-1?Q?Benn=E9e?= <alex.bennee@linaro.org>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Wed, Nov 07, 2018 at 12:24:55AM +0100, Paolo Bonzini wrote:
> On 31/10/2018 01:31, Eduardo Habkost wrote:
> > From: Cleber Rosa <crosa@redhat.com>
> > 
> > The acceptance (aka functional, aka Avocado-based) tests are
> > Python files located in "tests/acceptance" that need to be run
> > with the Avocado libs and test runner.
> > 
> > Let's provide a convenient way for QEMU developers to run them,
> > by making use of the tests-venv with the required setup.
> > 
> > Also, while the Avocado test runner will take care of creating a
> > location to save test results to, it was understood that it's better
> > if the results are kept within the build tree.
> > 
> > Signed-off-by: Cleber Rosa <crosa@redhat.com>
> > Acked-by: Stefan Hajnoczi <stefanha@redhat.com>
> > Acked-by: Wainer dos Santos Moschetta <wainersm@redhat.com>
> > Reviewed-by: Caio Carrara <ccarrara@redhat.com>
> > Message-Id: <20181018153134.8493-3-crosa@redhat.com>
> > Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>
> > ---
> >  docs/devel/testing.rst | 43 +++++++++++++++++++++++++++++++++++++-----
> >  tests/requirements.txt |  1 +
> >  tests/Makefile.include | 21 +++++++++++++++++++--
> >  3 files changed, 58 insertions(+), 7 deletions(-)
> > 
> > diff --git a/docs/devel/testing.rst b/docs/devel/testing.rst
> > index a227754f86..18e2c0868a 100644
> > --- a/docs/devel/testing.rst
> > +++ b/docs/devel/testing.rst
> > @@ -545,10 +545,39 @@ Tests based on ``avocado_qemu.Test`` can easily:
> >     - http://avocado-framework.readthedocs.io/en/latest/api/test/avocado.html#avocado.Test
> >     - http://avocado-framework.readthedocs.io/en/latest/api/utils/avocado.utils.html
> >  
> > -Installation
> > -------------
> > +Running tests
> > +-------------
> > +
> > +You can run the acceptance tests simply by executing:
> > +
> > +.. code::
> > +
> > +  make check-acceptance
> > +
> > +This involves the automatic creation of Python virtual environment
> > +within the build tree (at ``tests/venv``) which will have all the
> > +right dependencies, and will save tests results also within the
> > +build tree (at ``tests/results``).
> >  
> > -To install Avocado and its dependencies, run:
> > +Note: the build environment must be using a Python 3 stack, and have
> > +the ``venv`` and ``pip`` packages installed.  If necessary, make sure
> > +``configure`` is called with ``--python=`` and that those modules are
> > +available.  On Debian and Ubuntu based systems, depending on the
> > +specific version, they may be on packages named ``python3-venv`` and
> > +``python3-pip``.
> > +
> > +The scripts installed inside the virtual environment may be used
> > +without an "activation".  For instance, the Avocado test runner
> > +may be invoked by running:
> > +
> > + .. code::
> > +
> > +  tests/venv/bin/avocado run $OPTION1 $OPTION2 tests/acceptance/
> > +
> > +Manual Installation
> > +-------------------
> > +
> > +To manually install Avocado and its dependencies, run:
> >  
> >  .. code::
> >  
> > @@ -689,11 +718,15 @@ The exact QEMU binary to be used on QEMUMachine.
> >  Uninstalling Avocado
> >  --------------------
> >  
> > -If you've followed the installation instructions above, you can easily
> > -uninstall Avocado.  Start by listing the packages you have installed::
> > +If you've followed the manual installation instructions above, you can
> > +easily uninstall Avocado.  Start by listing the packages you have
> > +installed::
> >  
> >    pip list --user
> >  
> >  And remove any package you want with::
> >  
> >    pip uninstall <package_name>
> > +
> > +If you've used ``make check-acceptance``, the Python virtual environment where
> > +Avocado is installed will be cleaned up as part of ``make check-clean``.
> > diff --git a/tests/requirements.txt b/tests/requirements.txt
> > index d39f9d1576..64c6e27a94 100644
> > --- a/tests/requirements.txt
> > +++ b/tests/requirements.txt
> > @@ -1,3 +1,4 @@
> >  # Add Python module requirements, one per line, to be installed
> >  # in the tests/venv Python virtual environment. For more info,
> >  # refer to: https://pip.pypa.io/en/stable/user_guide/#id1
> > +avocado-framework==65.0
> > diff --git a/tests/Makefile.include b/tests/Makefile.include
> > index eabc1da2f3..d2e577eabb 100644
> > --- a/tests/Makefile.include
> > +++ b/tests/Makefile.include
> > @@ -11,6 +11,7 @@ check-help:
> >  	@echo " $(MAKE) check-qapi-schema    Run QAPI schema tests"
> >  	@echo " $(MAKE) check-block          Run block tests"
> >  	@echo " $(MAKE) check-tcg            Run TCG tests"
> > +	@echo " $(MAKE) check-acceptance     Run all acceptance (functional) tests"
> >  	@echo " $(MAKE) check-report.html    Generates an HTML test report"
> >  	@echo " $(MAKE) check-venv           Creates a Python venv for tests"
> >  	@echo " $(MAKE) check-clean          Clean the tests"
> > @@ -902,10 +903,15 @@ check-decodetree:
> >  
> >  # Python venv for running tests
> >  
> > -.PHONY: check-venv
> > +.PHONY: check-venv check-acceptance
> >  
> >  TESTS_VENV_DIR=$(BUILD_DIR)/tests/venv
> >  TESTS_VENV_REQ=$(SRC_PATH)/tests/requirements.txt
> > +TESTS_RESULTS_DIR=$(BUILD_DIR)/tests/results
> > +# Controls the output generated by Avocado when running tests.
> > +# Any number of command separated loggers are accepted.  For more
> > +# information please refer to "avocado --help".
> > +AVOCADO_SHOW=none
> >  
> >  $(shell $(PYTHON) -c 'import sys; assert sys.version_info >= (3,0)' >/dev/null 2>&1)
> >  ifeq ($(.SHELLSTATUS),0)
> > @@ -922,8 +928,19 @@ $(TESTS_VENV_DIR):
> >  	$(error "venv directory for tests requires Python 3")
> >  endif
> >  
> > +$(TESTS_RESULTS_DIR):
> > +	$(call quiet-command, mkdir -p $@, \
> > +            MKDIR, $@)
> > +
> >  check-venv: $(TESTS_VENV_DIR)
> >  
> > +check-acceptance: check-venv $(TESTS_RESULTS_DIR)
> > +	$(call quiet-command, \
> > +            $(TESTS_VENV_DIR)/bin/python -m avocado \
> > +            --show=$(AVOCADO_SHOW) run --job-results-dir=$(TESTS_RESULTS_DIR) \
> > +            --failfast=on $(SRC_PATH)/tests/acceptance, \
> > +            "AVOCADO", "tests/acceptance")
> 
> Right now it seems like anything that is target-dependent should be
> developed under qtest, rather than as an acceptance test.  On the other
> hand this results in qtests that actually do not use the qtest protocol
> at all---only the libqtest function to interact with QMP etc.---and as
> such would look like a perfect match for "make check-acceptance".
> drive_del-test is already an example of this.
> 
> How hard would it be to make it run tests for all supported targets,
> rather than just the host architecture?  Perhaps using a tag such as
> "all-targets".

I shouldn't be difficult, and I think Cleber and Philippe are
working on it.  See
<https://trello.com/c/CmxAb30X/56-make-check-acceptance-a-way-to-test-all-architectures>
and <https://trello.com/c/tWhq0eXT/54-basic-multi-arch-support>.

-- 
Eduardo

