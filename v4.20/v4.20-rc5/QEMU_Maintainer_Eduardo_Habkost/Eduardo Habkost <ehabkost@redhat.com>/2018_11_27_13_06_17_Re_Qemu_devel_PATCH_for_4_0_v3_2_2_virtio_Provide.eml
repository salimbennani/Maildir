Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 27 Nov 2018 21:27:45 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 57D445803C2
	for <like.xu@linux.intel.com>; Tue, 27 Nov 2018 05:12:46 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga002-1.fm.intel.com with ESMTP; 27 Nov 2018 05:12:45 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3ASNdx1xeMzvcCbZHyxe4vgoMUlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxcWyZB7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyJPDIOi?=
 =?us-ascii?q?YYUMAeoOMvpXoJT/qFQAsBW+HQuhCuHgxzNViHL6wbM10/86HAHawAAtBc4CvG?=
 =?us-ascii?q?jOodnrMqoZTOC7zLPPzTXGd/5Y1iry6JXSfRA7vP6MWq97f8jLxkY0FAPFiU6Q?=
 =?us-ascii?q?qZD4ND6SyOsNs3KU4PFjVeKokG4ntxp8oiKxycgxionGnJ4VxkrY+iV+xYY4PN?=
 =?us-ascii?q?u1Q1N4b968CJZcqT2WOohsTs8/Xm1luzw2xqMItJO7ZiQG1ZYqywbBZ/Cbd4WE?=
 =?us-ascii?q?+A/vWeiPLTtimX5oe7yyiwys/UWjzOD3S9O630xQriVfl9nBrnAN2ALX6siAUv?=
 =?us-ascii?q?Z9+kah2S2T1wDI8O1ELkY0lbfBJ54m2L4wmYIfsUXFHiDohEX7lLGaelkn9+Sy?=
 =?us-ascii?q?9ujrf7brqoWCO4J6igzyKLkil86nDeQ9KAcOXmyb+eqm1L3k+E30WKxKgeMzkq?=
 =?us-ascii?q?nEqZzVONoUprCnDA9Ry4os8BG/Dyqg0NsEg3YHN1VJeBaGj4jqJV7COv/5Deqn?=
 =?us-ascii?q?jlSokTdrwe3GP7L7DpXMKHjDjKnufbJn50FAzwozyMtS55RTCrEHL/LzXFLxuM?=
 =?us-ascii?q?bfDh8jPAy42/znB8ll1oMCRWKPBbeUMKfTsV+L+O0jOeaNZJIOtTb5Kvgl4ePu?=
 =?us-ascii?q?jHAjlV8ce6mpwYUYaHSiEvt6JEWZZCmkv9EaDG1fvhYiVPe4zxqGUCVPfDC0WK?=
 =?us-ascii?q?Qz4Cx9D5ipSoLKR4SoibrG2z+nH5pQfSdfB1WRVHvlaYiACMoKcz+Yd8pokzgY?=
 =?us-ascii?q?Uuq4Roo8kB2jqgL+jqBqN/fZ4TEws5Xl295ooerJmkYp6DZ2As+BhnyLVHx+hW?=
 =?us-ascii?q?gSRjU7j5x49Gd0y1DL+qFimfVCHJQH7PhASB0zL5f01eF2C9nuHAnGe4HaZkyh?=
 =?us-ascii?q?R4CLDSw4VN42i/8HaUV6AMnq2h3D1iCpBKQJv6aGCJw97uTX2H2ndJU18GrPyK?=
 =?us-ascii?q?R01wpuecBIL2Dzw/cnrwU=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAADyQf1bhxHrdtBkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGBMIJPjCRfjTWXQIFzFBgUiHciNAkNAQMBAQEBAQE?=
 =?us-ascii?q?CARMBAQEKCwkIGw4vgjYFAgMaAQaCWwEBAQECAQECNwwKKQMDAQIGAQEKDgoJG?=
 =?us-ascii?q?gMIAwELBUkYgxyBeggBBKZCii2MDReBQD+BEYMSiDaCJgKJWIE9hAuQF1UJkSU?=
 =?us-ascii?q?jiVKHOZg3gUaCDTMaCBsVO4Jtgk+OIymBOByLV4F0AwEB?=
X-IPAS-Result: =?us-ascii?q?A0ABAADyQf1bhxHrdtBkGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGBMIJPjCRfjTWXQIFzFBgUiHciNAkNAQMBAQEBAQECARMBAQEKCwkIG?=
 =?us-ascii?q?w4vgjYFAgMaAQaCWwEBAQECAQECNwwKKQMDAQIGAQEKDgoJGgMIAwELBUkYgxy?=
 =?us-ascii?q?BeggBBKZCii2MDReBQD+BEYMSiDaCJgKJWIE9hAuQF1UJkSUjiVKHOZg3gUaCD?=
 =?us-ascii?q?TMaCBsVO4Jtgk+OIymBOByLV4F0AwEB?=
X-IronPort-AV: E=Sophos;i="5.56,286,1539673200"; 
   d="scan'208";a="41721014"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 27 Nov 2018 05:12:45 -0800
Received: from localhost ([::1]:42250 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gRdAS-0002GZ-6U
	for like.xu@linux.intel.com; Tue, 27 Nov 2018 08:12:44 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:60354)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <ehabkost@redhat.com>) id 1gRd58-00049G-KG
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 08:07:15 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <ehabkost@redhat.com>) id 1gRd55-0007YT-An
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 08:07:14 -0500
Received: from mx1.redhat.com ([209.132.183.28]:52846)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <ehabkost@redhat.com>) id 1gRd52-0007WI-OK
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 08:07:10 -0500
Received: from smtp.corp.redhat.com (int-mx03.intmail.prod.int.phx2.redhat.com
	[10.5.11.13])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 9343830016F4;
	Tue, 27 Nov 2018 13:07:06 +0000 (UTC)
Received: from localhost (ovpn-116-21.gru2.redhat.com [10.97.116.21])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 75734608E6;
	Tue, 27 Nov 2018 13:06:19 +0000 (UTC)
Date: Tue, 27 Nov 2018 11:06:17 -0200
From: Eduardo Habkost <ehabkost@redhat.com>
To: Caio Carrara <ccarrara@redhat.com>
Message-ID: <20181127130617.GD18284@habkost.net>
References: <20181127024959.7060-1-ehabkost@redhat.com>
	<20181127024959.7060-3-ehabkost@redhat.com>
	<20181127125619.GD7857@localhost.localdomain>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181127125619.GD7857@localhost.localdomain>
User-Agent: Mutt/1.9.2 (2017-12-15)
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.13
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.45]);
	Tue, 27 Nov 2018 13:07:06 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH for-4.0 v3 2/2] virtio: Provide
 version-specific variants of virtio PCI devices
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Kevin Wolf <kwolf@redhat.com>, Fam Zheng <famz@redhat.com>,
	Stefan Hajnoczi <stefanha@redhat.com>,
	"Michael S. Tsirkin" <mst@redhat.com>, libvir-list@redhat.com,
	Markus Armbruster <armbru@redhat.com>,
	Amit Shah <amit@kernel.org>, Cornelia Huck <cohuck@redhat.com>,
	qemu-devel@nongnu.org, Wainer dos Santos Moschetta <wainersm@redhat.com>,
	Andrea Bolognani <abologna@redhat.com>, Gonglei <arei.gonglei@huawei.com>,
	Laine Stump <laine@redhat.com>, Cleber Rosa <crosa@redhat.com>,
	Paolo Bonzini <pbonzini@redhat.com>, Max Reitz <mreitz@redhat.com>,
	Philippe =?iso-8859-1?Q?Mathieu-Daud=E9?= <philmd@redhat.com>,
	Jason Wang <jasowang@redhat.com>, Gerd Hoffmann <kraxel@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Tue, Nov 27, 2018 at 10:56:21AM -0200, Caio Carrara wrote:
> Hello, Eduardo.
> 
> Just some minor comments regarding the Python code.
> 
[...]
> > +def devtype_implements(vm, devtype, implements):
> > +    return devtype in [d['name'] for d in vm.command('qom-list-types', implements=implements)]
> > +
> > +def get_interfaces(vm, devtype, interfaces=['pci-express-device', 'conventional-pci-device']):
> 
> Usually is not a good idea to use a mutable (in this case a list)
> default value as an argument:
> 
> def my_func(param=[1,2,3]):
>      param.append(666)
>      print(param)
> 
> my_func()
> [1, 2, 3, 666]
> my_func()
> [1, 2, 3, 666, 666]
> my_func()
> [1, 2, 3, 666, 666, 666]
> 
> Yes, you're not changing the value right now, but it's something we can
> not guarantee for the future when, for example, someone not Python
> experienced have to change this code.

Oops, thanks for catching this!

> 
> Another way safer to write this function could be:
> 
> def get_interfaces(vm, devtype, interfaces=None):
>     if not interfaces:
>         interfaces = ['pci-express-device', 'conventional-pci-device']
>     return [i for i in interfaces if devtype_implements(vm, devtype, i)]

Maybe I should just use a tuple, then?

    def get_interfaces(vm, devtype, interfaces=('pci-express-device', 'conventional-pci-device')):
        return [i for i in interfaces if devtype_implements(vm, devtype, i)]

but probably I can simply eliminate the parameter because nobody
is using it:

    def get_pci_interfaces(vm, devtype):
        interfaces = ('pci-express-device', 'conventional-pci-device')
        return [i for i in interfaces if devtype_implements(vm, devtype, i)]

> 
> > +    return [i for i in interfaces if devtype_implements(vm, devtype, i)]
> > +
> > +class VirtioVersionCheck(Test):
> > +    """
> > +    Check if virtio-version-specific device types result in the
> > +    same device tree created by `disable-modern` and
> > +    `disable-legacy`.
> > +
> > +    :avocado: enable
> > +    :avocado: tags=x86_64
> > +    """
> > +
> > +    # just in case there are failures, show larger diff:
> > +    maxDiff = 4096
> > +
> > +    def run_device(self, devtype, opts=None, machine='pc'):
> > +        """
> > +        Run QEMU with `-device DEVTYPE`, return device info from `query-pci`
> > +        """
> > +        with QEMUMachine(self.qemu_bin) as vm:
> > +            vm.set_machine(machine)
> > +            if opts:
> > +                devtype += ',' + opts
> > +            vm.add_args('-device', '%s,id=devfortest' % (devtype))
> > +            vm.add_args('-S')
> > +            vm.launch()
> > +
> > +            pcibuses = vm.command('query-pci')
> > +            alldevs = [dev for bus in pcibuses for dev in bus['devices']]
> > +            import pprint
> > +            pprint.pprint(alldevs)
> 
> I think it's an undesired print here, right?

Oops!  Yes, debugging leftover.

> 
> > +            devfortest = [dev for dev in alldevs
> > +                          if dev['qdev_id'] == 'devfortest']
> > +            return devfortest[0], get_interfaces(vm, devtype)
> > +
> > +
> > +    def assert_devids(self, dev, devid, non_transitional=False):
> > +        self.assertEqual(dev['id']['vendor'], PCI_VENDOR_ID_REDHAT_QUMRANET)
> > +        self.assertEqual(dev['id']['device'], devid)
> > +        if non_transitional:
> > +            self.assertTrue(0x1040 <= dev['id']['device'] <= 0x107f)
> > +            self.assertGreaterEqual(dev['id']['subsystem'], 0x40)
> > +
> > +    def check_all_variants(self, qemu_devtype, virtio_devid):
> > +        """Check if a virtio device type and its variants behave as expected"""
> > +        # Force modern mode:
> > +        dev_modern,_ = self.run_device(qemu_devtype,
> 
> s/dev_modern,_/dev_modern, _/ (blank space after comma. There are other
> cases bellow)

I will change it, thanks!

> 
> > +                                       'disable-modern=off,disable-legacy=on')
> > +        self.assert_devids(dev_modern, pci_modern_device_id(virtio_devid),
> > +                           non_transitional=True)
[...]

-- 
Eduardo

