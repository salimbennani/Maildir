Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 29 Nov 2018 12:10:33 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id ACD24580460;
	Wed, 28 Nov 2018 18:33:07 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga003-1.jf.intel.com with ESMTP; 28 Nov 2018 18:33:07 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AnKLM6BapQS2vD1ibyidjnCj/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpci/YR7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyNOAo2+?=
 =?us-ascii?q?YIUPAeQPPvtWoZfhqFsVtRuzBxKhBP/zxjJSmnP6wbE23uYnHArb3AIgBdUOsH?=
 =?us-ascii?q?HModr3LqgSX/q6zK/HzT7ecv1W2S3y6I/VeR0mpfGDR7VwftDLyUU1DAPFjk+f?=
 =?us-ascii?q?qYv+MjOa0+QCqWmb7+56We2zjG4nrhh8rz6yzckvkonEnpwZxkzA+Clj3Yo4K8?=
 =?us-ascii?q?O0RFRmbdOnDJdcrSCXOoluTs88X21lvDw2x74GtJKhYSQHyZUqywTCZ/GDcoWF?=
 =?us-ascii?q?5A/oWvyLLjdinn1lfaqyhxas/kikze3xTte00FlUoSpfiNXMtW4C1wbV6seZTv?=
 =?us-ascii?q?tx5ECh2SyA1wzL6+FEJ147lbbDJpI/3rI9koAfvVnNEyPogkn6kaybelk+9uWp?=
 =?us-ascii?q?6enrerDmqYWdN49whAH+KKMumsmnDOQ8MwgOWXWb+Oul2L3g40L5WrNKgeMykq?=
 =?us-ascii?q?XAt5DbK8IbqbCjAwJOzIYj5AiwDy283NQbg3YHNlRFdwyDj4TzPFHOOv/4Ae+l?=
 =?us-ascii?q?g1uwiDdr2+zGPrr5D5XJL3jDk6nucaxy6k5B0wczydFf55RJCrAOOv7zW0nxtM?=
 =?us-ascii?q?DGAR89KQC73+HnCNBl3IMERW2PGrOZML/VsVKQ5uIgOeiMZJMPtzb6MfQl5+Pu?=
 =?us-ascii?q?gmU/mV8SZqSp2ZoXaHalHvVpOUmZYHzsgssfHmcOpAYxUOvqiFiaWz5Je3myR7?=
 =?us-ascii?q?485i08CI++D4fDQZ6ijKaC3Ce8GJ1WYGdGB0uIEXfpcYWERvgNZDiTIs9njjwL?=
 =?us-ascii?q?S7yhR5U92hGpsQ/w06BnIfbM+i0EqZLj08B46PfIlREy8jx0DN6R03uXQGF2hW?=
 =?us-ascii?q?4IQz423KZioU1y0FuD0K54g+BGGtxX/f9GTgA6NZvExexgF9/yQh7BfsuOSFu+?=
 =?us-ascii?q?QdWpGzcxQsg1w98PeUl9HdqigwvH3yqrBb8VirOKCIY18qLaw3j+OcJ9x2za26?=
 =?us-ascii?q?kmilksWtFPOnG+hq5j6wjTAJbEnFiDmKa0a6sQxi7N+32FzWqVok5YVgl8UaHG?=
 =?us-ascii?q?XXAaYkvbttD55kLET7+zBrUrKApBycieKqRUbt3ll0lJRPDmON7GeWK+h3+wBQ?=
 =?us-ascii?q?qUxrOLdIflZn8S3DvDB0QekwAc53CGNRMgCSenuG/eCD1uFVTyY0Lj6+V+qXW7?=
 =?us-ascii?q?TlMqwAGOdUFuy721+hsNj/yGV/wTxq4EuDsmqzhsAFa93tfWC92cpwphfKRQe8?=
 =?us-ascii?q?897E1A1WLDswx9P5qgL695i14acgR3uV7u1hptBoVBl8gqsG0lzA5oJa2E11NB?=
 =?us-ascii?q?ciuS3YrsNb3PNmny4BevZrbM1VHaztmX9bkA6fQip1r4oQGmC1At83Nk09lSzX?=
 =?us-ascii?q?uR/ZHKDAsUUZLsXUc77Rl6p7fGYiYj44PYz2FjMa6xsjXawdImGPMlygq8f9dY?=
 =?us-ascii?q?KK6FFBLyH9cGCMS0Ke0qm0KmbhQLPO1J8K40PsWmd+aJ2aKxPeZgmi6mgnpD4I?=
 =?us-ascii?q?xnzk2M8C98QPbS35kZ2/GYwheHVzDkgVe7s8D4hZpLZSsPEWq40yTkApBeZrdz?=
 =?us-ascii?q?fYoSFWihOcm3ychgiJ73XH5Y8kWuB1cH2M+vZBqTYEbx3QxW1UQLv3OnnTG0wC?=
 =?us-ascii?q?BzkzEstqCfxjDBw/z+dBobPW5GXGljjVb2LYm0ldwaR1Wobw4ymRuh5Eb6wbVb?=
 =?us-ascii?q?patlI2nSR0dIYzb5L2V4XqSssbqCZtZF6Ik0viVPTOS8fVeaR6b/oxQAySPjHG?=
 =?us-ascii?q?hexDchezGxoJr5nB96iGObLHltqnrUYsVwxRbZ5NzBSv9dxDsGRC9kiTbJAliw?=
 =?us-ascii?q?JcWm/dKRl53bqOCxS3qhVoFPcSns1Y6BtDG05WpwDR29nvCznMbqEQw70S/9yt?=
 =?us-ascii?q?lrWj/ErBf6Yon3yau6NfhrcVVvBF/588B6AJ1xkpMshJEM3ngXnpaV8mAGkWvp?=
 =?us-ascii?q?MdVbxLjxbHwCRTMQx97V4Q7l2FBsL36TxoL5UGmdzdVlZ9WgfmwW3Sc95dhQCK?=
 =?us-ascii?q?iI9LxEgTd1ol2goALUYPh9nS0SxeEg6XEEmOEJpBQizj+GDb8MB0lYMjfhlxCJ?=
 =?us-ascii?q?79C4saVWa3yjcbm21Epig9+hCKuOrR1bWHb8Yp0iBzN/7t1jMFLQ133+8p3keN?=
 =?us-ascii?q?7Vbd4JtxybiRHAj/VOKJIql/oHni5nOWP7vX04xO83lx1u3ZemvIeZL2Vh5r62?=
 =?us-ascii?q?AhldNjftfcMc5intjbpCnsaRx42gBY9uGjIPXJv1V/6oFC8SuO/jNwaPFj08t3?=
 =?us-ascii?q?iaFaDeHQ+Z9EdpsXbPH4q3OHGQIXkT1c9iSwWFJExDnAAUWy03npwjGQCv2sPh?=
 =?us-ascii?q?a1115iwL6l77txtMyf9oNx/lXWfEvwqobjY0SJ6CLBtZ9A1C5kHVMdCA4eJ3BS?=
 =?us-ascii?q?1X4pqhrAmVIGyBewtIFX0JWlCDB137Priu4sTA8/GFBuWkKfvCe66OqetYV/eH?=
 =?us-ascii?q?3p+v1opm/zCRNsSAJHViDvs72lZdUnB9AcjWhzIPSykPnSLXc8GbvAu8+jFwrs?=
 =?us-ascii?q?2n8PTkRgPv5YiMC7tTK9lv+Aq2gaCMN+GOniZ5NC1Y24gIxX/JzrgfwVEThztv?=
 =?us-ascii?q?dzmrDbQPqyrNQLjMla9QCh4RczlzO9dQ76IgwglNPtbWhcno1rFjlP46FVdEWU?=
 =?us-ascii?q?blmsGofsEKJ2C9NFXaBEeELriGJDvLw93pbqO4U7FfkOJUtxioszaBD0DjJiiD?=
 =?us-ascii?q?lyXuVx23LeFMjSSbMAZCt42nbhltCXbsTNT9Zx2/Md93iyA2wLIuinPLM24cLS?=
 =?us-ascii?q?Zzc0dXorKM6iNYh+11G3Zd4Xp9MemEhyGZ4vHYK5kMt/trByV0l+RC73U7y7ta?=
 =?us-ascii?q?9idERPNulSvWr95upUymk+aVxjpmVhpOtihEhIaRsUp+PqXZ88oIZXGR0QgM5i?=
 =?us-ascii?q?28FhEDtdZ5QonioaFbjNTSkavhJStq/Nfd/M9aDM/RfpGpKn0kZCvgFjfSA0M+?=
 =?us-ascii?q?TTesfTXbjktUireJ9nSShpc/o5no3pEJT+kIBxQOCvoGBxE9T5Q5K5BtU2ZhyO?=
 =?us-ascii?q?bDgQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AoAABPT/9bh0O0hNFkHgEGBwaBUQkLA?=
 =?us-ascii?q?YNrFBODeYN7kCSCDRSJDYkqhHeBcS4TAYduIjQJDQEDAQEBAQEBAgETAQEBCA0?=
 =?us-ascii?q?JCCkjDII2JAGCYgECAwECIAQZARsdAQMCCQEBBQULDQICJgICAx4BAREBBQEcB?=
 =?us-ascii?q?hMFgxyBaQEDFQWbAjyLDXwWBQEXgncFhD0KGScNXYE3AgYSeYsLghaBEYMSgle?=
 =?us-ascii?q?FLoJXApAaj1MuBwKOBYMsGJEVLI4ziVowgSWCDTMaI4EBgjuCGzWDOIpgMjOBB?=
 =?us-ascii?q?QEBjHwBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AoAABPT/9bh0O0hNFkHgEGBwaBUQkLAYNrFBODeYN7kCS?=
 =?us-ascii?q?CDRSJDYkqhHeBcS4TAYduIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCY?=
 =?us-ascii?q?gECAwECIAQZARsdAQMCCQEBBQULDQICJgICAx4BAREBBQEcBhMFgxyBaQEDFQW?=
 =?us-ascii?q?bAjyLDXwWBQEXgncFhD0KGScNXYE3AgYSeYsLghaBEYMSgleFLoJXApAaj1MuB?=
 =?us-ascii?q?wKOBYMsGJEVLI4ziVowgSWCDTMaI4EBgjuCGzWDOIpgMjOBBQEBjHwBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,292,1539673200"; 
   d="scan'208";a="55302958"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 28 Nov 2018 18:33:05 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727561AbeK2Ngr (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 29 Nov 2018 08:36:47 -0500
Received: from mail-it1-f196.google.com ([209.85.166.196]:54968 "EHLO
        mail-it1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727022AbeK2Ngr (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 29 Nov 2018 08:36:47 -0500
Received: by mail-it1-f196.google.com with SMTP id i145so402288ita.4;
        Wed, 28 Nov 2018 18:33:02 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=iFOoTaXGj6tYMsmgb+co40WYY8rw9ywKV88XkDGKqXg=;
        b=mjykyJrDmKWW4T6KbYazTr512Eutk/JOojLMJ6zN5c3IgTWTCSgtI/B7kqBecPS/ts
         Xk8Q5s/Om57wWpSgKuoA4tFy9P9kqvXucnHdYYAGsC6Pf5519veXscOl7dBz+7e+3S5f
         tkOd5YaQqTW1+Rp7ngdll5cA8UrNX78JajyEUfG2QxX6gT6SBiJjfn4bVke7O173hYZ/
         3+xA0eBOv30xTs0YLoO+RvQm2RJKCtwRDJ7p31mTiqMgYGhqDaavqKUQJIvWmd8Uzx9S
         NuA97oXRr7lDIjzSYBR6AfPVNNSb1Vo1QNQtT+x3Khz1cSsv3M7Qc8NqtzTzI7gglbt4
         UcRg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=iFOoTaXGj6tYMsmgb+co40WYY8rw9ywKV88XkDGKqXg=;
        b=QCE1YzHZ92WShWEh+pgEVm3ssPZ5dbBfKJA10fbkFWNmDfbQcFeakuBP0MB/d3TgJE
         aSYkE6WN70Ozn3HctuhXLNnunYHVPNWOyzYBB59nmGRGIP2+ShXtsTFom5Fzlc9qAqOS
         tz2gvzeYo/F7tObu2kvZwO2B/KobZP/6Gn5IMlmn01UfhJxJllhT9QBAyCVOfhn7fanK
         PnBQZG6sbfLl4bZvbPAy11Vja3sc6Rmd1DE4dWCEIHvXZdvY2mQS5fUpqFJ9BRQ4cTWo
         5/0AFnItTxnssWPORt3+xmhInO+TDa+Y+Brd5yrgT1FH61iG4bcsl9W/I6UsPtCyHD+g
         ttTg==
X-Gm-Message-State: AA+aEWaIR11zXXQ1ArW0CwmwgjZvgfkhgByDsP/qsJc6hjBp1wOjsVLj
        sAlavUB3EaR5IHUK0spZVh6ikgtJDTjTXpy0cYQ=
X-Google-Smtp-Source: AJdET5fbVVQICnGBU9A6BJqsYK1JgsOfU5+ZYBwmaGoh8aB9pLl33JxhMkjGGQAB8WjV6/7OCLyrhS9a4lvz12DwJOY=
X-Received: by 2002:a02:98d2:: with SMTP id c18mr32985628jak.11.1543458781965;
 Wed, 28 Nov 2018 18:33:01 -0800 (PST)
MIME-Version: 1.0
References: <1543407379-3144-1-git-send-email-laoar.shao@gmail.com> <60467855-ea5f-3351-8b88-ffdfa60501e0@gmail.com>
In-Reply-To: <60467855-ea5f-3351-8b88-ffdfa60501e0@gmail.com>
From: Yafang Shao <laoar.shao@gmail.com>
Date: Thu, 29 Nov 2018 10:32:25 +0800
Message-ID: <CALOAHbBGtJmwrT4pNbia1SX12NjVQjx49YbG=yJ7-o1FaP-g_A@mail.gmail.com>
Subject: Re: [PATCH net-next] tcp: introduce skb_rbtree_walk_safe() and use it
 in tcp_clean_rtx_queue()
To: Eric Dumazet <eric.dumazet@gmail.com>
Cc: David Miller <davem@davemloft.net>,
        Eric Dumazet <edumazet@google.com>,
        netdev <netdev@vger.kernel.org>,
        LKML <linux-kernel@vger.kernel.org>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Wed, Nov 28, 2018 at 10:44 PM Eric Dumazet <eric.dumazet@gmail.com> wrote:
>
>
>
> On 11/28/2018 04:16 AM, Yafang Shao wrote:
> > When walk RB tree, we'd better use skb_rbtree_walk* helpers, that can make
> > the code more clear.
> > As skb_rbtree_walk() can't be used in tcp_clean_rtx_queue(), so the new
> > helper skb_rbtree_walk_safe() is introduced.
>
> This makes things slower. Let me explain inline.
>
> >
> > Signed-off-by: Yafang Shao <laoar.shao@gmail.com>
> > ---
> >  include/linux/skbuff.h | 5 +++++
> >  net/ipv4/tcp_input.c   | 5 ++---
> >  2 files changed, 7 insertions(+), 3 deletions(-)
> >
> > diff --git a/include/linux/skbuff.h b/include/linux/skbuff.h
> > index 73902ac..37ff792 100644
> > --- a/include/linux/skbuff.h
> > +++ b/include/linux/skbuff.h
> > @@ -3256,6 +3256,11 @@ static inline int __skb_grow_rcsum(struct sk_buff *skb, unsigned int len)
> >               for (skb = skb_rb_first(root); skb != NULL;                     \
> >                    skb = skb_rb_next(skb))
> >
> > +#define skb_rbtree_walk_safe(skb, root, tmp)                                 \
> > +             for (skb = skb_rb_first(root);                                  \
> > +                  tmp = skb ? skb_rb_next(skb) : NULL, skb != NULL;          \
> > +                  skb = tmp)
> > +
> >  #define skb_rbtree_walk_from(skb)                                            \
> >               for (; skb != NULL;                                             \
> >                    skb = skb_rb_next(skb))
> > diff --git a/net/ipv4/tcp_input.c b/net/ipv4/tcp_input.c
> > index f323978..ab6add2 100644
> > --- a/net/ipv4/tcp_input.c
> > +++ b/net/ipv4/tcp_input.c
> > @@ -3043,7 +3043,7 @@ static int tcp_clean_rtx_queue(struct sock *sk, u32 prior_fack,
> >       struct tcp_sock *tp = tcp_sk(sk);
> >       u32 prior_sacked = tp->sacked_out;
> >       u32 reord = tp->snd_nxt; /* lowest acked un-retx un-sacked seq */
> > -     struct sk_buff *skb, *next;
> > +     struct sk_buff *skb, *tmp;
> >       bool fully_acked = true;
> >       long sack_rtt_us = -1L;
> >       long seq_rtt_us = -1L;
> > @@ -3055,7 +3055,7 @@ static int tcp_clean_rtx_queue(struct sock *sk, u32 prior_fack,
> >
> >       first_ackt = 0;
> >
> > -     for (skb = skb_rb_first(&sk->tcp_rtx_queue); skb; skb = next) {
> > +     skb_rbtree_walk_safe(skb, &sk->tcp_rtx_queue, tmp) {
> >               struct tcp_skb_cb *scb = TCP_SKB_CB(skb);
> >               const u32 start_seq = scb->seq;
> >               u8 sacked = scb->sacked;
> > @@ -3126,7 +3126,6 @@ static int tcp_clean_rtx_queue(struct sock *sk, u32 prior_fack,
> >               if (!fully_acked)
> >                       break;
> >
> > -             next = skb_rb_next(skb);
>
> We call skb_rb_next() here only, not at the beginning of the loop.
>
> Why ?
>
> Because we can break of the loop if the current skb is not fully acked.
>
> So your patch would add unnecessary overhead, since the extra sk_rb_next()
> could add more extra cache line misses.
>

I thought this extra sk_rb_next() doesn't add much overhead before,
since it won't take long time to execute.
Seems I made a mistake.

Thanks
Yafang
