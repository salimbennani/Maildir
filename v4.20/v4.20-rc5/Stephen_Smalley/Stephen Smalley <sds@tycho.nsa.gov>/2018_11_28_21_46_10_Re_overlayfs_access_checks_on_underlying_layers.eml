Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 29 Nov 2018 08:41:21 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id AF9495803ED;
	Wed, 28 Nov 2018 13:56:35 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 28 Nov 2018 13:56:35 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AhBGq+RyNDtBMjfPXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e4eKfad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYO/RkfqPZYNgUW2xPUMhMXCBFG4+w?=
 =?us-ascii?q?cpcDA+8HMO1FrYfyukEOoAOjCweyCuPhyjxGiHH40qI10esuDQ7I3Bc4H98Mq3?=
 =?us-ascii?q?nUsNf4Ob0OXeypwqTFzzPOZO5W1zfn74jIdwgsr+yQXb1uacrRyVcgFwXYhVuN?=
 =?us-ascii?q?rIzqJTeV1uATvGmb8uFtUvmvhHM8qwxqvjiuxtsjionOho4PzFDE7j92zJw6Jd?=
 =?us-ascii?q?2/Vk52eNipG4ZTuSGCL4Z6XN8uTmVytConxLAKp4S3cDUJxZg73RLSav6Kf5CV?=
 =?us-ascii?q?7h/sW+udOzd1iG9/dL6hiBu+71KsxvD6W8KpylhFtDBFncPJtn0V1xzc9MyHSv?=
 =?us-ascii?q?xl80e/1jaAyRrT5vtHIU8qj6rbLYAuwroqmpoUq0TDETf6mETwjKCIakUp4vak?=
 =?us-ascii?q?5/jjb7n8u5OROZF4hhvjPqkthsCzG+U1PwoWU2ie4+u81bnj/UPjQLVNi/07iq?=
 =?us-ascii?q?3ZsJHcJcQGqa+1GgxV3Zg56xa5ETim1M0UnX4JLVJDZh2HlZPkO0/BIP/mF/ez?=
 =?us-ascii?q?mVesnylxx/DAILLhBo/BLn/ZkLfuZbp98VJTyBIvzdBD4JJZErUBIPPwWkDvrt?=
 =?us-ascii?q?DZAQI5Pheww+bmDtV9y4wfVXiOAq+fLKPdr1uI6vgzLOmLYY8foCz9JOQ95/7y?=
 =?us-ascii?q?kX85nkcQfamz0psWdHC3BPNmL1+ZYXrxmNgBF2gKsxE6TOzrjl2CTDFSa2yzX6?=
 =?us-ascii?q?I6+jE0FoamAZ3fSYCqhbyLxD27EYFOZmBaFlCMFm/ld4eDW/gSci6SIchhkjoC?=
 =?us-ascii?q?VbimUIIh0RCutAnny7toNObU+ysYtY7929hx/eHciRYy9TlsBcSHz26NV310nn?=
 =?us-ascii?q?8PRzIuxq9/ukx9ylCA0aRimfxXD95T6uhNUgc7M57c0uN7B8rzWgLHYteGVlKm?=
 =?us-ascii?q?Ts+6DjE2S9I728UObFplG9W+khDD2DKnA7wPmLyNHpA09qPc0GL3J8Zy0HvG0K?=
 =?us-ascii?q?ghj187QspAL2Gmh6h/9xTNCI7NiUmWi6GqdaEE1i7X6GiD1XaOvF1fUANoTKrK?=
 =?us-ascii?q?R24faVXModT5/EzCSaSuBqohMgdGzc6CKa5KatnygFVCRffjPsneYm2rl2exAx?=
 =?us-ascii?q?aI2q2DbI7wd2oB2yXdDVAOkxoP8naeKQg+GiChrnrDAzN0C1LgfVng8elkp3O9?=
 =?us-ascii?q?VU870QeKYlZl17q0/B4VmPOdR+kS3rICpCcutTF0EEyh0NLRDtqKvxBhc7lEYd?=
 =?us-ascii?q?Mh/FdH0nrUtxB8PpylKKBiml4ecgRts0PyzRl3DZ9AkcwrrHMswwp/MqaY0FJH?=
 =?us-ascii?q?dzOF0pH8ILzXKm/u/B+xb67awE3R0NGT+q0X8vQ3t03jvB21Fkol63hoyd1V3G?=
 =?us-ascii?q?WT55rUDAseS4n+Ulsq+BdgobHaYS49553P2H1oMKm0tCLC2t0zCOskzBagY8lQ?=
 =?us-ascii?q?MKeeGADuFM0aAtCkKPY2lFixchIEIOdS+bY0PsO7bfeJxLSnPedgnD28i2RH75?=
 =?us-ascii?q?tw0kaN9yp6V+7J0IwJw/Ce3gubSTj8iE2tvdzwmYBBfTsSBHawyTD4BI5NYa1/?=
 =?us-ascii?q?ZZwLCWayLMKt3NVxmpntV2Re9FG9HVMG2daldgaIYFz5wAJfy14XoXuhmSajyz?=
 =?us-ascii?q?x0kjcprreQ3SDUwuTicgYHNXBPRGV4kVjsJo20hcgAXEe0dwgpiAel5UHiyqlb?=
 =?us-ascii?q?paRzNWnSTV1TfyjrKWFvSa+wtruEY85S55IkqyRXUOKgYV+ETr7xuQcV0yTmH2?=
 =?us-ascii?q?FG3jA0aymquonlnxx9kG+dLmx8rGDaecFzwhfT/sfcSuRS3joFRSl4jyfYBl6n?=
 =?us-ascii?q?Mtmt/NWUkYrDs++kW2KgUJ1TbTfkzYeauCSn4m1qBAW1n+qvld3/DQg6zSj72s?=
 =?us-ascii?q?FqVCrSqxbweIvr16W8Me98ekloBVn869d1G41kk4swgo0Q1mYehpmP4XUHlmLz?=
 =?us-ascii?q?O81B2a3idHoNWSILw9nN7QjmwkJjL2iFx4LkVnqHxMthaMK3YmcX2iI78sBLB7?=
 =?us-ascii?q?2Y7L1CnStpvFW4qRjdbuR6njcY0fEu8mIVg/kVuAoxySWQGrUSHUhbPSP2jRiJ?=
 =?us-ascii?q?4c6xrL5LZGmxa7i/z1RxncquDLyZpgFcWXD5eootHCNq78V/Nk7M32P36o3+ZN?=
 =?us-ascii?q?bQatcTvAWOkxjcl+hVNI4xlv0SiCp7PmL9uGcpyu8hghxowJG6p5OHK2R28aK9?=
 =?us-ascii?q?Ax5YMCD1ZswJ9jHsi6ZegtiZ34S1Epp9HTULWYPiTei0HzIKqfTnKwGOHSUnpX?=
 =?us-ascii?q?iBHrrfGRKf5F1ir3LSCJ2rM3CXJH8EzdRtXhWdJUpfgBwKUzU+hJI2CgeqxMn5?=
 =?us-ascii?q?ekdj+j8R/kL4qgdLyu9wNRnwSGLfqxmzajsuVJiTNhlW7hxB50fIN8yR9PlzEj?=
 =?us-ascii?q?pc/p2gqgyNN2Oaax5JDWEPRkyLGVTjMqOy6tnH9uiSHvC+IOfWYbWStexeUO+F?=
 =?us-ascii?q?xJKo0ot75jaMK9+APn94A/0g3UpDW395Ft/dmzUOTSwXii3MY9SapBe65i14sM?=
 =?us-ascii?q?S//O73VwLo4IuFE6FSPsl3+xCqnaeDMPadhCZnJjZZ1ZMMxn7IxKIc3F4IjCFu?=
 =?us-ascii?q?eCeiEa4dtS7WV6/Qnq5XDxgGayJ8LsdI7qQ83hVTNs7fkN/6yrl4jvstAVdfSV?=
 =?us-ascii?q?Phgt2pZdANI2ylLlzHGV2ENK6YKjzL2c33ZaK8RKZUjOVVsR2wpDmaH1XiPjSF?=
 =?us-ascii?q?iznmSRSvPftQgyGcORxUoJu9fQp1CWj/UNLmbQW2MMN2jT0z27E7mmnGOnIcMT?=
 =?us-ascii?q?didUNAtbmQ7SJegvViFG1N9HtlLe+YmymH6+nUMIoZsfxuAi5sjeJV/Gw6y6dJ?=
 =?us-ascii?q?7CFDXPF0mDHdrthro1GnlOmA0jtmUBpUpTZNi4KGpkFiOaTf9pldVnfI5hMN7W?=
 =?us-ascii?q?OMCxsUo9tpEMHgu6dVyouHqKWmDTZB99XPtfAOCtLZJMPPZH8gMh7uAxbPHgYf?=
 =?us-ascii?q?QDKqc2HC0R9zivaXo0aJo4A6p56ko58HTrtWRRRhDf8BIlh0F9wFZpFsV3Urlq?=
 =?us-ascii?q?DN351A3ma3sBSEHJYShZvATP/HRKy2cDs=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAAC/Dv9bh0O0hNFkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBVAIBAQEBCwGBWoIRJ4N5lCBSBoEILRSJCo44gV8UGBMBhECDLiI?=
 =?us-ascii?q?3Bg0BAwEBAQEBAQIBEwEBAQgNCQgpL4I2JAGCYQEBAQECAQECIBU0CgMFAQkBA?=
 =?us-ascii?q?QoYAgImAgIDVAYNBgIBAQGCXT+BdQUIAwKnH4EvhUCEbIELiwsXeIEHgTiCa4R?=
 =?us-ascii?q?OARIBH4MEglcCiQ4GggOEUDRQjltVCZErBhiBWog0hweKH44pgVyBBnErCAIYC?=
 =?us-ascii?q?CEPgyeCJxeOOyMxgQUBAYslgj4BAQ?=
X-IPAS-Result: =?us-ascii?q?A0ANAAC/Dv9bh0O0hNFkGgEBAQEBAgEBAQEHAgEBAQGBVAI?=
 =?us-ascii?q?BAQEBCwGBWoIRJ4N5lCBSBoEILRSJCo44gV8UGBMBhECDLiI3Bg0BAwEBAQEBA?=
 =?us-ascii?q?QIBEwEBAQgNCQgpL4I2JAGCYQEBAQECAQECIBU0CgMFAQkBAQoYAgImAgIDVAY?=
 =?us-ascii?q?NBgIBAQGCXT+BdQUIAwKnH4EvhUCEbIELiwsXeIEHgTiCa4ROARIBH4MEglcCi?=
 =?us-ascii?q?Q4GggOEUDRQjltVCZErBhiBWog0hweKH44pgVyBBnErCAIYCCEPgyeCJxeOOyM?=
 =?us-ascii?q?xgQUBAYslgj4BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,292,1539673200"; 
   d="scan'208";a="53060530"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 28 Nov 2018 13:56:33 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726580AbeK2I7f (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 29 Nov 2018 03:59:35 -0500
Received: from uphb19pa10.eemsg.mail.mil ([214.24.26.84]:46779 "EHLO
        USFB19PA13.eemsg.mail.mil" rhost-flags-OK-OK-OK-FAIL)
        by vger.kernel.org with ESMTP id S1726307AbeK2I7f (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 29 Nov 2018 03:59:35 -0500
X-Greylist: delayed 743 seconds by postgrey-1.27 at vger.kernel.org; Thu, 29 Nov 2018 03:59:33 EST
X-EEMSG-check-008: 214692866|USFB19PA13_EEMSG_MP9.csd.disa.mil
Received: from emsm-gh1-uea11.ncsc.mil ([214.29.60.3])
  by USFB19PA13.eemsg.mail.mil with ESMTP/TLS/DHE-RSA-AES256-SHA256; 28 Nov 2018 21:43:46 +0000
X-IronPort-AV: E=Sophos;i="5.56,292,1539648000"; 
   d="scan'208";a="21115754"
IronPort-PHdr: =?us-ascii?q?9a23=3ADCKFmR9VjzEe2v9uRHKM819IXTAuvvDOBiVQ1K?=
 =?us-ascii?q?B+0OIVIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbD?=
 =?us-ascii?q?Qizfssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBB?=
 =?us-ascii?q?r/KRB1JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryh?=
 =?us-ascii?q?vOrHtIeuBWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3?=
 =?us-ascii?q?o05MLwqxbOSxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RS?=
 =?us-ascii?q?qt4LtqSB/wiScIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyaOuB+fqfAdt0EQ2?=
 =?us-ascii?q?RPUNtaWyhYDo+ic4cDCuwMNvtaoYbgvVsDtQawCxeiBO3vyTFGiHH50qI43O?=
 =?us-ascii?q?s9Hg/LxxAgEtAUvXjIsNn4OqUfXOaox6fI1zXDaPZW1C/g5ojUbB8hufGMUq?=
 =?us-ascii?q?x2ccHM1EcvEhnKjlGUqYP7PzKey+MAs3OG4Op7Tu+vl24mpB1xojio3MssjJ?=
 =?us-ascii?q?LJiZgPxlDL8iV53p84KNulQ0B4ed6pCIZcui6VOodsQs4uXntktDg1x7EYo5?=
 =?us-ascii?q?K3YS4Hw4k9yRHFcfyIaY2I7wrmVOaWPDh3mmpoeKm6hxau6UigzfD8VtWs3F?=
 =?us-ascii?q?ZKsCVFlt7Mu2gR1xPJ8MiHS+Z9/ly71TaT1wHc9uFEIUcumardN5Eh2aI/mo?=
 =?us-ascii?q?AWsUTCGi/6gET2jKmIeUU44uWk9uvqb7r8qpKcKoN4kB/yP6swlsClHOg0Kg?=
 =?us-ascii?q?0OUHKa+eS42r3j50r5QLBSg/0tj6bZq4vXJdgbp6GlAw9V1Zwv6xCkDzi8yt?=
 =?us-ascii?q?gYkn4HLExddBKdk4fpI03OIOz/DfqnhlSskTRrx/TBPr36GZjNNXnCn6n7fb?=
 =?us-ascii?q?lj9kFcyRA/zdBC55hMELEOPOrzWlPttNzfFhI5LQO0w+HnCdpn0oMTQniPDb?=
 =?us-ascii?q?GEP6PSq1CI+vgjLPWLZI8QoDz9MeQq5+byjX8lnl8QZa6p3Z4QaHCjGPRpOV?=
 =?us-ascii?q?mWbmT3j9cbD2gFowo+Q/b2iFGYTTFTYHOyVbom5j4nEIKmEZvDRoe1jbOa0i?=
 =?us-ascii?q?e7H4NZZmRbBVCXCnroeYSEVOkIaC2POc9ujCcEWaKmS4872hGkrBX6xKZ/Lu?=
 =?us-ascii?q?rI5i0Ysoru1MNv6O3XlRAz9Dx1D8KG3m6XSWF7g3kIRzg33K9iu0By1lCD0a?=
 =?us-ascii?q?1gifxCCdNT/+9JUhs9NZPE1+x1Ec3yWgbac9eRUlmmX9GmDSg0TtI2xN8OeV?=
 =?us-ascii?q?hyF8++gRDE2iqgG6UVmKCTBJwo7qLc2GD8J8J8y3bAyakggEAqQshROm28gK?=
 =?us-ascii?q?5w6QzTCpXXk0WWiamqb74Q3C3T+2eZy2qBokVYXBR3UaXfUnAVflHWosjh5k?=
 =?us-ascii?q?PeU7+uDqwqMg9Ayc6EN6tLZcTljUhARPfiP9TeZWyxm3yrCBaWybODcpDqd3?=
 =?us-ascii?q?8e3CrDEkgElR4c/XKcOQg5HCehrHrUDCZyGlL3f0Ps7e5+pWu/Tk81yQGKck?=
 =?us-ascii?q?Jg26O7+h4OmPOTVe0T0awAuCo6tTV0E0iy38jMB9qDuQVhZqNcbs054Ftd0m?=
 =?us-ascii?q?LZrQN9NIS6L69+nl4ebxh3v0T22hVsFIpAlckqrHU3zAt9Mq+YzlxBeC2C3Z?=
 =?us-ascii?q?zqOb3YNHPy/BaxZK7SwF3e18yW+qgX4vQit1rjpB2pFlYl83h/ztZU3WGT5p?=
 =?us-ascii?q?HRDAoSSp/xSFg4+AV6p77Afikx/Z/b1XppMfr8jjiX/tMqAOw+gi2ycs1SPK?=
 =?us-ascii?q?LMQArzEMkdHOC1OuEwllSoKBIZarN87qkxavi6euOG1ajjB+NpmDarnCwT+4?=
 =?us-ascii?q?xm+l6d/Cp7DOjT1tAKxO/OjVjPbCv1kFr06pO/ootDfzxHWzPlkSU=3D?=
X-IPAS-Result: =?us-ascii?q?A2BYAAAHC/9b/wHyM5BkGwEBAQEDAQEBBwMBAQGBVAMBA?=
 =?us-ascii?q?QELAYFaKYFoJ4N5lCBMAQEBAwaBCC2JHo44gWY4AYRAAoMsIjcGDQEDAQEBA?=
 =?us-ascii?q?QEBAgFsKII2JAGCYQEBAQECASMVNAoDBQsLGAICJgICVwYNBgIBAYJeP4F1B?=
 =?us-ascii?q?QinK4EvhUCEbYELiwsXeIEHgTiCa4ROARIBH4MEglcCiQ4GggOEUDRQjltVC?=
 =?us-ascii?q?ZErBhiBWog0hweKH5AFImRxKwgCGAghD4MngicXjjshAzCBBQEBiyWCPgEB?=
Received: from tarius.tycho.ncsc.mil ([144.51.242.1])
  by emsm-gh1-uea11.NCSC.MIL with ESMTP; 28 Nov 2018 21:43:45 +0000
Received: from moss-pluto.infosec.tycho.ncsc.mil (moss-pluto [192.168.25.131])
        by tarius.tycho.ncsc.mil (8.14.4/8.14.4) with ESMTP id wASLhiCu024844;
        Wed, 28 Nov 2018 16:43:44 -0500
Subject: Re: overlayfs access checks on underlying layers
To: Miklos Szeredi <miklos@szeredi.hu>
Cc: Vivek Goyal <vgoyal@redhat.com>,
        Ondrej Mosnacek <omosnace@redhat.com>,
        "J. Bruce Fields" <bfields@fieldses.org>,
        Mark Salyzyn <salyzyn@android.com>,
        Paul Moore <paul@paul-moore.com>, linux-kernel@vger.kernel.org,
        overlayfs <linux-unionfs@vger.kernel.org>,
        linux-fsdevel@vger.kernel.org, selinux@vger.kernel.org,
        Daniel J Walsh <dwalsh@redhat.com>
References: <CAJfpegs9JjkXguemL4qSiBvRP6Dnut-D+nJo-oLFXkfCL1Egvw@mail.gmail.com>
 <CAJfpegvfqx+0D32n1h2X7oj5d1mZWiLTcSSGpBnD+ba7AKzPyA@mail.gmail.com>
 <20181127210542.GA2599@redhat.com>
 <CAJfpegtQGM2z9TOt3DWwd39fC60cQknsC4vNnj7YimVEubRzUg@mail.gmail.com>
 <20181128170302.GA12405@redhat.com>
 <377b7d4f-eb1d-c281-5c67-8ab6de77c881@tycho.nsa.gov>
 <CAJfpegtNhcWD0VWy6LPtoDtQBfPu4x5iFsB053UMCidj6oMsuw@mail.gmail.com>
From: Stephen Smalley <sds@tycho.nsa.gov>
Message-ID: <26bce3be-49c2-cdd8-af03-1a78d0f268ae@tycho.nsa.gov>
Date: Wed, 28 Nov 2018 16:46:10 -0500
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <CAJfpegtNhcWD0VWy6LPtoDtQBfPu4x5iFsB053UMCidj6oMsuw@mail.gmail.com>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 11/28/18 3:24 PM, Miklos Szeredi wrote:
> On Wed, Nov 28, 2018 at 8:32 PM Stephen Smalley <sds@tycho.nsa.gov> wrote:
>>
>> On 11/28/18 12:03 PM, Vivek Goyal wrote:
>>> On Wed, Nov 28, 2018 at 11:00:09AM +0100, Miklos Szeredi wrote:
>>>> On Tue, Nov 27, 2018 at 10:05 PM Vivek Goyal <vgoyal@redhat.com> wrote:
>>>>>
>>>>> On Tue, Nov 27, 2018 at 08:58:06PM +0100, Miklos Szeredi wrote:
>>>>>> [resending with fixed email address for Paul Moore]
>>>>>>
>>>>>> Moving discussion from github[1] to here.
>>>>>>
>>>>>> To summarize: commit 007ea44892e6 ("ovl: relax permission checking on
>>>>>> underlying layers") was added in 4.20-rc1 to make overlayfs access
>>>>>> checks on underlying "real" filesystems more consistent.  The
>>>>>> discussion leading up to this commit can be found at [2].  The commit
>>>>>> broke some selinux-testsuite cases, possibly indicating a security
>>>>>> hole opened by this commit.
>>>>>>
>>>>>> The model this patch tries to follow is that if "cp --preserve=all"
>>>>>> was allowed to the mounter from underlying layer to the overlay layer,
>>>>>> then operation is allowed.  That means even if mounter's creds doesn't
>>>>>> provide permission to for example execute underying file X, if
>>>>>> mounter's creds provide sufficient permission to perform "cp
>>>>>> --preserve=all X Y"  and original creds allow execute on Y, then the
>>>>>> operation is allowed.  This provides consistency in the face of
>>>>>> copy-ups.  Consistency is only provided in sane setups, where mounter
>>>>>> has sufficient privileges to access both the lower and upper layers.
>>>>>
>>>>> [cc daniel walsh]
>>>>>
>>>>> I think current selinux testsuite tests are written keeping these
>>>>> rules in mind.
>>>>>
>>>>> 1. Check overlay inode creds in the context of task and underlying
>>>>>      inode creds (lower/upper), in the context of mounter.
>>>>>
>>>>> 2. For a lower inode, if said file is being copied up, then only
>>>>>      check MAY_READ on lower. This is equivalent to mounter creating
>>>>>      a copy of file and providing caller access to it (context mount).
>>>>>
>>>>> For the case of special devices, we do not copy up these. So should
>>>>> we continue to do check on lower inode in the context of mounter
>>>>> (instead of not doing any check on lower at all).
>>>>
>>>> Hmm, I'm trying to understand the logic... If we follow the "cp
>>>> --preserve=all" thing, than mounter needs to have CREATE permission
>>>> for the special file, not READ or WRITE.  Does that make sense?  Would
>>>> that help with the context= mount use case?
>>>
>>> Ok. If we follow "cp --preserve=all" methodology, then checking for
>>> mounter CREATE permission on upper for special files makes sense. Or
>>> change logic to copy up this special file during open. I am assuming
>>> we don't copy up special file during open as it is not necessary
>>> for things to work but copying up will work as well?
>>>
>>> So rules will become.
>>>
>>> - Two levels of checks.
>>> - For lower level inode, check MAY_READ for regular files. (including
>>>     exec).
>>> - For special files, only make sure mounter can CREATE object in upper.
>>>
>>> - What about checks on files on upper/. As of now we seem to check
>>>     access in mounter's context if it is regular file. Skip the checks
>>>     completely for special files and for executables.
>>>
>>> While non-context mount should still be ok, but this means lot of
>>> privilige granting to unprivileged process using context mounts. So
>>> unprivileged process which could not open a device/socket/fifo for
>>> read/write on host fs, can open it for those operations for context
>>> mounts.
>>>
>>> IOW, for context mount case, an unprivileged user will gain lot of
>>> privileges. But that seems to be the point of context mount anyway
>>> on regular disks. If a disk is mounted using context mount option,
>>> then all real labels are ignored and all access checking happens
>>> using context label. We are doing similar thing. With one step extra
>>> and that is making sure if mounter itself can not do certain operation
>>> on host, that will still be denied.
>>>
>>> This probably means that context= mounts should be used very carefully.
>>> It will grant lot of priviliges to the process (and allow operations
>>> which process could not do on host without overlayfs mount).
>>>
>>> Case of device file still baffels me though. We don't do any mounter's
>>> checks on device files. So if a device file is on upper which mounter
>>> can't open for read but mounter is still granting priviliges to client
>>> to open that device file. That's unintutive to me and seems counter
>>> to the principle of that mounter can't give more priviliges than what
>>> it itself can't do on host.
>>>
>>> Dan, stephen, paul moore, does this sound ok to you folks from selinux
>>> point of view.
>>
>> It seems wrong to check CREATE when no file is being created, and doing
>> so could lead to over-privileging of the mounter context, requiring one
>> to allow a mounter context to create device nodes just to allow a client
>> task context to read/write via already existing device nodes through an
>> overlay.
> 
> Point taken.
> 
>>
>> Checking READ but not EXECUTE upon an execute check could permit a
>> mounter to execute unauthorized code, if it can context mount from a
>> readable-but-not-executable context to an executable context.
>>
>> Note btw that cp --preserve=all doesn't quite operate as expected if
>> dealing with a context mount.  You can't preserve the original security
>> context if copying to a context mount unless the two contexts happen to
>> already match.  So I'm not sure how that model applies in the case of a
>> context mount.
>>
>> Does the breaking commit (007ea44892e6) fix a real bug affecting users?
>>    If not, I'd recommend just reverting it.
> 
> That is certainly an option, but...  this is all about context=
> mounts, right?  Which allows mounter to override MAC checks under the
> new mount?  On any mount, not just overlay, right?  So why is overlay
> special?

With other filesystems, the files are only accessible under the context 
specified by the mounter (and you can't mount it twice with differing 
context mount options). With overlay, the file is simultaneously 
accessible under both the context specified by the mounter via the 
overlay and under its lower/upper context via the lower/upper dir.

Generally we only use context mounts on other filesystems when they have 
no label information at all (no security.selinux xattrs) or when they 
are completely untrusted to provide that information; the context 
specified by the mounter is the only basis for access control.  With 
overlay, we are frequently dealing with labeled lower and upper 
directories in a filesystem we trust.

It seems like overlay has a goal of preventing the mounter from 
escalating its access through an overlay mount.

> I'd just like to see proper justification for why we should be doing
> those checks on underlying layer that simply don't belong there, IMO.
>   I'm sure you know better than I that it's not just about real bugs
> affecting users, it's about having a clear, well defined model to base
> the design on.   And by reverting the breaking commit, I don't see us
> getting closer to that.

It seems like the NFS folks raised a number of concerns with the overlay 
approach beyond just these two checks, and Android has their 
override_creds=off use case.  Maybe the overlay model needs a more 
significant rethinking than just these two cases.
