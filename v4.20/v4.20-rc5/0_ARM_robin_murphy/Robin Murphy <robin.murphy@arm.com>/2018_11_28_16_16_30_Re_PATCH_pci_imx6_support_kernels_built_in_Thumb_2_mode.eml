Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 29 Nov 2018 08:38:25 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C06655803ED;
	Wed, 28 Nov 2018 08:16:40 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 28 Nov 2018 08:16:40 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ADdXeEx1SBi4J+gdMsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segTLf/xwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJcUMhPWSxPAoCy?=
 =?us-ascii?q?YYUBAOUOP+lXs4bzp0AWrRa8HgSsGOHixyVUinPq06A30eIsGhzG0gw6GNIOtW?=
 =?us-ascii?q?zZosnyNKgJUOC1yrTDwzLeb/NMwTf96IjJeQ0mrPGWWrJ/asvRyU81GwPAk1WQ?=
 =?us-ascii?q?s5TlPzOV1+kWqWeb9e9gWfizhG4grgF8uz6izdoihInOg4Ia0FHE9SNhzYkvP9?=
 =?us-ascii?q?24TVR3bsKjEJtVry2aNJV5QtkkQ252vCY20LoGuYS0fCQSxpUnxgXfZOCdf4eW?=
 =?us-ascii?q?/x3jSeCcKip7inJ9YL+zmQq+/Ey6xuHhWMS4zkxGojdGn9XQrHwA1h7e5tCZRv?=
 =?us-ascii?q?dg/EqtwyuD2g/P5u1ePEw4ibfXJ4Qjz7IskJcYrF7NETXsmErsia+bbkUk9fas?=
 =?us-ascii?q?6+TgerjmuJCcOJFuig3kMaQhhNa/AeImPQgKRWSb/v681LL78U34RrVFkOE2n7?=
 =?us-ascii?q?HHvJzGIckXvLO1DgFL3oo59hqyDCuq3M4ZkHQFNF5FfQiIj4ntO1HAOvD4CvK/?=
 =?us-ascii?q?jkyokDdqwfDGI7LgDozOLnfdirfhe6hy60pFxAo0w9Ff4YxbCqsaLfLtVU/+qs?=
 =?us-ascii?q?bYAgU6MwOq2ebnDsty1ocEVWKIGK+ZP7vesUWU6eI3P+mMeIgVtS75K/gk5P7h?=
 =?us-ascii?q?k2U1mFAAfaSy2ZsXaXa4HulpIkmDYHrshMsBHnkOvgYkUOPqj1iCWyZJZ3muR6?=
 =?us-ascii?q?I8+i07CIW+AIfDXI+tgaCB0z28HpFMZmBGF0qDEXHnd4ifX/cMaSSSItJukzAe?=
 =?us-ascii?q?VLihTZMh2g+qtAPg17VnKe/U8DUCtZ3/zNh1+/HTlRYq+Dx2CMSSzXuBT2Jznm?=
 =?us-ascii?q?MOQT8227tyoUh8yleFzKh5jOZUFd1V5/NVTAg6MYTQwPB9C9D3QgjBZMuGSE66?=
 =?us-ascii?q?QtW6BjE8Vsg+w8QOY0Z6GNWulArD0DCoA7IOk7yLBZo08r/T3nTrJsZ9zWrG27?=
 =?us-ascii?q?clj1U8XsRPMmimjLZl9wfPH47Jj1mZl6GyeKQfxiHN8n2PzW6PvE5CVg5wXr7I?=
 =?us-ascii?q?XXQeZkvQsNT46VnOT76oCbQ7LARBzdSOJbdNat3slV9GXuvsOMzCY2KtnGe9HQ?=
 =?us-ascii?q?uHyamSbIX0YWkd3D/SCE4fkw8N+3aKMgw+BiSko2LaFzFuEVPvY0Xx8ehxsn+7?=
 =?us-ascii?q?T0k0zx2UYE1lzba65hkVhfmEQfMJwr0EoDshqylzHFulwt3ZEcSAqBR7cKVce9?=
 =?us-ascii?q?w95kxH2nzftwFmOpygLqZihkMRcghtvkPu0Ql3BZtEkcQwsHwqyw9yI7qC0Fxd?=
 =?us-ascii?q?bzOYwYzwOrrPJ2nu/RCvbqnW2k3e0NeW4KsP9O40q1L5vAGtF0oi9Xpn3sJR03?=
 =?us-ascii?q?ud4JXKEQUTXYjwUkYx6xh1ubXabjMh6IPT0H1mKbO0vSPa29I1GOslzQ6tcM1b?=
 =?us-ascii?q?MKyaGw79Dc0bC9K1J+w3hlemdBQEPONV9K4qJM6mc/qG2Ki2POdvhj6mjGJH4J?=
 =?us-ascii?q?xj3UKI7SZzVunI35MdyfGCwgSHTyv8jEumss3vmYFEeCseEXalxSnlBI5efKty?=
 =?us-ascii?q?fYkQBGeqIs23wMh+hpH3V35Z8l6jG00J2MuzdRWOaFz92BVa1V4Lrny/hSu40z?=
 =?us-ascii?q?t0nikzrqqewCPB2f7iewcAOmJRQmltk03sIYmtg98GRkeoaxUmmwW/5Ub9wahW?=
 =?us-ascii?q?v6B/L2jVQUdVcCn6NWBiUq2strWcZ85D8o8nsSJSUO6ke1CVVqb9owcG0yPkB2?=
 =?us-ascii?q?ZfxDE7eyuqu5njhBx6lWSdIW13rHrYf8Fw2Bje6MbdRf5XwjoJWi14hSPLCVi7?=
 =?us-ascii?q?Otmj5c+UmIvbsuCiS2KhUYVecSvxwoOatyu75mpqDQekn/+pmd3nEgk60Snl2N?=
 =?us-ascii?q?lsTijIqBf8Yo/216W1K+5nf09oBEPi5Mp+AI1xjowwhJQI03gAmpqV5WYHkXv0?=
 =?us-ascii?q?MdhD2aPxdn0NSSQJw97U5gjow0ljLnOPx4LkWXSR2MphZ9+mYmwI3iIx9dxFCK?=
 =?us-ascii?q?CR7LZchyt6vkK4rR7NYfh6hjodyuEh6H8Aj+EJpQoi1COdAr8JEElcPCzskQmI?=
 =?us-ascii?q?7t+koKVWYmavbaa/1E5kkd+9C7GCpxlWWGzldZc6AS9w8sJ/PUrJ0H3y6YHrYs?=
 =?us-ascii?q?PcbNwNuR2PjxfPkfJVJ4kvmfoQiipqImb9vXwjy+4mgh1ix5C6vI6bK2pz+KK1?=
 =?us-ascii?q?GAJXNjrwZ8kL4DHikb5entqK34CoBphhBjILXJ7yQfOpCj0Ss+nnNx2VED09sX?=
 =?us-ascii?q?qbHbvfHQmC6EZptX7PEparN22JK3kd19ltWB6dJElHigAOQDo6hoI5FhytxMH5?=
 =?us-ascii?q?a0h2/DcR5lrlqhdWzuJoKgLyUmPepAeudzc1R4KTLBtQ7gFe+UjVNdaS4f50Hy?=
 =?us-ascii?q?Fd5pehthCCKnSHZwRUCmEEQk6ECErmPraw/tnM6fSYCvC9L/vTYrWOtOpeWO2T?=
 =?us-ascii?q?xZ+01otm/jCMNtiAP3V4Dv073FZDUm59G8jDhzoPTCkXnTrXb8GHvBe85jF3rs?=
 =?us-ascii?q?en/fXrXwLv+JKPC6ZIPtVp4Ry2mqCDN+ifhCtiLTZY15UMxWLHybQF3V4SjT1u?=
 =?us-ascii?q?eCepEbgaqSHNS6fQkLdNDxEHcyNzKNdI76Uk0wlNJ8Hbi9D11r15jvIvCFdFT1?=
 =?us-ascii?q?vhms63aswQPmG9L0jKBEKKNLSAOD3KzNv7YaK6Sb1MkupUswe8tiqcE0/mJj6D?=
 =?us-ascii?q?jSXmVwizMeFQiyGWJAZRuJymfRZ3F2fiTMjqahm6MNJsiT02wLs0hm7FNGIGMD?=
 =?us-ascii?q?h8dV9NoaOU7S9Cnvp/HGlB5GJ/LeaYgyaZ8/XYKpEOvPt3AyR0kvhW72ggx7RJ?=
 =?us-ascii?q?7CFLWvp1lTDWrt5vpVGmj+aOxiBmUBpItjZEmoaLsV9+NqXe85lKQWzE8w4V7W?=
 =?us-ascii?q?WMFxQKoMNoC931tKBWz9jPlaTzJy9D8tLU58QcAcfUJdmDMHogNxrpBTHVABEE?=
 =?us-ascii?q?TT6tKWHQmUhdnOuO+X2Sq5hp4qTrzaESR7FSUhQcGfUXEAwxB8APLp5xdjorl7?=
 =?us-ascii?q?OBysUIsz72rB7XS9VbuJ+BRPKPKfP/MHCSirwALx9O2q/xJoQ7LoD91FF+cF58?=
 =?us-ascii?q?nZSMF0eDc8pKp3hbaQU1pg1o7WJmTnx7j1jiYAKrpnoOD+a0jzY/kA44auMoom?=
 =?us-ascii?q?S/q2wrL0bH8XNj2HI6ns/o1HXIKGb8?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAAAFv/5bh0O0hNFkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGBWoEPgQIng3mIGIwJgWAIJRRolkYUgV8sDQYBh24?=
 =?us-ascii?q?iNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkAYJiAQIBAgECIAQRQQYJAQEKE?=
 =?us-ascii?q?AgCAiYCAgNUBgEMBgIBAQGDHAGCAQQBCqZofDOELQEUPz+EeYELiwuBVz+BESc?=
 =?us-ascii?q?Mgio1gx4DAQGBGA8QEIMbglcCiSYShi+FXopWBwKCHASEXYouHoInh0GHLYh2h?=
 =?us-ascii?q?F6MOoINMxojgzwJCoIUF38BAYJJaoQqhT8/AQExAQEBgQIBAYpmDxeCJwEB?=
X-IPAS-Result: =?us-ascii?q?A0ABAAAFv/5bh0O0hNFkGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGBWoEPgQIng3mIGIwJgWAIJRRolkYUgV8sDQYBh24iNAkNAQMBAQEBA?=
 =?us-ascii?q?QECARMBAQEIDQkIKSMMgjYkAYJiAQIBAgECIAQRQQYJAQEKEAgCAiYCAgNUBgE?=
 =?us-ascii?q?MBgIBAQGDHAGCAQQBCqZofDOELQEUPz+EeYELiwuBVz+BEScMgio1gx4DAQGBG?=
 =?us-ascii?q?A8QEIMbglcCiSYShi+FXopWBwKCHASEXYouHoInh0GHLYh2hF6MOoINMxojgzw?=
 =?us-ascii?q?JCoIUF38BAYJJaoQqhT8/AQExAQEBgQIBAYpmDxeCJwEB?=
X-IronPort-AV: E=Sophos;i="5.56,291,1539673200"; 
   d="scan'208";a="53002511"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 28 Nov 2018 08:16:39 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728997AbeK2DSp (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 28 Nov 2018 22:18:45 -0500
Received: from usa-sjc-mx-foss1.foss.arm.com ([217.140.101.70]:44772 "EHLO
        foss.arm.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727979AbeK2DSp (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 28 Nov 2018 22:18:45 -0500
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
        by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 442ED3644;
        Wed, 28 Nov 2018 08:16:34 -0800 (PST)
Received: from [10.1.196.75] (e110467-lin.cambridge.arm.com [10.1.196.75])
        by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id 51EEB3F5AF;
        Wed, 28 Nov 2018 08:16:32 -0800 (PST)
Subject: Re: [PATCH] pci: imx6: support kernels built in Thumb-2 mode
To: Stefan Agner <stefan@agner.ch>, hongxing.zhu@nxp.com,
        l.stach@pengutronix.de
Cc: lorenzo.pieralisi@arm.com, andrew.smirnov@gmail.com,
        linux-pci@vger.kernel.org, linux-kernel@vger.kernel.org,
        bhelgaas@google.com, leonard.crestez@nxp.com, festevam@gmail.com,
        linux-arm-kernel@lists.infradead.org, tpiepho@impinj.com
References: <20181128132554.28139-1-stefan@agner.ch>
From: Robin Murphy <robin.murphy@arm.com>
Message-ID: <ff476784-b79e-18bf-5870-4365c8377deb@arm.com>
Date: Wed, 28 Nov 2018 16:16:30 +0000
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <20181128132554.28139-1-stefan@agner.ch>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-GB
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Stefan,

On 28/11/2018 13:25, Stefan Agner wrote:
> Add a fault handler which handles reads in Thumb-2 mode. Install
> the appropriate handler depending on which mode the kernel has
> been built. This avoids an "Unhandled fault: external abort on
> non-linefetch (0x1008) at 0xf0a80000" during boot on a device
> with a PCIe switch connected.
> 
> Link: https://lore.kernel.org/linux-pci/20181126161645.8177-1-stefan@agner.ch/
> Signed-off-by: Stefan Agner <stefan@agner.ch>
> ---
> FWIW, I found this manual helpful to write the code below:
> http://hermes.wings.cs.wisc.edu/files/Thumb-2SupplementReferenceManual.pdf#page=43&zoom=100,0,66

This one's rather less ancient and even more authoritative ;)

https://static.docs.arm.com/ddi0406/cd/DDI0406C_d_armv7ar_arm.pdf

(ARMv7 had a few new encodings over and above ARMv6T2, although in 
fairness I don't think any should be relevant to this specific case)

> --
> Stefan
> 
>   drivers/pci/controller/dwc/pci-imx6.c | 37 ++++++++++++++++++++++++++-
>   1 file changed, 36 insertions(+), 1 deletion(-)
> 
> diff --git a/drivers/pci/controller/dwc/pci-imx6.c b/drivers/pci/controller/dwc/pci-imx6.c
> index 69f86234f7c0..683deb74d69f 100644
> --- a/drivers/pci/controller/dwc/pci-imx6.c
> +++ b/drivers/pci/controller/dwc/pci-imx6.c
> @@ -29,6 +29,7 @@
>   #include <linux/reset.h>
>   #include <linux/pm_domain.h>
>   #include <linux/pm_runtime.h>
> +#include <asm/opcodes.h>
>   
>   #include "pcie-designware.h"
>   
> @@ -299,6 +300,37 @@ static int imx6q_pcie_abort_handler(unsigned long addr,
>   	return 1;
>   }
>   
> +static int imx6q_pcie_abort_handler_thumb2(unsigned long addr,
> +		unsigned int fsr, struct pt_regs *regs)
> +{
> +	unsigned long pc = instruction_pointer(regs);
> +	unsigned long instr = *(unsigned long *)pc;
> +	unsigned long thumb2_instr = __mem_to_opcode_thumb16(instr);
> +	int reg = thumb2_instr & 7;
> +
> +	if (!__opcode_is_thumb16(instr & 0x0000ffffUL))
> +		return 1;

There are plenty of 32-bit Thumb encodings of various LDR/STR variants, 
and I doubt we can guarantee that the offset, target register, and/or 
addressing mode for a config space access will *always* suit the 
(relatively limited) 16-bit ones.

> +
> +	/* Load word/byte and halfword immediate offset */
> +	if (((thumb2_instr & 0xe800) == 0x6800) ||
> +	    ((thumb2_instr & 0xf800) == 0x8800)) {
> +		unsigned long val;
> +
> +		if (thumb2_instr & 0x1000)
> +			val = 0xff;
> +		else if (thumb2_instr & 0x8000)
> +			val = 0xffff;
> +		else
> +			val = 0xffffffffUL;
> +
> +		regs->uregs[reg] = val;
> +		regs->ARM_pc += 2;
> +		return 0;
> +	}

What about stores? The existing implementation handles them, so either 
that's dead code which could perhaps be cleaned up, or they need to be 
handled here too.

> +
> +	return 1;
> +}
> +
>   static int imx6_pcie_attach_pd(struct device *dev)
>   {
>   	struct imx6_pcie *imx6_pcie = dev_get_drvdata(dev);
> @@ -1069,6 +1101,8 @@ static struct platform_driver imx6_pcie_driver = {
>   
>   static int __init imx6_pcie_init(void)
>   {
> +	bool thumb2 = IS_ENABLED(CONFIG_THUMB2_KERNEL);

Can these aborts definitely *only* be triggered by kernel accesses, and 
never, say, via an mmap() of anything exposed to userspace?

Robin.

> +
>   	/*
>   	 * Since probe() can be deferred we need to make sure that
>   	 * hook_fault_code is not called after __init memory is freed
> @@ -1076,7 +1110,8 @@ static int __init imx6_pcie_init(void)
>   	 * we can install the handler here without risking it
>   	 * accessing some uninitialized driver state.
>   	 */
> -	hook_fault_code(8, imx6q_pcie_abort_handler, SIGBUS, 0,
> +	hook_fault_code(8, thumb2 ? imx6q_pcie_abort_handler_thumb2 :
> +			imx6q_pcie_abort_handler, SIGBUS, 0,
>   			"external abort on non-linefetch");
>   
>   	return platform_driver_register(&imx6_pcie_driver);
> 
