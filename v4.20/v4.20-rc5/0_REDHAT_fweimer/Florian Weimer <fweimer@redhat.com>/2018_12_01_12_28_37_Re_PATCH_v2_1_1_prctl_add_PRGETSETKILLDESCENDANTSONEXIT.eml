Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:26:33 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from mta-temp.ostc.intel.com (mta-temp.ostc.intel.com [10.54.63.100])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id D61BE580AB0;
	Sat,  1 Dec 2018 18:20:49 -0800 (PST)
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by mta-temp.ostc.intel.com (Postfix) with ESMTPS id 76BE861EF1;
	Sat,  1 Dec 2018 04:30:02 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 01 Dec 2018 04:29:01 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A4X07mBQFf0WrvkDi4KxRImKEXNpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YBGFt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZAo2y?=
 =?us-ascii?q?cZYBD+QPM+larIfyqVQBogexCwm3HOPiyCRFhmP006Agz+gtDRvL0Q4mEtkTsH?=
 =?us-ascii?q?rUttL1NKIKXO61yKnIyi/Db/JM1jf79YPHcg4uofCJXb1ua8ra1E4iFw3Lj1qO?=
 =?us-ascii?q?qIzlOi2a1v4WvmiB8eVvSOKvhHQ7qw1rvjevwcIsh5DPi4kIyV7E7T10zJgpKd?=
 =?us-ascii?q?C8UkJ3fNCpHIVKuy2HNIZ6XtkuTmBqtSoi1LEKpZq2cDIXxJkp2RLTceGLfouG?=
 =?us-ascii?q?7x75SuqcIjF1j29/dr2lnRa9602gx/X8Vsaq1FZKqTJIksfDtn8TzRzf8MuHRe?=
 =?us-ascii?q?Vn/kenxzmP0xrf6uZeIUA7jabbKpghzaAslpcLr0jPAiv7lF/rgKKYaEko4PWk?=
 =?us-ascii?q?5uf7brn8p5KRNZd4igTkPaQvnsy/D/44Mg8LX2WD/eS81bvj/VD2QblTjf05jL?=
 =?us-ascii?q?PZsJbEKsQfv6K5BAFU0oA95BalFDqmztsYkmcdLF5fexKIkZLpO1fQL/D8F/u/?=
 =?us-ascii?q?hE6skDhzy/DcIrLhGonNLmTEkLr5ebZ96k1cxxQpwdFQ+pJZEbUBIPP1Wk/su9?=
 =?us-ascii?q?3UFB45Mwqow+n5DNVxzJ8RWWWKAqWBKqPdrUeI5v4zI+mLfIIVuCzyK/k55/H0?=
 =?us-ascii?q?in81g18dfbSz0psRZ3C1BfBmI0SfYXrxjdYNC2YKvgwiTOP0jF2OSyJcZ3G3X6?=
 =?us-ascii?q?gk/DE0FJqmDZvfRoCqmLGB3iC7EYNMamBFDVCMF3Hod4KfVvcIaSKSJNJhkzMe?=
 =?us-ascii?q?WbigTY8hyQ+htAvgx7V7KerU/zUStYj/29ht++3TiRYy+CRuAMSG02GNSGJ0kn?=
 =?us-ascii?q?kSRzAs3qByukh9ylaF0ahljP1UD91T5/VVUggkMZ7Q1fB1C9f3WgjZZNeGVE6m?=
 =?us-ascii?q?Qsm6ATE2Vt8xwMUBY0BnF9WmjxDMxSyqA7AOmryPBZw09L/c3nfrK8Z8zXbGyL?=
 =?us-ascii?q?cuj108TsRTMm2mg7Z19xLPCI7Rj0WZi6GqeLwB0yHX6meM03CCvEFCXw52SqXK?=
 =?us-ascii?q?Q3YfakzSrdT640PCS6SjCbAmMgtH1M6DJbFGatzvjVVaWvjjPM7SbH62m2e1HR?=
 =?us-ascii?q?yI3K+DbJL2e2UB2yXQEFULnBoN/XmYLwQ+Bj2uo2TFDDNwE1LieEfs8eh4qHOm?=
 =?us-ascii?q?QU441QCKb0t917Wr/h4Zn+CTS/QW3rgcoicuty10HEqh39LRE9eAuwthfKBbYd?=
 =?us-ascii?q?Mh4FdG1XjVtxBnMpynNaBigl8ecwJ4v0710xV3C4NAkdUlrX8wzQpyL76Y301F?=
 =?us-ascii?q?dz+CwZ/wPbjXIHHo/B+zc67Wxk3e0NGO96gV7PQ3tVrisx+pF0Y46HpnzsRa3G?=
 =?us-ascii?q?Ga5pXJCwoST4n8UkI29xh8urHbbTMx54LS1X1wL6a0tiXO1M4uBOsg0hygZctQ?=
 =?us-ascii?q?MLuYFA/uFM0XH8ivKPEwl1e1dB4FPeBS+7QyP8OpbPaG3K+rPOB9nDOpl2hH4Y?=
 =?us-ascii?q?Z90l6S+Cp4UOLHw5EFw/SA1AudSzj8lEuhstzwmY1cfzESH3awxjL+BIFMYa1+?=
 =?us-ascii?q?Z4ALBnm0I82239lxm4TiW3pF+1G9HVMG38mpdAGWb1z82w1QyEsWrWammSu+0z?=
 =?us-ascii?q?x7jTUporCD0yzJxuTobAAHNXJTRGl+kVfsJpC5jtAbXESybwkljgCl5Vv8x6VA?=
 =?us-ascii?q?oKR/Lm/TQVpHfiTsLmFiVLewuaSGY8JV9JwotiBXWvymYV+GUr79vwca0yT7Em?=
 =?us-ascii?q?tc3j87bTKqupb+nxBgk2KSNnVzrHnYecF22xjf4sfRRfpQ3joAWSl5hiPbBlm6?=
 =?us-ascii?q?P9m149qUk43Pvfy5V2KkTpdTazXkzZuctCun4m1nGR2+kOq0mtH9Ewg60Cn72s?=
 =?us-ascii?q?JuVSXJqhb8f4bq2767MeJhYklnGlv859BmFYF5l4s6nIsQ1mQChpWJ4XoHln/+?=
 =?us-ascii?q?MdZB1qL/dnYNRSMLzMTT4Ajqw0BjKnOJx4TkVnSS2MdhZt+6Yn8I1SI59cxFFK?=
 =?us-ascii?q?CU7LlclytvvlW4tR7RYeR6njoFzPsu6X0ajPsTtAsj0CqdGawSEldCPSP3iRuI?=
 =?us-ascii?q?9d++ob5TZGaud7iwyUV/kcqgDLGEvgFTRnL5do0+Ei9368V1KEjM32Hr6oH4ZN?=
 =?us-ascii?q?nQasoetgGTkxfFleRUKYg+lvwXhSp8ImL9vGYoy+o6jRxowJG7s5KLK2Rr/KKl?=
 =?us-ascii?q?HBFYMif5aN8U+jHolaxehNqZ35izHpV9HTUGRIDnQuivEDIWqPTrLQKOECAnp3?=
 =?us-ascii?q?efGLrfGxKf6Uh8o3LOFZCrK2+YJH0Dwdp+QxmdIVRVgBoIUzUigp45CgeqydTj?=
 =?us-ascii?q?cEhj4zAe+EX4pgFQyu5yNBn/T2TfpBquajguU5iSNx5W7gBE50fIPs2S9ONzHy?=
 =?us-ascii?q?dE/pK/qAyBMHCUZwNNDWsRQEyLG0jjPqWy5dnH6+WZBu2+L+bXYbWTs+NeUe2E?=
 =?us-ascii?q?xYmo0otg8DaBLcGPPnhkD/0m1UtPR3F5G8LFmzoRTywbjT7Cb8mepB2k4C14st?=
 =?us-ascii?q?i/8Oj3WALo/YaPC6VdMdRs+xC1gKePLe2QhDx+KTZXyJwM32LIyKME0V4WiiFu?=
 =?us-ascii?q?cSStELsauS7MSqLQhrFYDxoBZyxvM8tI6ro23hNRNs7DltP1yrl4g+YvBFdYTl?=
 =?us-ascii?q?PhgN+mZMwQL2G5NVPKH0KLNLWAJT3WzMD7e6K8SbtMjOpKsx28oyqUE0jmPj6b?=
 =?us-ascii?q?jTnmSwivMf1QjCGcJBFepIC9chN3BWf/Vt7pdh27P8FxjTAtxb00h3XKNXMTMD?=
 =?us-ascii?q?RmckNNqKGQ4j1cgvllB2NB6X9lJ/GemymF9+nYNooWsfxzDyV0je1a5nE6y7pT?=
 =?us-ascii?q?7C5cRf11mDHdrthho1y9lumPyzxnUAdBqzpRhYKLu1liNrvd9pVaRXnE+xcNvi?=
 =?us-ascii?q?2sDEEoM8FqQvfuv6Rd1tXV3PbxAD1D78jT+40XB56HBtiANS8PNR3zGTfSRDQI?=
 =?us-ascii?q?TDumLymLiVNQkfSf7FWPo5Q6o4Sqk50LHOwIHGcpH+8XXxw2VOcJJ416C3Z9ye?=
 =?us-ascii?q?aW?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AMAADifQJch0O0hNFjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBVAIBAQEBCwGDa4QgiHeLLIINFJI7hwArAYMshEoiNwYNAQMBAQE?=
 =?us-ascii?q?BAQECARMBAQEKCwkIKS+CNiQBgmEBAQEBAgEBAiAQOQ0FAQkBAQoYAgIFIQICA?=
 =?us-ascii?q?wwBBEkYFoMGgXoIBaVOgS+KKYELixEXgUA/hCOIBYJXAoselSAJkVSBW4URgm+?=
 =?us-ascii?q?HSSyYP4FcgXczGggbFYMokFs+AQGBNgEBHIpLB4JGAQE?=
X-IPAS-Result: =?us-ascii?q?A0AMAADifQJch0O0hNFjGgEBAQEBAgEBAQEHAgEBAQGBVAI?=
 =?us-ascii?q?BAQEBCwGDa4QgiHeLLIINFJI7hwArAYMshEoiNwYNAQMBAQEBAQECARMBAQEKC?=
 =?us-ascii?q?wkIKS+CNiQBgmEBAQEBAgEBAiAQOQ0FAQkBAQoYAgIFIQICAwwBBEkYFoMGgXo?=
 =?us-ascii?q?IBaVOgS+KKYELixEXgUA/hCOIBYJXAoselSAJkVSBW4URgm+HSSyYP4FcgXczG?=
 =?us-ascii?q?ggbFYMokFs+AQGBNgEBHIpLB4JGAQE?=
X-IronPort-AV: E=Sophos;i="5.56,302,1539673200"; 
   d="scan'208";a="140364759"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 01 Dec 2018 04:29:00 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726715AbeLAXlT convert rfc822-to-8bit (ORCPT
        <rfc822;like.xu@linux.intel.com> + 23 others);
        Sat, 1 Dec 2018 18:41:19 -0500
Received: from mx1.redhat.com ([209.132.183.28]:50114 "EHLO mx1.redhat.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726577AbeLAXlT (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 1 Dec 2018 18:41:19 -0500
Received: from smtp.corp.redhat.com (int-mx03.intmail.prod.int.phx2.redhat.com [10.5.11.13])
        (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
        (No client certificate requested)
        by mx1.redhat.com (Postfix) with ESMTPS id 74C9A300208D;
        Sat,  1 Dec 2018 12:28:53 +0000 (UTC)
Received: from oldenburg.str.redhat.com (ovpn-116-35.ams2.redhat.com [10.36.116.35])
        by smtp.corp.redhat.com (Postfix) with ESMTPS id D04C47C858;
        Sat,  1 Dec 2018 12:28:47 +0000 (UTC)
From: Florian Weimer <fweimer@redhat.com>
To: =?utf-8?Q?J=C3=BCrg?= Billeter <j@bitron.ch>
Cc: Andrew Morton <akpm@linux-foundation.org>,
        Oleg Nesterov <oleg@redhat.com>,
        Thomas Gleixner <tglx@linutronix.de>,
        Eric Biederman <ebiederm@xmission.com>,
        Kees Cook <keescook@chromium.org>,
        Andy Lutomirski <luto@kernel.org>, linux-api@vger.kernel.org,
        linux-kernel@vger.kernel.org
Subject: Re: [PATCH v2 1/1] prctl: add PR_{GET,SET}_KILL_DESCENDANTS_ON_EXIT
References: <20181127225408.7553-2-j@bitron.ch>
        <20181130080004.23635-1-j@bitron.ch>
        <20181130080004.23635-2-j@bitron.ch>
        <87bm66u1j5.fsf@oldenburg.str.redhat.com>
        <e92ab3c06fe42fc9872261999623be19e2b0a294.camel@bitron.ch>
Date: Sat, 01 Dec 2018 13:28:37 +0100
In-Reply-To: <e92ab3c06fe42fc9872261999623be19e2b0a294.camel@bitron.ch>
 (=?utf-8?Q?=22J=C3=BCrg?=
        Billeter"'s message of "Sat, 01 Dec 2018 10:39:28 +0000")
Message-ID: <878t19o2h6.fsf@oldenburg.str.redhat.com>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/25.3 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 8BIT
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.13
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16 (mx1.redhat.com [10.5.110.47]); Sat, 01 Dec 2018 12:28:54 +0000 (UTC)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

* Jürg Billeter:

> On Fri, 2018-11-30 at 14:40 +0100, Florian Weimer wrote:
>> * Jürg Billeter:
>> 
>> > This introduces a new thread group flag that can be set by calling
>> > 
>> >     prctl(PR_SET_KILL_DESCENDANTS_ON_EXIT, 1, 0, 0, 0)
>> > 
>> > When a thread group exits with this flag set, it will send SIGKILL to
>> > all descendant processes.  This can be used to prevent stray child
>> > processes.
>> > 
>> > This flag is cleared on privilege gaining execve(2) to ensure an
>> > unprivileged process cannot get a privileged process to send SIGKILL.
>> 
>> So this is inherited across regular execve?  I'm not sure that's a good
>> idea.
>
> Yes, this matches PR_SET_CHILD_SUBREAPER (and other process
> attributes). Besides consistency and allowing a parent to configure the
> flag for a spawned process, this is also needed to prevent a process
> from clearing the flag (in combination with a seccomp filter).

I think the semantics of PR_SET_CHILD_SUBREAPER are different, and the
behavior makes more sense there.

>> > Descendants that are orphaned and reparented to an ancestor of the
>> > current process before the current process exits, will not be killed.
>> > PR_SET_CHILD_SUBREAPER can be used to contain orphaned processes.
>> 
>> For double- or triple-forking daemons, the reparenting will be racy, if
>> I understand things correctly.
>
> Can you please elaborate, if you're concerned about a particular race?
> As the commit message mentions, for containment this flag can be
> combined with PR_SET_CHILD_SUBREAPER (and PR_SET_NO_NEW_PRIVS).

Without PR_SET_CHILD_SUBREAPER, if a newly execve'ed daemon performs
double/triple forking to disentangle itself from the parent process
session, and the parent process which set
PR_SET_KILL_DESCENDANTS_ON_EXIT terminates, behavior depends on when
exactly the parent process terminates.  The daemon process will leak if
it has completed its reparenting.

I think this could be sufficiently common that solution is needed here.

Thanks,
Florian
