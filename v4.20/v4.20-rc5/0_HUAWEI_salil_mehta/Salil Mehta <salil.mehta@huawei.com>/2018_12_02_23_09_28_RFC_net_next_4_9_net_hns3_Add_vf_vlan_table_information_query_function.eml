Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 03 Dec 2018 08:42:18 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id ABB8C580557;
	Sun,  2 Dec 2018 15:12:18 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 02 Dec 2018 15:12:17 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A9jaztB3eO84iQSxnsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segSKfjxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QLYpUjqg8qhrUgflhi?=
 =?us-ascii?q?cZOTAk/m/Zict+g6BVoB2uuxN/wpXUYJmXOfdlYqPRYckXSXZbU8pNSyBMBJ63?=
 =?us-ascii?q?YYsVD+oGOOZVt5TzqEEKrRu/AQmnGeThxSFIhn/qx6IxzuMsERrc0wwkHtIOtG?=
 =?us-ascii?q?7YrNDrO6cSTeC61rLFzTXeb/xM1zby9onIfgo9rvGLWLJ9aMzcwlQsGQPdllic?=
 =?us-ascii?q?t5DpMjeP2ugQvWWX8fBsWf+shmI7sQ18ozqiyt8xhoXVnI4YxVLJ+T99zYopP9?=
 =?us-ascii?q?G0VU52bN+8HJZftyyWLZV6T8wmTm1ypio216MKtYSmcCUO1ZgqwQPUZeadfIiS?=
 =?us-ascii?q?+B3jUf6cITdmi3Jhf7Kynwiy8Ue+xe3mTMW000hFrjBDktbSsnABzRvT6tKISv?=
 =?us-ascii?q?dl/0eh3yiA1xzL5+1aPUw5kbDXJ4Mvz7IujJYfrEfOEjPslEj3jqKabkAk9fKp?=
 =?us-ascii?q?6+TjbLXmvJicN4pshwH6M6QunNG/AOshPggNQWeb4+K826Pn/UHgR7VLgPs2nb?=
 =?us-ascii?q?fDsJ3BO8QbqbC2AxVP3oYg9Rm/FTGm38ocnXUdK1JFYh2Hg5DzO17SOPD4Eeu/?=
 =?us-ascii?q?g1O0nTdvxvDGPaPuDo/CL3jei7rhebd960hByAs819xf5pRUCq0fL/L3QEP+qN?=
 =?us-ascii?q?vYDhohOQyu3+nnEMl91p8ZWW+XAq+WKqLSsUOS6eIoOeWMZJIVtyz7K/gq/PPu?=
 =?us-ascii?q?iX45mVkAfaimx5cXaXa4Huh4LEWde3bjntABEWIStAokUOPqkEGCUSJUZ3uqXa?=
 =?us-ascii?q?I84S80BJilDYfEQICthruB0Ty/Hp1XYGBGF1+NHW3pd4WCR/cDdiaSLtV9nTwD?=
 =?us-ascii?q?ULirU5Uh2g22tA/m17pnKfLZ9TcDtZLj09h15PfflQso+jx2FMmd12CNT2dpnm?=
 =?us-ascii?q?IHXTM23aZ/oVBjxVeHy6R3n/tYFdlL7fNTTgg6LYLcz/B9C93qWQLOZNGJREyi?=
 =?us-ascii?q?QtWnGz4xSN0xzsQKY0Z8HdWikx/C0zCrA78Ti7yEGpg0/rjA0Hj2IsZ302zG27?=
 =?us-ascii?q?U5j1k6XstPMnWribNl+AjNGYHFiUWZmLysdaQHwiHN8mCPzW6NvEFdVA59SqHF?=
 =?us-ascii?q?XXEZZkvLotX1/ELCT7myCbs5NgtN09KNKqxPatfxl1VJWO/jOMjCY2K2g2q/GA?=
 =?us-ascii?q?yHxq2SY4bwe2USxiPdCFManAAV5nuGMQk+BiG8o2PRFjBuFFTvY1/y/ul6sn+0?=
 =?us-ascii?q?Ukg0zwSSZU17y7W14gIVheCbS/4LwrIEuSIhqzJoHFa939PaEcaAqxBmfKVGZd?=
 =?us-ascii?q?M94VFH1W3Cugx5P5ygKb1ih1EEfwR2uUPuywt4CoFancc2q3MqyRJ4KbiE31NZ?=
 =?us-ascii?q?azOYwZfwN6XNJWn24h+uZLDZ21HE3NmN56cA9e43q1PgvAGuCEov6HFn09hT03?=
 =?us-ascii?q?uB6ZTGFgsSUZTtUkkp8xh2va3VYi4454nMz31jLbG0siPe29IuHOYkygugc81D?=
 =?us-ascii?q?P6+eFQ7yE9cVB86hKOExn1ipbxQEPP1d9aIuPsOmceeG17CvPOp6gD2mimFH6p?=
 =?us-ascii?q?hn0k2Q7yp8VvLI35EdzvGC3wuISy3zjE28vcDwg4xEYy8dHnC+yST9GIFefKly?=
 =?us-ascii?q?cpsVBme0JM23wM5zh5rsW35e6V6iCEkK2M6veRqOcVP92Rdc2lgQoXyigSG41S?=
 =?us-ascii?q?B7kyk1rqqD2yzD2+TjdBsdNm9LXmVilkrsIY6vgtAeXUioaRUplRS/6Ub7wahb?=
 =?us-ascii?q?uLpwL23JTUhUeCj2KnloUrGsubqaf85P9JQovD1VUOume1CaSb39oxwA3yP4BW?=
 =?us-ascii?q?RexzM7dzCsuprnmRx3k2adLHd1rHrEdsB83xbf5NrARfFP2joKXjV3iT7SBlKk?=
 =?us-ascii?q?Jdmm4c2Ul4vfsuC5T2+gVodccS7xwYOCtSu743ZnARm+n/C1h93mHhI20S7919?=
 =?us-ascii?q?l2SyrIqAzwbZXs16S/KehnZFVnBEfg68pmHYFziogwi4sR2XQAhpWV4GAIkWH8?=
 =?us-ascii?q?MdhA3aL+bXwNRSMEwtLP4Qjl3lFjIWyNx47jSnqdxc5hbcGgYmwKwiI989xKCK?=
 =?us-ascii?q?CM4bxBnCt1oUC3oRjfYPdjhTcd1eUh6GQBjO4XogotwT6QArQTHUleICztmA6E?=
 =?us-ascii?q?79G4rKVLemmvdaK821Z5ndCkFLuCuB1TWG7lepc+Gi999tl/MFXJ0HHp64DrYt?=
 =?us-ascii?q?/Qbc8Ith2PkhfNlOxVKJM3lvoXiitrI2P9vXs5y+EliRxix421vI+CK2915qK2?=
 =?us-ascii?q?HgZYNiHpZ8MU4jzilrxRnsGS34CyBJlhHigLUYDsTfKpFjISqPvmOxyPED06tn?=
 =?us-ascii?q?eUB77fERWD50dhqnLFC4qrOG2PJHkF0dViQwGQJE5FjwARQjo6hYQ1FhywyMzi?=
 =?us-ascii?q?bUd55S0R5ljipRtX0e9oMxj/UmHCpAancDs0SZ6fLAZI4QFG/UvaLcue7udrFS?=
 =?us-ascii?q?FC4pKhtBCNKnCcZwlQDWAJXVGEB0n+Pra049nM6fOYBu24L/vBeriOre1eV/GV?=
 =?us-ascii?q?xZOgyIdm/jCMNtmRMXlmFfE0xk1DXXVhEcTDhzoPUzAXlz7Kb8ODpBez5Cx3rs?=
 =?us-ascii?q?O88PTqQg7v5pGPC7xdMdpx4RC2nLyDOvWUhCZ4LzZYy5wNyWXJyLgZwF4dlSVu?=
 =?us-ascii?q?eyOxHrQHsC7HVLjQlbNPDx4HdyNzM9NF4Lgh3gZWI87UlNP02qR8jv40EFpFUV?=
 =?us-ascii?q?3hmse0Zc0FOW29NVXHBFqVO7SCPzHE38b3YaakQ71KkOpUrwGwuSqcE0L7IjSD?=
 =?us-ascii?q?ljzpWwqzPu1WkC6bPAJRuIemfxZpCGjjSs/maxKhPN92iz023aM7hnfQOWEANj?=
 =?us-ascii?q?h8dltHrqeM4iNAnvV/B2tB42JlLOaenSaZ6ujYKpAOvvpqAiR7jeRa4HshxrtR?=
 =?us-ascii?q?7SFEQuF1mSTIot5vpVGmjveAyj59XBVSrTZLgdHDgUI3banQ6JRFcXrN4h8I6W?=
 =?us-ascii?q?KeF1IMqsczWfP1vKUF8dHLlaa7DTpC79ucqdAVA8nQbseKMGYoGRr0ESHZDU0O?=
 =?us-ascii?q?Sjv9ZjKXvFBUjPzHri7dlZM9sJW5wJc=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ARAAAXZgRch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2snCowHjAmCDRSXNIFzLBMBh3YiNAkNAQMBAQEBAQECARMBAQE?=
 =?us-ascii?q?KCwkIKS+CNiKCZQMDAQIkTQUGCQEBHzEDVAYOBQWDHIICBaMeM4oeh22EL4FXP?=
 =?us-ascii?q?45/AokmBoFzhVuPRgcCgh8Ejw4LGJEmmjOCDTMaI4M8gicXjh0/AQExgQQBAQE?=
 =?us-ascii?q?Oi2iBHwEB?=
X-IPAS-Result: =?us-ascii?q?A0ARAAAXZgRch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?nCowHjAmCDRSXNIFzLBMBh3YiNAkNAQMBAQEBAQECARMBAQEKCwkIKS+CNiKCZ?=
 =?us-ascii?q?QMDAQIkTQUGCQEBHzEDVAYOBQWDHIICBaMeM4oeh22EL4FXP45/AokmBoFzhVu?=
 =?us-ascii?q?PRgcCgh8Ejw4LGJEmmjOCDTMaI4M8gicXjh0/AQExgQQBAQEOi2iBHwEB?=
X-IronPort-AV: E=Sophos;i="5.56,308,1539673200"; 
   d="scan'208";a="55217128"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 02 Dec 2018 15:12:16 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1725924AbeLBXL3 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sun, 2 Dec 2018 18:11:29 -0500
Received: from szxga05-in.huawei.com ([45.249.212.191]:15187 "EHLO huawei.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1725913AbeLBXL1 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Sun, 2 Dec 2018 18:11:27 -0500
Received: from DGGEMS403-HUB.china.huawei.com (unknown [172.30.72.58])
        by Forcepoint Email with ESMTP id 45B1FF51A21DE;
        Mon,  3 Dec 2018 07:11:23 +0800 (CST)
Received: from S00293818-DELL1.china.huawei.com (10.47.90.156) by
 DGGEMS403-HUB.china.huawei.com (10.3.19.203) with Microsoft SMTP Server id
 14.3.408.0; Mon, 3 Dec 2018 07:11:14 +0800
From: Salil Mehta <salil.mehta@huawei.com>
To: <davem@davemloft.net>
CC: <salil.mehta@huawei.com>, <yisen.zhuang@huawei.com>,
        <lipeng321@huawei.com>, <mehta.salil@opnsrc.net>,
        <netdev@vger.kernel.org>, <linux-kernel@vger.kernel.org>,
        <linuxarm@huawei.com>, liuzhongzhu <liuzhongzhu@huawei.com>
Subject: [RFC net-next 4/9] net: hns3: Add "vf vlan table" information query function
Date: Sun, 2 Dec 2018 23:09:28 +0000
Message-ID: <20181202230933.15560-5-salil.mehta@huawei.com>
X-Mailer: git-send-email 2.8.3
In-Reply-To: <20181202230933.15560-1-salil.mehta@huawei.com>
References: <20181202230933.15560-1-salil.mehta@huawei.com>
MIME-Version: 1.0
Content-Type: text/plain
X-Originating-IP: [10.47.90.156]
X-CFilter-Loop: Reflected
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: liuzhongzhu <liuzhongzhu@huawei.com>

This patch prints vf vlan table information.

debugfs command:
echo dump port vlan tbl 0 > cmd

Sample Command:
root@(none)# echo dump vf vlan tbl 0 > cmd
vlan | vf filter bitMap:
0000 | 00000000:00000000:00000000:00000000:00000000:00000000:00000000:00000001
root@(none)#

Signed-off-by: liuzhongzhu <liuzhongzhu@huawei.com>
Signed-off-by: Salil Mehta <salil.mehta@huawei.com>
---
 drivers/net/ethernet/hisilicon/hns3/hns3_debugfs.c |  1 +
 .../ethernet/hisilicon/hns3/hns3pf/hclge_debugfs.c | 93 ++++++++++++++++++++++
 2 files changed, 94 insertions(+)

diff --git a/drivers/net/ethernet/hisilicon/hns3/hns3_debugfs.c b/drivers/net/ethernet/hisilicon/hns3/hns3_debugfs.c
index 51af55f34e55..80a081e87b96 100644
--- a/drivers/net/ethernet/hisilicon/hns3/hns3_debugfs.c
+++ b/drivers/net/ethernet/hisilicon/hns3/hns3_debugfs.c
@@ -212,6 +212,7 @@ static void hns3_dbg_help(struct hnae3_handle *h)
 	dev_info(&h->pdev->dev, "dump qos buf cfg\n");
 	dev_info(&h->pdev->dev, "dump mac tbl\n");
 	dev_info(&h->pdev->dev, "dump port vlan tbl\n");
+	dev_info(&h->pdev->dev, "dump vf vlan tbl [vf id]\n");
 }
 
 static ssize_t hns3_dbg_cmd_read(struct file *filp, char __user *buffer,
diff --git a/drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_debugfs.c b/drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_debugfs.c
index 4a034a59fcb2..20e64abe7c5a 100644
--- a/drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_debugfs.c
+++ b/drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_debugfs.c
@@ -608,6 +608,97 @@ static void hclge_dbg_dump_port_vlan_table(struct hclge_dev *hdev)
 	kfree(vlan_bitmap);
 }
 
+static void hclge_dbg_dump_vf_vlan_table(struct hclge_dev *hdev, char *cmd_buf)
+{
+	struct hclge_vlan_filter_vf_cfg_cmd *req0;
+	struct hclge_vlan_filter_vf_cfg_cmd *req1;
+	char printf_buf[HCLGE_DBG_BUF_LEN];
+	struct hclge_desc desc[2];
+	u32 *vlan_bitmap;
+	u8 vf_byte_val;
+	u8 vf_bitmap;
+	int vlan_len;
+	u32 vlan_id;
+	int ret, i;
+	bool flag;
+	u16 vf_id;
+
+	ret = kstrtou16(&cmd_buf[17], 10, &vf_id);
+	if (ret) {
+		dev_err(&hdev->pdev->dev,
+			"vf id failed. vf id max: %d\n", hdev->num_alloc_vfs);
+		return;
+	}
+
+	vlan_len = HCLGE_DBG_VLAN_ID_MAX / 8;
+	vlan_bitmap = kzalloc(vlan_len, GFP_KERNEL);
+	if (!vlan_bitmap) {
+		dev_err(&hdev->pdev->dev,
+			"port vlan table alloc memory failed\n");
+		return;
+	}
+
+	for (vlan_id = 0; vlan_id < HCLGE_DBG_VLAN_ID_MAX; vlan_id++) {
+		/* Prevent long-term occupation of the command channel. */
+		if ((vlan_id % 100) == 0)
+			msleep(100);
+
+		hclge_cmd_setup_basic_desc(&desc[0],
+					   HCLGE_OPC_VLAN_FILTER_VF_CFG, true);
+		desc[0].flag |= cpu_to_le16(HCLGE_CMD_FLAG_NEXT);
+		hclge_cmd_setup_basic_desc(&desc[1],
+					   HCLGE_OPC_VLAN_FILTER_VF_CFG, true);
+
+		req0 = (struct hclge_vlan_filter_vf_cfg_cmd *)desc[0].data;
+		req1 = (struct hclge_vlan_filter_vf_cfg_cmd *)desc[1].data;
+		req0->vlan_id = cpu_to_le16(vlan_id);
+
+		ret = hclge_cmd_send(&hdev->hw, desc, 2);
+		if (ret) {
+			dev_err(&hdev->pdev->dev,
+				"call hclge_cmd_send fail, ret = %d\n", ret);
+			kfree(vlan_bitmap);
+			return;
+		}
+
+		if (vf_id < 128)
+			vf_bitmap = req0->vf_bitmap[vf_id / 8];
+		else
+			vf_bitmap = req1->vf_bitmap[(vf_id - 128) / 8];
+
+		vf_byte_val = 1 << (vf_id % 8);
+
+		if (vf_bitmap & vf_byte_val)
+			vlan_bitmap[(u32)(vlan_id / 32)] |= 1 << (vlan_id % 32);
+	}
+
+	dev_info(&hdev->pdev->dev, "vlan | vf filter bitMap:\n");
+
+	for (vlan_id = 0; vlan_id < HCLGE_DBG_VLAN_ID_MAX / 32; vlan_id += 8) {
+		memset(printf_buf, 0, HCLGE_DBG_BUF_LEN);
+		snprintf(printf_buf, HCLGE_DBG_BUF_LEN,
+			 "%04d | ", vlan_id * 32);
+
+		flag = false;
+
+		for (i = 7; i >= 0; i--) {
+			snprintf(printf_buf + strlen(printf_buf),
+				 HCLGE_DBG_BUF_LEN - strlen(printf_buf),
+				 "%08x:", vlan_bitmap[(u32)(vlan_id + i)]);
+
+			if (vlan_bitmap[(u32)(vlan_id + i)] > 0)
+				flag = true;
+		}
+
+		printf_buf[strlen(printf_buf) - 1] = '\n';
+
+		if (flag)
+			dev_info(&hdev->pdev->dev, "%s", printf_buf);
+	}
+
+	kfree(vlan_bitmap);
+}
+
 static void hclge_dbg_fd_tcam_read(struct hclge_dev *hdev, u8 stage,
 				   bool sel_x, u32 loc)
 {
@@ -683,6 +774,8 @@ int hclge_dbg_run_cmd(struct hnae3_handle *handle, char *cmd_buf)
 		hclge_dbg_dump_mac_table(hdev);
 	} else if (strncmp(cmd_buf, "dump port vlan tbl", 18) == 0) {
 		hclge_dbg_dump_port_vlan_table(hdev);
+	} else if (strncmp(cmd_buf, "dump vf vlan tbl", 16) == 0) {
+		hclge_dbg_dump_vf_vlan_table(hdev, cmd_buf);
 	} else {
 		dev_info(&hdev->pdev->dev, "unknown command\n");
 		return -EINVAL;
-- 
2.11.0


