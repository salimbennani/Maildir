Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 29 Nov 2018 08:37:20 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 5A58A5802E4;
	Wed, 28 Nov 2018 06:43:31 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga005-1.jf.intel.com with ESMTP; 28 Nov 2018 06:43:31 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Ay0m6kB1V/r8CxArUsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segTI/zxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJBUMhPSiJBHo2y?=
 =?us-ascii?q?YYgBD+UDPOZXs4bzqFQVrRumBwShH//vyiZSi3PqwaE2z/ktHAfb1wIgBdIOt3?=
 =?us-ascii?q?HUoc3pOqcVSu+60rPIzSneZP1K2Dfy9IjIcgw/rvGWQLl9dtDRyVMuFwzZjlWQ?=
 =?us-ascii?q?tZLqPymO2+sRqWeb8etgVf+qi2I9tw5xpT2vy94qh4LUhYwV0kjJ+TtlzIsxP9?=
 =?us-ascii?q?G0VUB2bcC+HJdNtCyWK5F6T8IgTm1wuis3yKcKtYO0cSQQ1Zgr2RHSZ+aaf4SU?=
 =?us-ascii?q?4x/vTOiRLil7iX55fb+yggq9/lS8xeD+U8S7zUtGojdYntTJtH0N2RLe5dWCR/?=
 =?us-ascii?q?Z8/0qs2yuA2gbO4e9eO080j7DUK5s5z74wiJUTtUPDEzfomEX5kqCWbF8o+uu2?=
 =?us-ascii?q?5OT9ZLXpuJucO5VzigHkPaQigs2/AeImPQgSR2WX5/iw2bn58UHkTrhGkOc6nr?=
 =?us-ascii?q?TavZzGP8gWp6y0DxdQ0ok56ha/Czmm0M4fnXkCNF9FfBOHj470O1DBOfz4Dumw?=
 =?us-ascii?q?g06qkDh1w/DKJ7rhA5vLLnfdirfsZqh960FCxwop19xf5IxbCqsHIP3tXk/9rt?=
 =?us-ascii?q?vYDgU2MwCs2eboFM191p8CWWKIGqKZNKLSsVyW6e41LOiMeZQYuDL8K/gj+v7v?=
 =?us-ascii?q?gmU1mV4bfam1w5QXbGq0EehhI0WceXDsmMsOEX8WvgoiS+znkF2CXiRSZ3auRa?=
 =?us-ascii?q?084Ss3CIK7DYjZQICtj6eM3CO6Hp1Qe2BHBUqAEXbud4WYRfgMbDieLdNmkjwB?=
 =?us-ascii?q?TbKhUZMu1QmytA/mzLpqNujU+ioGup7519h14OvTlRc19TFvC8Sd0meNT3x7n2?=
 =?us-ascii?q?8SRj822rx/rlJ5yluZzad4hPlYH8RJ5/xVSgc6KYLcz+tiBt/oQQLBftCJSFW8?=
 =?us-ascii?q?TtW8Gz4xTMk8w9sPY0Z7BtWjgQrP3yusA78JibOLAIY4/b7b33j0P8x90WrJ1L?=
 =?us-ascii?q?E9j1k6RctCLW6mibR59wTJA47Jkl+Wl6CldakH2C7N9WGDzXeBvU1CUQ5wV7nF?=
 =?us-ascii?q?Um4bZkfMsdv54UbCRae0Cbs7KgtB1dKCKqxSZ9L0l1pGWunsNM7eY22rnWewHg?=
 =?us-ascii?q?iHxrWLYIrueGUd2SHdBVMAkwAS+3aGKAc/Cj2go2LYEDxhC1bvb1nw/ul5rXOx?=
 =?us-ascii?q?VlU0wB2Sb019y7q1/QYYiuGGRPMNwL0IoichpC9yHFamwd3WDcGNpw5gfKVafN?=
 =?us-ascii?q?M8701L1WPftwxhIJOgK7puiUIZcwRyp0nuzQl4Cp1ckcg2q3Mn1BZyKaOd0FNG?=
 =?us-ascii?q?azOY3ZDxNqfLKmXo+xCvcarW2lDY0NaZ4aoP7PU4q1P+vACmDEYi8nNn08VL3H?=
 =?us-ascii?q?uY/JnFEA0SUZfpWEYt6xd6v63aYjU6547Mz3JsNbe7szDc1NMpHucq0QugcMpF?=
 =?us-ascii?q?P6OCFw/yFNMaCtOqKOwrnVipcx0FMPpT9K4yI8Opaf+G1LS3M+ZnmTKslX5H75?=
 =?us-ascii?q?xl0kKQ6yp8TfbF3pYYw/2CwgSLTTb9jFe7vcDxloBJfjUSHmu5ySj5C49dfKxy?=
 =?us-ascii?q?fYAXCWiwJ8273Mlxh5noW3RA7l6sG0sG2NO1eRqVd1H9xwxQ2lgNrny9hCS4yC?=
 =?us-ascii?q?Z4kzc3oaqF3SzC2vjtewADOmFWWmZil1DsIY6vgtAeXUioaRUplRS/6Ub7wahb?=
 =?us-ascii?q?uLpwL23JTUhUeCj2KnloUrGsubqaf85P9JQovD1XUeS9e1ybSqTxowAH0yPlBG?=
 =?us-ascii?q?ZewDE7dze3upT2hRB6iWSdLGpto3rdY81/2RDf5NnET/5LwjUGXDV4iSXQBlWk?=
 =?us-ascii?q?Pdmm58+Ul5TAsuC5TW6hTYdccSrozYOBsiu0+2tqDAa7n/CynN3nDAc73TX619?=
 =?us-ascii?q?lsSSXHshL8bpP32KS9NOJtZlNoC0Pk68pmBoF+lZM9hZEK1ngdnJmV/3sHkWHo?=
 =?us-ascii?q?PNVf2KL+amcNRDERz97U5gjlxFNsLnaTy43lUXWdx9NrZ8OmbWMOxiI988dKBb?=
 =?us-ascii?q?+X7LNenCt5uFq4rR/Lbvh7kTcQ0v8u6H8cg+EUtwsh1CSdArYOHUZGOSzgjQiH?=
 =?us-ascii?q?79e7rK9PfmagbaCw1FZindCmFLyCpwBcWHXjdZs4Ey5/8N5/ME7S333p8Y7rZs?=
 =?us-ascii?q?PQbd0Iux2QkhfAifVVKZ0rmvoLgypnJXzyvXk/x+Enihxu2ImwvJKbJGV14KK5?=
 =?us-ascii?q?HhlYOyXpZ8MU/zHhl6dfkdyQ34CyBZVhATQLUYDsTfKpFjISqPvmOxyPED06tn?=
 =?us-ascii?q?eUB77fERWD50dhqnLFC4qrOG2PJHkF0dViQwGQK1dFjwATWDU6g4Q1FgS3xMH6?=
 =?us-ascii?q?dEd55zYR5kP3qxdWy+JoMQX/XXnbpAuydjg0T52fJgJM7g5e/0fVLdCe7uVrEi?=
 =?us-ascii?q?Fa5JKhqRKCKneBawRUF20JWVGEB1P+Prmo/9bA6POVBu6/L/vIfLWPpvZSV/aO?=
 =?us-ascii?q?xZKzzIRm+yyAOdmIPnlnF/c7wFZMXWhlG8TFnDUCUywWlyXQb86CuRez4Ct3ot?=
 =?us-ascii?q?qk8PTsXgLv6pCCC79TMdVp5hC3jr2PN++WhCZlNzlY0okAymPPyLgaxFQSkT1h?=
 =?us-ascii?q?dyGxEbQcsi7AVKLQlbFWDx4YaCNzNdFE76Em3glKNs7UlMn11qNjjvMuD1dFVF?=
 =?us-ascii?q?rhmtymZMAQImG9Mk/HC1iPNLicOTLLxMT3a7umSbJMlOVUqwGwuTGDHkD5IzSM?=
 =?us-ascii?q?jCPpWA6vMO1WiCGbPQdTuIW8chZrFGjiQ8jqahy9MN9rkzI2xac4iW/NNW4ZKT?=
 =?us-ascii?q?J8aV9CrqWM7SNEhfVyA3BB7ntgLeWehymV9fXXKpYIvvttGSl0k+Na4HIny7pa?=
 =?us-ascii?q?9i1ERfp1mDfMod5quV2pju6Pyj9/WhpUtjlLnJ6LvVllOajB9phPQ3DE/BcM7W?=
 =?us-ascii?q?WWExsLpttlBcfpu6Bf0dXPkKPzKDFf89Pb58ccBs7UKN6ZP3olKxbmBDnUDA5W?=
 =?us-ascii?q?BQKsYETWnUcVouCU+XyYtNBur5H2k9wcW7lUVVEvPvoADwJuG9lUZN9LXjQhmK?=
 =?us-ascii?q?XTo8oF5Gq4oQOZENlVuoDvUvOUHOn1LzCYnf9Iak1MiZHxNoMVfqb83FRvcBEu?=
 =?us-ascii?q?no3RHEz4WdlOryFoYwozpgNL/WQoHUMp3EewUASn7WUPXcS1lR4qhxE2Nf439T?=
 =?us-ascii?q?zs/1otDlHDuiotlQ86ntCz0mPZSyL4MKrlBdIeMCHzrUVkd8qjGws=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AfAABlqP5bh0O0hNFkHQEBBQEHBQGBU?=
 =?us-ascii?q?gcBCwGBMFCBXAQLJwqHNgOQDUqCIZcugSQDTBMBGBMBh24iNQgNAQMBAQEBAQE?=
 =?us-ascii?q?CARMBAQEIDQkIKSMMgjYkAYJiAwMBAiQZAQE3AQUJAQEBAU4DLyUCBAENBQWDH?=
 =?us-ascii?q?IFqAxUBAgEBm0cCigeBbDOCdgEBBYUWGIIJCIwWF4FAP45/iSEGBIFuhA1CgQW?=
 =?us-ascii?q?PMAmKKoZ8CxiRFYREhDKPKwIEAgQFAg0BAQWBRwGCCzMaCBsVgyeCGwwXEoM4i?=
 =?us-ascii?q?lNygQUBASGLcwGBHgEB?=
X-IPAS-Result: =?us-ascii?q?A0AfAABlqP5bh0O0hNFkHQEBBQEHBQGBUgcBCwGBMFCBXAQ?=
 =?us-ascii?q?LJwqHNgOQDUqCIZcugSQDTBMBGBMBh24iNQgNAQMBAQEBAQECARMBAQEIDQkIK?=
 =?us-ascii?q?SMMgjYkAYJiAwMBAiQZAQE3AQUJAQEBAU4DLyUCBAENBQWDHIFqAxUBAgEBm0c?=
 =?us-ascii?q?CigeBbDOCdgEBBYUWGIIJCIwWF4FAP45/iSEGBIFuhA1CgQWPMAmKKoZ8CxiRF?=
 =?us-ascii?q?YREhDKPKwIEAgQFAg0BAQWBRwGCCzMaCBsVgyeCGwwXEoM4ilNygQUBASGLcwG?=
 =?us-ascii?q?BHgEB?=
X-IronPort-AV: E=Sophos;i="5.56,290,1539673200"; 
   d="scan'208";a="55195039"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 28 Nov 2018 06:43:29 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728858AbeK2BpJ (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 28 Nov 2018 20:45:09 -0500
Received: from mail-eopbgr820078.outbound.protection.outlook.com ([40.107.82.78]:43552
        "EHLO NAM01-SN1-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1728832AbeK2BpI (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 28 Nov 2018 20:45:08 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=CAVIUMNETWORKS.onmicrosoft.com; s=selector1-cavium-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=dEqSRyxg+X7syJAyBlpOWnQo615RYOtMty1tKH1sdqQ=;
 b=XNmmkBvbAEYpLw/WfJ1l3rOTy00+0OLhGK5Vwf64f06bbWnRiBV7vVjvVzh+7AXTDMA+PrVg8hjOCsjbAUBJS/ROKFgQJn4ezBCWCrtzcP4mc40vY1nqtQYHOMDiN1+vaGKZL8OYredOdoQBR6wKwgZ7NydEY9SekEi5XNoZF4A=
Received: from SN6PR07MB5326.namprd07.prod.outlook.com (52.135.105.33) by
 SN6PR07MB5182.namprd07.prod.outlook.com (52.135.101.143) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.1361.16; Wed, 28 Nov 2018 14:43:13 +0000
Received: from SN6PR07MB5326.namprd07.prod.outlook.com
 ([fe80::ccc7:d111:7f3d:667d]) by SN6PR07MB5326.namprd07.prod.outlook.com
 ([fe80::ccc7:d111:7f3d:667d%4]) with mapi id 15.20.1361.018; Wed, 28 Nov 2018
 14:43:12 +0000
From: Robert Richter <rrichter@cavium.com>
To: Marc Zyngier <marc.zyngier@arm.com>,
        Thomas Gleixner <tglx@linutronix.de>,
        Jason Cooper <jason@lakedaemon.net>
CC: "linux-arm-kernel@lists.infradead.org" 
        <linux-arm-kernel@lists.infradead.org>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        Stuart Yoder <stuyoder@gmail.com>,
        Laurentiu Tudor <laurentiu.tudor@nxp.com>,
        Matthias Brugger <matthias.bgg@gmail.com>,
        Will Deacon <will.deacon@arm.com>,
        Lorenzo Pieralisi <Lorenzo.Pieralisi@arm.com>,
        "Richter, Robert" <Robert.Richter@cavium.com>,
        Julien Thierry <julien.thierry@arm.com>
Subject: [PATCH v2 03/10] irqchip/irq-gic-v3-its-pci-msi: Remove domain init
 order dependencies
Thread-Topic: [PATCH v2 03/10] irqchip/irq-gic-v3-its-pci-msi: Remove domain
 init order dependencies
Thread-Index: AQHUhyiwGzOi7c6W9ku3mSyUcOuuSg==
Date: Wed, 28 Nov 2018 14:43:12 +0000
Message-ID: <20181128144240.28727-4-rrichter@cavium.com>
References: <20181128144240.28727-1-rrichter@cavium.com>
In-Reply-To: <20181128144240.28727-1-rrichter@cavium.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-clientproxiedby: AM6P194CA0042.EURP194.PROD.OUTLOOK.COM
 (2603:10a6:209:84::19) To SN6PR07MB5326.namprd07.prod.outlook.com
 (2603:10b6:805:73::33)
x-ms-exchange-messagesentrepresentingtype: 1
x-originating-ip: [77.14.124.106]
x-ms-publictraffictype: Email
x-microsoft-exchange-diagnostics: 1;SN6PR07MB5182;6:mz8j1i6f6buHO8ty//2s2vgVnCd5rfJsbv36x5DfZiXM6SYh1c6JyjT+BBZC1b2N9CM8tEwJnyW2aQyJesIL999VgAn8MOLvksWyrAgFEdlHmv3MzVba8Nocb4xSD1n9SfXck7HQNJxkMrE/ztqhFf/SuzWXYrq6dcMCrGj2JQWhgUMl45TSwigOLL7Nu7JO0XhZlNwD8NDkLUGseuOY14TRhT/Ccbx/BmC2Fj7LZ4obWY3w/5XgIyZanr2y8gM13Kz+Wgylad8vfIm6YOv5B+AGR16hX36zbcWaYc1CUDwWbL8OLSrAKz4XrqkG/L/VemZNskVcjz1l/qT+uLe8WCyYRD//vcLZJpzRk/No1OqAFcl2JTArp+Ms7I0tSjp7L/641AeN4k3eD/1BQspp3cXTf2gzM3cUyG0EX9E/9K1caHOo9gnCdmGiy1+0Wn725Qs91QNrVhbYEZbKeHKccg==;5:ca8k7rPCBWPRh0EO7m79U5/nhqd6MRgx60bdwkK67Ll7EOb9OyEdAbmvZPuUovhXlEtdiL085TK0IWa8V6VP9JbPlqZFRZp8DSfpZlneB2fUzW8TXy93Ot4bC+qok8BXT6eEbt2AacsxmWDyW2qLC7QqPWl1LA71VVsBWK8oOWQ=;7:6FYOfy/9sMoEDsg6kdMjk1sdC0R10R3AC1yvrap6CTf5p4eQeaI2yoT9B7U2Dq2N//g56WGEDd9A1Gr92sXB14nKzE/UASiaxEkoZzQIAhRYgaZo3uCL0RuVclyXWK1brQ9R3F/GMlO+xAGC1FEmXA==
x-ms-office365-filtering-correlation-id: c74032bc-a110-424e-d257-08d6553fd2ad
x-microsoft-antispam: BCL:0;PCL:0;RULEID:(2390098)(7020095)(4652040)(8989299)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(5600074)(711020)(2017052603328)(7153060)(7193020);SRVR:SN6PR07MB5182;
x-ms-traffictypediagnostic: SN6PR07MB5182:
authentication-results: spf=none (sender IP is )
 smtp.mailfrom=Robert.Richter@cavium.com; 
x-microsoft-antispam-prvs: <SN6PR07MB518268C60FF4FBE16455CAA3F1D10@SN6PR07MB5182.namprd07.prod.outlook.com>
x-ms-exchange-senderadcheck: 1
x-exchange-antispam-report-cfa-test: BCL:0;PCL:0;RULEID:(8211001083)(6040522)(2401047)(8121501046)(5005006)(93006095)(93001095)(3002001)(10201501046)(3231443)(999002)(944501410)(52105112)(148016)(149066)(150057)(6041310)(20161123560045)(20161123562045)(20161123558120)(201703131423095)(201702281528075)(20161123555045)(201703061421075)(201703061406153)(20161123564045)(201708071742011)(7699051)(76991095);SRVR:SN6PR07MB5182;BCL:0;PCL:0;RULEID:;SRVR:SN6PR07MB5182;
x-forefront-prvs: 0870212862
x-forefront-antispam-report: SFV:NSPM;SFS:(10009020)(346002)(136003)(376002)(39860400002)(396003)(366004)(189003)(199004)(7416002)(5660300001)(6436002)(36756003)(54906003)(39060400002)(110136005)(446003)(11346002)(6116002)(3846002)(53936002)(97736004)(52116002)(76176011)(102836004)(4326008)(476003)(316002)(14454004)(2616005)(71190400001)(71200400001)(6512007)(1076002)(6506007)(7736002)(305945005)(486006)(81156014)(81166006)(386003)(72206003)(2906002)(99286004)(68736007)(8936002)(478600001)(106356001)(186003)(105586002)(6486002)(14444005)(66066001)(26005)(25786009)(256004)(8676002);DIR:OUT;SFP:1101;SCL:1;SRVR:SN6PR07MB5182;H:SN6PR07MB5326.namprd07.prod.outlook.com;FPR:;SPF:None;LANG:en;PTR:InfoNoRecords;MX:1;A:1;
x-microsoft-antispam-message-info: p63nP/zFaj7qrlp35Y9/e5SZcYi7Yurj0FP1Lkaw9nfj5csQuJs3Yy87xAcAU7SofC250QPS78VuXcXk5XsMcEkEM+eVdbiSEDurqAwljiunUv2ALsv1dU7mBt9KRs0Tozq+HNoPo+yL5m4IyYMdST3vfVmIBLPmUVBp9RWSUftkfsQ0LhOWyM4puLEQhHBtYdFBfKh1noHTAKwPsDuU+ILWBfH0HyWBiweM4bFUY7xv+swpmzce6wX/A9Khxx7i2oUknwVndIHTdHQN9G0RPP5THiSVDOL5qpGFf7lx1gfLZolrxWjQLmNrqNVQLpUMe64PqvWOgJKjOYG9TI6umtgmNn7OLeq4aUcwLTYG2wo=
spamdiagnosticoutput: 1:99
spamdiagnosticmetadata: NSPM
Content-Type: text/plain; charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
X-OriginatorOrg: cavium.com
X-MS-Exchange-CrossTenant-Network-Message-Id: c74032bc-a110-424e-d257-08d6553fd2ad
X-MS-Exchange-CrossTenant-originalarrivaltime: 28 Nov 2018 14:43:12.8692
 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 711e4ccf-2e9b-4bcf-a551-4094005b6194
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR07MB5182
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Use new irq_domain_request_host_*() interface which allows independent
parent and child initialization using an irq domain request handler.
This makes it possible to move its initialization to a later point
during boot. All domains can be initialized in the same initcall level
then.

Signed-off-by: Robert Richter <rrichter@cavium.com>
---
 drivers/irqchip/irq-gic-v3-its-pci-msi.c | 66 ++++++++++++++++++----------=
----
 1 file changed, 38 insertions(+), 28 deletions(-)

diff --git a/drivers/irqchip/irq-gic-v3-its-pci-msi.c b/drivers/irqchip/irq=
-gic-v3-its-pci-msi.c
index 8d6d009d1d58..7d7366d55d34 100644
--- a/drivers/irqchip/irq-gic-v3-its-pci-msi.c
+++ b/drivers/irqchip/irq-gic-v3-its-pci-msi.c
@@ -116,27 +116,50 @@ static struct of_device_id its_device_id[] =3D {
 	{},
 };
=20
-static int __init its_pci_msi_init_one(struct fwnode_handle *handle,
-				       const char *name)
+static int __init its_pci_create_irq_domain(struct irq_domain *parent,
+					void *priv)
 {
-	struct irq_domain *parent;
+	char *name =3D priv;
+	int err =3D 0;
=20
-	parent =3D irq_find_matching_fwnode(handle, DOMAIN_BUS_NEXUS);
-	if (!parent || !msi_get_domain_info(parent)) {
-		pr_err("%s: Unable to locate ITS domain\n", name);
-		return -ENXIO;
+	if (!msi_get_domain_info(parent)) {
+		err =3D -ENODEV;
+		goto out;
 	}
=20
-	if (!pci_msi_create_irq_domain(handle, &its_pci_msi_domain_info,
+	if (!pci_msi_create_irq_domain(parent->fwnode, &its_pci_msi_domain_info,
 				       parent)) {
-		pr_err("%s: Unable to create PCI domain\n", name);
-		return -ENOMEM;
+		err =3D -ENOMEM;
+		goto out;
 	}
=20
-	return 0;
+	pr_info("PCI/MSI: %s domain created\n", name);
+out:
+	if (err)
+		pr_err("PCI/MSI: Failed to create %s domain: %d\n", name, err);
+
+	kfree(name);
+	return err;
+}
+
+static int __init its_pci_msi_init_one(struct fwnode_handle *handle,
+				       const char *name)
+{
+	void *priv =3D kstrdup(name, GFP_KERNEL);
+	int err;
+
+	err =3D irq_domain_request_fwnode(handle, DOMAIN_BUS_NEXUS,
+					its_pci_create_irq_domain, name, priv);
+	if (err) {
+		pr_err("PCI/MSI: Failed to register %s domain: %d\n",
+			name, err);
+		kfree(priv);
+	}
+
+	return err;
 }
=20
-static int __init its_pci_of_msi_init(void)
+static void __init its_pci_of_msi_init(void)
 {
 	struct device_node *np;
=20
@@ -147,13 +170,8 @@ static int __init its_pci_of_msi_init(void)
 		if (!of_property_read_bool(np, "msi-controller"))
 			continue;
=20
-		if (its_pci_msi_init_one(of_node_to_fwnode(np), np->full_name))
-			continue;
-
-		pr_info("PCI/MSI: %pOF domain created\n", np);
+		its_pci_msi_init_one(of_node_to_fwnode(np), np->full_name);
 	}
-
-	return 0;
 }
=20
 #ifdef CONFIG_ACPI
@@ -177,32 +195,24 @@ its_pci_msi_parse_madt(struct acpi_subtable_header *h=
eader,
 	}
=20
 	err =3D its_pci_msi_init_one(dom_handle, node_name);
-	if (!err)
-		pr_info("PCI/MSI: %s domain created\n", node_name);
-
 out:
 	kfree(node_name);
 	return err;
 }
=20
-static int __init its_pci_acpi_msi_init(void)
+static void __init its_pci_acpi_msi_init(void)
 {
 	acpi_table_parse_madt(ACPI_MADT_TYPE_GENERIC_TRANSLATOR,
 			      its_pci_msi_parse_madt, 0);
-	return 0;
 }
 #else
-static int __init its_pci_acpi_msi_init(void)
-{
-	return 0;
-}
+static void __init its_pci_acpi_msi_init(void) { }
 #endif
=20
 static int __init its_pci_msi_init(void)
 {
 	its_pci_of_msi_init();
 	its_pci_acpi_msi_init();
-
 	return 0;
 }
 early_initcall(its_pci_msi_init);
--=20
2.11.0

