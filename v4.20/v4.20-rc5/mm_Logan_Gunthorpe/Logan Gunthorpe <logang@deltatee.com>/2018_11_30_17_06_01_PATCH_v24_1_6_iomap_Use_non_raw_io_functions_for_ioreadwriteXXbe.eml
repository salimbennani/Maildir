Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:20:51 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id A99CC580213;
	Fri, 30 Nov 2018 09:06:47 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga004-1.jf.intel.com with ESMTP; 30 Nov 2018 09:06:47 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A8PK+shGA4FsMUpFtz7StvJ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75ocuzbnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7Ses4URW1bXsZNSSNOH5+y?=
 =?us-ascii?q?YJUTAOoAJeZUsZT2q18BoBeiAAWhAv7kxD1ViX/sxaA00/ovHw/F0gInHd0Ovn?=
 =?us-ascii?q?vbotroOqcJSeC4zrLFwSnAYv5MxTvw8pTEfgwnrPqRXbxwa83RyUw3Gg3DiVWQ?=
 =?us-ascii?q?ppbqPzWI3eoMrmib6fZgVeKoi249swF+vCWky8AoionOiYIa0FbE9SpizYkoO9?=
 =?us-ascii?q?K4TFJ7bsS4EJROqS6WLZd5QsQnQ2xxvisx17MIuZm+fCcQyZQnwQbSa/+ZfIiS?=
 =?us-ascii?q?5BLsSuKRLS1/hHJ/d7KygQu5/0u4yuDkSMW4zFJHojBYntTCqHwBzQHf58ubRv?=
 =?us-ascii?q?dn/0qs2y6D2x7P5uxGO0w5laXWJ4Q8zrItl5cfq0XOEy3wlU7rlqGZbF8k9fKt?=
 =?us-ascii?q?6+n/YrXpuJucN4hshwHgPaQhhNa/Df47MgcQRWib//qz1Ln58U3+WrVKgeU6kq?=
 =?us-ascii?q?jfsJ/EOcQWvrC1DxNR34o59hqyASmq3M4FkXQEMF5JYhOKgorxN1HLOv/4DPO/?=
 =?us-ascii?q?g1q2kDdswvDLJrnhApTLLnjen7btZLV95FBGyAo1099f44tYCrYPIfL1REDxrs?=
 =?us-ascii?q?fVDgE2MwOq2ebrEtZ92Z0EWWKJHKCZNLnesViS5uIgO+WMfpMauC7hK/g54P7j?=
 =?us-ascii?q?lXs5mV4efaa3x5cWZ224E+9iI0WYZ3rsn9gAHX0Lvgo4UOzlllmCXSRPaHa1Wq?=
 =?us-ascii?q?I2/is7B56+DYffWoCth6SM3CehEZ1XemBJEFeMHW3od4WZQfgMbi2SL9RlkjwF?=
 =?us-ascii?q?U7ihVoAg2QuvtA/817poMO7U9jcEupLk0dh///fTmg0q9TxoE8Sd1HmAT2Nznm?=
 =?us-ascii?q?wWXTM236d/oUp7yleEyqV4h/1YFdpO5/JGSAs6NJjcz/BkBND2QA7OYtCJSFO+?=
 =?us-ascii?q?SNW8HT4xVs4xw8MJY0tlAdqilRDD3y2pA7MPjbyEHp40/7nY33jwIcZ91nnH2L?=
 =?us-ascii?q?Mgj1kgXstAK2mmirRj+AjUAo7Di1+ZmLqydaQAwC7N83+OzWmUs0FeSgJwVaTF?=
 =?us-ascii?q?UmoZZkvZttn54kLCT7mzCbUoKAdByMiCKrdUZd3tl1lJWPDjONHGaWKrh2iwHQ?=
 =?us-ascii?q?qIxq+LbIfyZmoSxjvdB1YenwAT53mGMxM+CTmno27ZCDxuFlfvY0f3/Ol6qXO7?=
 =?us-ascii?q?SFI0zg6QY01g0bq15gAahfiGR/wP2bIEvT8rqy9oE1alw9LWF92AqhJ8c6pGf9?=
 =?us-ascii?q?My/k1L1WLDuAx7JZyvMaZii0UacwR2uUPuyhp2Bp9BkcgssHMl0g5yJbiE31NG?=
 =?us-ascii?q?cjOSxYrwNaHPKmnu4BCvbLbb2k3f0NaT/acP9PQ4qlX5sAG1DEYi9G9n091U03?=
 =?us-ascii?q?ua6ZXHFw4SUZP3UkYq+Bl2vbDaYi8h54zK0X1gK7W7sjjH29gxHusq1g6gf8tD?=
 =?us-ascii?q?MKODDAL9CckaCNahKeM0m1mldAkLPP1P+6EuOcOmdPyG2LCwMeZknTKmi3lH4Y?=
 =?us-ascii?q?9n3kKN8Sp8VvDH35Ifz/6E2QuHUi/2jE29vcDvhYBEeTYSE3K/yCj5HoJeerd+?=
 =?us-ascii?q?fIcLCWi0Jc23yc5zh5rsW35e6V6iCEkK2M6veRqOcVP92Rdc2lgQoXyigSG41S?=
 =?us-ascii?q?B7kyk1rqqD2yzD2/7idBsbNWFRXmltkFDsLZKyj98ERkiobhElmwe/6kb+2qdU?=
 =?us-ascii?q?ur5/L27VQUpTeyj2LmdiUra/t7aYYs5P7o8ovjtTUOimfV+aTbv9qQMA0yz/B2?=
 =?us-ascii?q?te2Cw7dzayt5T5nhx2kmKcIGxorHrEf8F93hPf5N3aRf5M0TsKXih4iT/LBlei?=
 =?us-ascii?q?O9ml58mbl5DGsuqmTWKuSoVTcTX3zYOHrCa753dlAQe8n/Cwnd3rCxM63jX419?=
 =?us-ascii?q?lpVCXIqgjzYo/w2qS+MOJneFRoBVDm58p7HIF+jpU/hJUK1XcGgZWV+GINkX3v?=
 =?us-ascii?q?PtVDxaL+cH0NSCYLwtHP5wjpwk9jLnOPx4/iUnWdw81hZ8S1Y28M2yI96dxKB7?=
 =?us-ascii?q?mQ7LBegSR1pV+4pxrLYfdhhjcd1ecu6HkCjuEKogUtzz+RArAPHUZCOyzsmA+F?=
 =?us-ascii?q?79S/rKVReWaufqK81Et4ndC9Er6CphtQV2r+epcnBSVw9NlwMErQ0H3v7YHpYN?=
 =?us-ascii?q?zQbdMQthKOiRvBgfZaKIktlvUUnypoInzyvWcqy+MgiRxu3Je6vJWIKml3/aK5?=
 =?us-ascii?q?BAJYOSPxZ88J5j7tiqNelN6M34+zBpVhBikLXJzwQPK0FzISsO7rNgeUHz06t3?=
 =?us-ascii?q?ebAqHfHQ6E5UdirnLPFY2rNn6NKHkYy9ViWAeSJEhFjA8IWzU6m4YzFhq2y8z5?=
 =?us-ascii?q?bEd5+jcR60bjpRRWzeJoMwT/Xn3bpAe1cTo0TJmfLBxL7gBN/UvVMMqe7v5tEC?=
 =?us-ascii?q?Fc5JGusAuNKmmDbQRSEW4JQlCEB0zkPrS259nP6e2YCfSlL/fUfbWCs+9eV+qL?=
 =?us-ascii?q?xZKy1Itp5S2MO96LPnljCf07x0VCUWp4G8TfhzUAVSgXmzjRYM6coRe24jd3od?=
 =?us-ascii?q?yn8PT3RALv4pOCCrtVMdVy4hC2nL2MN+iKiCZiLjZY0JwMyGTMyLge2l4Sli5v?=
 =?us-ascii?q?eyOsEbQGqS7CUqbQlrVLAB4cbiN5LNFI4L4k3glRJc7bjcv41r5mgf40CFdFVl?=
 =?us-ascii?q?3hltuqZcwQJGG9O03IBFyWNLSdPjDLx8D3YaWhSbxflulUthuwuSqFHE/nJDiM?=
 =?us-ascii?q?iz7pVxW3O+FWkC6bJABeuJ26cht1E2fjUcnpagelP953lzE2xbw0i2jONW4dNz?=
 =?us-ascii?q?h8bkxMoqeR7SNenvVwBWhB4mB5IumDniaT9/PYJYoOsft3HiR0kPpX4Gg7y7tQ?=
 =?us-ascii?q?9i1LWOZ5lzfSrtFwpVGrie2PyjthUBpTpTdHnoOLvUN+OarH8plMQ2rL/BUI7W?=
 =?us-ascii?q?+IERQFu8NlCsHzu6BX0tXOlLj8KDFH89LV+8sTH8nVKMKdP3onPhrkAzrUDAoD?=
 =?us-ascii?q?TT62OmDTnU1dkPeO9nKLqpg2sITjmJ0LSuwTaFtgEvIcF1QgH9EYJppzdi0rnK?=
 =?us-ascii?q?Tdj8MS43e66h7LS4ESupHBS+LXCO/kKB6HgrReIRgF27X1KcIULIK/k0hjbERq?=
 =?us-ascii?q?2YLWEWLfWtdCpiBudAgpuF4L+397CiU32kT4ekam+m4LCfmcgBE7kE19bP4r+T?=
 =?us-ascii?q?Oq5E04YhLOpS0tgAw0nP3mnzmac3j2Nqj0FahQBzD5qAAUNYnnRAA9OQSxhUlM?=
 =?us-ascii?q?MDbCWqIUgbx9c2xilA7bv91IA/EKHoNeZxpF4faYbvNg/klatiWg31dKrb/BDp?=
 =?us-ascii?q?RrkgQCfZOos3tc1g8lZ9kwc/+DbJFVx0Rd0/rd9hSj0fo8lUpAf0s=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BKAACUbQFch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBVAQBAQsBgmmBAieYG4IhmSUWGA0GAYd2IjcGDQEDAQEBAQEBAgETAQEBCA0?=
 =?us-ascii?q?JCCkjDII2JIJjAwMBAi8BRgYJAQFQA1QGARIFgxwBggEFCqdZiiyHbIQuF4FAP?=
 =?us-ascii?q?4kEAQGFeQKLHIUKkA8JgiKEXYMvhn4jgVtNh2eHEIh7gXCCdIp+gVyBd00jFYM?=
 =?us-ascii?q?nCYIeF4hehV8fATIBAYEDAQGLC4I+AQE?=
X-IPAS-Result: =?us-ascii?q?A0BKAACUbQFch0O0hNFjHAEBAQQBAQcEAQGBVAQBAQsBgmm?=
 =?us-ascii?q?BAieYG4IhmSUWGA0GAYd2IjcGDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JIJjA?=
 =?us-ascii?q?wMBAi8BRgYJAQFQA1QGARIFgxwBggEFCqdZiiyHbIQuF4FAP4kEAQGFeQKLHIU?=
 =?us-ascii?q?KkA8JgiKEXYMvhn4jgVtNh2eHEIh7gXCCdIp+gVyBd00jFYMnCYIeF4hehV8fA?=
 =?us-ascii?q?TIBAYEDAQGLC4I+AQE?=
X-IronPort-AV: E=Sophos;i="5.56,299,1539673200"; 
   d="scan'208";a="55572960"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 30 Nov 2018 09:06:46 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727518AbeLAEQK (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 30 Nov 2018 23:16:10 -0500
Received: from ale.deltatee.com ([207.54.116.67]:41080 "EHLO ale.deltatee.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726663AbeLAEQK (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 30 Nov 2018 23:16:10 -0500
Received: from cgy1-donard.priv.deltatee.com ([172.16.1.31])
        by ale.deltatee.com with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
        (Exim 4.89)
        (envelope-from <gunthorp@deltatee.com>)
        id 1gSmEz-0000qm-P2; Fri, 30 Nov 2018 10:06:12 -0700
Received: from gunthorp by cgy1-donard.priv.deltatee.com with local (Exim 4.89)
        (envelope-from <gunthorp@deltatee.com>)
        id 1gSmEx-0004V6-El; Fri, 30 Nov 2018 10:06:07 -0700
From: Logan Gunthorpe <logang@deltatee.com>
To: linux-kernel@vger.kernel.org, linux-arch@vger.kernel.org,
        linux-ntb@googlegroups.com, linux-crypto@vger.kernel.org,
        linux-mm@kvack.org, Andrew Morton <akpm@linux-foundation.org>
Cc: Arnd Bergmann <arnd@arndb.de>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Andy Shevchenko <andy.shevchenko@gmail.com>,
        =?UTF-8?q?Horia=20Geant=C4=83?= <horia.geanta@nxp.com>,
        Logan Gunthorpe <logang@deltatee.com>,
        Thomas Gleixner <tglx@linutronix.de>,
        Kate Stewart <kstewart@linuxfoundation.org>,
        Philippe Ombredanne <pombredanne@nexb.com>
Date: Fri, 30 Nov 2018 10:06:01 -0700
Message-Id: <20181130170606.17252-2-logang@deltatee.com>
X-Mailer: git-send-email 2.19.0
In-Reply-To: <20181130170606.17252-1-logang@deltatee.com>
References: <20181130170606.17252-1-logang@deltatee.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
X-SA-Exim-Connect-IP: 172.16.1.31
X-SA-Exim-Rcpt-To: linux-ntb@googlegroups.com, linux-kernel@vger.kernel.org, linux-arch@vger.kernel.org, linux-crypto@vger.kernel.org, linux-mm@kvack.org, akpm@linux-foundation.org, arnd@arndb.de, andy.shevchenko@gmail.com, horia.geanta@nxp.com, logang@deltatee.com, tglx@linutronix.de, gregkh@linuxfoundation.org, kstewart@linuxfoundation.org, pombredanne@nexb.com
X-SA-Exim-Mail-From: gunthorp@deltatee.com
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on ale.deltatee.com
X-Spam-Level: 
X-Spam-Status: No, score=-8.2 required=5.0 tests=ALL_TRUSTED,BAYES_00,
        GREYLIST_ISWHITE,MYRULES_NO_TEXT,MYRULES_URI_HASH autolearn=ham
        autolearn_force=no version=3.4.2
Subject: [PATCH v24 1/6] iomap: Use non-raw io functions for io{read|write}XXbe
X-SA-Exim-Version: 4.2.1 (built Tue, 02 Aug 2016 21:08:31 +0000)
X-SA-Exim-Scanned: Yes (on ale.deltatee.com)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Fix an asymmetry in the io{read|write}XXbe functions in that the
big-endian variants make use of the raw io accessors while the
little-endian variants use the regular accessors. Some architectures
implement barriers to order against both spinlocks and DMA accesses
and for these case, the big-endian variant of the API would not be
protected.

Thus, change the mmio_XXXXbe macros to use the appropriate swab() function
wrapping the regular accessor. This is similar to what was done for PIO.

When this code was originally written, barriers in the IO accessors were
not common and the accessors simply wrapped the raw functions in a
conversion to CPU endianness. Since then, barriers have been added in
some architectures and are now missing in the big endian variant of the
API.

This also manages to silence a few sparse warnings that check
for using the correct endian types which the original code did
not annotate correctly.

Signed-off-by: Logan Gunthorpe <logang@deltatee.com>
Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Kate Stewart <kstewart@linuxfoundation.org>
Cc: Philippe Ombredanne <pombredanne@nexb.com>
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Cc: Arnd Bergmann <arnd@arndb.de>
Link: http://lkml.kernel.org/r/CAK8P3a25zQDxyaY3iVv+JmSSzs7F6ssGc+HdBkGs54ZfViX+Fg@mail.gmail.com
---
 lib/iomap.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/lib/iomap.c b/lib/iomap.c
index 541d926da95e..2c293b22569f 100644
--- a/lib/iomap.c
+++ b/lib/iomap.c
@@ -65,8 +65,8 @@ static void bad_io_access(unsigned long port, const char *access)
 #endif
 
 #ifndef mmio_read16be
-#define mmio_read16be(addr) be16_to_cpu(__raw_readw(addr))
-#define mmio_read32be(addr) be32_to_cpu(__raw_readl(addr))
+#define mmio_read16be(addr) swab16(readw(addr))
+#define mmio_read32be(addr) swab32(readl(addr))
 #endif
 
 unsigned int ioread8(void __iomem *addr)
@@ -106,8 +106,8 @@ EXPORT_SYMBOL(ioread32be);
 #endif
 
 #ifndef mmio_write16be
-#define mmio_write16be(val,port) __raw_writew(be16_to_cpu(val),port)
-#define mmio_write32be(val,port) __raw_writel(be32_to_cpu(val),port)
+#define mmio_write16be(val,port) writew(swab16(val),port)
+#define mmio_write32be(val,port) writel(swab32(val),port)
 #endif
 
 void iowrite8(u8 val, void __iomem *addr)
-- 
2.19.0

