Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 28 Nov 2018 08:45:54 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 13D4158041B;
	Tue, 27 Nov 2018 06:51:11 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 27 Nov 2018 06:51:10 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AglP9qx9W4Z99E/9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1usUIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CSmVBUMReWSxPDI2/?=
 =?us-ascii?q?coUBEfYOPf1Ar4T/vFYOsQeyCBOwCO/z1jNFhHn71rA63eQ7FgHG2RQtEdUUv3?=
 =?us-ascii?q?XbrdX1MbkdWv2xwqnP0DXDde5Z1i376IPVdR0hpPOMXbVtccrL1EYgDQXFg06L?=
 =?us-ascii?q?poP/PzKV0uUNvHOB7+V+T+6gl2knqwRorzWp28wihI7JhocPxVDF8yV02Ic1Jd?=
 =?us-ascii?q?u2SE5he9GrDYVfuDuHOIdsRcMiWW5otSAnwbMFoZ62ZDYGxIgjyhLFdvCKfZaE?=
 =?us-ascii?q?7gj+WOuSPTt0nnNodbCnixqs7UStzvfwW8q03VpQsyZJjNrBumoM2hHR7MWMV+?=
 =?us-ascii?q?Fz8V272TmV0gDe8uFELl4wlarcM5Mh3LEwmYQJsUjZHS/5hl/2jKmIeUUg4OSo?=
 =?us-ascii?q?7P7nYrr+qp+dMY97lB3+P7wwlsCjBek0KBUCUmaF9eimybHu/lH1TK9Lg/A0iq?=
 =?us-ascii?q?XZtYrVJcUfpq63GQ9V1YMj5g67Dzen1tQYgHYGIEtGeB2ZlYjpPU/BIPThAfe4?=
 =?us-ascii?q?jVWslilkx+rdM73/DZXCMGLDnK3ifblj8U5czhQ8zdRF65JTELEBL+r/WlXtu9?=
 =?us-ascii?q?zAEh85Lwu0zv7jCNV81YMRR3iDA6CEMK7JtV+I5+QvI/SDZYMPuTb9LeQl6ODq?=
 =?us-ascii?q?jXMjhVAdeqyp14MNaH+kBvRmP1mZYX30j9cBC2gKvxY+Q/btiFGYUT5Temy9X6?=
 =?us-ascii?q?Qz5jwgDIKmDIHDRp2igbCb3Se7GIFWaX5CClyWDXjocICEUe8WaC2OOs9hjiAE?=
 =?us-ascii?q?Vb+5Ro8j0hGhqhX2y7lgLurS/C0Ysonu1Nx05+3ViBEz+iZ4D8Wb02GRUW50mn?=
 =?us-ascii?q?kESCMx3KB6uUZ90EuM0bBkg/xEEtxe/+lGUhw6NZ7bzOx2EcryVRjDftqSTFam?=
 =?us-ascii?q?Q9OmASw+T94rwt8OZVp9FMumjhzZwyWqBLoVnaSRBJMo6qLcw2TxJ8FlxnbFzq?=
 =?us-ascii?q?YhiUMqQs9ONWK8gK5/+BPeB4rIk0Wfiqarer4Q3C/L9Gef02WOuFtUXxJ3UaXA?=
 =?us-ascii?q?RXoffFfZrczl5kPeSL+jEakoPRFfycGcMKdKasfmjVNdRPj9PtTSZGaxm2S1BR?=
 =?us-ascii?q?aM3b6MaIvqe2MA3CTSEkQEkgYT/WqYOgg6HCuuv2XeDDl2H1L1f0zs6fV+qG+8?=
 =?us-ascii?q?TkIs0g6FdVNh2KSv9h4Vn/OcTegT0awCuCo6rzV0HVC938/ZCtaapgpherlcbs?=
 =?us-ascii?q?054FtdyW3ZsAl9NIS6L69+nl4ebxh3v0T22hVrC4VAlM8qrG8qzAtyM66YzElN?=
 =?us-ascii?q?dzSC3ZD0O73XLGby8Qura67X3FHezdmX9r0O6PQ+t1XsogWpGlA+/HVg1tlfy2?=
 =?us-ascii?q?Gc6YnSDAoOTZLxVV46+AJ+p77EbSgy+YPV2Wd3PqmprzDNwdQpBOgiyha+ZNpf?=
 =?us-ascii?q?NKKEFAnvE8wVHcSuKeoqm0S3YRIAJuxd6Kk0P8a+ffucxKGrJPpgnC6hjWlf4I?=
 =?us-ascii?q?F9z1iA+DZmRu/J35YK2feY3gScWjf4jVehtN33mI9eaTETGGq/1TbrBIpLaqJu?=
 =?us-ascii?q?eoYLDH+kI9erydVmm57tR3lY+Ua5B1MHxMCmYwCSYEH63QFK00QYv2anmSqhwz?=
 =?us-ascii?q?NoiT4pqreQ0zLUw+TlchoKIWpLRGhkjVfxLom4ldEaXE60bwc3kBup/1r1x69e?=
 =?us-ascii?q?pK5nNWncXV9IfzTqL2FlSqaxtruCb9RP6Z8yqiVXTeK8bEueSr78pRsaziziE3?=
 =?us-ascii?q?FfxDA9azGlpJH5kwZmh2KaKXZ5tGDZdt1oxRfD+NzcQuZc3jgcSyliijnXBV+8?=
 =?us-ascii?q?M8Oy/dqOlJfDseG+V2S/WZ1VaiTryYKAtC2m5WxlGxG/nvazmsH5Hgg+yyP0y9?=
 =?us-ascii?q?5qVSDQphbmfobrz7i6Mf5gfkRwBF7z8c16Fpt8kosxgpEdwnwahpST/Xoanmb/?=
 =?us-ascii?q?K9Rb2aTibHUTQT4H2cLa4A/g2Ed7NHKG25r5VmmBwstmf9S6YXkZ2iMn48BKFa?=
 =?us-ascii?q?eb9rpEnSRur1q8rALRZ+V9nzgHxfsv7n4an/8GuA43wiqBBbASGFFSPTbwmBSQ?=
 =?us-ascii?q?89C+sKJXaX6qcbix10pxh8qtDb+crQFHRHb2ZI0iEjRu4cVlP1LBy3nz6oDieN?=
 =?us-ascii?q?nNYtMfrByUkxHcj+dLLJI9jOYFhS1iOWjlp30q1/Y7jQBy3ZG9pIWHN2Jt/Kej?=
 =?us-ascii?q?Dh9ZLDL1Yd4T+ir2jaZfhcuW24GvHpN8GjQERpfoTPSoEC4MuvTjLQqBDDo8qn?=
 =?us-ascii?q?KDE7rFAQCf8Ftmr27IE52zLH6YPn4ZzdF/RBWHIExfnRsZXDE7np4/CwCry9bt?=
 =?us-ascii?q?cEZ/5jAN+FH4rgFAxf5vNxn6Sm3fvhunai8oSJiDKxpb9gNC6F3QMcOA9eJ/BT?=
 =?us-ascii?q?1Y8oeirAyQKWybegJIAnsSWkGfA1DjP7+u5cTP8uSCB+q+KefObquKqeBES/iI?=
 =?us-ascii?q?wpev2JN8/zmQLsWPImViD/oj10tDWnB5Bt3ZmygVRCwRjS7NdMmbpBGz+iBsqs?=
 =?us-ascii?q?C/8fLrWB/g5IeVCrtSN8lv9A6ygauZK+GQgyN5Iy5C1pwQ3X/I1KQf3FkKhiFu?=
 =?us-ascii?q?aTatELcAtS3MTK7Kma9XFRkbayxtO8tS8qI8xRJAOcraitPzy755geQ5C1ZDVV?=
 =?us-ascii?q?z9hM6pYdYGLH26NFPCHEyLLqiJJSXXw8HrZqOxUadfjPhPuB2qpzmaE1XvPjCC?=
 =?us-ascii?q?lzTyUxCvMOdMjDyUPRBEuYG9dAptBnbnTN78dhK7N9p3hyUswbIonnPKKXIcMT?=
 =?us-ascii?q?9kfkNRr72Q6DlUjellF2Nd7npqM++Elj2d7+nZLJYWrPRqDj51l+Jc/HQ11b9V?=
 =?us-ascii?q?4DtYS/xynSvYtsRurE2+kumT1jpnVwJDqzZRi4KNuEViOKPZ+YFBWHbE5h0N62?=
 =?us-ascii?q?qQBg8Op9tkDN3vpq9RxsLOlKL1NDdN7dbU8dEACMjTLcLUeEYmZDzkGTqcJREA?=
 =?us-ascii?q?ViKxMmfQzxhbmeuX7WGPqZ41gpLliZ4PQKVWElcyE6VJJF5iGYknKYd2Wz5ss7?=
 =?us-ascii?q?mGlsIB4zLqqRvWWd9Wt5bvXPuDBfTlMjvfhr5BMUhbiYjkJJgeY9Wok3dpbUN3?=
 =?us-ascii?q?ycGTQxLd?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AaAAAzWf1bh0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBAYJogQIUE4N5iBiMCIINFGiNP4kFgSQDTykLCAGIeiI0CQ0BAwE?=
 =?us-ascii?q?BAQEBAQIBEwEBAQgNCQgpIwxCFgGBXSQBgmIBAgMBAQEgBBkBASwLAQUJAQEKC?=
 =?us-ascii?q?wMKAgImAgIDHwUBDAEFARwGEwWDHAGCAQUKmTA8ih1wfDOCdgEBBYckCBJ5iwI?=
 =?us-ascii?q?XgUA/gRABgl0HLoMeAQSEYoJXiSUBA4wYik0JhnyGGIQcGIImjmWIQoUEimIwg?=
 =?us-ascii?q?SWCDTMaCBsVOzEGgjUJghIMF4NKhRSFQD4zAYEEAQGJeoMVAQE?=
X-IPAS-Result: =?us-ascii?q?A0AaAAAzWf1bh0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBAYJ?=
 =?us-ascii?q?ogQIUE4N5iBiMCIINFGiNP4kFgSQDTykLCAGIeiI0CQ0BAwEBAQEBAQIBEwEBA?=
 =?us-ascii?q?QgNCQgpIwxCFgGBXSQBgmIBAgMBAQEgBBkBASwLAQUJAQEKCwMKAgImAgIDHwU?=
 =?us-ascii?q?BDAEFARwGEwWDHAGCAQUKmTA8ih1wfDOCdgEBBYckCBJ5iwIXgUA/gRABgl0HL?=
 =?us-ascii?q?oMeAQSEYoJXiSUBA4wYik0JhnyGGIQcGIImjmWIQoUEimIwgSWCDTMaCBsVOzE?=
 =?us-ascii?q?GgjUJghIMF4NKhRSFQD4zAYEEAQGJeoMVAQE?=
X-IronPort-AV: E=Sophos;i="5.56,286,1539673200"; 
   d="scan'208";a="53505449"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 27 Nov 2018 06:51:09 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728575AbeK1BtO (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 27 Nov 2018 20:49:14 -0500
Received: from mail-wm1-f67.google.com ([209.85.128.67]:51882 "EHLO
        mail-wm1-f67.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726435AbeK1BtO (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 27 Nov 2018 20:49:14 -0500
Received: by mail-wm1-f67.google.com with SMTP id j207so15039343wmj.1
        for <linux-kernel@vger.kernel.org>; Tue, 27 Nov 2018 06:51:03 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=baylibre-com.20150623.gappssmtp.com; s=20150623;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=pzx9aMScPj7t80mBwUA1OUok6xh0Ayci1N5fdKxX0Wc=;
        b=IDCsvJX2unR6o7jnTqIcAfOqtaPYnQUvcfajRFoVnm0CgSkfD9CxybK/gR/HVmWnvj
         OhbpiqK/DiLhzyKHtkodg0qcmwGijh0YvlHW2FUTbZ4dHnfpMDxGX/ldpEQl8RjXtDZl
         L8HrKOg0NarlEngRpVmBnx289qqGoUyU/uhMIXm9bpUOtI9lTl67sAjhUQhDdAh8HW0+
         f20dkB18/iIa5js4Pns8G5OxKEbn9LX4+K1Wc/OkjQJEyQg2AuFp6c9oPLy34z6z4fe9
         hIqkGFmQfIlEAHiMZnBMcJeursvkh0ZiYZXYos7r7GlGdvTDYwgftGeArpgU2tVSsko0
         45jw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=pzx9aMScPj7t80mBwUA1OUok6xh0Ayci1N5fdKxX0Wc=;
        b=VwBVc+JBfgc/LyVWSCtzkCEds5VZi+eOAdyB9+aZt15T/1OToV4wA8Jpy30gZNxy3V
         KKTEz4s9eMrZmI8zFB/LnoXS9rQDLSvW0P8wSJDqpqwlKdRfyE4XlnNcs9CgILXX/7Fz
         Mh56HRTSbtU5js2AEcF5w0LzQCBELK51e5gO5iV1jMZGxhUv7tBUvXJioZyPKQphAchS
         KQkMXG4mqJw6gDNMuQ0UCrqZnTbP65Mfl+I7yU+km/5px8yawVgj/Z1QZ1cRTK/I2aL1
         GnBI86OuBlVKjlNEaaocsKCppSfSPCgw78EYoH38KrYHCd4USu5zjlWwNUL0CZev+jUV
         iENw==
X-Gm-Message-State: AGRZ1gIYR7f9Fd9iIV09oyPjJoVqny6vFM6SQpRbMiDob70Ee/KciRrn
        O39VWIl2fWipd11oM7uafmqoQHXKXDYImuLVHie3Yg==
X-Google-Smtp-Source: AJdET5dnFK9pNUg4yvICTRtBycdVpyW32z2C2asGinz6KepU0ioFlHrxTLUV08fFBfrNwRUiwp/0juRPO66jQsjIpO8=
X-Received: by 2002:a1c:af89:: with SMTP id y131mr27556528wme.137.1543330262263;
 Tue, 27 Nov 2018 06:51:02 -0800 (PST)
MIME-Version: 1.0
References: <1541501675-3928-1-git-send-email-narmstrong@baylibre.com>
In-Reply-To: <1541501675-3928-1-git-send-email-narmstrong@baylibre.com>
From: Maxime Jourdan <mjourdan@baylibre.com>
Date: Tue, 27 Nov 2018 15:50:51 +0100
Message-ID: <CAMO6nazNVwo4Ne9RLrxc63-yL_jUfHkKo9RngBb920Ppv92xzQ@mail.gmail.com>
Subject: Re: [PATCH] drm/meson: Add support for VIC alternate timings
To: Neil Armstrong <narmstrong@baylibre.com>
Cc: dri-devel@lists.freedesktop.org, linux-amlogic@lists.infradead.org,
        linux-kernel@vger.kernel.org, linux-arm-kernel@lists.infradead.org
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Tue, Nov 6, 2018 at 11:55 AM Neil Armstrong <narmstrong@baylibre.com> wrote:
>
> This change is an attempt to handle the alternate clock for the CEA mode.
> 60Hz vs. 59.94Hz, 30Hz vs 29.97Hz or 24Hz vs 23.97Hz on the Amlogic Meson SoC
> DRM Driver pixel clock generation.
>
> The actual clock generation will be moved to the Common Clock framework once
> all the video clock are handled by the Amlogic Meson SoC clock driver,
> then these alternate timings will be handled in the same time in a cleaner
> fashion.
>
> Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
> ---
>  drivers/gpu/drm/meson/meson_dw_hdmi.c |  12 +---
>  drivers/gpu/drm/meson/meson_vclk.c    | 127 +++++++++++++++++++++++-----------
>  drivers/gpu/drm/meson/meson_vclk.h    |   2 +
>  3 files changed, 89 insertions(+), 52 deletions(-)
>
> diff --git a/drivers/gpu/drm/meson/meson_dw_hdmi.c b/drivers/gpu/drm/meson/meson_dw_hdmi.c
> index df7247c..d8c5cc3 100644
> --- a/drivers/gpu/drm/meson/meson_dw_hdmi.c
> +++ b/drivers/gpu/drm/meson/meson_dw_hdmi.c
> @@ -594,17 +594,7 @@ dw_hdmi_mode_valid(struct drm_connector *connector,
>         dev_dbg(connector->dev->dev, "%s: vclk:%d venc=%d hdmi=%d\n", __func__,
>                 vclk_freq, venc_freq, hdmi_freq);
>
> -       /* Finally filter by configurable vclk frequencies for VIC modes */
> -       switch (vclk_freq) {
> -       case 54000:
> -       case 74250:
> -       case 148500:
> -       case 297000:
> -       case 594000:
> -               return MODE_OK;
> -       }
> -
> -       return MODE_CLOCK_RANGE;
> +       return meson_vclk_vic_supported_freq(vclk_freq);
>  }
>
>  /* Encoder */
> diff --git a/drivers/gpu/drm/meson/meson_vclk.c b/drivers/gpu/drm/meson/meson_vclk.c
> index ae54732..5accceb 100644
> --- a/drivers/gpu/drm/meson/meson_vclk.c
> +++ b/drivers/gpu/drm/meson/meson_vclk.c
> @@ -117,6 +117,8 @@
>  #define HDMI_PLL_RESET         BIT(28)
>  #define HDMI_PLL_LOCK          BIT(31)
>
> +#define FREQ_1000_1001(_freq)  DIV_ROUND_CLOSEST(_freq * 1000, 1001)
> +
>  /* VID PLL Dividers */
>  enum {
>         VID_PLL_DIV_1 = 0,
> @@ -323,7 +325,7 @@ static void meson_venci_cvbs_clock_config(struct meson_drm *priv)
>  enum {
>  /* PLL O1 O2 O3 VP DV     EN TX */
>  /* 4320 /4 /4 /1 /5 /1  => /2 /2 */
> -       MESON_VCLK_HDMI_ENCI_54000 = 1,
> +       MESON_VCLK_HDMI_ENCI_54000 = 0,
>  /* 4320 /4 /4 /1 /5 /1  => /1 /2 */
>         MESON_VCLK_HDMI_DDR_54000,
>  /* 2970 /4 /1 /1 /5 /1  => /1 /2 */
> @@ -339,6 +341,7 @@ enum {
>  };
>
>  struct meson_vclk_params {
> +       unsigned int pixel_freq;
>         unsigned int pll_base_freq;
>         unsigned int pll_od1;
>         unsigned int pll_od2;
> @@ -347,6 +350,7 @@ struct meson_vclk_params {
>         unsigned int vclk_div;
>  } params[] = {
>         [MESON_VCLK_HDMI_ENCI_54000] = {
> +               .pixel_freq = 54000,
>                 .pll_base_freq = 4320000,
>                 .pll_od1 = 4,
>                 .pll_od2 = 4,
> @@ -355,6 +359,7 @@ struct meson_vclk_params {
>                 .vclk_div = 1,
>         },
>         [MESON_VCLK_HDMI_DDR_54000] = {
> +               .pixel_freq = 54000,
>                 .pll_base_freq = 4320000,
>                 .pll_od1 = 4,
>                 .pll_od2 = 4,
> @@ -363,6 +368,7 @@ struct meson_vclk_params {
>                 .vclk_div = 1,
>         },
>         [MESON_VCLK_HDMI_DDR_148500] = {
> +               .pixel_freq = 148500,
>                 .pll_base_freq = 2970000,
>                 .pll_od1 = 4,
>                 .pll_od2 = 1,
> @@ -371,6 +377,7 @@ struct meson_vclk_params {
>                 .vclk_div = 1,
>         },
>         [MESON_VCLK_HDMI_74250] = {
> +               .pixel_freq = 74250,
>                 .pll_base_freq = 2970000,
>                 .pll_od1 = 2,
>                 .pll_od2 = 2,
> @@ -379,6 +386,7 @@ struct meson_vclk_params {
>                 .vclk_div = 1,
>         },
>         [MESON_VCLK_HDMI_148500] = {
> +               .pixel_freq = 148500,
>                 .pll_base_freq = 2970000,
>                 .pll_od1 = 1,
>                 .pll_od2 = 2,
> @@ -387,6 +395,7 @@ struct meson_vclk_params {
>                 .vclk_div = 1,
>         },
>         [MESON_VCLK_HDMI_297000] = {
> +               .pixel_freq = 297000,
>                 .pll_base_freq = 2970000,
>                 .pll_od1 = 1,
>                 .pll_od2 = 1,
> @@ -395,6 +404,7 @@ struct meson_vclk_params {
>                 .vclk_div = 2,
>         },
>         [MESON_VCLK_HDMI_594000] = {
> +               .pixel_freq = 594000,
>                 .pll_base_freq = 5940000,
>                 .pll_od1 = 1,
>                 .pll_od2 = 1,
> @@ -402,6 +412,7 @@ struct meson_vclk_params {
>                 .vid_pll_div = VID_PLL_DIV_5,
>                 .vclk_div = 1,
>         },
> +       { /* sentinel */ },
>  };
>
>  static inline unsigned int pll_od_to_reg(unsigned int od)
> @@ -626,12 +637,37 @@ static void meson_hdmi_pll_generic_set(struct meson_drm *priv,
>                   pll_freq);
>  }
>
> +enum drm_mode_status
> +meson_vclk_vic_supported_freq(unsigned int freq)
> +{
> +       int i;
> +
> +       DRM_DEBUG_DRIVER("freq = %d\n", freq);
> +
> +       for (i = 0 ; params[i].pixel_freq ; ++i) {
> +               DRM_DEBUG_DRIVER("i = %d pixel_freq = %d alt = %d\n",
> +                                i, params[i].pixel_freq,
> +                                FREQ_1000_1001(params[i].pixel_freq));
> +               /* Match strict frequency */
> +               if (freq == params[i].pixel_freq)
> +                       return MODE_OK;
> +               /* Match 1000/1001 variant */
> +               if (freq == FREQ_1000_1001(params[i].pixel_freq))
> +                       return MODE_OK;
> +       }
> +
> +       return MODE_CLOCK_RANGE;
> +}
> +EXPORT_SYMBOL_GPL(meson_vclk_vic_supported_freq);
> +
>  static void meson_vclk_set(struct meson_drm *priv, unsigned int pll_base_freq,
>                            unsigned int od1, unsigned int od2, unsigned int od3,
>                            unsigned int vid_pll_div, unsigned int vclk_div,
>                            unsigned int hdmi_tx_div, unsigned int venc_div,
> -                          bool hdmi_use_enci)
> +                          bool hdmi_use_enci, bool vic_alternate_clock)
>  {
> +       unsigned int m, frac;
> +
>         /* Set HDMI-TX sys clock */
>         regmap_update_bits(priv->hhi, HHI_HDMI_CLK_CNTL,
>                            CTS_HDMI_SYS_SEL_MASK, 0);
> @@ -646,34 +682,38 @@ static void meson_vclk_set(struct meson_drm *priv, unsigned int pll_base_freq,
>         } else if (meson_vpu_is_compatible(priv, "amlogic,meson-gxbb-vpu")) {
>                 switch (pll_base_freq) {
>                 case 2970000:
> -                       meson_hdmi_pll_set_params(priv, 0x3d, 0xe00,
> -                                                 od1, od2, od3);
> +                       m = 0x3d;
> +                       frac = vic_alternate_clock ? 0xd02 : 0xe00;
>                         break;
>                 case 4320000:
> -                       meson_hdmi_pll_set_params(priv, 0x5a, 0,
> -                                                 od1, od2, od3);
> +                       m = vic_alternate_clock ? 0x59 : 0x5a;
> +                       frac = vic_alternate_clock ? 0xe8f : 0;
>                         break;
>                 case 5940000:
> -                       meson_hdmi_pll_set_params(priv, 0x7b, 0xc00,
> -                                                 od1, od2, od3);
> +                       m = 0x7b;
> +                       frac = vic_alternate_clock ? 0xa05 : 0xc00;
>                         break;
>                 }
> +
> +               meson_hdmi_pll_set_params(priv, m, frac, od1, od2, od3);
>         } else if (meson_vpu_is_compatible(priv, "amlogic,meson-gxm-vpu") ||
>                    meson_vpu_is_compatible(priv, "amlogic,meson-gxl-vpu")) {
>                 switch (pll_base_freq) {
>                 case 2970000:
> -                       meson_hdmi_pll_set_params(priv, 0x7b, 0x300,
> -                                                 od1, od2, od3);
> +                       m = 0x7b;
> +                       frac = vic_alternate_clock ? 0x281 : 0x300;
>                         break;
>                 case 4320000:
> -                       meson_hdmi_pll_set_params(priv, 0xb4, 0,
> -                                                 od1, od2, od3);
> +                       m = vic_alternate_clock ? 0xb3 : 0xb4;
> +                       frac = vic_alternate_clock ? 0x347 : 0;
>                         break;
>                 case 5940000:
> -                       meson_hdmi_pll_set_params(priv, 0xf7, 0x200,
> -                                                 od1, od2, od3);
> +                       m = 0xf7;
> +                       frac = vic_alternate_clock ? 0x102 : 0x200;
>                         break;
>                 }
> +
> +               meson_hdmi_pll_set_params(priv, m, frac, od1, od2, od3);
>         }
>
>         /* Setup vid_pll divider */
> @@ -826,6 +866,7 @@ void meson_vclk_setup(struct meson_drm *priv, unsigned int target,
>                       unsigned int vclk_freq, unsigned int venc_freq,
>                       unsigned int dac_freq, bool hdmi_use_enci)
>  {
> +       bool vic_alternate_clock = false;
>         unsigned int freq;
>         unsigned int hdmi_tx_div;
>         unsigned int venc_div;
> @@ -843,7 +884,7 @@ void meson_vclk_setup(struct meson_drm *priv, unsigned int target,
>                  * - encp encoder
>                  */
>                 meson_vclk_set(priv, vclk_freq * 10, 0, 0, 0,
> -                              VID_PLL_DIV_5, 2, 1, 1, false);
> +                              VID_PLL_DIV_5, 2, 1, 1, false, false);
>                 return;
>         }
>
> @@ -863,31 +904,35 @@ void meson_vclk_setup(struct meson_drm *priv, unsigned int target,
>                 return;
>         }
>
> -       switch (vclk_freq) {
> -       case 54000:
> -               if (hdmi_use_enci)
> -                       freq = MESON_VCLK_HDMI_ENCI_54000;
> -               else
> -                       freq = MESON_VCLK_HDMI_DDR_54000;
> -               break;
> -       case 74250:
> -               freq = MESON_VCLK_HDMI_74250;
> -               break;
> -       case 148500:
> -               if (dac_freq != 148500)
> -                       freq = MESON_VCLK_HDMI_DDR_148500;
> -               else
> -                       freq = MESON_VCLK_HDMI_148500;
> -               break;
> -       case 297000:
> -               freq = MESON_VCLK_HDMI_297000;
> -               break;
> -       case 594000:
> -               freq = MESON_VCLK_HDMI_594000;
> -               break;
> -       default:
> -               pr_err("Fatal Error, invalid HDMI vclk freq %d\n",
> -                      vclk_freq);
> +       for (freq = 0 ; params[freq].pixel_freq ; ++freq) {
> +               if (vclk_freq == params[freq].pixel_freq ||
> +                   vclk_freq == FREQ_1000_1001(params[freq].pixel_freq)) {
> +                       if (vclk_freq != params[freq].pixel_freq)
> +                               vic_alternate_clock = true;
> +                       else
> +                               vic_alternate_clock = false;
> +
> +                       if (freq == MESON_VCLK_HDMI_ENCI_54000 &&
> +                           !hdmi_use_enci)
> +                               continue;
> +
> +                       if (freq == MESON_VCLK_HDMI_DDR_54000 &&
> +                           hdmi_use_enci)
> +                               continue;
> +
> +                       if (freq == MESON_VCLK_HDMI_DDR_148500 &&
> +                           dac_freq == vclk_freq)
> +                               continue;
> +
> +                       if (freq == MESON_VCLK_HDMI_148500 &&
> +                           dac_freq != vclk_freq)
> +                               continue;
> +                       break;
> +               }
> +       }
> +
> +       if (!params[freq].pixel_freq) {
> +               pr_err("Fatal Error, invalid HDMI vclk freq %d\n", vclk_freq);
>                 return;
>         }
>
> @@ -895,6 +940,6 @@ void meson_vclk_setup(struct meson_drm *priv, unsigned int target,
>                        params[freq].pll_od1, params[freq].pll_od2,
>                        params[freq].pll_od3, params[freq].vid_pll_div,
>                        params[freq].vclk_div, hdmi_tx_div, venc_div,
> -                      hdmi_use_enci);
> +                      hdmi_use_enci, vic_alternate_clock);
>  }
>  EXPORT_SYMBOL_GPL(meson_vclk_setup);
> diff --git a/drivers/gpu/drm/meson/meson_vclk.h b/drivers/gpu/drm/meson/meson_vclk.h
> index 869fa3a..4bd8752 100644
> --- a/drivers/gpu/drm/meson/meson_vclk.h
> +++ b/drivers/gpu/drm/meson/meson_vclk.h
> @@ -32,6 +32,8 @@ enum {
>
>  enum drm_mode_status
>  meson_vclk_dmt_supported_freq(struct meson_drm *priv, unsigned int freq);
> +enum drm_mode_status
> +meson_vclk_vic_supported_freq(unsigned int freq);
>
>  void meson_vclk_setup(struct meson_drm *priv, unsigned int target,
>                       unsigned int vclk_freq, unsigned int venc_freq,
> --
> 2.7.4
>
>
> _______________________________________________
> linux-arm-kernel mailing list
> linux-arm-kernel@lists.infradead.org
> http://lists.infradead.org/mailman/listinfo/linux-arm-kernel

LGTM.

Reviewed-by: Maxime Jourdan <mjourdan@baylibre.com>
