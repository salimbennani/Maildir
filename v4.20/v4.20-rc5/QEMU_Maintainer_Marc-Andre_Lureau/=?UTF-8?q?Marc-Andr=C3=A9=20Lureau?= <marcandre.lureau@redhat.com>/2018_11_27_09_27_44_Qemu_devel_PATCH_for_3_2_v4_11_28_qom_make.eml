Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 27 Nov 2018 19:18:57 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 6E3BF5802E4
	for <like.xu@linux.intel.com>; Tue, 27 Nov 2018 01:38:34 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 27 Nov 2018 01:38:34 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A3Eo/shGxCyE7AdFLxLewy51GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ7yrsmwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95RWSJfDI2y?=
 =?us-ascii?q?bIkAD+QOMulEoIfzukMOoBm8CwSjGe/ixCNEiWHt3aAhz+QhCBvL0BA8E94Ssn?=
 =?us-ascii?q?nZqsj+OqcIUeCyyanF1TLNYOlM2Tjh8YTFbhYhruyWXbVqbMHfz1QvFxnbgVqK?=
 =?us-ascii?q?tIzuIjSY1uEXvGiB8+VvT+SvhHM9qw5vuDSvwtosipPXiY0P11DJ7j95z5goKt?=
 =?us-ascii?q?24UkF7fcSoH4dXtyGfLoZ7RN4pTWJwuCsi1LEKpZ22cDIXxJg6xBPTceKLfoaI?=
 =?us-ascii?q?7x75SeqcIy90iGx5dL+7nRq+7EatxvPmWsWp01tHoDBJnsfPu30Lyhfd8NKISu?=
 =?us-ascii?q?Fn8UekwTuP1x7c6uVDIU0skarbKoUhwqIrlpYJvkTDGDL2lF/xjK+MeUUo4umo?=
 =?us-ascii?q?6+L5bbX6vpKQKZN4hwLkPqgzh8CyAv40PhYAUmWb4+iwyb/u8VX8QLpQj/02lq?=
 =?us-ascii?q?fZsIrdJcQevqO5GhFa0oM+6xqmEjipzsoYkmcDLF5cYx2HiJXpO1fSL//mFvez?=
 =?us-ascii?q?hFCskDZox//YJLHgDYjNI2DHkLfge7Z99kFdxBAyzdBZ+5JbFLUBLOjvVU/2sd?=
 =?us-ascii?q?zVFRk5Mwuyw+boDtV9y5kSWWWVAq+WKK/Sq0OH5vozI+mQY48YoDL9K/km5/Hw?=
 =?us-ascii?q?l3M4lkIdcLKt3ZsWbnC4A/tnL1+YYXrqntcOD2MKshAiQ+ztjV3RGQNVfGu4Cq?=
 =?us-ascii?q?Ig+ikgWsXhCYbYWpvrhruH0yGmWJpMaSdDA1GIFH7uMIKcR/YLbjnVO8Jkj3kI?=
 =?us-ascii?q?WKasT9wc0wqzvlr/wrtjMu2G4yAdqNfv2cZ446jJmAgv+CdoJ8Ka1W6LUidzhG?=
 =?us-ascii?q?xfXCI83q10vRlgzEye27Nzmf1SGI9v4KZQXwIncJLR0eF+I9b1XA3HY5GOUln1?=
 =?us-ascii?q?bM+hBGQUR8g6hvYIb1z8U/G/lB3KwmL+BrYPnLWNCIY5tKbBxXX4Ou5nxnrG3b?=
 =?us-ascii?q?VnhF4jFJgcfVa6j7JyolCAT7XClF+UwuPzLfwR?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AWAACqD/1bhxHrdtBkHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGBMIJig3mIGF+LJZRThHeBcxQYFIhyIjQJDQEDAQEBAQEBAgETAQEBCgs?=
 =?us-ascii?q?JCBsOL4I2BQIDGgEGglwDAwECIAQfCikDAwECBgEBJAIfAwQCAgMBUxkFgxyCA?=
 =?us-ascii?q?gEEpTJ8M4VAg2OBDYELin6CFoERixSCVwKJJoZtj3cHApElCxiJUoc3LJRbgy6?=
 =?us-ascii?q?BRoINMxojgzyCJxcSjg88MYEHHItPgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AWAACqD/1bhxHrdtBkHQEBBQEHBQGBUQgBCwGBMIJig3m?=
 =?us-ascii?q?IGF+LJZRThHeBcxQYFIhyIjQJDQEDAQEBAQEBAgETAQEBCgsJCBsOL4I2BQIDG?=
 =?us-ascii?q?gEGglwDAwECIAQfCikDAwECBgEBJAIfAwQCAgMBUxkFgxyCAgEEpTJ8M4VAg2O?=
 =?us-ascii?q?BDYELin6CFoERixSCVwKJJoZtj3cHApElCxiJUoc3LJRbgy6BRoINMxojgzyCJ?=
 =?us-ascii?q?xcSjg88MYEHHItPgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,286,1539673200"; 
   d="scan'208";a="64135087"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mga01b.intel.com with ESMTP/TLS/AES256-SHA; 27 Nov 2018 01:38:33 -0800
Received: from localhost ([::1]:40895 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gRZp8-0002DZ-Up
	for like.xu@linux.intel.com; Tue, 27 Nov 2018 04:38:32 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:47143)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <marcandre.lureau@redhat.com>) id 1gRZgU-0003KA-IO
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 04:29:37 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <marcandre.lureau@redhat.com>) id 1gRZgT-0004p8-9I
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 04:29:34 -0500
Received: from mx1.redhat.com ([209.132.183.28]:37412)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <marcandre.lureau@redhat.com>)
	id 1gRZgT-0004oB-0M
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 04:29:33 -0500
Received: from smtp.corp.redhat.com (int-mx02.intmail.prod.int.phx2.redhat.com
	[10.5.11.12])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 54155A990;
	Tue, 27 Nov 2018 09:29:32 +0000 (UTC)
Received: from localhost (ovpn-112-28.ams2.redhat.com [10.36.112.28])
	by smtp.corp.redhat.com (Postfix) with ESMTP id CE64360BE8;
	Tue, 27 Nov 2018 09:29:28 +0000 (UTC)
From: =?UTF-8?q?Marc-Andr=C3=A9=20Lureau?= <marcandre.lureau@redhat.com>
To: qemu-devel@nongnu.org
Date: Tue, 27 Nov 2018 13:27:44 +0400
Message-Id: <20181127092801.21777-12-marcandre.lureau@redhat.com>
In-Reply-To: <20181127092801.21777-1-marcandre.lureau@redhat.com>
References: <20181127092801.21777-1-marcandre.lureau@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.12
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.28]);
	Tue, 27 Nov 2018 09:29:32 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [PATCH for-3.2 v4 11/28] qom: make
 user_creatable_complete() specific to UserCreatable
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: imammedo@redhat.com, "Michael S. Tsirkin" <mst@redhat.com>,
	=?UTF-8?q?Andreas=20F=C3=A4rber?= <afaerber@suse.de>,
	Amit Shah <amit@kernel.org>,
	=?UTF-8?q?Marc-Andr=C3=A9=20Lureau?= <marcandre.lureau@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Instead of accepting any Object*, change user_creatable_complete() to
require a UserCreatable*. Modify the callers to pass the appropriate
argument, removing redundant dynamic cast checks in object creation.

Signed-off-by: Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com>
Reviewed-by: Igor Mammedov <imammedo@redhat.com>
---
 include/qom/object_interfaces.h |  4 ++--
 hw/misc/ivshmem.c               |  2 +-
 hw/virtio/virtio-rng.c          |  2 +-
 qom/object.c                    | 12 ++++++++----
 qom/object_interfaces.c         | 14 +++-----------
 5 files changed, 15 insertions(+), 19 deletions(-)

diff --git a/include/qom/object_interfaces.h b/include/qom/object_interfa=
ces.h
index 652a16d2ba..682ba1d9b0 100644
--- a/include/qom/object_interfaces.h
+++ b/include/qom/object_interfaces.h
@@ -51,14 +51,14 @@ typedef struct UserCreatableClass {
=20
 /**
  * user_creatable_complete:
- * @obj: the object whose complete() method is called if defined
+ * @uc: the user-creatable object whose complete() method is called if d=
efined
  * @errp: if an error occurs, a pointer to an area to store the error
  *
  * Wrapper to call complete() method if one of types it's inherited
  * from implements USER_CREATABLE interface, otherwise the call does
  * nothing.
  */
-void user_creatable_complete(Object *obj, Error **errp);
+void user_creatable_complete(UserCreatable *uc, Error **errp);
=20
 /**
  * user_creatable_can_be_deleted:
diff --git a/hw/misc/ivshmem.c b/hw/misc/ivshmem.c
index ecfd10a29a..8213659602 100644
--- a/hw/misc/ivshmem.c
+++ b/hw/misc/ivshmem.c
@@ -1280,7 +1280,7 @@ static void desugar_shm(IVShmemState *s)
     object_property_add_child(OBJECT(s), "internal-shm-backend", obj,
                               &error_abort);
     object_unref(obj);
-    user_creatable_complete(obj, &error_abort);
+    user_creatable_complete(USER_CREATABLE(obj), &error_abort);
     s->hostmem =3D MEMORY_BACKEND(obj);
 }
=20
diff --git a/hw/virtio/virtio-rng.c b/hw/virtio/virtio-rng.c
index 855f1b41d1..30493a2586 100644
--- a/hw/virtio/virtio-rng.c
+++ b/hw/virtio/virtio-rng.c
@@ -191,7 +191,7 @@ static void virtio_rng_device_realize(DeviceState *de=
v, Error **errp)
     if (vrng->conf.rng =3D=3D NULL) {
         vrng->conf.default_backend =3D RNG_RANDOM(object_new(TYPE_RNG_RA=
NDOM));
=20
-        user_creatable_complete(OBJECT(vrng->conf.default_backend),
+        user_creatable_complete(USER_CREATABLE(vrng->conf.default_backen=
d),
                                 &local_err);
         if (local_err) {
             error_propagate(errp, local_err);
diff --git a/qom/object.c b/qom/object.c
index 547dcf97c3..eb770dbf7f 100644
--- a/qom/object.c
+++ b/qom/object.c
@@ -417,6 +417,7 @@ void object_initialize_childv(Object *parentobj, cons=
t char *propname,
 {
     Error *local_err =3D NULL;
     Object *obj;
+    UserCreatable *uc;
=20
     object_initialize(childobj, size, type);
     obj =3D OBJECT(childobj);
@@ -431,8 +432,9 @@ void object_initialize_childv(Object *parentobj, cons=
t char *propname,
         goto out;
     }
=20
-    if (object_dynamic_cast(obj, TYPE_USER_CREATABLE)) {
-        user_creatable_complete(obj, &local_err);
+    uc =3D (UserCreatable *)object_dynamic_cast(obj, TYPE_USER_CREATABLE=
);
+    if (uc) {
+        user_creatable_complete(uc, &local_err);
         if (local_err) {
             object_unparent(obj);
             goto out;
@@ -590,6 +592,7 @@ Object *object_new_with_propv(const char *typename,
     Object *obj;
     ObjectClass *klass;
     Error *local_err =3D NULL;
+    UserCreatable *uc;
=20
     klass =3D object_class_by_name(typename);
     if (!klass) {
@@ -612,8 +615,9 @@ Object *object_new_with_propv(const char *typename,
         goto error;
     }
=20
-    if (object_dynamic_cast(obj, TYPE_USER_CREATABLE)) {
-        user_creatable_complete(obj, &local_err);
+    uc =3D (UserCreatable *)object_dynamic_cast(obj, TYPE_USER_CREATABLE=
);
+    if (uc) {
+        user_creatable_complete(uc, &local_err);
         if (local_err) {
             object_unparent(obj);
             goto error;
diff --git a/qom/object_interfaces.c b/qom/object_interfaces.c
index 97b79b48bb..db85d1eb75 100644
--- a/qom/object_interfaces.c
+++ b/qom/object_interfaces.c
@@ -8,18 +8,10 @@
 #include "qapi/opts-visitor.h"
 #include "qemu/config-file.h"
=20
-void user_creatable_complete(Object *obj, Error **errp)
+void user_creatable_complete(UserCreatable *uc, Error **errp)
 {
+    UserCreatableClass *ucc =3D USER_CREATABLE_GET_CLASS(uc);
=20
-    UserCreatableClass *ucc;
-    UserCreatable *uc =3D
-        (UserCreatable *)object_dynamic_cast(obj, TYPE_USER_CREATABLE);
-
-    if (!uc) {
-        return;
-    }
-
-    ucc =3D USER_CREATABLE_GET_CLASS(uc);
     if (ucc->complete) {
         ucc->complete(uc, errp);
     }
@@ -89,7 +81,7 @@ Object *user_creatable_add_type(const char *type, const=
 char *id,
         goto out;
     }
=20
-    user_creatable_complete(obj, &local_err);
+    user_creatable_complete(USER_CREATABLE(obj), &local_err);
     if (local_err) {
         object_property_del(object_get_objects_root(),
                             id, &error_abort);
--=20
2.20.0.rc1


