Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 27 Nov 2018 19:19:11 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id D40905802E4
	for <like.xu@linux.intel.com>; Tue, 27 Nov 2018 01:52:49 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 27 Nov 2018 01:52:49 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AlRYPcBJ/s6p3g/CZrtmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgfI/nxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJBUMhPWSJPAYGz?=
 =?us-ascii?q?b4UAAOUdMuhWspH9qlkMoxaxGAWhCv/jxSFThnLtwa06yv4sHR3a0AA8Hd8Dtm?=
 =?us-ascii?q?nfotXvNKcVVOC41K7Gwi/Zb/xKwDvw9I7IfQ07ofaWQLl+d9fRyVMxGAzfk1Wb?=
 =?us-ascii?q?tIvoPzaP2eQXr2eU9exgWv+1i2E5sQ1xpiWvxt0yhYbTm4IY0UrE+jtkz4Y1P9?=
 =?us-ascii?q?K4VFR3bsKjEJtVriyXMZZ9TMA6Q2xwpio21r4LtYSmcCQXy5kr3QDTZvKHfoSS?=
 =?us-ascii?q?/x7uVv6dLSlkiH9hYr6zmhi//Va6xuHhVcS53kxGojRGn9TKq3sDzQbc6tKdRf?=
 =?us-ascii?q?t45kqh2SiA1wTU6uxcJUA0lLHbK4I6wrIqmZoTt1nDEjXxmEXsg6+abkQk+u62?=
 =?us-ascii?q?5OT7erjquIOQOoxuhg3jL6gjmdazDfo2PwUORWSX5Oax2KXm/ULjQbVKivM2kr?=
 =?us-ascii?q?PesJDfPckbv7C2AwpI0oo69hmwESmm38ocnXUeN11Ffw+Hj471NF7QO/D0CvO/?=
 =?us-ascii?q?g1WvkDh13fzHMaDhD43JLnjClrfhYLl851RdyAo10dBQ+ZZUBqsdL/L0X0/8r9?=
 =?us-ascii?q?rYDhg/Mwy7xebnFc9x1oQEWWKAGqOZKr/dsUeU5uIzJOmBfIsVuDf+K/c7/fLv?=
 =?us-ascii?q?gmI5lEQZfamo25sXdX+5Eu5nI0WffXrjnNMBHX0WsQo5Sey5wGCESiNZMnauQ7?=
 =?us-ascii?q?ontHZ8DIO9EZyFQIerj7qcmiChEdpTb2FCD1mKVnDwa4SDXexLcS+XP4ptnyIJ?=
 =?us-ascii?q?UeucTZQ830SrvQ7+1701N+fR52gUuIzu0J1v6vTOmAou3TpzCcubzieKVW4jhX?=
 =?us-ascii?q?4CRTI9wPVip1dgwEyIy6lyjq9kEolK6vZUFws3K5PY5+p9Dd/0R0TGZNjaZkyh?=
 =?us-ascii?q?R4CDCCs6C/s3z8WPK2JgAdirk1iX2iOwCLYTm6aGQpgp6K/VwlDrKsp9wmqA36?=
 =?us-ascii?q?4k2Qp1CvBTPHGr0/YsvzPYAJTExgDAz/6n?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AnAACnE/1bhxHrdtBkHQEBBQEHBQGBU?=
 =?us-ascii?q?wYBCwGBMIJig3mId6R0gXMUGBSIciI2Bw0BAwEBAQEBAQIBEwEBAQoLCQgbDi+?=
 =?us-ascii?q?CNgUCAxoBBoJcAwMBAiAEHwopAwMBAgYBASQCIgQCAgMBUxkFgxyCAgEEpSJ8M?=
 =?us-ascii?q?4VAg2WBDYELiwKCFoERixeCVwKPIHSPeAcCkSULGIlShzmVCIMvgU0EggIzGiO?=
 =?us-ascii?q?DPIInFxKOEDwxgQcci1eBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AnAACnE/1bhxHrdtBkHQEBBQEHBQGBUwYBCwGBMIJig3m?=
 =?us-ascii?q?Id6R0gXMUGBSIciI2Bw0BAwEBAQEBAQIBEwEBAQoLCQgbDi+CNgUCAxoBBoJcA?=
 =?us-ascii?q?wMBAiAEHwopAwMBAgYBASQCIgQCAgMBUxkFgxyCAgEEpSJ8M4VAg2WBDYELiwK?=
 =?us-ascii?q?CFoERixeCVwKPIHSPeAcCkSULGIlShzmVCIMvgU0EggIzGiODPIInFxKOEDwxg?=
 =?us-ascii?q?Qcci1eBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,286,1539673200"; 
   d="scan'208";a="139716080"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 27 Nov 2018 01:52:48 -0800
Received: from localhost ([::1]:40984 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gRa2x-0007gg-NX
	for like.xu@linux.intel.com; Tue, 27 Nov 2018 04:52:47 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:48337)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <marcandre.lureau@redhat.com>) id 1gRZj6-0005Sz-U9
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 04:32:18 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <marcandre.lureau@redhat.com>) id 1gRZj4-0006dD-7w
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 04:32:16 -0500
Received: from mx1.redhat.com ([209.132.183.28]:33512)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <marcandre.lureau@redhat.com>)
	id 1gRZj3-0006d5-W6
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 04:32:14 -0500
Received: from smtp.corp.redhat.com (int-mx05.intmail.prod.int.phx2.redhat.com
	[10.5.11.15])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 389FBCAA80
	for <qemu-devel@nongnu.org>; Tue, 27 Nov 2018 09:32:13 +0000 (UTC)
Received: from localhost (ovpn-112-28.ams2.redhat.com [10.36.112.28])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 982FD51C7A;
	Tue, 27 Nov 2018 09:32:06 +0000 (UTC)
From: =?UTF-8?q?Marc-Andr=C3=A9=20Lureau?= <marcandre.lureau@redhat.com>
To: qemu-devel@nongnu.org
Date: Tue, 27 Nov 2018 13:28:01 +0400
Message-Id: <20181127092801.21777-29-marcandre.lureau@redhat.com>
In-Reply-To: <20181127092801.21777-1-marcandre.lureau@redhat.com>
References: <20181127092801.21777-1-marcandre.lureau@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.15
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.38]);
	Tue, 27 Nov 2018 09:32:13 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [PATCH for-3.2 v4 28/28] hostmem: use object id for
 memory region name with >= 3.1
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: imammedo@redhat.com, Eduardo Habkost <ehabkost@redhat.com>,
	=?UTF-8?q?Marc-Andr=C3=A9=20Lureau?= <marcandre.lureau@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

hostmem-file and hostmem-memfd use the whole object path for the
memory region name, and hostname-ram uses only the path component (the
object id, or canonical path basename):

qemu -m 1024 -object memory-backend-file,id=3Dmem,size=3D1G,mem-path=3D/t=
mp/foo -numa node,memdev=3Dmem -monitor stdio
(qemu) info ramblock
              Block Name    PSize              Offset               Used =
             Total
            /objects/mem    4 KiB  0x0000000000000000 0x0000000040000000 =
0x0000000040000000

qemu -m 1024 -object memory-backend-memfd,id=3Dmem,size=3D1G -numa node,m=
emdev=3Dmem -monitor stdio
(qemu) info ramblock
              Block Name    PSize              Offset               Used =
             Total
            /objects/mem    4 KiB  0x0000000000000000 0x0000000040000000 =
0x0000000040000000

qemu -m 1024 -object memory-backend-ram,id=3Dmem,size=3D1G -numa node,mem=
dev=3Dmem -monitor stdio
(qemu) info ramblock
              Block Name    PSize              Offset               Used =
             Total
                     mem    4 KiB  0x0000000000000000 0x0000000040000000 =
0x0000000040000000

Use the object id for -file and -memfd with >=3D 3.1 for consistency.
Having a consistent naming allow to migrate to different hostmem
backends.

Signed-off-by: Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com>
---
 include/hw/compat.h      | 10 +++++++++-
 include/sysemu/hostmem.h |  3 ++-
 backends/hostmem-file.c  |  8 ++++----
 backends/hostmem-memfd.c |  2 +-
 backends/hostmem-ram.c   |  9 ++++-----
 backends/hostmem.c       | 31 +++++++++++++++++++++++++++++++
 6 files changed, 51 insertions(+), 12 deletions(-)

diff --git a/include/hw/compat.h b/include/hw/compat.h
index 70958328fe..99cf6b1e03 100644
--- a/include/hw/compat.h
+++ b/include/hw/compat.h
@@ -2,7 +2,15 @@
 #define HW_COMPAT_H
=20
 #define HW_COMPAT_3_1 \
-    /* empty */
+    {\
+        .driver   =3D "memory-backend-file",\
+        .property =3D "x-use-canonical-path-for-ramblock-id",\
+        .value    =3D "true",\
+    },{\
+        .driver   =3D "memory-backend-memfd",\
+        .property =3D "x-use-canonical-path-for-ramblock-id",\
+        .value    =3D "true",\
+    },
=20
 #define HW_COMPAT_3_0 \
     /* empty */
diff --git a/include/sysemu/hostmem.h b/include/sysemu/hostmem.h
index 6e6bd2c1cb..a023b372a4 100644
--- a/include/sysemu/hostmem.h
+++ b/include/sysemu/hostmem.h
@@ -53,7 +53,7 @@ struct HostMemoryBackend {
=20
     /* protected */
     uint64_t size;
-    bool merge, dump;
+    bool merge, dump, use_canonical_path;
     bool prealloc, force_prealloc, is_mapped, share;
     DECLARE_BITMAP(host_nodes, MAX_NODES + 1);
     HostMemPolicy policy;
@@ -67,5 +67,6 @@ MemoryRegion *host_memory_backend_get_memory(HostMemory=
Backend *backend);
 void host_memory_backend_set_mapped(HostMemoryBackend *backend, bool map=
ped);
 bool host_memory_backend_is_mapped(HostMemoryBackend *backend);
 size_t host_memory_backend_pagesize(HostMemoryBackend *memdev);
+char *host_memory_backend_get_name(HostMemoryBackend *backend);
=20
 #endif
diff --git a/backends/hostmem-file.c b/backends/hostmem-file.c
index 639c8d4307..c01a7cdf8d 100644
--- a/backends/hostmem-file.c
+++ b/backends/hostmem-file.c
@@ -55,16 +55,16 @@ file_backend_memory_alloc(HostMemoryBackend *backend,=
 Error **errp)
     error_setg(errp, "-mem-path not supported on this host");
 #else
     if (!host_memory_backend_mr_inited(backend)) {
-        gchar *path;
+        gchar *name;
         backend->force_prealloc =3D mem_prealloc;
-        path =3D object_get_canonical_path(OBJECT(backend));
+        name =3D host_memory_backend_get_name(backend);
         memory_region_init_ram_from_file(&backend->mr, OBJECT(backend),
-                                 path,
+                                 name,
                                  backend->size, fb->align,
                                  (backend->share ? RAM_SHARED : 0) |
                                  (fb->is_pmem ? RAM_PMEM : 0),
                                  fb->mem_path, errp);
-        g_free(path);
+        g_free(name);
     }
 #endif
 }
diff --git a/backends/hostmem-memfd.c b/backends/hostmem-memfd.c
index b6836b28e5..c5a4a9b530 100644
--- a/backends/hostmem-memfd.c
+++ b/backends/hostmem-memfd.c
@@ -57,7 +57,7 @@ memfd_backend_memory_alloc(HostMemoryBackend *backend, =
Error **errp)
         return;
     }
=20
-    name =3D object_get_canonical_path(OBJECT(backend));
+    name =3D host_memory_backend_get_name(backend);
     memory_region_init_ram_from_fd(&backend->mr, OBJECT(backend),
                                    name, backend->size, true, fd, errp);
     g_free(name);
diff --git a/backends/hostmem-ram.c b/backends/hostmem-ram.c
index 7ddd08d370..24b65d9ae3 100644
--- a/backends/hostmem-ram.c
+++ b/backends/hostmem-ram.c
@@ -16,21 +16,20 @@
=20
 #define TYPE_MEMORY_BACKEND_RAM "memory-backend-ram"
=20
-
 static void
 ram_backend_memory_alloc(HostMemoryBackend *backend, Error **errp)
 {
-    char *path;
+    char *name;
=20
     if (!backend->size) {
         error_setg(errp, "can't create backend with size 0");
         return;
     }
=20
-    path =3D object_get_canonical_path_component(OBJECT(backend));
-    memory_region_init_ram_shared_nomigrate(&backend->mr, OBJECT(backend=
), path,
+    name =3D host_memory_backend_get_name(backend);
+    memory_region_init_ram_shared_nomigrate(&backend->mr, OBJECT(backend=
), name,
                            backend->size, backend->share, errp);
-    g_free(path);
+    g_free(name);
 }
=20
 static void
diff --git a/backends/hostmem.c b/backends/hostmem.c
index 1a89342039..35c665fca2 100644
--- a/backends/hostmem.c
+++ b/backends/hostmem.c
@@ -28,6 +28,16 @@ QEMU_BUILD_BUG_ON(HOST_MEM_POLICY_BIND !=3D MPOL_BIND)=
;
 QEMU_BUILD_BUG_ON(HOST_MEM_POLICY_INTERLEAVE !=3D MPOL_INTERLEAVE);
 #endif
=20
+char *
+host_memory_backend_get_name(HostMemoryBackend *self)
+{
+    if (!self->use_canonical_path) {
+        return object_get_canonical_path_component(OBJECT(self));
+    }
+
+    return object_get_canonical_path(OBJECT(self));
+}
+
 static void
 host_memory_backend_get_size(Object *obj, Visitor *v, const char *name,
                              void *opaque, Error **errp)
@@ -386,6 +396,23 @@ static void host_memory_backend_set_share(Object *o,=
 bool value, Error **errp)
     backend->share =3D value;
 }
=20
+static bool
+host_memory_backend_get_use_canonical_path(Object *obj, Error **errp)
+{
+    HostMemoryBackend *self =3D MEMORY_BACKEND(obj);
+
+    return self->use_canonical_path;
+}
+
+static void
+host_memory_backend_set_use_canonical_path(Object *obj, bool value,
+                                           Error **errp)
+{
+    HostMemoryBackend *self =3D MEMORY_BACKEND(obj);
+
+    self->use_canonical_path =3D value;
+}
+
 static void
 host_memory_backend_class_init(ObjectClass *oc, void *data)
 {
@@ -432,6 +459,9 @@ host_memory_backend_class_init(ObjectClass *oc, void =
*data)
         &error_abort);
     object_class_property_set_description(oc, "share",
         "Mark the memory as private to QEMU or shared", &error_abort);
+    object_class_property_add_bool(oc, "x-use-canonical-path-for-rambloc=
k-id",
+        host_memory_backend_get_use_canonical_path,
+        host_memory_backend_set_use_canonical_path, &error_abort);
 }
=20
 static const TypeInfo host_memory_backend_info =3D {
@@ -444,6 +474,7 @@ static const TypeInfo host_memory_backend_info =3D {
     .instance_init =3D host_memory_backend_init,
     .interfaces =3D (InterfaceInfo[]) {
         { TYPE_USER_CREATABLE },
+        { TYPE_COMPAT_PROPS },
         { }
     }
 };
--=20
2.20.0.rc1


