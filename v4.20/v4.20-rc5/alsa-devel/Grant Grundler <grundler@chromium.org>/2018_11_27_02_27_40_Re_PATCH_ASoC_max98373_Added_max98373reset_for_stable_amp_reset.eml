Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 27 Nov 2018 12:18:41 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E275C5802E4;
	Mon, 26 Nov 2018 18:27:58 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga008-1.jf.intel.com with ESMTP; 26 Nov 2018 18:27:58 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AvTXbXBBB49US1IHd7fl5UyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP7/rsmwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6zaYd4XS3ZNUttIWyBdH4+3?=
 =?us-ascii?q?co8DA/cBMOpdqYT2ulkAogakBQS0C+zvxD1HiH/406M5zuovDx3J3Bc4H98Mq3?=
 =?us-ascii?q?nUsMn5Ob0OXeyp0KXFzzPOZO5W1zfn74jIdwgsr/CWXb1qd8rR1VQkGQLfjlWN?=
 =?us-ascii?q?r4zqIjeV2foXs2OG6OdgWvivi3Mhqw5spjig2N0sh5LViYIV0FDE8iB5wIcoJd?=
 =?us-ascii?q?29UkJ7ZsSkEJRJuiycKoB4QdsiTnl2tComzrAKo4O3cSYUxJg92hLSaOCLf5KJ?=
 =?us-ascii?q?7x/hTOqdPyt0iXZ/dL+8hxu+61Wsx+z9W8WuzVpHqiRIn9/RvX4XzRPT8NKISv?=
 =?us-ascii?q?5l80ehxzmP0wfT5/laIUA7i6XbMYQtwr0umZoJt0TMACv2lF/xjK+MeUUo4umo?=
 =?us-ascii?q?6+L5bbX6vpKQKZN4hwXkPqgzlMGzH/40PhUNUmSH4+ix1b/u8VX8QLpQj/02lq?=
 =?us-ascii?q?fZsIrdJcQevqO5Bw5V0oA+6xewFjum08oXnWMBLF1bfBKLlo/pOl/IIP/mF/ey?=
 =?us-ascii?q?mEqskDh1yPDcJLHhAYvCLmLFkLj/ebZx8UlcyBA8zdxH/ZJbFqkBIO7vWk/2rN?=
 =?us-ascii?q?HYCh45Mw+qzOr9B9R9y5gTWWaOAq+fLaPTvkWE5uMpI+mQeoAVvCzxJOQi5/7r?=
 =?us-ascii?q?lXU5g0MSfbG13ZsLb3C1BvRmLF+YYXrwmNgBFn0GvgojTOPwjl2CXiVeZ3KzX6?=
 =?us-ascii?q?I6+zE6B5iqDYbFRoCxnrOB2D23EYFRZmBDElqMC2vnd52YW/cQbyKfOs1hkjsa?=
 =?us-ascii?q?WrS7SI8h0heutAn9y7d8KurU+ysYtY/s1dRv5u3Tkw0y+iJwD8iHz26NSGR0lH?=
 =?us-ascii?q?sSRzAqxKB/vVB9ylCb3KdimPxYFdtT5/BTXgcgL5Hczfd3C9TzWgLHY9eIR0yq?=
 =?us-ascii?q?QtSgATEtUN0xx8UCbFp6G9WnlhrDxTalA6cJl7yXA5w56qHc0GL3J8pnz3bG1b?=
 =?us-ascii?q?Muj18pQsZUMW2mh6h/9xXcBoLTkkWZkbqqeroY3CLX6GiDym+OtllCUAFsSaXF?=
 =?us-ascii?q?QWwfZkzOoNvk/EzCUaGhBa4nMgRbz86CMbVFatvugVVCR/fjPdDebnm1m2exAx?=
 =?us-ascii?q?aI27yNYJDre2UbwCXSFkwEnxoP8naBMAg0Hj2hrH7GDDxyCVLvZFvh/vRkp3Ol?=
 =?us-ascii?q?UEA41QGKYFdn17qu5BEVg+eRS/cS3rICpScgpC94HFe739LKFdWAoxBtc7lbYd?=
 =?us-ascii?q?M4+F1Hz37WtxRhPpy8KKBvnkIecwVyv0PpyxV3CoVBndI2rH8wywpyM6aY0FJH?=
 =?us-ascii?q?dzOXxp3wPrzXKm/v/BGgcaLW21fe0MqI9acL8vg3t1LjvASxHEo473pny8VV02?=
 =?us-ascii?q?eb5pjSFgUSVYz+U0kp+Bl6vb3VeTQ96J7O2n1qMqm0tSHC1sktBOskzBagYthe?=
 =?us-ascii?q?PLmFFA/0D80VGcyuJPY2lFiuaxIOJPpS+7IsP8O6a/uG37amPeZ9nD68kWtL+o?=
 =?us-ascii?q?F80kKW+Cp6Re7FxJIFw/Ce3guaWDbwllahssbrmY9aYTEeBHawyS/hBIRJfK19?=
 =?us-ascii?q?YZ4LCXuyI82w3th+nZ/tVGJC+165GlwG39WleRyMYFzn3A1czFgYrmajmSSl0T?=
 =?us-ascii?q?N0iTYprqyE0SzKwuTicgcHO2FRSGlji1fsPZa7j9QAUEe0aAgpkQOv5VzmyKhD?=
 =?us-ascii?q?uKR/M27TTF9Ifij3NW1jUrG8tqGfY85J854otSRXUOKhYVGVULL9oh0a0z/9EG?=
 =?us-ascii?q?ta3jw0azaqupDhlRxglG2dNGpzrGbeecxoxxfQ/sbcRf1S3joBXiV4kiPYBlu/?=
 =?us-ascii?q?P9mo+9WbiZHDv/u6V2KgUJ1TbCbqwZmBtCu9+W1lHxm/k+qvld3gFAgwyTX72M?=
 =?us-ascii?q?VyVSXUsBb8ZZHm1qSgPuJgZEVoBl7868xhF4F6k4swgowQ2HcAipWU+3oHjXn8?=
 =?us-ascii?q?MdFB1a3ia3oNQCYBw8TJ7wj9xE1jMnWJypr6VnqHw8ttfdm6Yn4M1SI74MBHE6?=
 =?us-ascii?q?OU7L1CnStorVu0twPRYf5hnjgDzfsi8mIVg+YMuAA11CWSHqgSHVVEPSzrjxmI?=
 =?us-ascii?q?6tG+rKZNa2q1f7m/ylF+ncy/A7GYuQ5TRmz5epg5EC9078V/Nk/M0XLp5oHlft?=
 =?us-ascii?q?nQccwcthmOnxjciOhVLYo7luAWiip/JWL9oXolxvYnjRxp2JG2pomGJH9r/KKk?=
 =?us-ascii?q?GR5YLTz1atgX+jHsi6Zeg8mX05quHpVnBjUEQp/oQei0HzIVsPTtLxyOHyEkqn?=
 =?us-ascii?q?eHBbrfGheS51x8oHLIF5CrKmubJH0Ezdh5QBmdJUpfgB0bXTkgn545EByqy9Ll?=
 =?us-ascii?q?cEtj+j8R4Vv4oANWyu10Lxn/TnvfpACwZzc2UpefKQRZ7hpY60fJK8Ce7f9zHy?=
 =?us-ascii?q?JF/p2ntgONMXeWZwBJDWEPR0yFCErvPrio5dnc7eeYAvCyIOfJYbWLseZeTeuH?=
 =?us-ascii?q?xYqz0ot6+DaBLsWOPn5/D/0ix0pMR3Z5F97CmzUITSwXmDnAb8qapBe65y12od?=
 =?us-ascii?q?qz8PXtWALz+4SPD6FePslo+xCzma2DLfKfhD5lKTZE0ZMB3X/Ix6Ye3F4RiCFu?=
 =?us-ascii?q?diOhEbcatS7KQ6LfhLVXDwMAay5oMMtI7qQ83hRCOMLBi9P10KJ4geAxC1tfSV?=
 =?us-ascii?q?PhncSpb9QQI26hLFPHGFqLNLOeKDLR3sH4erm8RqNQjelOsx2wuC2WE0viPjSF?=
 =?us-ascii?q?ijnoWAqjMeBKjCGHIhNevJuxfQpqCWjmVNjmcAG0MMdrjT0qxr05nm/KNW8ZMT?=
 =?us-ascii?q?Rmb0xBtKGf7SNGjfV5AGFB6ntlLe+ZmyeW9eXYK5AWsed1DSRwje5V/HM6y75N?=
 =?us-ascii?q?5iFeWPN1gDfSrsJpo1y+kuiA0DxnUB9PqjZNnI2KvEViNr/f9plPQnvE+BMN7W?=
 =?us-ascii?q?ONCxUFvddlC9vvu7xOxdjLjq78NDBC89eHtfcbUufOIcSbeFU7LBzlHDPORF8K?=
 =?us-ascii?q?VyOtOWXSnWRWkOuV83yIq949sJe6y7QUTboOe0Y8EO9SJV54GtAGLY0/Cjw+jL?=
 =?us-ascii?q?iXiMMSzXG+th7URdhf+JfdWaTBUr3UND+FgOwcNFMzyrTiINFWZtD2?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AcAAAYq/xbh0O0hNFdBh4BBgcGgVEJC?=
 =?us-ascii?q?wGDaxQTg3mWKRSXKBSBXywTAYFLhxgiNAkNAQMBAQEBAQECARMBAQEIDQkIKSM?=
 =?us-ascii?q?MgjYkgmIBAQEBAgEBAiAEGQEBNwEFCQEBCgsNAgImAgIDHxIBBQEcBhMFgxyBe?=
 =?us-ascii?q?ggFmhY8ih1wfDOCdgEBBYcqCBJ5in4XgX+EI4RnCYMSgleJARqGd06PJgmRLxi?=
 =?us-ascii?q?RCCyXdjCBJYINTTAIbAaCNYIbDBeIXoVfHjOBBQEBjRYBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AcAAAYq/xbh0O0hNFdBh4BBgcGgVEJCwGDaxQTg3mWKRS?=
 =?us-ascii?q?XKBSBXywTAYFLhxgiNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkgmIBAQEBA?=
 =?us-ascii?q?gEBAiAEGQEBNwEFCQEBCgsNAgImAgIDHxIBBQEcBhMFgxyBeggFmhY8ih1wfDO?=
 =?us-ascii?q?CdgEBBYcqCBJ5in4XgX+EI4RnCYMSgleJARqGd06PJgmRLxiRCCyXdjCBJYINT?=
 =?us-ascii?q?TAIbAaCNYIbDBeIXoVfHjOBBQEBjRYBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,285,1539673200"; 
   d="scan'208";a="54943553"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 26 Nov 2018 18:27:57 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728220AbeK0NYJ (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 27 Nov 2018 08:24:09 -0500
Received: from mail-it1-f193.google.com ([209.85.166.193]:50712 "EHLO
        mail-it1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727625AbeK0NYJ (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 27 Nov 2018 08:24:09 -0500
Received: by mail-it1-f193.google.com with SMTP id z7so14314648iti.0
        for <linux-kernel@vger.kernel.org>; Mon, 26 Nov 2018 18:27:52 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=chromium.org; s=google;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=dYhvrJp1F6xCS2BSAGlYwk9a60TmyXDkOBAdJ7PTZU8=;
        b=PJXtt0UYtlxxA9bwVr05ClAwMlVYX83dpke+BWfZmuxTIIYXKZQcI2/+dKLjbT5o6/
         S0MQmgyq2wg0OgPPX85yJ0Rt9Wwl19oc+xV5FqgN2U/6CcP9JYevXuwlNiI/LN8RIKQS
         ZAoGNnqi8gfzkfz/uHEYCUUXlRLITrloBclDs=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=dYhvrJp1F6xCS2BSAGlYwk9a60TmyXDkOBAdJ7PTZU8=;
        b=BZCQ+uPhV51GvG2qPxnMUL0QwzmSUryQQAMenQh8Uh9onoLTFJncu0ugLqXM/GBcgd
         9VfqENO7jyEX0Wr4Ay0+ksLfAqY4WLjgN6i9k2YZAGIuSZRicEMQ+xGjeuhB8/wSB6dn
         Rgm49Vezah/9vx0hRtf0R69/BoWq3r02nf6iWqhAbMtR2sDtCBunFzqR1TVJDFEIhspF
         1H7PJiRV4vcIcZun4U2m0frBLx7PrI6g2d3atIez8I9VQrDIqL/vFFHGdsCWJDl2tLbg
         DQY5FEcQZZfQdhdV8ApsFB6+kpl8lGfJskAFwfRlSpvuIvfTVqOcPgO2XGqoi/s+JUaN
         nHbA==
X-Gm-Message-State: AGRZ1gLepjI1TG9uyLxGxz3bQH3C4YhoOBDPhZzXPBr8ObMjvIoavEt1
        700MRrh9eP/SOoG1ce74V65E9ZhM86P9z8+JkOzUCw==
X-Google-Smtp-Source: AJdET5d6xrxhg/Bw9DnfUW9rGjKO8uaMAbPEDagCd8/AqDvqdTGWAWo84YebDT9Ja+o/t6kMsvkx0+MlcMATZp9q378=
X-Received: by 2002:a24:684a:: with SMTP id v71-v6mr24635089itb.137.1543285671709;
 Mon, 26 Nov 2018 18:27:51 -0800 (PST)
MIME-Version: 1.0
References: <20181126183942.2631-1-ryans.lee@maximintegrated.com> <CANEJEGu30oPGRjeK2Sp1dUj4CuFjZeZ9+-2DRwhvmMLNex3p7A@mail.gmail.com>
In-Reply-To: <CANEJEGu30oPGRjeK2Sp1dUj4CuFjZeZ9+-2DRwhvmMLNex3p7A@mail.gmail.com>
From: Grant Grundler <grundler@chromium.org>
Date: Mon, 26 Nov 2018 18:27:40 -0800
Message-ID: <CANEJEGs+ou+YyB503fyX9sqSzbp-EpykGo7OXgCNV0cW7RA0vA@mail.gmail.com>
Subject: Re: [PATCH] ASoC: max98373: Added max98373_reset for stable amp reset
To: Grant Grundler <grundler@chromium.org>
Cc: RyanS.Lee@maximintegrated.com, Liam Girdwood <lgirdwood@gmail.com>,
        broonie@kernel.org, perex@perex.cz, tiwai@suse.com,
        Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>,
        Benson Leung <bleung@chromium.org>,
        alsa-devel@alsa-project.org, LKML <linux-kernel@vger.kernel.org>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

I just realized I had one more question...

On Mon, Nov 26, 2018 at 6:24 PM Grant Grundler <grundler@chromium.org> wrote:
>
> Hi Ryan!
>
> Just some questions inline - in general I like the reset function.
>
> On Mon, Nov 26, 2018 at 10:46 AM Ryan Lee <RyanS.Lee@maximintegrated.com> wrote:
> >
> > Signed-off-by: Ryan Lee <ryans.lee@maximintegrated.com>
> > ---
> >  Changes : Created max98373_reset function to minimize code duplication.
> >            Changed regmap_write to regmap_update_bits. Other bits except LSB need to be masked.
> >            Added reset verification step to make sure software reset is completed well. Software reset is done in 10ms in normal case.
> >            Revision ID is available when the amp is in the idle state which means software reset is completed.

Why not poll the RevID register a few times until it gives a value?

Then structure the code to try reset twice (maybe three times).
This would avoid the unusual "sleep time after reset is increased" code.

cheers,
grant

> >            Software reset will be performed maximum 3 times to avoid amp reset failure. Generally it is done in the first trial.
> >            sleep time after software reset is increased + 30ms for every retrial. Maximum possible msleep time is 100 ms (initial 10 ms + 30 ms * 3 times).
>
> Why is the sleep time increased after each SW reset?
> What is the failure case that you've seen which would benefit from this?
>
> >
> >  sound/soc/codecs/max98373.c | 41 +++++++++++++++++++++++++++++++++++------
> >  1 file changed, 35 insertions(+), 6 deletions(-)
> >
> > diff --git a/sound/soc/codecs/max98373.c b/sound/soc/codecs/max98373.c
> > index a09d013..55af7f02 100644
> > --- a/sound/soc/codecs/max98373.c
> > +++ b/sound/soc/codecs/max98373.c
> > @@ -724,14 +724,45 @@ static struct snd_soc_dai_driver max98373_dai[] = {
> >         }
> >  };
> >
> > +static void max98373_reset(struct max98373_priv *max98373, struct device *dev)
> > +{
> > +       int ret, reg, count, delay;
> > +
> > +       count = 0;
> > +       while (true) {
> > +               /* Software Reset */
> > +               ret = regmap_update_bits(max98373->regmap,
> > +                       MAX98373_R2000_SW_RESET,
> > +                       MAX98373_SOFT_RESET,
> > +                       MAX98373_SOFT_RESET);
> > +               if (ret)
> > +                       dev_err(dev, "Reset command failed. (ret:%d)\n", ret);
> > +
> > +               delay = 10000 + (count * 30000);
> > +               usleep_range(delay, delay + 1000);
> > +
> > +               /* Software Reset Verification */
> > +               ret = regmap_read(max98373->regmap,
> > +                       MAX98373_R21FF_REV_ID, &reg);
> > +               if (!ret) {
> > +                       dev_info(dev, "Reset completed (retry:%d)\n", count);
> > +                       break;
>
> Instead of break, can the code return here?
> "break" implies something else will happen after the while loop exits
> - there isn't.
>
> > +               }
> > +
> > +               if (++count > 3)        {
> > +                       dev_err(dev, "Reset failed. (ret:%d)\n", ret);
> > +                       break;
> > +               }
> > +               usleep_range(10000, 11000);
>
> Why is there a second delay after reading MAX98373_R21FF_REV_ID?
> Is this really necessary?
>
> If the second usleep_range() isn't needed, it would be better/clearer
> to make code loop on "while (count < 4)".   And then outside the while
> loop, use dev_err() to share what the failure was.
>
> > +       }
> > +}
> > +
> >  static int max98373_probe(struct snd_soc_component *component)
> >  {
> >         struct max98373_priv *max98373 = snd_soc_component_get_drvdata(component);
> >
> >         /* Software Reset */
> > -       regmap_write(max98373->regmap,
> > -               MAX98373_R2000_SW_RESET, MAX98373_SOFT_RESET);
> > -       usleep_range(10000, 11000);
> > +       max98373_reset(max98373, component->dev);
> >
> >         /* IV default slot configuration */
> >         regmap_write(max98373->regmap,
> > @@ -818,9 +849,7 @@ static int max98373_resume(struct device *dev)
> >  {
> >         struct max98373_priv *max98373 = dev_get_drvdata(dev);
> >
> > -       regmap_write(max98373->regmap,
> > -               MAX98373_R2000_SW_RESET, MAX98373_SOFT_RESET);
> > -       usleep_range(10000, 11000);
> > +       max98373_reset(max98373, dev);
> >         regcache_cache_only(max98373->regmap, false);
> >         regcache_sync(max98373->regmap);
> >         return 0;
> > --
> > 2.7.4
> >
>
> cheers,
> grant
