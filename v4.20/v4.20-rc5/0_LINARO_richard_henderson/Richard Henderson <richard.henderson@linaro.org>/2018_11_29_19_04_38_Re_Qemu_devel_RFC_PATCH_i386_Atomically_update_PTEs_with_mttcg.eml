Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 30 Nov 2018 08:50:12 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 965F0580213
	for <like.xu@linux.intel.com>; Thu, 29 Nov 2018 11:05:08 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga004-1.jf.intel.com with ESMTP; 29 Nov 2018 11:05:08 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AzivDBRXwC0FSSvb8B9QAAOLVXrbV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZRSCvKdThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGp2y?=
 =?us-ascii?q?b4UPAeQCM+hXoYbyqFkSohWxGAesHOHixD1Hi3Pr06A2z/ouERrd0Qw8Hd8Dqm?=
 =?us-ascii?q?jYoMn7OaoQV+2+0anGzS/Eb/NTwTrz9InIfQwhof6WR7J/bNfax0sxGAPDk1qf?=
 =?us-ascii?q?t5blPyiS1uQLrmOW6PBgVeOzhG4nsQ5xuCWgyt0siobXgIIa107L9T9iwIYyI9?=
 =?us-ascii?q?21U0p7Yd+iEJRKrSGaMJF6QsQ4Q2FnoSs3zKANt52jfCUS1pgr2x3SZ+aaf4SV?=
 =?us-ascii?q?4R/vTvidLDl4iX5/Zb6yhQ6+/Eyix+HmS8W4zVhHojBYntTOqnwBzQHf58ubRv?=
 =?us-ascii?q?Z740yvwyyA1xrJ5eFBOU00lbTUK5omwrMokpoTsF/DHjPtmEnsg6+WcFgk9vKv?=
 =?us-ascii?q?6+T9bbXqvp6cN4lqhQHiKqkihNCzDOciPgQTQmSW+v6w2KPt8ED5WrlGk/87nr?=
 =?us-ascii?q?HcsJ/AJMQboqC5AxVS0oYm8xu/Fimp0NEFnXUeMV1KZgyHgJbtO13XO//4Cuq/?=
 =?us-ascii?q?g1Kwnzh13PDKObnhApTOLnfdirvgcqt95lZYyAoyy9Bf+p1VBqsAIPL1Rk/+qt?=
 =?us-ascii?q?jYAgUlPAyzxubqE9N91oQYWWKABK+ZLbnesViS5uIgO+WMfpMauC7hK/g54P7j?=
 =?us-ascii?q?lXs5mV4efaa3x5cWZ224E+9iI0WYZ3rsn9gAHX0Lvgo4UOzlllmCXSRPaHa1Wq?=
 =?us-ascii?q?Jvrgw9E5+sWIffWpi20vvG2CagAoYQYGdABVaRV3DyeMKBUvYIbSuUZch5jj0D?=
 =?us-ascii?q?U6PmUoIkyFSiuRH3z+laKPHJ8HgdvJPnyN8n/uDWiFQ++CJ5C4GH3niQQnpotm?=
 =?us-ascii?q?UPQTAwweZ4u0Mq0UqJ06Vzn6lFE8dO7ehCSAYwOM3gyLlQBtbwUwfAeJ+pRUy8?=
 =?us-ascii?q?T9O9CjE0T94ti4sEbkB9M9avlBbO22yhGbYOl72NC9oz6K2KmzDoKsNgjnrLyq?=
 =?us-ascii?q?Qlp18hRMRJKCuhnKEs2RLUAtvzkk6ZnrymPYQR2iLA7nyEyyLapkBTUAdqXePF?=
 =?us-ascii?q?UHYTa1HNqtLR4kLERqWpT7M9PV0Smoa5NqJWZ4ix3h19T/D5NYGbOjrplg=3D?=
 =?us-ascii?q?=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0B/AAD1NwBchxHrdtBkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBVAQBAQsBgTAlgj2DeYh3iymBYC2ZNRQBARgUh3QiNwYNAQMBAQEBAQECARM?=
 =?us-ascii?q?BAQEKCwkIGw4jDII2BQIDGgEGglwBAgMBAiAEGQEBBAopAQIDAQIGAQEKDgoCA?=
 =?us-ascii?q?hgKBAICAwEwAQUBHAYBDAgBAQGDHIICAQScPjyKHXB8M4J2AQEFgkOEaAgSeYl?=
 =?us-ascii?q?vgRyBVz+BOIJriAWCV49sNJAFBwKCHQSPCwYYgVqHfodEiHiBA44sAgQCBAUCB?=
 =?us-ascii?q?Q8hgTuBd00wgy+CG4kBhWBRgQeLSIF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0B/AAD1NwBchxHrdtBkHAEBAQQBAQcEAQGBVAQBAQsBgTA?=
 =?us-ascii?q?lgj2DeYh3iymBYC2ZNRQBARgUh3QiNwYNAQMBAQEBAQECARMBAQEKCwkIGw4jD?=
 =?us-ascii?q?II2BQIDGgEGglwBAgMBAiAEGQEBBAopAQIDAQIGAQEKDgoCAhgKBAICAwEwAQU?=
 =?us-ascii?q?BHAYBDAgBAQGDHIICAQScPjyKHXB8M4J2AQEFgkOEaAgSeYlvgRyBVz+BOIJri?=
 =?us-ascii?q?AWCV49sNJAFBwKCHQSPCwYYgVqHfodEiHiBA44sAgQCBAUCBQ8hgTuBd00wgy+?=
 =?us-ascii?q?CG4kBhWBRgQeLSIF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,295,1539673200"; 
   d="scan'208";a="55430353"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 29 Nov 2018 11:05:07 -0800
Received: from localhost ([::1]:55828 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gSRcY-0005S3-Mk
	for like.xu@linux.intel.com; Thu, 29 Nov 2018 14:05:06 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:50122)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <richard.henderson@linaro.org>) id 1gSRcG-0005Rt-0D
	for qemu-devel@nongnu.org; Thu, 29 Nov 2018 14:04:48 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <richard.henderson@linaro.org>) id 1gSRcB-000347-Ou
	for qemu-devel@nongnu.org; Thu, 29 Nov 2018 14:04:47 -0500
Received: from mail-pf1-x443.google.com ([2607:f8b0:4864:20::443]:46002)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <richard.henderson@linaro.org>)
	id 1gSRcB-00033d-7k
	for qemu-devel@nongnu.org; Thu, 29 Nov 2018 14:04:43 -0500
Received: by mail-pf1-x443.google.com with SMTP id g62so1474910pfd.12
	for <qemu-devel@nongnu.org>; Thu, 29 Nov 2018 11:04:42 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=linaro.org; s=google;
	h=subject:to:cc:references:from:openpgp:message-id:date:user-agent
	:mime-version:in-reply-to:content-language:content-transfer-encoding;
	bh=rynesPZEh+pWGbneHxrOw6jB76rvgD31DQg+7jCPpNE=;
	b=gcuhkJm35MUbNIybwsPGwG71eqNnKxyJWPOv223YHoWmHcyQKkMuRdxFt/jhqj2Mye
	fHiXV0ZtQGNDSWNml2h6G2C9rdP90pJQRCytyos67PU1u2DURfpVjJGwIyYUOzIifXmo
	5WPeZ4f6zQmHK0ON99yu/WN3elILTkDF+cIRo=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:subject:to:cc:references:from:openpgp:message-id
	:date:user-agent:mime-version:in-reply-to:content-language
	:content-transfer-encoding;
	bh=rynesPZEh+pWGbneHxrOw6jB76rvgD31DQg+7jCPpNE=;
	b=O6Ke9ff3rroIwjyUCfDRZ/zMX6awZZPaCwOggw3UNwG1hfovdKVH73PaMKQ4W4L+yI
	H2PlJKNBITOFfyggpLGRF8PnaaxW1EJvfjf2Rv6+mUbP4JkHUI/Rdb183ykJFIVrHBGk
	uO0H+wWQwPQ/wW2wLRFRjNULVCCV5FHZ8Yb2zSuaQ2/EuVHKuqK93pqGiJKBI7UOT4wy
	prUVPRW4N3gYwx7pEHu3kfk5DwCeljoD2JyV0bCbzPtIAdojk87Uxjc0Pam6Y4dZoPNg
	BatPS2ihyB0JYjLeZwCPeOFvpASQILTDSQ/RW3bJq7dJXxhnc6xgYzsMds2b3HgFx2/P
	NddQ==
X-Gm-Message-State: AA+aEWaea6D06m7tYmOOhSRGqSBkhsRExTYh2OEk7KOoRLmmJb8R6+Bb
	+Lp94p2v/JehXb3krsWf7Ozje2JUDLs=
X-Google-Smtp-Source: AFSGD/X1lQuTIDoNJp6cDPZjS29N+xtKYe61jtFlPl/avdo+Rkuc7kV7XeBkHgoY5YSrbY9wwiscAw==
X-Received: by 2002:a63:f201:: with SMTP id v1mr2089949pgh.232.1543518281198; 
	Thu, 29 Nov 2018 11:04:41 -0800 (PST)
Received: from cloudburst.twiddle.net (97-113-170-180.tukw.qwest.net.
	[97.113.170.180]) by smtp.gmail.com with ESMTPSA id
	d80sm9254874pfm.146.2018.11.29.11.04.40
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Thu, 29 Nov 2018 11:04:40 -0800 (PST)
To: Benjamin Herrenschmidt <benh@kernel.crashing.org>, qemu-devel@nongnu.org
References: <f4349b9ee95cbd9d5b16e9033fdf0d7c9e99aebf.camel@kernel.crashing.org>
From: Richard Henderson <richard.henderson@linaro.org>
Openpgp: preference=signencrypt
Message-ID: <a9dd602b-9eb1-f57a-ef21-31f08fc18729@linaro.org>
Date: Thu, 29 Nov 2018 11:04:38 -0800
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.0
MIME-Version: 1.0
In-Reply-To: <f4349b9ee95cbd9d5b16e9033fdf0d7c9e99aebf.camel@kernel.crashing.org>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2607:f8b0:4864:20::443
Subject: Re: [Qemu-devel] [RFC/PATCH] i386: Atomically update PTEs with mttcg
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Paolo Bonzini <pbonzini@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On 11/28/18 3:15 PM, Benjamin Herrenschmidt wrote:
> +static inline uint64_t update_entry(CPUState *cs, target_ulong addr,
> +                                    uint64_t orig_entry, uint32_t bits)
> +{
> +    uint64_t new_entry = orig_entry | bits;
> +
> +    /* Write the updated bottom 32-bits */
> +    if (qemu_tcg_mttcg_enabled()) {
> +        uint32_t old_le = cpu_to_le32(orig_entry);
> +        uint32_t new_le = cpu_to_le32(new_entry);
> +        MemTxResult result;
> +        uint32_t old_ret;
> +
> +        old_ret = address_space_cmpxchgl_notdirty(cs->as, addr,
> +                                                  old_le, new_le,
> +                                                  MEMTXATTRS_UNSPECIFIED,
> +                                                  &result);
> +        if (result == MEMTX_OK) {
> +            if (old_ret != old_le) {
> +                new_entry = 0;
> +            }
> +            return new_entry;
> +        }
> +
> +        /* Do we need to support this case where PTEs aren't in RAM ?
> +         *
> +         * For now fallback to non-atomic case
> +         */
> +    }
> +
> +    x86_stl_phys_notdirty(cs, addr, new_entry);
> +
> +    return new_entry;
> +}

While I know the existing code just updates the low 32-bits, I'd rather update
the whole entry, and make use of the old value returned from the cmpxchg.

E.g.

static bool update_entry(CPUState *cs, target_ulong addr,
                         uint64_t *entry, uint32_t bits)
{
    uint64_t old_entry = *entry;
    uint64_t new_entry = old_entry | bits;

    if (qemu_tcg_mttcg_enabled()) {
        uint64_t cmp_le = cpu_to_le64(old_entry);
        uint64_t new_le = cpu_to_le64(new_entry);
        uint64_t old_le;
        MemTxResult result;

        old_le = address_space_cmpxchgl_notdirty(cs->as, addr,
                                                 cmp_le, new_le,
                                                 MEMTXATTRS_UNSPECIFIED,
                                                 &result);
        if (result == MEMTX_OK) {
            if (old_le == cmp_le) {
                return true;
            } else {
                *entry = le_to_cpu64(old_le);
                return false;
            }
        }
    }
    x86_stq_phys_notdirty(cs, addr, new_entry);
    return true;
}

....

    pdpe_addr = (pml4e & PG_ADDRESS_MASK) +
                (((gphys >> 30) & 0x1ff) << 3);
    pdpe = x86_ldq_phys(cs, pdpe_addr);
    do {
        if (!(pdpe & PG_PRESENT_MASK)) {
            goto do_fault;
        }
        if (pdpe & rsvd_mask) {
            goto do_fault_rsvd;
        }
        if (pdpe & PG_ACCESSED_MASK) {
            break;
        }
    } while (!update_entry(cs, pdpe_addr, &pdpe, PG_ACCESSED_MASK));
    ptep &= pdpe ^ PG_NX_MASK;

....

Although I think it would be really great if we could figure out something that
allows us to promote this whole load/cmpxchg loop into a primitive that avoids
multiple translations of the address.

No, I don't know what that primitive would look like.  :-)


r~

