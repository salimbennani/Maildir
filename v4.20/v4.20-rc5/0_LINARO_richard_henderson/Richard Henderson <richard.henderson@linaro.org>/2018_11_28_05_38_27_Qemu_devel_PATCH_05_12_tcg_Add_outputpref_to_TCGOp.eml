Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 28 Nov 2018 18:09:39 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 5B71C580322
	for <like.xu@linux.intel.com>; Tue, 27 Nov 2018 21:42:22 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 27 Nov 2018 21:42:22 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3Adcv7EhEyAXx4uhjQmJWx5J1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ7yos+wAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VDK/5KlpVRDokj?=
 =?us-ascii?q?8KOT4n/m/ZicJ+i6BUoBy8qRxnwYPaYo6YOOdwc6/BY9waXnFMUtpNWyFbHo+x?=
 =?us-ascii?q?dZcDA/YHMO1Fr4f9vVwOrR6mCAewBePg1j9IiWXs3aInzu8vEx/J3Ao9EN0Qqn?=
 =?us-ascii?q?TUt9L1NKEPWu2y1qnIzCnMb/NM1jfn9YfEaBAhru+KXb1tb8XR01IvFwTDjliL?=
 =?us-ascii?q?rYzlPjWV2f4Xs2ic9eZgUvivi2E+pgx3vzOhxd8sh5HXio4JyV3I7zh1zJs2KN?=
 =?us-ascii?q?GiVkJ2b96pHIFNuyyYL4d7RsEvT3t1tConxLAKo4O3cSoWxJg92hLSaOCLfo6V?=
 =?us-ascii?q?6Rz5TumROy13hHd9dbK/mRmy9U+gx/X4Vsm1y1ZKsjFFnsPDtnALyhzf8M+HSu?=
 =?us-ascii?q?Fy/ku52DaP0R7c6v1cLEwqiabWKIQtzqMtmpcQq0jPACH7lUXsgKOLdEgo4u2o?=
 =?us-ascii?q?5P7mYrXiqJ+cLYh0igTmP6Q3hMO/BPk4PhETUGeF5+Szyrnj8VTiT7VNk/02lL?=
 =?us-ascii?q?XWv47BJcgcoq65AgxV3Zg55xewEjeryNAYnXgBLFJYdxOLlYnpO1fSIP/mCfez?=
 =?us-ascii?q?mUijkDBux/3dOL3hBZPNLnfFkLf8Z7p97FRcyAUrwdBF+51UEq0BIO70WkLpsN?=
 =?us-ascii?q?zYDxw5PBKuz+foFdVwzYceWWOJAq+EP6Leq16I5uQzI+aSYI8ZoiryK/8g562m?=
 =?us-ascii?q?sHkihFVIfbW1xYBFLze8H+96OAOfZnzjhMpHFn0F+Q83TejvgVvFViZPZnG0RO?=
 =?us-ascii?q?Ul6zQmTY6rE4rHFb2rm6GLiSKyH5lKYTJfB1WRVHvlaYiAHu0BcT+fOdNJlDsC?=
 =?us-ascii?q?Wr68DYg72ka1qQX4xrF7e/fS4TASrpn51dJ4tNHUwAg/8CExA8mD3mWlSWZykW?=
 =?us-ascii?q?UVATgs0/NRu0t4n22C2qhxmfAQNdFV6/5TSQA8fcrGzud6Asr+HALMeNuEUk2h?=
 =?us-ascii?q?RP2iADc4VNV3xMUBNRUuU+6+hwzOinL5S4QekKaGUcQ5?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0D8AgDbKf5bhxHrdtBkHgEGBwaBZYExg?=
 =?us-ascii?q?mKMcIsqm0ISAQEYFIdcIjgSAQMBAQEBAQECARMBAQEKCwkIGw4jDII2BQIDGAm?=
 =?us-ascii?q?CXAMDAQIkGQEBBAopAQIDAQIGAQE+CggDATABBQEcGQUUgwiCAgEEmm88ih2Bb?=
 =?us-ascii?q?DOCdgEBBYJDhQYIEodVgw+BHIFXP4kQhW+QHY94BwKCHASPBgsYiVWHOSyXagY?=
 =?us-ascii?q?CCQcPIYE8gXZNMIMvghsMF4hehWBRgQeKHFWBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0D8AgDbKf5bhxHrdtBkHgEGBwaBZYExgmKMcIsqm0ISAQE?=
 =?us-ascii?q?YFIdcIjgSAQMBAQEBAQECARMBAQEKCwkIGw4jDII2BQIDGAmCXAMDAQIkGQEBB?=
 =?us-ascii?q?AopAQIDAQIGAQE+CggDATABBQEcGQUUgwiCAgEEmm88ih2BbDOCdgEBBYJDhQY?=
 =?us-ascii?q?IEodVgw+BHIFXP4kQhW+QHY94BwKCHASPBgsYiVWHOSyXagYCCQcPIYE8gXZNM?=
 =?us-ascii?q?IMvghsMF4hehWBRgQeKHFWBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,289,1539673200"; 
   d="scan'208";a="53615169"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 27 Nov 2018 21:42:21 -0800
Received: from localhost ([::1]:46042 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gRsc8-0006eT-GE
	for like.xu@linux.intel.com; Wed, 28 Nov 2018 00:42:20 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:47880)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <richard.henderson@linaro.org>) id 1gRsYi-0003tD-GC
	for qemu-devel@nongnu.org; Wed, 28 Nov 2018 00:38:53 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <richard.henderson@linaro.org>) id 1gRsYg-0004Ln-Jb
	for qemu-devel@nongnu.org; Wed, 28 Nov 2018 00:38:48 -0500
Received: from mail-pf1-x444.google.com ([2607:f8b0:4864:20::444]:34139)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <richard.henderson@linaro.org>)
	id 1gRsYe-0004Js-Hy
	for qemu-devel@nongnu.org; Wed, 28 Nov 2018 00:38:46 -0500
Received: by mail-pf1-x444.google.com with SMTP id h3so9623490pfg.1
	for <qemu-devel@nongnu.org>; Tue, 27 Nov 2018 21:38:43 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=linaro.org; s=google;
	h=from:to:cc:subject:date:message-id:in-reply-to:references;
	bh=E+Xgls1DHstwRUyEFIzImDIJL7cTIdasMbg1UXdI6nY=;
	b=S8NhrgpbgbTZLi1NSf22G8yR3HzGanLaTfaXJLjQ1BycrkyCtc3EkPhSc42oontRs8
	2sSwunqNO2FmAGAx6mnONNNIRtGu+HDlQnca07WgYm2X0aCbskFFCFzAz95OzId0KFA9
	/M7H4CZ0WWVX9c6cOt8a3s/1EPAD8kd3Uwaow=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references;
	bh=E+Xgls1DHstwRUyEFIzImDIJL7cTIdasMbg1UXdI6nY=;
	b=pwYo9+PLZYvCm5f43rHY77lx81O34G8sUKsSdI0dMFvVq3ropj6B0tA/8NKI/5bPiB
	O9uuz+XQ5uXuhzBOSibqbIV/tbCHkZDt42qNly/j9YDTIXM+/d3bZUD4rMtSsZQ63iSX
	bJV8hQi6DDcNQMYnlL2QOxUQxSyhJrsvEggs1LRWRc4DrzuaRv7z7ImaB5U+9XIC4mOQ
	cHmXtXDAHjcWQL0my+aQmttQ4j4rlcJZxXZXo/FQkG1rVFcMi04bnFR7bpLApWjSZ5Ad
	NQWDyMrV/vlb3AGeJyUONBhnB7ivsUxRvI9GI6lGdyURyan/5KtLwBnk6UaO9+RqZAi1
	F6fA==
X-Gm-Message-State: AA+aEWYyFhy/FaRwIgp9YyqzllUJV3NBNY/AZKg3MOWoCCgn9k4CMY/2
	GNbsUr4C8rKP/ZEK2HziRFp4U7RfZ/0=
X-Google-Smtp-Source: AFSGD/XVAXkApWwCwtz4lvIBRFAfGaNZ80rgxt3+l6sGT5wNMl/xs4EAjdkSvtcB9K3rJZOJTdaJEw==
X-Received: by 2002:a62:5fc4:: with SMTP id t187mr5083653pfb.66.1543383522513; 
	Tue, 27 Nov 2018 21:38:42 -0800 (PST)
Received: from cloudburst.twiddle.net (97-113-170-180.tukw.qwest.net.
	[97.113.170.180]) by smtp.gmail.com with ESMTPSA id
	19sm8569336pfs.108.2018.11.27.21.38.41
	(version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
	Tue, 27 Nov 2018 21:38:41 -0800 (PST)
From: Richard Henderson <richard.henderson@linaro.org>
To: qemu-devel@nongnu.org
Date: Tue, 27 Nov 2018 21:38:27 -0800
Message-Id: <20181128053834.10861-6-richard.henderson@linaro.org>
X-Mailer: git-send-email 2.17.2
In-Reply-To: <20181128053834.10861-1-richard.henderson@linaro.org>
References: <20181128053834.10861-1-richard.henderson@linaro.org>
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2607:f8b0:4864:20::444
Subject: [Qemu-devel] [PATCH 05/12] tcg: Add output_pref to TCGOp
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: cota@braap.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Allocate storage for, but do not yet fill in, per-opcode
preferences for the output operands.  Pass it in to the
register allocation routines for output operands.

Signed-off-by: Richard Henderson <richard.henderson@linaro.org>
---
 tcg/tcg.h |  3 +++
 tcg/tcg.c | 18 +++++++++++-------
 2 files changed, 14 insertions(+), 7 deletions(-)

diff --git a/tcg/tcg.h b/tcg/tcg.h
index c6caeeb42b..b2e274b7af 100644
--- a/tcg/tcg.h
+++ b/tcg/tcg.h
@@ -621,6 +621,9 @@ typedef struct TCGOp {
 
     /* Arguments for the opcode.  */
     TCGArg args[MAX_OPC_PARAM];
+
+    /* Register preferences for the output(s).  */
+    TCGRegSet output_pref[2];
 } TCGOp;
 
 #define TCGOP_CALLI(X)    (X)->param1
diff --git a/tcg/tcg.c b/tcg/tcg.c
index c83ca238aa..f86415ce29 100644
--- a/tcg/tcg.c
+++ b/tcg/tcg.c
@@ -2613,6 +2613,8 @@ static void liveness_pass_1(TCGContext *s)
             break;
         }
         op->life = arg_life;
+        op->output_pref[0] = 0;
+        op->output_pref[1] = 0;
     }
 }
 
@@ -3127,17 +3129,18 @@ static void tcg_reg_alloc_movi(TCGContext *s, const TCGOp *op)
     TCGTemp *ots = arg_temp(op->args[0]);
     tcg_target_ulong val = op->args[1];
 
-    tcg_reg_alloc_do_movi(s, ots, val, op->life, 0);
+    tcg_reg_alloc_do_movi(s, ots, val, op->life, op->output_pref[0]);
 }
 
 static void tcg_reg_alloc_mov(TCGContext *s, const TCGOp *op)
 {
     const TCGLifeData arg_life = op->life;
-    TCGRegSet allocated_regs;
+    TCGRegSet allocated_regs, preferred_regs;
     TCGTemp *ts, *ots;
     TCGType otype, itype;
 
     allocated_regs = s->reserved_regs;
+    preferred_regs = op->output_pref[0];
     ots = arg_temp(op->args[0]);
     ts = arg_temp(op->args[1]);
 
@@ -3151,7 +3154,7 @@ static void tcg_reg_alloc_mov(TCGContext *s, const TCGOp *op)
         if (IS_DEAD_ARG(1)) {
             temp_dead(s, ts);
         }
-        tcg_reg_alloc_do_movi(s, ots, val, arg_life, 0);
+        tcg_reg_alloc_do_movi(s, ots, val, arg_life, preferred_regs);
         return;
     }
 
@@ -3160,7 +3163,8 @@ static void tcg_reg_alloc_mov(TCGContext *s, const TCGOp *op)
        the SOURCE value into its own register first, that way we
        don't have to reload SOURCE the next time it is used. */
     if (ts->val_type == TEMP_VAL_MEM) {
-        temp_load(s, ts, tcg_target_available_regs[itype], allocated_regs, 0);
+        temp_load(s, ts, tcg_target_available_regs[itype],
+                  allocated_regs, preferred_regs);
     }
 
     tcg_debug_assert(ts->val_type == TEMP_VAL_REG);
@@ -3190,7 +3194,7 @@ static void tcg_reg_alloc_mov(TCGContext *s, const TCGOp *op)
                    input one. */
                 tcg_regset_set_reg(allocated_regs, ts->reg);
                 ots->reg = tcg_reg_alloc(s, tcg_target_available_regs[otype],
-                                         allocated_regs, 0,
+                                         allocated_regs, preferred_regs,
                                          ots->indirect_base);
             }
             tcg_out_mov(s, otype, ots->reg, ts->reg);
@@ -3324,7 +3328,7 @@ static void tcg_reg_alloc_op(TCGContext *s, const TCGOp *op)
             } else if (arg_ct->ct & TCG_CT_NEWREG) {
                 reg = tcg_reg_alloc(s, arg_ct->u.regs,
                                     i_allocated_regs | o_allocated_regs,
-                                    0, ts->indirect_base);
+                                    op->output_pref[k], ts->indirect_base);
             } else {
                 /* if fixed register, we try to use it */
                 reg = ts->reg;
@@ -3333,7 +3337,7 @@ static void tcg_reg_alloc_op(TCGContext *s, const TCGOp *op)
                     goto oarg_end;
                 }
                 reg = tcg_reg_alloc(s, arg_ct->u.regs, o_allocated_regs,
-                                    0, ts->indirect_base);
+                                    op->output_pref[k], ts->indirect_base);
             }
             tcg_regset_set_reg(o_allocated_regs, reg);
             /* if a fixed register is used, then a move will be done afterwards */
-- 
2.17.2


