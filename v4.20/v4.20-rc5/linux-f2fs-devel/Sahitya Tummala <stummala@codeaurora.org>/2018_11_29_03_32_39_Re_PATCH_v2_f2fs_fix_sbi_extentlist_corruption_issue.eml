Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 29 Nov 2018 12:10:55 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 06D895803ED;
	Wed, 28 Nov 2018 19:32:56 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga001-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 28 Nov 2018 19:32:55 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AW3HafhXSvN+IRpmgalSjgSmZwvvV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhCBtKdThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGo2y?=
 =?us-ascii?q?YYsRAeQcPuhYoYbyqEcTohS8CwasH/vvxz1Ti3/qwaE3yfgtHR3c0QA+Gd8FrX?=
 =?us-ascii?q?TarM/yNKcXSe270bPHzTXCb/NK2Tby8pXDfA48ofGJWLJ/a87RxlMyHA7ClVWQ?=
 =?us-ascii?q?tZHlPzaQ1usXt2iU9fFtWv6oi2E6tQ5+uCWvxt0rionTnI0Z0FfE9T92wIssI9?=
 =?us-ascii?q?CzVU11Yca8HZdOqy2XM5F6Tt4sTm12oio2174LtYKhcCULypkr3wPTZ+CJfoSS?=
 =?us-ascii?q?/B7vSuKcLS1liH9hYr6zmhK//E69wePmTMa0ykxFri9dn9nMqH8N0xvT59CZSv?=
 =?us-ascii?q?ty4EihwyyD1wPN5eFeJ0A7i67bJ4Qmwr4qmZofqUXDHinol0XqlKKaaFko9+yy?=
 =?us-ascii?q?5+j6bLjquIWQO5J3hw3iKKgjm86yDfw9MgcUXmib/eq81Kfk/U38WLhKivw2kq?=
 =?us-ascii?q?/EsJHVPMgbpbC2AxVT0ok97xazFjCm0doenXYZNlJIYwyHj4f3NFHUOvz4Dumw?=
 =?us-ascii?q?g06qkDh1w/DKJLrhAo/CLnTbirfuYa5961JAyAo01d1f45NUCrIfL/7pVU7xqc?=
 =?us-ascii?q?fVDhs4Mwyy3ubmB89x1oIYWWKTHKCZNLnevkOP5uIqO+OMfpMauC7hK/g54P7j?=
 =?us-ascii?q?lX85lkUcfam1x5QXb2q0HvR7I0qDZ3rsjcwMEWMLvgo4Uezrh0eOUT9VZ3auQa?=
 =?us-ascii?q?084is3B56hDYfGXoqtmqCO3D+nHp1KYWBLElKMEXD2eImeWPcMbySSIslmkjEf?=
 =?us-ascii?q?UbihSokh1QyhtQPgyrpnKPbU9TMctZ75yNd14OjTnwko9TNoF8Sdz32NT2Zsk2?=
 =?us-ascii?q?wSXD823Kd/oU9nxleZy6d4gedVFdhS5/NPTwc7OoTQz+18C9DuRA3Bes2FR0qh?=
 =?us-ascii?q?QtWjGTsxVM4+w8cSY0ZhHNWvlhPD0DCsA7MPk7yLBYY78qTT33XqI8Z9ynDG1L?=
 =?us-ascii?q?QujlU8Q8tPM3GmibB79wTJG4HJlECZnb6wdasAxC7N6HuDzW2WsU5FSgFwT7vK?=
 =?us-ascii?q?UWofZkTMq9T5/V3NT7mpBbQjMQtBzMqCJ7BOat3oi1VGWfjiNM7fY2K3h2e/Gx?=
 =?us-ascii?q?KIyqmQY4rtfmUXxD/dB1QckwAP4XaGMhAzCTq7rGLAEjNiD1LvbFnq8elltny7?=
 =?us-ascii?q?SFQ5zwWLb01nyrq09QQZhf2aS/MPwL0EvD0tpClzHFa4x9jWEcaPpxJ9fKVAZt?=
 =?us-ascii?q?Mw+EtH1WPctwx6IpygL6BjikQCcwhtuEPuzRF3CoRGkcglt34qyAtyKaSF0FJO?=
 =?us-ascii?q?bT+Y3JbwOqHJJWn25hygd6nW2lTG2taM5qgP8Og4q0nkvAyxDEUi92to0tZL3H?=
 =?us-ascii?q?qc/JnFFxcSXo/rXUYx9Bh6oK/abzI554PV031sLKa1viXD29IvGOsq1BKgc81D?=
 =?us-ascii?q?P6ODEQ/4C9caCNS2KOw2h1ipaQoJPeBP9KIuI8yqbfqH2K6xM+ZmkzKrlmBH4I?=
 =?us-ascii?q?F70kKR+CtwUO/I35AZw/6G2guLTSvzjFCkssrvg4BLeSkSHnajySjjHINRfKxy?=
 =?us-ascii?q?cpoRBme0PsK3wc9yh5jzVH5C9V6vHk8J19WteRWPcVP9xwpQ1UIMrHyjmCu4yS?=
 =?us-ascii?q?F0kj4zoqqe2izO3/rtdB4dNmFXQ2liiE/mIZKogNACQEiocw8pmQOl5Eb73aRa?=
 =?us-ascii?q?pL5zL3LOQUdOZCX2K2BiUq2ttruNecJP6ZUosTlJX+S4e1yVVrn9ox4C2SP5A2?=
 =?us-ascii?q?Re3Cw7dy2tupjhnRx1knidLHVwrHreY81w3g3Q5N/fRf5Q2DoJWi94hCLTBli9?=
 =?us-ascii?q?Odmp4NqVm43CsuC4S2KuSJlTfTP3woOHsSux/XdqDgGnn/Cvht3nFhA30C/h2N?=
 =?us-ascii?q?ltTynIrhf8Yo/w2qS+MOJneFRoBVDm58p7HIF+jpU/hJUK1XcGgZWV+GINkX3v?=
 =?us-ascii?q?PtVDxaL+cH0NSCYIw9HP4Qjpwk1jLm+TyIL/WXWQ2c9hZ9i8YmML1SMx9cFKCK?=
 =?us-ascii?q?GI7LNamSt5uEa3rQXUYfJlhDcS1eMu6GIGg+EOoActyySdArMIEkVCMy3jiQ+I?=
 =?us-ascii?q?78ygo6VNf2mgb6Kw1EVlkNClDbGCpBxcWXnjdpcjGy9w8ttwMFbW3HLv7YHkfc?=
 =?us-ascii?q?HabcgPuR2MjxfAk+9VJYotlvoNgCprI2P8smcjy+4mlhxuxpC6sZODK2Vs+qK5?=
 =?us-ascii?q?HxFZOif0Z8MV5jHik6JektyK0ICoG5VrAi8LU4fwTfK0DDISsuzqOB2UHz07rn?=
 =?us-ascii?q?ebBKDTHQuC6Ep9q3LPEparN2yYJXUDzNViQgWdK1JbgAwOQDo6mZs5HBiwxMP9?=
 =?us-ascii?q?aEd5+iwR5lngpxtO0O1oMgfwUnzFqAe0cDs0S4WfLBlL7gFE/UjVKteT7uZyHy?=
 =?us-ascii?q?Fe452goxaBKm2dZwRUE24JXlaICEzkPrmr/dPA6fSXBvKiL/vSZrWDsexfV/CV?=
 =?us-ascii?q?xZK2z4tp5TCMOt+UPnllCf071VFOXXR4G8TfhjUORDYblyPLb86Huhi8/jd7od?=
 =?us-ascii?q?y48PTuQAjv/5eAC6NOMdVz/BC7maeDOPCRhCZ6KjZY14kAxXzSyLgY014dlTtu?=
 =?us-ascii?q?dyS2EbkbsS7NTaTQmrJYDhIBaiNzMtdI4Lw43gVXJcHbjdb13KZijvEpE1dFSU?=
 =?us-ascii?q?DhmsaxaMMQPmGyL0nHC1iLNbicIT3Lwtr6Yae9Sb1WkeVVuAe8uTedE0//IDuD?=
 =?us-ascii?q?kyPlWAyoMeFJlCubJgBRuJmhchZxDmjuVM7mahy+MNNtkTI626E7hnPUOm4aKj?=
 =?us-ascii?q?V8d0JNrruN7SJXmPl/GmpB7mZ7IumAgSqW8+7YKpMOu/txHit0j/5a4Gg9y7ZN?=
 =?us-ascii?q?7CBLXvp1mC7Trt5ou16nk+mPxSBhUBpBsTtLgIOLvUN/OaTW7JVAWHDE/A4T4m?=
 =?us-ascii?q?WUERgFu9xlCti885xXn/PPnaW7GSoKp8PJ9ssVAJD8KN+OL3cgdxHuHWiHIhEC?=
 =?us-ascii?q?SGuQPGHem11U2M2P83icqpFy/oPwhZ8LQ7tSfFcyGv4TF15iBtVEJ414CGB32Y?=
 =?us-ascii?q?WHhdIFsCLt5CLaQ99X69WeDqqf?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AHAAApXf9bh0O0hNFkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBVAIBAQEBCwGCAIFrJ4xwiyiCDRSZIRQYEwGHbiI3Bg0BAwEBAQE?=
 =?us-ascii?q?BAQIBEwEBAQgNCQgpIwyCNiQBgmEBAQEBAgEBAiQTBgEBNwEEAQkBAQoYCSUDD?=
 =?us-ascii?q?AUYMQsIBYMcgXoHAQWlO4FsM4J2AQEFhycIinqBHBeBQD+BEYMShFoMg1CCJpA?=
 =?us-ascii?q?cjztGCZEmI4lYhz0smByBXIF3MxoIKAg7gmyCGwwXiF6FRzgygQQBAQGKLwElg?=
 =?us-ascii?q?icBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AHAAApXf9bh0O0hNFkGgEBAQEBAgEBAQEHAgEBAQGBVAI?=
 =?us-ascii?q?BAQEBCwGCAIFrJ4xwiyiCDRSZIRQYEwGHbiI3Bg0BAwEBAQEBAQIBEwEBAQgNC?=
 =?us-ascii?q?QgpIwyCNiQBgmEBAQEBAgEBAiQTBgEBNwEEAQkBAQoYCSUDDAUYMQsIBYMcgXo?=
 =?us-ascii?q?HAQWlO4FsM4J2AQEFhycIinqBHBeBQD+BEYMShFoMg1CCJpAcjztGCZEmI4lYh?=
 =?us-ascii?q?z0smByBXIF3MxoIKAg7gmyCGwwXiF6FRzgygQQBAQGKLwElgicBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,293,1539673200"; 
   d="scan'208";a="53090196"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 28 Nov 2018 19:32:53 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727534AbeK2Ogj (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 29 Nov 2018 09:36:39 -0500
Received: from smtp.codeaurora.org ([198.145.29.96]:47554 "EHLO
        smtp.codeaurora.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727098AbeK2Ogj (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 29 Nov 2018 09:36:39 -0500
Received: by smtp.codeaurora.org (Postfix, from userid 1000)
        id 51BFB60BFA; Thu, 29 Nov 2018 03:32:45 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
        s=default; t=1543462365;
        bh=mumIbfyEaZKWgOWHsQgc704vctLvrQ+mELOL6TQF0uo=;
        h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
        b=AFeLx8ESLODpit6LIakLKRlOh3XXNKSxzO3+X1ok31HQvZpxhDdUiHF7jTE7SFrDY
         Zh6cli9GTeGxoP/y9kNRYgqA6+hO+dkJW+Az0RO+ZdtI5zkGClwchbQZbOpGytlIdY
         fboyWVekRK9xqTv+JoSnunC8OYCT/a1J0Y3LO2Gg=
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
        pdx-caf-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-2.7 required=2.0 tests=ALL_TRUSTED,BAYES_00,
        DKIM_INVALID,DKIM_SIGNED autolearn=no autolearn_force=no version=3.4.0
Received: from codeaurora.org (blr-c-bdr-fw-01_globalnat_allzones-outside.qualcomm.com [103.229.19.19])
        (using TLSv1.2 with cipher DHE-RSA-AES128-SHA (128/128 bits))
        (No client certificate requested)
        (Authenticated sender: stummala@smtp.codeaurora.org)
        by smtp.codeaurora.org (Postfix) with ESMTPSA id 0B42460B0D;
        Thu, 29 Nov 2018 03:32:42 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
        s=default; t=1543462364;
        bh=mumIbfyEaZKWgOWHsQgc704vctLvrQ+mELOL6TQF0uo=;
        h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
        b=DiMntwCUWgTGgrNsNKDOP4EjtnzoI+dJK9+nrBzEcnBQ7AL065XOur3uV2dBHTOIX
         +ndGe+Rh6Fp6Lp+KWcZE2sbl3SllXy7hZan0T/SnN843fphMPA/1uP8NH4+c2PPmpi
         ZegMO/2lpLN8+O14j/D1mMfgHGchE89ykzCG8Pz0=
DMARC-Filter: OpenDMARC Filter v1.3.2 smtp.codeaurora.org 0B42460B0D
Authentication-Results: pdx-caf-mail.web.codeaurora.org; dmarc=none (p=none dis=none) header.from=codeaurora.org
Authentication-Results: pdx-caf-mail.web.codeaurora.org; spf=none smtp.mailfrom=stummala@codeaurora.org
Date: Thu, 29 Nov 2018 09:02:39 +0530
From: Sahitya Tummala <stummala@codeaurora.org>
To: Chao Yu <yuchao0@huawei.com>
Cc: Jaegeuk Kim <jaegeuk@kernel.org>,
        linux-f2fs-devel@lists.sourceforge.net,
        linux-kernel@vger.kernel.org
Subject: Re: [PATCH v2] f2fs: fix sbi->extent_list corruption issue
Message-ID: <20181129033239.GE9838@codeaurora.org>
References: <1543207640-31033-1-git-send-email-stummala@codeaurora.org>
 <20181127003050.GG55960@jaegeuk-macbookpro.roam.corp.google.com>
 <fc8c38f6-a039-7b63-d25c-966b0d4396d8@huawei.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <fc8c38f6-a039-7b63-d25c-966b0d4396d8@huawei.com>
User-Agent: Mutt/1.5.21 (2010-09-15)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org


On Tue, Nov 27, 2018 at 09:42:39AM +0800, Chao Yu wrote:
> On 2018/11/27 8:30, Jaegeuk Kim wrote:
> > On 11/26, Sahitya Tummala wrote:
> >> When there is a failure in f2fs_fill_super() after/during
> >> the recovery of fsync'd nodes, it frees the current sbi and
> >> retries again. This time the mount is successful, but the files
> >> that got recovered before retry, still holds the extent tree,
> >> whose extent nodes list is corrupted since sbi and sbi->extent_list
> >> is freed up. The list_del corruption issue is observed when the
> >> file system is getting unmounted and when those recoverd files extent
> >> node is being freed up in the below context.
> >>
> >> list_del corruption. prev->next should be fffffff1e1ef5480, but was (null)
> >> <...>
> >> kernel BUG at kernel/msm-4.14/lib/list_debug.c:53!
> >> task: fffffff1f46f2280 task.stack: ffffff8008068000
> >> lr : __list_del_entry_valid+0x94/0xb4
> >> pc : __list_del_entry_valid+0x94/0xb4
> >> <...>
> >> Call trace:
> >> __list_del_entry_valid+0x94/0xb4
> >> __release_extent_node+0xb0/0x114
> >> __free_extent_tree+0x58/0x7c
> >> f2fs_shrink_extent_tree+0xdc/0x3b0
> >> f2fs_leave_shrinker+0x28/0x7c
> >> f2fs_put_super+0xfc/0x1e0
> >> generic_shutdown_super+0x70/0xf4
> >> kill_block_super+0x2c/0x5c
> >> kill_f2fs_super+0x44/0x50
> >> deactivate_locked_super+0x60/0x8c
> >> deactivate_super+0x68/0x74
> >> cleanup_mnt+0x40/0x78
> >> __cleanup_mnt+0x1c/0x28
> >> task_work_run+0x48/0xd0
> >> do_notify_resume+0x678/0xe98
> >> work_pending+0x8/0x14
> >>
> >> Fix this by cleaning up inodes, extent tree and nodes of those
> >> recovered files before freeing up sbi and before next retry.
> >>
> >> Signed-off-by: Sahitya Tummala <stummala@codeaurora.org>
> >> ---
> >> v2:
> >> -call evict_inodes() and f2fs_shrink_extent_tree() to cleanup inodes
> >>
> >>  fs/f2fs/f2fs.h     |  1 +
> >>  fs/f2fs/shrinker.c |  2 +-
> >>  fs/f2fs/super.c    | 13 ++++++++++++-
> >>  3 files changed, 14 insertions(+), 2 deletions(-)
> >>
> >> diff --git a/fs/f2fs/f2fs.h b/fs/f2fs/f2fs.h
> >> index 1e03197..aaee63b 100644
> >> --- a/fs/f2fs/f2fs.h
> >> +++ b/fs/f2fs/f2fs.h
> >> @@ -3407,6 +3407,7 @@ struct rb_entry *f2fs_lookup_rb_tree_ret(struct rb_root_cached *root,
> >>  bool f2fs_check_rb_tree_consistence(struct f2fs_sb_info *sbi,
> >>  						struct rb_root_cached *root);
> >>  unsigned int f2fs_shrink_extent_tree(struct f2fs_sb_info *sbi, int nr_shrink);
> >> +unsigned long __count_extent_cache(struct f2fs_sb_info *sbi);
> >>  bool f2fs_init_extent_tree(struct inode *inode, struct f2fs_extent *i_ext);
> >>  void f2fs_drop_extent_tree(struct inode *inode);
> >>  unsigned int f2fs_destroy_extent_node(struct inode *inode);
> >> diff --git a/fs/f2fs/shrinker.c b/fs/f2fs/shrinker.c
> >> index 9e13db9..7e3c13b 100644
> >> --- a/fs/f2fs/shrinker.c
> >> +++ b/fs/f2fs/shrinker.c
> >> @@ -30,7 +30,7 @@ static unsigned long __count_free_nids(struct f2fs_sb_info *sbi)
> >>  	return count > 0 ? count : 0;
> >>  }
> >>  
> >> -static unsigned long __count_extent_cache(struct f2fs_sb_info *sbi)
> >> +unsigned long __count_extent_cache(struct f2fs_sb_info *sbi)
> >>  {
> >>  	return atomic_read(&sbi->total_zombie_tree) +
> >>  				atomic_read(&sbi->total_ext_node);
> >> diff --git a/fs/f2fs/super.c b/fs/f2fs/super.c
> >> index af58b2c..769e7b1 100644
> >> --- a/fs/f2fs/super.c
> >> +++ b/fs/f2fs/super.c
> >> @@ -3016,6 +3016,16 @@ static void f2fs_tuning_parameters(struct f2fs_sb_info *sbi)
> >>  	sbi->readdir_ra = 1;
> >>  }
> >>  
> >> +static void f2fs_cleanup_inodes(struct f2fs_sb_info *sbi)
> >> +{
> >> +	struct super_block *sb = sbi->sb;
> >> +
> >> +	sync_filesystem(sb);
> > 
> > This writes another checkpoint, which would not be what this retrial intended.
> 
> Actually, checkpoint will not be triggered due to SBI_POR_DOING flag check
> as below:
> 
> int f2fs_sync_fs(struct super_block *sb, int sync)
> {
> ...
> 	if (unlikely(is_sbi_flag_set(sbi, SBI_POR_DOING)))
> 		return -EAGAIN;
> ...
> }
> 
> And also all dirty data/node won't be persisted due to SBI_POR_DOING flag,
> IIUC.
> 

Thanks Chao for the clarification.

Hi Jaegeuk,

Do you still have any further concerns or comments on this patch?

Thanks,
Sahitya.

> Thanks,
> 
> > How about adding a condition in f2fs_may_extent_tree() when adding extents?
> > Likewise, if (shrinker is not registered) return false;
> > 
> > 
> >> +	shrink_dcache_sb(sb);
> >> +	evict_inodes(sb);
> >> +	f2fs_shrink_extent_tree(sbi, __count_extent_cache(sbi));
> >> +}
> >> +
> >>  static int f2fs_fill_super(struct super_block *sb, void *data, int silent)
> >>  {
> >>  	struct f2fs_sb_info *sbi;
> >> @@ -3402,6 +3412,8 @@ static int f2fs_fill_super(struct super_block *sb, void *data, int silent)
> >>  	 * falls into an infinite loop in f2fs_sync_meta_pages().
> >>  	 */
> >>  	truncate_inode_pages_final(META_MAPPING(sbi));
> >> +	/* cleanup recovery and quota inodes */
> >> +	f2fs_cleanup_inodes(sbi);
> >>  	f2fs_unregister_sysfs(sbi);
> >>  free_root_inode:
> >>  	dput(sb->s_root);
> >> @@ -3445,7 +3457,6 @@ static int f2fs_fill_super(struct super_block *sb, void *data, int silent)
> >>  	/* give only one another chance */
> >>  	if (retry) {
> >>  		retry = false;
> >> -		shrink_dcache_sb(sb);
> >>  		goto try_onemore;
> >>  	}
> >>  	return err;
> >> -- 
> >> Qualcomm India Private Limited, on behalf of Qualcomm Innovation Center, Inc.
> >> Qualcomm Innovation Center, Inc. is a member of Code Aurora Forum, a Linux Foundation Collaborative Project.
> > 
> > .
> > 
> 

-- 
--
Sent by a consultant of the Qualcomm Innovation Center, Inc.
The Qualcomm Innovation Center, Inc. is a member of the Code Aurora Forum.
