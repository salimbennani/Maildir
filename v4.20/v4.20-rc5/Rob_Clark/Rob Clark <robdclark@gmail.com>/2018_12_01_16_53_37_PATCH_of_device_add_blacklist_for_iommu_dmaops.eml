Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:26:08 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from mta-temp.ostc.intel.com (mta-temp.ostc.intel.com [10.54.63.100])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id BFCF6580C68;
	Sat,  1 Dec 2018 18:20:45 -0800 (PST)
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by mta-temp.ostc.intel.com (Postfix) with ESMTPS id D651A6261A;
	Sat,  1 Dec 2018 08:55:03 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 01 Dec 2018 08:54:08 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AGbUttBeABpOIONa+e84HQkp5lGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc6/ZxGN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRBDI2i?=
 =?us-ascii?q?coUBAekPM+FXoIfyvFsOtRmzCBKwCO7s0DJEmmX70bEm3+knDArI3BYgH9ULsH?=
 =?us-ascii?q?nMsNv1M7wdWv2rwanM1zrDdfBW0ir65YjSdRAuuuyDUq50ccXL00kvFBjIjlqV?=
 =?us-ascii?q?qYP/PjOV0v4BvHSc7+plTO+ijXMspQ92ojiq3Mgsi4/Ji5obylDe6yp23ps6Ks?=
 =?us-ascii?q?OjSE54fd6kF4NQuzudN4tsTcMvRXxjtiUiyrAep5K3YCwHxI46yxPRdfCLaZWE?=
 =?us-ascii?q?7xH/WOqLIDp1hmppdKy+ihqu7EStz/DwW8q73VtPoSdIkNrBumwI2hHR6cWKS+?=
 =?us-ascii?q?Zx80Kg1DqR1g3e6eRJLEIumqbHMJEsx749moYIvkvdGyL5hFv5g7SKeUgi5+Om?=
 =?us-ascii?q?8f7oYq/8qZ+ZL4J0ih/xMqApmsGnH+Q4PRYBX3KB9eS/yrLj50v5T6tOjvEsla?=
 =?us-ascii?q?nZqp/aKdwapq6/HQBVzp4u5wijAzqiytgUgHcKIExfdB6ajIXlJ0vCLfH6APun?=
 =?us-ascii?q?hlSjijZrx/TIPr37BZXNK2DOkLPgfbZ79k5dxxM/zdNB6JJODLEOPvbzVlb2tN?=
 =?us-ascii?q?3WCB82LRa0zv35CNVyyIweQ3iDAqyHP6PIt1+H+OYvL/OLZI8PtzbxM+Il6OL2?=
 =?us-ascii?q?jX8lhV8derGk3Z8WaHC7APtqOUqYYWf3j9cFEGcKuBc+TePwhF2DVz5Te2i9X6?=
 =?us-ascii?q?Ym6j4nD4KmCJ/JRpqxj7yZwCe7AppWa3hGCl+WEHfoa5+LW/AWZCKSP89uiDoE?=
 =?us-ascii?q?Vbe6Ro8l1BGushL6yrV9IurV/C0YqYzs1Nxv6+LPkhEy8CR+D96B3GGVU2F0gm?=
 =?us-ascii?q?QISic03KB4v0Nx0FSD0a9+g/xeEtxe/PdJUgY8NZ7BwO12EdHyWgTdftiXTFaq?=
 =?us-ascii?q?WMmpATY0Ttgp2d8Bf159G8m+jhDExyelGaQVl7yMBJw36K7cxWL+J8RmxnbC1a?=
 =?us-ascii?q?khiUQmQ8RVOW2ngK5/6xbcB4rTn0qFkKaqcLwW3DTR+2eb0WqOoEZYXRZzUarf?=
 =?us-ascii?q?W3ATfE/WrdXj6UPEQL+jErAnMgpHyc6fJapGcNzpjVNaRPj9PNTSeX6+m2C1BR?=
 =?us-ascii?q?yQ3LODcJLqe3kB3CXaEEULjhoc/WiYOgQkBieuuWTeDCdwGlLpZE/s9ep+qHa/?=
 =?us-ascii?q?TkIvywGKbkth16e6+xIPhPycTe8T0awAuCs7tzp0G1O91crMC9WcvwphYLlcYd?=
 =?us-ascii?q?Ql7Vhaz23ZqRJyMoagL694gF4eaBp4v0X12hVzC4VAl9UqrXwwwApzL6KYzE1O?=
 =?us-ascii?q?dzeC0Z/sPb3XL3H4/AqzZK7OxlHezNGW978T6PQ5rlXjux2pFkoi8nl9z9lZyX?=
 =?us-ascii?q?yc5o/ODAoTV5LxXV069xx7p7Hcfyk86JnY1XxqMamorDDC38glC/ciyhalZ91f?=
 =?us-ascii?q?Kr+LFBfuE80GAMijMPYlm1y3YRMLIu9T9LQ4MNi7d/SbwqGrOuVgnDW4jWlc5I?=
 =?us-ascii?q?B900SM9zdzS+LS3pYFxe2Y0RWDVzvmkFihtcX3k5heZT4OBmq/1TTkBIlJa6xy?=
 =?us-ascii?q?YIYHE3uhL9e2x9V+nZHtXXFY+UWnB1MH3s+pZBWTY0b83Q1WyUQYv3inlTGkwD?=
 =?us-ascii?q?xzljEjtrCf0zDWw+T+aBoHPXZGRHNjjVjwO4e0lc0VXE+yYwgvihSl/0f6y7FH?=
 =?us-ascii?q?q6tlK2ncXFlHfzLxL2FkSaawsruCY8hS6JInqylXUeK8YUyERb75uRcVzyTjH2?=
 =?us-ascii?q?5GzjAhaz6qoon5nwB9iG+FLHdzrWDVeMFqyRfE+dzcQ+Vc3j4HRCl+lDnWCUKw?=
 =?us-ascii?q?P9iv/dWIiZjDtvqyWH6mVp1WaSPr15+PtDOn5W12Bh2yh/Kzlcf9EQg50i/70M?=
 =?us-ascii?q?NmVT7Soxb/YYnr1qK6PvxhfkRzAF/86sx6Gpxxk4cqhZEQ32QaiYuR/XYdjWjz?=
 =?us-ascii?q?NtBb07rkbHURXT4L38LV4A/91UxjNH2JwJj1VnecwstnfNS6ZmIW2iQg78FFEq?=
 =?us-ascii?q?uU7bpEnTdrrVq8tw7eff99njIFw/s09HEam/0JuBYqziiFAbAdB0hYMTbslxSV?=
 =?us-ascii?q?9d++qqpXaX2rcbix0kp+gN+gAKuDogFaRHb2ZJMiETVs4cV4NVLGyGfz5Z38eN?=
 =?us-ascii?q?nMcdITsQWZkxLBj+hWMp09jPQLijR8OWLho3Il0fU0ggJ03ZG1p4WHL2Rt/KSk?=
 =?us-ascii?q?Ah9XLDH1ZsUT+i3zgqZahMqZw4evHpB5EDURQJToVe6oEC4Vtfn/KwaOFzg8pm?=
 =?us-ascii?q?2aGLXFGw+f9Vxmr2nOE52wM3GXJX8ZzchtRRWHJUxfhhwUUys+npIjCg+qw8nh?=
 =?us-ascii?q?el9j5j8N/l74tgdMyuVwOhbkSGjfowOoaiouRJibMRpb9QVC50bTMcyD4eN/BS?=
 =?us-ascii?q?BY/pu9rAOTLmyXfRhHDWYMWkacHVDsIqGu5cXc8+ifHue+LeHBYbCQpuxFTfuI?=
 =?us-ascii?q?2Yij0oh7/zaPK8WPOGNtD+Yg10pHXHB5HdnZmjoVRywWkSLNc9CUpBOm9iJrqc?=
 =?us-ascii?q?C/9ezhWBjz6ouXF7tSLdJv9gi2gKeEKu6QnTt5Jixe1p8W3n/Iz74f3FEJhiFq?=
 =?us-ascii?q?djmtF6kAtCHXQKLRnK9XEwAUaydpOMRU6KI82xFHOdTHhdPtyr54kvk1Bk9FVV?=
 =?us-ascii?q?P/m8GpZs8KI2CnOFPEHkaLM7uGKiPRw8HqeqOxUrlQjORStx2ttjeXCU7jPjKf?=
 =?us-ascii?q?lzb3UxCjK/1DjCaePBZGooGybg5tCXT/TNLhchC0KsJ3giYswbIqhnLGL2ocMT?=
 =?us-ascii?q?lnfkNJr72Q6z5Yg/plF2xA6HplMfeLmyKD4+bELZYWtONhAj5omOJC/HQ617xV?=
 =?us-ascii?q?4TlYRPx0nSvetMJhr0u6nemP1DVnVgFDqjJKhIKNoEVjNr/V9phGWXbY4h0N6X?=
 =?us-ascii?q?+cBAgNp9tgEtfvobxfysDTlKLvLzdP69LV8tEaB8jRKcKHNmIuMBvpGDHOCgsF?=
 =?us-ascii?q?QiWmNWXeh0xbjfGT+WeZrpk8qpjwhpUOTqVXW0AyFvMfWQxZG4kDJ5JyQxsgkK?=
 =?us-ascii?q?WHl4gM5HyjvFzfQ9hcspnbV/WUR/L1J2W3l75BMiEPy/vTKY0JNcWvwUtoZlJ+?=
 =?us-ascii?q?lZ7JM0XVVNFJ5CZma1ln8w127HFiQzhriAreYQS37SpWTKbskw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BlAQAQvAJch0O0hNFjgheBMYE5gQInm?=
 =?us-ascii?q?j2XNIFzEgEBGAsIAYd2IjUIDQEDAQEBAQEBAgETAQEBCgsJCCkjDII2JAGCaQI?=
 =?us-ascii?q?kCwENARsdAQMCCQIFEDsDHgIRAQUBNQUWgwYBgWgBAxUBBAqZbTyMCRYFAReCd?=
 =?us-ascii?q?wWBMQELAYJ5ChknDV2BNwIBBRKFaIERYoMTgRwXgX+BEYVpggSGAQKJDIIThA9?=
 =?us-ascii?q?8j2guCYIjhF2HDoMjCxiJW4dKASyCUIptgQuJUgYCCQcPIYEmAYILTSOBAYI7g?=
 =?us-ascii?q?icXg0qFFIVdIjKBAgMBASETij6CTAEB?=
X-IPAS-Result: =?us-ascii?q?A0BlAQAQvAJch0O0hNFjgheBMYE5gQInmj2XNIFzEgEBGAs?=
 =?us-ascii?q?IAYd2IjUIDQEDAQEBAQEBAgETAQEBCgsJCCkjDII2JAGCaQIkCwENARsdAQMCC?=
 =?us-ascii?q?QIFEDsDHgIRAQUBNQUWgwYBgWgBAxUBBAqZbTyMCRYFAReCdwWBMQELAYJ5Chk?=
 =?us-ascii?q?nDV2BNwIBBRKFaIERYoMTgRwXgX+BEYVpggSGAQKJDIIThA98j2guCYIjhF2HD?=
 =?us-ascii?q?oMjCxiJW4dKASyCUIptgQuJUgYCCQcPIYEmAYILTSOBAYI7gicXg0qFFIVdIjK?=
 =?us-ascii?q?BAgMBASETij6CTAEB?=
X-IronPort-AV: E=Sophos;i="5.56,303,1539673200"; 
   d="scan'208";a="55141111"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 01 Dec 2018 08:54:07 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727101AbeLBEG7 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sat, 1 Dec 2018 23:06:59 -0500
Received: from mail-qt1-f194.google.com ([209.85.160.194]:46797 "EHLO
        mail-qt1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726826AbeLBEG7 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 1 Dec 2018 23:06:59 -0500
Received: by mail-qt1-f194.google.com with SMTP id y20so9372953qtm.13;
        Sat, 01 Dec 2018 08:54:02 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:mime-version
         :content-transfer-encoding;
        bh=Jc/QnxF9T0QZ56XXEaB6RA0B0zW118vMCJCrHHSB4vA=;
        b=eBqF52GXgpGlVCtMOZbvmEfdWv3Sp81/FGjFHUwYTYeIMHfaaZOxb7f4//jupfoI9L
         k89m989AGOiJ7jvm+0Euj/Oqce5OfB9QVVbk06qAmQlKWQLSmJEl0tTycr7wKPZz6x8M
         aYx4MZll6RnGe1dk0VAnsoU9JJzNCAW0ZQin48T11mBKjdDCBD5l1SqE4zlBfChMWTsO
         Z+6IiEb5Hu2Q+3mDmIhQEEM50zgyeVXoYvQjybTiQGpXE8iNtCg3OPE20eg58syLPa2h
         vc3B0XYV7oobOfjwrOl/K5ghLmg2kQDujYtyO5LXvxLkPwb2OUPq8p2capfa8dw38aYR
         GUqg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:mime-version
         :content-transfer-encoding;
        bh=Jc/QnxF9T0QZ56XXEaB6RA0B0zW118vMCJCrHHSB4vA=;
        b=tg6ETc7VoyW+UHwi6M5UVXKbf34l9ZF5LRab9oJAqvipZC+JTzYgCP3CABFAXzlhjH
         QXhcV4BSbjd5hSMq4ec7LCREzrc5aMBwGw9YVJiF0c+acdGmdDxVVN4n+xTYfOzRjqcd
         fJHQ+FIixNbDA0xczEQO2xDKSCl+qCcqPSRGVyszZ02Su47XVQBpDoq2ems4COKJVWEb
         nbtoq9XQi9U0xiLvVgf2s4pFr07aGwpt9C0vqu3OMb/eDlOKPGfNE9kUgv8D0V0wTHZp
         aCA/p1sSLvr66Jwn6ZIgqhNxCek0J4SQvUcNohjSgua63BhvP9MZ5IXRBgB9vPpR/GWQ
         Kbqg==
X-Gm-Message-State: AA+aEWYEnw83GcauW+w2MkmDhGgcQj5QfxCykJHmJaPNsGCPyht/UnXY
        LKKJFV74/lRFZliGN/LWJIA=
X-Google-Smtp-Source: AFSGD/V7j4iAsmSJ9aCDBjcV2dBB5xgSDqWZhg15vd4997qkpiwUSJ7YhfQE7QWgudGF7HNE7U04bQ==
X-Received: by 2002:ac8:1308:: with SMTP id e8mr9908369qtj.201.1543683241931;
        Sat, 01 Dec 2018 08:54:01 -0800 (PST)
Received: from localhost ([2601:184:4780:7861:6268:7a0b:50be:cebc])
        by smtp.gmail.com with ESMTPSA id c202sm5090331qkb.19.2018.12.01.08.54.01
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Sat, 01 Dec 2018 08:54:01 -0800 (PST)
From: Rob Clark <robdclark@gmail.com>
To: iommu@lists.linux-foundation.org
Cc: dri-devel@lists.freedesktop.org, linux-arm-msm@vger.kernel.org,
        Vivek Gautam <vivek.gautam@codeaurora.org>,
        Tomasz Figa <tfiga@chromium.org>, hch@lst.de,
        Robin Murphy <robin.murphy@arm.com>,
        Will Deacon <will.deacon@arm.com>,
        David Airlie <airlied@linux.ie>,
        freedreno@lists.freedesktop.org,
        Archit Taneja <architt@codeaurora.org>,
        Sean Paul <seanpaul@chromium.org>,
        Douglas Anderson <dianders@chromium.org>,
        Daniel Vetter <daniel@ffwll.ch>,
        Rob Clark <robdclark@gmail.com>,
        Rob Herring <robh+dt@kernel.org>,
        Frank Rowand <frowand.list@gmail.com>,
        devicetree@vger.kernel.org, linux-kernel@vger.kernel.org
Subject: [PATCH] of/device: add blacklist for iommu dma_ops
Date: Sat,  1 Dec 2018 11:53:37 -0500
Message-Id: <20181201165348.24140-1-robdclark@gmail.com>
X-Mailer: git-send-email 2.19.2
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

This solves a problem we see with drm/msm, caused by getting
iommu_dma_ops while we attach our own domain and manage it directly at
the iommu API level:

  [0000000000000038] user address but active_mm is swapper
  Internal error: Oops: 96000005 [#1] PREEMPT SMP
  Modules linked in:
  CPU: 7 PID: 70 Comm: kworker/7:1 Tainted: G        W         4.19.3 #90
  Hardware name: xxx (DT)
  Workqueue: events deferred_probe_work_func
  pstate: 80c00009 (Nzcv daif +PAN +UAO)
  pc : iommu_dma_map_sg+0x7c/0x2c8
  lr : iommu_dma_map_sg+0x40/0x2c8
  sp : ffffff80095eb4f0
  x29: ffffff80095eb4f0 x28: 0000000000000000
  x27: ffffffc0f9431578 x26: 0000000000000000
  x25: 00000000ffffffff x24: 0000000000000003
  x23: 0000000000000001 x22: ffffffc0fa9ac010
  x21: 0000000000000000 x20: ffffffc0fab40980
  x19: ffffffc0fab40980 x18: 0000000000000003
  x17: 00000000000001c4 x16: 0000000000000007
  x15: 000000000000000e x14: ffffffffffffffff
  x13: ffff000000000000 x12: 0000000000000028
  x11: 0101010101010101 x10: 7f7f7f7f7f7f7f7f
  x9 : 0000000000000000 x8 : ffffffc0fab409a0
  x7 : 0000000000000000 x6 : 0000000000000002
  x5 : 0000000100000000 x4 : 0000000000000000
  x3 : 0000000000000001 x2 : 0000000000000002
  x1 : ffffffc0f9431578 x0 : 0000000000000000
  Process kworker/7:1 (pid: 70, stack limit = 0x0000000017d08ffb)
  Call trace:
   iommu_dma_map_sg+0x7c/0x2c8
   __iommu_map_sg_attrs+0x70/0x84
   get_pages+0x170/0x1e8
   msm_gem_get_iova+0x8c/0x128
   _msm_gem_kernel_new+0x6c/0xc8
   msm_gem_kernel_new+0x4c/0x58
   dsi_tx_buf_alloc_6g+0x4c/0x8c
   msm_dsi_host_modeset_init+0xc8/0x108
   msm_dsi_modeset_init+0x54/0x18c
   _dpu_kms_drm_obj_init+0x430/0x474
   dpu_kms_hw_init+0x5f8/0x6b4
   msm_drm_bind+0x360/0x6c8
   try_to_bring_up_master.part.7+0x28/0x70
   component_master_add_with_match+0xe8/0x124
   msm_pdev_probe+0x294/0x2b4
   platform_drv_probe+0x58/0xa4
   really_probe+0x150/0x294
   driver_probe_device+0xac/0xe8
   __device_attach_driver+0xa4/0xb4
   bus_for_each_drv+0x98/0xc8
   __device_attach+0xac/0x12c
   device_initial_probe+0x24/0x30
   bus_probe_device+0x38/0x98
   deferred_probe_work_func+0x78/0xa4
   process_one_work+0x24c/0x3dc
   worker_thread+0x280/0x360
   kthread+0x134/0x13c
   ret_from_fork+0x10/0x18
  Code: d2800004 91000725 6b17039f 5400048a (f9401f40)
  ---[ end trace f22dda57f3648e2c ]---
  Kernel panic - not syncing: Fatal exception
  SMP: stopping secondary CPUs
  Kernel Offset: disabled
  CPU features: 0x0,22802a18
  Memory Limit: none

The problem is that when drm/msm does it's own iommu_attach_device(),
now the domain returned by iommu_get_domain_for_dev() is drm/msm's
domain, and it doesn't have domain->iova_cookie.

We kind of avoided this problem prior to sdm845/dpu because the iommu
was attached to the mdp node in dt, which is a child of the toplevel
mdss node (which corresponds to the dev passed in dma_map_sg()).  But
with sdm845, now the iommu is attached at the mdss level so we hit the
iommu_dma_ops in dma_map_sg().

But auto allocating/attaching a domain before the driver is probed was
already a blocking problem for enabling per-context pagetables for the
GPU.  This problem is also now solved with this patch.

Fixes: 97890ba9289c dma-mapping: detect and configure IOMMU in of_dma_configure
Tested-by: Douglas Anderson <dianders@chromium.org>
Signed-off-by: Rob Clark <robdclark@gmail.com>
---
This is an alternative/replacement for [1].  What it lacks in elegance
it makes up for in practicality ;-)

[1] https://patchwork.freedesktop.org/patch/264930/

 drivers/of/device.c | 22 ++++++++++++++++++++++
 1 file changed, 22 insertions(+)

diff --git a/drivers/of/device.c b/drivers/of/device.c
index 5957cd4fa262..15ffee00fb22 100644
--- a/drivers/of/device.c
+++ b/drivers/of/device.c
@@ -72,6 +72,14 @@ int of_device_add(struct platform_device *ofdev)
 	return device_add(&ofdev->dev);
 }
 
+static const struct of_device_id iommu_blacklist[] = {
+	{ .compatible = "qcom,mdp4" },
+	{ .compatible = "qcom,mdss" },
+	{ .compatible = "qcom,sdm845-mdss" },
+	{ .compatible = "qcom,adreno" },
+	{}
+};
+
 /**
  * of_dma_configure - Setup DMA configuration
  * @dev:	Device to apply DMA configuration
@@ -164,6 +172,20 @@ int of_dma_configure(struct device *dev, struct device_node *np, bool force_dma)
 	dev_dbg(dev, "device is%sbehind an iommu\n",
 		iommu ? " " : " not ");
 
+	/*
+	 * There is at least one case where the driver wants to directly
+	 * manage the IOMMU, but if we end up with iommu dma_ops, that
+	 * interferes with the drivers ability to use dma_map_sg() for
+	 * cache operations.  Since we don't currently have a better
+	 * solution, and this code runs before the driver is probed and
+	 * has a chance to intervene, use a simple blacklist to avoid
+	 * ending up with iommu dma_ops:
+	 */
+	if (of_match_device(iommu_blacklist, dev)) {
+		dev_dbg(dev, "skipping iommu hookup\n");
+		iommu = NULL;
+	}
+
 	arch_setup_dma_ops(dev, dma_addr, size, iommu, coherent);
 
 	return 0;
-- 
2.19.2

