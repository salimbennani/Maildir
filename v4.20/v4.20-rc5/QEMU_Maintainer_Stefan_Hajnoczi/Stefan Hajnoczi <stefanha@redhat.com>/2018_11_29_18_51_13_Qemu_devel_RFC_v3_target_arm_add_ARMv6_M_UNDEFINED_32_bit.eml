Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 30 Nov 2018 08:49:58 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B2ACE5802E4
	for <like.xu@linux.intel.com>; Thu, 29 Nov 2018 10:53:00 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 29 Nov 2018 10:53:00 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3At29w9BY/JyTKYusXhVB8Roz/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpsy7Yx7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyxPDJ2y?=
 =?us-ascii?q?YYUMAOUPMvtWr5H/qlUMohayGAehCP/xxT9TnXL6wbQ63v49HQ3awAAsA9QDu2?=
 =?us-ascii?q?nUotXvM6cSVPi4wrTUzTrdYfNZwzH945XKfB87o/GMW7VwftbQyEkuCgjIiU6Q?=
 =?us-ascii?q?qZD7MDObzOsNtWib4PB7WOK1lWEotgFxrSKzxss2lobJgYcVx0nC+C5kzog1It?=
 =?us-ascii?q?i4R1R6Yd6iCJZQqz+VN5BqQs87WW5ooiM6yqMHtJ6+ZSQK1ZInyAPBZPyJaYSI?=
 =?us-ascii?q?+QnsWeCMKjl7nHJoYKyziwqx/ES61+HwS8q53ExUoidLktTArG0B2h7L5sSZVv?=
 =?us-ascii?q?dw+l2t1SuB2gzN8O1IPEM5mKTBJ5I/wbM9kIcYv17ZES/sgkr2ibebdkU69eis?=
 =?us-ascii?q?7OTqerHmpp6HN49okQHyKKsumsqiAegiNQgORWeb9fy91L3l40L5XK1HguMqnq?=
 =?us-ascii?q?TaqpzWONkXq62jDwNL3Isu6wyzAyqk3dgAmHkINlNFeBaJj4jzPFHOJej1De6h?=
 =?us-ascii?q?jFSpjTdn3u3JMaP/AprTKnjPiazufbFg605a1AU808tf65VQCrEAI/L8RFX9td?=
 =?us-ascii?q?PFDhIhNwy0wuDnCMhy148EWGKPBLOZP73WsVOS+u0vJOyMaZQTuDb6Lfgl6Pju?=
 =?us-ascii?q?jWIjlV8aZ6mp0oMbaGqkEfR+P0WZfX3sj88FEWcLvQoxUvbmiVKfUTNIY3ayXq?=
 =?us-ascii?q?Q85iw0CY68DIfDQJytj6KF3CuhApJWYWVGWRixF2z1fdCER+sUc3DVZctgiSAf?=
 =?us-ascii?q?E76mTYAnyFeprgC9zrNmKu/d/GofrY7i095uoPTekAx3+TFqAsDO7meWUmshm2?=
 =?us-ascii?q?oJQyMxjrlypFE4xlqd3Kw9mfFBCNFI+9tPVQE1M4OayPZ1XMvvUADMdcvcVVC9?=
 =?us-ascii?q?X9+9CiswRN9i/9hbekt4BpCugw7O2wKsBLkakaHNA4Y7oYzG2H2kHNpwxX/AnI?=
 =?us-ascii?q?kojV8hSdlOfTm9mqNx/g7TDqbTnkmZnrrsfqMZin2evFyfxHaD6RkLGDV7Vr/I?=
 =?us-ascii?q?CDVGPhPb?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A5AABZNQBchxHrdtBkHgEGBwaBUggLA?=
 =?us-ascii?q?YEwgmKMcIspgwmWSBSBXxQYFId0IjUIDQEDAQEBAQEBAgETAQEBCgsJCBsOL4I?=
 =?us-ascii?q?2BQIDGgEGgl8EAkMKKQMDAQIGAkgIAwFsBYMcggIBBKkshUCEb4oQggYXgUA/g?=
 =?us-ascii?q?RGCXYIAgnsUEIVyAok6lmkJgiGPBgsYiViHRJhOgUgDgghNIxWDJxOQSEExgQc?=
 =?us-ascii?q?cilZWgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0A5AABZNQBchxHrdtBkHgEGBwaBUggLAYEwgmKMcIspgwm?=
 =?us-ascii?q?WSBSBXxQYFId0IjUIDQEDAQEBAQEBAgETAQEBCgsJCBsOL4I2BQIDGgEGgl8EA?=
 =?us-ascii?q?kMKKQMDAQIGAkgIAwFsBYMcggIBBKkshUCEb4oQggYXgUA/gRGCXYIAgnsUEIV?=
 =?us-ascii?q?yAok6lmkJgiGPBgsYiViHRJhOgUgDgghNIxWDJxOQSEExgQccilZWgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,295,1539673200"; 
   d="scan'208";a="54904063"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 29 Nov 2018 10:52:45 -0800
Received: from localhost ([::1]:55781 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gSRQb-0007Sn-AW
	for like.xu@linux.intel.com; Thu, 29 Nov 2018 13:52:45 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:46474)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <stefanha@redhat.com>) id 1gSRQG-0007MV-DY
	for qemu-devel@nongnu.org; Thu, 29 Nov 2018 13:52:27 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <stefanha@redhat.com>) id 1gSRQE-00027k-Ln
	for qemu-devel@nongnu.org; Thu, 29 Nov 2018 13:52:24 -0500
Received: from mx1.redhat.com ([209.132.183.28]:38728)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <stefanha@redhat.com>)
	id 1gSRQ5-0001zG-Pd; Thu, 29 Nov 2018 13:52:14 -0500
Received: from smtp.corp.redhat.com (int-mx02.intmail.prod.int.phx2.redhat.com
	[10.5.11.12])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 9DEB6A7E9;
	Thu, 29 Nov 2018 18:52:10 +0000 (UTC)
Received: from localhost (ovpn-116-56.ams2.redhat.com [10.36.116.56])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 7054760FE6;
	Thu, 29 Nov 2018 18:52:06 +0000 (UTC)
From: Stefan Hajnoczi <stefanha@redhat.com>
To: qemu-devel@nongnu.org
Date: Thu, 29 Nov 2018 18:51:13 +0000
Message-Id: <20181129185113.30353-1-stefanha@redhat.com>
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.12
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.29]);
	Thu, 29 Nov 2018 18:52:11 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [RFC v3] target/arm: add ARMv6-M UNDEFINED 32-bit
 instruction test
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Peter Maydell <peter.maydell@linaro.org>, jim@groklearning.com,
	=?UTF-8?q?Alex=20Benn=C3=A9e?= <alex.bennee@linaro.org>,
	qemu.ml@steffen-goertz.de, qemu-arm@nongnu.org, joel@jms.id.au,
	Stefan Hajnoczi <stefanha@redhat.com>, jusual@mail.ru
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Test that 32-bit instructions declared UNDEFINED in the ARMv6-M
Reference Manual really do raise an exception.  Also test that the 6
32-bit instructions defined in the ARMv6-M Reference Manual do not raise
an exception.

The Intel HEX (.hex) file is included to save people the trouble of
installing a cross-compiler toolchain.

To run the test (make sure qemu-system-arm is in your $PATH):

  $ cd tests/tcg/arm
  $ make run-test-armv6m-undef

Based-on: <20181029194519.15628-1-stefanha@redhat.com>
Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>
---
Note that this patch depends on "[PATCH] microbit: do not rely on
-kernel option", which in turn depends on "[PATCH v3]
tests/microbit-test: Check nRF51 UART functionality".  I'd still
appreciate review because I have yet to figure out a clean way to
integrate this qemu-system-arm test into make check-tcg (which only
supports linux-user targets!).
---
 tests/tcg/arm/Makefile              |  26 +++++
 tests/tcg/arm/test-armv6m-undef.S   | 154 ++++++++++++++++++++++++++++
 tests/tcg/arm/test-armv6m-undef.hex |  22 ++++
 tests/tcg/arm/test-armv6m-undef.ld  |  21 ++++
 4 files changed, 223 insertions(+)
 create mode 100644 tests/tcg/arm/Makefile
 create mode 100644 tests/tcg/arm/test-armv6m-undef.S
 create mode 100644 tests/tcg/arm/test-armv6m-undef.hex
 create mode 100644 tests/tcg/arm/test-armv6m-undef.ld

diff --git a/tests/tcg/arm/Makefile b/tests/tcg/arm/Makefile
new file mode 100644
index 0000000000..6923129b84
--- /dev/null
+++ b/tests/tcg/arm/Makefile
@@ -0,0 +1,26 @@
+-include ../../../config-host.mak
+
+CROSS =3D arm-linux-gnu-
+CC =3D $(CROSS)gcc
+OBJCOPY =3D $(CROSS)objcopy
+
+SIM =3D ../../../arm-softmmu/qemu-system-arm
+
+SOURCES =3D $(wildcard $(SRC_PATH)/tests/tcg/arm/*.S)
+BINARIES =3D $(patsubst %.S,%.hex,$(SOURCES))
+
+.PHONY: clean
+
+all: $(BINARIES)
+
+clean:
+	rm -f $(BINARIES) *.o
+
+%.o: %.S %.ld
+	$(CC) -nostdlib -Wl,--build-id=3Dnone -x assembler-with-cpp -T $(patsub=
st %.S,%.ld,$<) -x assembler-with-cpp -o $@ $<
+
+%.hex: %.o
+	$(OBJCOPY) -O ihex $< $@
+
+run-test-armv6m-undef: test-armv6m-undef.hex
+	$(SIM) -semihosting -M microbit -device loader,file=3D$<
diff --git a/tests/tcg/arm/test-armv6m-undef.S b/tests/tcg/arm/test-armv6=
m-undef.S
new file mode 100644
index 0000000000..d18ca56b4a
--- /dev/null
+++ b/tests/tcg/arm/test-armv6m-undef.S
@@ -0,0 +1,154 @@
+/*
+ * Test ARMv6-M UNDEFINED 32-bit instructions
+ *
+ * Copyright 2018 Red Hat Inc.
+ *
+ * This work is licensed under the terms of the GNU GPL, version 2
+ * or later. See the COPYING file in the top-level directory.
+ */
+
+/*
+ * Test that UNDEFINED 32-bit instructions fault as expected.  This is a=
n
+ * interesting test because ARMv6-M shares code with its more fully-feat=
ured
+ * siblings and it's necessary to verify that its limited instruction se=
t is
+ * emulated correctly.
+ *
+ * The emulator must be invoked with -semihosting so that the test case =
can
+ * terminate with exit code 0 on success or 1 on failure.
+ *
+ * Failures can be debugged with -d in_asm,int,exec,cpu and the
+ * gdbstub (-S -s).
+ */
+
+.syntax unified
+.cpu cortex-m0
+.thumb
+
+/*
+ * Memory map
+ */
+#define SRAM_BASE 0x20000000
+#define SRAM_SIZE (16 * 1024)
+
+/*
+ * Semihosting interface on ARM T32
+ * See "Semihosting for AArch32 and AArch64 Version 2.0 Documentation" b=
y ARM
+ */
+#define semihosting_call bkpt 0xab
+#define SYS_EXIT 0x18
+
+vector_table:
+    .word SRAM_BASE + SRAM_SIZE /* 0. SP_main */
+    .word exc_reset_thumb       /* 1. Reset */
+    .word 0                     /* 2. NMI */
+    .word exc_hard_fault_thumb  /* 3. HardFault */
+    .rept 7
+    .word 0                     /* 4-10. Reserved */
+    .endr
+    .word 0                     /* 11. SVCall */
+    .word 0                     /* 12. Reserved */
+    .word 0                     /* 13. Reserved */
+    .word 0                     /* 14. PendSV */
+    .word 0                     /* 15. SysTick */
+    .rept 32
+    .word 0                     /* 16-47. External Interrupts */
+    .endr
+
+exc_reset:
+.equ exc_reset_thumb, exc_reset + 1
+.global exc_reset_thumb
+    /* The following 32-bit UNDEFINED instructions are tested by executi=
ng
+     * them.  The HardFault exception handler should execute and return =
to
+     * the next test case.  If no exception is raised the test fails.
+     */
+
+    /* Table A5-9 32-bit Thumb encoding */
+    .short 0b1110100000000000
+    .short 0b0000000000000000
+    b not_reached
+    .short 0b1110100000000000
+    .short 0b1000000000000000
+    b not_reached
+    .short 0b1111100000000000
+    .short 0b0000000000000000
+    b not_reached
+    .short 0b1111100000000000
+    .short 0b1000000000000000
+    b not_reached
+    .short 0b1111000000000000
+    .short 0b0000000000000000
+    b not_reached
+
+    /* Table A5-10 Branch and miscellaneous control instructions */
+    .short 0b1111011111110000
+    .short 0b1010000000000000
+    b not_reached
+
+    /* The following are valid 32-bit instructions that must not raise a
+     * HardFault.
+     */
+
+    /* B4.2.3 Move to Special Register (moves to IPSR are ignored) */
+    msr ipsr, r0
+    b 1f
+    b not_reached
+1:
+    /* B4.2.2 Move from Special Register */
+    mrs r0, ipsr
+    b 1f
+    b not_reached
+1:
+    /* A6.7.13 Branch with Link (immediate) */
+    bl 1f
+1:
+    b 1f
+    b not_reached
+1:
+    /* A6.7.21 Data Memory Barrier */
+    dmb
+    b 1f
+    b not_reached
+1:
+    /* A6.7.22 Data Synchronization Barrier */
+    dsb
+    b 1f
+    b not_reached
+1:
+    /* A6.7.24 Instruction Memory Barrier */
+    isb
+    b 1f
+    b not_reached
+1:
+
+    /* Success! */
+    movs r0, 1
+    b exit
+
+not_reached: /* Failure :( */
+    movs r0, 0
+    b exit
+
+/* When a HardFault occurs, return to pc+6 (test cases are 3 halfwords l=
ong) */
+exc_hard_fault:
+.equ exc_hard_fault_thumb, exc_hard_fault + 1
+.global exc_hard_fault_thumb
+    ldr r0, [sp, 0x18]
+    adds r0, 6
+    str r0, [sp, 0x18]
+    bx lr
+
+/*
+ * exit: Terminate emulator
+ * @r0: 0 - failure, 1 - success
+ */
+exit:
+    movs r1, 0
+    cmp r0, 1
+    bne 1f
+    ldr r1, ADP_Stopped_ApplicationExit
+1:
+    movs r0, SYS_EXIT
+    semihosting_call
+.align 2
+ADP_Stopped_ApplicationExit:
+    .word 0x20026
diff --git a/tests/tcg/arm/test-armv6m-undef.hex b/tests/tcg/arm/test-arm=
v6m-undef.hex
new file mode 100644
index 0000000000..6a32548e3c
--- /dev/null
+++ b/tests/tcg/arm/test-armv6m-undef.hex
@@ -0,0 +1,22 @@
+:1000000000400020C1000000000000001D010000B1
+:1000100000000000000000000000000000000000E0
+:1000200000000000000000000000000000000000D0
+:1000300000000000000000000000000000000000C0
+:1000400000000000000000000000000000000000B0
+:1000500000000000000000000000000000000000A0
+:100060000000000000000000000000000000000090
+:100070000000000000000000000000000000000080
+:100080000000000000000000000000000000000070
+:100090000000000000000000000000000000000060
+:1000A0000000000000000000000000000000000050
+:1000B0000000000000000000000000000000000040
+:1000C00000E8000028E000E8008025E000F80000DB
+:1000D00022E000F800801FE000F000001CE0F0F7D4
+:1000E00000A019E080F3058800E015E0EFF305803B
+:1000F00000E011E000F000F800E00DE0BFF35F8FDA
+:1001000000E009E0BFF34F8F00E005E0BFF36F8F21
+:1001100000E001E0012005E0002003E00698063041
+:10012000069070470021012800D101491820ABBE7C
+:0401300026000200A3
+:04000003000000C138
+:00000001FF
diff --git a/tests/tcg/arm/test-armv6m-undef.ld b/tests/tcg/arm/test-armv=
6m-undef.ld
new file mode 100644
index 0000000000..43dbbf17d5
--- /dev/null
+++ b/tests/tcg/arm/test-armv6m-undef.ld
@@ -0,0 +1,21 @@
+ENTRY(exc_reset_thumb)
+
+SECTIONS
+{
+    . =3D 0x0;
+    .text : {
+        *(.text)
+    }
+    .data : {
+        *(.data)
+    }
+    .rodata : {
+        *(.rodata)
+    }
+    .bss : {
+        *(.bss)
+    }
+    /DISCARD/ : {
+        *(.ARM.attributes)
+    }
+}
--=20
2.19.1


