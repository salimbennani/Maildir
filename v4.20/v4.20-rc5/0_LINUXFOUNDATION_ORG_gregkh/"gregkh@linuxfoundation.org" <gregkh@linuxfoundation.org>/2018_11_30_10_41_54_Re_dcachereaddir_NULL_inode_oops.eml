Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:16:17 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 97E9E580213;
	Fri, 30 Nov 2018 02:42:02 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga007-1.jf.intel.com with ESMTP; 30 Nov 2018 02:42:02 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A1Pq1hxalDtAyp09c+AAI10X/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpcm8bB7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyJPDIOi?=
 =?us-ascii?q?YYUSDOQBM+lXoJXgqFQMoxS+HhGsCeH0xz9UmnP7x7E23/g7HA3Y2gErAtIAsG?=
 =?us-ascii?q?7TrNXwLKoeX++1zLPWwjXMbPNW2Szw6IzJchAnvPGNUrxwcc3MyUkpCgzKlEmQ?=
 =?us-ascii?q?qY3iPzOTzOgNtHKb7+VuWemyjGMnpBtxrSagxscvionEnYYVylHC9SVkz4c1K9?=
 =?us-ascii?q?q4SFN9YdG5CpRQqyCaN4xwQs84RGFooik6x6QAtJWmfyYK0IwqywDDZ/GDaYSE?=
 =?us-ascii?q?/xzuWPiLLTtlh39pZKizihew/ES4yeDxWNO43VVLoyZfkdTBsmoB2wHP5sWFTP?=
 =?us-ascii?q?Z2412v1iyV1w/J7+FJOUA0mrTfK54m2rMwiJUTvlrZHiPsm0X5krWWdkM69eis?=
 =?us-ascii?q?8ejnZa/mppCEO491jAHxLLgul9ShDegkNgUCRXWX9Oqi2LH54EH0Q6lGguc3n6?=
 =?us-ascii?q?TbqJzaIN4Upq+9Aw9byIYj7BO/Ai+i0NQZm3kHMV1EdAuEj4f3IVHOJu73DfOm?=
 =?us-ascii?q?j1SrnjZrwe7JPqf6D5XTIXjMjq3hcax+60FC0gozy85Q55ZOBrEGOvLzVVf9tM?=
 =?us-ascii?q?bEAR8hLwy03+HnBc151oMfWmKAHLWVMazPsVKT4uIvIu+MZJIauTrnKvgl4eLu?=
 =?us-ascii?q?gmE9mVMHYaap2p4XYmiiHvt6O0WZfWbsgtAZHGcKpAU+TfDqh0eFUTJJZ3ayQr?=
 =?us-ascii?q?gz5jc0CI+9CYfDR4atgKGO3SuhH51WYHxGBU6IEXvya4qEXPIMYjqIIsB9ijwE?=
 =?us-ascii?q?SaShS4g52BGssw/11aBrLunT+i0es5Lj08N45+nSlRE06Dx1AN6R02CLT2FogG?=
 =?us-ascii?q?wIQyU607x4oUx40l2Dy7R3g+REFdxP4PNESh01NYXcz+x9CND+QBjBcc2LSFu9?=
 =?us-ascii?q?RtWmADcxTs8+wtMUYkZ9HcmigQ7H3yawH7AVkLmLDoQu8q3Ax3jxO9p9y3He2a?=
 =?us-ascii?q?kilVYmRNFDNWmnhqFl8QjTCJXEk0GYl6asaKQd0zTB9GaFzWqSok5YVBR8XrnC?=
 =?us-ascii?q?XXAafkHWt8j25lveT7+yDrQqKhZOxtScKqRUcNHpjU9JRPH4ONvAZWK9nGOwBR?=
 =?us-ascii?q?WNxrOId4fqf2Qd3CPACEkLiQwT/HCGNRQgCSeluW7REDtuFVf3aUP27eZ+sG+7?=
 =?us-ascii?q?TlMzzwySckJuzaS19QAPifycUfwT2KkEtzknqzhvGFa93tTWC8ePpgZ7faVcZ8?=
 =?us-ascii?q?8970lD1W7DqwN9OZmgJbh4hlECawR3o1/u1xJvB4VckMgqqXQqzBZyKaOYyl9B?=
 =?us-ascii?q?aymU3ZfqOr3TK2ny+h+vZrXS2lHf1taW56gO5O45q1XloAGmCE4i/2973NlS1n?=
 =?us-ascii?q?uW/o/KAxYKUZLtTkY38AB3qKveYiYj6ILby31tPbOvvT/fxt0mHu0lyhWnf9dB?=
 =?us-ascii?q?K66EEA7yE8sHB8mhMuAqml6pbg4aM+BW7qI7I8Smd/6e0q6xIOlghC6mjXhA4I?=
 =?us-ascii?q?1l0kOM6jBwRfLS05cEw/GXxA2HVzjngVels8D3n51EZD4IEmq+zyjkGJBeZqlo?=
 =?us-ascii?q?cYkXDmeuJtW9xs9iiJ71R35Y6FmjCksc2M+oZRWddUb90hBX1UgNp3yohzG4zz?=
 =?us-ascii?q?1tnz41tKWf2DHBzPr4dBoAPG5GX21ijVbqIYipgNEWRkmobw41lBS74Ub23bRU?=
 =?us-ascii?q?pKN6L2PLW0dHYzD2L31+Uqu3rreDY89P5IkosClNS+S8fFaaR6X5oxsb1SPjAm?=
 =?us-ascii?q?RfyCo6dzGsppX2gRh6hHiBI3Z0qXrTYdtwygvH5NzAWf5R2SILRCtihjnNBVi8?=
 =?us-ascii?q?PN6p8c+Pl5jZseC+VGOhVptNfint1o6AsCq75Wt3ARywhfyzm9vnERQk3i//zd?=
 =?us-ascii?q?VlSSLIrBPkaInxy6u6Kf5nflVvBFLk68t1AIZ+npEyhJER33gXnZGV/XsBkWfu?=
 =?us-ascii?q?PtRXw6P+bHwRRTEVx97Z+hTq2EpmLniR3YL2Sm2dwtd9Z9m9em4W2Tgy78FQBK?=
 =?us-ascii?q?eU8bxLhy11olWjoALVYPh9mCodyPQ05H4bheEJpBQiziGHDr8OGklYODTmlw6U?=
 =?us-ascii?q?4NCmsKVXeGGvfKC11Ep/ntCuFquOow9CV3biZpctAzVw4d5hP1LW333+8YXkeN?=
 =?us-ascii?q?jWbdIOuRyYiRbAj+5JKJ0vkvoGnzZoOWX4vXc90e40kQRu3Y2mvIiAM2ht4KW5?=
 =?us-ascii?q?AhtCOjz0fcwT/Cztjb1FnsaXxI2vGpRhGjMWXJrnV/6oETQStej5OAaKCjEztn?=
 =?us-ascii?q?CbGb/HFw+F9Ehmt27PE4ysN3yPP3YW19JiRB2AJEBFhAAUQS43npo4FgCs2czg?=
 =?us-ascii?q?f1115jEX5l7ktBRMzvhkOAX4UmfavA2ocCs7SICDLBpK6QFP/0XVPtab7u1tBC?=
 =?us-ascii?q?FU5IGhoBaOKmyGZARIEGcJVVafB134Ormu5N/A8/WXB+akLvvOZ6mOpvJaV/uS?=
 =?us-ascii?q?2Z2v1Y5m9S6WNsqTJnliE+E72k1bUHF5HMTZhiwPSzENmCLLdcKbvxC8+it4rs?=
 =?us-ascii?q?2k9PTrWQTv5ZaACrdIMNVv/Qy2jrmHN+KKmCl5LjNY3IsWxXDU0LgfwEISiyZ2?=
 =?us-ascii?q?ejmtD7sAtC3NTKHRmqNNDB4bcSRzNMRW4KImwwlNItXWitf01r5+k/40BE1JVV?=
 =?us-ascii?q?3nmsG1e8MKJ3uxO0/ABEaOLL6GPyHEw9nrYaOgTr1dlP9btwCrtjaBDUDiPi6P?=
 =?us-ascii?q?lz3oVx20NeFMjSebPAFRuY2ncxZtD3TjQ8ziahGhLNB3ijg2y6UuhnzWLW4cLS?=
 =?us-ascii?q?R8c0RVo72M7CNYh+9zFHBb4nV5LemLhSCZ4vLcKpYXt/trHyt1m/hb4HQ817ta?=
 =?us-ascii?q?8iVESOZplyvVq95ku0umnfWXyjp7TBpOrS5GhYKRskVkPKXZ959AVm7F/RIN92?=
 =?us-ascii?q?qQDRsKqsBhCt3uvaBQ19fOmLjyKDdE79Lb488cC9LIJ8KANXpyeSbuTRzdCkMq?=
 =?us-ascii?q?STe2P2zFzxh/mffU2Xmcs5I3sLDnkYQPV7odX1swQLdSQGl/HddKH9E/dDIpnb?=
 =?us-ascii?q?OBiccOrzLqoRPQSclXpJXvRveTGu7uLzDfhr5BMUgm27T9eM4cLID02ExKblh8?=
 =?us-ascii?q?gZTEHFfWUdlRoypnKAgurw8FpHdkQ2Iw22rhawWw8HEUCPi4lwI3jQ04Zv4iom?=
 =?us-ascii?q?S/q2wrL0bH8XNj2HI6ns/o1HXIKGb8?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAADwEgFch0O0hNFjGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBg2snjBFfiyqCDRSXNIIHKwGHdCI0CQ0BAwE?=
 =?us-ascii?q?BAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmIBAgMBAiQTBgEBKQ4BBQkBAQoYCSUDD?=
 =?us-ascii?q?AVJAReDHIICBAGldYFsM4J2AQEFhgWBJAiJV4EogRwXPoFBgRGDEog2giaJXIF?=
 =?us-ascii?q?BlRYHAgKRKgsYgVuFEIo0LIhPj1+BRoINfQiDJ4IbDBeIXoVAPzKBAgMBASETj?=
 =?us-ascii?q?WcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ABAADwEgFch0O0hNFjGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBg2snjBFfiyqCDRSXNIIHKwGHdCI0CQ0BAwEBAQEBAQIBEwEBA?=
 =?us-ascii?q?QgNCQgpIwyCNiQBgmIBAgMBAiQTBgEBKQ4BBQkBAQoYCSUDDAVJAReDHIICBAG?=
 =?us-ascii?q?ldYFsM4J2AQEFhgWBJAiJV4EogRwXPoFBgRGDEog2giaJXIFBlRYHAgKRKgsYg?=
 =?us-ascii?q?VuFEIo0LIhPj1+BRoINfQiDJ4IbDBeIXoVAPzKBAgMBASETjWcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,298,1539673200"; 
   d="scan'208";a="42224252"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 30 Nov 2018 02:41:59 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726825AbeK3Vus (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 30 Nov 2018 16:50:48 -0500
Received: from mail.kernel.org ([198.145.29.99]:52084 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726521AbeK3Vus (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 30 Nov 2018 16:50:48 -0500
Received: from localhost (5356596B.cm-6-7b.dynamic.ziggo.nl [83.86.89.107])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 47FAF206B7;
        Fri, 30 Nov 2018 10:41:56 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1543574516;
        bh=rBV7QyEig0CVPQfYlMWyaHmDC0pTWAwaI4pafH4PoJM=;
        h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
        b=tSoj/fI1A8bSAM+1zQpb/xRwmroNhITFihkgldTaxn+RK7remtE36n+VuPtwcaXft
         DhlsI4+DLMrFMEuaW3mYKImZ52g1zsA7WJg1BX4PS3QWOH3u+9xelk91MecuV1obpe
         IKav8SJ7a2c07O77C36iVabQTChZalaQCm5+R6zQ=
Date: Fri, 30 Nov 2018 11:41:54 +0100
From: "gregkh@linuxfoundation.org" <gregkh@linuxfoundation.org>
To: Jan Glauber <Jan.Glauber@cavium.com>,
        "Eric W. Biederman" <ebiederm@xmission.com>
Cc: Will Deacon <will.deacon@arm.com>,
        Alexander Viro <viro@zeniv.linux.org.uk>,
        "linux-fsdevel@vger.kernel.org" <linux-fsdevel@vger.kernel.org>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        "jslaby@suse.com" <jslaby@suse.com>
Subject: Re: dcache_readdir NULL inode oops
Message-ID: <20181130104154.GA11991@kroah.com>
References: <20181109143744.GA12128@hc>
 <20181109155856.GC2091@brain-police>
 <20181110111656.GA16667@hc>
 <20181120182854.GC28838@arm.com>
 <20181120190317.GA29161@arm.com>
 <20181121131900.GA18931@hc>
 <20181123180525.GA21017@arm.com>
 <20181128200806.GC32668@arm.com>
 <20181129184950.GA7290@hc>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181129184950.GA7290@hc>
User-Agent: Mutt/1.11.0 (2018-11-25)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Adding Eric as he touched this code last :)

On Thu, Nov 29, 2018 at 07:25:48PM +0000, Jan Glauber wrote:
> On Wed, Nov 28, 2018 at 08:08:06PM +0000, Will Deacon wrote:
> > I spent some more time looking at this today...
> > 
> > On Fri, Nov 23, 2018 at 06:05:25PM +0000, Will Deacon wrote:
> > > Doing some more debugging, it looks like the usual failure case is where
> > > one CPU clears the inode field in the dentry via:
> > >
> > >       devpts_pty_kill()
> > >               -> d_delete()   // dentry->d_lockref.count == 1
> > >                       -> dentry_unlink_inode()
> > >
> > > whilst another CPU gets a pointer to the dentry via:
> > >
> > >       sys_getdents64()
> > >               -> iterate_dir()
> > >                       -> dcache_readdir()
> > >                               -> next_positive()
> > >
> > > and explodes on the subsequent inode dereference when trying to pass the
> > > inode number to dir_emit():
> > >
> > >       if (!dir_emit(..., d_inode(next)->i_ino, ...))
> > >
> > > Indeed, the hack below triggers a warning, indicating that the inode
> > > is being cleared concurrently.
> > >
> > > I can't work out whether the getdents64() path should hold a refcount
> > > to stop d_delete() in its tracks, or whether devpts_pty_kill() shouldn't
> > > be calling d_delete() like this at all.
> > 
> > So the issue is that opening /dev/pts/ptmx creates a new pty in /dev/pts,
> > which disappears when you close /dev/pts/ptmx. Consequently, when we tear
> > down the dentry for the magic new file, we have to take the i_node rwsem of
> > the *parent* so that concurrent path walkers don't trip over it whilst its
> > being freed. I wrote a simple concurrent program to getdents(/dev/pts/) in
> > one thread, whilst another opens and closes /dev/pts/ptmx: it crashes the
> > kernel in seconds.
> 
> I also made a testcase and verified that your fix is fine. I also tried
> replacing open-close on /dev/ptmx with mkdir-rmdir but that does not
> trigger the error.
> 
> > Patch below, but I'd still like somebody else to look at this, please.
> 
> I wonder why no inode_lock on parent is needed for devpts_pty_new(), but
> I'm obviously not a VFS expert... So your patch looks good to me and
> clearly solves the issue.
> 
> thanks,
> Jan
> 
> > Will
> > 
> > --->8
> > 
> > diff --git a/fs/devpts/inode.c b/fs/devpts/inode.c
> > index c53814539070..50ddb95ff84c 100644
> > --- a/fs/devpts/inode.c
> > +++ b/fs/devpts/inode.c
> > @@ -619,11 +619,17 @@ void *devpts_get_priv(struct dentry *dentry)
> >   */
> >  void devpts_pty_kill(struct dentry *dentry)
> >  {
> > -       WARN_ON_ONCE(dentry->d_sb->s_magic != DEVPTS_SUPER_MAGIC);
> > +       struct super_block *sb = dentry->d_sb;
> > +       struct dentry *parent = sb->s_root;
> > 
> > +       WARN_ON_ONCE(sb->s_magic != DEVPTS_SUPER_MAGIC);

Side note, I wonder if this is even needed anymore...

> > +
> > +       inode_lock(parent->d_inode);
> >         dentry->d_fsdata = NULL;
> >         drop_nlink(dentry->d_inode);
> >         d_delete(dentry);
> > +       inode_unlock(parent->d_inode);
> > +
> >         dput(dentry);   /* d_alloc_name() in devpts_pty_new() */
> >  }

This feels right but getting some feedback from others would be good.

thanks,

greg k-h
