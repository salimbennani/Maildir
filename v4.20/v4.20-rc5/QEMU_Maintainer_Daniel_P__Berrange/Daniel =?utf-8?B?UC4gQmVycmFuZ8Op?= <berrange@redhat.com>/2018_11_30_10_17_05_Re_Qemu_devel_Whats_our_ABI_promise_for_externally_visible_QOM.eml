Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:16:08 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id AA2B15802E4
	for <like.xu@linux.intel.com>; Fri, 30 Nov 2018 02:19:29 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga006-1.jf.intel.com with ESMTP; 30 Nov 2018 02:19:29 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3Aqn8c2BMhZoh9LVJVGxsl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0K/3yoMbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRshfWSxfDI2/?=
 =?us-ascii?q?YYsAAPYOMvtaoIbzulUOtRmzCwujCe/yxDJEmmX20rMh0+k6DQHKwBYtE84SvH?=
 =?us-ascii?q?nOrtj4MroZX+CvzKnPyDXOd/1Y1i376IjJbB8hpeyHU6hqfcHM1EQgCRnFjk+K?=
 =?us-ascii?q?pozjMDOSzPkGvm+A4OV+T+KvkXQoqwd+ojex3coskJfGiZ8Vyl/e6SV12po6Jd?=
 =?us-ascii?q?q9SENiZ9OvDZVetyafN4RsQ8MiRXlltz0kxb0co560Zi4KyJs5yBLFd/OHdI2I?=
 =?us-ascii?q?7grtVOaVIDd3mHFleKilixmu9kigz/XwVs210FlRsCpFk8PMtmwX2xzU8MiHRe?=
 =?us-ascii?q?Nx8Vmn2TaTzQ/T7O5EIUQqmqbCM54hwrkwloYUsUjZGS/2gkr2gLeXdkUi4eio?=
 =?us-ascii?q?9/7oYrr8ppCGMo94kB3xMqMrmsG5HO82MRAOUnCF9eig17Dv51D1TKhJg/EsjK?=
 =?us-ascii?q?XUvpDXKd4GqqO7GwNZzJov5hKlAzu73tkUg2MLIE9GdR+JlYTlJVLDLfblBvml?=
 =?us-ascii?q?mVusii1kx/XeM73hHJrNKn/Dna/lfbZ88E5c1BEzwcpQ55JSF7ENOvXzWlX+tN?=
 =?us-ascii?q?DADx85NRK7w/r/Bdljyo8TWniDDrKEPK7Rq1OE+OwiLumWaIMIujvxM/0l6OTv?=
 =?us-ascii?q?jX89l18dZ66p3Z4PZXChAPtmJliZbWPxjdgfD2cFoA4+QPXxh12FTD5TYWq9UL?=
 =?us-ascii?q?wn5j08DIKmDITDSZ63jL2OwSe2BplWZmFAClCRHnbkbYSEW/EQaC2MJs9tiCAL?=
 =?us-ascii?q?Vb+kS4I60xGuswn6y7VhLurJ4CEYsojj1Ndt6+3JiR4y7SB0D9ia02yVS2F0n2?=
 =?us-ascii?q?AISCEs0KFwvExw0VOD0al+g/xFGt1f/fJJUgEmNZHCy+x2Ecz9WgXEfoTBdVC9?=
 =?us-ascii?q?X9/zAS0tVsljhJgKYl1hAJOkiRbM2TfsBKUa0LmCBZgx+6Sb2GDtJsF70DHf2a?=
 =?us-ascii?q?w8ylUrXMZLZlCgnbN1og3aBorVlBeAmqO3MKgRwiPJsX2O1HeDp11wVgl2XqPY?=
 =?us-ascii?q?G3cFaRzNsN7760jeGqKoEqktKQBbyMSPeZdNP/jgl1ZbX7/KItHUeX+qh2qqTU?=
 =?us-ascii?q?KB3LaGdpfCYWgR3CzBTkMDllZAx3ueMRkCAXKNqmTfATgmLRSnSU726+B4p/Lz?=
 =?us-ascii?q?GkU51RuDaUJs/6C49h4cmbqXTPZFjZwevyJ0hzxyHVu5l+qQQ/CNvRBoeqrdKY?=
 =?us-ascii?q?c37U1d3GTWuiRnM5CgJrwkjVkbJVck93jy3gl6X90T2fMhq2knmU8rcfqV?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ACAACHDQFchxHrdtBjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGBMIE5gRYTg3mIGF+LKoINfIkLjUGBcxQYBw2HdCI?=
 =?us-ascii?q?0CQ0BAwEBAQEBAQIBEwEBAQoLCQgbDiMMgjYFAgMaAQaCWwEBAQECAQECICMKK?=
 =?us-ascii?q?QMCAQECBgEBCg4KAgIFHQQCAgMBCwUpIBiDHAGBZxIIAQQKpkiBL4UxD4NhgQk?=
 =?us-ascii?q?FgQuLEBEGgX+BEYEXgUY1ghCBDgKBOoMrMYImAo8pkQgHAoZ/ii0LGIlZh0aYW?=
 =?us-ascii?q?oFGgg1wFTuBTYEfhgiFFIU/QTGBBxyLMlaBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0ACAACHDQFchxHrdtBjGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGBMIE5gRYTg3mIGF+LKoINfIkLjUGBcxQYBw2HdCI0CQ0BAwEBAQEBA?=
 =?us-ascii?q?QIBEwEBAQoLCQgbDiMMgjYFAgMaAQaCWwEBAQECAQECICMKKQMCAQECBgEBCg4?=
 =?us-ascii?q?KAgIFHQQCAgMBCwUpIBiDHAGBZxIIAQQKpkiBL4UxD4NhgQkFgQuLEBEGgX+BE?=
 =?us-ascii?q?YEXgUY1ghCBDgKBOoMrMYImAo8pkQgHAoZ/ii0LGIlZh0aYWoFGgg1wFTuBTYE?=
 =?us-ascii?q?fhgiFFIU/QTGBBxyLMlaBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,298,1539673200"; 
   d="scan'208";a="55528826"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 30 Nov 2018 02:19:28 -0800
Received: from localhost ([::1]:59202 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gSftQ-0003a7-7M
	for like.xu@linux.intel.com; Fri, 30 Nov 2018 05:19:28 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:51968)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <berrange@redhat.com>) id 1gSfrM-0001JE-AF
	for qemu-devel@nongnu.org; Fri, 30 Nov 2018 05:17:21 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <berrange@redhat.com>) id 1gSfrG-0001HT-E7
	for qemu-devel@nongnu.org; Fri, 30 Nov 2018 05:17:20 -0500
Received: from mx1.redhat.com ([209.132.183.28]:53724)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <berrange@redhat.com>) id 1gSfrG-0001Gn-4u
	for qemu-devel@nongnu.org; Fri, 30 Nov 2018 05:17:14 -0500
Received: from smtp.corp.redhat.com (int-mx06.intmail.prod.int.phx2.redhat.com
	[10.5.11.16])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 199CB80464;
	Fri, 30 Nov 2018 10:17:13 +0000 (UTC)
Received: from redhat.com (unknown [10.42.22.189])
	by smtp.corp.redhat.com (Postfix) with ESMTPS id 705145C223;
	Fri, 30 Nov 2018 10:17:08 +0000 (UTC)
Date: Fri, 30 Nov 2018 10:17:05 +0000
From: Daniel =?utf-8?B?UC4gQmVycmFuZ8Op?= <berrange@redhat.com>
To: Markus Armbruster <armbru@redhat.com>
Message-ID: <20181130101705.GF8101@redhat.com>
References: <87r2f3nj80.fsf@dusky.pond.sub.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
In-Reply-To: <87r2f3nj80.fsf@dusky.pond.sub.org>
User-Agent: Mutt/1.10.1 (2018-07-13)
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.16
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.28]);
	Fri, 30 Nov 2018 10:17:13 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] What's our ABI promise for externally visible QOM?
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Reply-To: Daniel =?utf-8?B?UC4gQmVycmFuZ8Op?= <berrange@redhat.com>
Cc: Peter Maydell <peter.maydell@linaro.org>,
	Eduardo Habkost <ehabkost@redhat.com>, qemu-devel@nongnu.org,
	Gerd Hoffmann <kraxel@redhat.com>,
	Andreas =?utf-8?Q?F=C3=A4rber?= <afaerber@suse.de>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Fri, Nov 30, 2018 at 07:59:59AM +0100, Markus Armbruster wrote:
> QOM types and the QOM graph are externally visible:
> 
> * qom-list-types returns QOM type names and parents.
> 
>   Fine print: the result is limited to concrete types by default.
>   Aside: that's the only way to figure out whether a type is abstract.
>   Interface design fail.  The result can optionally be limited to
>   sub-types of a certain type.
> 
> * qom-list-properties returns a named type's static properties.
> 
> * qom-list returns an object's properties.  This lets clients traverse
>   the QOM graph.
> 
> * qom-get returns a property's value.
> 
> * qom-set changes a property's value.
> 
> * -object and object-add create a QOM object of a certain type with
>   certain property values.  The type must be a sub-type of
>   "user-creatable".
> 
> * Types are identified by name.
> 
> * Objects and properties are identified by QOM path.  An absolute QOM
>   paths is the path within the composition tree starting at the root.
>   Partial paths are a convenience you don't want to understand.
> 
> What promises do we make regarding the stability  / backward
> compatibility of these externally visible entities?
> 
> The QMP command documentation is silent on it.  A user could reasonably
> assume that the general QMP stability promise extends to all of QOM.
> Does it?

Since we've never declared this, perhaps we need to turn it around and
ask what aspects are current users of QMP relying on to be stable ?

If we expect the values passed to CLI args to be stable, then we have
to say that type names and property names that can be given to -device
and -object have an implied stability promise. This would cover any
type which implements the 'user-creatable' interface IIUC.

The qom-list-properties / qom-list commands return both property names
and property types. Apps reasonably expect the property names to be
stable since that's how they determine if the feature exists.

The type names listed here are questionable though. The names we give
to property types are surprisingly adhoc once you get awya from the
basic scalar types.

eg qom-list path=/machine shows some really questionable type names

 - struct tm
 - OnOffAuto
 - on|off|split


I think I'd say that non-user-creatable typenames for objects which
are not devices are considerd unstable. They're not usable with
-object and so should only be exposed to internal code, never QMP
or CLI.

Non-user-creatable typenames for devices though are trickier, as
they are exposed to the CLI via -global, so that effectively makes
them a public API.

CPU type names were historically internal only, but with the
query-cpu-definitions command, these type names are now exposed
to apps.  We could possibly claim the typenames are non-stable
as we'd expect apps to use the CPU model name instead ?

> Was that the intent when we created qom-list, qom-set, qom-get?
> Andreas, do you remember?
> 
> Is it practical given the current state of affairs?
> 
> Is it a good idea?

Keeping as much private as possible is obviously desirable, but
in most areas it looks like the horse has bolted given the combo
of -global, -device and -object, together with many QMP commands.

We could perhaps make some targetted efforts to declare certain
things unstable (CPU type names, object property type names).

Regards,
Daniel
-- 
|: https://berrange.com      -o-    https://www.flickr.com/photos/dberrange :|
|: https://libvirt.org         -o-            https://fstop138.berrange.com :|
|: https://entangle-photo.org    -o-    https://www.instagram.com/dberrange :|

