Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:24:13 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 42F56580479;
	Fri, 30 Nov 2018 14:51:09 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 30 Nov 2018 14:51:08 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ANwUT2RPPMzacVdgj9Nol6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPjzrsbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRshfWSxfDI2h?=
 =?us-ascii?q?bYQBDOQBMuhXoIbhvFsOtRmzCBKwBO/z0DJEmmP60Lck3+knDArI3BYgH9ULsH?=
 =?us-ascii?q?nMsdv1KLkdUe6vw6nOyjXIcu5Y2Svn54fTbB8hpfWMXbN2ccrQ1EIiEBjFjk6M?=
 =?us-ascii?q?qYP/JDyayOANs2ya7+pmVOKikG0npB9rojip2MgsjpPFhoUPylDL7Ch0xps+K9?=
 =?us-ascii?q?6gSENjf9KoDJ9duzuHO4Z4XM8uWXxktSUmxrEcuJO2fjAGxZUlyhLFdvCKcoeF?=
 =?us-ascii?q?7gj+WOqNPzt0nn1odbC5ih2v60av0Pf8WdOx0FtSripKjN3MtncV2hzN5ciIVO?=
 =?us-ascii?q?F98l2i2TmRzQDT7P9LIUQumarcMZ4hzaY8lpsVsUvdAi/7gFv6gLOSe0k+5+Sl?=
 =?us-ascii?q?5frrbq/7qpKfK4N4kADzP6Y2lsy6G+s4MwwOX2aB+eS70b3u5Un5QLRMjv0rna?=
 =?us-ascii?q?jVqZPaKtoBpq6/HQBV1p8v6xGxDjegztsYh2IKLExKeB2ZlYjlIVLOL+7iDfe5?=
 =?us-ascii?q?nVuslC1nx/fcPr3uGpnNNGTMkK/9fbZh7E5R0A4zzdFc551KEL0AL+/zV1T1tN?=
 =?us-ascii?q?zZCB85LgO1z/zmCNV7yoMRR2aPDrWFP6PVtF+C/vgvLPWUZI8JpDb9LOAo5/70?=
 =?us-ascii?q?gn84hV8SZ66p0YEXaHClBPtmJUqZbGHogtcAF2cKowU/QPbriF2ETT5ceXKyU7?=
 =?us-ascii?q?gg6TE8DYKsFZ3DSZy1gLydwCe7GYVbZmJBCl+SC3vodIKEW/EKaCKVOcJhlj0E?=
 =?us-ascii?q?Vb68S44uzx2utQn6y6Z5IerQ4CEXqZXj1N1t7e3JiR4y7SB0D9ia02yVVW50hW?=
 =?us-ascii?q?MIRzg13Kxlu0xy0FWD3LN8g/xZE9xT+vxIXh07NZ7a0+x1FdTyVhjdcdeOTVas?=
 =?us-ascii?q?Ws+mDi0pTtIt398OZF5wG9a4gRDFxSaqB74VmKaNBJw76a/c23nxJ8Bgy3fJzq?=
 =?us-ascii?q?Uhjl8mQtdROm2inKJw6w/TB4vRmUWDi6mqbbgc3DLK9Gqb0GWBpl9YXxBqXaXF?=
 =?us-ascii?q?R38fYFDWosr/5k/FS7+uCrEnMg9axM6GK6tKbMDpjFpcSPfiPtTef3y+m2OqCR?=
 =?us-ascii?q?mUwbOMaZLge38B0yXFFEgEjwcT8G6bOgckGCeuvXjSDDx0GlLpeEPj7+9+pWi/?=
 =?us-ascii?q?Tk81yQGKckJg26C0+h4TmfyTVfcT0qgYtycmrjV+BEy90M7OC9qcuwphe71RYc?=
 =?us-ascii?q?884FdC0mLZqwx9P5y6I6B+nFIedB53v0fv1xVxBYVNiswqrHIszApvJqOUylJB?=
 =?us-ascii?q?dzWE3Z/uPr3bMHX9/Beqa6TOwFHRzM6W+rsT6PQ/s1jspgWpGVQt8np509hZyW?=
 =?us-ascii?q?CT5ojXAwUIV5LxUUE39wZhqrHeYyk94Z7U1HJ2Pam1tD/Cx8wmBO8/xhm8eNdf?=
 =?us-ascii?q?NbuOFBXuHM0CG8iuNOsqlkCpbxIZJuxd6LQ4PsKmd/Sc3q6rM/1tnDanjWRB/Y?=
 =?us-ascii?q?B83ViA9yt6Su7UwZkFx+uU0ReAVzf5lF2hqNz4mZhYZTEOGWqy0TLkBI9NaaJo?=
 =?us-ascii?q?Z4YEFGCuL9exxtpgnZ7tWmdU+0K5CFMCxcCmZwCSb1v73QBL0UQXoHqnmTa3zj?=
 =?us-ascii?q?BukjEpqLaf0zLKw+j4aBUHPWtLTnF4jVjwOYi0k8waXE+wYgkplRup/0b7y7JA?=
 =?us-ascii?q?pKRiKWneWkNIfynwL2F/Xaq8rLuCY8hT6Jw2tSVbSvizYVefSrTluRsVzzvjH3?=
 =?us-ascii?q?dCxDA8bzyquI/2nwZ5iGKeK3Z/tmHZdttzxRfc5dzcQ+Be3jwdSSl8iDnXAEW8?=
 =?us-ascii?q?Ptaz8dWVkZfDrv6xV2a7WpJPdinryJuKtDGn6m1yHR2/g/ezl8XnEAcg1i/3zd?=
 =?us-ascii?q?tqVSTOrBvnZonr1qK6Mf9of0VyBV/87dZ6FZ96kocqmJ4Q3n0ajI2P/XUbiWfz?=
 =?us-ascii?q?Lclb2aXmYXoOXzELwsTZ4Aj42EJ5KHKJyJn0VnGcwstnetm7bXka2iM778BWFq?=
 =?us-ascii?q?iU6KZIkjdyolq9tQjRe+Ryni8Byfsy734Xm+QJuAsuziqHGLwTE1dXPTfwlxuW?=
 =?us-ascii?q?9dCxt7tYZHygcbWr0Ep+nNahDKyNow1GWXb5fIsiEjF07sllLF3M13jz4Jn+eN?=
 =?us-ascii?q?bMddITqgGUkxDYguhJL5Ixk+AGhCt9NmL7oH0l0PU7jR110JG+vYiHLXht/a2j?=
 =?us-ascii?q?Dh5ZMD31e90c+jX3galCmcaW2pilHo99FTUTQJvoUfWoHSoJuvv9MAaOFCA8pm?=
 =?us-ascii?q?2fGbrCBgKf7EZmr3TSE5GkLX2XJX8Zzcl8SxmZPkBQnAcUXDAilJ4jCg+q3NDh?=
 =?us-ascii?q?cFt+5j0J5F73sB5MxfxzNxXlTmfTvgSoaio3SJiCKhpZ9BpC6lzRMcyf6OJzAi?=
 =?us-ascii?q?5Z8oegrAyLNmyUeQBIAXsVVUyDAlDpJqOu6sXY8+iEGuq+KOPDYLWJqexDTveI?=
 =?us-ascii?q?2Iig0o188zaXMcWPOHZiAuY/2kpCW3B5BsvYly8OSywRiyLCccqbqA2g9S1wq8?=
 =?us-ascii?q?C16O7rVx735YuTF7tSNs1i+xCojqeCNO6Qhyd5JSxb1pMWwn/Ix6YQ3EQPiyF1?=
 =?us-ascii?q?bDStFbUAtSjQTKPfgKNXDhgbaz9tO8tM9a4zwg5NOcvDgNPvyrF4luI1C0tCVV?=
 =?us-ascii?q?H5gM6peNcFI3ujO1LHHkqLMLWGKCbPw8H2Z6O8VLJRgP9Vtx22pTaUDUvjMi6f?=
 =?us-ascii?q?mDnuUhClKftMgz2DPBxCpIG9dQ5gCXTiTNLjcBG0LMV7giE2wbIqgHPHLmocMT?=
 =?us-ascii?q?l6c0NQobyc9yJYgvNjG2Nf6nppN/WLmyGc7+PAMJYZreNrAjhol+Jd+Hk7y6Fa?=
 =?us-ascii?q?7CdBRPx0nivdtt9vo1G8nemJxTpqSx5OqjdNhIKWskRuI6TZ9p9cWXna+BIB93?=
 =?us-ascii?q?mfCxMPp4gtNtq6kadKy8OHs7nvMjBc6NHFtZ8WANLVM4SAK2Y7NgTyGy/8CxEM?=
 =?us-ascii?q?Rjqmc2rYghoOvuuV8yiuspU0o57r0KESQ7VWUFg0EPJSXl9+ANUILZNzXzUlub?=
 =?us-ascii?q?2WlsgF4Ty5thaHF5YShYzOSv/HWaanEz2el7QRIkJQmb4=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AfAACNvgFch0O0hNFjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBZYNsJ4xwjRQlFJI7hmwUGBMBgUuGKyI4EgEDAQEBAQEBAgETAQE?=
 =?us-ascii?q?BCA0JCCkjDII2JAGCYgECAwECJBMGAQE3AQUJAQEKGC4DJS8GEwWDHIICBaV7g?=
 =?us-ascii?q?WwzgnYBAQWHJwiKfoEcF4FAP4ERM4JfilyJC4cdkA8JjRqENQyREyyYMYFdgXZ?=
 =?us-ascii?q?9gy+CGwkDF4hehWAfMoECAwEBIRONDAEB?=
X-IPAS-Result: =?us-ascii?q?A0AfAACNvgFch0O0hNFjGgEBAQEBAgEBAQEHAgEBAQGBZYN?=
 =?us-ascii?q?sJ4xwjRQlFJI7hmwUGBMBgUuGKyI4EgEDAQEBAQEBAgETAQEBCA0JCCkjDII2J?=
 =?us-ascii?q?AGCYgECAwECJBMGAQE3AQUJAQEKGC4DJS8GEwWDHIICBaV7gWwzgnYBAQWHJwi?=
 =?us-ascii?q?KfoEcF4FAP4ERM4JfilyJC4cdkA8JjRqENQyREyyYMYFdgXZ9gy+CGwkDF4heh?=
 =?us-ascii?q?WAfMoECAwEBIRONDAEB?=
X-IronPort-AV: E=Sophos;i="5.56,300,1539673200"; 
   d="scan'208";a="55087661"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 30 Nov 2018 14:51:07 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726753AbeLAKBz (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sat, 1 Dec 2018 05:01:55 -0500
Received: from mail.kernel.org ([198.145.29.99]:60688 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726474AbeLAKBz (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 1 Dec 2018 05:01:55 -0500
Received: from localhost (c-67-164-102-47.hsd1.ca.comcast.net [67.164.102.47])
        (using TLSv1 with cipher ECDHE-RSA-AES256-SHA (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id EB33C2082F;
        Fri, 30 Nov 2018 22:51:02 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1543618263;
        bh=d/wwN8QyojM8TZ60cr9NqkDeCyYeIxy46fwdS1usIqE=;
        h=Date:From:To:cc:Subject:In-Reply-To:References:From;
        b=1UXdihqhSSK3ld4zuanFaipdLELEBxjcR5kVIMcsOaNyL1iXpQmaKOxIo0FwAUnNH
         c+OtlZ0jKgWH26uD/TbYToZ7PiRrzEp3/jEWBmqFsQ1wxl2Hztg3Swmo3/4ocOgkkC
         ZaaBSJ36t3ygMTCdrSD2u2Vwn8x9UAMVSYi1uRLk=
Date: Fri, 30 Nov 2018 14:51:01 -0800 (PST)
From: Stefano Stabellini <sstabellini@kernel.org>
X-X-Sender: sstabellini@sstabellini-ThinkPad-X260
To: Boris Ostrovsky <boris.ostrovsky@oracle.com>
cc: Wen Yang <wen.yang99@zte.com.cn>, jgross@suse.com,
        sstabellini@kernel.org, xen-devel@lists.xenproject.org,
        linux-kernel@vger.kernel.org, zhong.weidong@zte.com.cn,
        Julia Lawall <julia.lawall@lip6.fr>
Subject: Re: [PATCH v3] pvcalls-front: Avoid __get_free_pages(GFP_KERNEL)
 under spinlock
In-Reply-To: <810c02f4-4436-79fb-5da1-0cf80f8486d1@oracle.com>
Message-ID: <alpine.DEB.2.10.1811301449570.16463@sstabellini-ThinkPad-X260>
References: <20181130110107.31468-1-wen.yang99@zte.com.cn> <810c02f4-4436-79fb-5da1-0cf80f8486d1@oracle.com>
User-Agent: Alpine 2.10 (DEB 1266 2009-07-14)
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Fri, 30 Nov 2018, Boris Ostrovsky wrote:
> On 11/30/18 6:01 AM, Wen Yang wrote:
> > The problem is that we call this with a spin lock held.
> > The call tree is:
> > pvcalls_front_accept() holds bedata->socket_lock.
> >     -> create_active()
> >         -> __get_free_pages() uses GFP_KERNEL
> >
> > The create_active() function is only called from pvcalls_front_accept()
> > with a spin_lock held, The allocation is not allowed to sleep and
> > GFP_KERNEL is not sufficient.
> >
> > This issue was detected by using the Coccinelle software.
> >
> > v2: Add a function doing the allocations which is called
> >     outside the lock and passing the allocated data to
> >     create_active().
> > v3: Use the matching deallocators i.e., free_page()
> >     and free_pages(), respectively.
> >
> > Suggested-by: Juergen Gross <jgross@suse.com>
> > Signed-off-by: Wen Yang <wen.yang99@zte.com.cn>
> > CC: Julia Lawall <julia.lawall@lip6.fr>
> > CC: Boris Ostrovsky <boris.ostrovsky@oracle.com>
> > CC: Juergen Gross <jgross@suse.com>
> > CC: Stefano Stabellini <sstabellini@kernel.org>
> > CC: xen-devel@lists.xenproject.org
> > CC: linux-kernel@vger.kernel.org
> > ---
> >  drivers/xen/pvcalls-front.c | 71 ++++++++++++++++++++++++++++++-------
> >  1 file changed, 59 insertions(+), 12 deletions(-)
> >
> > diff --git a/drivers/xen/pvcalls-front.c b/drivers/xen/pvcalls-front.c
> > index 2f11ca72a281..a26f416daf46 100644
> > --- a/drivers/xen/pvcalls-front.c
> > +++ b/drivers/xen/pvcalls-front.c
> > @@ -335,7 +335,43 @@ int pvcalls_front_socket(struct socket *sock)
> >  	return ret;
> >  }
> >  
> > -static int create_active(struct sock_mapping *map, int *evtchn)
> > +struct sock_mapping_active_ring {
> > +	struct pvcalls_data_intf *ring;
> > +	RING_IDX ring_order;
> > +	void *bytes;
> > +};
> > +
> > +static int alloc_active_ring(struct sock_mapping_active_ring *active_ring)
> > +{
> > +	active_ring->ring = NULL;
> 
> This is not necessary.
> 
> > +	active_ring->bytes = NULL;
> > +
> > +	active_ring->ring = (struct pvcalls_data_intf *)
> > +		__get_free_page(GFP_KERNEL | __GFP_ZERO);
> > +	if (active_ring->ring == NULL)
> > +		goto out_error;
> > +	active_ring->ring_order = PVCALLS_RING_ORDER;
> > +	active_ring->bytes = (void *)__get_free_pages(GFP_KERNEL | __GFP_ZERO,
> > +			PVCALLS_RING_ORDER);
> > +	if (active_ring->bytes == NULL)
> > +		goto out_error;
> > +
> > +	return 0;
> > +
> > +out_error:
> > +	free_pages((unsigned long)active_ring->bytes, active_ring->ring_order);
> > +	free_page((unsigned long)active_ring->ring);
> > +	return -ENOMEM;
> > +}
> > +
> 
> 
> 
> > @@ -397,6 +427,7 @@ int pvcalls_front_connect(struct socket *sock, struct sockaddr *addr,
> >  	struct sock_mapping *map = NULL;
> >  	struct xen_pvcalls_request *req;
> >  	int notify, req_id, ret, evtchn;
> > +	struct sock_mapping_active_ring active_ring;
> >  
> >  	if (addr->sa_family != AF_INET || sock->type != SOCK_STREAM)
> >  		return -EOPNOTSUPP;
> > @@ -406,15 +437,21 @@ int pvcalls_front_connect(struct socket *sock, struct sockaddr *addr,
> >  		return PTR_ERR(map);
> >  
> >  	bedata = dev_get_drvdata(&pvcalls_front_dev->dev);
> > +	ret = alloc_active_ring(&active_ring);
> 
> Why not just alloc_active_ring(map)?

Yes, I think it would be better to pre-populate map (struct
sock_mapping), rather than introducing one more new struct (struct
sock_mapping_active_ring).
