Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 28 Nov 2018 08:50:01 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 92933580322
	for <like.xu@linux.intel.com>; Tue, 27 Nov 2018 13:24:45 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 27 Nov 2018 13:24:45 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AJWyPVB9xt+aOA/9uRHKM819IXTAuvvDOBiVQ1KB+?=
 =?us-ascii?q?0+0TIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDwULs6Wymt771zRRHoli?=
 =?us-ascii?q?kHKzA3/mLZisNyi6xboQ6uqRNwzIDJeIGYNvhwc6zAcd4UWWZOQN1RWjddAoOl?=
 =?us-ascii?q?dYYDE/AMMfpFo4T7ulAArQG+BQ6pBO731jJIgn723bYm0+s7EAHGxhErEdIUsH?=
 =?us-ascii?q?vOqtX6KKYSUfuox6TP0TjDa/JW2Szh6IfScxAhu+uAU7JqccXLz0kgCwLFjk6L?=
 =?us-ascii?q?pI3rIjyayv4BvHSc7+plTO+ijXMspQJpojW32MsglorEipgIxlzZ9ih12pg5KN?=
 =?us-ascii?q?O4RUJhfNKpEoNcuzyeOoZyWM8uXWFltSYgxrAJtpO3ZjYGxZQ7yxLHZfyIbYuF?=
 =?us-ascii?q?7g7mWeuUPDh0mXxod6+6ihqv9UWv1+PxW8y60FlWqidInNzBum4T2BPP6sWKTO?=
 =?us-ascii?q?Z28F271jaVzQ/T7/lJIUAqmqrfLJ4s2rowlpsIsUTfBS/6gkr2jKmLdkk+/eio?=
 =?us-ascii?q?8evnbq3npp+aKYB0lhnzProylsG8G+g0LxUCUmuB9eii2rDu/Vf1TKhIg/Eul6?=
 =?us-ascii?q?nWqpHaJcAVpq6jBA9V154u6w+hADejzdQUhGQII0xbeB2Zi4jlIkrBIPflDfe5?=
 =?us-ascii?q?n1ujjixry/fCPr3gAZXCMGLPkbj8fbtl705cyQwzzc1Q5p5OC7EBJu7zVVH1tN?=
 =?us-ascii?q?DCEhA5NAm0zv3hCNV60IMeVmSPArKDPKPVq1+I6fojI/OQa48NpDb9N/8l6ubq?=
 =?us-ascii?q?jX84ml8SY7Ol3JQKaH2jGvRmIkOZYWfjg9sbEGcKuBY+Q/LuiFGYTTFTYHOyDO?=
 =?us-ascii?q?oB4ComAtemEZvbXdLqx7iAxzugWJtRYG9AFxaLC3ivcoyFX/IFbmWVOtNglTof?=
 =?us-ascii?q?EqGsTpJk2RywuQup9rx8M+CB/yQZsY7khsF44vCWmRws+DgxFcmEzmyWU0lymW?=
 =?us-ascii?q?UHQSJw27pw9ldgwFWO2rQtnvpDCNZI7OlIWAppCZmJhfV3Ds23Vg/fc9OhTlGg?=
 =?us-ascii?q?TdO7RzYrQZh5l8YDZls4F9i8gxTr2S2sDLkI0buRC8pwuujF0n3sYtx80H3Y/K?=
 =?us-ascii?q?8miVYgX41IL2Lszvpm+g3OQpTIiE6Hv6Ctc6sawWjK7mjVnkSUu0QNeQpxSrnM?=
 =?us-ascii?q?XGpXSFHfq9/4/QuWZruvEqguMxEH59SLLKBLcfX2gV4AT/DmboeNK1mtknu9UE?=
 =?us-ascii?q?7bjoiHa5DnLj0Q?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BVAAA9tf1bhxHrdtBkHQEBBQEHBQGBU?=
 =?us-ascii?q?wYBCwGBMFCCEgqHNgOFLYpfSoMJlkSBJANMEwEYFIdaIjYHDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCgsJCBsOIwyCNgUCAxgJglwCAQMBAg8uAQEECgMmAQIDAQIGAQEBAUYIA?=
 =?us-ascii?q?wEuJQIEARIFHYJ/gWoDFQEEmmMCYAKKBgEBgh6CdgEBBYJDgk0YggkIh2KDD4E?=
 =?us-ascii?q?cgVc/gREzgiqLEY9kkCoHAoIgjyiRC5gQAgQCBAUCDQEBBYFNAYIFHxQaI4M8g?=
 =?us-ascii?q?hsMF4NKilNygQchihgqLFgBgR4BAQ?=
X-IPAS-Result: =?us-ascii?q?A0BVAAA9tf1bhxHrdtBkHQEBBQEHBQGBUwYBCwGBMFCCEgq?=
 =?us-ascii?q?HNgOFLYpfSoMJlkSBJANMEwEYFIdaIjYHDQEDAQEBAQEBAgETAQEBCgsJCBsOI?=
 =?us-ascii?q?wyCNgUCAxgJglwCAQMBAg8uAQEECgMmAQIDAQIGAQEBAUYIAwEuJQIEARIFHYJ?=
 =?us-ascii?q?/gWoDFQEEmmMCYAKKBgEBgh6CdgEBBYJDgk0YggkIh2KDD4EcgVc/gREzgiqLE?=
 =?us-ascii?q?Y9kkCoHAoIgjyiRC5gQAgQCBAUCDQEBBYFNAYIFHxQaI4M8ghsMF4NKilNygQc?=
 =?us-ascii?q?hihgqLFgBgR4BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,288,1539673200"; 
   d="scan'208";a="64254733"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mga01b.intel.com with ESMTP/TLS/AES256-SHA; 27 Nov 2018 13:24:44 -0800
Received: from localhost ([::1]:44569 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gRkqZ-0003y1-N8
	for like.xu@linux.intel.com; Tue, 27 Nov 2018 16:24:43 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:37288)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <prvs=862abf4e0=Alistair.Francis@wdc.com>)
	id 1gRkcV-0006dT-FH
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 16:10:12 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <prvs=862abf4e0=Alistair.Francis@wdc.com>)
	id 1gRkcS-0005T8-8z
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 16:10:11 -0500
Received: from esa4.hgst.iphmx.com ([216.71.154.42]:12810)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <prvs=862abf4e0=Alistair.Francis@wdc.com>)
	id 1gRkcR-0005RC-Vs; Tue, 27 Nov 2018 16:10:08 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple;
	d=wdc.com; i=@wdc.com; q=dns/txt; s=dkim.wdc.com;
	t=1543353009; x=1574889009;
	h=from:to:cc:subject:date:message-id:references:
	in-reply-to:content-transfer-encoding:mime-version;
	bh=IsndXcf98N9AecauFztAnNmKZpPG0GGaJWujY/ofxGU=;
	b=LLlN+HkUmYsCrxfIxRYX5ASGAkEFji3cxaHEE4uCDloNDHhGDTIvNz9q
	uGcNXhCUe+8i2o5RCwVEhszG74lIJ/mA1mE4nKGLmSUvLiagNA7PizqNx
	dT+Woj4VHRzsldfHZbka5rWBb1PPZoDA/ntbw434A/Gw5O2g3sPmeNA22
	qhOgdZN5HYfLSQheVVRLaXKsgnx35Gh7oK+i5BZiBebkPEfXQ3ZuLamlz
	BAAN666x+TIFw/tNB16rvmlP8zYNcKQEDIQ/ZnZQWN5RoggU4f6TzDgh5
	dHEpgp6UIVW7ZQJBwYQjOWEdFrgE+IJ4zJV1XYTCWFccOnIkoAJuSlp3G Q==;
X-IronPort-AV: E=Sophos;i="5.56,287,1539619200"; d="scan'208";a="95245114"
Received: from mail-cys01nam02lp0047.outbound.protection.outlook.com (HELO
	NAM02-CY1-obe.outbound.protection.outlook.com) ([207.46.163.47])
	by ob1.hgst.iphmx.com with ESMTP; 28 Nov 2018 05:10:07 +0800
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=sharedspace.onmicrosoft.com; s=selector1-wdc-com;
	h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
	bh=EpbkAQIFjMBaniYPvk9XCab82If7MVn9Kqxs2xSgllQ=;
	b=gKdDR45gDLD8bGgyeaGoeiMG92fLIPPvDYwnZjXc0VcWIxLTyR2Xe1vncQJOmheVSqcR2ZG5aqNG/drGkPB/z62a0shTX43g0Qrjdg7PdH+G5EEHooan14vX3SAaVqNawa9w0BU4IZLbG1EJgoLkzmWWCLTG3kwXZoM1GLAE0fA=
Received: from MWHPR04MB0401.namprd04.prod.outlook.com (10.173.48.18) by
	MWHPR04MB0639.namprd04.prod.outlook.com (10.172.166.140) with Microsoft
	SMTP
	Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
	15.20.1361.15; Tue, 27 Nov 2018 21:10:05 +0000
Received: from MWHPR04MB0401.namprd04.prod.outlook.com
	([fe80::d13d:19d3:fc93:2ec5]) by
	MWHPR04MB0401.namprd04.prod.outlook.com
	([fe80::d13d:19d3:fc93:2ec5%9]) with mapi id 15.20.1361.019;
	Tue, 27 Nov 2018 21:10:05 +0000
From: Alistair Francis <Alistair.Francis@wdc.com>
To: "qemu-devel@nongnu.org" <qemu-devel@nongnu.org>, "qemu-riscv@nongnu.org"
	<qemu-riscv@nongnu.org>
Thread-Topic: [RFC v2 23/24] WIP: Add missing instructions
Thread-Index: AQHUhpWRsL6s+JdvB0eLwjeD9gbEcg==
Date: Tue, 27 Nov 2018 21:10:05 +0000
Message-ID: <46fe7e6cef5c03c2165feaf400cca797ee1b10f9.1543352682.git.alistair.francis@wdc.com>
References: <cover.1543352682.git.alistair.francis@wdc.com>
In-Reply-To: <cover.1543352682.git.alistair.francis@wdc.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-mailer: git-send-email 2.19.1
x-clientproxiedby: BYAPR11CA0097.namprd11.prod.outlook.com
	(2603:10b6:a03:f4::38) To MWHPR04MB0401.namprd04.prod.outlook.com
	(2603:10b6:300:70::18)
authentication-results: spf=none (sender IP is )
	smtp.mailfrom=Alistair.Francis@wdc.com; 
x-ms-exchange-messagesentrepresentingtype: 1
x-originating-ip: [199.255.44.250]
x-ms-publictraffictype: Email
x-microsoft-exchange-diagnostics: 1; MWHPR04MB0639;
	6:+c5o1zJK1Lq1AKD4G1FCZrEjjh5kQg4rX4MPGYnJhZ1MV9PoAYtIA2yBdJbb166JFkc6YyEP1Yj6UCFNNzQLYZ54sVkElI5gfjbE4jNpPah9YREKkK9qbAUWe+mLzJs18XUlxyPC/SaB5ofiJr62HCTPEmze0b9xgwpO0MH6oRlzUGtVdaSu9FFbgOqz3B9INDYQSzcdVWosogPRxTImNRg60oZM44fIvY18M4Ce3kmTVtsEI76pd7YCB6TwOn7xb6fg/oTqsQPnnapKlePVqGh9D2xH+5Pk92YzN02Jeu5lOTauliW5rIHEi7V+J5mbmQGhip7sViaSrQ1vEG5x+q4xcM4PVK8Pv7tWANKO+o/pemykT458H2MH6Exe5Xrrq9QLfXuA86lTlaHk5PUbXQ0q8D9qBhRq/8p3lxSg9J1Tj5AuVDGuWxLEhthwFl8hOrWbjYh9cGrYORTJCScqkA==;
	5:rZPD87WQcL1+j2QlPljHMpfrBS6RPIKY1Yf2idq9wgZvK4TfZFz9151oyTYG+NIbWzN+/Sk/stzApFfn5GPpz9HurznUfkZKZ3IeJmfeUq37rwFnRdr8paAmn6fKesYofnk6gBFQpzSEmH4xoOMW2j8Q6jafLUrFF51IVBaO2TQ=;
	7:CQlVCaPX949cKk3CobchMVQrEokq0x3pOJp3Z6e0KZOABEEQnq3s87nUflMcuWqbg33S2KFpUzHSNJJDPlRxobMF01eoVfo5Fjy5QodaTSh9rbYa2dQVlV1RTWuurBT4/fZIx+vE5PcG88yNQ/Z6kA==
x-ms-office365-filtering-correlation-id: b6fcbc7d-f347-4e01-e28d-08d654acb3ed
x-ms-office365-filtering-ht: Tenant
x-microsoft-antispam: BCL:0; PCL:0;
	RULEID:(2390098)(7020095)(4652040)(8989299)(5600074)(711020)(4618075)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(2017052603328)(7153060)(7193020);
	SRVR:MWHPR04MB0639; 
x-ms-traffictypediagnostic: MWHPR04MB0639:
wdcipoutbound: EOP-TRUE
x-microsoft-antispam-prvs: <MWHPR04MB063971BCD806F5FA8F3F10F490D00@MWHPR04MB0639.namprd04.prod.outlook.com>
x-ms-exchange-senderadcheck: 1
x-exchange-antispam-report-cfa-test: BCL:0; PCL:0;
	RULEID:(8211001083)(6040522)(2401047)(5005006)(8121501046)(3002001)(10201501046)(93006095)(93001095)(3231443)(944501410)(52105112)(6055026)(148016)(149066)(150057)(6041310)(20161123558120)(20161123562045)(20161123564045)(201703131423095)(201702281528075)(20161123555045)(201703061421075)(201703061406153)(20161123560045)(201708071742011)(7699051)(76991095);
	SRVR:MWHPR04MB0639; BCL:0; PCL:0; RULEID:; SRVR:MWHPR04MB0639; 
x-forefront-prvs: 086943A159
x-forefront-antispam-report: SFV:NSPM;
	SFS:(10019020)(39860400002)(136003)(376002)(346002)(396003)(366004)(199004)(189003)(86362001)(6436002)(53936002)(97736004)(6512007)(2906002)(66066001)(8676002)(8936002)(81166006)(81156014)(50226002)(54906003)(110136005)(5660300001)(316002)(575784001)(118296001)(7736002)(2501003)(6486002)(68736007)(305945005)(36756003)(478600001)(72206003)(71190400001)(71200400001)(52116002)(76176011)(6116002)(386003)(6506007)(102836004)(44832011)(2616005)(476003)(3846002)(26005)(186003)(486006)(14454004)(99286004)(446003)(25786009)(106356001)(14444005)(39060400002)(105586002)(256004)(11346002)(4326008);
	DIR:OUT; SFP:1102; SCL:1; SRVR:MWHPR04MB0639;
	H:MWHPR04MB0401.namprd04.prod.outlook.com; FPR:; SPF:None;
	LANG:en; PTR:InfoNoRecords; A:1; MX:1; 
x-microsoft-antispam-message-info: OToH6bX6xgpmY3jtGA0wKiGPkGfkbQ5nALaVOYwkpaUlRcs40N/7GZvAkVb3s0zBhmChAPi6PGhtmJnDHJtrx79tmJ+Hh0P6XfDOGjahp5V80+SV/391FCYb2fOjAI6qEmaTTxfk1fFLLKujNrZmOg+256M06XZyAAdA6HlXVGgys9VlAzOnmuGgsniFO0X4do6Jk5dEj4TL076N7x4TwSfrcKkPvIFlFPuFD+7HEfVWj7M0Z+mXJyr1sx7V2WIg4nGocBs32wjowIaKLM69DvwcV6uYyzJKg+io1KsC+Kapw52CQMErdqmRAlavSNBMtgOFlGnTWnlGA3oWKMGHj03Or/C8e+tjdlBeeM2qQII=
spamdiagnosticoutput: 1:99
spamdiagnosticmetadata: NSPM
Content-Type: text/plain; charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
X-OriginatorOrg: wdc.com
X-MS-Exchange-CrossTenant-Network-Message-Id: b6fcbc7d-f347-4e01-e28d-08d654acb3ed
X-MS-Exchange-CrossTenant-originalarrivaltime: 27 Nov 2018 21:10:05.2604 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: b61c8803-16f3-4c35-9b17-6f65f441df86
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MWHPR04MB0639
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 216.71.154.42
Subject: [Qemu-devel] [RFC v2 23/24] WIP: Add missing instructions
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: "alistair23@gmail.com" <alistair23@gmail.com>,
	"richard.henderson@linaro.org" <richard.henderson@linaro.org>,
	Alistair Francis <Alistair.Francis@wdc.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Signed-off-by: Alistair Francis <alistair.francis@wdc.com>
---
 tcg/riscv/tcg-target.inc.c | 77 ++++++++++++++++++++++++++++++++++++++
 1 file changed, 77 insertions(+)

diff --git a/tcg/riscv/tcg-target.inc.c b/tcg/riscv/tcg-target.inc.c
index 13756f6d0d..b8e9c0e126 100644
--- a/tcg/riscv/tcg-target.inc.c
+++ b/tcg/riscv/tcg-target.inc.c
@@ -606,6 +606,57 @@ static bool tcg_out_sti(TCGContext *s, TCGType type, T=
CGArg val,
     return false;
 }
=20
+static void tcg_out_addsub2(TCGContext *s,
+                            TCGReg rl, TCGReg rh,
+                            TCGReg al, TCGReg ah,
+                            TCGReg bl, TCGReg bh,
+                            bool cbl, bool cbh, bool is_sub)
+{
+    /* FIXME: This is just copied from MIPS */
+    TCGReg th =3D TCG_REG_TMP1;
+
+    /* If we have a negative constant such that negating it would
+       make the high part zero, we can (usually) eliminate one insn.  */
+    if (cbl && cbh && bh =3D=3D -1 && bl !=3D 0) {
+        bl =3D -bl;
+        bh =3D 0;
+        is_sub =3D !is_sub;
+    }
+
+    /* By operating on the high part first, we get to use the final
+       carry operation to move back from the temporary.  */
+    if (!cbh) {
+        tcg_out_opc_reg(s, (is_sub ? OPC_SUB : OPC_ADDI), th, ah, bh);
+    } else if (bh !=3D 0 || ah =3D=3D rl) {
+        tcg_out_opc_imm(s, OPC_ADDI, th, ah, (is_sub ? -bh : bh));
+    } else {
+        th =3D ah;
+    }
+
+    if (is_sub) {
+        if (cbl) {
+            tcg_out_opc_imm(s, OPC_SLLI, TCG_REG_TMP0, al, bl);
+            tcg_out_opc_imm(s, OPC_ADDI, rl, al, -bl);
+        } else {
+            tcg_out_opc_reg(s, OPC_SLLI, TCG_REG_TMP0, al, bl);
+            tcg_out_opc_reg(s, OPC_SUB, rl, al, bl);
+        }
+        tcg_out_opc_reg(s, OPC_SUB, rh, th, TCG_REG_TMP0);
+    } else {
+        if (cbl) {
+            tcg_out_opc_imm(s, OPC_ADDI, rl, al, bl);
+            tcg_out_opc_imm(s, OPC_SLLI, TCG_REG_TMP0, rl, bl);
+        } else if (rl =3D=3D al && rl =3D=3D bl) {
+            tcg_out_opc_imm(s, OPC_SRLI, TCG_REG_TMP0, al, 31);
+            tcg_out_opc_reg(s, OPC_ADDI, rl, al, bl);
+        } else {
+            tcg_out_opc_reg(s, OPC_ADDI, rl, al, bl);
+            tcg_out_opc_reg(s, OPC_SLLI, TCG_REG_TMP0, rl, (rl =3D=3D bl ?=
 al : bl));
+        }
+        tcg_out_opc_reg(s, OPC_ADDI, rh, th, TCG_REG_TMP0);
+    }
+}
+
 static const struct {
     RISCVInsn op;
     bool swap;
@@ -1384,6 +1435,18 @@ static void tcg_out_op(TCGContext *s, TCGOpcode opc,
         }
         break;
=20
+    case INDEX_op_add2_i32:
+    case INDEX_op_add2_i64:
+        tcg_out_addsub2(s, a0, a1, a2, args[3], args[4], args[5],
+                        const_args[4], const_args[5], false);
+        break;
+
+    case INDEX_op_sub2_i32:
+    case INDEX_op_sub2_i64:
+        tcg_out_addsub2(s, a0, a1, a2, args[3], args[4], args[5],
+                        const_args[4], const_args[5], true);
+        break;
+
     case INDEX_op_brcond_i32:
     case INDEX_op_brcond_i64:
         tcg_out_brcond(s, a2, a0, a1, arg_label(args[3]));
@@ -1439,6 +1502,8 @@ static void tcg_out_op(TCGContext *s, TCGOpcode opc,
         break;
=20
     case INDEX_op_ext32s_i64:
+    case INDEX_op_extrl_i64_i32:
+    case INDEX_op_extrh_i64_i32:
     case INDEX_op_ext_i32_i64:
         tcg_out_ext32s(s, a0, a1);
         break;
@@ -1505,6 +1570,8 @@ static const TCGTargetOpDef *tcg_target_op_def(TCGOpc=
ode op)
         =3D { .args_ct_str =3D { "LZ", "LZ", "L" } };
     static const TCGTargetOpDef LZ_LZ_L_L
         =3D { .args_ct_str =3D { "LZ", "LZ", "L", "L" } };
+    static const TCGTargetOpDef rZ_rZ_rZ_rZ_rZ_rZ
+        =3D { .args_ct_str =3D { "rZ", "rZ", "rZ", "rZ", "rZ", "rZ" } };
=20
     switch (op) {
     case INDEX_op_goto_ptr:
@@ -1537,6 +1604,8 @@ static const TCGTargetOpDef *tcg_target_op_def(TCGOpc=
ode op)
     case INDEX_op_ext16s_i32:
     case INDEX_op_ext16s_i64:
     case INDEX_op_ext32s_i64:
+    case INDEX_op_extrl_i64_i32:
+    case INDEX_op_extrh_i64_i32:
     case INDEX_op_ext_i32_i64:
         return &r_r;
=20
@@ -1593,6 +1662,14 @@ static const TCGTargetOpDef *tcg_target_op_def(TCGOp=
code op)
     case INDEX_op_brcond_i64:
         return &rZ_rZ;
=20
+    case INDEX_op_add2_i32:
+    case INDEX_op_add2_i64:
+        return &rZ_rZ_rZ_rZ_rZ_rZ;
+
+    case INDEX_op_sub2_i32:
+    case INDEX_op_sub2_i64:
+        return &rZ_rZ_rZ_rZ_rZ_rZ;
+
     case INDEX_op_brcond2_i32:
         return &rZ_rZ_rZ_rZ;
=20
--=20
2.19.1


