Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 28 Nov 2018 08:50:50 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 1D30F580460
	for <like.xu@linux.intel.com>; Tue, 27 Nov 2018 16:31:49 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 27 Nov 2018 16:31:48 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AAwpLAB8Lb/9yO/9uRHKM819IXTAuvvDOBiVQ1KB+?=
 =?us-ascii?q?0+sRIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDwULs6Wymt771zRRHmiC?=
 =?us-ascii?q?kJKT038G/YhcNska1UohyuqQFnw4PWYo+YO+dyc63BcdwEXmpMRclRWzBbD46m?=
 =?us-ascii?q?c4cCFfcNMOBFpIf9vVsOqh6+CBGiCuz11D9Ih2L51rA73eQgCg7GxwsgH9QTu3?=
 =?us-ascii?q?nTsdr6LrkSUeGow6TTwjXDbuhZ2Sz66IjOaBwuvOuMXbVoccXK10YgDRnFgk+R?=
 =?us-ascii?q?qYP4JT+azPkNvnGd4uF9W+yvjGsnpBtwojip3sosjYjIhoYPxV/f7iV12oE1Jc?=
 =?us-ascii?q?e3SEJjfNGkCpxQtzmBOIRoWMwiWXtkuCcnxbAApJW1fzAKxYw5yxLDaPGLaZWE?=
 =?us-ascii?q?7g/gWeqLPzt1inJodKiiixuw6USs1OLxWtWp3FtPoCdIlsXAumwI2hDN78WLV/?=
 =?us-ascii?q?5w80K/1TuJygvd8PtLIVoumqreM5MhwqA/lp4UsUnbGi/2mV72jLONdkk+9eio?=
 =?us-ascii?q?7fnnbq/hpp+GOI94kgD+MqIwlcyjGek0LBQCUmuB9eihybHu/lf1TKtEg/A2iK?=
 =?us-ascii?q?XVrZLXKdwepqGjAg9V1ogj6wy4DzejyNkYhGcILFdYeB6ekofmJU/OL+78Dfum?=
 =?us-ascii?q?mFuslyprx/baMbL/GZXBKXzDkLbifblj8UJdxxczwMhb55JVDLEBPf3yVlXwtN?=
 =?us-ascii?q?zeEh82LQi0z/z7B9V604MTQmSPAqifMKPdt1+I+/gjI+6WZI8aoDr9MeQq5+by?=
 =?us-ascii?q?jX8lnl8QZa2p3ZoUaH+mBPhnLFiZbGHogtcAF2cKowU/QPbriF2ETT5ceXKyU7?=
 =?us-ascii?q?gg6TE8DYL1RbrFXZ2n1bydwD+gTNoRYmFdFkvKF3DueIOZHfAWZ2WXK85llzUC?=
 =?us-ascii?q?Er+5V44m0wrprQL/1v9rI/TZ/n4ls4n+3o1w7uzXiRZg7DFxEoGR3n+ASyRuk3?=
 =?us-ascii?q?oVSiQq9KZ4p0N71xGEy6cvmOFSF9FY+6ZUVBwnP4XX1e1wBoPOXVfq/9uTSV3u?=
 =?us-ascii?q?ZtjuLjY4Ut8ri4sFZ0lVGNylglbExSX8UJEPkLneKJUq866U8Hn7PMF7gyLK3b?=
 =?us-ascii?q?cgg3EpQ8FUMmvgirR47wLeDpSPkknfnrv8JvdU5zLE6GrWlTnGh0pfSgMlCag?=
 =?us-ascii?q?=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AHAAAF4f1bhxHrdtBkFgUBAQEBAwEBA?=
 =?us-ascii?q?QcDAQEBgVEGAQEBCwGBMCqBD4EpjBFfjTaXQBSBXwINBRgHDYdaIjQJDQEDAQE?=
 =?us-ascii?q?BAQEBAgETAQEBCgsJCBsOIwyCNgUCAxgJglwBAgMBAiQZAQEECikBAgMBAgYBA?=
 =?us-ascii?q?QoYCRoDCAMBCwUYMRMFBIJNSwGCAQEEpVSBbDOCdgEBBYc0BwiCbYgEgRwXgX+?=
 =?us-ascii?q?BEYMShEoghXKJBZcJCYIghF2KKQsYX3pNjmWJb4YliCSBRoINMxoIFxmDJwmCE?=
 =?us-ascii?q?gwXEm0BB32GWoVTLTGBBAOKClaBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AHAAAF4f1bhxHrdtBkFgUBAQEBAwEBAQcDAQEBgVEGAQE?=
 =?us-ascii?q?BCwGBMCqBD4EpjBFfjTaXQBSBXwINBRgHDYdaIjQJDQEDAQEBAQEBAgETAQEBC?=
 =?us-ascii?q?gsJCBsOIwyCNgUCAxgJglwBAgMBAiQZAQEECikBAgMBAgYBAQoYCRoDCAMBCwU?=
 =?us-ascii?q?YMRMFBIJNSwGCAQEEpVSBbDOCdgEBBYc0BwiCbYgEgRwXgX+BEYMShEoghXKJB?=
 =?us-ascii?q?ZcJCYIghF2KKQsYX3pNjmWJb4YliCSBRoINMxoIFxmDJwmCEgwXEm0BB32GWoV?=
 =?us-ascii?q?TLTGBBAOKClaBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,288,1539673200"; 
   d="asc'?scan'208";a="53593558"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 27 Nov 2018 16:31:47 -0800
Received: from localhost ([::1]:45192 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gRnla-00035V-TP
	for like.xu@linux.intel.com; Tue, 27 Nov 2018 19:31:46 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:43950)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <dgibson@ozlabs.org>) id 1gRnlD-00034b-FR
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 19:31:24 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <dgibson@ozlabs.org>) id 1gRnlB-00085U-Vq
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 19:31:23 -0500
Received: from ozlabs.org ([2401:3900:2:1::2]:33103)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <dgibson@ozlabs.org>)
	id 1gRnlB-00082i-3m; Tue, 27 Nov 2018 19:31:21 -0500
Received: by ozlabs.org (Postfix, from userid 1007)
	id 434M5Z2w1Qz9s4s; Wed, 28 Nov 2018 11:31:14 +1100 (AEDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
	d=gibson.dropbear.id.au; s=201602; t=1543365074;
	bh=/D1cMHBZsHqO4WxbL+LVUW9DekE4FVYlZPCkQGLYxeM=;
	h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
	b=jijfvyhxK8DFYL482gQyGt/yN5Reay9joTZMmqHCHNLjzt2vULgfNQ1xtfELeEfLs
	xWI7gRIEDu1ivM4Kofdye/Bp18eVkq2ecRmufaClxf51yZoPR2GFQMWS15nDpO7zJ4
	rOCQn/d2F5Z24gzF4Ne5h2TJ0r8LBp9E+HCStnPE=
Date: Wed, 28 Nov 2018 11:13:24 +1100
From: David Gibson <david@gibson.dropbear.id.au>
To: =?iso-8859-1?Q?C=E9dric?= Le Goater <clg@kaod.org>
Message-ID: <20181128001324.GS2251@umbus.fritz.box>
References: <20181116105729.23240-1-clg@kaod.org>
	<20181116105729.23240-10-clg@kaod.org>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
	protocol="application/pgp-signature"; boundary="H88uUF932U8Oj0a6"
Content-Disposition: inline
In-Reply-To: <20181116105729.23240-10-clg@kaod.org>
User-Agent: Mutt/1.10.1 (2018-07-13)
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2401:3900:2:1::2
Subject: Re: [Qemu-devel] [PATCH v5 09/36] ppc/xive: notify the CPU when the
 interrupt priority is more privileged
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-ppc@nongnu.org, qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>


--H88uUF932U8Oj0a6
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

On Fri, Nov 16, 2018 at 11:57:02AM +0100, C=E9dric Le Goater wrote:
> After the event data was pushed in the O/S Event Queue, the IVPE
> raises the bit corresponding to the priority of the pending interrupt
> in the register IBP (Interrupt Pending Buffer) to indicate there is an
> event pending in one of the 8 priority queues. The Pending Interrupt
> Priority Register (PIPR) is also updated using the IPB. This register
> represent the priority of the most favored pending notification.
>=20
> The PIPR is then compared to the the Current Processor Priority
> Register (CPPR). If it is more favored (numerically less than), the
> CPU interrupt line is raised and the EO bit of the Notification Source
> Register (NSR) is updated to notify the presence of an exception for
> the O/S. The check needs to be done whenever the PIPR or the CPPR are
> changed.
>=20
> The O/S acknowledges the interrupt with a special load in the Thread
> Interrupt Management Area. If the EO bit of the NSR is set, the CPPR
> takes the value of PIPR. The bit number in the IBP corresponding to
> the priority of the pending interrupt is reseted and so is the EO bit
> of the NSR.
>=20
> Signed-off-by: C=E9dric Le Goater <clg@kaod.org>
> ---
>  hw/intc/xive.c | 94 +++++++++++++++++++++++++++++++++++++++++++++++++-
>  1 file changed, 93 insertions(+), 1 deletion(-)
>=20
> diff --git a/hw/intc/xive.c b/hw/intc/xive.c
> index 5ba3b06e6e25..c49932d2b799 100644
> --- a/hw/intc/xive.c
> +++ b/hw/intc/xive.c
> @@ -21,9 +21,73 @@
>   * XIVE Thread Interrupt Management context
>   */
> =20
> +/* Convert a priority number to an Interrupt Pending Buffer (IPB)
> + * register, which indicates a pending interrupt at the priority
> + * corresponding to the bit number
> + */
> +static uint8_t priority_to_ipb(uint8_t priority)
> +{
> +    return priority > XIVE_PRIORITY_MAX ?
> +        0 : 1 << (XIVE_PRIORITY_MAX - priority);
> +}
> +
> +/* Convert an Interrupt Pending Buffer (IPB) register to a Pending
> + * Interrupt Priority Register (PIPR), which contains the priority of
> + * the most favored pending notification.
> + */
> +static uint8_t ipb_to_pipr(uint8_t ibp)
> +{
> +    return ibp ? clz32((uint32_t)ibp << 24) : 0xff;
> +}
> +
> +static void ipb_update(uint8_t *regs, uint8_t priority)
> +{
> +    regs[TM_IPB] |=3D priority_to_ipb(priority);
> +    regs[TM_PIPR] =3D ipb_to_pipr(regs[TM_IPB]);
> +}
> +
> +static uint8_t exception_mask(uint8_t ring)
> +{
> +    switch (ring) {
> +    case TM_QW1_OS:
> +        return TM_QW1_NSR_EO;
> +    default:
> +        g_assert_not_reached();
> +    }
> +}
> +
>  static uint64_t xive_tctx_accept(XiveTCTX *tctx, uint8_t ring)
>  {
> -    return 0;
> +    uint8_t *regs =3D &tctx->regs[ring];
> +    uint8_t nsr =3D regs[TM_NSR];
> +    uint8_t mask =3D exception_mask(ring);
> +
> +    qemu_irq_lower(tctx->output);
> +
> +    if (regs[TM_NSR] & mask) {
> +        uint8_t cppr =3D regs[TM_PIPR];
> +
> +        regs[TM_CPPR] =3D cppr;
> +
> +        /* Reset the pending buffer bit */
> +        regs[TM_IPB] &=3D ~priority_to_ipb(cppr);
> +        regs[TM_PIPR] =3D ipb_to_pipr(regs[TM_IPB]);
> +
> +        /* Drop Exception bit */
> +        regs[TM_NSR] &=3D ~mask;
> +    }
> +
> +    return (nsr << 8) | regs[TM_CPPR];

Don't you need a cast to avoid (nsr << 8) being a shift-wider-than-size?

> +}
> +
> +static void xive_tctx_notify(XiveTCTX *tctx, uint8_t ring)
> +{
> +    uint8_t *regs =3D &tctx->regs[ring];
> +
> +    if (regs[TM_PIPR] < regs[TM_CPPR]) {
> +        regs[TM_NSR] |=3D exception_mask(ring);
> +        qemu_irq_raise(tctx->output);
> +    }
>  }
> =20
>  static void xive_tctx_set_cppr(XiveTCTX *tctx, uint8_t ring, uint8_t cpp=
r)
> @@ -33,6 +97,9 @@ static void xive_tctx_set_cppr(XiveTCTX *tctx, uint8_t =
ring, uint8_t cppr)
>      }
> =20
>      tctx->regs[ring + TM_CPPR] =3D cppr;
> +
> +    /* CPPR has changed, check if we need to raise a pending exception */
> +    xive_tctx_notify(tctx, ring);
>  }
> =20
>  /*
> @@ -198,6 +265,17 @@ static void xive_tm_set_os_cppr(XiveTCTX *tctx, hwad=
dr offset,
>      xive_tctx_set_cppr(tctx, TM_QW1_OS, value & 0xff);
>  }
> =20
> +/*
> + * Adjust the IPB to allow a CPU to process event queues of other
> + * priorities during one physical interrupt cycle.
> + */
> +static void xive_tm_set_os_pending(XiveTCTX *tctx, hwaddr offset,
> +                                   uint64_t value, unsigned size)
> +{
> +    ipb_update(&tctx->regs[TM_QW1_OS], value & 0xff);
> +    xive_tctx_notify(tctx, TM_QW1_OS);
> +}
> +
>  /*
>   * Define a mapping of "special" operations depending on the TIMA page
>   * offset and the size of the operation.
> @@ -220,6 +298,7 @@ static const XiveTmOp xive_tm_operations[] =3D {
> =20
>      /* MMIOs above 2K : special operations with side effects */
>      { XIVE_TM_OS_PAGE, TM_SPC_ACK_OS_REG,     2, NULL, xive_tm_ack_os_re=
g },
> +    { XIVE_TM_OS_PAGE, TM_SPC_SET_OS_PENDING, 1, xive_tm_set_os_pending,=
 NULL },
>  };
> =20
>  static const XiveTmOp *xive_tm_find_op(hwaddr offset, unsigned size, boo=
l write)
> @@ -409,6 +488,13 @@ static void xive_tctx_reset(void *dev)
>      tctx->regs[TM_QW1_OS + TM_LSMFB] =3D 0xFF;
>      tctx->regs[TM_QW1_OS + TM_ACK_CNT] =3D 0xFF;
>      tctx->regs[TM_QW1_OS + TM_AGE] =3D 0xFF;
> +
> +    /*
> +     * Initialize PIPR to 0xFF to avoid phantom interrupts when the
> +     * CPPR is first set.
> +     */
> +    tctx->regs[TM_QW1_OS + TM_PIPR] =3D
> +        ipb_to_pipr(tctx->regs[TM_QW1_OS + TM_IPB]);
>  }
> =20
>  static void xive_tctx_realize(DeviceState *dev, Error **errp)
> @@ -1218,9 +1304,15 @@ static void xive_presenter_notify(XiveRouter *xrtr=
, uint8_t format,
>      found =3D xive_presenter_match(xrtr, format, nvt_blk, nvt_idx, cam_i=
gnore,
>                                   priority, logic_serv, &match);
>      if (found) {
> +        ipb_update(&match.tctx->regs[match.ring], priority);
> +        xive_tctx_notify(match.tctx, match.ring);
>          return;
>      }
> =20
> +    /* Record the IPB in the associated NVT structure */
> +    ipb_update((uint8_t *) &nvt.w4, priority);
> +    xive_router_set_nvt(xrtr, nvt_blk, nvt_idx, &nvt);

You're only writing back the NVT in the !found case.  Don't you still
need to update it in the found case?

>      /* If no matching NVT is dispatched on a HW thread :
>       * - update the NVT structure if backlog is activated
>       * - escalate (ESe PQ bits and EAS in w4-5) if escalation is

--=20
David Gibson			| I'll have my music baroque, and my code
david AT gibson.dropbear.id.au	| minimalist, thank you.  NOT _the_ _other_
				| _way_ _around_!
http://www.ozlabs.org/~dgibson

--H88uUF932U8Oj0a6
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEEdfRlhq5hpmzETofcbDjKyiDZs5IFAlv93Z8ACgkQbDjKyiDZ
s5KPDRAAghkL9ikW50HvblDJNlW+xUWZ10NidJAaFBgMmd0rJXdDUktBRYT46YjY
xX8wAi4W7A01CTv6q4Pz0ez+3yJhifY5NG087ytZ+mqFn82B+n5I9oxF+DXPsk7A
MPsvJhrAzQo/Kc/lCHDZfqLen5bJn52+b8FGFlEZxPc+vuNunj/y90rPaHB9notr
LU9dMGzTO8njIeM6si5oNhlp8iJhH1Dq7Xnx81VssW3I5m5DGeJTTlNcUdOjXPK6
3qcVi8itw1/hBVxqYy2fzrJh4UNxe7oQvTrRo0OMo8dMd09wuU19KlmrMQT2yLZR
zrWXL8JKGOX3Ca1GKUrfo20YyEARorKGPsw/QMtipvzA75dAC6CK+3XV1r3r2xoR
oiwOAu6BZU1G91ptfKBiZXeOWDuDzwp1scspge0OHLIqhXITVRjkypeh/9/hUdic
27qyDfrEWOdmWFMnP2L4JrIeNUgGypHs7x8x00lcJbXRfMtZ+3TjITCir8f8A/X6
UwGsCV8all/zYvnY9M3YIOzkOPnDKfU7TeJ1BnVIAzSeA8nGVVzhI3D3tCQOpLby
kT5aATz0kkR3l8PFqHQYyoL7LJIh3GkDERglED6SjPRO0giI17mjuVWZDhtaqfKF
cgjusEj9W17/DwdYDVgVTV9cA0EaZrDcdJJwlgwQO/25jPXjx+I=
=JTvO
-----END PGP SIGNATURE-----

--H88uUF932U8Oj0a6--

