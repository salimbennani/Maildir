Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 30 Nov 2018 08:49:05 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 2F10C580213
	for <like.xu@linux.intel.com>; Thu, 29 Nov 2018 09:43:31 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 29 Nov 2018 09:43:31 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3Aoz+NRRYIcG9IK+ONJ9Vd05r/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpsy5Yx7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyJPDIOi?=
 =?us-ascii?q?YYUMAeoOMvpXoJTyqVQMoxSwGBGsCeHtxDJHm3P707E23Po6EQzd2QwtHMgDvW?=
 =?us-ascii?q?7IoNjvNqofV/2+wqnSzTXEavNbwTbz6JXWfRAnvfGDQ6hwetfNx0koCQzKklaQ?=
 =?us-ascii?q?opHiMjOR1+QNtXWb7uV7WOK1jG4otR1+oju2yscxkYnFnIQVxU7Y9Shgxos+ON?=
 =?us-ascii?q?62SFZjbNK6DJddtDuWO5ZrTs4hWW1kpig3x70ctZKmfiUG0Ioryh/DZ/CbdoWE?=
 =?us-ascii?q?/xDuWPqNLTp9mn1odqyziwu3/EWh1OH8WNW43VNEoyZbltTDqnUA2wLd58iJRP?=
 =?us-ascii?q?tw+0mh1iiR2A3d7+xJJV07mKjHJJMn37U+jIAcsV7ZES/zgEj2jLGZdkEj+uWw?=
 =?us-ascii?q?7+TnY67mpoOHN4NuhQH+NLkulta4AeQiPQgCR2mb+eKi273/5UD1XqlGg/4snq?=
 =?us-ascii?q?XErZzXJt4XqrC3DgJVyIov9hSyAy+j0NsCnHkHKFxFeAiAj4jsI1zOOe73DfKi?=
 =?us-ascii?q?g1i1jThk2e7GMaPlApnUNXfDl6rhfbBh5EFC0wo/ytRf55NXCr4fOv7yVVLxuc?=
 =?us-ascii?q?TcDh84NQy03unmBM981oMYRWKAHKuZPLnOvl+P4+IiOO+MZIgTuDbyLfgl+uTi?=
 =?us-ascii?q?jXgjmV8SZaWpx4cYaGikHvR6JEWUeX7sgtYCEWgUpAY/Q/HqhUaGUT5SYXayQq?=
 =?us-ascii?q?096is6CIKgEYfMWIStjKad0ye8G50FLl1AEU2GRHf0a52fCbBLbCOJPtQnlDsC?=
 =?us-ascii?q?Wr68DYg72larvQ7+zrNhae3M5iwfs4mkzdVw+qjfmA8/8W9JCd+A2TSIRmBwgm?=
 =?us-ascii?q?RaXjIzweVzrFJwzhKZ3LFljudEPdpU4fxPT0E9L5GL1PFwCd35RlfceMyUQk2t?=
 =?us-ascii?q?WNSsDGINSYcUysUNK210BdjnpwHH1iymS+sQnqaIQpc97K+Z1mn1LsBx43fC3a?=
 =?us-ascii?q?8tgh8tRY1SNjv1qLR48l38GoPPj0iD35yteK8flHrJ9WGe3UKUu0xTU0ttSuPD?=
 =?us-ascii?q?UGxJNRielsjw+k6XF+zmMr8gKAYUjJfacqY=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAADfJABchxHrdtBkGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBgTAqgjiDeYgYX4spgg2XRBSBXxIBARgUhEC?=
 =?us-ascii?q?DNCI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgbDiMMgjYFAgMaAQaCWwEBAQEDAQIgB?=
 =?us-ascii?q?AsBDQEFCikBAgECAQIGAQEFBREDAQIBCR0EAgIDAQsFIAEFARQOCgkFglFLAYF?=
 =?us-ascii?q?pAxUBBJsnPIsNfDOCdwWCRIJEDYINBwIGEoZ3gSWCTIEcF3KBDYERgxKEajeCZ?=
 =?us-ascii?q?DGCJgKJIQYBhnZQg3WLQAmEIo0FI4Fah342hw6YJwIEAgQFAgUPIYElgg0zGgg?=
 =?us-ascii?q?mCjuCbIIbDBcSbQECBoJCinRRgQIFIROLD4F3AQE?=
X-IPAS-Result: =?us-ascii?q?A0ABAADfJABchxHrdtBkGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBgTAqgjiDeYgYX4spgg2XRBSBXxIBARgUhECDNCI0CQ0BAwEBA?=
 =?us-ascii?q?QEBAQIBEwEBAQoLCQgbDiMMgjYFAgMaAQaCWwEBAQEDAQIgBAsBDQEFCikBAgE?=
 =?us-ascii?q?CAQIGAQEFBREDAQIBCR0EAgIDAQsFIAEFARQOCgkFglFLAYFpAxUBBJsnPIsNf?=
 =?us-ascii?q?DOCdwWCRIJEDYINBwIGEoZ3gSWCTIEcF3KBDYERgxKEajeCZDGCJgKJIQYBhnZ?=
 =?us-ascii?q?Qg3WLQAmEIo0FI4Fah342hw6YJwIEAgQFAgUPIYElgg0zGggmCjuCbIIbDBcSb?=
 =?us-ascii?q?QECBoJCinRRgQIFIROLD4F3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,295,1539673200"; 
   d="scan'208,223";a="42867367"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 29 Nov 2018 09:43:24 -0800
Received: from localhost ([::1]:55512 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gSQLU-0003wo-2R
	for like.xu@linux.intel.com; Thu, 29 Nov 2018 12:43:24 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:55370)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <groeck7@gmail.com>) id 1gSQLG-0002bU-Cp
	for qemu-devel@nongnu.org; Thu, 29 Nov 2018 12:43:11 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <groeck7@gmail.com>) id 1gSQH8-0000YN-6Z
	for qemu-devel@nongnu.org; Thu, 29 Nov 2018 12:38:57 -0500
Received: from mail-pf1-x441.google.com ([2607:f8b0:4864:20::441]:34304)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <groeck7@gmail.com>) id 1gSQH4-0000T0-FK
	for qemu-devel@nongnu.org; Thu, 29 Nov 2018 12:38:52 -0500
Received: by mail-pf1-x441.google.com with SMTP id h3so1374333pfg.1
	for <qemu-devel@nongnu.org>; Thu, 29 Nov 2018 09:38:50 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
	h=sender:date:from:to:cc:subject:message-id:references:mime-version
	:content-disposition:content-transfer-encoding:in-reply-to
	:user-agent; bh=8P+jeOo4PjVNHjFhGy1jd0klS4HkaSwS6/Kt3c2/PNM=;
	b=h05TjqPC2Pgey500cE9LQp6cU032RRtkFeUq+XnTt/j3HJWogadGWLIsAV5vbw9Yu8
	dlVALorRSxzHM8SiVY0QOonpv1SoktK0fwT8s9ZUh0ts2hkEfUnL7Puodq3Kcr9WxKr2
	xqri11UaWgTXtgK5QaFCWEs4ez0VSjI10ZUUJrAkcVnG86MG1hoE1F+RrrKeFZdhVShW
	qGKoqVcJbZYwmvFcMWKf8HANw4qfxflxyTZ5brsqE3RN8DXSzFRjRAE90fz1ITvFVprL
	zwCT75AqmSxsAYPGJeHgyWSXjpAU/N13UCUkD5GRatK2tRULZAkEMGi31iE1/MJ3THUG
	Au4A==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:sender:date:from:to:cc:subject:message-id
	:references:mime-version:content-disposition
	:content-transfer-encoding:in-reply-to:user-agent;
	bh=8P+jeOo4PjVNHjFhGy1jd0klS4HkaSwS6/Kt3c2/PNM=;
	b=MjslV7/hUt5OLfpSd+QO0WMvjy1biUDPVYW9WnVYIQlp0BX9TCVYPPS37ZEgXoItli
	Jv+vk2m3pFExBaUZ7lLqlFyL8eRId5sHPrrP7xZ2kytFAGLVZ3MRBRcWhcKKqKULVyO1
	47lBXY7HKfum33rqVTBgIWOeSEEZVJKMuYHqoTNbTjyqneg9Q/TRgRL/F74CuRzM5rkD
	qz0a4+//OIDGnWYT/Tijp053FyjDvexjU65KMFxGG4+s/kSaMenBnBoeY2XiFxoxkEjO
	kGZnGYmlYzwThX9AFNtlqvJXOpolD9Jo1uXNvQsJfJsKANdd4AgYL9zmxGqacuztbiCN
	zhtQ==
X-Gm-Message-State: AA+aEWYNe1Etf0TQB96sPicOA+lei6PZGNijMaqPyCxjx2aN+zDl8ZGw
	xbJhNZ1Yl0UYl4NCJapvUAY=
X-Google-Smtp-Source: AFSGD/VIft2Jz5WY2m32p+zuLCt5GA4xxS+i9IdWNkIipiLSlYb2em1wrToIiwNugWkGrzdwHlwsBg==
X-Received: by 2002:a63:6782:: with SMTP id b124mr2017302pgc.151.1543513128706;
	Thu, 29 Nov 2018 09:38:48 -0800 (PST)
Received: from localhost ([2600:1700:e321:62f0:329c:23ff:fee3:9d7c])
	by smtp.gmail.com with ESMTPSA id
	a16-v6sm3533179pfh.107.2018.11.29.09.38.46
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Thu, 29 Nov 2018 09:38:47 -0800 (PST)
Date: Thu, 29 Nov 2018 09:38:45 -0800
From: Guenter Roeck <linux@roeck-us.net>
To: Mark Cave-Ayland <mark.cave-ayland@ilande.co.uk>
Message-ID: <20181129173845.GA2929@roeck-us.net>
References: <1543442171-24863-1-git-send-email-linux@roeck-us.net>
	<1543442171-24863-2-git-send-email-linux@roeck-us.net>
	<3d1287e7-29c1-dbb1-c0f9-273b7b31645c@redhat.com>
	<734e8388-2f0f-1c5b-7767-29e43d261bcb@ilande.co.uk>
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="9amGYk9869ThD9tj"
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <734e8388-2f0f-1c5b-7767-29e43d261bcb@ilande.co.uk>
User-Agent: Mutt/1.5.24 (2015-08-30)
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2607:f8b0:4864:20::441
Subject: Re: [Qemu-devel] [PATCH 2/2] scsi: esp: Improve consistency of
 RSTAT, RSEQ, and RINTR
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Paolo Bonzini <pbonzini@redhat.com>, Fam Zheng <famz@redhat.com>,
	qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>


--9amGYk9869ThD9tj
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: 8bit

Hi Mark,

On Thu, Nov 29, 2018 at 11:56:39AM +0000, Mark Cave-Ayland wrote:
> On 29/11/2018 09:58, Paolo Bonzini wrote:
> 
> > On 28/11/18 22:56, Guenter Roeck wrote:
> >> The guest OS reads RSTAT, RSEQ, and RINTR, and expects those registers
> >> to reflect a consistent state. However, it is possible that the registers
> >> can change after RSTAT was read, but before RINTR is read.
> >>
> >> Guest OS		qemu
> >> --------		----
> >> Read RSTAT
> >> 			esp_command_complete()
> >> 			 RSTAT = STAT_ST
> >> 			 esp_dma_done()
> >> 			  RSTAT |= STAT_TC
> >> 			  RSEQ = 0
> >> 			  RINTR = INTR_BS
> >>
> >> Read RSEQ
> >> Read RINTR		RINTR = 0
> >> 			RSTAT &= ~STAT_TC
> >> 			RSEQ = SEQ_CD
> >>
> >> The guest OS would then try to handle INTR_BS combined with an old
> >> value of RSTAT. This sometimes resulted in lost events, spurious
> >> interrupts, guest OS confusion, and stalled SCSI operations.
> > 
> > The question is, why was the guest running the interrupt routine before
> > STAT_INT was set in RSTAT?  The code in esp_raise_irq seems good:
> > 
> >     if (!(s->rregs[ESP_RSTAT] & STAT_INT)) {
> >         s->rregs[ESP_RSTAT] |= STAT_INT;
> >         qemu_irq_raise(s->irq);
> >         trace_esp_raise_irq();
> >     }
> > 
> > Paolo
> 
> This patch is very interesting, as I have a long-running regression trying to boot
> NextSTEP 3.3 on qemu-system-sparc which I eventually bisected down to the commit that
> turned on iothread by default in QEMU.
> 
> The symptom is that ESP SCSI requests hang/timeout before the kernel is able to get
> to the userspace installer: however if you launch QEMU with "taskset –cpu-list 1
> qemu-system-sparc ..." then it works and you can complete the installation.
> 
> So certainly this suggests that there is a race condition still present in ESP
> somewhere. I've given this patch a spin, and in a few quick tests here I was able to
> consistently get further in kernel boot, but it still doesn't completely solve issue
> for me :/
> 

Can you try the attached patch ? It is a bit cleaner than the first version,
and works for me as well.

Note that this isn't perfect. Specifically, I see differences in handling
STAT_TC. The controller specification is a bit ambiguous in that regard,
but comparing the qemu code with real controller behavior shows that the
real controller does not reset STAT_TC when reading the interrupt status
register. That doesn't seem to matter for Linux, but it may influence
other guests.

Guenter

--9amGYk9869ThD9tj
Content-Type: text/x-diff; charset=us-ascii
Content-Disposition: attachment; filename="0001-scsi-esp-Defer-command-completion-until-previous-int.patch"

From 751edd383f3c70d8a9195345b45aa3eb1ada7553 Mon Sep 17 00:00:00 2001
From: Guenter Roeck <linux@roeck-us.net>
Date: Thu, 29 Nov 2018 09:17:42 -0800
Subject: [PATCH] scsi: esp: Defer command completion until previous interrupts
 have been handled

The guest OS reads RSTAT, RSEQ, and RINTR, and expects those registers
to reflect a consistent state. However, it is possible that the registers
can change after RSTAT was read, but before RINTR is read, when
esp_command_complete() is called.

Guest OS		qemu
--------		----
[handle interrupt]
Read RSTAT
			esp_command_complete()
			 RSTAT = STAT_ST
			 esp_dma_done()
			  RSTAT |= STAT_TC
			  RSEQ = 0
			  RINTR = INTR_BS

Read RSEQ
Read RINTR		RINTR = 0
			RSTAT &= ~STAT_TC
			RSEQ = SEQ_CD

The guest OS would then try to handle INTR_BS combined with an old
value of RSTAT. This sometimes resulted in lost events, spurious
interrupts, guest OS confusion, and stalled SCSI operations.
A typical guest error log (observed with various versions of Linux)
looks as follows.

scsi host1: Spurious irq, sreg=13.
...
scsi host1: Aborting command [84531f10:2a]
scsi host1: Current command [f882eea8:35]
scsi host1: Queued command [84531f10:2a]
scsi host1:  Active command [f882eea8:35]
scsi host1: Dumping command log
scsi host1: ent[15] CMD val[44] sreg[90] seqreg[00] sreg2[00] ireg[20] ss[00] event[0c]
scsi host1: ent[16] CMD val[01] sreg[90] seqreg[00] sreg2[00] ireg[20] ss[02] event[0c]
scsi host1: ent[17] CMD val[43] sreg[90] seqreg[00] sreg2[00] ireg[20] ss[02] event[0c]
scsi host1: ent[18] EVENT val[0d] sreg[92] seqreg[04] sreg2[00] ireg[18] ss[00] event[0c]
...

Defer handling command completion until previous interrupts have been
handled to fix the problem.

Signed-off-by: Guenter Roeck <linux@roeck-us.net>
---
This looks much cleaner than the previous patch and at the same time
identifies the problem. Enabling the new trace shows that the condition
is seen on a regular basis (on average 2-3 times per boot test with
qemu-system-hppa if the test does nothing but shut down immediately).

 hw/scsi/esp.c         | 29 ++++++++++++++++++++++++-----
 hw/scsi/trace-events  |  1 +
 include/hw/scsi/esp.h |  2 ++
 3 files changed, 27 insertions(+), 5 deletions(-)

diff --git a/hw/scsi/esp.c b/hw/scsi/esp.c
index 630d923..e3d6cc5 100644
--- a/hw/scsi/esp.c
+++ b/hw/scsi/esp.c
@@ -286,11 +286,8 @@ static void esp_do_dma(ESPState *s)
     esp_dma_done(s);
 }
 
-void esp_command_complete(SCSIRequest *req, uint32_t status,
-                                 size_t resid)
+static void _esp_command_complete(ESPState *s, uint32_t status)
 {
-    ESPState *s = req->hba_private;
-
     trace_esp_command_complete();
     if (s->ti_size != 0) {
         trace_esp_command_complete_unexpected();
@@ -311,6 +308,23 @@ void esp_command_complete(SCSIRequest *req, uint32_t status,
     }
 }
 
+void esp_command_complete(SCSIRequest *req, uint32_t status,
+                          size_t resid)
+{
+    ESPState *s = req->hba_private;
+
+    if (s->rregs[ESP_RSTAT] & STAT_INT) {
+        /* Defer handling command complete until the previous
+         * interrupt has been handled.
+         */
+        trace_esp_command_complete_deferred();
+        s->deferred_status = status;
+        s->deferred_complete = true;
+        return;
+    }
+    _esp_command_complete(s, status);
+}
+
 void esp_transfer_data(SCSIRequest *req, uint32_t len)
 {
     ESPState *s = req->hba_private;
@@ -422,7 +436,10 @@ uint64_t esp_reg_read(ESPState *s, uint32_t saddr)
         s->rregs[ESP_RSTAT] &= ~STAT_TC;
         s->rregs[ESP_RSEQ] = SEQ_CD;
         esp_lower_irq(s);
-
+        if (s->deferred_complete) {
+            _esp_command_complete(s, s->deferred_status);
+            s->deferred_complete = false;
+        }
         return old_val;
     case ESP_TCHI:
         /* Return the unique id if the value has never been written */
@@ -582,6 +599,8 @@ const VMStateDescription vmstate_esp = {
         VMSTATE_UINT32(ti_wptr, ESPState),
         VMSTATE_BUFFER(ti_buf, ESPState),
         VMSTATE_UINT32(status, ESPState),
+        VMSTATE_UINT32(deferred_status, ESPState),
+        VMSTATE_BOOL(deferred_complete, ESPState),
         VMSTATE_UINT32(dma, ESPState),
         VMSTATE_PARTIAL_BUFFER(cmdbuf, ESPState, 16),
         VMSTATE_BUFFER_START_MIDDLE_V(cmdbuf, ESPState, 16, 4),
diff --git a/hw/scsi/trace-events b/hw/scsi/trace-events
index 0fb6a99..2fe8a7c 100644
--- a/hw/scsi/trace-events
+++ b/hw/scsi/trace-events
@@ -167,6 +167,7 @@ esp_handle_satn_stop(uint32_t cmdlen) "cmdlen %d"
 esp_write_response(uint32_t status) "Transfer status (status=%d)"
 esp_do_dma(uint32_t cmdlen, uint32_t len) "command len %d + %d"
 esp_command_complete(void) "SCSI Command complete"
+esp_command_complete_deferred(void) "SCSI Command complete deferred"
 esp_command_complete_unexpected(void) "SCSI command completed unexpectedly"
 esp_command_complete_fail(void) "Command failed"
 esp_transfer_data(uint32_t dma_left, int32_t ti_size) "transfer %d/%d"
diff --git a/include/hw/scsi/esp.h b/include/hw/scsi/esp.h
index 682a0d2..adab63d 100644
--- a/include/hw/scsi/esp.h
+++ b/include/hw/scsi/esp.h
@@ -23,6 +23,8 @@ struct ESPState {
     int32_t ti_size;
     uint32_t ti_rptr, ti_wptr;
     uint32_t status;
+    uint32_t deferred_status;
+    bool deferred_complete;
     uint32_t dma;
     uint8_t ti_buf[TI_BUFSZ];
     SCSIBus bus;
-- 
2.7.4


--9amGYk9869ThD9tj--

