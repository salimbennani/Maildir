Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 30 Nov 2018 16:08:29 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id ACF0B580213
	for <like.xu@linux.intel.com>; Thu, 29 Nov 2018 22:43:15 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 29 Nov 2018 22:43:15 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AOyOKRxUZ8aNFiWtCeIC6sl6T9IHV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYbRKPt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZHI28?=
 =?us-ascii?q?YYsBAekPM+lWoIbypUcBoxSjCwm0Bu7hyDBFimL40KEmzeshChrL3BA5H98UrH?=
 =?us-ascii?q?jYsNv4OacUXOuozKfI1zLDb/ZO1Drj8o/HbwohofCQUr1od8Te11EgGQLCjlqK?=
 =?us-ascii?q?tYzqISmV3fkKvmeH6+pgWvmii209pAF2vzej3MAsipPGho8MzF3P6CZ3wJ4tKN?=
 =?us-ascii?q?GmVEJ2YsSoHIZNuyyZLYd6XM0vTmFytConyLAKoZq2cDQQxJkkwxPTceGLfoyJ?=
 =?us-ascii?q?7x75SeqdPCt0iXR4c7ylnRmy61KvyujkW8m0zllKqi1Fn8HItnAMzBzT9tOHRu?=
 =?us-ascii?q?Fy/kenxDaDzQfT6vtLIUwslKrbLYAuwqIom5YNrUjOHTX6lFjrgKKVbEko5Oal?=
 =?us-ascii?q?5uT9brn7pJKQL4p0hRv/MqQqlMy/G+M4Mg0WUmiC5+u80aDj8VTkT7pUkP05jK?=
 =?us-ascii?q?3ZvInBKsQcu665BRNa3Zg46xq4Czem0dcYkmcdIFNKZRKKl4zpO1DIIPDlAvaz?=
 =?us-ascii?q?mVWskDF3x//YOr3tGInCLn/GkLr6e7Z97EhcyAU1zdBC/Z5UDasBIP3rVk/rqN?=
 =?us-ascii?q?PYFgM5MxCzw+v/DNV914AeVnyVDq6WLaPfqluI5uMpI+mRa44Zojf9K/455/Hw?=
 =?us-ascii?q?iX81g0MSfa6s3chfVXajA/4zI1mFeWG+xZAFEHwWpUw4S+rljkDEViRcIHO7Xq?=
 =?us-ascii?q?Y57zd8D5q6DIDFXce0jbmcmSu2AJBSNV1AEU2GRHLhdoGYXKUVZSePZ8NsjDEA?=
 =?us-ascii?q?EKKsUpIszg2Gsgj8xLx6aO3O9XoDqJjh2dNpsvDVjgw47jduDs6QgF2KGk19gG?=
 =?us-ascii?q?IEDxA31rt4pwQpxl6d0KRQjP1SDttVof9TVR8wOJfGie12TdnvDFHvZNCMHX0n?=
 =?us-ascii?q?Ts+nCgYVQ+UexNYSblw1T96mgTjA1i2mRbgPmOrYV9QP7qvA0i2pdI5GwHHc2f?=
 =?us-ascii?q?xk1gF+Tw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AFAACd2gBchxHrdtBjGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUQYBAQELAYEwKoI4jBFfiymBYC2XRoFzFBgUhECDNCI0CQ0BAwEBAQE?=
 =?us-ascii?q?BAQIBEwEBAQoLCQgbDi+CNgUCAxoBBoJbAQEBAQIBAQIkHwopAwMBAgYBAQoYH?=
 =?us-ascii?q?AoIAwE5GgYNBgIBAQGCUUuBeggBAwGoLzOFQINjgQ2MFxEGgX+BESeCa4UBhVs?=
 =?us-ascii?q?CiScylk0JkTAGGI4kgniYV4FGgg1NMAiDJ4InFxKODHGBBAOLNispgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AFAACd2gBchxHrdtBjGwEBAQEDAQEBBwMBAQGBUQYBAQE?=
 =?us-ascii?q?LAYEwKoI4jBFfiymBYC2XRoFzFBgUhECDNCI0CQ0BAwEBAQEBAQIBEwEBAQoLC?=
 =?us-ascii?q?QgbDi+CNgUCAxoBBoJbAQEBAQIBAQIkHwopAwMBAgYBAQoYHAoIAwE5GgYNBgI?=
 =?us-ascii?q?BAQGCUUuBeggBAwGoLzOFQINjgQ2MFxEGgX+BESeCa4UBhVsCiScylk0JkTAGG?=
 =?us-ascii?q?I4kgniYV4FGgg1NMAiDJ4InFxKODHGBBAOLNispgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,297,1539673200"; 
   d="scan'208";a="53283390"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 29 Nov 2018 22:43:14 -0800
Received: from localhost ([::1]:58295 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gScWA-0008VP-01
	for like.xu@linux.intel.com; Fri, 30 Nov 2018 01:43:14 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:43539)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <clg@kaod.org>) id 1gScVt-0008V0-Vm
	for qemu-devel@nongnu.org; Fri, 30 Nov 2018 01:42:59 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <clg@kaod.org>) id 1gScVq-0005m9-Mn
	for qemu-devel@nongnu.org; Fri, 30 Nov 2018 01:42:57 -0500
Received: from 4.mo3.mail-out.ovh.net ([178.33.46.10]:48825)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <clg@kaod.org>) id 1gScVq-0005KM-DC
	for qemu-devel@nongnu.org; Fri, 30 Nov 2018 01:42:54 -0500
Received: from player731.ha.ovh.net (unknown [10.109.159.69])
	by mo3.mail-out.ovh.net (Postfix) with ESMTP id 4F1B41E7F88
	for <qemu-devel@nongnu.org>; Fri, 30 Nov 2018 07:42:52 +0100 (CET)
Received: from kaod.org (lfbn-1-10605-110.w90-89.abo.wanadoo.fr
	[90.89.196.110]) (Authenticated sender: postmaster@kaod.org)
	by player731.ha.ovh.net (Postfix) with ESMTPSA id 6F472419E31;
	Fri, 30 Nov 2018 06:42:14 +0000 (UTC)
To: David Gibson <david@gibson.dropbear.id.au>
References: <20181116105729.23240-1-clg@kaod.org>
	<20181116105729.23240-7-clg@kaod.org>
	<20181122051302.GG10448@umbus.fritz.box>
	<390808b9-250e-e1ae-ea54-fcf47b309833@kaod.org>
	<20181130010410.GE30479@umbus.fritz.box>
From: =?UTF-8?Q?C=c3=a9dric_Le_Goater?= <clg@kaod.org>
Message-ID: <d8ba2082-625f-b547-47af-416148c04e9c@kaod.org>
Date: Fri, 30 Nov 2018 07:41:33 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.0
MIME-Version: 1.0
In-Reply-To: <20181130010410.GE30479@umbus.fritz.box>
Content-Type: text/plain; charset=windows-1252
Content-Language: en-US
X-Ovh-Tracer-Id: 15847041192847051633
X-VR-SPAMSTATE: OK
X-VR-SPAMSCORE: -100
X-VR-SPAMCAUSE: gggruggvucftvghtrhhoucdtuddrgedtkedruddvgedguddthecutefuodetggdotefrodftvfcurfhrohhfihhlvgemucfqggfjpdevjffgvefmvefgnecuuegrihhlohhuthemucehtddtnecusecvtfgvtghiphhivghnthhsucdlqddutddtmd
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 178.33.46.10
Subject: Re: [Qemu-devel] [PATCH v5 06/36] ppc/xive: add support for the END
 Event State buffers
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-ppc@nongnu.org, qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On 11/30/18 2:04 AM, David Gibson wrote:
> On Thu, Nov 29, 2018 at 11:06:13PM +0100, C=E9dric Le Goater wrote:
>> On 11/22/18 6:13 AM, David Gibson wrote:
>>> On Fri, Nov 16, 2018 at 11:56:59AM +0100, C=E9dric Le Goater wrote:
>>>> The Event Notification Descriptor also contains two Event State
>>>> Buffers providing further coalescing of interrupts, one for the
>>>> notification event (ESn) and one for the escalation events (ESe). A
>>>> MMIO page is assigned for each to control the EOI through loads
>>>> only. Stores are not allowed.
>>>>
>>>> The END ESBs are modeled through an object resembling the 'XiveSourc=
e'
>>>> It is stateless as the END state bits are backed into the XiveEND
>>>> structure under the XiveRouter and the MMIO accesses follow the same
>>>> rules as for the standard source ESBs.
>>>>
>>>> END ESBs are not supported by the Linux drivers neither on OPAL nor =
on
>>>> sPAPR. Nevetherless, it provides a mean to study the question in the
>>>> future and validates a bit more the XIVE model.
>>>>
>>>> Signed-off-by: C=E9dric Le Goater <clg@kaod.org>
>>>> ---
>>>>  include/hw/ppc/xive.h |  20 ++++++
>>>>  hw/intc/xive.c        | 160 +++++++++++++++++++++++++++++++++++++++=
++-
>>>>  2 files changed, 178 insertions(+), 2 deletions(-)
>>>>
>>>> diff --git a/include/hw/ppc/xive.h b/include/hw/ppc/xive.h
>>>> index ce62aaf28343..24301bf2076d 100644
>>>> --- a/include/hw/ppc/xive.h
>>>> +++ b/include/hw/ppc/xive.h
>>>> @@ -208,6 +208,26 @@ int xive_router_get_end(XiveRouter *xrtr, uint8=
_t end_blk, uint32_t end_idx,
>>>>  int xive_router_set_end(XiveRouter *xrtr, uint8_t end_blk, uint32_t=
 end_idx,
>>>>                          XiveEND *end);
>>>> =20
>>>> +/*
>>>> + * XIVE END ESBs
>>>> + */
>>>> +
>>>> +#define TYPE_XIVE_END_SOURCE "xive-end-source"
>>>> +#define XIVE_END_SOURCE(obj) \
>>>> +    OBJECT_CHECK(XiveENDSource, (obj), TYPE_XIVE_END_SOURCE)
>>>
>>> Is there a particular reason to make this a full QOM object, rather
>>> than just embedding it in the XiveRouter?
>>
>> Coming back on this question because removing the chip_id from the
>> router is a problem for the END triggering. At least with the current
>> design. See below for the comment.
>>
>>>> +typedef struct XiveENDSource {
>>>> +    SysBusDevice parent;
>>>> +
>>>> +    uint32_t        nr_ends;
>>>> +
>>>> +    /* ESB memory region */
>>>> +    uint32_t        esb_shift;
>>>> +    MemoryRegion    esb_mmio;
>>>> +
>>>> +    XiveRouter      *xrtr;
>>>> +} XiveENDSource;
>>>> +
>>>>  /*
>>>>   * For legacy compatibility, the exceptions define up to 256 differ=
ent
>>>>   * priorities. P9 implements only 9 levels : 8 active levels [0 - 7=
]
>>>> diff --git a/hw/intc/xive.c b/hw/intc/xive.c
>>>> index 9cb001e7b540..5a8882d47a98 100644
>>>> --- a/hw/intc/xive.c
>>>> +++ b/hw/intc/xive.c
>>>> @@ -622,8 +622,18 @@ static void xive_router_end_notify(XiveRouter *=
xrtr, uint8_t end_blk,
>>>>       * even futher coalescing in the Router
>>>>       */
>>>>      if (!(end.w0 & END_W0_UCOND_NOTIFY)) {
>>>> -        qemu_log_mask(LOG_UNIMP, "XIVE: !UCOND_NOTIFY not implement=
ed\n");
>>>> -        return;
>>>> +        uint8_t pq =3D GETFIELD(END_W1_ESn, end.w1);
>>>> +        bool notify =3D xive_esb_trigger(&pq);
>>>> +
>>>> +        if (pq !=3D GETFIELD(END_W1_ESn, end.w1)) {
>>>> +            end.w1 =3D SETFIELD(END_W1_ESn, end.w1, pq);
>>>> +            xive_router_set_end(xrtr, end_blk, end_idx, &end);
>>>> +        }
>>>> +
>>>> +        /* ESn[Q]=3D1 : end of notification */
>>>> +        if (!notify) {
>>>> +            return;
>>>> +        }
>>>>      }
>>>> =20
>>>>      /*
>>>> @@ -706,6 +716,151 @@ void xive_eas_pic_print_info(XiveEAS *eas, uin=
t32_t lisn, Monitor *mon)
>>>>                     (uint32_t) GETFIELD(EAS_END_DATA, eas->w));
>>>>  }
>>>> =20
>>>> +/*
>>>> + * END ESB MMIO loads
>>>> + */
>>>> +static uint64_t xive_end_source_read(void *opaque, hwaddr addr, uns=
igned size)
>>>> +{
>>>> +    XiveENDSource *xsrc =3D XIVE_END_SOURCE(opaque);
>>>> +    XiveRouter *xrtr =3D xsrc->xrtr;
>>>> +    uint32_t offset =3D addr & 0xFFF;
>>>> +    uint8_t end_blk;
>>>> +    uint32_t end_idx;
>>>> +    XiveEND end;
>>>> +    uint32_t end_esmask;
>>>> +    uint8_t pq;
>>>> +    uint64_t ret =3D -1;
>>>> +
>>>> +    end_blk =3D xrtr->chip_id;
>>>> +    end_idx =3D addr >> (xsrc->esb_shift + 1);
>>>> +    if (xive_router_get_end(xrtr, end_blk, end_idx, &end)) {
>>
>> The current END accessors require a block identifier, hence xrtr->chip=
_id,=20
>> but in this case, we don't really need it because we are using the END=
T=20
>> local to the router/chip.=20
>=20
>> I don't know how to handle simply this case without keeping chip_id :/
>=20
> I don't really follow how chip_id is relevant here.  AFAICT the END
> accessors take a block id and the back end is responsible for
> interpreting them.  The ponwernv one will map it to chip id, but the
> PAPR one can just ignore it or only use block 0.

Yes. But the block value comes from the xrtr->chip_id today, on PAPR and
PowerNV, even if it's block 0.=20

What I could do is add a "chip-id" property to XiveENDSource possibly.

C.=20


