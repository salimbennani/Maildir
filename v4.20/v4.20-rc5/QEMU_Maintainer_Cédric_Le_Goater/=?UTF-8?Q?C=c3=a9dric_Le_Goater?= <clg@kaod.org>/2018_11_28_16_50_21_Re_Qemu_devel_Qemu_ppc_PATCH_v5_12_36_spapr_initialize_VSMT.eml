Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 29 Nov 2018 08:38:50 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id D9D015802E4
	for <like.xu@linux.intel.com>; Wed, 28 Nov 2018 08:59:41 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 28 Nov 2018 08:59:41 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A8+1c5xwwUIuV8HvXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?2uMQIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CW2RBUMZfWS9PDIyy?=
 =?us-ascii?q?YIQADfYOM+lFoYnlpVYArxSzCRSiCe/z1DBInWT73bEj0+k7DQ3KwAItEtAIvX?=
 =?us-ascii?q?/JrNv1LqASUeWtwaTW1zLMculW2Tbh54fQdB4uv+mDU7N3ccXL1UkgCRnFhUiX?=
 =?us-ascii?q?pIP5OzOV2f8As2uB4OpnSO2jkWknqxt+ojW2wMonl4rHhpoNx1za6Sl0w5w5Kc?=
 =?us-ascii?q?ClREN4e9KoDpVduiGAO4drQM4uW2VltDogxrAFvZO3ZjUGxZAmyhLFdvCLbpSE?=
 =?us-ascii?q?7xT+X+iLOzh4nmhqeLenihay70egzur8W9Gw0FZLtSpFjsLMumoC1xzV98iLUP?=
 =?us-ascii?q?x9/l2u2TqX1gDT7P9LIVwsmKbFN5IswaQ8mocOvUnABCP6hkv7ga+Mekk5+OWk?=
 =?us-ascii?q?8+Hnba/npp+YOY90kAb+MqE2l8ymH+s4NxUOU3GG9uuiyr3s40n5TKxRgf0xj6?=
 =?us-ascii?q?nZtozVKtoApqK+Bw9V04Uj5AilAzapzdQVhX0HLFNDeBKagInlIVDOIPbkDfih?=
 =?us-ascii?q?h1Sgiitkx/fDPrD6BJXNKX7DkLjnfbZg8UJczxAzzd9H65JOFr4BOO7zWlP2tN?=
 =?us-ascii?q?HACh85Mg+0zPj9BNRyy4MTQmaPAq6fMKPPvl6E/OMvI++QZIALvDbxMeQq5/nr?=
 =?us-ascii?q?jSxxpFkGYKP83YcLcGvqWbNiIl6FejzqhdEOF3pMuRAxC+njiVmHWDgUYG6uXq?=
 =?us-ascii?q?U6/XYiBYe7SIvOWI2p04GHxzqxS5hfZ2RaDQKVHHL1MomJRfoILTifO9JsiSAs?=
 =?us-ascii?q?U7+nRIk8kxa0u1jh1rBlI+HIrzAero/pz9Nv5ufexi01oBNuAsvV8HyXXSkgkX?=
 =?us-ascii?q?kPWjAe36l4rQp60FjVleBUiuJZGZR85vlSVQFyYZLV0e12I9/zUBnGeJGFUlG+?=
 =?us-ascii?q?SNivG3cwQpQ43oldTVx6HoCJDxzZ3iGdJ7IiuLuCGJEuuvbX23fZJM96xzDBzq?=
 =?us-ascii?q?Z33ApueddGKWDz3v03zAPUHYOc1hzBz6s=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AFAABYyf5bhxHrdtBjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUgQBAQEBCwEBgS+CTxODeYh3iymBYAgll0KBcRYYFIRAgy4iNQg?=
 =?us-ascii?q?NAQMBAQEBAQECARMBAQEKCwkIGw4vQgEQAYFiBQIDGgEGglwBAgMBAiAEHwopA?=
 =?us-ascii?q?wMBAgYBAQoOCgICGAcDBAICAwE5GgYBDAYCAQEBgxyCAgEDAaZwfDOFQINmgQ2?=
 =?us-ascii?q?BC4sLEQaBf4ERJwyCX4RbJoMEglcCoBsJiiqHAQYYkRWIdo9SgUgBggpNMAiDJ?=
 =?us-ascii?q?4InFxKODHGBBAOFGoVNVYF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0AFAABYyf5bhxHrdtBjGgEBAQEBAgEBAQEHAgEBAQGBUgQ?=
 =?us-ascii?q?BAQEBCwEBgS+CTxODeYh3iymBYAgll0KBcRYYFIRAgy4iNQgNAQMBAQEBAQECA?=
 =?us-ascii?q?RMBAQEKCwkIGw4vQgEQAYFiBQIDGgEGglwBAgMBAiAEHwopAwMBAgYBAQoOCgI?=
 =?us-ascii?q?CGAcDBAICAwE5GgYBDAYCAQEBgxyCAgEDAaZwfDOFQINmgQ2BC4sLEQaBf4ERJ?=
 =?us-ascii?q?wyCX4RbJoMEglcCoBsJiiqHAQYYkRWIdo9SgUgBggpNMAiDJ4InFxKODHGBBAO?=
 =?us-ascii?q?FGoVNVYF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,291,1539673200"; 
   d="scan'208";a="54088936"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 28 Nov 2018 08:59:33 -0800
Received: from localhost ([::1]:48719 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gS3BV-0006p9-04
	for like.xu@linux.intel.com; Wed, 28 Nov 2018 11:59:33 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:41995)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <clg@kaod.org>) id 1gS32u-0006Ul-5y
	for qemu-devel@nongnu.org; Wed, 28 Nov 2018 11:50:41 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <clg@kaod.org>) id 1gS32o-0004pP-N3
	for qemu-devel@nongnu.org; Wed, 28 Nov 2018 11:50:40 -0500
Received: from 9.mo173.mail-out.ovh.net ([46.105.72.44]:52017)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <clg@kaod.org>) id 1gS32o-0004ZK-8l
	for qemu-devel@nongnu.org; Wed, 28 Nov 2018 11:50:34 -0500
Received: from player690.ha.ovh.net (unknown [10.109.160.12])
	by mo173.mail-out.ovh.net (Postfix) with ESMTP id E8AC0E0F81
	for <qemu-devel@nongnu.org>; Wed, 28 Nov 2018 17:50:26 +0100 (CET)
Received: from kaod.org (lfbn-1-10605-110.w90-89.abo.wanadoo.fr
	[90.89.196.110]) (Authenticated sender: postmaster@kaod.org)
	by player690.ha.ovh.net (Postfix) with ESMTPSA id 88B9C32A10C;
	Wed, 28 Nov 2018 16:50:21 +0000 (UTC)
To: Greg Kurz <groug@kaod.org>, David Gibson <david@gibson.dropbear.id.au>
References: <20181116105729.23240-1-clg@kaod.org>
	<20181116105729.23240-13-clg@kaod.org>
	<20181128025714.GW2251@umbus.fritz.box>
	<20181128103551.42397998@bahia.lan>
From: =?UTF-8?Q?C=c3=a9dric_Le_Goater?= <clg@kaod.org>
Message-ID: <128a0c2a-2f7e-55cf-1216-80266ac8a8a9@kaod.org>
Date: Wed, 28 Nov 2018 17:50:21 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.0
MIME-Version: 1.0
In-Reply-To: <20181128103551.42397998@bahia.lan>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
X-Ovh-Tracer-Id: 14362542165146766144
X-VR-SPAMSTATE: OK
X-VR-SPAMSCORE: -100
X-VR-SPAMCAUSE: gggruggvucftvghtrhhoucdtuddrgedtkedruddvuddgleefucetufdoteggodetrfdotffvucfrrhhofhhilhgvmecuqfggjfdpvefjgfevmfevgfenuceurghilhhouhhtmecuhedttdenucesvcftvggtihhpihgvnhhtshculddquddttddm
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 46.105.72.44
Subject: Re: [Qemu-devel] [Qemu-ppc] [PATCH v5 12/36] spapr: initialize VSMT
 before initializing the IRQ backend
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-ppc@nongnu.org, qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On 11/28/18 10:35 AM, Greg Kurz wrote:
> On Wed, 28 Nov 2018 13:57:14 +1100
> David Gibson <david@gibson.dropbear.id.au> wrote:
>=20
>> On Fri, Nov 16, 2018 at 11:57:05AM +0100, C=C3=A9dric Le Goater wrote:
>>> We will need to use xics_max_server_number() to create the sPAPRXive
>>> object modeling the interrupt controller of the machine which is
>>> created before the CPUs.
>>>
>>> Signed-off-by: C=C3=A9dric Le Goater <clg@kaod.org> =20
>>
>> My only concern here is that this moves the spapr_set_vsmt_mode()
>> before some of the sanity checks in spapr_init_cpus().  Are we certain
>> there are no edge cases that could cause badness?
>>
>=20
> The early checks in spapr_init_cpus() filter out topologies that would
> result in partially filled cores. They're only related to the rest of
> the code that creates the boot CPUs. Before commit 1a5008fc17,
> spapr_set_vsmt_mode() was even being called before spapr_init_cpus().
> The rationale to move it there was to ensure it is called before the
> first user of spapr->vsmt, which happens to be a call to
> xics_max_server_number().
>=20
> Now that xics_max_server_number() needs to be called even earlier, I th=
ink a
> better change is to have xics_max_server_number() to call spapr_set_vsm=
t_mode()
> if spapr->vsmt isn't set.

That 'smt' routine is black magic to me and I would not dare touching it.

C.
=20
>=20
>>> ---
>>>  hw/ppc/spapr.c | 10 +++++-----
>>>  1 file changed, 5 insertions(+), 5 deletions(-)
>>>
>>> diff --git a/hw/ppc/spapr.c b/hw/ppc/spapr.c
>>> index 7afd1a175bf2..50cb9f9f4a02 100644
>>> --- a/hw/ppc/spapr.c
>>> +++ b/hw/ppc/spapr.c
>>> @@ -2466,11 +2466,6 @@ static void spapr_init_cpus(sPAPRMachineState =
*spapr)
>>>          boot_cores_nr =3D possible_cpus->len;
>>>      }
>>> =20
>>> -    /* VSMT must be set in order to be able to compute VCPU ids, ie =
to
>>> -     * call xics_max_server_number() or spapr_vcpu_id().
>>> -     */
>>> -    spapr_set_vsmt_mode(spapr, &error_fatal);
>>> -
>>>      if (smc->pre_2_10_has_unused_icps) {
>>>          int i;
>>> =20
>>> @@ -2593,6 +2588,11 @@ static void spapr_machine_init(MachineState *m=
achine)
>>>      /* Setup a load limit for the ramdisk leaving room for SLOF and =
FDT */
>>>      load_limit =3D MIN(spapr->rma_size, RTAS_MAX_ADDR) - FW_OVERHEAD=
;
>>> =20
>>> +    /* VSMT must be set in order to be able to compute VCPU ids, ie =
to
>>> +     * call xics_max_server_number() or spapr_vcpu_id().
>>> +     */
>>> +    spapr_set_vsmt_mode(spapr, &error_fatal);
>>> +
>>>      /* Set up Interrupt Controller before we create the VCPUs */
>>>      smc->irq->init(spapr, &error_fatal);
>>>   =20
>>
>=20


