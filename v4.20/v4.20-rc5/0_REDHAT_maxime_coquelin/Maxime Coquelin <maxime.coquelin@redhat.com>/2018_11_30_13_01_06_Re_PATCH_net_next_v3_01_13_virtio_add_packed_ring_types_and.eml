Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:17:44 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 891E2580224;
	Fri, 30 Nov 2018 05:01:19 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 30 Nov 2018 05:01:18 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A9z1DCBGGejFhGzJh2pmaFZ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75osq6bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJSiJPHI28?=
 =?us-ascii?q?YYsMAeQPM+lXoIvyqEcBoxulHQmhBvjiyiNLi3LswaE2z+osHAPA0Qc9H9wOqn?=
 =?us-ascii?q?PUrNDtOakVS++0w6jIzTDdYPhLxzr975HIcg0/rvGIXLJwd9faxE4qFwzfgVSQ?=
 =?us-ascii?q?qInlMC2P2usRtGib9vdgWvyri24mrQF8uSKvydkxhYnJnI0V1krI+jl+wIYwPN?=
 =?us-ascii?q?C1TlNwb9CjEJtVrS6aNo12T9slQ2BpvCY10KYJuYWhcCgN0pQnyBjSYOGEfYiQ?=
 =?us-ascii?q?+h/vSvqdLDNiiH54dr+zmQy+/VWjx+HgTMW50VRHojJbntXQsn0BzQHf58aZRv?=
 =?us-ascii?q?dn40us2jiC2xrN5uxHJ00/iLDVJIQ7wrEqk5oeqUTDETHymEXxlKKWaEok9fay?=
 =?us-ascii?q?6+j9YbXpuIWcN4lqhQH6KKgunda/AesgPggPWWiU5/i82aX98UHlRLhGlOA6n6?=
 =?us-ascii?q?fHvJzAOMgWpbK1DxVU34sh8xq/Ci2p0NUcnXkJNlJFfxeHgpDtO1HPJvD4EPi+?=
 =?us-ascii?q?j02vkDh13fDGOKPuApHUInjEnrbhe6hy61RHxQotwtBQ+YhUBqsCIP3tQE/xss?=
 =?us-ascii?q?LXDhsjPwyz2ebnB81x1pkCVmKXHq+ZLKTSvEeM5uIuIOmDepUZuTngK/U+4/7u?=
 =?us-ascii?q?jHk5mUISfKWz3JsXbmy4EepiI0mDfXXshdIBG38QvgUiVOzqlEGCUTlLanayRa?=
 =?us-ascii?q?085y07B5ihDYvZRoCtnaaO3CG0HpBNYmBGC1aMEWrndomeWvcMbj6SLdFlkjAe?=
 =?us-ascii?q?SbehTIoh3wm0tADm07pnMvbU+ioAuJLh09h6+ffflRI19TxyCcSd1HqAT2V1nm?=
 =?us-ascii?q?MOWj8307pzoU17ylefz6d4h+ZUGsBU5/NMSg06L4LTz/RmC9DuXQLMZs2GSE2m?=
 =?us-ascii?q?QtWhAjE9VMgxzMUMY0tmH9WijxbD3zelArMPlryLAoA0/bzY33TrO8l9zHPG3r?=
 =?us-ascii?q?E7j1Y6WstPKXGmhqln+gjQHYHJlV+Vl6KrdasG2i7N+3yOzW6PvEFeTQ5xXr/J?=
 =?us-ascii?q?XXEZZkvKs9v54lnOQKOpCbQiKgFB09KNKrNWat31ilVLXOrsN87AY22vgWuwBQ?=
 =?us-ascii?q?yHxrWXbIX0fWUR2yHdCEsBkwAX5nuGMQk+BiG8o2PRFjBuFFTvY1/y/ul6sn+0?=
 =?us-ascii?q?Ukg0zwSSZU17y7W14gIVheCbS/4Lw70LojkhpCtuEFa9xd3WDcGAqBRnfKhHZd?=
 =?us-ascii?q?M94VFH1X/WtgBnP5ygKbxiiUAacwhto0zu0BB3AJ1akcc2tHMq0BZyKaWA3VNd?=
 =?us-ascii?q?djOY2JfwOqHXKmjy5hyvd7Ta2lbE0NaS+6cP7vs4pk7nvAGoEEoi7npm38NU03?=
 =?us-ascii?q?ua+pXFEg4SXYjtXUYw8hhwv6vabTUl54PIyX1sNrG5vSXG2903C+oq1Bahc81E?=
 =?us-ascii?q?P6OZCQD9CcsaB8upKOw0gFWpahMEPOZP9K87Jc+mdv2G2LK1M+Zkhj6pkWNH4I?=
 =?us-ascii?q?Vl2EKW6yV8UvLI34oCw/yA3gqHSi3wg0u7vsH2mYBLfzcSHmWkxCjgBY5RYLBy?=
 =?us-ascii?q?fIkRBWevJc232stxh5r3V3FE816jAksM2NW1dhqKc1z9wQpQ2FwNoXymhSS31S?=
 =?us-ascii?q?Z0nCwurqaF2izB3f7idBseNmFXXmZiiUrjLpauj9AdWkildAwplBqj5UbnyKlX?=
 =?us-ascii?q?vqV/L2/PQUhWeyj6NX1tUqy1trCaec5A9IsosTlLUOS7eV2bSr/9rwEa0i/5BG?=
 =?us-ascii?q?te2TY7eiquupX4mRx6lW2cIGxyrHrfZcF/2xPf6MbASv5W2zoMXDN4hiXPBlig?=
 =?us-ascii?q?I9mp+s2Zl5XZveCkVGKhVZpTfTPwzYyatyu75mxqARuhkPC1gdDnFQk60Snm19?=
 =?us-ascii?q?hlTynIrRD8YpX12KS+K+5oYk5oBFrk4cpgBo5+ipcwhI0X2XUChpSa530HnX3x?=
 =?us-ascii?q?MdVa36Lzd34NRT8Nw97I7wnpwkxjLnSVx43nUnWR2NduZ96/YmkOwCIy89hKCL?=
 =?us-ascii?q?uI7LxDhSZ1oUC3rQPLbfh9gzcS0/0u6HEBjuENuQotyDidA78IEUlZOyzsiwqH?=
 =?us-ascii?q?79SkoKpLY2avdKC61FBiktC5ELGCvgZcVW78epcjHi9/9N9zMVzS333o9oHrZs?=
 =?us-ascii?q?PQYskNuR2OnBfNlOxVKJM3lvoXiitrI2P9vXs5y+EliRxix421vI+CK2915qK2?=
 =?us-ascii?q?HgZYNiHpZ8MU4jztkaFensOM04GuBJphHCgLXIDzTfKpCz8SsfXnNwCTEDwzsH?=
 =?us-ascii?q?ubGLzfHROB50ditX7AD5erN3SPLnkD0dpiXAWdJFBYgA0MRzo1hJk5FgS3xMD7?=
 =?us-ascii?q?dEd5+ysc5lr5qhtK1+JpOAPzUmbZpAe0dDg0TIKTIwZR7gFH/03VK9CR7vpvHy?=
 =?us-ascii?q?FE+Z2stA6NJXaeZwtWFmEFQFCEC0rgPrmz5tnA7u6YCfClL/bVZbWOqOpeV+qH?=
 =?us-ascii?q?xJ6104tm+SqMOduLPnV4E/I73U9DV2hjG8vFgzUPVzAXlyXVYs+boxe85zR3rt?=
 =?us-ascii?q?2l//TtQg7v/oyPC71dMdh0/xC2gKGDN/OfhSpjKDZY0I8MymHMyLQFwFESjCRu?=
 =?us-ascii?q?fSG3EbscrS7NUL7QmqhPAh4bdSxzNchI76E93gVXOs7bkNT11rFmgf4vFldFTk?=
 =?us-ascii?q?fsmsWoZcwMPmG8O0nLBEeNNLSaOzLLx9v7br+7Sb1VlO9UrQG/uS6HE0//OTSO?=
 =?us-ascii?q?jyPmVw20PuFWki6aPAZSuIW8cht2DWjjTdTmagC0MdNtjD02x6E0iW3ONWIGLT?=
 =?us-ascii?q?d8dEZNpKWK7SxEmvV/B3BB7n19IOmYmiaZ6vPUJYoMvfR3AiR7ieRa7W8+y7tU?=
 =?us-ascii?q?6iFEWfN0lDHTrt5ov1GpjO2PxiB7XxpJrzZBnJiLsll6OaXF6plAXm7J/RIX4m?=
 =?us-ascii?q?WWDhQKpt1lBcXuuqBQ0NfPkq3zJSxG89LV+8scGsfVJNiGMHonLRrmBjrUABEZ?=
 =?us-ascii?q?Qj6sMGGMz3Baxbu393aVp5U+4qOq0KYVS6VYVVp/XqcfEVhNBtEOIJ5rGDgjlO?=
 =?us-ascii?q?jfxPIJ+ne/5DPQSY0OopHYW/PUC/TiADefkbRAIRAPxOWrA54UM9je0lxjb1Qy?=
 =?us-ascii?q?t4PTBkfUXNYF9ihofg4xrQNG92FjQ2ky3Wr/Zw+t6WNVHvmxyE1lwjBiaPggoW?=
 =?us-ascii?q?+/q2w8IUDH8W5pyBE8?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ACAAAqNAFch0O0hNFjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwEBgVmBD4ECFBODeYgYX4spgWAtFJc0gXMUGAsIAYd?=
 =?us-ascii?q?2IjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDEIBDAGBZiQBgmIBAgMBAiAECwEFQ?=
 =?us-ascii?q?QYJAQEIAhgCAiYCAgNUBgEMBgIBAQGCUUsBggEFCosFm1B8M4QtAQsBgQaEaAW?=
 =?us-ascii?q?BC4sQgVc/gTiCa4MeBIRjglcCiQiXKQcCgh4EhF2GToNkBhiBfodbEIc2iHuEZ?=
 =?us-ascii?q?Ip7gUaCDU0jUIJsixyFQD4BATGBBQEBHIQkiVsBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ACAAAqNAFch0O0hNFjGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwEBgVmBD4ECFBODeYgYX4spgWAtFJc0gXMUGAsIAYd2IjQJDQEDAQEBA?=
 =?us-ascii?q?QEBAgETAQEBCA0JCCkjDEIBDAGBZiQBgmIBAgMBAiAECwEFQQYJAQEIAhgCAiY?=
 =?us-ascii?q?CAgNUBgEMBgIBAQGCUUsBggEFCosFm1B8M4QtAQsBgQaEaAWBC4sQgVc/gTiCa?=
 =?us-ascii?q?4MeBIRjglcCiQiXKQcCgh4EhF2GToNkBhiBfodbEIc2iHuEZIp7gUaCDU0jUIJ?=
 =?us-ascii?q?sixyFQD4BATGBBQEBHIQkiVsBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,298,1539673200"; 
   d="scan'208";a="42994313"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 30 Nov 2018 05:01:17 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726725AbeLAAK1 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 30 Nov 2018 19:10:27 -0500
Received: from mx1.redhat.com ([209.132.183.28]:52852 "EHLO mx1.redhat.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726127AbeLAAK1 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 30 Nov 2018 19:10:27 -0500
Received: from smtp.corp.redhat.com (int-mx07.intmail.prod.int.phx2.redhat.com [10.5.11.22])
        (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
        (No client certificate requested)
        by mx1.redhat.com (Postfix) with ESMTPS id 677BB3078A23;
        Fri, 30 Nov 2018 13:01:12 +0000 (UTC)
Received: from [10.36.112.44] (ovpn-112-44.ams2.redhat.com [10.36.112.44])
        by smtp.corp.redhat.com (Postfix) with ESMTPS id 45DCB1054FD4;
        Fri, 30 Nov 2018 13:01:08 +0000 (UTC)
Subject: Re: [PATCH net-next v3 01/13] virtio: add packed ring types and
 macros
To: "Michael S. Tsirkin" <mst@redhat.com>,
        Tiwei Bie <tiwei.bie@intel.com>
Cc: Jason Wang <jasowang@redhat.com>,
        virtualization@lists.linux-foundation.org,
        linux-kernel@vger.kernel.org, netdev@vger.kernel.org,
        virtio-dev@lists.oasis-open.org, wexu@redhat.com,
        jfreimann@redhat.com
References: <20181121100330.24846-1-tiwei.bie@intel.com>
 <20181121100330.24846-2-tiwei.bie@intel.com>
 <1928ac96-3684-45c4-1e8c-09dff03bf308@redhat.com>
 <20181130095339.GA11984@debian>
 <20181130074720-mutt-send-email-mst@kernel.org>
From: Maxime Coquelin <maxime.coquelin@redhat.com>
Message-ID: <13593b5c-c1dc-3ab3-a843-d62908e0c7e0@redhat.com>
Date: Fri, 30 Nov 2018 14:01:06 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <20181130074720-mutt-send-email-mst@kernel.org>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-US
Content-Transfer-Encoding: 8bit
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.22
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16 (mx1.redhat.com [10.5.110.48]); Fri, 30 Nov 2018 13:01:12 +0000 (UTC)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org



On 11/30/18 1:47 PM, Michael S. Tsirkin wrote:
> On Fri, Nov 30, 2018 at 05:53:40PM +0800, Tiwei Bie wrote:
>> On Fri, Nov 30, 2018 at 04:10:55PM +0800, Jason Wang wrote:
>>>
>>> On 2018/11/21 下午6:03, Tiwei Bie wrote:
>>>> Add types and macros for packed ring.
>>>>
>>>> Signed-off-by: Tiwei Bie <tiwei.bie@intel.com>
>>>> ---
>>>>    include/uapi/linux/virtio_config.h |  3 +++
>>>>    include/uapi/linux/virtio_ring.h   | 52 ++++++++++++++++++++++++++++++++++++++
>>>>    2 files changed, 55 insertions(+)
>>>>
>>>> diff --git a/include/uapi/linux/virtio_config.h b/include/uapi/linux/virtio_config.h
>>>> index 449132c76b1c..1196e1c1d4f6 100644
>>>> --- a/include/uapi/linux/virtio_config.h
>>>> +++ b/include/uapi/linux/virtio_config.h
>>>> @@ -75,6 +75,9 @@
>>>>     */
>>>>    #define VIRTIO_F_IOMMU_PLATFORM		33
>>>> +/* This feature indicates support for the packed virtqueue layout. */
>>>> +#define VIRTIO_F_RING_PACKED		34
>>>> +
>>>>    /*
>>>>     * Does the device support Single Root I/O Virtualization?
>>>>     */
>>>> diff --git a/include/uapi/linux/virtio_ring.h b/include/uapi/linux/virtio_ring.h
>>>> index 6d5d5faa989b..2414f8af26b3 100644
>>>> --- a/include/uapi/linux/virtio_ring.h
>>>> +++ b/include/uapi/linux/virtio_ring.h
>>>> @@ -44,6 +44,13 @@
>>>>    /* This means the buffer contains a list of buffer descriptors. */
>>>>    #define VRING_DESC_F_INDIRECT	4
>>>> +/*
>>>> + * Mark a descriptor as available or used in packed ring.
>>>> + * Notice: they are defined as shifts instead of shifted values.
>>>
>>>
>>> This looks inconsistent to previous flags, any reason for using shifts?
>>
>> Yeah, it was suggested to use shifts, as _F_ should be a bit
>> number, not a shifted value:
>>
>> https://patchwork.ozlabs.org/patch/942296/#1989390
> 
> But let's add a _SPLIT_ variant that uses shifts consistently.

Maybe we could avoid adding SPLIT and PACKED, but define as follow:

#define VRING_DESC_F_INDIRECT_SHIFT 2
#define VRING_DESC_F_INDIRECT (1ull <<  VRING_DESC_F_INDIRECT_SHIFT)

#define VRING_DESC_F_AVAIL_SHIFT 7
#define VRING_DESC_F_AVAIL (1ull << VRING_DESC_F_AVAIL_SHIFT)

I think it would be better for consistency.
> 
> 
>>>
>>>
>>>> + */
>>>> +#define VRING_PACKED_DESC_F_AVAIL	7
>>>> +#define VRING_PACKED_DESC_F_USED	15
>>>> +
>>>>    /* The Host uses this in used->flags to advise the Guest: don't kick me when
>>>>     * you add a buffer.  It's unreliable, so it's simply an optimization.  Guest
>>>>     * will still kick if it's out of buffers. */
>>>> @@ -53,6 +60,23 @@
>>>>     * optimization.  */
>>>>    #define VRING_AVAIL_F_NO_INTERRUPT	1
>>>> +/* Enable events in packed ring. */
>>>> +#define VRING_PACKED_EVENT_FLAG_ENABLE	0x0
>>>> +/* Disable events in packed ring. */
>>>> +#define VRING_PACKED_EVENT_FLAG_DISABLE	0x1
>>>> +/*
>>>> + * Enable events for a specific descriptor in packed ring.
>>>> + * (as specified by Descriptor Ring Change Event Offset/Wrap Counter).
>>>> + * Only valid if VIRTIO_RING_F_EVENT_IDX has been negotiated.
>>>> + */
>>>> +#define VRING_PACKED_EVENT_FLAG_DESC	0x2
>>>
>>>
>>> Any reason for using _FLAG_ instead of _F_?
>>
>> Yeah, it was suggested to not use _F_, as these are values,
>> should not have _F_:
>>
>> https://patchwork.ozlabs.org/patch/942296/#1989390
>>
>> Regards,
>> Tiwei
>>
>>>
>>> Thanks
>>>
>>>
>>>> +
>>>> +/*
>>>> + * Wrap counter bit shift in event suppression structure
>>>> + * of packed ring.
>>>> + */
>>>> +#define VRING_PACKED_EVENT_F_WRAP_CTR	15
>>>> +
>>>>    /* We support indirect buffer descriptors */
>>>>    #define VIRTIO_RING_F_INDIRECT_DESC	28
>>>> @@ -171,4 +195,32 @@ static inline int vring_need_event(__u16 event_idx, __u16 new_idx, __u16 old)
>>>>    	return (__u16)(new_idx - event_idx - 1) < (__u16)(new_idx - old);
>>>>    }
>>>> +struct vring_packed_desc_event {
>>>> +	/* Descriptor Ring Change Event Offset/Wrap Counter. */
>>>> +	__le16 off_wrap;
>>>> +	/* Descriptor Ring Change Event Flags. */
>>>> +	__le16 flags;
>>>> +};
>>>> +
>>>> +struct vring_packed_desc {
>>>> +	/* Buffer Address. */
>>>> +	__le64 addr;
>>>> +	/* Buffer Length. */
>>>> +	__le32 len;
>>>> +	/* Buffer ID. */
>>>> +	__le16 id;
>>>> +	/* The flags depending on descriptor type. */
>>>> +	__le16 flags;
>>>> +};
>>>> +
>>>> +struct vring_packed {
>>>> +	unsigned int num;
>>>> +
>>>> +	struct vring_packed_desc *desc;
>>>> +
>>>> +	struct vring_packed_desc_event *driver;
>>>> +
>>>> +	struct vring_packed_desc_event *device;
>>>> +};
>>>> +
>>>>    #endif /* _UAPI_LINUX_VIRTIO_RING_H */
