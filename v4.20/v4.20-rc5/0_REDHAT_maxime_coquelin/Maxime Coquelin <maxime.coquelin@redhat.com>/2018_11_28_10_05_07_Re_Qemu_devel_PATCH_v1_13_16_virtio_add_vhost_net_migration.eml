Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 28 Nov 2018 18:11:53 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 020E058041B
	for <like.xu@linux.intel.com>; Wed, 28 Nov 2018 02:05:56 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 28 Nov 2018 02:05:56 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AbubxfBS2bA2dCRGVlhQBvHsw19psv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa6zbBGN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4qF2QxHqlS?=
 =?us-ascii?q?gHLSY0/n/ZisJwj6xVrhyuqBN9zIHIb4+bKeJ+c6Hfc94VWGZMUNpdWDJaAo6n?=
 =?us-ascii?q?c4sCDfAMMfpEo4TzpVYDqwa1Cwm2BOPozz9Fnnj40rc10uQgFAHJwhErEswJsH?=
 =?us-ascii?q?TNsdX6KqMSUeGzzKLVyjjDaulZ2Dj86IjNbB8tu+2DXbVpccrM10YvEwLFjlOL?=
 =?us-ascii?q?pIz/ITyay+QNvHKH7+Z6Se2vjGsnphh3rzOyxckskpHEipwJxl3H7yl13Zs5KN?=
 =?us-ascii?q?6iREJlb9OpEIFcuzyYOoduXM8uX2VltDwnxrAIp5K3ZjUGxZcpyhLFdfCKcI6F?=
 =?us-ascii?q?6Q/5WumLOzd3nndldaq/hxms9UigzfXxVs210FZRsipFicPAtn8L1xzO8MSHTe?=
 =?us-ascii?q?F9/ki51TaO0QDc9P1ELFgqmabHKJMt2KM8mocQvEjZACP7lkX7gLWLekgm4uSo?=
 =?us-ascii?q?7v7oYrTipp+SLY90jQT+P7w3msOhBOQ4LxECUHWF9uSiyrLj+VT1T65Njv0rlK?=
 =?us-ascii?q?nWrI7VJd8cqq69Ag9V0Zgs5wywDje7yNkYmXgHLFRYeBOIlYTpOlfOIOzmAve7?=
 =?us-ascii?q?mVijjDBrx/XdM73nBZXNKHfDkLH8fbpn7E5c0gUzwchF551IErEBPO7zWkjpud?=
 =?us-ascii?q?zcDx85MBK7z/zoCdVgzY4eXWOPAqmEMKLdq1OI5+QvI/WSa48RojryN/8l5/u9?=
 =?us-ascii?q?xUI/gkIXKKm1wYMMOjf/GvV9P17fZ33qjdEcV2AQsU07Re3ujVSEFjlLe3e1Wb?=
 =?us-ascii?q?l7/zw+FceqAJnOQtOQhqec1nK+F5xSemcUE12JDDLkepuJX7IWZTuPL9R9ujoD?=
 =?us-ascii?q?U7enVskmzx75rxLwybdsMr/J/DYFv4noztl/6r7vkkQt+CxpJ96Q32GEUyd/mW?=
 =?us-ascii?q?ZMDz0/x6dgqEpy4k2O3ahxn7pTEtkXr+pEVxp/OZPCwuhSDdf0VQTcONCTRwWI?=
 =?us-ascii?q?WNKjVBQ4XtM0zpclZF9gFtGjiFiX2iO6AroY0beMHYE59qPa92L8K8Z01zDN06?=
 =?us-ascii?q?x33ApueddGKWDz3v03zAPUHYOcy0g=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AZAAAZaP5bhxHrdtBkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTCCTxODeYgYX4sqgWgll0KBcxQYFIdpIjQJDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCgsJCBsOL4I2BQIDGAmCWwEBAQEDAQIgBBEOCikDAwECBgEBChUDAgIiB?=
 =?us-ascii?q?AICAwFTBwwGAgEBAYMcggIBBKYkfDOFQIULgQuLCoFXP4E4DIJfiAWCVwKPZ5A?=
 =?us-ascii?q?0BwKCHASPCwYYiVgQhy2Ido9SgUaCDU0jgzyCJxcSjgxAMYEHHIpmgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AZAAAZaP5bhxHrdtBkHAEBAQQBAQcEAQGBUQcBAQsBgTC?=
 =?us-ascii?q?CTxODeYgYX4sqgWgll0KBcxQYFIdpIjQJDQEDAQEBAQEBAgETAQEBCgsJCBsOL?=
 =?us-ascii?q?4I2BQIDGAmCWwEBAQEDAQIgBBEOCikDAwECBgEBChUDAgIiBAICAwFTBwwGAgE?=
 =?us-ascii?q?BAYMcggIBBKYkfDOFQIULgQuLCoFXP4E4DIJfiAWCVwKPZ5A0BwKCHASPCwYYi?=
 =?us-ascii?q?VgQhy2Ido9SgUaCDU0jgzyCJxcSjgxAMYEHHIpmgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,290,1539673200"; 
   d="scan'208";a="42605571"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 28 Nov 2018 02:05:55 -0800
Received: from localhost ([::1]:46900 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gRwjD-0005Fg-6Q
	for like.xu@linux.intel.com; Wed, 28 Nov 2018 05:05:55 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:47844)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <maxime.coquelin@redhat.com>) id 1gRwij-0004q1-IL
	for qemu-devel@nongnu.org; Wed, 28 Nov 2018 05:05:27 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <maxime.coquelin@redhat.com>) id 1gRwih-0001yf-1I
	for qemu-devel@nongnu.org; Wed, 28 Nov 2018 05:05:24 -0500
Received: from mx1.redhat.com ([209.132.183.28]:36474)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <maxime.coquelin@redhat.com>)
	id 1gRwig-0001xq-P9
	for qemu-devel@nongnu.org; Wed, 28 Nov 2018 05:05:22 -0500
Received: from smtp.corp.redhat.com (int-mx03.intmail.prod.int.phx2.redhat.com
	[10.5.11.13])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 29E1B7F40E;
	Wed, 28 Nov 2018 10:05:21 +0000 (UTC)
Received: from [10.36.112.54] (ovpn-112-54.ams2.redhat.com [10.36.112.54])
	by smtp.corp.redhat.com (Postfix) with ESMTPS id 5D3156FEF4;
	Wed, 28 Nov 2018 10:05:09 +0000 (UTC)
To: wexu@redhat.com, jasowang@redhat.com, qemu-devel@nongnu.org
References: <1542895581-10721-1-git-send-email-wexu@redhat.com>
	<1542895581-10721-14-git-send-email-wexu@redhat.com>
From: Maxime Coquelin <maxime.coquelin@redhat.com>
Message-ID: <2004bf63-622e-6241-f3a4-3ce50723e9ec@redhat.com>
Date: Wed, 28 Nov 2018 11:05:07 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <1542895581-10721-14-git-send-email-wexu@redhat.com>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-US
Content-Transfer-Encoding: 7bit
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.13
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.25]);
	Wed, 28 Nov 2018 10:05:21 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH v1 13/16] virtio: add vhost-net migration
 of packed ring
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: jfreimann@redhat.com, tiwei.bie@intel.com, mst@redhat.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>



On 11/22/18 3:06 PM, wexu@redhat.com wrote:
> From: Wei Xu <wexu@redhat.com>
> 
> tweaked vhost-net code to test migration.
> 
> @@ -1414,64 +1430,20 @@ long vhost_vring_ioctl(struct vhost_dev
>              r = -EFAULT;
>              break;
>          }
> +               vq->last_avail_idx = s.num & 0x7FFF;
> +               /* Forget the cached index value. */
> +               vq->avail_idx = vq->last_avail_idx;
> +               if (vhost_has_feature(vq, VIRTIO_F_RING_PACKED)) {
> +                       vq->last_avail_wrap_counter = !!(s.num & 0x8000);
> +                       vq->avail_wrap_counter = vq->last_avail_wrap_counter;
> +
> +                       vq->last_used_idx = (s.num & 0x7fFF0000) >> 16;
> +                       vq->last_used_wrap_counter = !!(s.num & 0x80000000);
> +               }
> +               break;
> +       case VHOST_GET_VRING_BASE:
> +               s.index = idx;
> +                s.num = vq->last_avail_idx;
> +               if (vhost_has_feature(vq, VIRTIO_F_RING_PACKED)) {
> +                       s.num |= vq->last_avail_wrap_counter << 15;
> +                       s.num |= vq->last_used_idx << 16;
> +                       s.num |= vq->last_used_wrap_counter << 31;

We agreed to only have avail idx and its wrap counter for vhost-user,
I guess we should have the same for Kernel backend?

This is what we have for vhost-user backend:
bit[0:14] last_avail_idx
bit[15] last_avail_wrap_counter

> +               }
> +               if (copy_to_user(argp, &s, sizeof(s)))
> +                       r = -EFAULT;
> +               break;
> 
> Signed-off-by: Wei Xu <wexu@redhat.com>
> ---
>   hw/virtio/virtio.c         | 35 ++++++++++++++++++++++++++++++-----
>   include/hw/virtio/virtio.h |  4 ++--
>   2 files changed, 32 insertions(+), 7 deletions(-)
> 
> diff --git a/hw/virtio/virtio.c b/hw/virtio/virtio.c
> index 64d5c04..7487d3d 100644
> --- a/hw/virtio/virtio.c
> +++ b/hw/virtio/virtio.c
> @@ -2963,19 +2963,40 @@ hwaddr virtio_queue_get_used_size(VirtIODevice *vdev, int n)
>       }
>   }
>   
> -uint16_t virtio_queue_get_last_avail_idx(VirtIODevice *vdev, int n)
> +int virtio_queue_get_last_avail_idx(VirtIODevice *vdev, int n)
>   {
> -    return vdev->vq[n].last_avail_idx;
> +    int idx;
> +
> +    if (virtio_host_has_feature(vdev, VIRTIO_F_RING_PACKED)) {
> +        idx = vdev->vq[n].last_avail_idx;
> +        idx |= ((int)vdev->vq[n].avail_wrap_counter) << 15;
> +        idx |= (vdev->vq[n].used_idx) << 16;
> +        idx |= ((int)vdev->vq[n].used_wrap_counter) << 31;
> +    } else {
> +        idx = (int)vdev->vq[n].last_avail_idx;
> +    }
> +    return idx;
>   }
>   
> -void virtio_queue_set_last_avail_idx(VirtIODevice *vdev, int n, uint16_t idx)
> +void virtio_queue_set_last_avail_idx(VirtIODevice *vdev, int n, int idx)
>   {
> -    vdev->vq[n].last_avail_idx = idx;
> -    vdev->vq[n].shadow_avail_idx = idx;
> +    if (virtio_vdev_has_feature(vdev, VIRTIO_F_RING_PACKED)) {
> +        vdev->vq[n].last_avail_idx = idx & 0x7fff;
> +        vdev->vq[n].avail_wrap_counter = !!(idx & 0x8000);
> +        vdev->vq[n].used_idx = (idx & 0x7fff0000) >> 16;
> +        vdev->vq[n].used_wrap_counter = !!(idx & 0x80000000);
> +    } else {
> +        vdev->vq[n].last_avail_idx = idx;
> +        vdev->vq[n].shadow_avail_idx = idx;
> +    }
>   }
>   
>   void virtio_queue_restore_last_avail_idx(VirtIODevice *vdev, int n)
>   {
> +    if (virtio_vdev_has_feature(vdev, VIRTIO_F_RING_PACKED)) {
> +        return;
> +    }
> +
>       rcu_read_lock();
>       if (vdev->vq[n].vring.desc) {
>           vdev->vq[n].last_avail_idx = vring_used_idx(&vdev->vq[n]);
> @@ -2986,6 +3007,10 @@ void virtio_queue_restore_last_avail_idx(VirtIODevice *vdev, int n)
>   
>   void virtio_queue_update_used_idx(VirtIODevice *vdev, int n)
>   {
> +    if (virtio_vdev_has_feature(vdev, VIRTIO_F_RING_PACKED)) {
> +        return;
> +    }
> +
>       rcu_read_lock();
>       if (vdev->vq[n].vring.desc) {
>           vdev->vq[n].used_idx = vring_used_idx(&vdev->vq[n]);
> diff --git a/include/hw/virtio/virtio.h b/include/hw/virtio/virtio.h
> index 9c1fa07..a6fdf3f 100644
> --- a/include/hw/virtio/virtio.h
> +++ b/include/hw/virtio/virtio.h
> @@ -272,8 +272,8 @@ hwaddr virtio_queue_get_used_addr(VirtIODevice *vdev, int n);
>   hwaddr virtio_queue_get_desc_size(VirtIODevice *vdev, int n);
>   hwaddr virtio_queue_get_avail_size(VirtIODevice *vdev, int n);
>   hwaddr virtio_queue_get_used_size(VirtIODevice *vdev, int n);
> -uint16_t virtio_queue_get_last_avail_idx(VirtIODevice *vdev, int n);
> -void virtio_queue_set_last_avail_idx(VirtIODevice *vdev, int n, uint16_t idx);
> +int virtio_queue_get_last_avail_idx(VirtIODevice *vdev, int n);
> +void virtio_queue_set_last_avail_idx(VirtIODevice *vdev, int n, int idx);
>   void virtio_queue_restore_last_avail_idx(VirtIODevice *vdev, int n);
>   void virtio_queue_invalidate_signalled_used(VirtIODevice *vdev, int n);
>   void virtio_queue_update_used_idx(VirtIODevice *vdev, int n);
> 

