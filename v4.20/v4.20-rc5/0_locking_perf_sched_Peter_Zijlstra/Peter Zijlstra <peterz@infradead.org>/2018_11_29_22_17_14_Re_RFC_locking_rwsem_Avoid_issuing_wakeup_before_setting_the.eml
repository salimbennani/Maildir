Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 30 Nov 2018 08:51:46 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga008.fm.intel.com (fmsmga008.fm.intel.com [10.253.24.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 6D3E7580460;
	Thu, 29 Nov 2018 14:17:30 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga008-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 29 Nov 2018 14:17:30 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AUo2z1xez+Bic1qJFe7/ge5WtlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc6+ZhGN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4qF2QxHqlS?=
 =?us-ascii?q?gHLSY0/m/XhMJukaxVoxyhqBNjzIHJYo6aOuF+frvfcN4BWWpNQtpdWzBdDo6m?=
 =?us-ascii?q?cYcCCfcKM+ZCr4n6olsDtQGwChewBOzx0D9Dm3z53aw40+QlCgHGwBYgEMgTu3?=
 =?us-ascii?q?nTtNX6KrsSXv6vzKjJ1jjDbvVW2Tnn6IfSbx8uv+uDUq9qfcrW00kvGBrIg1ON?=
 =?us-ascii?q?ooLmJzOYzvoBv3Sf4uZ6SO6ihXArpxtsrjWs2ssgkIjEi4ANxlza+ih12ps5KN?=
 =?us-ascii?q?OmREJhf9KoDZlduzuHO4dqXs8vRXxjtjwgxb0co5G7eTAHyJQ5yB7bbPyKa5aI?=
 =?us-ascii?q?4h39W+aLOzt4h2xqeKi5hxms9Uis0Or8VtO70FpSrypFlMfDtmwV2hDN9sSKTu?=
 =?us-ascii?q?Fx8lqv1DqRzQzf9+JJLVwumafaKZMt2rswmYASsUTHEC/2gkL2jKqOe0Ug++io?=
 =?us-ascii?q?7fnnY7r/qp+fKYB0kAf+PboqmsCmBuQ5PA4OUHaB+emnyr3j8lP2QK9Qgv01jK?=
 =?us-ascii?q?bZqpbaKtofpqKjBA9VyIkj5w6lDzi6yNQYgWUHLFVddRKDjojpOE/BLOr3DPei?=
 =?us-ascii?q?mFmslDZrx/bbPrzuGJnNL37DkKv/crZ58UJT1A0zzdVH7ZJOFr4BOO7zWlP2tN?=
 =?us-ascii?q?HADh82KQ20w/r9B9V6zI8eWX+PDbWfMKPdqlKI4uMvI++RZI4aojr9Kv4l5+Lw?=
 =?us-ascii?q?gn89g1MSYa6p3Z4PYnCiAvtmO1mZYWbrgtoZE2cKuRQxQPbpiF2FVz5TYXGyUr?=
 =?us-ascii?q?k45jE6DoKmEIjCSpqsgLyHwCe0AJlWanpaBVCLFHfib5+EVOsUaCKOPs9hlSQJ?=
 =?us-ascii?q?WqK6S48h0hGutxX2y6B9IerW4SAYsZPj1N5o5+zcjx0y9Dp0D9iD3GGJVW17gm?=
 =?us-ascii?q?QIRzou1qBlvUN90kuD0bR/g/FAFtxc/fVJXh0+NZ7d1eN6Dd/yVxnFfteITlam?=
 =?us-ascii?q?X9qnDSswTtI3398BfUJ9F8++gRDE2iqgG6UVmKCTBJwo7qLc2GD8KNtnxHbYyq?=
 =?us-ascii?q?YtlVkmTdFJNW29mKF/8Q/fB4rKk0Wck6anbqAc3C/L9GeewmuCpkBYUAhsUarb?=
 =?us-ascii?q?WXATfFfZrdP85knaVb+hFawnMhddyc6FMqZFd8fmjUtYS/v5ONTReWSxm3yuCh?=
 =?us-ascii?q?aO3b6MaIvqe2MA3CTSEkQEkgYT/WqYOgg6HCuuv2XeDDl2H1L1f0zs6fV+qG+8?=
 =?us-ascii?q?TkIs0wGKbkhh172p+h4Vhf2QUe8T0qgDuCc7rzV0HVC9393NBtqEpgpherhcYN?=
 =?us-ascii?q?wn7FdG02LZqxJyPpi6I69+gV4edhx9v1ny2BVvFoVAjc8qoWswwwp2N62Z301O?=
 =?us-ascii?q?djOC0Z/rJ73YN3P9/Basa67RxFHTy9KW+qYJ6PQlpFTvpgCpFkw+83p519lZyW?=
 =?us-ascii?q?eT5pLPDAAKS5L+Tl439wRmp7HdeiQ8557U2WdwPqWusz7C28gmBO0qyhu7e9df?=
 =?us-ascii?q?MaWEFBL9EsEABsiuLvAqlEatbh4eIO9S86s0Ndu8d/SawK6rIPpgnDW+gGRd4Y?=
 =?us-ascii?q?ByzliD9zBhRe7PxZoFxe+X3hGGVzvlkFiuqMT3lp1aajEIGWq/zzPpBIpQZq10?=
 =?us-ascii?q?YIYKBn2iI8yxxtVimZHtX2RU+0KkB1MDwMWpYwadb0Th3Q1M0kQauXymmSqiwz?=
 =?us-ascii?q?10iT0ptbef3CrVzuTmdRoHPHNLRWZ4gVftJ4i0k84VXEyyYwc1kxul4F7wx7JH?=
 =?us-ascii?q?q6RnM2nTXUBIcjD0L254SKuwtbmCY8lV5JMzqypXU+e8YVGcSrHjpRsXyCfjH2?=
 =?us-ascii?q?pYxDAmeDCmoJT5nxpmiG2DKHZ/tmbWecZ1xR3H/tzTWeZR3iYaRCl/kTTWBkKz?=
 =?us-ascii?q?P96z8dWWlpfDtPuzV2agVp1VbCnqwpmMtCq95W12HxK/m+q/lcHgEQg/ySX7zc?=
 =?us-ascii?q?VlVT3UrBbgZYnmz6e6PvhmfkVyBF/89tB1GodxkoYrgJEQ2H4ahoia/HYdkGfz?=
 =?us-ascii?q?N8lb1rz6bHYXWTELxNvV6hD/2EJ/NnKJ2575VnKFz8tkZtm6YXkZ1jgz7s9UE6?=
 =?us-ascii?q?eU8KJLnTFurVWmtwLRbuNwnjMcyfso9X4bjPsFuAsrziWBHL8SGVNUMjDrlxSN?=
 =?us-ascii?q?99q+trlYZH6zcbis00pzhcyhDLaHog1GWXf2YJEiHTJr7sVkMVLBy3nz6oDieN?=
 =?us-ascii?q?nNYtMfrByUkxHcj+dLLJI9jOYFhS1iOWjlp30q1/Y7jQBy3ZG9pIWIMH9i/KW9?=
 =?us-ascii?q?Ah5FLDH1Y94T9yrpjaZfmMaWwo+uEo9gGjUNQJvnU/aoHCgOuvTgMgaECCc8pW?=
 =?us-ascii?q?uDGbrDAQ+f719rr3DVHJCuKX6XP2MVzcl4SBmeOUxfgx0UXDMgkZ4iDQ2qwM3h?=
 =?us-ascii?q?cEFk5jEe/FL4qx1Myv52OBn7SGvQuACoajIsQpiFMBVW9h1C51vSMcGG7uNzGD?=
 =?us-ascii?q?xY/oS8rAOXLGyXfR9IDWYPWkyLHF3jOriu5d/d8+mXHOa+Lv3OYamQpuxaTfuH?=
 =?us-ascii?q?2ZWv0o5+9TaWKsqPJmViD+E82kdbXXB2BcXZmzYMSywWjS7NbNSbpBCz+iJptM?=
 =?us-ascii?q?C/7e/rVRnr5YuODbtSLNpu9wq3gaeFK+6fmiJ5JSxE2ZMLwH/C0KIf00IKiyFy?=
 =?us-ascii?q?azmtFqwNujTQTK3LgK9YER4aZzl3NMtJ9K882ghNOcjGitL6zLJ4j/g1C0tbWl?=
 =?us-ascii?q?zlgM2mecsKI2SlPlPdGEmLLKiGJSHMw8zvfaO8SLhQgP9IuBGqpTmbE1HsPjKY?=
 =?us-ascii?q?mjntVhCvN/xMjS6BMBxfvoG9bghiCWz5QN36bR27Ncd9jScqzr0smnPKKWkcPC?=
 =?us-ascii?q?B8ckxXqL2Q6CJYgvNnFG1A7npqN++EmymC4uncK5YWt+ZrAytum+Jb5nQ616Va?=
 =?us-ascii?q?7CVeSPNpnyvSq40mn1bzvuCRyzZjVxpU4hxWiZmM9RFuMLvU3oJcVnHA9RgWq2?=
 =?us-ascii?q?OdF0JZicFiD4jXtrxd0JD9laD3MytY+pqA5cYACtLGAMOBPmAoPRfgFHjTFgRT?=
 =?us-ascii?q?Hm3jDn3Wm0EIyKLazXaStJVv8pU=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAAA8ZABch0O0hNFdCBoBAQEBAQIBA?=
 =?us-ascii?q?QEBBwIBAQEBgVEFAQEBAQsBg2snjBFfiyqCDRSXMIIyAYd0IjQJDQEDAQEBAQE?=
 =?us-ascii?q?BAgETAQEBCA0JCCkjDII2IoJlAQIDAQIkEwYBATcBBQkBAQoOCgklAwwFGDEYG?=
 =?us-ascii?q?YMDggIFqEqBbDOCdgEBBYcqCIwWF4FAP4ERgmQuhFyDWoImiQkah02PKwoJgiG?=
 =?us-ascii?q?LKINeCxiBfY8fmhSCDU0wCIMnghsMFxKITIVAPzKBBQEBjT8BAQ?=
X-IPAS-Result: =?us-ascii?q?A0ABAAA8ZABch0O0hNFdCBoBAQEBAQIBAQEBBwIBAQEBgVE?=
 =?us-ascii?q?FAQEBAQsBg2snjBFfiyqCDRSXMIIyAYd0IjQJDQEDAQEBAQEBAgETAQEBCA0JC?=
 =?us-ascii?q?CkjDII2IoJlAQIDAQIkEwYBATcBBQkBAQoOCgklAwwFGDEYGYMDggIFqEqBbDO?=
 =?us-ascii?q?CdgEBBYcqCIwWF4FAP4ERgmQuhFyDWoImiQkah02PKwoJgiGLKINeCxiBfY8fm?=
 =?us-ascii?q?hSCDU0wCIMnghsMFxKITIVAPzKBBQEBjT8BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,296,1539673200"; 
   d="scan'208";a="140175796"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 29 Nov 2018 14:17:29 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726451AbeK3JYX (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 30 Nov 2018 04:24:23 -0500
Received: from bombadil.infradead.org ([198.137.202.133]:55986 "EHLO
        bombadil.infradead.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726264AbeK3JYW (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 30 Nov 2018 04:24:22 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
        d=infradead.org; s=bombadil.20170209; h=In-Reply-To:Content-Type:MIME-Version
        :References:Message-ID:Subject:Cc:To:From:Date:Sender:Reply-To:
        Content-Transfer-Encoding:Content-ID:Content-Description:Resent-Date:
        Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:
        List-Help:List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
         bh=+mMrZVtKA2Oq8POkxjY1MuymzApncZl3S9cuM6cdNVc=; b=gkC5JIvd68FIhdCRvXy+SKuc9
        HMxdQpSlwHvV1WWKdKJuhr3AHRUvuFWdrVrAmLlJGTMpnmP8ddg+GkjiG3jkuKIHk4aFZcogV2K7Z
        HhpAQhkqQI3qwJKkN/4F0nRi+Xt+cd3ZCeeVUl4QtArcah7z5EgWGpO74WjeClrsd2tj4kdbZjHZ3
        J7Bkw12JL47Rbnznbo8c7xofUUE/9y7K2C9wh+awsrO1tzklMlOlqhnwngcJYV44tCgS9S7FALJvM
        EFqivWjE69UQPjSsuwEyeNBey7ij+kw3Bzw5TCrS5Fl1httbjtQgn6EVg/PE4ukam7gkCfFDMArrz
        WRYm7Ea1Q==;
Received: from j217100.upc-j.chello.nl ([24.132.217.100] helo=hirez.programming.kicks-ass.net)
        by bombadil.infradead.org with esmtpsa (Exim 4.90_1 #2 (Red Hat Linux))
        id 1gSUcX-0004eT-6d; Thu, 29 Nov 2018 22:17:17 +0000
Received: by hirez.programming.kicks-ass.net (Postfix, from userid 1000)
        id 8EC952029FD58; Thu, 29 Nov 2018 23:17:14 +0100 (CET)
Date: Thu, 29 Nov 2018 23:17:14 +0100
From: Peter Zijlstra <peterz@infradead.org>
To: Davidlohr Bueso <dave@stgolabs.net>
Cc: Yongji Xie <elohimes@gmail.com>, mingo@redhat.com,
        will.deacon@arm.com, linux-kernel@vger.kernel.org,
        xieyongji@baidu.com, zhangyu31@baidu.com, liuqi16@baidu.com,
        yuanlinsi01@baidu.com, nixun@baidu.com, lilin24@baidu.com,
        longman@redhat.com, andrea.parri@amarulasolutions.com
Subject: Re: [RFC] locking/rwsem: Avoid issuing wakeup before setting the
 reader waiter to nil
Message-ID: <20181129221714.GF11632@hirez.programming.kicks-ass.net>
References: <1543495830-2644-1-git-send-email-xieyongji@baidu.com>
 <20181129131232.GN2131@hirez.programming.kicks-ass.net>
 <5598cd71-c3c8-d6ef-eb30-777cf901a2ef@redhat.com>
 <20181129160627.GU2131@hirez.programming.kicks-ass.net>
 <8cc45695-b325-a219-8b46-d5da6ddfdd63@redhat.com>
 <20181129172700.GA11632@hirez.programming.kicks-ass.net>
 <20181129180828.GA11650@hirez.programming.kicks-ass.net>
 <729ceddb-dd9a-ec2a-f74e-03fa4d7e65e8@redhat.com>
 <20181129213017.v3eljor54lfpoug2@linux-r8p5>
 <20181129213421.wwvhsjql3m3lvtv4@linux-r8p5>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181129213421.wwvhsjql3m3lvtv4@linux-r8p5>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, Nov 29, 2018 at 01:34:21PM -0800, Davidlohr Bueso wrote:
> I messed up something such that waiman was not in the thread. Ccing.
> 
> > On Thu, 29 Nov 2018, Waiman Long wrote:
> > 
> > > That can be costly for x86 which will now have 2 locked instructions.
> > 
> > Yeah, and when used as an actual queue we should really start to notice.
> > Some users just have a single task in the wake_q because avoiding the cost
> > of wake_up_process() with locks held is significant.
> > 
> > How about instead of adding the barrier before the cmpxchg, we do it
> > in the failed branch, right before we return. This is the uncommon
> > path.
> > 
> > Thanks,
> > Davidlohr
> > 
> > diff --git a/kernel/sched/core.c b/kernel/sched/core.c
> > index 091e089063be..0d844a18a9dc 100644
> > --- a/kernel/sched/core.c
> > +++ b/kernel/sched/core.c
> > @@ -408,8 +408,14 @@ void wake_q_add(struct wake_q_head *head, struct task_struct *task)
> > 	 * This cmpxchg() executes a full barrier, which pairs with the full
> > 	 * barrier executed by the wakeup in wake_up_q().
> > 	 */
> > -	if (cmpxchg(&node->next, NULL, WAKE_Q_TAIL))
> > +	if (cmpxchg(&node->next, NULL, WAKE_Q_TAIL)) {
> > +		/*
> > +		 * Ensure, that when the cmpxchg() fails, the corresponding
> > +		 * wake_up_q() will observe our prior state.
> > +		 */
> > +		smp_mb__after_atomic();
> > 		return;
> > +	}

So wake_up_q() does:

  wake_up_q():
	node->next = NULL;
	/* implied smp_mb */
	wake_up_process();

So per the cross your variables 'rule', this side then should do:

  wake_q_add():
	/* wake_cond = true */
	smp_mb()
	cmpxchg_relaxed(&node->next, ...);

So that the ordering pivots around node->next.

Either we see NULL and win the cmpxchg (in which case we'll do the
wakeup later) or, when we fail the cmpxchg, we must observe what came
before the failure.

If it wasn't so damn late, I'd try and write a litmus test for this,
because now I'm starting to get confused -- also probably because it's
late.

In any case, I think you patch is 'wrong' because it puts the barrier on
the wrong side of the cmpxchg() (after, as opposed to before).
