Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 26 Nov 2018 21:38:15 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B53295803C2
	for <like.xu@linux.intel.com>; Mon, 26 Nov 2018 04:49:02 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 26 Nov 2018 04:49:02 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AqNPAmx1SJS92QZLXsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?seMSI/ad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXXRPXshRWSJCDI2z?=
 =?us-ascii?q?YYQAAOgdMuhFt4nwpVkAoBSjCQSiGO/g1CRIi2T53aEmyekvFh3K0QIgEt8IrX?=
 =?us-ascii?q?/arM/1NKAXUe2ty6fH1zrCZO5K1zjj6YjIbhEgquyLULJ1a8re10gvFx/Ej1iL?=
 =?us-ascii?q?s4zqIS6a1uQXvGiH9eZvSeWvi2s+pgx3vzOhxd8sh5HXio4JyV3I7zh1zJs2KN?=
 =?us-ascii?q?GiVkJ2b96pHIFNuyyYL4d6XN8uTmVytConxLAKp4S3cDUJxZkp3RLTdf+Kfo6V?=
 =?us-ascii?q?6Rz5TumROy13hHd9dbK/mRmy9U+gx/X4Vsm1y1ZKsjFFnsPDtnALyhzf8M+HSu?=
 =?us-ascii?q?Fy/ku52DaP0R7c6v1cLEwqiabWKIQtzqMtmpcQq0jPACH7lUXsgKOLdEgo4u2o?=
 =?us-ascii?q?5P7mYrXiqJ+cLYh0igTmP6Q3hMO/BPk4PhETUGeF5+Szyrnj8VTiT7VNk/02lL?=
 =?us-ascii?q?XWv47BJcgcoq65AgxV3Zg55xewEjeryNAYnXgBLFJYdxOLlYnpO1fSIP/mCfez?=
 =?us-ascii?q?mUijkDBux/3dOL3hBZPNLnfFkLf8Z7p97FRcyAUrwdBF+51UEq0BIO70WkLpsN?=
 =?us-ascii?q?zYDxw5PBKuz+foFdVwzYceWWOJAq+EP6Leq16I5uQzI+aSYI8ZoiryK/8g562m?=
 =?us-ascii?q?sHkihFVIfbW1xYBFLze8H+96OAOfZnzjhMpHFn0F+Q83TejvgVvFViZPZnG0RO?=
 =?us-ascii?q?Ul6zQmTY6rE4rHFb2rm6GLiSKyH5lKYTJfB1WRVHvlaYiAHu0BcT+fOdNJlDsC?=
 =?us-ascii?q?Wr68DYg72ka1qQX4xrF7e/fS4TASrpn51dJ4tNHUwDI/6z1yR/ua12/FG2JrmW?=
 =?us-ascii?q?cGbyU70KB2vQp2zVLVgoZihPkNMNVDr8lEUxsofcrZ1eF7F8LaQA/Nft6VDl2h?=
 =?us-ascii?q?R4P1UnkKUtstzopWMA5GENK4g0WGhnLyDg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BeAADX6vtbhxHrdtBiHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBVAQBAQsBgTCCTxODeYh3iyGBYC2ZKgUPBRgUiGMiNwYNAQMBAQEBAQECARM?=
 =?us-ascii?q?BAQEKCwkIGw4vgjYFAgMaAQaCWwEBAQECAQECIAQfCikDAgEBAgYBAQoOCiYEA?=
 =?us-ascii?q?gIDAVMGDQYCAQEBFoMGAYF5CAEEpQt8M4oKD4JtiRwXgUA/gThwgXuEXgEBgyK?=
 =?us-ascii?q?CVwKJTAWFSJBpCYQhgXSEFIcABhiJUYQygwWYMIFcgXdNIxWDJ4InFxKOC0Axg?=
 =?us-ascii?q?QcciTBHgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0BeAADX6vtbhxHrdtBiHAEBAQQBAQcEAQGBVAQBAQsBgTC?=
 =?us-ascii?q?CTxODeYh3iyGBYC2ZKgUPBRgUiGMiNwYNAQMBAQEBAQECARMBAQEKCwkIGw4vg?=
 =?us-ascii?q?jYFAgMaAQaCWwEBAQECAQECIAQfCikDAgEBAgYBAQoOCiYEAgIDAVMGDQYCAQE?=
 =?us-ascii?q?BFoMGAYF5CAEEpQt8M4oKD4JtiRwXgUA/gThwgXuEXgEBgyKCVwKJTAWFSJBpC?=
 =?us-ascii?q?YQhgXSEFIcABhiJUYQygwWYMIFcgXdNIxWDJ4InFxKOC0AxgQcciTBHgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,282,1539673200"; 
   d="asc'?scan'208";a="53314098"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 26 Nov 2018 04:49:01 -0800
Received: from localhost ([::1]:35536 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gRGJw-0003ek-Mu
	for like.xu@linux.intel.com; Mon, 26 Nov 2018 07:49:00 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:49794)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <mreitz@redhat.com>) id 1gRGFk-00085c-V5
	for qemu-devel@nongnu.org; Mon, 26 Nov 2018 07:44:42 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <mreitz@redhat.com>) id 1gRGFj-0008AR-HS
	for qemu-devel@nongnu.org; Mon, 26 Nov 2018 07:44:40 -0500
Received: from mx1.redhat.com ([209.132.183.28]:2283)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <mreitz@redhat.com>)
	id 1gRGFg-00081L-Dv; Mon, 26 Nov 2018 07:44:36 -0500
Received: from smtp.corp.redhat.com (int-mx03.intmail.prod.int.phx2.redhat.com
	[10.5.11.13])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id C1CF1307D943;
	Mon, 26 Nov 2018 12:44:35 +0000 (UTC)
Received: from dresden.str.redhat.com (ovpn-204-255.brq.redhat.com
	[10.40.204.255])
	by smtp.corp.redhat.com (Postfix) with ESMTPS id 5F122608C3;
	Mon, 26 Nov 2018 12:44:34 +0000 (UTC)
To: Kevin Wolf <kwolf@redhat.com>
References: <20181126112828.23047-1-kwolf@redhat.com>
	<20181126112828.23047-2-kwolf@redhat.com>
	<7b3288b3-f7f8-b6cf-d4b1-b0540205e3df@redhat.com>
	<20181126123359.GC6612@localhost.localdomain>
From: Max Reitz <mreitz@redhat.com>
Openpgp: preference=signencrypt
Autocrypt: addr=mreitz@redhat.com; prefer-encrypt=mutual; keydata=
	xsBNBFXOJlcBCADEyyhOTsoa/2ujoTRAJj4MKA21dkxxELVj3cuILpLTmtachWj7QW+TVG8U
	/PsMCFbpwsQR7oEy8eHHZwuGQsNpEtNC2G/L8Yka0BIBzv7dEgrPzIu+W3anZXQW4702+uES
	U29G8TP/NGfXRRHGlbBIH9KNUnOSUD2vRtpOLXkWsV5CN6vQFYgQfFvmp5ZpPeUe6xNplu8V
	mcTw8OSEDW/ZnxJc8TekCKZSpdzYoxfzjm7xGmZqB18VFwgJZlIibt1HE0EB4w5GsD7x5ekh
	awIe3RwoZgZDLQMdOitJ1tUc8aqaxvgA4tz6J6st8D8pS//m1gAoYJWGwwIVj1DjTYLtABEB
	AAHNHU1heCBSZWl0eiA8bXJlaXR6QHJlZGhhdC5jb20+wsCTBBMBCAA9AhsDBQkSzAMABQsJ
	CAcCBhUICQoLAgQWAgMBAh4BAheABQJVzie5FRhoa3A6Ly9rZXlzLmdudXBnLm5ldAAKCRD0
	B9sAYdXPQDcIB/9uNkbYEex1rHKz3mr12uxYMwLOOFY9fstP5aoVJQ1nWQVB6m2cfKGdcRe1
	2/nFaHSNAzT0NnKz2MjhZVmcrpyd2Gp2QyISCfb1FbT82GMtXFj1wiHmPb3CixYmWGQUUh+I
	AvUqsevLA+WihgBUyaJq/vuDVM1/K9Un+w+Tz5vpeMidlIsTYhcsMhn0L9wlCjoucljvbDy/
	8C9L2DUdgi3XTa0ORKeflUhdL4gucWoAMrKX2nmPjBMKLgU7WLBc8AtV+84b9OWFML6NEyo4
	4cP7cM/07VlJK53pqNg5cHtnWwjHcbpGkQvx6RUx6F1My3y52vM24rNUA3+ligVEgPYBzsBN
	BFXOJlcBCADAmcVUNTWT6yLWQHvxZ0o47KCP8OcLqD+67T0RCe6d0LP8GsWtrJdeDIQk+T+F
	xO7DolQPS6iQ6Ak2/lJaPX8L0BkEAiMuLCKFU6Bn3lFOkrQeKp3u05wCSV1iKnhg0UPji9V2
	W5eNfy8F4ZQHpeGUGy+liGXlxqkeRVhLyevUqfU0WgNqAJpfhHSGpBgihUupmyUg7lfUPeRM
	DzAN1pIqoFuxnN+BRHdAecpsLcbR8sQddXmDg9BpSKozO/JyBmaS1RlquI8HERQoe6EynJhd
	64aICHDfj61rp+/0jTIcevxIIAzW70IadoS/y3DVIkuhncgDBvGbF3aBtjrJVP+5ABEBAAHC
	wGUEGAEIAA8FAlXOJlcCGwwFCRLMAwAACgkQ9AfbAGHVz0CbFwf9F/PXxQR9i4N0iipISYjU
	sxVdjJOM2TMut+ZZcQ6NSMvhZ0ogQxJ+iEQ5OjnIputKvPVd5U7WRh+4lF1lB/NQGrGZQ1ic
	alkj6ocscQyFwfib+xIe9w8TG1CVGkII7+TbS5pXHRxZH1niaRpoi/hYtgzkuOPp35jJyqT/
	/ELbqQTDAWcqtJhzxKLE/ugcOMK520dJDeb6x2xVES+S5LXby0D4juZlvUj+1fwZu+7Io5+B
	bkhSVPb/QdOVTpnz7zWNyNw+OONo1aBUKkhq2UIByYXgORPFnbfMY7QWHcjpBVw9MgC4tGeF
	R4bv+1nAMMxKmb5VvQCExr0eFhJUAHAhVg==
Message-ID: <1ebf8831-fd8a-28ab-9ea9-4664ce93949a@redhat.com>
Date: Mon, 26 Nov 2018 13:44:32 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.0
MIME-Version: 1.0
In-Reply-To: <20181126123359.GC6612@localhost.localdomain>
Content-Type: multipart/signed; micalg=pgp-sha256;
	protocol="application/pgp-signature";
	boundary="JoJo5fBu3zSMaMhqL1R7yj27rqtsTpkCW"
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.13
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.48]);
	Mon, 26 Nov 2018 12:44:35 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
X-Content-Filtered-By: Mailman/MimeDel 2.1.21
Subject: Re: [Qemu-devel] [PATCH for-3.1 1/2] block: Don't inactivate
 children before parents
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-devel@nongnu.org, qemu-block@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

This is an OpenPGP/MIME signed message (RFC 4880 and 3156)
--JoJo5fBu3zSMaMhqL1R7yj27rqtsTpkCW
From: Max Reitz <mreitz@redhat.com>
To: Kevin Wolf <kwolf@redhat.com>
Cc: qemu-block@nongnu.org, qemu-devel@nongnu.org
Message-ID: <1ebf8831-fd8a-28ab-9ea9-4664ce93949a@redhat.com>
Subject: Re: [PATCH for-3.1 1/2] block: Don't inactivate children before
 parents
References: <20181126112828.23047-1-kwolf@redhat.com>
 <20181126112828.23047-2-kwolf@redhat.com>
 <7b3288b3-f7f8-b6cf-d4b1-b0540205e3df@redhat.com>
 <20181126123359.GC6612@localhost.localdomain>
In-Reply-To: <20181126123359.GC6612@localhost.localdomain>
Content-Type: multipart/mixed;
 boundary="------------A960B8FC29B45F93628E7FC0"

--------------A960B8FC29B45F93628E7FC0
Content-Type: text/plain; charset=windows-1252
Content-Transfer-Encoding: quoted-printable

On 26.11.18 13:33, Kevin Wolf wrote:
> Am 26.11.2018 um 13:05 hat Max Reitz geschrieben:
>> On 26.11.18 12:28, Kevin Wolf wrote:
>>> bdrv_child_cb_inactivate() asserts that parents are already inactive
>>> when children get inactivated. This precondition is necessary because=

>>> parents could still issue requests in their inactivation code.
>>>
>>> When block nodes are created individually with -blockdev, all of them=

>>> are monitor owned and will be returned by bdrv_next() in an undefined=

>>> order (in practice, in the order of their creation, which is usually
>>> children before parents), which obviously fails the assertion.
>>>
>>> This patch fixes the ordering by skipping nodes with still active
>>> parents in bdrv_inactivate_recurse() because we know that they will b=
e
>>> covered by recursion when the last active parent becomes inactive.
>>>
>>> Signed-off-by: Kevin Wolf <kwolf@redhat.com>
>>> ---
>>>  block.c | 22 ++++++++++++++++++++++
>>>  1 file changed, 22 insertions(+)
>>>
>>> diff --git a/block.c b/block.c
>>> index 5ba3435f8f..0569275e31 100644
>>> --- a/block.c
>>> +++ b/block.c
>>> @@ -4612,6 +4612,22 @@ void bdrv_invalidate_cache_all(Error **errp)
>>>      }
>>>  }
>>> =20
>>> +static bool bdrv_has_active_bds_parent(BlockDriverState *bs)
>>> +{
>>> +    BdrvChild *parent;
>>> +
>>> +    QLIST_FOREACH(parent, &bs->parents, next_parent) {
>>> +        if (parent->role->parent_is_bds) {
>>> +            BlockDriverState *parent_bs =3D parent->opaque;
>>> +            if (!(parent_bs->open_flags & BDRV_O_INACTIVE)) {
>>> +                return true;
>>> +            }
>>> +        }
>>> +    }
>>
>> Now I see why you say this might make sense as a permission.
>=20
> You do? To be honest, now that I found this solution, I don't think a
> permission makes much sense any more, because you would have the same
> loop, and you would only be checking a different flag in the end.
>=20
>>> +
>>> +    return false;
>>> +}
>>> +
>>>  static int bdrv_inactivate_recurse(BlockDriverState *bs,
>>>                                     bool setting_flag)
>>>  {
>>> @@ -4622,6 +4638,12 @@ static int bdrv_inactivate_recurse(BlockDriver=
State *bs,
>>>          return -ENOMEDIUM;
>>>      }
>>> =20
>>> +    /* Make sure that we don't inactivate a child before its parent.=

>>> +     * It will be covered by recursion from the yet active parent. *=
/
>>> +    if (bdrv_has_active_bds_parent(bs)) {
>>> +        return 0;
>>> +    }
>>> +
>>
>> Hm.  Wouldn't it make more sense to always return early when there are=

>> any BDS parents?  Because if there are any BDS parents and none of the=
m
>> are active (anymore), then this child will have been inactivated
>> already, and we can save ourselves the trouble of going through the re=
st
>> of the function again.
>=20
> I don't quite follow... If we always return early no matter whether
> there is an active parent, who will have inactivated the child?
>=20
> After trying to write up why you're wrong, I think there are two cases
> and both of us have a point:
>=20
> 1. bdrv_next() enumerates the child node first and then the last BDS
>    parent. This is what this patch fixes.
>=20
>    It will inactivate the child exactly once, at the time that the last=

>    parent has become inactive (and recursively calls this function for
>    each of its children). If you remove that one inactivation, too,
>    children won't be inactivated at all.
>=20
> 2. bdrv_next() enumerates the last BDS parent first and then the child.=

>    This is unlikely and might even be impossible today, but once we
>    expose bdrv_reopen() in QMP and let the user reconfigure the edges,
>    it probably becomes possible.

blockdev-snapshot exists today.

>    In this case, even after my patch we inactivate drivers twice. Maybe=

>    we should just return early if BDRV_O_INACTIVE is already set. What
>    makes me kind of unsure is that we already test for this flag, but
>    only for part of the function.
>=20
>    Any ideas how to test this? Can we create such a situation today?

As I wrote in my second mail just now, I think bdrv_inactivate_all()
needs to check this.

See attached diff to 234, but I don't know whether we can really test
this, as there is no failure when .bdrv_inactivate() is called multiple
times.  (What I've done is add debugging code to see that it is called
multiple times).

Max

>> Do drivers support multiple calls to .bdrv_in_activate() at all?
>=20
> They were probably not designed for that... Not sure if there was ever =
a
> commit where we used to call them multiple times without failing the
> assertion first.
>=20
> Kevin
>=20


--------------A960B8FC29B45F93628E7FC0
Content-Type: text/plain; charset=UTF-8;
 name="diff"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: attachment;
 filename="diff"

diff --git a/tests/qemu-iotests/234 b/tests/qemu-iotests/234
index 1f695d337a..b119b4cc4d 100755
--- a/tests/qemu-iotests/234
+++ b/tests/qemu-iotests/234
@@ -27,11 +27,13 @@ iotests.verify_image_format(supported_fmts=3D['raw', =
'qcow2'])
 iotests.verify_platform(['linux'])
=20
 with iotests.FilePath('img') as img_path, \
+     iotests.FilePath('backing') as backing_path, \
      iotests.FilePath('mig_fifo_a') as fifo_a, \
      iotests.FilePath('mig_fifo_b') as fifo_b, \
      iotests.VM(path_suffix=3D'a') as vm_a, \
      iotests.VM(path_suffix=3D'b') as vm_b:
=20
+    iotests.qemu_img_pipe('create', '-f', iotests.imgfmt, backing_path, =
'64M')
     iotests.qemu_img_pipe('create', '-f', iotests.imgfmt, img_path, '64M=
')
=20
     os.mkfifo(fifo_a)
@@ -40,14 +42,20 @@ with iotests.FilePath('img') as img_path, \
     iotests.log('Launching source VM...')
     (vm_a.add_blockdev('file,filename=3D%s,node-name=3Ddrive0-file' % (i=
mg_path))
          .add_blockdev('%s,file=3Ddrive0-file,node-name=3Ddrive0' % (iot=
ests.imgfmt))
+         .add_blockdev('file,filename=3D%s,node-name=3Ddrive0-backing-fi=
le' % (backing_path))
+         .add_blockdev('%s,file=3Ddrive0-backing-file,node-name=3Ddrive0=
-backing' % (iotests.imgfmt))
          .launch())
=20
     iotests.log('Launching destination VM...')
     (vm_b.add_blockdev('file,filename=3D%s,node-name=3Ddrive0-file' % (i=
mg_path))
          .add_blockdev('%s,file=3Ddrive0-file,node-name=3Ddrive0' % (iot=
ests.imgfmt))
+         .add_blockdev('file,filename=3D%s,node-name=3Ddrive0-backing-fi=
le' % (backing_path))
+         .add_blockdev('%s,file=3Ddrive0-backing-file,node-name=3Ddrive0=
-backing' % (iotests.imgfmt))
          .add_incoming("exec: cat '%s'" % (fifo_a))
          .launch())
=20
+    vm_a.qmp('blockdev-snapshot', node=3D'drive0-backing', overlay=3D'dr=
ive0')
+
     iotests.log('Enabling migration QMP events on A...')
     iotests.log(vm_a.qmp('migrate-set-capabilities', capabilities=3D[
         {

--------------A960B8FC29B45F93628E7FC0--

--JoJo5fBu3zSMaMhqL1R7yj27rqtsTpkCW
Content-Type: application/pgp-signature; name="signature.asc"
Content-Description: OpenPGP digital signature
Content-Disposition: attachment; filename="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQEzBAEBCAAdFiEEkb62CjDbPohX0Rgp9AfbAGHVz0AFAlv76rAACgkQ9AfbAGHV
z0CpCwf/RdlAUgCGCTAw0xuDc0nHcMYFTGMnVdESjiq1XEjK5DdLsXfRDP4RDWix
pEpQ4O6eiF/20fLZH3v96WSGDkbwUoDX6bc8BH/QojspMFQ4F+xv4DeWKV+lmZtz
w9ofHgTJV6lJNkFSwxwnmtVKHRmH0lqUNvpGAL95RO55uCBDFpvrKXv6EQy3ph/b
0EQS5WCutA6iDslVgevrmgUgBW9kOZbQLqWrav1H0jAZWZtIn7aFwNXL4oiVTfYg
xtd+PzjeY9uEuYIJK3wTs7rWlNbyHUOQj2k0gnF2F59M7qiTr7xbxxWhlrruB3gz
MkhKRCw7+MANl5M2LTw6kgQohGLSZw==
=MiU2
-----END PGP SIGNATURE-----

--JoJo5fBu3zSMaMhqL1R7yj27rqtsTpkCW--

