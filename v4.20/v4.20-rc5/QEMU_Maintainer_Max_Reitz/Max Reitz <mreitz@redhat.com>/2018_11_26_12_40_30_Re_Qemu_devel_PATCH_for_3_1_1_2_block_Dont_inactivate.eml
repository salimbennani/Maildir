Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 26 Nov 2018 21:38:10 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 0CAC3580322
	for <like.xu@linux.intel.com>; Mon, 26 Nov 2018 04:41:10 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga001-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 26 Nov 2018 04:41:09 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3An57OihS3ZHuFxLLunkqPIufdc9psv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa6zYxaN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRBDI2i?=
 =?us-ascii?q?YYsBDOQPMuhXoIb/u1QAsAO+CAuuCu7g1zNFiGP60rMh0+k6HgHKwBYtEdUSvH?=
 =?us-ascii?q?nartj4MroZX+CvzKnPyDXOd/RY1i3y6YPVbh4uv/CMXa5xcMHMzkQvEhnFgUuR?=
 =?us-ascii?q?qYz5PjKYzf4NvHaG4OpgT+2vl3QrpB12ojiq38ohjJTCiIENyl3c6yl13IU4Kc?=
 =?us-ascii?q?elREJmYtOoCoVcui+aOodsX88vQXlktDgmxrACo5K3YSYHxIo9yxLCaPGKfZKE?=
 =?us-ascii?q?7gzgWeuXPDx2nmhqeKiliBa36UWgyvPzVs2z0FtSqipFk8LMtmwW1xDJ5ciHTO?=
 =?us-ascii?q?Z98l2m2TaV2ADf8uBEIUYqmqrHM5Mt3KI8m5kJvUjeAyP7m1/6gLGYe0gk4OSk?=
 =?us-ascii?q?9ubqbq3jppCGNo90jg/+Mr4pmsy6Gek4KxYBX22G+eilybLs41P5T6tOjvEvia?=
 =?us-ascii?q?bZt43aJcIHqaGnGA9Z1YIj6xe8Dzi4ytgZkmQHIUpBeBKGiYjpJl7PLOr5Dfe5?=
 =?us-ascii?q?n1SjjjNry+raMb3mB5XANX7DkLDnfbZy7U5c1RA/zddF55JbEr0BOu78WlfttN?=
 =?us-ascii?q?zECR80Kwi0w+fkCNpjzI8fVn+PD7SdMKPTt1+I++0uL/ONZI8TpDbyNfwl6+Ty?=
 =?us-ascii?q?gn8+nF9ONZSvxoYdPXCkAux9cQLeZXv3nsxHF2AMsQwjCuvwhxqHWD9XYn+0GK?=
 =?us-ascii?q?Uk+jA8DpnhFIrGW8WhjaKM2HSGGIZLbDVDA1GIDXC6boiBRrIAZTyfJop7nyUZ?=
 =?us-ascii?q?WKO9Y4km0x6oqUn90bUwNffe+CATqcf+0sNo7fbYjxA4+G9ICJG+3n+MSSlLmW?=
 =?us-ascii?q?cGD2s1w6d7r2Rnx1uD2LQ+iPtdQ5gb/v5MT0IwMZnXzMR8DNb9XB+Hec2GG3i8?=
 =?us-ascii?q?RdDzJDghBug8wsMcKxJ4AdijkgLrxSemA7YJ0beMAcpnoernw3HtKpMlmD7936?=
 =?us-ascii?q?47ggxjG5MXOA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AxAABM6ftbhxHrdtBiGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBZYExgmKDeYh3iyGBYAglmS4BDwUYFIhjIjgSAQMBAQEBAQECARM?=
 =?us-ascii?q?BAQEKCwkIGw4vgjYFAgMaAQaCWwEBAQECAQECIAQfCikDAgEBAgYBAQoOCiYEA?=
 =?us-ascii?q?gIDAVMGAQwGAgEBAYMcAYF5CAEEpQV8M4oKD4JtiRwXgUA/gTgMZIFGNYgCglc?=
 =?us-ascii?q?CoAIJhCGBdIQUhwAGGIlRhzeYMIFdgXZNIxWDJ4InFxKOC0AxgQcciXeBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AxAABM6ftbhxHrdtBiGgEBAQEBAgEBAQEHAgEBAQGBZYE?=
 =?us-ascii?q?xgmKDeYh3iyGBYAglmS4BDwUYFIhjIjgSAQMBAQEBAQECARMBAQEKCwkIGw4vg?=
 =?us-ascii?q?jYFAgMaAQaCWwEBAQECAQECIAQfCikDAgEBAgYBAQoOCiYEAgIDAVMGAQwGAgE?=
 =?us-ascii?q?BAYMcAYF5CAEEpQV8M4oKD4JtiRwXgUA/gTgMZIFGNYgCglcCoAIJhCGBdIQUh?=
 =?us-ascii?q?wAGGIlRhzeYMIFdgXZNIxWDJ4InFxKOC0AxgQcciXeBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,282,1539673200"; 
   d="asc'?scan'208";a="54296065"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 26 Nov 2018 04:41:08 -0800
Received: from localhost ([::1]:35496 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gRGCK-0004fw-2y
	for like.xu@linux.intel.com; Mon, 26 Nov 2018 07:41:08 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:48300)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <mreitz@redhat.com>) id 1gRGBx-0004e3-0n
	for qemu-devel@nongnu.org; Mon, 26 Nov 2018 07:40:50 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <mreitz@redhat.com>) id 1gRGBv-0004Q9-3D
	for qemu-devel@nongnu.org; Mon, 26 Nov 2018 07:40:44 -0500
Received: from mx1.redhat.com ([209.132.183.28]:45458)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <mreitz@redhat.com>)
	id 1gRGBn-0004Lw-96; Mon, 26 Nov 2018 07:40:35 -0500
Received: from smtp.corp.redhat.com (int-mx01.intmail.prod.int.phx2.redhat.com
	[10.5.11.11])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 7CA513078A33;
	Mon, 26 Nov 2018 12:40:34 +0000 (UTC)
Received: from dresden.str.redhat.com (ovpn-204-255.brq.redhat.com
	[10.40.204.255])
	by smtp.corp.redhat.com (Postfix) with ESMTPS id DDAED600C7;
	Mon, 26 Nov 2018 12:40:32 +0000 (UTC)
From: Max Reitz <mreitz@redhat.com>
To: Kevin Wolf <kwolf@redhat.com>, qemu-block@nongnu.org
References: <20181126112828.23047-1-kwolf@redhat.com>
	<20181126112828.23047-2-kwolf@redhat.com>
	<7b3288b3-f7f8-b6cf-d4b1-b0540205e3df@redhat.com>
Openpgp: preference=signencrypt
Autocrypt: addr=mreitz@redhat.com; prefer-encrypt=mutual; keydata=
	xsBNBFXOJlcBCADEyyhOTsoa/2ujoTRAJj4MKA21dkxxELVj3cuILpLTmtachWj7QW+TVG8U
	/PsMCFbpwsQR7oEy8eHHZwuGQsNpEtNC2G/L8Yka0BIBzv7dEgrPzIu+W3anZXQW4702+uES
	U29G8TP/NGfXRRHGlbBIH9KNUnOSUD2vRtpOLXkWsV5CN6vQFYgQfFvmp5ZpPeUe6xNplu8V
	mcTw8OSEDW/ZnxJc8TekCKZSpdzYoxfzjm7xGmZqB18VFwgJZlIibt1HE0EB4w5GsD7x5ekh
	awIe3RwoZgZDLQMdOitJ1tUc8aqaxvgA4tz6J6st8D8pS//m1gAoYJWGwwIVj1DjTYLtABEB
	AAHNHU1heCBSZWl0eiA8bXJlaXR6QHJlZGhhdC5jb20+wsCTBBMBCAA9AhsDBQkSzAMABQsJ
	CAcCBhUICQoLAgQWAgMBAh4BAheABQJVzie5FRhoa3A6Ly9rZXlzLmdudXBnLm5ldAAKCRD0
	B9sAYdXPQDcIB/9uNkbYEex1rHKz3mr12uxYMwLOOFY9fstP5aoVJQ1nWQVB6m2cfKGdcRe1
	2/nFaHSNAzT0NnKz2MjhZVmcrpyd2Gp2QyISCfb1FbT82GMtXFj1wiHmPb3CixYmWGQUUh+I
	AvUqsevLA+WihgBUyaJq/vuDVM1/K9Un+w+Tz5vpeMidlIsTYhcsMhn0L9wlCjoucljvbDy/
	8C9L2DUdgi3XTa0ORKeflUhdL4gucWoAMrKX2nmPjBMKLgU7WLBc8AtV+84b9OWFML6NEyo4
	4cP7cM/07VlJK53pqNg5cHtnWwjHcbpGkQvx6RUx6F1My3y52vM24rNUA3+ligVEgPYBzsBN
	BFXOJlcBCADAmcVUNTWT6yLWQHvxZ0o47KCP8OcLqD+67T0RCe6d0LP8GsWtrJdeDIQk+T+F
	xO7DolQPS6iQ6Ak2/lJaPX8L0BkEAiMuLCKFU6Bn3lFOkrQeKp3u05wCSV1iKnhg0UPji9V2
	W5eNfy8F4ZQHpeGUGy+liGXlxqkeRVhLyevUqfU0WgNqAJpfhHSGpBgihUupmyUg7lfUPeRM
	DzAN1pIqoFuxnN+BRHdAecpsLcbR8sQddXmDg9BpSKozO/JyBmaS1RlquI8HERQoe6EynJhd
	64aICHDfj61rp+/0jTIcevxIIAzW70IadoS/y3DVIkuhncgDBvGbF3aBtjrJVP+5ABEBAAHC
	wGUEGAEIAA8FAlXOJlcCGwwFCRLMAwAACgkQ9AfbAGHVz0CbFwf9F/PXxQR9i4N0iipISYjU
	sxVdjJOM2TMut+ZZcQ6NSMvhZ0ogQxJ+iEQ5OjnIputKvPVd5U7WRh+4lF1lB/NQGrGZQ1ic
	alkj6ocscQyFwfib+xIe9w8TG1CVGkII7+TbS5pXHRxZH1niaRpoi/hYtgzkuOPp35jJyqT/
	/ELbqQTDAWcqtJhzxKLE/ugcOMK520dJDeb6x2xVES+S5LXby0D4juZlvUj+1fwZu+7Io5+B
	bkhSVPb/QdOVTpnz7zWNyNw+OONo1aBUKkhq2UIByYXgORPFnbfMY7QWHcjpBVw9MgC4tGeF
	R4bv+1nAMMxKmb5VvQCExr0eFhJUAHAhVg==
Message-ID: <db0fee59-5344-4bb8-8620-72e5123392b6@redhat.com>
Date: Mon, 26 Nov 2018 13:40:30 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.0
MIME-Version: 1.0
In-Reply-To: <7b3288b3-f7f8-b6cf-d4b1-b0540205e3df@redhat.com>
Content-Type: multipart/signed; micalg=pgp-sha256;
	protocol="application/pgp-signature";
	boundary="seqWQCFYQhUjEZIbuZKmKY07vdMwpE29N"
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.11
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.43]);
	Mon, 26 Nov 2018 12:40:34 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
X-Content-Filtered-By: Mailman/MimeDel 2.1.21
Subject: Re: [Qemu-devel] [PATCH for-3.1 1/2] block: Don't inactivate
 children before parents
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

This is an OpenPGP/MIME signed message (RFC 4880 and 3156)
--seqWQCFYQhUjEZIbuZKmKY07vdMwpE29N
From: Max Reitz <mreitz@redhat.com>
To: Kevin Wolf <kwolf@redhat.com>, qemu-block@nongnu.org
Cc: qemu-devel@nongnu.org
Message-ID: <db0fee59-5344-4bb8-8620-72e5123392b6@redhat.com>
Subject: Re: [PATCH for-3.1 1/2] block: Don't inactivate children before
 parents
References: <20181126112828.23047-1-kwolf@redhat.com>
 <20181126112828.23047-2-kwolf@redhat.com>
 <7b3288b3-f7f8-b6cf-d4b1-b0540205e3df@redhat.com>
In-Reply-To: <7b3288b3-f7f8-b6cf-d4b1-b0540205e3df@redhat.com>
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable

On 26.11.18 13:05, Max Reitz wrote:
> On 26.11.18 12:28, Kevin Wolf wrote:
>> bdrv_child_cb_inactivate() asserts that parents are already inactive
>> when children get inactivated. This precondition is necessary because
>> parents could still issue requests in their inactivation code.
>>
>> When block nodes are created individually with -blockdev, all of them
>> are monitor owned and will be returned by bdrv_next() in an undefined
>> order (in practice, in the order of their creation, which is usually
>> children before parents), which obviously fails the assertion.
>>
>> This patch fixes the ordering by skipping nodes with still active
>> parents in bdrv_inactivate_recurse() because we know that they will be=

>> covered by recursion when the last active parent becomes inactive.
>>
>> Signed-off-by: Kevin Wolf <kwolf@redhat.com>
>> ---
>>  block.c | 22 ++++++++++++++++++++++
>>  1 file changed, 22 insertions(+)
>>
>> diff --git a/block.c b/block.c
>> index 5ba3435f8f..0569275e31 100644
>> --- a/block.c
>> +++ b/block.c
>> @@ -4612,6 +4612,22 @@ void bdrv_invalidate_cache_all(Error **errp)
>>      }
>>  }
>> =20
>> +static bool bdrv_has_active_bds_parent(BlockDriverState *bs)
>> +{
>> +    BdrvChild *parent;
>> +
>> +    QLIST_FOREACH(parent, &bs->parents, next_parent) {
>> +        if (parent->role->parent_is_bds) {
>> +            BlockDriverState *parent_bs =3D parent->opaque;
>> +            if (!(parent_bs->open_flags & BDRV_O_INACTIVE)) {
>> +                return true;
>> +            }
>> +        }
>> +    }
>=20
> Now I see why you say this might make sense as a permission.
>=20
>> +
>> +    return false;
>> +}
>> +
>>  static int bdrv_inactivate_recurse(BlockDriverState *bs,
>>                                     bool setting_flag)
>>  {
>> @@ -4622,6 +4638,12 @@ static int bdrv_inactivate_recurse(BlockDriverS=
tate *bs,
>>          return -ENOMEDIUM;
>>      }
>> =20
>> +    /* Make sure that we don't inactivate a child before its parent.
>> +     * It will be covered by recursion from the yet active parent. */=

>> +    if (bdrv_has_active_bds_parent(bs)) {

Another thing I found while testing: I think this should only return
early if setting_flag is true.  BDRV_O_INACTIVE will only be set on the
second pass.  If you skip nodes with active parents unconditionally,
bs->drv->bdrv_inactivate() will not be called for any non-root BDS
(because bdrv_has_active_bds_parents() returns true for all non-root
BDSs during the first pass).

>> +        return 0;
>> +    }
>> +
>=20
> Hm.  Wouldn't it make more sense to always return early when there are
> any BDS parents?  Because if there are any BDS parents and none of them=

> are active (anymore), then this child will have been inactivated
> already, and we can save ourselves the trouble of going through the res=
t
> of the function again.

Hm, well, no, at least not directly here.  (Otherwise
bdrv_inactive_recurse() will not really recurse when it calls itself...)
But bdrv_inactive_all() could check that before invoking this function.

Ah, but then it is possible to still run into the exact bug you're
fixing here, because a node might inactivate a child that has another
parent still (which is inactivated later).

But still, I think bdrv_inactive_all() should skip non-root BDSs,
because calling bs->drv->bdrv_inactive() and parent->role->inactivate()
multiple times cannot be right.

Max

> Do drivers support multiple calls to .bdrv_in_activate() at all?
>=20
> Max
>=20
>>      if (!setting_flag && bs->drv->bdrv_inactivate) {
>>          ret =3D bs->drv->bdrv_inactivate(bs);
>>          if (ret < 0) {
>>
>=20
>=20



--seqWQCFYQhUjEZIbuZKmKY07vdMwpE29N
Content-Type: application/pgp-signature; name="signature.asc"
Content-Description: OpenPGP digital signature
Content-Disposition: attachment; filename="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQEzBAEBCAAdFiEEkb62CjDbPohX0Rgp9AfbAGHVz0AFAlv76b4ACgkQ9AfbAGHV
z0BebQf9Ex73Ha/tqWDrlQ0TBooGcb5EnfQojqX0cPjYNmAV/lc8BQkuRkYNs4wt
e807iJASECgPPdjDAnz8uRQHOoCUJ7oD49t1NR2O4yuA0ZxcrcE7trSOwVJk9Gde
NjfKnzakCGo6rTqtGND1popPYeNVh8rYGRhy6HR0XFeVRU5M4yv2smfB64uc6hVs
1q1Wddqxvat1udsJ32YbWC2TPDNyhJivI9di0yLVyJzUbYVScoO/i/CZ2iy7SU2l
2iT+skDop84SPRJBbrZQxF2z1nK8AvkOzwMOpBE2AVbavMaNwWSb8jAeAna+hf8O
wZ2FnvWCne9eTOSaWNtXb4p49e0nTg==
=82nt
-----END PGP SIGNATURE-----

--seqWQCFYQhUjEZIbuZKmKY07vdMwpE29N--

