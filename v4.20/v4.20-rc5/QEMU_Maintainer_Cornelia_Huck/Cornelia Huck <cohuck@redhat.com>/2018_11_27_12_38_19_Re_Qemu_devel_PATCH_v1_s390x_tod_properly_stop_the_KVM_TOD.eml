Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 27 Nov 2018 21:03:44 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id DE16958041B
	for <like.xu@linux.intel.com>; Tue, 27 Nov 2018 04:41:46 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 27 Nov 2018 04:41:47 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AudcjMR2T1XrE4lMysmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?seMRKvad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWRPUMZPWSJCAIy8?=
 =?us-ascii?q?YYwPAOUdMuhXsof9v1kDoxmxCAWxCu7j1iFHhmTt0K0m0eksCx3K0BA8E94Qtn?=
 =?us-ascii?q?nfsdX7NL0VUeCw1KTF0zLDb+lQ2Tjj7IjIcwouquyOU7JtbcXRylQkGgTZgVWX?=
 =?us-ascii?q?qYzlIi+a1ucWvmiB8eVvSOKvhHQ7qw1rvjevwcIsh5DPi4kIyV7E7T10zJgpKd?=
 =?us-ascii?q?C7UkJ3fMOoHZhKuy2EOYZ7QtkuT3xqtSoi1LEKpZq2cDIXxJkp2RLTceGLfouG?=
 =?us-ascii?q?7x75SuqcIjF1j29/dr2lnRa9602gx/X8Vsaq1FZKqTJIkt3NtnAWyxzT8dKLSv?=
 =?us-ascii?q?R7/ke8wzqP0BrT6u5cLUA1k6rUNYIhz6YumpYPsknPBDL6lFj1gaOMaEkp9Oil?=
 =?us-ascii?q?5/76brjkvpOcMpV7igD6MqQggMy/BuE4PxAXX2eF/OS8yaTv8lDnT7VUkPI2lr?=
 =?us-ascii?q?DVv4vdJcQGoK62HxFa0p0k5xa7Djem08oXkWMILVJYYB+Hi4npO1fTIPH3F/u/?=
 =?us-ascii?q?glKskCt1yPDCJLHuHpLNLn3YnbfnerZ97UFcyAwuzdxF4JJUEL4BLOrpWkDtrN?=
 =?us-ascii?q?zYEgM5MwuszubjCdV91Z0RVXiAA6+EK67StV6I5uQyI+iDfoMVuTD9K+Q76P7q?=
 =?us-ascii?q?l3M2hVgdfaz6laYRc22yS/R6P12CMz2rhtYaDXxMuA04Q+r3zlqYXnlWbne2Wq?=
 =?us-ascii?q?s6oTYjFIOhC5yEX42onfmN0Tm2Gs5rYHtbAAWJGHbsa4LWQvoJdWeeL9Fslnke?=
 =?us-ascii?q?WKG8RpQ9/RepsgD81vxgNOWD4TASt5/oyI1o4fbOnwo57z1+Apeh1DShRn91ki?=
 =?us-ascii?q?soRjs60aZ1u0V7xh/X3aFmgvBwD9Ff5/pVFAw9MMiP4fZ9DoXZXRjHc9OIQR6G?=
 =?us-ascii?q?X96lSWU6SdIsyNwmeUtxG9y+yBvE2nz5UPcui7WXCclsoern1H/rKpM4ki6e2Q?=
 =?us-ascii?q?=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ALAABuOv1bhxHrdtBkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTCCTxOMEV+NNJdAFIFfFBgUiHYiNAkNAQMBAQEBAQECARMBAQE?=
 =?us-ascii?q?KCwkIGw4vgjYFAgMaAQaCXAECAgEBAiQTDAopAwIBAQIGAQEKPggDAVMGEwWDH?=
 =?us-ascii?q?IF6CAEEpgozhUCEbYwNF4FAP4QjghCCLSyFcwKJA4YdQ5ApCZElCxiJUoc5mDe?=
 =?us-ascii?q?BRoINMxoIGxWDJ4InFxKODEAxgQcciwEqLIF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0ALAABuOv1bhxHrdtBkHAEBAQQBAQcEAQGBUQcBAQsBgTC?=
 =?us-ascii?q?CTxOMEV+NNJdAFIFfFBgUiHYiNAkNAQMBAQEBAQECARMBAQEKCwkIGw4vgjYFA?=
 =?us-ascii?q?gMaAQaCXAECAgEBAiQTDAopAwIBAQIGAQEKPggDAVMGEwWDHIF6CAEEpgozhUC?=
 =?us-ascii?q?EbYwNF4FAP4QjghCCLSyFcwKJA4YdQ5ApCZElCxiJUoc5mDeBRoINMxoIGxWDJ?=
 =?us-ascii?q?4InFxKODEAxgQcciwEqLIF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,286,1539673200"; 
   d="scan'208";a="42441084"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 27 Nov 2018 04:40:46 -0800
Received: from localhost ([::1]:41869 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gRcfV-0000vg-Az
	for like.xu@linux.intel.com; Tue, 27 Nov 2018 07:40:45 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:51643)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <cohuck@redhat.com>) id 1gRcdK-0007iy-TT
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 07:38:31 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <cohuck@redhat.com>) id 1gRcdG-00083H-RU
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 07:38:30 -0500
Received: from mx1.redhat.com ([209.132.183.28]:59298)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <cohuck@redhat.com>)
	id 1gRcdG-00082e-K6; Tue, 27 Nov 2018 07:38:26 -0500
Received: from smtp.corp.redhat.com (int-mx01.intmail.prod.int.phx2.redhat.com
	[10.5.11.11])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id EF0BD308AA0F;
	Tue, 27 Nov 2018 12:38:25 +0000 (UTC)
Received: from gondolin (unknown [10.40.205.4])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 08551600D7;
	Tue, 27 Nov 2018 12:38:23 +0000 (UTC)
Date: Tue, 27 Nov 2018 13:38:19 +0100
From: Cornelia Huck <cohuck@redhat.com>
To: David Hildenbrand <david@redhat.com>
Message-ID: <20181127133819.52621d1c.cohuck@redhat.com>
In-Reply-To: <20181127114102.4319-1-david@redhat.com>
References: <20181127114102.4319-1-david@redhat.com>
Organization: Red Hat GmbH
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.11
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.41]);
	Tue, 27 Nov 2018 12:38:26 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH v1] s390x/tod: properly stop the KVM TOD
 while the guest is not running
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Thomas Huth <thuth@redhat.com>, Janosch Frank <frankja@linux.ibm.com>,
	qemu-devel@nongnu.org, Christian Borntraeger <borntraeger@de.ibm.com>,
	qemu-s390x@nongnu.org, Richard Henderson <rth@twiddle.net>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Tue, 27 Nov 2018 12:41:02 +0100
David Hildenbrand <david@redhat.com> wrote:

> Just like on other architectures, we should stop the clock while the guest
> is not running. This is already properly done for TCG. Right now, doing an
> offline migration (stop, migrate, cont) can easily trigger stalls in the
> guest.
> 
> Even doing a
>     (hmp) stop
>     ... wait 2 minutes ...
>     (hmp) cont
> will already trigger stalls.
> 
> So whenever the guest stops, backup the KVM TOD. When continuning to run
> the guest, restore the KVM TOD.
> 
> One special case is starting a simple VM: Reading the TOD from KVM to
> stop it right away until the guest is actually started means that the
> time of any simple VM will already differ to the host time. We can
> simply leave the TOD running and the guest won't be able to recognize
> it.
> 
> For migration, we actually want to keep the TOD stopped until really
> starting the guest. To be able to catch most errors, we should however
> try to set the TOD in addition to simply storing it. So we can still
> catch basic migration problems.
> 
> If anything goes wrong while backing up/restoring the TOD, we have to
> ignore it (but print a warning). This is then basically a fallback to
> old behavior (TOD remains running).
> 
> I tested this very basically with an initrd:
>     1. Start a simple VM. Observed that the TOD is kept running. Old
>        behavior.
>     2. Ordinary live migration. Observed that the TOD is temporarily
>        stopped on the destination when setting the new value and
>        correctly started when finally starting the guest.
>     3. Offline live migration. (stop, migrate, cont). Observed that the
>        TOD will be stopped on the source with the "stop" command. On the
>        destination, the TOD is temporarily stopped when setting the new
>        value and correctly started when finally starting the guest via
>        "cont".
>     4. Simple stop/cont correctly stops/starts the TOD. (multiple stops
>        or conts in a row have no effect, so works as expected)
> 
> Signed-off-by: David Hildenbrand <david@redhat.com>
> ---
>  hw/s390x/tod-kvm.c     | 88 +++++++++++++++++++++++++++++++++++++++++-
>  include/hw/s390x/tod.h |  7 +++-
>  2 files changed, 92 insertions(+), 3 deletions(-)
> 
> diff --git a/hw/s390x/tod-kvm.c b/hw/s390x/tod-kvm.c
> index df564ab89c..d4b12e1145 100644
> --- a/hw/s390x/tod-kvm.c
> +++ b/hw/s390x/tod-kvm.c

> @@ -38,6 +49,58 @@ static void kvm_s390_tod_set(S390TODState *td, const S390TOD *tod, Error **errp)
>      if (r) {
>          error_setg(errp, "Unable to set KVM guest TOD clock: %s",
>                     strerror(-r));
> +        return;

I don't think you need this new 'return'.

> +    }
> +}

(...)

> +static void kvm_s390_tod_init(Object *obj)
> +{
> +    S390TODState *td = S390_TOD(obj);
> +
> +    /*
> +     * The TOD is initially running (value stored in KVM). Avoid needless
> +     * loading/storing of the TOD when starting a simple VM, so let it
> +     * run although the (never started) VM is stopped. For migration, we
> +     * will properly set the TOD later.
> +     */
> +    td->stopped = false;
> +
> +    /*
> +     * We need to know when the VM gets started/stopped to start/stop the TOD.
> +     * As we can never have more than one TOD instance (and that will never be
> +     * removed), registering here and never unregistering is good enough.
> +     */
> +    qemu_add_vm_change_state_handler(kvm_s390_tod_vm_state_change, td);
> +}
> +
>  static TypeInfo kvm_s390_tod_info = {
>      .name = TYPE_KVM_S390_TOD,
>      .parent = TYPE_S390_TOD,
>      .instance_size = sizeof(S390TODState),
> +    .instance_init = kvm_s390_tod_init,

See Thomas' comment wrt realize vs. instance_init.

>      .class_init = kvm_s390_tod_class_init,
>      .class_size = sizeof(S390TODClass),
>  };

This one is a bit late for 3.1, but should it be cc:stable?

