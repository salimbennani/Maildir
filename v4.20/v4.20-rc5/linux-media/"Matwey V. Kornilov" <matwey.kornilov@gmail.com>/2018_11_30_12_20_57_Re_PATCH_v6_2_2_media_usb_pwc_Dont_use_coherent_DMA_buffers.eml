Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:17:21 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 4A216580213;
	Fri, 30 Nov 2018 04:21:16 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga004-1.jf.intel.com with ESMTP; 30 Nov 2018 04:21:16 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AJ9j2phSXCnW/0RDdDtuI+UlkP9psv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YR2Bt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZDYy8?=
 =?us-ascii?q?YYkAAeoPM+hbsofzuUcBoxSlBQm0Bu7i0SNIhmbs0KEmz+gtDQPL0Qo9FNwOqn?=
 =?us-ascii?q?TUq9D1Ob8cXe6y1qbI0TvCYO1W2Dzg54fEaA0qr/SLXbJqd8rRyE0vFwTbjlme?=
 =?us-ascii?q?tIfoODaV2f4Rs2mV8eVhVfiji20gqwFrpDivx8Msio7Xho8OxVDE8D92wIcxJd?=
 =?us-ascii?q?GiVEF7ZtukHYJWuiqHOYV2RcYiTHtpuCY80rAGooa7fCkMyJQm2xHfcOaLc46W?=
 =?us-ascii?q?7RL/UuuaPDR2hGp9db6hmxq/9VKsxvDyW8WqylpGsylInsXWun0M1RHf8taLRu?=
 =?us-ascii?q?d580u72juC1xrf5v9ZLUwoj6bWKpwsz7gtnZQJq0vDBDX5mEDuga+WaEok/u+o?=
 =?us-ascii?q?5vz5YrXpuJCcLZV4igLgPaQ0nMywH+A4PhIJX2iB9uSwzLzj/UvnT7VWlvA6jL?=
 =?us-ascii?q?XVvZTAKcgGqKO1HRVZ3psg5hqjFTur0dYVkWECLF1feRKHi4bpO0vJIPD9Ffq/?=
 =?us-ascii?q?h1WskDF2x/HJJ7HhAYvCLmLFkLj/ebZx8klcyQQ1zd9B/ZJZEa8BIP3tVU/rrt?=
 =?us-ascii?q?DYDQE2Mxayw+n5DNVxzIQeWXiAAqOBKqPdrUeI5v4zI+mLfIIVvDf9K/s76PL0?=
 =?us-ascii?q?gn45hEQQfa2o3ZsRdXC5Ee5qI0SfYXrwnNgBFX0GsRY5TOzvkFeCSyJcZ26uX6?=
 =?us-ascii?q?Ig4TE2EIKmAp3CRoCxmrOB2z23Hp1LZm9cDFCMHmzld4GFW/cKdSKTLdVtkj0C?=
 =?us-ascii?q?Vbi9VYAh0QuiuxP9y7piNuDU4DEXtYr/1Nhp4O3ejRMy9TtqAMiH0GGNSGd0nm?=
 =?us-ascii?q?UPRzIt2KB/oEp9ykqM0KRigvxYE8BT6O1NUgsgKZHcyOl6AcjoWg3dZteJVEqm?=
 =?us-ascii?q?QtK+DD4rVdIxw9gOY0VnF9W4lB/D3TGnA7sUl7yNGZw1/bjQ33n3J8Zh1XnG0L?=
 =?us-ascii?q?MtgEUhQstKLWemnLJw9xDPB47VlEWUj6Wqer4a3CLX8GeDzHCBvEdXUANrVaXF?=
 =?us-ascii?q?XHYfZlbZrNjj50PCSaOuBqojMgdb1cGCLa5KYMXzjVpaXPfjJMjeY2WplmitHx?=
 =?us-ascii?q?mI2K2DYJDqe2oH2iXdE1YLkwYU8XaCNgg+AyOhrnnaDDxvE1Lvfkzt/fN/qHO9?=
 =?us-ascii?q?Uk870QWKY1d92Lqy/x4fneacRO8L3rIYpCchrC15E0un0NLIFdWMvQphc79aYd?=
 =?us-ascii?q?Mm/lhH03nUtwh8PpymMqBjiUQScwVxv0PyyRp3Dp9MntQtrHMv1AByM76X0Etd?=
 =?us-ascii?q?dzOE2pD9IqHXKmj3/BCod67W2lHf3MyK+qsV7/Q4sVHjvACvFkot6Hhn19hV03?=
 =?us-ascii?q?2B5pTFFgYSUJTxUlop+Bh+vb3Vfi4954bM3312Laa0qiPC284uBOY90Bmge8lQ?=
 =?us-ascii?q?MayaGw7yCcEVHNWuJ/EwlFivbRIEO/5S+bUwP8OncfuGxaGqMPxhnDKgkWRI/o?=
 =?us-ascii?q?R93liQ+Cp7T+7Cx4wFzO2A3gubSzf8i0+ss8DqmYxeeT4eBGu+ySj+C45Xaa1/?=
 =?us-ascii?q?ZoILCWaoI82qydRynZ/tW3hE9FG9A1MKwtOmeR2Xb1blxw1fyVwXoWC7mSu/1z?=
 =?us-ascii?q?F0iTApobaF0yzU3uvicwALOmhVS2l4jFfgOJS7gMoeXEe1cQcpjhyl5UDhyqhf?=
 =?us-ascii?q?paR/KXTTQEhScyj3KWFiTrW/tr6Yb8FT75MotD1dUP6gblCCVr79vxwa3jvjHm?=
 =?us-ascii?q?tf3jw6dyumuo7knxx8k2+dKHdzrHzEecB/3xvf5drcReJP0ToCXiV3lT7XBl2k?=
 =?us-ascii?q?Ndmz4dqUj4vDsvy5V2+5VJ1cazPrzYCDtCu8/2FqGgewn/Owmt3mFwg1zyn72s?=
 =?us-ascii?q?JuVSXJqhb8f4bq2767MeJhYklnGlv859BmFYF5l4s6nIsQ1mQChpWJ4XoHln/+?=
 =?us-ascii?q?MNVB1qL5dnYNRz8Lw9jO7Qjh2U1jKG+Jxo3jWnWcxMthe8e1YmcM1i0h6MBKDb?=
 =?us-ascii?q?+e7KZYkittvlq4sQXRbOB+njgHyPsi8n4ag/wTtworwSWQGbQSHUhePSzxmBWE?=
 =?us-ascii?q?9dG+rKNLZGmxdbi8zlZxndekDLuauAFTRG75eos+HS939sh/NVPM0H7p5Y3+dt?=
 =?us-ascii?q?jfc8kTtgGKnBfalOdaNogxlvURiCpjOGL9u2AlyuEhgRxv25G6oJaIK2F38K2l?=
 =?us-ascii?q?BR5YMyX/Z9kP9TH1kaZegsGW0pizHpVmHzUHRprpQuiuEDIPrvTnLAeOHSY4qn?=
 =?us-ascii?q?eaH7rfAACe5F1nr3LJD5CkKXWXKGMFwtVlQRmXPFZfjxwMXDUmgp45ERiny9f7?=
 =?us-ascii?q?f0d+4jAR+0T0qh9Ryu9zMxn/U2HfpBqnazsuSZifKgZW4R9G50vPLcOe6edzFT?=
 =?us-ascii?q?lC/pK9tAyNNnCbZwNQAGELQEOEAk7sPqK06dnc6eSYBfe+L/jTYbWIs+NeTOyF?=
 =?us-ascii?q?xZau0otg4jaNOd+DPnhkD/0nxEVDWWp1FNjemzUKUyYXjT7Cb9aHpBeg/S16ts?=
 =?us-ascii?q?C+8PP2WAL2+IuAEb1SPc90+xCxh6eDOPWdhCJ4KTZey5MNymXEyLkZ3F4OlS5u?=
 =?us-ascii?q?cyOhHqgHtS7IVKjQgLNYDwYHayNvM8tF96I80RdMOc7YidP116R0jv0vC1dCWl?=
 =?us-ascii?q?zuhNupZdERI2ymMFPHBUCLNKmJJDHRwsH3Z7+8RqNUjOlOqxKwvjObGVf5Pjuf?=
 =?us-ascii?q?jznpSwyvMeZUgS6BIRxRo5u9fQhtCGT5SNLmawa2MNt2jT0w3L01iWnGNW8aMT?=
 =?us-ascii?q?hgbUxNqqec4j9fgvV6A2ZB9GZqLfGYmyaF6OnVMooWsfpuAihui+1W+mg1y7tL?=
 =?us-ascii?q?4yFCX/F1nCrSrthzo1CpiOWPyzxnUAZQpTZPno6EoUJiOaDB/JlaRXnE5A4N7X?=
 =?us-ascii?q?mXCxkSp9pqENvvu6VRytjJjK3yKTdC/MjS/csTHMXULMOHMHw8MRvmAjLUDQ0F?=
 =?us-ascii?q?TSK1OmHbnUBSjPaS9njG5qQ9/7ztnoceAppWWF08XtYTC0BkGtNKBJZsQntwlb?=
 =?us-ascii?q?+dkd5N4HeyrRD5WspXpNbEW+iUDPGpLyyW2/0MYAMFx/v8LJ8Pftn/2kp/ehx5?=
 =?us-ascii?q?kZ7MFk74Q99AuGtiYxUyrUEL92JxGD4dwUXgP0mI6WMMGO/8oFh+qQxkZ+Up8y?=
 =?us-ascii?q?mmqwMyL0bVqTp2k04rn9Thhi65fzv4LaP2VoZTXXmn/3MtO4/2Fl4mJTa5mlZp?=
 =?us-ascii?q?YXKdH+pc?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BCAABYKgFch0O0hNFjHQEBBQEHBQGBU?=
 =?us-ascii?q?wYBCwGCaYECJ4N5g3uQJYIhlzQUgV8sCwgBhECDNCI2Bw0BAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQgNCQgpIwyCNiQBgmIDAwECIAQZARsLEgEDAgkBAQUDAgsPAiYCAgMeAQEFD?=
 =?us-ascii?q?AEFARwGAQkJBQODGQGBaAEDFQUKinuQBzyLDXwWBQEXgncFhD4KGScNXYE3AgE?=
 =?us-ascii?q?FEnmLEIFXP4ERgxKCV0cDgUkXgwSCVwKJIoF5hQdThGeKJy4HAgKNGHCDLRiRH?=
 =?us-ascii?q?4hQK4VviWEwgSwHgX9wgQGCO4IbDBcSgziEWYV9PDMBgQQBAY4bAQE?=
X-IPAS-Result: =?us-ascii?q?A0BCAABYKgFch0O0hNFjHQEBBQEHBQGBUwYBCwGCaYECJ4N?=
 =?us-ascii?q?5g3uQJYIhlzQUgV8sCwgBhECDNCI2Bw0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCN?=
 =?us-ascii?q?iQBgmIDAwECIAQZARsLEgEDAgkBAQUDAgsPAiYCAgMeAQEFDAEFARwGAQkJBQO?=
 =?us-ascii?q?DGQGBaAEDFQUKinuQBzyLDXwWBQEXgncFhD4KGScNXYE3AgEFEnmLEIFXP4ERg?=
 =?us-ascii?q?xKCV0cDgUkXgwSCVwKJIoF5hQdThGeKJy4HAgKNGHCDLRiRH4hQK4VviWEwgSw?=
 =?us-ascii?q?HgX9wgQGCO4IbDBcSgziEWYV9PDMBgQQBAY4bAQE?=
X-IronPort-AV: E=Sophos;i="5.56,298,1539673200"; 
   d="scan'208";a="42232134"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 30 Nov 2018 04:21:14 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727130AbeK3XaS (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 30 Nov 2018 18:30:18 -0500
Received: from mail-ot1-f67.google.com ([209.85.210.67]:35505 "EHLO
        mail-ot1-f67.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726512AbeK3XaR (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 30 Nov 2018 18:30:17 -0500
Received: by mail-ot1-f67.google.com with SMTP id 81so4935187otj.2;
        Fri, 30 Nov 2018 04:21:10 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc:content-transfer-encoding;
        bh=dKdebeIcsHGbVCx266icxe+2q+qH1cU06iFqLEzPVj4=;
        b=GueRI3+gB+8FhidQZkthRgK+6HwL2gEuFIs6fwCpI3FoZ3FX6joeQsTGIC5V0nGldv
         EZgpef9wnYfuvLx7YLsQmKb3bNc/2Nl+1vS2p3o6UMn0LEM+TsaPNID+MiaydfaJepR4
         YcaQgvpKCunicMudx0HJ0k4C56WAQ/mKqSGmi5NpM4btDN0JzWWVgvuYgxpotlkv8iD9
         WR00XFjOYTB8fIcAmRiKZuH6Op9Kbug7U54ASIZoS3Ha1ODKeY6xOu77uwuiRaf8Zev8
         lr7EtsSw6WExxOs0ByWaCQ7GCJSbWb6jiPZ5e+erKcC+04HjKlarjF0f/GrYNg/iPvBO
         sTmQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc:content-transfer-encoding;
        bh=dKdebeIcsHGbVCx266icxe+2q+qH1cU06iFqLEzPVj4=;
        b=ShwBZoC4GdcPWG1XW5kqaMTSZgLfFmeD/7U44Ze4l/dBVHPWqqt7DeCX/xOBYQuDcm
         8GGXMy9wTRKJSqUZfs+I6OmFGBm7aiH4CRenwADZk62ozx9i5gXZvy0Y2R+t5hVBA4/Q
         VAiDU9wkMVurW0s9sUTxTse8ekdNOXZwkknyTeooGbD2G7om8RL/fJ6r/4WYzdSgla+a
         yM3NxMTQ5D1tBF7IwwBKVqsefZsUhj8pEdjHplG4i3DJaH+V5Ts+EheukUGZLFk5hCXQ
         kK55UxMDSN0+59BBuU5BvfM2hcdWt4brb6GatxHQknmEoV9i02E1MN1vp0X/KVkG4Fpz
         GDBA==
X-Gm-Message-State: AA+aEWaLVKjmTCZXEUvW74hF8ea6TOeTH5SbHM2H8Orlb7HuALUP529i
        fyL6o4P1HMyakJKNN3CcnXqFPxoV8MGNtkOExwQQig==
X-Google-Smtp-Source: AFSGD/WNj0gIZLdVu9MWMcxVtctHf0pp99GkPEGWKINXZT+O8N8QIq1lMdjm8c8+2b4VTIf2ULamTYvraCiQQbm+dfc=
X-Received: by 2002:a9d:e8c:: with SMTP id 12mr3492759otj.297.1543580469509;
 Fri, 30 Nov 2018 04:21:09 -0800 (PST)
MIME-Version: 1.0
References: <20181109190327.23606-1-matwey@sai.msu.ru> <20181109190327.23606-3-matwey@sai.msu.ru>
 <CAJs94Eb6Ev5O+Q_THYruxozSW2sTjWCrHhU8wciFNgYx7oCRuQ@mail.gmail.com>
In-Reply-To: <CAJs94Eb6Ev5O+Q_THYruxozSW2sTjWCrHhU8wciFNgYx7oCRuQ@mail.gmail.com>
From: "Matwey V. Kornilov" <matwey.kornilov@gmail.com>
Date: Fri, 30 Nov 2018 15:20:57 +0300
Message-ID: <CAJs94EYmRpUSnxzyt-8bdSwp3WgvOuqpt4b55wKQ41jDynFceg@mail.gmail.com>
Subject: Re: [PATCH v6 2/2] media: usb: pwc: Don't use coherent DMA buffers
 for ISO transfer
To: Linux Media Mailing List <linux-media@vger.kernel.org>,
        open list <linux-kernel@vger.kernel.org>
Cc: Tomasz Figa <tfiga@chromium.org>,
        Laurent Pinchart <laurent.pinchart@ideasonboard.com>,
        Alan Stern <stern@rowland.harvard.edu>,
        Ezequiel Garcia <ezequiel@collabora.com>,
        Hans de Goede <hdegoede@redhat.com>,
        Hans Verkuil <hverkuil@xs4all.nl>,
        Mauro Carvalho Chehab <mchehab@kernel.org>,
        Steven Rostedt <rostedt@goodmis.org>, mingo@redhat.com,
        Mike Isely <isely@pobox.com>,
        Bhumika Goyal <bhumirks@gmail.com>,
        Colin King <colin.king@canonical.com>,
        Kieran Bingham <kieran.bingham@ideasonboard.com>,
        keiichiw@chromium.org
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

=D1=81=D1=80, 21 =D0=BD=D0=BE=D1=8F=D0=B1. 2018 =D0=B3. =D0=B2 21:15, Matwe=
y V. Kornilov <matwey.kornilov@gmail.com>:
>
> =D0=BF=D1=82, 9 =D0=BD=D0=BE=D1=8F=D0=B1. 2018 =D0=B3. =D0=B2 22:03, Matw=
ey V. Kornilov <matwey@sai.msu.ru>:
> >
> > DMA cocherency slows the transfer down on systems without hardware
> > coherent DMA.
> > Instead we use noncocherent DMA memory and explicit sync at data receiv=
e
> > handler.
> >
> > Based on previous commit the following performance benchmarks have been
> > carried out. Average memcpy() data transfer rate (rate) and handler
> > completion time (time) have been measured when running video stream at
> > 640x480 resolution at 10fps.
> >
> > x86_64 based system (Intel Core i5-3470). This platform has hardware
> > coherent DMA support and proposed change doesn't make big difference he=
re.
> >
> >  * kmalloc:            rate =3D (2.0 +- 0.4) GBps
> >                        time =3D (5.0 +- 3.0) usec
> >  * usb_alloc_coherent: rate =3D (3.4 +- 1.2) GBps
> >                        time =3D (3.5 +- 3.0) usec
> >
> > We see that the measurements agree within error ranges in this case.
> > So theoretically predicted performance downgrade cannot be reliably
> > measured here.
> >
> > armv7l based system (TI AM335x BeagleBone Black @ 300MHz). This platfor=
m
> > has no hardware coherent DMA support. DMA coherence is implemented via
> > disabled page caching that slows down memcpy() due to memory controller
> > behaviour.
> >
> >  * kmalloc:            rate =3D  ( 94 +- 4) MBps
> >                        time =3D  (101 +- 4) usec
> >  * usb_alloc_coherent: rate =3D (28.1 +- 0.1) MBps
> >                        time =3D  (341 +- 2) usec
> >
> > Note, that quantative difference leads (this commit leads to 3.3 times
> > acceleration) to qualitative behavior change in this case. As it was
> > stated before, the video stream cannot be successfully received at AM33=
5x
> > platforms with MUSB based USB host controller due to performance issues
> > [1].
> >
> > [1] https://www.spinics.net/lists/linux-usb/msg165735.html
> >
> > Signed-off-by: Matwey V. Kornilov <matwey@sai.msu.ru>
>
> Ping

Ping

>
> > ---
> >  drivers/media/usb/pwc/pwc-if.c | 62 +++++++++++++++++++++++++++++++++-=
--------
> >  1 file changed, 49 insertions(+), 13 deletions(-)
> >
> > diff --git a/drivers/media/usb/pwc/pwc-if.c b/drivers/media/usb/pwc/pwc=
-if.c
> > index 53c111bd5a22..a81fb319b339 100644
> > --- a/drivers/media/usb/pwc/pwc-if.c
> > +++ b/drivers/media/usb/pwc/pwc-if.c
> > @@ -159,6 +159,32 @@ static const struct video_device pwc_template =3D =
{
> >  /*********************************************************************=
******/
> >  /* Private functions */
> >
> > +static void *pwc_alloc_urb_buffer(struct device *dev,
> > +                                 size_t size, dma_addr_t *dma_handle)
> > +{
> > +       void *buffer =3D kmalloc(size, GFP_KERNEL);
> > +
> > +       if (!buffer)
> > +               return NULL;
> > +
> > +       *dma_handle =3D dma_map_single(dev, buffer, size, DMA_FROM_DEVI=
CE);
> > +       if (dma_mapping_error(dev, *dma_handle)) {
> > +               kfree(buffer);
> > +               return NULL;
> > +       }
> > +
> > +       return buffer;
> > +}
> > +
> > +static void pwc_free_urb_buffer(struct device *dev,
> > +                               size_t size,
> > +                               void *buffer,
> > +                               dma_addr_t dma_handle)
> > +{
> > +       dma_unmap_single(dev, dma_handle, size, DMA_FROM_DEVICE);
> > +       kfree(buffer);
> > +}
> > +
> >  static struct pwc_frame_buf *pwc_get_next_fill_buf(struct pwc_device *=
pdev)
> >  {
> >         unsigned long flags =3D 0;
> > @@ -306,6 +332,11 @@ static void pwc_isoc_handler(struct urb *urb)
> >         /* Reset ISOC error counter. We did get here, after all. */
> >         pdev->visoc_errors =3D 0;
> >
> > +       dma_sync_single_for_cpu(&urb->dev->dev,
> > +                               urb->transfer_dma,
> > +                               urb->transfer_buffer_length,
> > +                               DMA_FROM_DEVICE);
> > +
> >         /* vsync: 0 =3D don't copy data
> >                   1 =3D sync-hunt
> >                   2 =3D synched
> > @@ -352,6 +383,11 @@ static void pwc_isoc_handler(struct urb *urb)
> >                 pdev->vlast_packet_size =3D flen;
> >         }
> >
> > +       dma_sync_single_for_device(&urb->dev->dev,
> > +                                  urb->transfer_dma,
> > +                                  urb->transfer_buffer_length,
> > +                                  DMA_FROM_DEVICE);
> > +
> >  handler_end:
> >         trace_pwc_handler_exit(urb, pdev);
> >
> > @@ -428,16 +464,15 @@ static int pwc_isoc_init(struct pwc_device *pdev)
> >                 urb->dev =3D udev;
> >                 urb->pipe =3D usb_rcvisocpipe(udev, pdev->vendpoint);
> >                 urb->transfer_flags =3D URB_ISO_ASAP | URB_NO_TRANSFER_=
DMA_MAP;
> > -               urb->transfer_buffer =3D usb_alloc_coherent(udev,
> > -                                                         ISO_BUFFER_SI=
ZE,
> > -                                                         GFP_KERNEL,
> > -                                                         &urb->transfe=
r_dma);
> > +               urb->transfer_buffer_length =3D ISO_BUFFER_SIZE;
> > +               urb->transfer_buffer =3D pwc_alloc_urb_buffer(&udev->de=
v,
> > +                                                           urb->transf=
er_buffer_length,
> > +                                                           &urb->trans=
fer_dma);
> >                 if (urb->transfer_buffer =3D=3D NULL) {
> >                         PWC_ERROR("Failed to allocate urb buffer %d\n",=
 i);
> >                         pwc_isoc_cleanup(pdev);
> >                         return -ENOMEM;
> >                 }
> > -               urb->transfer_buffer_length =3D ISO_BUFFER_SIZE;
> >                 urb->complete =3D pwc_isoc_handler;
> >                 urb->context =3D pdev;
> >                 urb->start_frame =3D 0;
> > @@ -488,15 +523,16 @@ static void pwc_iso_free(struct pwc_device *pdev)
> >
> >         /* Freeing ISOC buffers one by one */
> >         for (i =3D 0; i < MAX_ISO_BUFS; i++) {
> > -               if (pdev->urbs[i]) {
> > +               struct urb *urb =3D pdev->urbs[i];
> > +
> > +               if (urb) {
> >                         PWC_DEBUG_MEMORY("Freeing URB\n");
> > -                       if (pdev->urbs[i]->transfer_buffer) {
> > -                               usb_free_coherent(pdev->udev,
> > -                                       pdev->urbs[i]->transfer_buffer_=
length,
> > -                                       pdev->urbs[i]->transfer_buffer,
> > -                                       pdev->urbs[i]->transfer_dma);
> > -                       }
> > -                       usb_free_urb(pdev->urbs[i]);
> > +                       if (urb->transfer_buffer)
> > +                               pwc_free_urb_buffer(&urb->dev->dev,
> > +                                                   urb->transfer_buffe=
r_length,
> > +                                                   urb->transfer_buffe=
r,
> > +                                                   urb->transfer_dma);
> > +                       usb_free_urb(urb);
> >                         pdev->urbs[i] =3D NULL;
> >                 }
> >         }
> > --
> > 2.16.4
> >
>
>
> --
> With best regards,
> Matwey V. Kornilov



--=20
With best regards,
Matwey V. Kornilov
