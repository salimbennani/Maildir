Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 27 Nov 2018 12:18:45 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id A0C7A5802E4;
	Mon, 26 Nov 2018 18:39:34 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 26 Nov 2018 18:39:34 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A0wnwShJl2U8ZIelh4NmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgUL/35rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZUMhfVzJPDJ6/?=
 =?us-ascii?q?YYsVAeoOMvpXoJT/qFQAthu+HQuhCfjzyjNUnHL6wbE23v4/HQzAwQcuH8gOsH?=
 =?us-ascii?q?PRrNjtNKgdT+G1x7TKwjrZafNW1ir25Y/SchAgvf6MXah/cdDMxkU1GQLKkFSQ?=
 =?us-ascii?q?qIz/MDOT2eQAqGeb7+96WuKuj24rsR1+oj+qxso1jITCm4Ebykjc+Cln3Io4Ic?=
 =?us-ascii?q?e0RFN1bNK6CpdcqiKXO5dsTs4jQWxkoDs2x74GtJKheCUG1o4rywDBZ/CaaYSE?=
 =?us-ascii?q?/xzuWeCMKjlinn1lYqiwhxOq/Eig1OL8Us603U5UripKjNbMrGoB1x/N5cidTP?=
 =?us-ascii?q?ty4EOh1SyI1wDJ5eFIOUE0lazFJJ492rM8iIYfvEDZEiPrlkj6krWaelgn9+S0?=
 =?us-ascii?q?8ejqY7frqoeZN4BuiwH+Nqoumta4AeQ9KgUOW2mb+eKh1Lzs5EH5Q6tFjucwkq?=
 =?us-ascii?q?bHtJDWPMMbp6C/AwBLyIYu8Ai/Dzi439QCh3UHL0xKeAiBj4f3P1HCOvf4De2w?=
 =?us-ascii?q?g1i0ijdk2+jGPqH9ApXKNnXDlLbhfbVj5EJGxwsz0MtS55ZVCrEHPfLyVVX9tN?=
 =?us-ascii?q?3eDh8lLQO0x/zrB8l61oMbQWiPGLOWMLvOsV+U4eIiO+mMa5UUuDbhMfcl4OTi?=
 =?us-ascii?q?jX8kmVAHe6mp0oAaaHS5HvRgPkWYbmDggtYHEWcWoAU+SPbmh0GFUT5Wf3yyRb?=
 =?us-ascii?q?4z5iknCIK6CofOXoKtgLuf0yuhHZ1WYWZGClaLEXrzc4WEWvEMaD+dI8N7kzwE?=
 =?us-ascii?q?U6ShRJEl1R20qAD6zL9nJPLO+iIErZLjyMR15+rLmB4o7jx0D8Od02KXQ2FuhG?=
 =?us-ascii?q?wIRSQ73KR+oUx711eC3rJ0g/1eFdxP+fxJVh02OoLbz+x/E9ryQB7Ofs+VSFa6?=
 =?us-ascii?q?RdWrGTIxQcg3w9MUZ0Z9Gs+tjhbM3yexB78VlrqLBIE7867G3njxIdp9xGjC1K?=
 =?us-ascii?q?U7k1YmRc5PP3W8hqFj7wjTG5LJk0KBmqm3b6scwjDC+H2DzWWUukFYSxB/UaPC?=
 =?us-ascii?q?UXAbZUvWqND561jGT7+vD7QnLwRAxdSDKqtMdt3mk1FGSO3/N9TZZmK7g32wCg?=
 =?us-ascii?q?qQxrOQcIrqfH0Q0zjHB0gajQ8f53aGOhI4Bie6vW3eCidjFVbuY0Pq7Ol/p2m3?=
 =?us-ascii?q?Tk4yzwGWcUJh06C59QIShfyZU/kTxK4LuD89qzVoG1awx87WC9uFpwpmYKVcYd?=
 =?us-ascii?q?M87E1b1W7DsAx9JJigL6Fkhl4RaAl3u0Lu1xNqCoRPi8QqrXUqzBZsJqKcyl9O?=
 =?us-ascii?q?azSY3ZXoML3NNmby5Ayva7LR2lzGytmW/rkA6fsmpFTjpg2mDVci/Gh93NlT0H?=
 =?us-ascii?q?uc4YvKAREWUZLwVEY36hd7q6vbYik7+4Pby3lsPbOovT/F3tIjHPElxQq4f9dD?=
 =?us-ascii?q?LKOEExf/Es0HB8S0NOMmgVmobhIeM+BU+645JMemd/qA2K62M+dshjOmjWJb4I?=
 =?us-ascii?q?9j1kKA7TZzSunN35wd2fGXwhOHVyvgjFemqs33g4FEai0IEWql1CfkA5RdZqts?=
 =?us-ascii?q?coYRCGeiOtG4yc96h5HwRXFY7lmjB1Ud1c+teBqSaUH93AJK2UQWp3ynhTW3zz?=
 =?us-ascii?q?hunz41qaqf2TTEw/7+exofJm5LWG5igE/sIIi1ldwbXFKkbxM0lBuj/kv6w6lb?=
 =?us-ascii?q?pKJiL2jcW0tIfi72L318Xau0rLaNf8lP6JYwuyVNTOu8eUyaSqL6oxYC0SPsBX?=
 =?us-ascii?q?FexDM4dzGtoJn5hAZ1iGGeLHZyqnrWZ8dwyAzb5NzdQ/5RwzUHSDN5iTnRGliz?=
 =?us-ascii?q?Id2p8c+ImJfEt+C0T3ihWYFLcSn30YOAszO25G1wDh24hfyzmNznEQ4h3C//1t?=
 =?us-ascii?q?lqUzjIrRnmbonq0aS6Lfxofk1yCFDg7Mp6H5l0kpEsi5EIxXgampKV8GIEkWjp?=
 =?us-ascii?q?MNVXw6L+bGcXSj4NzN7Y+wzl2ExlLnKUyIP1THSdws19Z9akZmMawD4y78dPCK?=
 =?us-ascii?q?2M9rxLgTN1okakrQLWefV9mzYdyfg053IAjeAGphEtzjmDDbAIBkZXIzbslxuT?=
 =?us-ascii?q?4tC6raVXYnuvcLeq2Ep/m9ChEK+NogVGVHnlfZciGDd67t9jP1LUzH3z9obkdc?=
 =?us-ascii?q?HMbdIUsx2YiRbBgPJTKJIsjfoKnitnNHn5vX0kze47kBNv0Yu7vIiBN2Vi4qa5?=
 =?us-ascii?q?DgREOT3yYsMZ4ivtgrpGnsaKw4CvGY1sFS4RU5vvSfKoDSgetfD6NwuVFD08q3?=
 =?us-ascii?q?GbGafQHAOF6UdmqW7PHI6vN32NOHYZytBiTgGHJENDmAAUQCk6npkhGwCo3sPh?=
 =?us-ascii?q?dVl25isL6l7ksBdMyf9oNxriUmfZvgiocSw5SJyeLBpQ8wFD6F3ZMc2Y7uJvAS?=
 =?us-ascii?q?5Y+oetoxCKKmyefw5IF30GWlSYB1D/Obmj/dnB8++FBuqnMvvBe7OOpfZFV/eP?=
 =?us-ascii?q?w5Kv3ZBr/zKNNsWJI3ljAOc32ktFXXBlBcvZny8DRDAQlyLId8Sbvguz+jVrrs?=
 =?us-ascii?q?Cj9/TmQALv6pWOC7tRMtVv+gq6gaSZN+6XiyZ2NyxY1o4XxXLTzLgf3VgSizxh?=
 =?us-ascii?q?djW3ELQAszLNQ7zUmqNNExEbbCZzPtNS760gxglNJdLbitTt27Fik/46EE1FWk?=
 =?us-ascii?q?Lhm82zYcwKInqwNFfGBEaNKbSHKifHw8DxYaOgV7JQiP9YuAG3uTaeC0XjJCiM?=
 =?us-ascii?q?lyH1VxCzNuFBlD2bPB1buI2nbhlhE3TsTNL4ZR29K9J3iTw2wbsphnLFL2IcMD?=
 =?us-ascii?q?58c19Tob2U9y9XnvJ/G2lZ5Hp/MeaEgzqZ7/XfKpsOsfpkGCJ0l+db4HQ807RU?=
 =?us-ascii?q?7SFES+ZzmCvdtdNup1Cmku+SyjtoShZOqzBLhJ6VskVmI6nW6p5AWXOXtC4KuF?=
 =?us-ascii?q?qdDRsDodQtNdTptOgE1dXJ0q36LjgE7NvS8uMbHcHfLM/BO30kZ0nTFSbQHTcC?=
 =?us-ascii?q?GAGmNCnujkpS2KWI93aVp4I27IfhmYsHTLBzW1k8F/dcAUNgSo8sOpByCwwpkP?=
 =?us-ascii?q?aqhcgHrS6krRLRTd9W+I/KV+ObB/rHJzOQjL0CbBwNl+CrZb8PP5H2jhQxImJx?=
 =?us-ascii?q?m57HTg+JBYhA?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AEAACdrfxbh0O0hNFjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGDayeMEY4SFIkJboN5hEGEdxSBXxIBARgTAYMshTc?=
 =?us-ascii?q?iNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkAYJiAQIDAQIIEgoEDwYBGx0BA?=
 =?us-ascii?q?wIJAQEFBQ4KCSUDDBQMAQQBBQEDARgGEwWDHIFpAQECFQQBmhg8jAkWBQEXDYJ?=
 =?us-ascii?q?qBYI1ghAKGQQKGQ1agTcCBhKKW4EcghaEI4RmhXMCiRmBeIVNjyYHApEkIwqJR?=
 =?us-ascii?q?4FiC0+EeyyXXgYCCQcPITlsgg1NI1CBTYEfghsJAxeDSopSQDKBAgMBASETjGI?=
 =?us-ascii?q?BAQ?=
X-IPAS-Result: =?us-ascii?q?A0AEAACdrfxbh0O0hNFjGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGDayeMEY4SFIkJboN5hEGEdxSBXxIBARgTAYMshTciNAkNAQMBAQEBA?=
 =?us-ascii?q?QECARMBAQEIDQkIKSMMgjYkAYJiAQIDAQIIEgoEDwYBGx0BAwIJAQEFBQ4KCSU?=
 =?us-ascii?q?DDBQMAQQBBQEDARgGEwWDHIFpAQECFQQBmhg8jAkWBQEXDYJqBYI1ghAKGQQKG?=
 =?us-ascii?q?Q1agTcCBhKKW4EcghaEI4RmhXMCiRmBeIVNjyYHApEkIwqJR4FiC0+EeyyXXgY?=
 =?us-ascii?q?CCQcPITlsgg1NI1CBTYEfghsJAxeDSopSQDKBAgMBASETjGIBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,285,1539673200"; 
   d="scan'208";a="52751173"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 26 Nov 2018 18:39:31 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728325AbeK0Nfr (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 27 Nov 2018 08:35:47 -0500
Received: from mail-ed1-f65.google.com ([209.85.208.65]:37716 "EHLO
        mail-ed1-f65.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728025AbeK0Nfq (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 27 Nov 2018 08:35:46 -0500
Received: by mail-ed1-f65.google.com with SMTP id h15so17690347edb.4
        for <linux-kernel@vger.kernel.org>; Mon, 26 Nov 2018 18:39:27 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=date:from:to:cc:subject:message-id:reply-to:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=e3DnUS0xGl1BdP8iCaJnj8b8YZZ49GG1NKDzme1M4zk=;
        b=OcHUfHlVixSwdJVIScNNUWjvETbJCfTrK9oHeAYx/PTIF+g0l5/ZVA+6eDIrYNFhN6
         iX48X6cLKvpTjpKpQnKXvKeULK9cWfI8srVJy4MBdl/IQned5vJIuM2qqMlrK3B2D8qn
         tmkFm0ibCh/D+DxsoALiBVWhpyNb23ZPs/Vp5nhltB58nrwEF8dewWatEjjFtf5GpXrG
         hOHQpid+E235ijnx0SvpTYCwFOXREgX/ZWQH9B8XaBceZwBqZiZkKIC401h/Y86wBelT
         QGjPo2oIoGHrdsxAkvCoxJ+7M4l8/Gt63U8uZCoSco4CnxVALJJiJlGLydKkaBuXwUfA
         RVpQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:cc:subject:message-id:reply-to
         :references:mime-version:content-disposition:in-reply-to:user-agent;
        bh=e3DnUS0xGl1BdP8iCaJnj8b8YZZ49GG1NKDzme1M4zk=;
        b=D4hVexg0TvtQd6ylgxqbcd57IzeRFN8lUDnb+SKV/GtZ3NOVRy7T2esH3DdTId3fj2
         sS+MNuduUVhX127GfbrEJBtp1vqLzKf1I5jam2rbWrkXwTNlRvoF8LBfMFeztSd2u+ME
         /tELuwthTXV6OY7BZP2d/VcQGf5wwdqF9q5AJbP3dKq7F2E/r4MGZIbQPTUD1qeftWdS
         FE4eaczGJ6EUxVenEpOxX1C8webjHVMbkn0lQKopR50WTuIp+BQSrL/+JTmucjA27czK
         X7pEOrIpkrq9XeYzwj9ooIUKIBE20MDnYT91xmqGyTEfwNhFt66k9xc7SZ+R1Isit+Ov
         iJ7g==
X-Gm-Message-State: AA+aEWYlzhEdEV4ZNNrRGCNwtLadxYSv5YdHLFH0twGTvaf5YvYXJbxY
        B3ES90JPjb6iZTtt1E0dPF8=
X-Google-Smtp-Source: AFSGD/XRsAd7K2F3z731+DcxKqCj/mSOOOfOZq3kq265ZfNFX5eKhUh0foiW9XAi94s1aEM7B3G5IA==
X-Received: by 2002:a50:93c5:: with SMTP id o63mr24637767eda.20.1543286366565;
        Mon, 26 Nov 2018 18:39:26 -0800 (PST)
Received: from localhost ([185.92.221.13])
        by smtp.gmail.com with ESMTPSA id w13sm632899edl.54.2018.11.26.18.39.25
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Mon, 26 Nov 2018 18:39:25 -0800 (PST)
Date: Tue, 27 Nov 2018 02:39:25 +0000
From: Wei Yang <richard.weiyang@gmail.com>
To: Wengang Wang <wen.gang.wang@oracle.com>
Cc: Wei Yang <richard.weiyang@gmail.com>,
        zhong jiang <zhongjiang@huawei.com>,
        Christopher Lameter <cl@linux.com>, penberg@kernel.org,
        David Rientjes <rientjes@google.com>, iamjoonsoo.kim@lge.com,
        Andrew Morton <akpm@linux-foundation.org>,
        Linux-MM <linux-mm@kvack.org>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>
Subject: Re: [PATCH] mm: use this_cpu_cmpxchg_double in put_cpu_partial
Message-ID: <20181127023925.xdramcjenpsawfw6@master>
Reply-To: Wei Yang <richard.weiyang@gmail.com>
References: <20181117013335.32220-1-wen.gang.wang@oracle.com>
 <5BF36EE9.9090808@huawei.com>
 <CADZGycb=kxdqSdbdXNWwmgyWp2CtC3-UFmy1-PqtdgS2BrmyjA@mail.gmail.com>
 <476b5d35-1894-680c-2bd9-b399a3f4d9ed@oracle.com>
 <20181127003638.2oyudcyene6hb6sb@master>
 <6e9efd77-b6af-40f4-56b0-c0572930b3e0@oracle.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <6e9efd77-b6af-40f4-56b0-c0572930b3e0@oracle.com>
User-Agent: NeoMutt/20170113 (1.7.2)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, Nov 26, 2018 at 05:42:28PM -0800, Wengang Wang wrote:
>
>
>On 2018/11/26 16:36, Wei Yang wrote:
>> On Mon, Nov 26, 2018 at 08:57:54AM -0800, Wengang Wang wrote:
>> > 
>> > On 2018/11/25 17:59, Wei Yang wrote:
>> > > On Tue, Nov 20, 2018 at 10:58 AM zhong jiang <zhongjiang@huawei.com> wrote:
>> > > > On 2018/11/17 9:33, Wengang Wang wrote:
>> > > > > The this_cpu_cmpxchg makes the do-while loop pass as long as the
>> > > > > s->cpu_slab->partial as the same value. It doesn't care what happened to
>> > > > > that slab. Interrupt is not disabled, and new alloc/free can happen in the
>> > > > > interrupt handlers. Theoretically, after we have a reference to the it,
>> > > > > stored in _oldpage_, the first slab on the partial list on this CPU can be
>> > > > > moved to kmem_cache_node and then moved to different kmem_cache_cpu and
>> > > > > then somehow can be added back as head to partial list of current
>> > > > > kmem_cache_cpu, though that is a very rare case. If that rare case really
>> > > > > happened, the reading of oldpage->pobjects may get a 0xdead0000
>> > > > > unexpectedly, stored in _pobjects_, if the reading happens just after
>> > > > > another CPU removed the slab from kmem_cache_node, setting lru.prev to
>> > > > > LIST_POISON2 (0xdead000000000200). The wrong _pobjects_(negative) then
>> > > > > prevents slabs from being moved to kmem_cache_node and being finally freed.
>> > > > > 
>> > > > > We see in a vmcore, there are 375210 slabs kept in the partial list of one
>> > > > > kmem_cache_cpu, but only 305 in-use objects in the same list for
>> > > > > kmalloc-2048 cache. We see negative values for page.pobjects, the last page
>> > > > > with negative _pobjects_ has the value of 0xdead0004, the next page looks
>> > > > > good (_pobjects is 1).
>> > > > > 
>> > > > > For the fix, I wanted to call this_cpu_cmpxchg_double with
>> > > > > oldpage->pobjects, but failed due to size difference between
>> > > > > oldpage->pobjects and cpu_slab->partial. So I changed to call
>> > > > > this_cpu_cmpxchg_double with _tid_. I don't really want no alloc/free
>> > > > > happen in between, but just want to make sure the first slab did expereince
>> > > > > a remove and re-add. This patch is more to call for ideas.
>> > > > Have you hit the really issue or just review the code ?
>> > > > 
>> > > > I did hit the issue and fixed in the upstream patch unpredictably by the following patch.
>> > > > e5d9998f3e09 ("slub: make ->cpu_partial unsigned int")
>> > > > 
>> > > Zhong,
>> > > 
>> > > I took a look into your upstream patch, while I am confused how your patch
>> > > fix this issue?
>> > > 
>> > > In put_cpu_partial(), the cmpxchg compare cpu_slab->partial (a page struct)
>> > > instead of the cpu_partial (an unsigned integer). I didn't get the
>> > > point of this fix.
>> > I think the patch can't prevent pobjects from being set as 0xdead0000 (the
>> > primary 4 bytes of LIST_POISON2).
>> > But if pobjects is treated as unsigned integer,
>> > 
>> > 2266???????????????????????????????????????????????? pobjects = oldpage->pobjects;
>> > 2267???????????????????????????????????????????????? pages = oldpage->pages;
>> > 2268???????????????????????????????????????????????? if (drain && pobjects > s->cpu_partial) {
>> > 2269???????????????????????????????????????????????????????????????? unsigned long flags;
>> > 
>> Ehh..., you mean (0xdead0000 > 0x02) ?
>Yes.
>
>> This is really a bad thing, if it wordarounds the problem like this.
>It does.
>> I strongly don't agree this is a *fix*. This is too tricky.
>It's tricky. I don't know for what purpose the patch went in. The commit
>message was just saying _pobjects_ should be "unsigned"...

Well, upstream accepts that commit is reasonable, since pobjects is not
possible to be negative. This is two different things.

But relates that commit with the  problem here is not proper.

>
>thanks,
>wengang
>
>> > line 2268 will be true in put_cpu_partial(), thus code goes to
>> > unfreeze_partials(). This way the slabs in the cpu partial list can be moved
>> > to kmem_cache_nod and then freed. So it fixes (or say workarounds) the
>> > problem I see here (huge number of empty slabs stay in cpu partial list).
>> > 
>> > thanks
>> > wengang
>> > 
>> > > > Thanks,
>> > > > zhong jiang

-- 
Wei Yang
Help you, Help me
