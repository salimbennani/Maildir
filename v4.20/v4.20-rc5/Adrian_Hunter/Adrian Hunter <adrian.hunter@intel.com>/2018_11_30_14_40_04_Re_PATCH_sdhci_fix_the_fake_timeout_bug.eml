Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:18:57 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga007.fm.intel.com (fmsmga007.fm.intel.com [10.253.24.52])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id BE68B580224;
	Fri, 30 Nov 2018 06:44:59 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by fmsmga007-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 30 Nov 2018 06:44:59 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AAD/sThLgWkEAPmvOvNmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgUL/z4rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZQ8hfSSJBDIO7?=
 =?us-ascii?q?b4UMAeQOM+lXoIvhqFUBthu+HQuhCfjzyjJKnHL6wbE23uojHAzAwQcuH8gOsH?=
 =?us-ascii?q?PRrNjtKKodTPq1zKjSwjXFcvhY2yr96I7Uch8/u/GHQLV9ftDMxkk1FgPKlFOQ?=
 =?us-ascii?q?pZblPzOI0OQNr3aU7/B7WOKujW4ntx9+ojy1ysgwjYnJg5sYx1bZ/it3x4Y1IM?=
 =?us-ascii?q?e3SE99YdO8FZtfrTuaOJdsTsMjRWFotiE6x7sbspC4ZCgH0IorywLbZvCdboSF?=
 =?us-ascii?q?7AzvWPyMLTp7mH5pYrOyihSq/US9zuDwSNO43VZKoyZfktTAqGoB2wHT58SaTP?=
 =?us-ascii?q?Z2412v1iyV1w/J7+FJOUA0mrTfK54m2rMwiJUTvlrZHiPsm0X5krWWdkM69eis?=
 =?us-ascii?q?8ejnZa/mppCEO491jAHxLLgul9ShDegkNgUCRXWX9Oqi2LH54EH0Q6lGguc3n6?=
 =?us-ascii?q?TbqJzaIN4Upq+9Aw9byIYj7BO/Ai+i0NQZm3kHMV1EdAuEj4f3IVHOJu73DfOm?=
 =?us-ascii?q?j1SrnjZrwe7JPqf6D5XTIXjMjq3hcax+60FC0gozy85Q55ZOBrEGOvLzVVf9tM?=
 =?us-ascii?q?bEAR8hLwy03+HnBc151oMfWmKAHLWVMazPsVKT4uIvIu+MZJIauTrnKvgl4eLu?=
 =?us-ascii?q?gmE9mVMHYaap2p4XYmiiHvt6O0WZfWbsgtAZHGcKpAU+TfDqh0eFUTJJZ3ayQr?=
 =?us-ascii?q?gz5jc0CI+9CYfDR4atgKGO3SuhH51WYHxGBU6IEXvya4qEXPIMYjqIIsB9ijwE?=
 =?us-ascii?q?SaShS4g52BGssw/11aBrLunT+i0es5Lj08N45+nSlRE06Dx1AN6R02CLT2FogG?=
 =?us-ascii?q?wIQyU607x4oUx40l2Dy7R3g+REFdxP4PNESh01NYXcz+x9CND+QBjBcc2LSFu9?=
 =?us-ascii?q?RtWmADcxTs8+wtMUYkZ9HcmigQ7H3yawH7AVkLmLDoQu8q3Ax3jxO9p9y3He2a?=
 =?us-ascii?q?kilVYmRNFDNWmnhqFl8QjTCJXEk0GYl6asaKQd0zTB9GaFzWqSok5YVBR8XrnC?=
 =?us-ascii?q?XXAafkHWt8j25lveT7+yDrQqKhZOxtScKqRUcNHpjU9JRPH4ONvAZWK9nGOwBR?=
 =?us-ascii?q?WNxrOId4fqf2Qd3CPACEkLiQwT/HCGNRQgCSeluW7REDtuFVf3aUP27eZ+sG+7?=
 =?us-ascii?q?TlMzzwySckJuzaS19QAPifycUfwT2KkEtzknqzhvGFa93tTWC8ePpgZ7faVcZ8?=
 =?us-ascii?q?8970lD1W7DqwN9OZmgJbh4hlECawR3o1/u1xJvB4VckMgqqXQqzBZyKaOYyl9B?=
 =?us-ascii?q?aymU3ZfqOr3TK2ny+h+vZrXS2lHf1taW56gO5O45q1XloAGmCE4i/2973NlS1n?=
 =?us-ascii?q?uW/o/KAxYKUZLtTkY38AB3qKveYiYj6ILby31tPbOvvT/fxt0mHu0lyhWnf9dB?=
 =?us-ascii?q?K66EEA7yE8sHB8mhMuAqml6pbg4aM+BW7qI7I8Smd/6e0q6xIOlghC6mjXhA4I?=
 =?us-ascii?q?1l0kOM6jBwRfLS05cEw/GXxA2HVzjngVels8D3n51EZD4IEmq+zyjkGJBeZqlo?=
 =?us-ascii?q?cYkXDmeuJtW9xs9iiJ71R35Y6FmjCksc2M+oZRWddUb90hBX1UgNp3yohzG4zz?=
 =?us-ascii?q?1tnz41tKWf2DHBzPr4dBoAPG5GX21ijVbqIYipgNEWRkmobw41lBS74Ub23bRU?=
 =?us-ascii?q?pKN6L2PLW0dHYzD2L31+Uqu3rreDY89P5IkosClNS+S8fFaaR6X5oxsb1SPjAm?=
 =?us-ascii?q?RfyCo6dzGsppX2gRh6hHiBI3Z0qXrTYdtwygvH5NzAWf5R2SILRCtihjnNBVi8?=
 =?us-ascii?q?PN6p8c+Pl5jZseC+VGOhVptNfint1o6AsCq75Wt3ARywhfyzm9vnERQk3i//zd?=
 =?us-ascii?q?VlSSLIrBPkaInxy6u6Kf5nflVvBFLk68t1AIZ+npEyhJER33gXnZGV/XsBkWfu?=
 =?us-ascii?q?PtRXw6P+bHwRRTEVx97Z+hTq2EpmLniR3YL2Sm2dwtd9Z9m9em4W2Tgy78FQBK?=
 =?us-ascii?q?eU8bxLhy11olWjoALVYPh9mCodyPQ05H4bheEJpBQiziGHDr8OGklYODTmlw6U?=
 =?us-ascii?q?4NCmsKVXeGGvfKC11Ep/ntCuFquOow9CV3biZpctAzVw4d5hP1LW333+8YXkeN?=
 =?us-ascii?q?jWbdIOuRyYiRbAj+5JKJ0vkvoGnzZoOWX4vXc90e40kQRu3Y2mvIiAM2ht4KW5?=
 =?us-ascii?q?AhtCOjz0fcwT/Cztjb1FnsaXxI2vGpRhGjMWXJrnV/6oETQStej5OAaKCjEztn?=
 =?us-ascii?q?CbGb/HFw+F9Ehmt27PE4ysN3yPP3YW19JiRB2AJEBFhAAUQS43npo4FgCs2czg?=
 =?us-ascii?q?f1115jEX5l7ktBRMzvhkOAX4UmfavA2ocCs7SICDLBpK6QFP/0XVPtab7u1tBC?=
 =?us-ascii?q?FU5IGhoBaOKmyGZARIEGcJVVafB134Ormu5N/A8/WXB+akLvvOZ6mOpvJaV/uS?=
 =?us-ascii?q?2Z2v1Y5m9S6WNsqTJnliE+E72k1bUHF5HMTZhiwPSzENmCLLdcKbvxC8+it4rs?=
 =?us-ascii?q?2k9PTrWQTv5ZaACrdIMNVv/Qy2jrmHN+KKmCl5LjNY3IsWxXDU0LgfwEISiyZ2?=
 =?us-ascii?q?ejmtD7sAtC3NTKHRmqNNDB4bcSRzNMRW4KImwwlNItXWitf01r5+k/40BE1JVV?=
 =?us-ascii?q?3nmsG1e8MKJ3uxO0/ABEaOLL6GPyHEw9nrYaOgTr1dlP9btwCrtjaBDUDiPi6P?=
 =?us-ascii?q?lz3oVx20NeFMjSebPAFRuY2ncxZtD3TjQ8ziahGhLNB3ijg2y6UuhnzWLW4cLS?=
 =?us-ascii?q?R8c0RVo72M7CNYh+9zFHBb4nV5LemLhSCZ4vLcKpYXt/trHyt1m/hb4HQ817ta?=
 =?us-ascii?q?8iVESOZplyvVq95ku0umnfWXyjp7TBpOrS5GhYKRskVkPKXZ959AVm7F/RIN92?=
 =?us-ascii?q?qQDRsKqsBhCt3uvaBQ19fOmLjyKDdE79Lb488cC9LIJ8KANXpyeSbuTXT4EU9N?=
 =?us-ascii?q?ZDqmNiuX00VZnfLU+mC9r54mp5yqk50LHOx1TlswQ9oWEEVsGpQiPZFrUylsxb?=
 =?us-ascii?q?eXls8B4zy+sR/NSd9yv5bbW/bUCvLqfmXKxYJYbgcFlOurZb8YMZf2jgk7MgF3?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AHAACeTAFch0O0hNFkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBVAIBAQEBCwGCaXASFBODeYh3iymBYC0Ul0iBXxQYCwgBhECDNiI?=
 =?us-ascii?q?3Bg0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmEBAQEBAgEBAiAEUgYJAQEKG?=
 =?us-ascii?q?AICJgICA1QGDQYCAQEBgxwBgXkIBQqmHXwziikFgQuLD4FXP4E4gmuDHgQYgTA?=
 =?us-ascii?q?XgwSCVwKJCRKGVY91UAcCgh4EhF2KMgYYgVuFEIo0jV+KfoFcgXczGiODPBOCF?=
 =?us-ascii?q?BeGI4d8PQEBMYEFAQGNSQEB?=
X-IPAS-Result: =?us-ascii?q?A0AHAACeTAFch0O0hNFkGgEBAQEBAgEBAQEHAgEBAQGBVAI?=
 =?us-ascii?q?BAQEBCwGCaXASFBODeYh3iymBYC0Ul0iBXxQYCwgBhECDNiI3Bg0BAwEBAQEBA?=
 =?us-ascii?q?QIBEwEBAQgNCQgpIwyCNiQBgmEBAQEBAgEBAiAEUgYJAQEKGAICJgICA1QGDQY?=
 =?us-ascii?q?CAQEBgxwBgXkIBQqmHXwziikFgQuLD4FXP4E4gmuDHgQYgTAXgwSCVwKJCRKGV?=
 =?us-ascii?q?Y91UAcCgh4EhF2KMgYYgVuFEIo0jV+KfoFcgXczGiODPBOCFBeGI4d8PQEBMYE?=
 =?us-ascii?q?FAQGNSQEB?=
X-IronPort-AV: E=Sophos;i="5.56,298,1539673200"; 
   d="scan'208";a="55018956"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 30 Nov 2018 06:44:45 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726913AbeLABvO (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 30 Nov 2018 20:51:14 -0500
Received: from mga17.intel.com ([192.55.52.151]:44118 "EHLO mga17.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726398AbeLABvO (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 30 Nov 2018 20:51:14 -0500
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga006.jf.intel.com ([10.7.209.51])
  by fmsmga107.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 30 Nov 2018 06:41:42 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,298,1539673200"; 
   d="scan'208";a="96315664"
Received: from ahunter-desktop.fi.intel.com (HELO [10.237.72.130]) ([10.237.72.130])
  by orsmga006.jf.intel.com with ESMTP; 30 Nov 2018 06:41:40 -0800
Subject: Re: [PATCH] sdhci: fix the fake timeout bug
To: "Du, Alek" <alek.du@intel.com>
Cc: linux-mmc@vger.kernel.org, ulf.hansson@linaro.org,
        linux-kernel@vger.kernel.org
References: <20181130150028.732896d8@xdu1-mobl>
 <81ba3745-8277-d16e-3aad-48324f51dc8a@intel.com>
 <20181130221300.4ef2956c@xdu1-mobl>
From: Adrian Hunter <adrian.hunter@intel.com>
Organization: Intel Finland Oy, Registered Address: PL 281, 00181 Helsinki,
 Business Identity Code: 0357606 - 4, Domiciled in Helsinki
Message-ID: <c580be57-8a49-59f3-791e-c605d892266b@intel.com>
Date: Fri, 30 Nov 2018 16:40:04 +0200
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.3.1
MIME-Version: 1.0
In-Reply-To: <20181130221300.4ef2956c@xdu1-mobl>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 30/11/18 4:13 PM, Du, Alek wrote:
> On Fri, 30 Nov 2018 11:19:03 +0200
> Adrian Hunter <adrian.hunter@intel.com> wrote:
> 
>> Commands and resets are under spin lock, so no possibility for
>> preemption, and certainly a few microseconds isn't going to make any
>> difference to these timeouts, so I don't see how this patch could
>> help.
> 
> Thanks for your review.
> 
> I believe my case the scheduling out delay sometime can reach 10~20
> milliseconds... This may be due to the hypervisor...

So you are saying this only happens under virtualization?

> 
> Please look at the sdhci_enable_clk() below, there is a window in clock
> stabilization check. The first check is to check status register, the
> second check is to check if time passed. That's why I can capture a
> case that after time passed, the actually clock control register
> indicated that clock is stable. So the error handling is wrong...

Sure, but "Internal clock never stabilised." is not one of the  errors you
listed.

> 
> Also the sdhci_send_command commands is not in spin lock There is a
> windows between mod_timer and real command send...

What code path does not have a spin lock?

> 
> Thanks,
> Alek
> 
>>
>> I recently sent a patch for GLK laptops that had BIOS issues:
>>
>> 	https://marc.info/?l=linux-mmc&m=154270005901609
>>
>> And also some improvements to error handling:
>>
>> 	https://marc.info/?l=linux-mmc&m=154229013900437
>>
>> If those don't help, please share more details of the actual problem.
> 
> Sorry, I can't see how this patches could fix my problem.
> 
> 
> 
>>
>>>
>>> Signed-off-by: Alek Du <alek.du@intel.com>
>>> ---
>>>  drivers/mmc/host/sdhci.c | 19 ++++++++++++++++---
>>>  1 file changed, 16 insertions(+), 3 deletions(-)
>>>
>>> diff --git a/drivers/mmc/host/sdhci.c b/drivers/mmc/host/sdhci.c
>>> index 99bdae53fa2e..f88c49fc574e 100644
>>> --- a/drivers/mmc/host/sdhci.c
>>> +++ b/drivers/mmc/host/sdhci.c
>>> @@ -218,12 +218,17 @@ void sdhci_reset(struct sdhci_host *host, u8
>>> mask) /* hw clears the bit when it's done */
>>>  	while (sdhci_readb(host, SDHCI_SOFTWARE_RESET) & mask) {
>>>  		if (ktime_after(ktime_get(), timeout)) {
>>> +			/* check it again, since there is a window
>>> between
>>> +			   bit check and time check */
>>> +			if (!(sdhci_readb(host,
>>> SDHCI_SOFTWARE_RESET) & mask))
>>> +				break;
>>>  			pr_err("%s: Reset 0x%x never completed.\n",
>>>  				mmc_hostname(host->mmc),
>>> (int)mask); sdhci_dumpregs(host);
>>>  			return;
>>> +		} else {
>>> +			udelay(10);
>>>  		}
>>> -		udelay(10);
>>>  	}
>>>  }
>>>  EXPORT_SYMBOL_GPL(sdhci_reset);
>>> @@ -1395,9 +1400,10 @@ void sdhci_send_command(struct sdhci_host
>>> *host, struct mmc_command *cmd) timeout +=
>>> DIV_ROUND_UP(cmd->busy_timeout, 1000) * HZ + HZ; else
>>>  		timeout += 10 * HZ;
>>> -	sdhci_mod_timer(host, cmd->mrq, timeout);
>>>  
>>>  	sdhci_writew(host, SDHCI_MAKE_CMD(cmd->opcode, flags),
>>> SDHCI_COMMAND);
>>> +	/* setup timer after command to avoid fake timeout */
>>> +	sdhci_mod_timer(host, cmd->mrq, timeout);
>>>  }
>>>  EXPORT_SYMBOL_GPL(sdhci_send_command);
>>>  
>>> @@ -1611,12 +1617,19 @@ void sdhci_enable_clk(struct sdhci_host
>>> *host, u16 clk) while (!((clk = sdhci_readw(host,
>>> SDHCI_CLOCK_CONTROL)) & SDHCI_CLOCK_INT_STABLE)) {
>>>  		if (ktime_after(ktime_get(), timeout)) {
>>> +			/* check it again since there is a window
>>> between
>>> +			   status check and time check */
>>> +			if ((clk = sdhci_readw(host,
>>> SDHCI_CLOCK_CONTROL))
>>> +					& SDHCI_CLOCK_INT_STABLE)
>>> +				break;
>>>  			pr_err("%s: Internal clock never
>>> stabilised.\n", mmc_hostname(host->mmc));
>>>  			sdhci_dumpregs(host);
>>>  			return;
>>>  		}
>>> -		udelay(10);
>>> +		else {
>>> +			udelay(10);
>>> +		}
>>>  	}
>>>  
>>>  	clk |= SDHCI_CLOCK_CARD_EN;
>>>   
>>
> 
> 

