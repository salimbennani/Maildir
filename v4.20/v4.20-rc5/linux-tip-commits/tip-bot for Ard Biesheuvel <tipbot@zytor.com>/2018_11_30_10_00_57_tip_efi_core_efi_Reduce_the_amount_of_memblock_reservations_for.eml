Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:15:57 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from FMSMGA003.fm.intel.com (fmsmga003.fm.intel.com [10.253.24.29])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E0CAA580213;
	Fri, 30 Nov 2018 02:02:00 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by FMSMGA003-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 30 Nov 2018 02:02:00 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ASv6zWBQ9g5bnRYYW8Wn2Nwb7e9psv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa65ZBaOt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KptVRTmij?=
 =?us-ascii?q?oINyQh/W/ZisJ+j7hbrxCvpxJh3oDaZ46aOvVicazAZtMaXWhMU91NVyFCGI6w?=
 =?us-ascii?q?c5ECA/YDMOtesoLzp0EOrRy7BQS0GOPvyydIimbt0q09z+QqDA/G3As6H9kTrH?=
 =?us-ascii?q?nUtsj6P7oPXOC00qbI1jXDYO1L2Tfj9ofIdg0qrPaQXbJxacre0k4vFx/eg1SR?=
 =?us-ascii?q?qY3lIzSV1v4Xv2eH6OpgUPuihmg6oA9/pTivw90jiojPho8NyVDL6z95wIArKt?=
 =?us-ascii?q?28UkJ7ZsSkEJRWuiqHNIV2WtsvT390tCs+0LEKpJC2cDYQxJg6xBPTd+aLfomK?=
 =?us-ascii?q?7x77SeqcJTR1iGh4dL+xhRu+61asxvHiWsWuzVpHoCtIn9/RvX4XzRPT8NKISv?=
 =?us-ascii?q?5l80ehxzmP0wfT5/laIUA7i6XbMYQtwr0umZoJt0TMACv2lF/xjK+MeUUo4umo?=
 =?us-ascii?q?6+L5bbX6vpKQKZN4hwXkPqgzlMGzH/40PhUNUmSH4+ix1b/u8VX8QLpQj/02lq?=
 =?us-ascii?q?fZsIrdJcQevqO5Bw5V0oA+6xewFjum08oXnWMBLF1bfBKLlo/pOl/IIP/mF/ey?=
 =?us-ascii?q?mEqskDh1yPDcJLHhAYvCLmLFkLj/ebZx8UlcyBA8zdxH/ZJbFqkBIO7vWk/2rN?=
 =?us-ascii?q?HYCh45Mw+qzOr9B9R9y5gTWWaOAq+fLaPTvkWE5uMpI+mQeoAVvCzxJOQi5/7r?=
 =?us-ascii?q?lXU5g0MSfbG13ZsLb3C1BvRmLF+YYXrwmNgBFn0GvgojTOPwjl2CXiVeZ3KzX6?=
 =?us-ascii?q?I6+zE6B5iqDYbFRoCxnrOB2D23EYFRZmBDElqMC2vnd52YW/cQbyKfOs1hkjsa?=
 =?us-ascii?q?WrS7SI8h0heutAn9y7d8KurU+ysYtY/s1dRv5u3Tkw0y+iJwD8iHz26NSGR0lH?=
 =?us-ascii?q?sSRzAqxKB/vVB9ylCb3KdimPxYFdtT5/BTXgcgL5Hczfd3C9TzWgLHY9eIR0yq?=
 =?us-ascii?q?QtSgATEtUN0xx8UCbFp6G9WnlhrDxTalA6cJl7yXA5w56qHc0GL3J8pnz3bG1b?=
 =?us-ascii?q?Muj18pQsZUMW2mh6h/9xXcBoLTkkWZkbqqeroY3CLX6GiDym+OtllCUAFsSaXF?=
 =?us-ascii?q?QWwfZkzOoNvk/EzCUaGhBa4nMgRbz86CMbVFatvugVVCR/fjPdDebnm1m2exAx?=
 =?us-ascii?q?aI27yNYJDre2UbwCXSFkwEnxoP8naBMAg0Hj2hrH7GDDxyCVLvZFvh/vRkp3Ol?=
 =?us-ascii?q?UEA41QGKYFdn17qu5BEVg+eRS/cS3rICpScgpC94HFe739LKFdWAoxBtc7lbYd?=
 =?us-ascii?q?M4+F1Hz37WtxRhPpy8KKBvnkIecwVyv0PpyxV3CoVBndI2rH8wywpyM6aY0FJH?=
 =?us-ascii?q?dzOXxp3wPrzXKm/v/BGgcaLW21fe0MqI9acL8vg3t1LjvASxHEo473pny8VV02?=
 =?us-ascii?q?eb5pjSFgUSVYz+U0kp+Bl6vb3VeTQ96J7O2n1qMqm0tSHC1sktBOskzBagYthe?=
 =?us-ascii?q?PLmFFA/0D80VGcyuJPY2lFiuaxIOJPpS+7IsP8O6a/uG37amPeZ9nD68kWtL+o?=
 =?us-ascii?q?F80kKW+Cp6Re7FxJIFw/Ce3guaWDbwllahssbrmY9aYTEeBHawyS/hBIRJfK19?=
 =?us-ascii?q?YZ4LCXuyI82w3th+nZ/tVGJC+165GlwG39WleRyMYFzn3A1czFgYrmajmSSl0T?=
 =?us-ascii?q?N0iTYprqyE0SzKwuTicgcHO2FRSGlji1fsPZa7j9QAUEe0aAgpkQOv5VzmyKhD?=
 =?us-ascii?q?uKR/M27TTF9Ifij3NW1jUrG8tqGfY85J854otSRXUOKhYVGVULL9oh0a0z/9EG?=
 =?us-ascii?q?ta3jw0azaqupDhlRxglG2dNGpzrGbeecxoxxfQ/sbcRf1S3joBXiV4kiPYBlu/?=
 =?us-ascii?q?P9mo+9WbiZHDv/u6V2KgUJ1TbCbqwZmBtCu9+W1lHxm/k+qvld3gFAgwyTX72M?=
 =?us-ascii?q?VyVSXUsBb8ZZHm1qSgPuJgZEVoBl7868xhF4F6k4swgowQ2HcAipWU+3oHjXn8?=
 =?us-ascii?q?MdFB1a3ia3oNQCYBw8TJ7wj9xE1jMnWJypr6VnqHw8ttfdm6Yn4M1SI74MBHE6?=
 =?us-ascii?q?OU7L1CnStorVu0twPRYf5hnjgDzfsi8mIVg+YMuAA11CWSHqgSHVVEPSzrjxmI?=
 =?us-ascii?q?6tG+rKZNa2q1f7m/ylF+ncy/A7GYuQ5TRmz5epg5EC9078V/Nk/M0XLp5oHlft?=
 =?us-ascii?q?nQccwcthmOnxjciOhVLYo7luAWiip/JWL9oXolxvYnjRxp2JG2pomGJH9r/KKk?=
 =?us-ascii?q?GR5YLTz1atgX+jHsi6Zeg8mX05quHpVnBjUEQp/oQei0HzIVsPTtLxyOHyEkqn?=
 =?us-ascii?q?eHBbrfGheS51x8oHLIF5CrKmubJH0Ezdh5QBmdJUpfgB0bXTkgn545EByqy9Ll?=
 =?us-ascii?q?cEtj+j8R4Vv4oANWyu10Lxn/TnvfpACwZzc2UpefKQRZ7hpY60fJK8Ce7f9zHy?=
 =?us-ascii?q?JF/p2ntgONMXeWZwBJDWEPR0yFCErvPrio5dnc7eeYAvCyIOfJYbWLseZeTeuH?=
 =?us-ascii?q?xYqz0ot6+DaBLsWOPn5/D/0ix0pMR3Z5F97CmzUITSwXmDnAb8qapBe65y12od?=
 =?us-ascii?q?qz8PXtWALz+4SPD6FePslo+xCzma2DLfKfhD5lKTZE0ZMB3X/Ix6Ye3F4RiCFu?=
 =?us-ascii?q?diOhEbcatS7KQ6LfhLVXDwMAay5oMMtI7qQ83hRCOMLBi9P10KJ4geAxC1tfSV?=
 =?us-ascii?q?PhncSpb9QQI26hLFPHGFqLNLOeKDLR3sH4erm8RqNQjelOsx2wuC2WE0viPjSF?=
 =?us-ascii?q?ijnoWAqjMeBKjCGHIhNevJuxfQpqCWjmVNjmcAG0MMdrjT0qxr05nm/KNW8ZMT?=
 =?us-ascii?q?Rmb0xBtKGf7SNGjfV5AGFB6ntlLe+ZmyeW9eXYK5AWsed1DSRwje5V/HM6y75N?=
 =?us-ascii?q?5iFeWPN1gDfSrsJpo1y+kuiA0DxnUB9PqjZNnI2KvEViNr/f9plPQnvE+BMN7W?=
 =?us-ascii?q?ONCxUFvddlC9vvu7xOxdjLjq78NDBC89eHtfcbUszVLt+XdWYgKV/iHzvRDRce?=
 =?us-ascii?q?ZSCkOHuZhEFHlvyWsHqPocsAp4DoiaYJH71GUF04ELUGCkVoBsYTCJ5tW3Uvlr?=
 =?us-ascii?q?vfxMcS6Hyy6gfYQt5CpJHKUtqYG/LmJD2eiP9PYB5MibXxMYkYNoT90EFmbl5g?=
 =?us-ascii?q?tIvPEkvUG9tKp2kpZBccqUFM/X4uCGE+nwr5bRmz6XsfDtawnxgrmk5wZvkr+D?=
 =?us-ascii?q?7w4lAxYF3Qq294mkkqmdz/hDm5ajP9LK6sG4pRDm68tU83O4/7SgB1RQusnEBl?=
 =?us-ascii?q?PXHPQLcVx6NtaW1xmifdv5VVEPJRRKECZwUfgbmSbu8jl0ZNrCqmyFVv7PHAT5?=
 =?us-ascii?q?BlkU9ibZGov1pE2gR+cMQyI63AYqZEihBUm76JliylzOY8xEkZPUlJuGabZDIg?=
 =?us-ascii?q?s0sEO7MiOiew5O1q9UqJnH1eeyxEU/ssv+Iv9U4nPemE5zzv3qQFKU2rMeGbaa?=
 =?us-ascii?q?SDtCyIlcKFTVQ92k4gjURJ/bFql8wkdg7cRUAy3bqfGhVQZJuTAQ5QZstWsnPU?=
 =?us-ascii?q?eGLGuP/Bh5h0Mp69G/32QOumsKcSi1ijWgEzEMBE7twINou9zEbCa8zgKfpN0h?=
 =?us-ascii?q?wsohzxLVOIAehJPgqRmTQHssiXzZlr0I0bLTYYRS1mPCm++vDbpwsng9KMWd43?=
 =?us-ascii?q?ZjERWY5Afn8sWcb8gCheoH5NFjaf1fgQwwyPqTT7o2CYADDiYpxjbfGPaBVECd?=
 =?us-ascii?q?eq9DF5+K+zzRbV9Zj2P2zgPtRvoZnE7uZe75OGDfxTZbpwqUHRn89fXXP5fXTI?=
 =?us-ascii?q?FIupJoC1YY4wJdLzED6TSFD3oTM4VMf8IcigKuDcnQDwT4FImJuKwDc5c8S6E2?=
 =?us-ascii?q?dNSF9Lu+gf6fckNkU4aJ0hbEuwug=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A5AAD1CQFch0O0hNFjHgEGBwaBUQkLA?=
 =?us-ascii?q?QGCaIECJ4N5iHeLKQGCIYMDhXqFYIF0hmMggVMSAQEYDQYBh3QiNAkNAQMBAQE?=
 =?us-ascii?q?BAQECARMBAQEIDQkIKSMMQgEQAYFiIoJlAwMBAggYBAQBBgFGBgkBASQCJgICA?=
 =?us-ascii?q?x4OAQ4BGBkFA4MZAYFpAQEBFQUKplZ8Mw0RhA8BAwN9gi4EChkNghwTeIsQF4F?=
 =?us-ascii?q?/g3WDBYUuglcCkCWPRhguCYZ/hwuDRYIoiRoKARE/hQKKa4J0gQuJSQIEAgQFA?=
 =?us-ascii?q?hRabIINcBU7gTQOCwEMBAaBCAkKghQXEohMhWAeATIBAQEHewEBhHCJKwEB?=
X-IPAS-Result: =?us-ascii?q?A0A5AAD1CQFch0O0hNFjHgEGBwaBUQkLAQGCaIECJ4N5iHe?=
 =?us-ascii?q?LKQGCIYMDhXqFYIF0hmMggVMSAQEYDQYBh3QiNAkNAQMBAQEBAQECARMBAQEID?=
 =?us-ascii?q?QkIKSMMQgEQAYFiIoJlAwMBAggYBAQBBgFGBgkBASQCJgICAx4OAQ4BGBkFA4M?=
 =?us-ascii?q?ZAYFpAQEBFQUKplZ8Mw0RhA8BAwN9gi4EChkNghwTeIsQF4F/g3WDBYUuglcCk?=
 =?us-ascii?q?CWPRhguCYZ/hwuDRYIoiRoKARE/hQKKa4J0gQuJSQIEAgQFAhRabIINcBU7gTQ?=
 =?us-ascii?q?OCwEMBAaBCAkKghQXEohMhWAeATIBAQEHewEBhHCJKwEB?=
X-IronPort-AV: E=Sophos;i="5.56,298,1539673200"; 
   d="scan'208";a="53995360"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 30 Nov 2018 02:01:59 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726663AbeK3VKk (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 30 Nov 2018 16:10:40 -0500
Received: from terminus.zytor.com ([198.137.202.136]:44131 "EHLO
        terminus.zytor.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726512AbeK3VKk (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 30 Nov 2018 16:10:40 -0500
Received: from terminus.zytor.com (localhost [127.0.0.1])
        by terminus.zytor.com (8.15.2/8.15.2) with ESMTPS id wAUA0voR3262457
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NO);
        Fri, 30 Nov 2018 02:00:57 -0800
Received: (from tipbot@localhost)
        by terminus.zytor.com (8.15.2/8.15.2/Submit) id wAUA0vtj3262454;
        Fri, 30 Nov 2018 02:00:57 -0800
Date: Fri, 30 Nov 2018 02:00:57 -0800
X-Authentication-Warning: terminus.zytor.com: tipbot set sender to tipbot@zytor.com using -f
From: tip-bot for Ard Biesheuvel <tipbot@zytor.com>
Message-ID: <tip-80424b02d42bb22f8ff8839cb93a84ade53b39c0@git.kernel.org>
Cc: marc.zyngier@arm.com, peterz@infradead.org, bhsharma@redhat.com,
        jonathanh@nvidia.com, arend.vanspriel@broadcom.com,
        julien.thierry@arm.com, natechancellor@gmail.com, bp@alien8.de,
        torvalds@linux-foundation.org, joe@perches.com, mingo@kernel.org,
        ard.biesheuvel@linaro.org, hpa@zytor.com,
        sai.praneeth.prakhya@intel.com, sedat.dilek@gmail.com,
        eric.snowberg@oracle.com, dave.hansen@intel.com,
        hdegoede@redhat.com, linux-kernel@vger.kernel.org,
        matt@codeblueprint.co.uk, luto@kernel.org, zhuyifei1999@gmail.com,
        tglx@linutronix.de
Reply-To: julien.thierry@arm.com, arend.vanspriel@broadcom.com,
          natechancellor@gmail.com, bp@alien8.de,
          torvalds@linux-foundation.org, bhsharma@redhat.com,
          jonathanh@nvidia.com, peterz@infradead.org, marc.zyngier@arm.com,
          tglx@linutronix.de, luto@kernel.org, matt@codeblueprint.co.uk,
          linux-kernel@vger.kernel.org, hdegoede@redhat.com,
          zhuyifei1999@gmail.com, ard.biesheuvel@linaro.org, hpa@zytor.com,
          sai.praneeth.prakhya@intel.com, sedat.dilek@gmail.com,
          eric.snowberg@oracle.com, dave.hansen@intel.com, joe@perches.com,
          mingo@kernel.org
In-Reply-To: <20181129171230.18699-11-ard.biesheuvel@linaro.org>
References: <20181129171230.18699-11-ard.biesheuvel@linaro.org>
To: linux-tip-commits@vger.kernel.org
Subject: [tip:efi/core] efi: Reduce the amount of memblock reservations for
 persistent allocations
Git-Commit-ID: 80424b02d42bb22f8ff8839cb93a84ade53b39c0
X-Mailer: tip-git-log-daemon
Robot-ID: <tip-bot.git.kernel.org>
Robot-Unsubscribe: Contact <mailto:hpa@kernel.org> to get blacklisted from
 these emails
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline
X-Spam-Status: No, score=1.6 required=5.0 tests=ALL_TRUSTED,BAYES_00,
        DATE_IN_FUTURE_48_96,FREEMAIL_FORGED_REPLYTO,
        FREEMAIL_REPLYTO_END_DIGIT autolearn=no autolearn_force=no
        version=3.4.2
X-Spam-Level: *
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on terminus.zytor.com
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Commit-ID:  80424b02d42bb22f8ff8839cb93a84ade53b39c0
Gitweb:     https://git.kernel.org/tip/80424b02d42bb22f8ff8839cb93a84ade53b39c0
Author:     Ard Biesheuvel <ard.biesheuvel@linaro.org>
AuthorDate: Thu, 29 Nov 2018 18:12:29 +0100
Committer:  Ingo Molnar <mingo@kernel.org>
CommitDate: Fri, 30 Nov 2018 09:37:57 +0100

efi: Reduce the amount of memblock reservations for persistent allocations

The current implementation of efi_mem_reserve_persistent() is rather
naive, in the sense that for each invocation, it creates a separate
linked list entry to describe the reservation. Since the linked list
entries themselves need to persist across subsequent kexec reboots,
every reservation created this way results in two memblock_reserve()
calls at the next boot.

On arm64 systems with 100s of CPUs, this may result in a excessive
number of memblock reservations, and needless fragmentation.

So instead, make use of the newly updated struct linux_efi_memreserve
layout to put multiple reservations into a single linked list entry.
This should get rid of the numerous tiny memblock reservations, and
effectively cut the total number of reservations in half on arm64
systems with many CPUs.

 [ mingo: build warning fix. ]

Tested-by: Marc Zyngier <marc.zyngier@arm.com>
Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
Cc: Andy Lutomirski <luto@kernel.org>
Cc: Arend van Spriel <arend.vanspriel@broadcom.com>
Cc: Bhupesh Sharma <bhsharma@redhat.com>
Cc: Borislav Petkov <bp@alien8.de>
Cc: Dave Hansen <dave.hansen@intel.com>
Cc: Eric Snowberg <eric.snowberg@oracle.com>
Cc: Hans de Goede <hdegoede@redhat.com>
Cc: Joe Perches <joe@perches.com>
Cc: Jon Hunter <jonathanh@nvidia.com>
Cc: Julien Thierry <julien.thierry@arm.com>
Cc: Linus Torvalds <torvalds@linux-foundation.org>
Cc: Matt Fleming <matt@codeblueprint.co.uk>
Cc: Nathan Chancellor <natechancellor@gmail.com>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: Sai Praneeth Prakhya <sai.praneeth.prakhya@intel.com>
Cc: Sedat Dilek <sedat.dilek@gmail.com>
Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: YiFei Zhu <zhuyifei1999@gmail.com>
Cc: linux-efi@vger.kernel.org
Link: http://lkml.kernel.org/r/20181129171230.18699-11-ard.biesheuvel@linaro.org
Signed-off-by: Ingo Molnar <mingo@kernel.org>
---
 drivers/firmware/efi/efi.c | 21 +++++++++++++++++----
 include/linux/efi.h        |  3 +++
 2 files changed, 20 insertions(+), 4 deletions(-)

diff --git a/drivers/firmware/efi/efi.c b/drivers/firmware/efi/efi.c
index 80b11521627a..4c46ff6f2242 100644
--- a/drivers/firmware/efi/efi.c
+++ b/drivers/firmware/efi/efi.c
@@ -997,8 +997,8 @@ static int __init efi_memreserve_map_root(void)
 int __ref efi_mem_reserve_persistent(phys_addr_t addr, u64 size)
 {
 	struct linux_efi_memreserve *rsv;
-	int rsvsize = EFI_MEMRESERVE_SIZE(1);
-	int rc;
+	unsigned long prsv;
+	int rc, index;
 
 	if (efi_memreserve_root == (void *)ULONG_MAX)
 		return -ENODEV;
@@ -1009,11 +1009,24 @@ int __ref efi_mem_reserve_persistent(phys_addr_t addr, u64 size)
 			return rc;
 	}
 
-	rsv = kmalloc(rsvsize, GFP_ATOMIC);
+	/* first try to find a slot in an existing linked list entry */
+	for (prsv = efi_memreserve_root->next; prsv; prsv = rsv->next) {
+		rsv = __va(prsv);
+		index = atomic_fetch_add_unless(&rsv->count, 1, rsv->size);
+		if (index < rsv->size) {
+			rsv->entry[index].base = addr;
+			rsv->entry[index].size = size;
+
+			return 0;
+		}
+	}
+
+	/* no slot found - allocate a new linked list entry */
+	rsv = (struct linux_efi_memreserve *)__get_free_page(GFP_ATOMIC);
 	if (!rsv)
 		return -ENOMEM;
 
-	rsv->size = 1;
+	rsv->size = EFI_MEMRESERVE_COUNT(PAGE_SIZE);
 	atomic_set(&rsv->count, 1);
 	rsv->entry[0].base = addr;
 	rsv->entry[0].size = size;
diff --git a/include/linux/efi.h b/include/linux/efi.h
index 4f27640fdcdc..becd5d76a207 100644
--- a/include/linux/efi.h
+++ b/include/linux/efi.h
@@ -1724,4 +1724,7 @@ struct linux_efi_memreserve {
 #define EFI_MEMRESERVE_SIZE(count) (sizeof(struct linux_efi_memreserve) + \
 	(count) * sizeof(((struct linux_efi_memreserve *)0)->entry[0]))
 
+#define EFI_MEMRESERVE_COUNT(size) (((size) - sizeof(struct linux_efi_memreserve)) \
+	/ sizeof(((struct linux_efi_memreserve *)0)->entry[0]))
+
 #endif /* _LINUX_EFI_H */
