Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 29 Nov 2018 08:36:55 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id CCF3F5802E4;
	Wed, 28 Nov 2018 06:23:23 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 28 Nov 2018 06:23:23 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AwG4lABcNFF1JTBKw1IKyOkMRlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc6yZBKN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4qF2QxHqlS?=
 =?us-ascii?q?gHLSY0/m/XhMJzlqJUohyhqQJizYDTb46bO+Zxcb7GfdMCR2dMRdpRWi9bD4+g?=
 =?us-ascii?q?dYYDE+gMMOBFpIf9vVsOqh6+CBGwBOPu0j9En2T53aom0+88HwHG2xYgFM8Nv3?=
 =?us-ascii?q?TUstr1MqYTUeCyzKnOwjXIcv1Y2Srn54jObxsspu2MXbNoccXKzkkvCxjIj1SQ?=
 =?us-ascii?q?qIz5ODOVzP4BvHSc7+plTO+ijXMspQ92ojiq3Mgsi4/Ji5oWyl/a7yV5xpg6Jd?=
 =?us-ascii?q?miRE58e96kH51dvDyZOYtuWs4uXX1ktSIgxrEbt5O3YjIGxIkkyhLDcfCKcoqF?=
 =?us-ascii?q?7gr+WOuVIjp0nm9pdby9ihqo70Ss1vPwWtOp3FtErydIlMTHuGoX2BzJ8MeHT+?=
 =?us-ascii?q?Nw/ke/1jaL0ADe8v9EIU8qmqrBMZIhwaA/loAVsUvdGi/6gkL2jLWZdkk8++io?=
 =?us-ascii?q?7froYqn+q5OCK4N5jhvyPrkgl8ChG+g0LwsDU3SB9em91rDv5Uj5T69Ljv0ynK?=
 =?us-ascii?q?nZqpfaJcEDq669Ag9V1Jsj6hmmAzelztsYh38HI0xBeB6eiIjoNVfOL+7iDfqk?=
 =?us-ascii?q?nVSsnylkx+rcMr3iHJrNNH7Dn6nlfbpn7E5c0gUzwchF551IErEBPO7zWkjpud?=
 =?us-ascii?q?zcDx85MBK7z/zoCdVgzY4eXWOPAqmEMKLdq1OI5+QvI/WSa48RojryN/8l5/v2?=
 =?us-ascii?q?h38jhVAdZbWp3YcQaH2gHvRpOUSZYWb2jdcGC2sKvhc+Q/bsiF2NSjNTY3eyX6?=
 =?us-ascii?q?Qh5jA0Eo6mDIHDRpyzj7yFxiu0AppWZmVeAFCWDXjob5mEW+sLaC+KIM9hlSIL?=
 =?us-ascii?q?WaKiS48m0xGusgj6xqFjLurV/C0YqJ3i2MJ05+3ViRE96zh0A96B3GGKSmF+hn?=
 =?us-ascii?q?kISCMu3KBjvUx9zU+O3rJjg/xYEtxT5OlFUh0gOp7e1OF6D9HyWgTcftaGUlqm?=
 =?us-ascii?q?Q9OmAS0vQdI12dMBf0F9G9C6hBDZwyWqG6MVl6CMBJEs8aLTxX7xK9x5y3bHzq?=
 =?us-ascii?q?YhiVYmT9BLNW2ngK5/6gfSC5TIk0Wfi6ala6Ac0DTR+2eEyGqEpFtYXxJoUaXZ?=
 =?us-ascii?q?QXAfYVPbosnj6UPcUbCiE7QnPRFHyc6ZNKRKbNrljVFFRPfmPNTTeGaxm2a2BR?=
 =?us-ascii?q?aVybKAdovqe2MB3CrDDEgIiRwc/XGDNQImHCeuv3reDCByFVLoe07j7PNxqG2l?=
 =?us-ascii?q?QUMuzwGFdUth16Gr9R4TnvGcT/IT3rQZuCYusTl0HVC9387IBNqEvQZuYKJcYd?=
 =?us-ascii?q?Yl6lddyW3ZrxB9PoCnL616ml4ecgF3v0Ty1xV3CoRMi9QqoGktzApoLaKY0VVB?=
 =?us-ascii?q?dzyD0JD0O73XLHTy/R+1Z67X3FHezMiZ+qMV5PskrFXjuRmjFlA+/HV/z9lVz3?=
 =?us-ascii?q?yc643QAwoWT53wXVg49hhgq77Bfyky+pnb1XtvMamzrD/PwNYpBOojyha9cNZT?=
 =?us-ascii?q?KqKEFAnuE8IEA8iiMvAlm1+sbhgcJuBd6LY0P9+6d/uBwKOqPPtgkCi6gmhd4Y?=
 =?us-ascii?q?F90liD9yxzSuPT25YFwveY3haIVjvmjVehtNz3lp5AZT0IAmW/zi3kDpZLZqJu?=
 =?us-ascii?q?ZYYLFXuuI8qvy9Vkhp7iR2RX9ES+CFMBwsOpfwSdb0b83QFJyUsYu3inljamwD?=
 =?us-ascii?q?xulDEpqLGS3CjPw+TkaRoGNXRHRGhkjVfwP4e0i8oWU1SvbwgsjBGl/1r1x7BH?=
 =?us-ascii?q?pKRjKGneWUdJfynsI2BiSKewraeCY8hU5ZMssCVXVvm8YF+ARr78pRsazz3sH2?=
 =?us-ascii?q?9EyD8ncDGqv43znwZmh2KFMHZzsH3ZdNlyxRjF/tzcRv1R3j0cSCljkzbXBVu8?=
 =?us-ascii?q?P9iv/dqKkZfOqeS+V2OnVp1Ofijn14KAtC2n5WJ0BR2zhey8mtriEQIiyy/0y8?=
 =?us-ascii?q?FqVTnUrBb7eoTq1761MeV9cklqBV/87dF3GoV/kos2mZER1mIWhpST/Xobj2jz?=
 =?us-ascii?q?Nc9X1r75bHoIXTQL2cLa4BD52E1/KXKE34H5WW+cwsd7Z9m6f3kZ2iQy781RDK?=
 =?us-ascii?q?eU7bpEnTZ6o1airALRZ+R9kSkZyfc09HEahOQJshI3ziqBGrASAVVYPSv0mhSN?=
 =?us-ascii?q?7tC+r79YaHyhcLeuz0p+gc6uDKuZrQ5CQnb5dYwvHStx7sV5LVLN32f/6oDieN?=
 =?us-ascii?q?nMc90TsgeYnAvHj+hQMJgxjOYFhTJ7OWLhun0o0/I7jRtr3Z2gvYmIMWNt/L+i?=
 =?us-ascii?q?Ah5DNz34fMcT+jDrjaZDkceaxYGvHpN9GjoVWJvkV+6nEDUXtf7/LQaBDCU8qm?=
 =?us-ascii?q?uHGbrYBQKQ811pr3XLE5C2LX2XIGQZwM5mRBmcIkxfnQ8VUC87np4/CgCl2sjh?=
 =?us-ascii?q?fF1l6TAW417ysgFMxf5wNxnjTmffox+lajUuR5iaMhVW9RtO51vPPcyd8+JzHD?=
 =?us-ascii?q?xY/pu7owyWMWGbYwVIDWcUWk2LHVzjP7+u5cXe/OicHOaxM/zOYbCWo+xES/iI?=
 =?us-ascii?q?3Y6v0pdh/zuUNsSPOWRiD+Qm2kVZW3B1Ad/ZmzIJSywYjC/Na8+bpBGh+ix4tM?=
 =?us-ascii?q?y/8fLrWB7x6ouLEbddLdJv+xWui6eZK+GQnDp5KSpf1p4UxX/H1rkf3F0RiyFv?=
 =?us-ascii?q?bTWtEq4AtSnCTK3OgK9XEgUbZjh3NMtJ6aI8wwZMNdTaitPzyr53kPo1B01ZWl?=
 =?us-ascii?q?zmn8GjfdYKLH2lNFPbGEaLM6yLKifWw87se6OzV71RgP9Qtx2xojubF07jPjKe?=
 =?us-ascii?q?lzjmTRyvMOdMjD2FMxxaoo2ybhFtCW37RtL8dhK7KMN3jSExwbAsmnPKNGscPS?=
 =?us-ascii?q?JgfE9XsrKQ7T1XgvNkFmxF73plK/SEmimD4+nZLJYWreVkAiBum+1G53Q6zqNf?=
 =?us-ascii?q?7DtYS/xthCvSstlurkmmk+aVzDpnVRtOqjBTi4OKvUVtI6PZ9pZbVHbA/RIN63?=
 =?us-ascii?q?iQChsQq9tkDN3vp75fytzVmK3vLzdC9oGcwcxJA8nSNdLCLHs5dBHuHTvVEBAt?=
 =?us-ascii?q?UzGmLyfcilZbnfXU8Wea/aI3spz9pJ1bUaVaUl0rH+hcB0lpFfQFOp58Wj5imr?=
 =?us-ascii?q?meyIYM5HyjvFzSSd9cs5TvSP2fG7PsJSyfgL0CYAEHhfv0MoEMHoT+0l5lbB9x?=
 =?us-ascii?q?m8LXGA6YWc1RpQViYxUyrUEL92JxCiUv1Eb1Qges5mIPD/mynw5whgY6Kfwg6D?=
 =?us-ascii?q?r28X82IFTQrSc9mUV3ns/qxXiUcTj+K4+zUJtQBi6ysFI+dtv3SgB0YAmanEtr?=
 =?us-ascii?q?OT7eTbVByb1taSQjghf0ooZUFLhQQOkMch8dw+OXYPMnl1hBoyOPwlVO7u/IT5?=
 =?us-ascii?q?BlkU9iYJeppn5JnQdqd9c1JLbXDLFOxVlXgK+eommj0eV1iAofLEYE9CWWeysM?=
 =?us-ascii?q?kEkBLLohOSvu+OFwrUSCgzJrankQUOBsqfVvsgs+POKaxi6mzL9HKWi2LeWUK6?=
 =?us-ascii?q?7fsG/FxuCSRVZlykIQ0kNC4fB41t1rQUqZUVIvy72eXzgUPMyKfR1Ud8BV6FDB?=
 =?us-ascii?q?bDqJq6PGxpcjbNb1LfzhUeLb7PVcuUmjBgt8R4k=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A7AADko/5bh0O0hNFkHQEBBQEHBQGBU?=
 =?us-ascii?q?gcBCwEBgmiBAieDeYh3iykBgiGSN4R3IIFTEgEBGAsIAYduIjUIDQEDAQEBAQE?=
 =?us-ascii?q?BAgETAQEBCA0JCCkjDEIBEAGBYiKCZQMDAQIgCQYBRgYJAQEkAiYCAgNUGQUDg?=
 =?us-ascii?q?xkBggEFCqYvgS8ehA8BgQOFDhN4iwsXgX+MKIJXAokFhxaQAAmGfYpMgVpNhEO?=
 =?us-ascii?q?KKyyJTYNbik0CBAIEBQIUgUgBggpNIxWBbwwCCwEKAgQGgQgJgh4XgmyFcoVgH?=
 =?us-ascii?q?gEyCnsBAYRUiF8BAQ?=
X-IPAS-Result: =?us-ascii?q?A0A7AADko/5bh0O0hNFkHQEBBQEHBQGBUgcBCwEBgmiBAie?=
 =?us-ascii?q?DeYh3iykBgiGSN4R3IIFTEgEBGAsIAYduIjUIDQEDAQEBAQEBAgETAQEBCA0JC?=
 =?us-ascii?q?CkjDEIBEAGBYiKCZQMDAQIgCQYBRgYJAQEkAiYCAgNUGQUDgxkBggEFCqYvgS8?=
 =?us-ascii?q?ehA8BgQOFDhN4iwsXgX+MKIJXAokFhxaQAAmGfYpMgVpNhEOKKyyJTYNbik0CB?=
 =?us-ascii?q?AIEBQIUgUgBggpNIxWBbwwCCwEKAgQGgQgJgh4XgmyFcoVgHgEyCnsBAYRUiF8?=
 =?us-ascii?q?BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,290,1539673200"; 
   d="scan'208";a="42632968"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 28 Nov 2018 06:23:22 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728508AbeK2BWH (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 28 Nov 2018 20:22:07 -0500
Received: from terminus.zytor.com ([198.137.202.136]:59095 "EHLO
        terminus.zytor.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728031AbeK2BWG (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 28 Nov 2018 20:22:06 -0500
Received: from terminus.zytor.com (localhost [127.0.0.1])
        by terminus.zytor.com (8.15.2/8.15.2) with ESMTPS id wASEItTI2320436
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NO);
        Wed, 28 Nov 2018 06:18:55 -0800
Received: (from tipbot@localhost)
        by terminus.zytor.com (8.15.2/8.15.2/Submit) id wASEItrQ2320433;
        Wed, 28 Nov 2018 06:18:55 -0800
Date: Wed, 28 Nov 2018 06:18:55 -0800
X-Authentication-Warning: terminus.zytor.com: tipbot set sender to tipbot@zytor.com using -f
From: tip-bot for Zhenzhong Duan <tipbot@zytor.com>
Message-ID: <tip-4cd24de3a0980bf3100c9dcb08ef65ca7c31af48@git.kernel.org>
Cc: dwmw@amazon.co.uk, luto@kernel.org, srinivas.eeda@oracle.com,
        linux-kernel@vger.kernel.org, zhenzhong.duan@oracle.com,
        yamada.masahiro@socionext.com, hpa@zytor.com,
        michal.lkml@markovi.net, konrad.wilk@oracle.com,
        peterz@infradead.org, tglx@linutronix.de, mingo@kernel.org,
        daniel@iogearbox.net, bp@suse.de
Reply-To: srinivas.eeda@oracle.com, linux-kernel@vger.kernel.org,
          dwmw@amazon.co.uk, luto@kernel.org, tglx@linutronix.de,
          peterz@infradead.org, mingo@kernel.org, daniel@iogearbox.net,
          bp@suse.de, zhenzhong.duan@oracle.com,
          yamada.masahiro@socionext.com, michal.lkml@markovi.net,
          hpa@zytor.com, konrad.wilk@oracle.com
In-Reply-To: <cca0cb20-f9e2-4094-840b-fb0f8810cd34@default>
References: <cca0cb20-f9e2-4094-840b-fb0f8810cd34@default>
To: linux-tip-commits@vger.kernel.org
Subject: [tip:x86/pti] x86/retpoline: Make CONFIG_RETPOLINE depend on
 compiler support
Git-Commit-ID: 4cd24de3a0980bf3100c9dcb08ef65ca7c31af48
X-Mailer: tip-git-log-daemon
Robot-ID: <tip-bot.git.kernel.org>
Robot-Unsubscribe: Contact <mailto:hpa@kernel.org> to get blacklisted from
 these emails
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline
X-Spam-Status: No, score=-0.9 required=5.0 tests=ALL_TRUSTED,BAYES_00,
        DATE_IN_FUTURE_24_48 autolearn=no autolearn_force=no version=3.4.2
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on terminus.zytor.com
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Commit-ID:  4cd24de3a0980bf3100c9dcb08ef65ca7c31af48
Gitweb:     https://git.kernel.org/tip/4cd24de3a0980bf3100c9dcb08ef65ca7c31af48
Author:     Zhenzhong Duan <zhenzhong.duan@oracle.com>
AuthorDate: Fri, 2 Nov 2018 01:45:41 -0700
Committer:  Thomas Gleixner <tglx@linutronix.de>
CommitDate: Wed, 28 Nov 2018 11:57:03 +0100

x86/retpoline: Make CONFIG_RETPOLINE depend on compiler support

Since retpoline capable compilers are widely available, make
CONFIG_RETPOLINE hard depend on the compiler capability.

Break the build when CONFIG_RETPOLINE is enabled and the compiler does not
support it. Emit an error message in that case:

 "arch/x86/Makefile:226: *** You are building kernel with non-retpoline
  compiler, please update your compiler..  Stop."

[dwmw: Fail the build with non-retpoline compiler]

Suggested-by: Peter Zijlstra <peterz@infradead.org>
Signed-off-by: Zhenzhong Duan <zhenzhong.duan@oracle.com>
Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
Cc: David Woodhouse <dwmw@amazon.co.uk>
Cc: Borislav Petkov <bp@suse.de>
Cc: Daniel Borkmann <daniel@iogearbox.net>
Cc: H. Peter Anvin <hpa@zytor.com>
Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
Cc: Andy Lutomirski <luto@kernel.org>
Cc: Masahiro Yamada <yamada.masahiro@socionext.com>
Cc: Michal Marek <michal.lkml@markovi.net>
Cc: <srinivas.eeda@oracle.com>
Cc: stable@vger.kernel.org
Link: https://lkml.kernel.org/r/cca0cb20-f9e2-4094-840b-fb0f8810cd34@default


---
 arch/x86/Kconfig                     |  4 ----
 arch/x86/Makefile                    |  5 +++--
 arch/x86/include/asm/nospec-branch.h | 10 ++++++----
 arch/x86/kernel/cpu/bugs.c           |  2 +-
 scripts/Makefile.build               |  2 --
 5 files changed, 10 insertions(+), 13 deletions(-)

diff --git a/arch/x86/Kconfig b/arch/x86/Kconfig
index 9d734f3c8234..b5286ad2a982 100644
--- a/arch/x86/Kconfig
+++ b/arch/x86/Kconfig
@@ -444,10 +444,6 @@ config RETPOLINE
 	  branches. Requires a compiler with -mindirect-branch=thunk-extern
 	  support for full protection. The kernel may run slower.
 
-	  Without compiler support, at least indirect branches in assembler
-	  code are eliminated. Since this includes the syscall entry path,
-	  it is not entirely pointless.
-
 config INTEL_RDT
 	bool "Intel Resource Director Technology support"
 	depends on X86 && CPU_SUP_INTEL
diff --git a/arch/x86/Makefile b/arch/x86/Makefile
index 88398fdf8129..f5d7f4134524 100644
--- a/arch/x86/Makefile
+++ b/arch/x86/Makefile
@@ -220,9 +220,10 @@ KBUILD_CFLAGS += -fno-asynchronous-unwind-tables
 
 # Avoid indirect branches in kernel to deal with Spectre
 ifdef CONFIG_RETPOLINE
-ifneq ($(RETPOLINE_CFLAGS),)
-  KBUILD_CFLAGS += $(RETPOLINE_CFLAGS) -DRETPOLINE
+ifeq ($(RETPOLINE_CFLAGS),)
+  $(error You are building kernel with non-retpoline compiler, please update your compiler.)
 endif
+  KBUILD_CFLAGS += $(RETPOLINE_CFLAGS)
 endif
 
 archscripts: scripts_basic
diff --git a/arch/x86/include/asm/nospec-branch.h b/arch/x86/include/asm/nospec-branch.h
index 80dc14422495..8b09cbb2d52c 100644
--- a/arch/x86/include/asm/nospec-branch.h
+++ b/arch/x86/include/asm/nospec-branch.h
@@ -162,11 +162,12 @@
 	_ASM_PTR " 999b\n\t"					\
 	".popsection\n\t"
 
-#if defined(CONFIG_X86_64) && defined(RETPOLINE)
+#ifdef CONFIG_RETPOLINE
+#ifdef CONFIG_X86_64
 
 /*
- * Since the inline asm uses the %V modifier which is only in newer GCC,
- * the 64-bit one is dependent on RETPOLINE not CONFIG_RETPOLINE.
+ * Inline asm uses the %V modifier which is only in newer GCC
+ * which is ensured when CONFIG_RETPOLINE is defined.
  */
 # define CALL_NOSPEC						\
 	ANNOTATE_NOSPEC_ALTERNATIVE				\
@@ -181,7 +182,7 @@
 	X86_FEATURE_RETPOLINE_AMD)
 # define THUNK_TARGET(addr) [thunk_target] "r" (addr)
 
-#elif defined(CONFIG_X86_32) && defined(CONFIG_RETPOLINE)
+#else /* CONFIG_X86_32 */
 /*
  * For i386 we use the original ret-equivalent retpoline, because
  * otherwise we'll run out of registers. We don't care about CET
@@ -211,6 +212,7 @@
 	X86_FEATURE_RETPOLINE_AMD)
 
 # define THUNK_TARGET(addr) [thunk_target] "rm" (addr)
+#endif
 #else /* No retpoline for C / inline asm */
 # define CALL_NOSPEC "call *%[thunk_target]\n"
 # define THUNK_TARGET(addr) [thunk_target] "rm" (addr)
diff --git a/arch/x86/kernel/cpu/bugs.c b/arch/x86/kernel/cpu/bugs.c
index c37e66e493bf..d0108fb6e4dd 100644
--- a/arch/x86/kernel/cpu/bugs.c
+++ b/arch/x86/kernel/cpu/bugs.c
@@ -252,7 +252,7 @@ static void __init spec2_print_if_secure(const char *reason)
 
 static inline bool retp_compiler(void)
 {
-	return __is_defined(RETPOLINE);
+	return __is_defined(CONFIG_RETPOLINE);
 }
 
 static inline bool match_option(const char *arg, int arglen, const char *opt)
diff --git a/scripts/Makefile.build b/scripts/Makefile.build
index a8e7ba9f73e8..6a6be9f440cf 100644
--- a/scripts/Makefile.build
+++ b/scripts/Makefile.build
@@ -236,10 +236,8 @@ ifdef CONFIG_GCOV_KERNEL
 objtool_args += --no-unreachable
 endif
 ifdef CONFIG_RETPOLINE
-ifneq ($(RETPOLINE_CFLAGS),)
   objtool_args += --retpoline
 endif
-endif
 
 
 ifdef CONFIG_MODVERSIONS
