Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 28 Nov 2018 08:50:06 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga007.fm.intel.com (fmsmga007.fm.intel.com [10.253.24.52])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 0A3D9580460;
	Tue, 27 Nov 2018 13:36:19 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga007-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 27 Nov 2018 13:36:18 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AFn4nwRbjyc2Dy3wVGFPtBMH/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpcm/Zh7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTy9PDJ68?=
 =?us-ascii?q?YYURAeQOP+hYoJX6qVQBohW+HhGsCeH0xz9UhHL7x7E23v49HQzE2gErAtIAsG?=
 =?us-ascii?q?7TrNXwLKofTeS1w7fHzDrZafNZxCny6JLVeR4vvPGNXa5/ccnMwkQoDQzFikuf?=
 =?us-ascii?q?qIP/MDOTy+sCrXKb4/BgVe61lmEntgFwrSSsxso3jonJh4QVyk3L9CljwYY1I8?=
 =?us-ascii?q?G4R1B/YdK+DJRQsCSaOpJwT8g/TW9ovyM6xacHuZ69ZCUKy4ooxwTZa/OZd4iE?=
 =?us-ascii?q?+BXjVPyeITp+mXlre6q/ig6s/US8zuDwTNS43VhUoiZfj9XBtWwB2wbS58WFUv?=
 =?us-ascii?q?dx40ms1DmV2wzO5OxJLlo4mbfVJpMg2LI8i4QfvEXFEyTrgkv5lrWWeV8h+uWw?=
 =?us-ascii?q?6+TofLHmppiEOo9qhQHxLL4ulta8AesmKAgOWXaU+eCm2L3k5035T61Gjvwwkq?=
 =?us-ascii?q?bHrJDXPdoXqrK9DgNPz4ou5QizAy273NkbgXULNlNIdRCfg4jsIV7OIfT4Dfml?=
 =?us-ascii?q?g1SrlTdm3/TGPrznApXQIXnPibThcqhn605a1gUzyclT55VaC7EHPv3zQFT8tM?=
 =?us-ascii?q?LXDhAnKQy42eXnB8tn1oMYR22PBrWVMKTIsV+H/u4vOfWDZJcJuDbhLPgo//ru?=
 =?us-ascii?q?jX46mVADZ6Wo0oYXZWu8HvRnJUWZfHXtjs0AEWcMogoxUujqhEeeXj5UYna4R7?=
 =?us-ascii?q?g86S0jCIK6EYfDQZiggLyb0ye6Ap1ZfGdGBkqMEXf1bYqEXfgMZTmWIs9glDwE?=
 =?us-ascii?q?SLegR5Ug1RGoqA/11b5nIvDI9S0fsJLpzMJ16PHLlREu6Tx0CNyQ02OKT25qhG?=
 =?us-ascii?q?8IRDg23KZ5oUx60VqD1al4g/pFFd1c/f9JUwE6NYLCwOx+Edz9RgXBftKRQla8?=
 =?us-ascii?q?XtqmGS0xTs42w9IWeUl9ANWijhfA3yawGb8ajb6LCYcw8qLd2XjxOsl8x2zH1K?=
 =?us-ascii?q?knk1kpXM9POXe6ia548gjZH5TJnFmBl6a2aaQc2zbA9GSZwmqIpk1YVA9wXr/D?=
 =?us-ascii?q?XXAQfUbWqdX55kXfT76hE7gnMw1BydKcJatOcNHmkVJGRPL7MtTEf22xg3uwBQ?=
 =?us-ascii?q?qPxr6UcYXlYXsd0zvHBEgEiQ8T+22GOhY4Biump2LeDzluFVb0bkPo8Ol+rm67?=
 =?us-ascii?q?T0AuwwGLaU1hy6S6+hoPifOATPMT26oOuD09pDVsAFa9w9XWBsKdqAV7YqVTf8?=
 =?us-ascii?q?kx4Fdd2mLfrAxyIJqgIrtmhl4fdQR3okzv2w92CoVGjcglsncqwBBuJqKf1VNL?=
 =?us-ascii?q?bymY0ozoOr3LNmny+wiia7LX2lHb19aW5qcP6fQip1X/pg2pEVAi83Fm09lT3H?=
 =?us-ascii?q?uR/ZHKDAsUUZLsXUc77Rl6p7fGYiYj44PYz2FjMa6xsjXawdImGPMlygq8f9dY?=
 =?us-ascii?q?KK6LDgvyHNMVBsewKO0mgUOmbg8ZM+9I8q40PMSmd+Wd1a6vPeZgmi+mjGtd7I?=
 =?us-ascii?q?B81EKM6zRzSurS05kZxPGY2xONVy3gg1e5rsD3hYdEaCkSH2qi0yTrGJRdZ6xy?=
 =?us-ascii?q?fYkRD2euLNa6xtF/h57rRn5Z+0SvB1IA2M+1ZxWSa0bx0hFX1UQSuXangze3zy?=
 =?us-ascii?q?RokzE1qaqSxDbOw+X+exUdIG5EWW5igU3qIYeqldAaXVGkYBQzmxuh+En12bJb?=
 =?us-ascii?q?pKN5L2TIRUdIfi72L3xtU6eqt7qCZdJP540ssSlNTOu8ZlWaQKbnoxQGyyPjA3?=
 =?us-ascii?q?dexDcjejCqu5X1hRx7hHiGLHZuqnrUYsVwxRbZ5NzBSv9dxDsGRC9kiTbJAliw?=
 =?us-ascii?q?JcWm/dKRl53bqOCxS3qhVoFPcSns1Y6AtjG05XdpAR28mPC/gMbnHhI50S/41t?=
 =?us-ascii?q?lqUzvHrBDnb4nv1qS6N/9nf0ZyCF/97cp6Bp9xko8qiJ4M3ngag42f/WAbnmfr?=
 =?us-ascii?q?LdVbxaX+YWINRDERxN7Z+grl2ExlLn+Sw4L5V3OdwtZuZtWgY2MW3D494N5OCK?=
 =?us-ascii?q?uO8LNEmi51qEKirQ3Nefh9gisdyfw25X4Zme4JuRAhziWAAr8IG0lYMjfhlxCJ?=
 =?us-ascii?q?79C4saVWa3yjcbm21Epig9+hCKuOrR1bWHb8Yp0iBzN/7t1jMFLQ133+8oTkeN?=
 =?us-ascii?q?jTbd0JrBGVnQnPj/NJKJ0vjPoFnjRoOXjyvXA+z+47jBpu3Yy1vYSdKmVt+r65?=
 =?us-ascii?q?DQBcNjHve8wT/TTth75EnsmKx4CvAolhGjITUZv0SvKoFSgetPX9OAaIDT08sW?=
 =?us-ascii?q?ybGbvEEA+b6UdmqW/PEp+xO3GWInkZ0cttRB2HKENDhwAUWS0wnoQlGQCy2Mzh?=
 =?us-ascii?q?bEB56ygK6VHirRtMzv9oOwP7UmfCvwqobjY0SJ6CLBtZ9A1C5kHVMdCA4eJ3BS?=
 =?us-ascii?q?1X4pqhrAmVIGyBewtIFX0JWlCDB137PLmh/9zA/PaDBuakM/vCe7aOqfFdV/eV?=
 =?us-ascii?q?w5KgyJBm8i2INsWOOHliEvI61lBCXXB/B8TWhTEPRzYLmCLKas6RvA289TFvrs?=
 =?us-ascii?q?Cj7PTrXxri5IuIC7tPKNVv5gq5gaGZO+6LgyZ5LzlY24gIxX/JzrgfwVEThztv?=
 =?us-ascii?q?dzmrDbQPqyrNQLjMla9QCh4RczlzO9dQ76IgwglNPtbWitPr2b55jf41CFZFWU?=
 =?us-ascii?q?bimsGzYswKLH+yNEnaBEaQL7mGITzLw8fqYaKzU7FQjeNUtwGutjafCUPsIjOD?=
 =?us-ascii?q?lzzxXRC1Le5MlD2bPABZuIylaBltFHPsTMj4ZRy7KtN3iTw2zKYwhnPLM24cLD?=
 =?us-ascii?q?d9f1lMrr2W8SNXnPF/F3Zd4XpiKOmOgzyZ4PXAKpYKrftrBTx5l/5b4HQ/0bda?=
 =?us-ascii?q?8DtIS+B1mCTMqN5juFWmkuiJyjp6XxtCsDdLhISXvUp8PaXV7IVPWXHB/BgV92?=
 =?us-ascii?q?WfFwwKp8d5Ct3oo61RysLAlKT2KDdD9dLb5codB8jOJ8KBP3osKh7pGD/SDAsY?=
 =?us-ascii?q?Qj+nL2Dfh0pBkP6M8n2ZtIQ1qp/pmMlGdrgOeFUzXswbDkBkFdkZaMN7VzVik/?=
 =?us-ascii?q?iEjcoM5HO7tzHQQtlXutbMUffEUtv1LzPMpL1JdxIOzb7iZagOJ4b4kxhrblRq?=
 =?us-ascii?q?lYLGFlCWXZZBvzxqbScwoUNQ4D5/SHE+3wTubQb7syxbLuK9ghNj0lg2Wu8q7j?=
 =?us-ascii?q?q5pg5vflc=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ARAADft/1bh0O0hNFkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBVAIBAQEBCwGBVQWBD4ECJ4N5lCApgWQUkjWGahQYDQYBh1oiNwY?=
 =?us-ascii?q?NAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkAYJhAQEBAQIBAQIgBFIGCQEBChgCA?=
 =?us-ascii?q?iYCAgNUBhMFglFLAYF5CAUKpjB8M4VBhHAFgQuLAnqBHIQjgx4EGIRLglcCiQM?=
 =?us-ascii?q?aB4FxhE40To5SVQcCgiCEXIo0GJELLI0ainGBXIF3MxojUIJsgicXiF6FYB4BA?=
 =?us-ascii?q?TEBAYEDAQGNBgEB?=
X-IPAS-Result: =?us-ascii?q?A0ARAADft/1bh0O0hNFkGgEBAQEBAgEBAQEHAgEBAQGBVAI?=
 =?us-ascii?q?BAQEBCwGBVQWBD4ECJ4N5lCApgWQUkjWGahQYDQYBh1oiNwYNAQMBAQEBAQECA?=
 =?us-ascii?q?RMBAQEIDQkIKSMMgjYkAYJhAQEBAQIBAQIgBFIGCQEBChgCAiYCAgNUBhMFglF?=
 =?us-ascii?q?LAYF5CAUKpjB8M4VBhHAFgQuLAnqBHIQjgx4EGIRLglcCiQMaB4FxhE40To5SV?=
 =?us-ascii?q?QcCgiCEXIo0GJELLI0ainGBXIF3MxojUIJsgicXiF6FYB4BATEBAYEDAQGNBgE?=
 =?us-ascii?q?B?=
X-IronPort-AV: E=Sophos;i="5.56,288,1539673200"; 
   d="scan'208";a="139824568"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 27 Nov 2018 13:36:17 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726713AbeK1Ifa (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 28 Nov 2018 03:35:30 -0500
Received: from mga18.intel.com ([134.134.136.126]:31506 "EHLO mga18.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726512AbeK1If3 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 28 Nov 2018 03:35:29 -0500
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga003.jf.intel.com ([10.7.209.27])
  by orsmga106.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 27 Nov 2018 13:36:14 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,288,1539673200"; 
   d="scan'208";a="104120514"
Received: from ahduyck-desk1.jf.intel.com ([10.7.198.76])
  by orsmga003.jf.intel.com with ESMTP; 27 Nov 2018 13:36:14 -0800
Message-ID: <e700da0293e8637e56682a4c4c4c37a2929b5efe.camel@linux.intel.com>
Subject: Re: [driver-core PATCH v6 4/9] driver core: Move
 async_synchronize_full call
From: Alexander Duyck <alexander.h.duyck@linux.intel.com>
To: Dan Williams <dan.j.williams@intel.com>
Cc: Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        Greg KH <gregkh@linuxfoundation.org>,
        linux-nvdimm <linux-nvdimm@lists.01.org>,
        Tejun Heo <tj@kernel.org>,
        Andrew Morton <akpm@linux-foundation.org>,
        Linux-pm mailing list <linux-pm@vger.kernel.org>,
        jiangshanlai@gmail.com, "Rafael J. Wysocki" <rafael@kernel.org>,
        "Brown, Len" <len.brown@intel.com>, Pavel Machek <pavel@ucw.cz>,
        zwisler@kernel.org, Dave Jiang <dave.jiang@intel.com>,
        bvanassche@acm.org
Date: Tue, 27 Nov 2018 13:36:14 -0800
In-Reply-To: <CAPcyv4gKT1CDA-xVh5LCYEVUeXLB5ktCFqpFhPWzNK7+QbQdvw@mail.gmail.com>
References: <154170028986.12967.2108024712555179678.stgit@ahduyck-desk1.jf.intel.com>
         <154170042103.12967.5841784115552956171.stgit@ahduyck-desk1.jf.intel.com>
         <CAPcyv4ibARHP1Gji2cZQ704BeiKL26Bh13G58eyB+PjQJSD58w@mail.gmail.com>
         <ec672fcf5924ef267f35b11c13ddc50c815b1a9f.camel@linux.intel.com>
         <CAPcyv4gKT1CDA-xVh5LCYEVUeXLB5ktCFqpFhPWzNK7+QbQdvw@mail.gmail.com>
Content-Type: text/plain; charset="UTF-8"
X-Mailer: Evolution 3.28.5 (3.28.5-1.fc28) 
Mime-Version: 1.0
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Tue, 2018-11-27 at 12:35 -0800, Dan Williams wrote:
> On Tue, Nov 27, 2018 at 9:38 AM Alexander Duyck
> <alexander.h.duyck@linux.intel.com> wrote:
> > 
> > On Mon, 2018-11-26 at 18:11 -0800, Dan Williams wrote:
> > > On Thu, Nov 8, 2018 at 10:07 AM Alexander Duyck
> > > <alexander.h.duyck@linux.intel.com> wrote:
> > > > 
> > > > Move the async_synchronize_full call out of __device_release_driver and
> > > > into driver_detach.
> > > > 
> > > > The idea behind this is that the async_synchronize_full call will only
> > > > guarantee that any existing async operations are flushed. This doesn't do
> > > > anything to guarantee that a hotplug event that may occur while we are
> > > > doing the release of the driver will not be asynchronously scheduled.
> > > > 
> > > > By moving this into the driver_detach path we can avoid potential deadlocks
> > > > as we aren't holding the device lock at this point and we should not have
> > > > the driver we want to flush loaded so the flush will take care of any
> > > > asynchronous events the driver we are detaching might have scheduled.
> > > > 
> > > 
> > > What problem is this patch solving in practice, because if there were
> > > drivers issuing async work from probe they would need to be
> > > responsible for flushing it themselves. That said it seems broken that
> > > the async probing infrastructure takes the device_lock inside
> > > async_schedule and then holds the lock when calling
> > > async_syncrhonize_full. Is it just luck that this hasn't caused
> > > deadlocks in practice?
> > 
> > My understanding is that it has caused some deadlocks. There was
> > another patch set that Bart Van Assche had submitted that was
> > addressing this. I just tweaked my patch set to address both the issues
> > he had seen as well as the performance improvements included in my
> > original patch set.
> 
> I tried to go find that discussion, but failed. It would help to
> report an actual failure rather than a theoretical one.

His patch set can be found at:
https://patchwork.kernel.org/project/linux-scsi/list/?series=32209&state=*

Your comments can be found in patch 3 on how his set and mine were
similar, and patch 4 in his set is what I am replacing with patch 4 in
this set.

Actually just looking at it I should probably pull in his "fixes" tag.

> > > Given that the device_lock is hidden from lockdep I think it would be
> > > helpful to have a custom lock_map_acquire() setup, similar to the
> > > workqueue core, to try to keep the locking rules enforced /
> > > documented.
> > > 
> > > The only documentation I can find for async-probe deadlock avoidance
> > > is the comment block in do_init_module() for async_probe_requested.
> > 
> > Would it make sense to just add any lockdep or deadlock documentation
> > as a seperate patch? I can work on it but I am not sure it makes sense
> > to add to this patch since there is a chance this one will need to be
> > backported to stable at some point.
> 
> Yes, separate follow-on sounds ok.
> 
> > > Stepping back a bit, does this patch have anything to do with the
> > > performance improvement, or is it a separate "by the way I also found
> > > this" kind of patch?
> > 
> > This is more of a seperate "by the way" type of patch based on the
> > discussion Bart and I had about how to best address the issue. There
> > may be some improvement since we only call async_synchronize_full once
> > and only when we are removing the driver, but I don't think it would be
> > very noticable.
> 
> Ok, might be worthwhile to submit this at the front of the series as a
> fix that has implications for what comes later. The only concern is
> whether this fix stands alone. It would seem to make the possibility
> of ->remove() racing ->probe() worse, no? Can we make this change
> without the new/proposed ->async_probe tracking infrastructure?

Yeah, I might move this up to patch 1 of the set since this is a fix.

There end up being a ton of bugs in the way this was originally
handled. So for example if I am not mistaken you only hit the flush if 
we find the dev->driver is already set to the driver we are removing.
By moving it to where I did and changing the check so that it is based
on the driver we are removing we can guarantee that we force the flush
at before we start walking the driver->p->klist_devices list which
isn't populated until after a device is probed.

As far as ->remove racing with ->probe I don't see this change making
it any worse than it was. The same race is still there that was there
before. The only difference is that we don't have the false sense of
security from having a flush there that doesn't do anything.

