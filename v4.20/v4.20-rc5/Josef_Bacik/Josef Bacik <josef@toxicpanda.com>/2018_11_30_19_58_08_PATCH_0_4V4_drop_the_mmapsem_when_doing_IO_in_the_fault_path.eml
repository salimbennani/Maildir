Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:22:30 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 0DCF9580224;
	Fri, 30 Nov 2018 11:58:21 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 30 Nov 2018 11:58:20 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AOLVlhRNau6BdegNPufwl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPnzpcbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Xymp4aV2Rx/ykC?=
 =?us-ascii?q?oJNyA3/nzZhMJzi6xbuwqhqh5kzoLIfI2YLuZyc7nBcd8GQ2dKQ8ZfVzZGAoO5?=
 =?us-ascii?q?d4YBC+0BPf1GoInzulADsAGxChWtBOPs1zRFgX323aoh0+s/HwHLxxAgH9UBsX?=
 =?us-ascii?q?TVsNr1LL0dUeaow6bS1znMc/RW2TLk5YXObxsvoumMUKpufcbNzUQjDR7Jg1uO?=
 =?us-ascii?q?pYD/Ij+Y1fgBv3Ka4udiTe6jlnIrpgNrrjSyxsogkIrEip8Pxlza6Sl0w4A4Ls?=
 =?us-ascii?q?CiRkFhe96rCp5QujmaN4RoRsMiRHlluDg1yrIYo563ZisKx4o9xx7ZdfOHd5KE?=
 =?us-ascii?q?4hX5VOaeOTt4hXRld6yjhxuq70Ss1unxWtOp3FtEsCZJiMTAu3MR2xDJ68WKSO?=
 =?us-ascii?q?Nx/kK71jaO0wDT5PtEIUcxlafDL54hw7gwloccsEjaHS/5hl/2jKmIeUUg4+So?=
 =?us-ascii?q?7OrmYrP4qZ+GLIJ0lA7+Pbo0msClAuQ3LBIOX26F9uS4zrHj+lf5QLpSgv0sjq?=
 =?us-ascii?q?bZqIzaJdgcpqOhBw9V04Uj5AilAzapzdQVhn0HLFNDeBKagInlIVDOIPbkDfih?=
 =?us-ascii?q?h1Sgiitkx/fDPrf5GJXCMmDDkKv9fbZ680NcyBA8zdFD551ODbENOvLzWlLru9?=
 =?us-ascii?q?zeAR80KAi0w+fhCNVg2YISQ2OPAqmFMKzMtV+E/P4gI+6JZIUNojbyN+Al5+Ly?=
 =?us-ascii?q?jX8+gVIdf66p0oUNZHC7GfRmJUOZYX33j9cFEGcKuBc+TePwhF2DVz5Te2i9X6?=
 =?us-ascii?q?Ym6j4nD4KmCJ/JRpqxj7yZwCe7AppWa3hcBVCXEXfocIaEV+0WaC2IIM9siTgE?=
 =?us-ascii?q?VbmnS4882hCirg76y7x7LuXK/i0Ur47s1N9w5+fLjxE96SR0D9iB02GKV2x0nX?=
 =?us-ascii?q?kHRzks0KB7oExy0FGD0adjjvxcFNxT4e5JUwggOZ7dyex6F879WgbbctiVT1am?=
 =?us-ascii?q?R82sASstQdIp398Of0F9Fs2/gR/ZwSqlHaUZl7yRC5wy6aLTwX7xK8F5y3bF0a?=
 =?us-ascii?q?khi0IrQs9ONW2gm65++BLfB4/Pk0WFiamqcb4Q0zLK9GeG1WCOpl1XUBZsUaXZ?=
 =?us-ascii?q?WnASflbZos7n5kzcVbOuCa4oMg1aycGcLKtHcdnpjVRARPf+N9XSeWOxm2GsBR?=
 =?us-ascii?q?mWwrOAdpble2IY3C/FEkgLjxgT/WqaNQg5Hiqhv2PeDDlpFVLzY0Pt8fNyqG+h?=
 =?us-ascii?q?Qk8z1QGKa0xh17y6+hMOgfycSvUT3q8LuSs7qjV0Gkq90MzSC9aauwVhe6Bca8?=
 =?us-ascii?q?sn4FhbzWLZqxB9Ppu4Iq94gl4RbQt2sF3u1hltEYpAjNUlo2kszApxLqKYzkhM?=
 =?us-ascii?q?dzeZ3ZD2J73WJXP+/BGpa67KxF7e1Mya9bsI6PQ9s1/jph2mFlI+83V71NlYy3?=
 =?us-ascii?q?ud5ojQAAUOS57wU0Y3+AJ8p7HVeSQ944LU1XtxMai7qDPC2tQpBPc7xRakZdtQ?=
 =?us-ascii?q?LKSEFArqGc0AG8euMPAqm0Subh8cJuBS9bI7MNm8d/Sb366nJuBgkyy8jWRG+Y?=
 =?us-ascii?q?xyzliD9y5hReHWxZYFxPeY0xCDVzf9ilehr8/2lZpFZTEUAmqw1yzkCJRNaa11?=
 =?us-ascii?q?eIYBEX2uLNGvxtVim57tXGZV9V6iB18c2M6lYwGSb0H73QBL0UQXoHqnmTa3zj?=
 =?us-ascii?q?BukjEpqLaf0zLKw+j4aBUHPWtLTnF4jVjwOYi0k8waXE+wYggrjhSl/0X6x6tc?=
 =?us-ascii?q?pKhlNGncW0RIfyv3L2FkTKSwsKGPY8pO6JMurCVWX/6wYVGcSr7hvRQa1znvEH?=
 =?us-ascii?q?dZxDA+bzuqoIn2nwRmiGKBK3Z+tHrYdtt3xRvF5tzcRPhR0yECRCl5jznXG1e9?=
 =?us-ascii?q?M8Oo/dWSi5fMrOS+W3i9WZ1UdCnh1ZmAuzej5W12HR2/mOi+mt79Hgg7yyP718?=
 =?us-ascii?q?RqWj/OrBbzeYTr06W6MeR6fkhnHlP86sx6Gp1gnYs0np0fxX8ahpCN93odjWjz?=
 =?us-ascii?q?Kclb2b75bHcVQD4Lwt3V7xL/1ExtMH2J3J75WWuHwsR6eda6eGwW1zk578BLDq?=
 =?us-ascii?q?eU8bNFkTF0olq+sQLef/x9ki0Bxvsp7X4Qm/sJtxY1ziWBHrASGlFVPTDrlxSN?=
 =?us-ascii?q?9dy/rb9YZGCycbirz0p+nMusDLWDogFaRXb4dY0uHS527sVjLl3M1Gf/5Z3jeN?=
 =?us-ascii?q?nVddgTrAGbkw/cj+hJL5I8juEFijBgOWL5oH0p0eo7jQF10JG+vYiHLXht/a2j?=
 =?us-ascii?q?Dh5ZMD31e90c+jX3galCmcaW2pilHo99FTUTQJvoUfWoHSoQtfv9MgaBDiY8pm?=
 =?us-ascii?q?2HGbbFHg+f9URmr2/JE5+xLHGaP30ZzdRkRBmAK01TmgEUXDMmnpEnEgCm3tDu?=
 =?us-ascii?q?cEB85joJ/F73tgNMyv50Nxn4SmrepACoaiotSJiCNhVW6BtO51zSMcyY4eJ+BC?=
 =?us-ascii?q?VY/pynrAyQJW2XfQVIDWcVWkOaA1DvJKWh5d7F8+KAHOqxM+POYamSqexZT/qI?=
 =?us-ascii?q?xYyg0opl/zaPN8WDJHpiD+c82kpMQ395AdnZmy4URiwTliLNadObpRim9i12qM?=
 =?us-ascii?q?C/7OrkWAb16YSTDLtSNM1l+wqqjqebK+6QmCF5JC5C2ZMR3nDI0qYQ3V4IhyFq?=
 =?us-ascii?q?djmgCrAAtS/LTKLNla5bFR8bayVvNMRW66IwxBVCOcneitntzL53kuY1C0tZVV?=
 =?us-ascii?q?zmgsypec0KI2SnOFzbHkqEKLSGKiPNw8zsZaO8SLtQjPhbthGquDabFVPjMSqH?=
 =?us-ascii?q?lzXzSx+vNuRMhjmBPBNCoIG9bgptCW/7QdPmcBK7Ntp3jTwwwbIsh3LKNXQTMT?=
 =?us-ascii?q?5zc05Wqr2Q7CVYguhwGmBb73plK/WElDid7+XCNpkWtv5rUWxIkLdZ7W48xr8Q?=
 =?us-ascii?q?8CxNQdR7km3Zqdsq61GvlO+C0RJsVQJeoTZEwoWRsgEqPaTf64kFWnve+h8JxX?=
 =?us-ascii?q?ufBg5MpNZ/DNDr/adKxZyHiKDbKzpY9d/Qu8wGCIycJMuZMXYJPwDuHTnOBgoZ?=
 =?us-ascii?q?CzWsMCWXjk9FldmW93uIvt00rYXqlJMSS7hdElsvGbdSDkVjAcxHLox7Uy0plZ?=
 =?us-ascii?q?aFg8MSo3mzth/cQINdpJ+DHvaTB+j/bTOcpbpabhALh7TiIsBbLIz232R4Z1V6?=
 =?us-ascii?q?lZiMEE3VGZhPqyZiRhQpu0gL+2otYHc03hfHbRig7jc5HPW1nVZiiAxlbOoF6D?=
 =?us-ascii?q?D84lwvL1zGrW07l0xnyoatuiyYbDOkdPT4ZopRESeh70U=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AaAABmlQFch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUgYBAQsBgVUFghEnmjyXNIEkA14BASsBh3YiNQgNAQMBAQEBAQECARMBAQE?=
 =?us-ascii?q?IDQkIKSMMgjYigmwCJBkBATgFCQJQAzEBBQEjF4McggIFmz88ih2BbDOCdgEBB?=
 =?us-ascii?q?YEEAYYjCBKHWoQuF4F/jn+JC4cdkA8JgiKIDIZ+I198h342hxAsiE+POwYCCQc?=
 =?us-ascii?q?PIYEnAYIKMxoIGxWDJ4IbDBd/AQeCQ4ocVSIyAYEBAwEBIRONDAEB?=
X-IPAS-Result: =?us-ascii?q?A0AaAABmlQFch0O0hNFjHAEBAQQBAQcEAQGBUgYBAQsBgVU?=
 =?us-ascii?q?FghEnmjyXNIEkA14BASsBh3YiNQgNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYig?=
 =?us-ascii?q?mwCJBkBATgFCQJQAzEBBQEjF4McggIFmz88ih2BbDOCdgEBBYEEAYYjCBKHWoQ?=
 =?us-ascii?q?uF4F/jn+JC4cdkA8JgiKIDIZ+I198h342hxAsiE+POwYCCQcPIYEnAYIKMxoIG?=
 =?us-ascii?q?xWDJ4IbDBd/AQeCQ4ocVSIyAYEBAwEBIRONDAEB?=
X-IronPort-AV: E=Sophos;i="5.56,299,1539673200"; 
   d="scan'208";a="140305967"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 30 Nov 2018 11:58:19 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726980AbeLAHIj (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sat, 1 Dec 2018 02:08:39 -0500
Received: from mail-yb1-f194.google.com ([209.85.219.194]:33337 "EHLO
        mail-yb1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726629AbeLAHIi (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 1 Dec 2018 02:08:38 -0500
Received: by mail-yb1-f194.google.com with SMTP id i78-v6so2717031ybg.0
        for <linux-kernel@vger.kernel.org>; Fri, 30 Nov 2018 11:58:15 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=toxicpanda-com.20150623.gappssmtp.com; s=20150623;
        h=from:to:subject:date:message-id;
        bh=PSn0bxnnPw1G6B2a7cVzIfLJVlFidqA8+Pvk6v+1aiU=;
        b=fEy2NaYeMxMp1Hq2S7PhoxSh/LDDhDKvP8zB3Ay4gdoNmcGr/6dbHB29QyFPZEzimV
         HuOnJ7LskXah/9WQTv8RA7PiIYIizvu90YJvz7X8ixder70S2hh4KUUAraP3ritYHo9s
         aotbttHU4BGLaaGz2Xu/XYjRQrd1keQKVclG4RRB6nScr2o0VO4K1lU7z4RHC5rnNqMk
         15Gm72ymcOvWYyaWBYz9mUB38XCdujjWr5GU/2jYOUekBqpSNJZwqQXMAL00kIcFfH6j
         AYZXxugRkgD+SAgjxr6UEYP9R/HF2iK6/oYXY1TYyE4kj3rdB7iH2mdHHKz4U7gpiuFk
         XcHA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:subject:date:message-id;
        bh=PSn0bxnnPw1G6B2a7cVzIfLJVlFidqA8+Pvk6v+1aiU=;
        b=cLRbMS8Rbw7VpNGWjFc2c1r4RPmpr79yOk0GtEZqj2w//Pw40rp1fKOJYsEpMD8ZlD
         r2mOdgPc6vXdfJKtBPIjX3Od5jybDvUH+wX4vsWgisSdO2/38dY7Vu6/DZW07kM6+qs7
         cQAB2K78ZY3n1ZcriZALn0q2FB9QZ5KICw4tDo224gl1EKlwk4URMvW1rFsjbawQodQs
         WRTEQGnp+CcnrCVwKWs1vEBZQOwt5qBXa9deL3EcReIC8bfnCOTinMDkJA7VRU18E8v5
         0kXjS1qeCt4lmHwb2CNJTdxDjONna3tNrMER7RV6rnMh/hM+F0FJNGtv7Qlr1AMLj4Fr
         bViQ==
X-Gm-Message-State: AA+aEWbKK5sy/OdoqvYs9QxvTp6ybzuYeMP4tNMLTLs66eWmz8+xwHnU
        MvEq2NOuEQ3+fG0gpFxJ/3N3IQ==
X-Google-Smtp-Source: AFSGD/VYUsl2xVUvkGxx4jdNiTF2u/FWco0LPBBw3S6Limd4QOomlBu0SvVfkGyqLl2fy0XYdgdLWA==
X-Received: by 2002:a25:844e:: with SMTP id r14-v6mr6679151ybm.298.1543607894605;
        Fri, 30 Nov 2018 11:58:14 -0800 (PST)
Received: from localhost ([107.15.81.208])
        by smtp.gmail.com with ESMTPSA id z74sm3209138ywz.51.2018.11.30.11.58.13
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Fri, 30 Nov 2018 11:58:13 -0800 (PST)
From: Josef Bacik <josef@toxicpanda.com>
To: kernel-team@fb.com, hannes@cmpxchg.org,
        linux-kernel@vger.kernel.org, tj@kernel.org, david@fromorbit.com,
        akpm@linux-foundation.org, linux-fsdevel@vger.kernel.org,
        linux-mm@kvack.org, riel@redhat.com, jack@suse.cz
Subject: [PATCH 0/4][V4] drop the mmap_sem when doing IO in the fault path
Date: Fri, 30 Nov 2018 14:58:08 -0500
Message-Id: <20181130195812.19536-1-josef@toxicpanda.com>
X-Mailer: git-send-email 2.14.3
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

v3->v4:
- dropped the ->page_mkwrite portion of these patches, we don't actually see
  issues with mkwrite in production, and I kept running into corner cases where
  I missed something important.  I want to wait on that part until I have a real
  reason to do the work so I can have a solid test in place.
- completely reworked how we drop the mmap_sem in filemap_fault and cleaned it
  up a bit.  Once I started actually testing this with our horrifying reproducer
  I saw a bunch of places where we still ended up doing IO under the mmap_sem
  because I had missed a few corner cases.  Fixed this by reworking
  filemap_fault to only return RETRY once it has a completely uptodate page
  ready to be used.
- lots more testing, including production testing.

v2->v3:
- dropped the RFC, ready for a real review.
- fixed a kbuild error for !MMU configs.
- dropped the swapcache patches since Johannes is still working on those parts.

v1->v2:
- reworked so it only affects x86, since its the only arch I can build and test.
- fixed the fact that do_page_mkwrite wasn't actually sending ALLOW_RETRY down
  to ->page_mkwrite.
- fixed error handling in do_page_mkwrite/callers to explicitly catch
  VM_FAULT_RETRY.
- fixed btrfs to set ->cached_page properly.

-- Original message --

Now that we have proper isolation in place with cgroups2 we have started going
through and fixing the various priority inversions.  Most are all gone now, but
this one is sort of weird since it's not necessarily a priority inversion that
happens within the kernel, but rather because of something userspace does.

We have giant applications that we want to protect, and parts of these giant
applications do things like watch the system state to determine how healthy the
box is for load balancing and such.  This involves running 'ps' or other such
utilities.  These utilities will often walk /proc/<pid>/whatever, and these
files can sometimes need to down_read(&task->mmap_sem).  Not usually a big deal,
but we noticed when we are stress testing that sometimes our protected
application has latency spikes trying to get the mmap_sem for tasks that are in
lower priority cgroups.

This is because any down_write() on a semaphore essentially turns it into a
mutex, so even if we currently have it held for reading, any new readers will
not be allowed on to keep from starving the writer.  This is fine, except a
lower priority task could be stuck doing IO because it has been throttled to the
point that its IO is taking much longer than normal.  But because a higher
priority group depends on this completing it is now stuck behind lower priority
work.

In order to avoid this particular priority inversion we want to use the existing
retry mechanism to stop from holding the mmap_sem at all if we are going to do
IO.  This already exists in the read case sort of, but needed to be extended for
more than just grabbing the page lock.  With io.latency we throttle at
submit_bio() time, so the readahead stuff can block and even page_cache_read can
block, so all these paths need to have the mmap_sem dropped.

The other big thing is ->page_mkwrite.  btrfs is particularly shitty here
because we have to reserve space for the dirty page, which can be a very
expensive operation.  We use the same retry method as the read path, and simply
cache the page and verify the page is still setup properly the next pass through
->page_mkwrite().

I've tested these patches with xfstests and there are no regressions.  Let me
know what you think.  Thanks,

Josef
