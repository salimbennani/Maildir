Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 30 Nov 2018 08:45:44 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga007.fm.intel.com (fmsmga007.fm.intel.com [10.253.24.52])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 8E508580213
	for <like.xu@linux.intel.com>; Thu, 29 Nov 2018 06:54:36 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by fmsmga007-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 29 Nov 2018 06:54:36 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AgCbwAhcX6Hs+x25ZLgjOrcOAlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxcW/ZB7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v6bpgRh31hy?=
 =?us-ascii?q?cdLzM38H/ZhMJzgq1ZrhKuqRNwzJLbbo+ILPpzfKHTcNwHSWdPQspeSTdBD5ig?=
 =?us-ascii?q?b4YNFecNIfpUopP/qlYIsBCwBROsBOTqyjJQgXH23K460+Q7HgHH2AwrAs4Dv2?=
 =?us-ascii?q?/Oo9X2KacSVOe1zLfVxjjEavNW2DT96IjSfRAgpfGAR6h/ftHLxkksCgPFi1KQ?=
 =?us-ascii?q?qZL+MjOUzeQNq3Kb4PB7Ve61kW4nthh8rz6yzckvkonEnpwZxkzH+Clj3Yo5ON?=
 =?us-ascii?q?61RFRlbdOqEJZcrTyWOoluTs4hQ2xkojs2x7IYtZKhYSQG1ZYqywTBZ/CZcoWF?=
 =?us-ascii?q?5A/oWvyLLjdinn1lfaqyhxas/kikze3xTs200FdRripZidnArH8N1xrO6sSdTf?=
 =?us-ascii?q?t95Eih1S6O1wDV9O5EPVg5mbTHJ5Mi2LI8i4cfvEfZEiPolkj7jLWaelgm9+Sw?=
 =?us-ascii?q?7uToeLTmppuSN49ujQH+N7wjmtWhDuQ9LwgCRnWU9vqi1LL9+U31Wa5Fjvorkq?=
 =?us-ascii?q?nfrJ/VO98bqqm9Aw9U0YYs9QyzDji70NkAmXkHLVRFeA+IjoTzOlHOJuz4Aum7?=
 =?us-ascii?q?g1i2jDhrwPXGM6bnApXKKHjDn7Hhfatn505b0gozwshT54hIBbEZPPLzRkjxuc?=
 =?us-ascii?q?TcDh84MAy73fzrCdpg1o4FXWKPA6mZML7dsFOS5+IvJfWMa5ERuDrnN/cl4Pvu?=
 =?us-ascii?q?3jcEn0QAd/ypwYcPcyL/WfBnOFmCJ3zrhNgHDCENpAV5SeXrjFiLV3lUf2qzWK?=
 =?us-ascii?q?QnoSg2DZ/jAYrdS4T+vbqawS3uG5RXYnxBWEmBFGqte4iaVvNJci+LP8J6jhQC?=
 =?us-ascii?q?Ur6uTZJn0guh4xTnwbhqJfaB5ysDqJj438J07eCAqRZn7DFxEoGR3n+AS0lymW?=
 =?us-ascii?q?UHQSJw27pw8mJnzVLW9Kl7g/VZEZR67fpKTwI9K9aIyu15C9nzXkTIdN6KVVOh?=
 =?us-ascii?q?XP2nGikrR8l32cJYMBU1IMmrkh2Wh3niOLQSjbHeXJE=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BZAADS/P9bhxHrdtBkHgEGBwaBUQkLA?=
 =?us-ascii?q?YEwgmKDeYh3iymBaJJxhHiBcRYYFIITgigDgzYiNAkNAQMBAQEBAQECARMBAQE?=
 =?us-ascii?q?KCwkIGw4vgjYFAgMYCYJcAwMBAiAEHwopAwMBAgYBASQCIgQCAgMBQxAZBYMcg?=
 =?us-ascii?q?gIBAwGmDHwzii2BC4sLgVc/gUSILYI3glcCj2oxkAgHAoIdBIQhiwiKQIZcLJg?=
 =?us-ascii?q?igUaCDU0ygQEIVoFOgicXjiBvgQeLQ4F3AQE?=
X-IPAS-Result: =?us-ascii?q?A0BZAADS/P9bhxHrdtBkHgEGBwaBUQkLAYEwgmKDeYh3iym?=
 =?us-ascii?q?BaJJxhHiBcRYYFIITgigDgzYiNAkNAQMBAQEBAQECARMBAQEKCwkIGw4vgjYFA?=
 =?us-ascii?q?gMYCYJcAwMBAiAEHwopAwMBAgYBASQCIgQCAgMBQxAZBYMcggIBAwGmDHwzii2?=
 =?us-ascii?q?BC4sLgVc/gUSILYI3glcCj2oxkAgHAoIdBIQhiwiKQIZcLJgigUaCDU0ygQEIV?=
 =?us-ascii?q?oFOgicXjiBvgQeLQ4F3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,295,1539673200"; 
   d="scan'208";a="54851663"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 29 Nov 2018 06:54:35 -0800
Received: from localhost ([::1]:54589 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gSNi7-00050u-0M
	for like.xu@linux.intel.com; Thu, 29 Nov 2018 09:54:35 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:54379)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <mikhail.abakumov@ispras.ru>) id 1gSNLa-0006uv-7V
	for qemu-devel@nongnu.org; Thu, 29 Nov 2018 09:31:23 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <mikhail.abakumov@ispras.ru>) id 1gSNLU-0002KG-HH
	for qemu-devel@nongnu.org; Thu, 29 Nov 2018 09:31:18 -0500
Received: from mail.ispras.ru ([83.149.199.45]:40030)
	by eggs.gnu.org with esmtp (Exim 4.71)
	(envelope-from <mikhail.abakumov@ispras.ru>) id 1gSNLU-0001pE-74
	for qemu-devel@nongnu.org; Thu, 29 Nov 2018 09:31:12 -0500
Received: from Misha-PC.lan02.inno (unknown [85.142.117.226])
	by mail.ispras.ru (Postfix) with ESMTPSA id B5F7A540222;
	Thu, 29 Nov 2018 17:31:01 +0300 (MSK)
From: Mikhail Abakumov <mikhail.abakumov@ispras.ru>
To: qemu-devel@nongnu.org
Date: Thu, 29 Nov 2018 17:30:59 +0300
Message-ID: <154350185918.8036.9954005878918332833.stgit@Misha-PC.lan02.inno>
In-Reply-To: <154350164526.8036.12623669071583857903.stgit@Misha-PC.lan02.inno>
References: <154350164526.8036.12623669071583857903.stgit@Misha-PC.lan02.inno>
User-Agent: StGit/0.17.1-dirty
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 3.x [fuzzy]
X-Received-From: 83.149.199.45
Subject: [Qemu-devel] [PATCH 37/39] windbg: implement kd_api_fill_memory
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: sw@weilnetz.de, lprosek@redhat.com, dovgaluk@ispras.ru,
	rkagan@virtuozzo.com, pbonzini@redhat.com, den@openvz.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Signed-off-by: Mikhail Abakumov <mikhail.abakumov@ispras.ru>
Signed-off-by: Pavel Dovgalyuk <dovgaluk@ispras.ru>
---
 include/exec/windbgstub-utils.h |    1 +
 windbgstub-utils.c              |   41 +++++++++++++++++++++++++++++++++++++++
 windbgstub.c                    |    4 ++++
 3 files changed, 46 insertions(+)

diff --git a/include/exec/windbgstub-utils.h b/include/exec/windbgstub-utils.h
index 4eb976260b..8192a7b849 100644
--- a/include/exec/windbgstub-utils.h
+++ b/include/exec/windbgstub-utils.h
@@ -85,6 +85,7 @@ void kd_api_read_msr(CPUState *cs, PacketData *pd);
 void kd_api_write_msr(CPUState *cs, PacketData *pd);
 void kd_api_search_memory(CPUState *cs, PacketData *pd);
 void kd_api_clear_all_internal_breakpoints(CPUState *cs, PacketData *pd);
+void kd_api_fill_memory(CPUState *cs, PacketData *pd);
 void kd_api_get_context_ex(CPUState *cs, PacketData *pd);
 void kd_api_set_context_ex(CPUState *cs, PacketData *pd);
 void kd_api_unsupported(CPUState *cs, PacketData *pd);
diff --git a/windbgstub-utils.c b/windbgstub-utils.c
index d77908fb45..007fea7223 100644
--- a/windbgstub-utils.c
+++ b/windbgstub-utils.c
@@ -435,6 +435,47 @@ void kd_api_clear_all_internal_breakpoints(CPUState *cs, PacketData *pd)
 {
 }
 
+void kd_api_fill_memory(CPUState *cs, PacketData *pd)
+{
+    DBGKD_FILL_MEMORY *m64c = &pd->m64.u.FillMemory;
+    uint32_t len = ldl_p(&m64c->Length);
+    target_ulong addr = ldq_p(&m64c->Address);
+    uint16_t pattern = MIN(ldl_p(&m64c->PatternLength), pd->extra_size);
+    uint16_t flags = ldl_p(&m64c->Flags);
+    int err, offset = 0;
+
+    uint8_t *mem = g_new(uint8_t, pattern);
+    memcpy(mem, pd->extra, pattern);
+
+    pd->extra_size = 0;
+
+    switch (flags) {
+    case DBGKD_FILL_MEMORY_VIRTUAL:
+        while (offset < len) {
+            err = cpu_memory_rw_debug(cs, addr + offset, mem,
+                                      MIN(pattern, len - offset), 1);
+            offset += pattern;
+            if (err) {
+                DPRINTF("fill_memory: No physical page mapped: " FMT_ADDR "\n",
+                        addr);
+            }
+        }
+        break;
+
+    case DBGKD_FILL_MEMORY_PHYSICAL:
+        while (offset < len) {
+            cpu_physical_memory_rw(addr, mem, MIN(pattern, len - offset), 1);
+            offset += pattern;
+        }
+        break;
+
+    default:
+        break;
+    }
+
+    g_free(mem);
+}
+
 void kd_api_unsupported(CPUState *cs, PacketData *pd)
 {
     WINDBG_ERROR("Caught unimplemented api %s", kd_api_name(pd->m64.ApiNumber));
diff --git a/windbgstub.c b/windbgstub.c
index a50de68db5..daf6d37aa1 100644
--- a/windbgstub.c
+++ b/windbgstub.c
@@ -232,6 +232,10 @@ static void windbg_process_manipulate_packet(WindbgState *state)
         kd_api_clear_all_internal_breakpoints(cs, data);
         return;
 
+    case DbgKdFillMemoryApi:
+        kd_api_fill_memory(cs, data);
+        break;
+
     case DbgKdGetContextExApi:
         kd_api_get_context_ex(cs, data);
         break;


