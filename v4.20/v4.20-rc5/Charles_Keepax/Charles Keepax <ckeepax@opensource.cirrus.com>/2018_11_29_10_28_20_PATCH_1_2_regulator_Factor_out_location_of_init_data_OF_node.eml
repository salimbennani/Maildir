Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 29 Nov 2018 19:48:39 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id CF88B580551;
	Thu, 29 Nov 2018 02:28:49 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 29 Nov 2018 02:28:49 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ArOr5KR8e11nsQP9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1+kTIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDwULs6Wymt771zRRHoli?=
 =?us-ascii?q?kJKjA3/mLQhMNygqJUrw6upwdnw4PWe4yVKOZyc7nBcd4AWWZNQsBcXDFBDIOm?=
 =?us-ascii?q?aIsPCvIMMPhYr4bnvVsOqQWxBRKxD+3q1DBHmGf20rc10u88FgzJwA8gEMwQv3?=
 =?us-ascii?q?TMttr0O7wfUeetzKbWyzXDdPRW2Srn6IfUbB8tu+2DXbNqccrL1EkvDBnJgUmX?=
 =?us-ascii?q?qYzgJj6Y0PkGvWuD7+d4S+6jl2oqpxtsrjWh2MsgkJTFi4EJxlze9Ch0wp45Kc?=
 =?us-ascii?q?C8RUN4e9KpFIdcuzuEO4Z2X88uWXxktDgkxrAApJW1ZjIFyI49yB7ac/GHc5aH?=
 =?us-ascii?q?4hbkVOuJPzd4i2xqeKilixax70eg0Ov8Wdew0FpQqSpFiNbMumgM1xzV9MeHVu?=
 =?us-ascii?q?Nw8lm91TuLzQzf9+9JLV4umabGKJMt3qQ8m5sRvEjbGy/5gkT2jKuYdkU+/eio?=
 =?us-ascii?q?7vzqYrHnpp+aKo91hRjyMqcwlcylB+Q3LAwOU3Gc+eWy0r3s41f5Ta5Ujv05jK?=
 =?us-ascii?q?bZqorWJccFqa6jBQ9azIIj5wy4Dze839QUhWMHI05deBKbk4jpPEnDIPT5Dfe8?=
 =?us-ascii?q?nVugijhqx+3dM73lA5XNKGXDkbj7cbZ87U5c1BQ8zdRF651IDbEBJer5WlXtu9?=
 =?us-ascii?q?zAEh85Lwu0zv7nCNpn14MeRXiAAqiDPKPSrF+H/OQvI+aXaY8RuTb9LeUl5vH0?=
 =?us-ascii?q?gX84n18dYbem3Z8NZH+kGfRmJl2TYWDwjdcZDWcKog0+QfToiF2FTzFffXWyX6?=
 =?us-ascii?q?U65jE9D4KrFoPDRoGrgLyc0ya3BJxWZmZaCl+SFXfkbZmLW/AJaCiKOM9ujiQE?=
 =?us-ascii?q?VaS9S48mzRyhrhT6y7pgLurX4CEYr4js1Npu6u3XlBEy8yF0DsuH32GMSWF0gn?=
 =?us-ascii?q?0HRzss0K9jpkx9z0+J0bJkjPxACdxT+/RJXx85NZHGyex2EdTyWgPbcdePR1ar?=
 =?us-ascii?q?WdGmATA3TtIszN4CeUd9G9O+jh/d2yqmGaMal7uOBJYs6KLTw2DxJ9phy3bBzK?=
 =?us-ascii?q?QukkMpQtVROmG8hq5w7Q7TB5XXnEWfkKqqcacc3CvJ9GqYyWqOvUdYUBN/UKnf?=
 =?us-ascii?q?XHAfYFfWosr95k/YU7CuDrEnOBNbycGeMqtKdsHpjVJeSfj+ItvefXy+l32wBR?=
 =?us-ascii?q?mSwLOMd5Tle2MG0SXZCUgElR0T/HmcOQg/ACehv3zRDDh0GV3zZEPs9PF0qGmn?=
 =?us-ascii?q?QU8s0wGKc0ph2qKp+h4UgPycTO8T3rIEuSs7tzV4BlG938jSC9qBoQphc75RYd?=
 =?us-ascii?q?c84FdByGLYuBZxPp2mL6B+mFEedx57sF/p1xVyEo9Ai9QlrGs2zApuLqKVyElO?=
 =?us-ascii?q?dzeG0pH/JLLWKnP+8wuya6HLwF7e1tWW+qAR6Pkjr1XjvQepFlct8nl90tlV1W?=
 =?us-ascii?q?ec6YvODAYITZ3xVUM3/QBgp77Geik9+5/U1Xp0PKi0rz/Owc4mCPEkyxagZdhf?=
 =?us-ascii?q?NqyEGRT2E80bAciuNeMrl0KobhICIOBd6qo0M9m6ePuB3a6hJPxgky6+jWRb/I?=
 =?us-ascii?q?B91VqB9zB9SuHUxZkF2eyX3gydWzf6klihqMH3lZlYaj4IGmqw1DbrBJRWZq10?=
 =?us-ascii?q?ZosLDWauI8uqxtRxnZLtWnhY9EK9CFMCwsOmZR2Sb1nl1w1KyUsXuWCnmTe/zz?=
 =?us-ascii?q?FskzApr7CT3SzUz+T5aRoHPHVGRG1jjVfqPIi1gMoWXEmubwg1ihSl4Vz2yLRc?=
 =?us-ascii?q?pKR6N2PTW1tHfzDqL2F+Vau9rriCbNRV6JMrsiVXV/6wYUuARb7+oBsa0iXjEH?=
 =?us-ascii?q?VYxD0gczGqu5P5nwF1iW6HLXZzqmbZdt90xRvF+NPcQvtR1CIcRCZkkTnXGkS8?=
 =?us-ascii?q?P96x8NSUjZjDtfqyV2CgVp1VaiTryYKAtC2m5WxlGxG/nvazmsH5Hgg+yyP0y9?=
 =?us-ascii?q?5qVSDQphbmfobrz7i6Mf5gfkRwB1/z8ct6Fpt+kostnp4Q33cai46R/XoGl2fz?=
 =?us-ascii?q?LNpa1bj/bHoLWT4E3drV7BL5101kK3KD35j5WWmFwst9e9m6ZXsb2ic878BJEq?=
 =?us-ascii?q?iY9rJFkjVuolqksw3Re+NykSkHyfsh83Mah+AJuAwwziSSGLwSHE9YPTDymBSM?=
 =?us-ascii?q?9dyxsKJXZGO3e7iqyEV+hcyhDK2FogxERHb5fZIiETVx78plNlLMzWbz6prleN?=
 =?us-ascii?q?TLadITtxuUkwrPjuRPKZIxkOYKijRjOW7noXIlzOs7hwR03Z6mpIiHN3lt/KWh?=
 =?us-ascii?q?DxFDLDL1YMcT+iz3gaZag8abxISvHpRnGjUWU5rkV/OoEDQOtfv5MwaCCiEzqn?=
 =?us-ascii?q?CeGbDHBw+Q9F9mr27TE5CsL3yXJmMWzdB8SxmGPkBfnBoYXDYnnp46CwCqwtbu?=
 =?us-ascii?q?cFxi6zAV5174rAZMy+1yOxn+VGffuBmnajMuRJeDKxpW6xlI513JPsyG8uJzAy?=
 =?us-ascii?q?ZY84WhrQyKN2ybfhlIAnsPWkCeHFDjOb+u5dbb/uicB+q+KebOYLqUpexfUfeI?=
 =?us-ascii?q?2Yyg0o988zmQMcWPO2FoD+cn1UpbQXB5B8PZli0PSyMJliLNbM2bpBam9i10tM?=
 =?us-ascii?q?C/9/vrVxz15YuSELtfKtFv+xGwgaeeOO+cnid5KTBE1pwSwX/E0qQQ3FkXiyt2?=
 =?us-ascii?q?bTmiDawAtTLRTKLXgqJYFQMbZDhpNMRW76MwxA1NOc/Ah9Px1754iOM1ClhfWV?=
 =?us-ascii?q?zgnMGpedIFI2WnOFzbA0aLMayMJSfXzMHvfaO8VbpQgf1Itx2xvDaXCVPsMi6f?=
 =?us-ascii?q?mDnpSR+vN/pBjCWaPBxYpYG8fQxhCWnlTNL6dBK7NMV7giExwb0xnnnKL3ITMS?=
 =?us-ascii?q?Bgc0NRqb2d9SNZje95G2xE73plK/GLmieZ7+bCLJYWvuBmAiB1l+Jc/XQ7xKFZ?=
 =?us-ascii?q?7CBCRPxphiTSqsRirE2hkumKmXJbV08aoCxMg4SKsG1hNL/f+50GXmzLqkEj92?=
 =?us-ascii?q?KVXj8KrsFhB8anmK1d0tHf3Pb4KzpP69vE1cwECs7PL9+dO3dnOhvzAiPPSgAC?=
 =?us-ascii?q?SGj4Zinkm0VBnaTKpTWupZ8gp820lQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ARAACfvv9bh0O0hNFlHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBggCBayeMEV+LKYIhly6BcS4TAYdyIjQJDQEDAQEBAQEBAgETAQE?=
 =?us-ascii?q?BCA0JCCkvgjYigmUCAQMBAg8VUgYJAQFQA1QGDgUFHYJ/ggIEAZt7iVgBAQGBa?=
 =?us-ascii?q?jOFQIRth2uEKxeBAQc4P4ERgmSFfIUOAokhCoV7gUiPNQmRJyORHJoSgg0zGgg?=
 =?us-ascii?q?bFYMngicXjh1ygQUBAY04AQE?=
X-IPAS-Result: =?us-ascii?q?A0ARAACfvv9bh0O0hNFlHAEBAQQBAQcEAQGBUQcBAQsBggC?=
 =?us-ascii?q?BayeMEV+LKYIhly6BcS4TAYdyIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkvgjYig?=
 =?us-ascii?q?mUCAQMBAg8VUgYJAQFQA1QGDgUFHYJ/ggIEAZt7iVgBAQGBajOFQIRth2uEKxe?=
 =?us-ascii?q?BAQc4P4ERgmSFfIUOAokhCoV7gUiPNQmRJyORHJoSgg0zGggbFYMngicXjh1yg?=
 =?us-ascii?q?QUBAY04AQE?=
X-IronPort-AV: E=Sophos;i="5.56,294,1539673200"; 
   d="scan'208";a="54205319"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 29 Nov 2018 02:28:48 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728117AbeK2VdZ (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 29 Nov 2018 16:33:25 -0500
Received: from mx0a-001ae601.pphosted.com ([67.231.149.25]:60820 "EHLO
        mx0b-001ae601.pphosted.com" rhost-flags-OK-OK-OK-FAIL)
        by vger.kernel.org with ESMTP id S1726823AbeK2VdZ (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 29 Nov 2018 16:33:25 -0500
Received: from pps.filterd (m0077473.ppops.net [127.0.0.1])
        by mx0a-001ae601.pphosted.com (8.16.0.27/8.16.0.27) with SMTP id wATAOWFh017069;
        Thu, 29 Nov 2018 04:28:30 -0600
Authentication-Results: ppops.net;
        spf=none smtp.mailfrom=ckeepax@opensource.cirrus.com
Received: from mail4.cirrus.com ([87.246.98.35])
        by mx0a-001ae601.pphosted.com with ESMTP id 2p2724rx8v-1;
        Thu, 29 Nov 2018 04:28:30 -0600
Received: from EX17.ad.cirrus.com (unknown [172.20.9.81])
        by mail4.cirrus.com (Postfix) with ESMTP id 4AAD9611C8B7;
        Thu, 29 Nov 2018 04:32:01 -0600 (CST)
Received: from imbe.wolfsonmicro.main (198.61.95.81) by EX17.ad.cirrus.com
 (172.20.9.81) with Microsoft SMTP Server id 14.3.408.0; Thu, 29 Nov 2018
 10:28:29 +0000
Received: from algalon.ad.cirrus.com (algalon.ad.cirrus.com [198.90.251.122])
        by imbe.wolfsonmicro.main (8.14.4/8.14.4) with ESMTP id wATASLba028814; Thu,
 29 Nov 2018 10:28:21 GMT
From: Charles Keepax <ckeepax@opensource.cirrus.com>
To: <broonie@kernel.org>
CC: <lgirdwood@gmail.com>, <linux-kernel@vger.kernel.org>,
        <patches@opensource.cirrus.com>
Subject: [PATCH 1/2] regulator: Factor out location of init data OF node
Date: Thu, 29 Nov 2018 10:28:20 +0000
Message-ID: <20181129102821.18396-2-ckeepax@opensource.cirrus.com>
X-Mailer: git-send-email 2.11.0
In-Reply-To: <20181129102821.18396-1-ckeepax@opensource.cirrus.com>
References: <20181129102821.18396-1-ckeepax@opensource.cirrus.com>
MIME-Version: 1.0
Content-Type: text/plain
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0 priorityscore=1501 malwarescore=0
 suspectscore=1 phishscore=0 bulkscore=0 spamscore=0 clxscore=1015
 lowpriorityscore=0 mlxscore=0 impostorscore=0 mlxlogscore=999 adultscore=0
 classifier=spam adjust=0 reason=mlx scancount=1 engine=8.0.1-1810050000
 definitions=main-1811290091
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

To support future additions factor out the location of the OF node
containing the init data for the regulator from the code that parses the
init data.

Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>
---
 drivers/regulator/of_regulator.c | 64 +++++++++++++++++++++++-----------------
 1 file changed, 37 insertions(+), 27 deletions(-)

diff --git a/drivers/regulator/of_regulator.c b/drivers/regulator/of_regulator.c
index c711a0a2bc4b..4bb8928bdb3f 100644
--- a/drivers/regulator/of_regulator.c
+++ b/drivers/regulator/of_regulator.c
@@ -371,13 +371,10 @@ int of_regulator_match(struct device *dev, struct device_node *node,
 }
 EXPORT_SYMBOL_GPL(of_regulator_match);
 
-struct regulator_init_data *regulator_of_get_init_data(struct device *dev,
-					    const struct regulator_desc *desc,
-					    struct regulator_config *config,
-					    struct device_node **node)
+struct device_node *regulator_of_get_init_node(struct device *dev,
+					       const struct regulator_desc *desc)
 {
 	struct device_node *search, *child;
-	struct regulator_init_data *init_data = NULL;
 	const char *name;
 
 	if (!dev->of_node || !desc->of_match)
@@ -400,35 +397,48 @@ struct regulator_init_data *regulator_of_get_init_data(struct device *dev,
 		if (!name)
 			name = child->name;
 
-		if (strcmp(desc->of_match, name))
-			continue;
+		if (!strcmp(desc->of_match, name))
+			return of_node_get(child);
+	}
 
-		init_data = of_get_regulator_init_data(dev, child, desc);
-		if (!init_data) {
-			dev_err(dev,
-				"failed to parse DT for regulator %pOFn\n",
-				child);
-			break;
-		}
+	of_node_put(search);
 
-		if (desc->of_parse_cb) {
-			if (desc->of_parse_cb(child, desc, config)) {
-				dev_err(dev,
-					"driver callback failed to parse DT for regulator %pOFn\n",
-					child);
-				init_data = NULL;
-				break;
-			}
-		}
+	return NULL;
+}
 
-		of_node_get(child);
-		*node = child;
-		break;
+struct regulator_init_data *regulator_of_get_init_data(struct device *dev,
+					    const struct regulator_desc *desc,
+					    struct regulator_config *config,
+					    struct device_node **node)
+{
+	struct device_node *child;
+	struct regulator_init_data *init_data = NULL;
+
+	child = regulator_of_get_init_node(dev, desc);
+	if (!child)
+		return NULL;
+
+	init_data = of_get_regulator_init_data(dev, child, desc);
+	if (!init_data) {
+		dev_err(dev, "failed to parse DT for regulator %pOFn\n", child);
+		goto error;
 	}
 
-	of_node_put(search);
+	if (desc->of_parse_cb && desc->of_parse_cb(child, desc, config)) {
+		dev_err(dev,
+			"driver callback failed to parse DT for regulator %pOFn\n",
+			child);
+		goto error;
+	}
+
+	*node = child;
 
 	return init_data;
+
+error:
+	of_node_put(child);
+
+	return NULL;
 }
 
 static int of_node_match(struct device *dev, const void *data)
-- 
2.11.0

