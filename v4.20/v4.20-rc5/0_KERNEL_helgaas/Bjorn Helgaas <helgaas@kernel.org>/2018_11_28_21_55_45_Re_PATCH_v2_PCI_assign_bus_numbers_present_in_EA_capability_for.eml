Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 29 Nov 2018 08:41:21 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from FMSMGA003.fm.intel.com (fmsmga003.fm.intel.com [10.253.24.29])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 8806C5803ED;
	Wed, 28 Nov 2018 13:55:52 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by FMSMGA003-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 28 Nov 2018 13:55:52 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AfugabRT5l6ymdVSR3ce//flQKdpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64Zx2At8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KptVRTmij?=
 =?us-ascii?q?oINyQh/W/ZisJ+kr9VrhGvpxNw34HbfYOaO/RlfqPFf94XXnZBUtpLWiBdHo+x?=
 =?us-ascii?q?dZUDAuwcNuhYtYn9oF4OoAOjCAmuA+Pv0DlIjWL006Ik1+QhHhvJ0xY7H9kTt3?=
 =?us-ascii?q?nUrMv6NKMdUe+v1qbI1i7Ob/BI1jfn7ojHbBQhreuLXbJqfsrc0E8iHB7GgFWI?=
 =?us-ascii?q?sYHpIS+Z2+AXv2SG4edsS/ijh3Mkpg1tuDSix8UhhpHIi48R0FzJ9zh1zJw6KN?=
 =?us-ascii?q?GiVUJ3fcKoHZ1NvC+ALYR2WNktQ2RwtSY61LIGvZm7cTAUyJQo2RHfceaLc4uW?=
 =?us-ascii?q?7RL5UuaePzN4iGhieLKliBa+6UmgyuviWcmoyFtGsDZJn93WunwQ2RHf9NKLRu?=
 =?us-ascii?q?Z+80u9wzqC1gLe5vlBIU8ulKrbL5AhwqQ3lpoWqUnDGi72mEPrjK6Zb0kk+fan?=
 =?us-ascii?q?6/7hYrr4op+QLoh0iw/4MqswgMyyGvo4MgcQUGiB4+i816Ps/Vf/QLpUiv06iK?=
 =?us-ascii?q?7ZsIrVJcgDvK62HxdV0po/6xa4Fzqm1NUYnXoZI15fdxOHkpPkO1XPIPD+EPe+?=
 =?us-ascii?q?jE6gkDZtx/DaILLhBo/BIWTEkLfkZbx98VJTyBIvzdBD4JJZErEBL+jyWk/trt?=
 =?us-ascii?q?PYCQU1Mwypw+n9DtV92ZgTWWaOAq+fLaPTvkWE5uMpI+mQeoAVvCzxJOQi5/7r?=
 =?us-ascii?q?lXU5g0MSfbG13ZsLb3C1BvZmI0KHbnb2gdcBFmEKvgw5TOHxjF2CUDhTZ2u9Xq?=
 =?us-ascii?q?4m5zE7Dp6mApnHRoy3nLOB2yK7FIVMZm9aElCMDWvod4KcVvgWcyKSIshhkj8e?=
 =?us-ascii?q?Wbi7UYAh1wqjtAv7y7phM+rV9TcUtZPl1Nhp+eLTkQs++iBzD8SYy2uNVX17nn?=
 =?us-ascii?q?sURz8q26ByuU99xU2F0aRih/xYFMZc5/VGUgohMZ7czup6C839Ww7bf9eJTkqm?=
 =?us-ascii?q?TcuiAT0rUt0xxNoOaV5nG9q+lhDDwzaqA7gNmrOWHpM07LzT02LxJ8lnzXbGz7?=
 =?us-ascii?q?cuj18hTstLNm2mg6p/+hPXB47IlUWZiqmreb4d3C7L6GeM026OsFtEXw53VKXP?=
 =?us-ascii?q?RWofaVfOrdTl+kPCSKejBqk9PQtf18GOMKtKZcfvjVVdWvjjPs/TY2awm2e2GB?=
 =?us-ascii?q?aJyamAbIvse2UBwirdDFIInBwU/XaDLQI+HDuuo3rCDDxyElLie1/s8eh7qHO8?=
 =?us-ascii?q?Uk80zwGLY1d917av/R4Vn/icS/IV3rILoyohrzR0HFCg39PZEdaApgxhfLlCbt?=
 =?us-ascii?q?M5+ltIyWXZtwllNJy6M69inkIecxhwv072zRp3DptPkMc0o3Iq1gZ9Mr+Y305b?=
 =?us-ascii?q?eDOe3pDwPaPXJ3L2/BCuba7Wx17f3MyX+qcJ9PQ3tVHjsBu1GUol9nVty8NV3G?=
 =?us-ascii?q?eE5pXWEAoSVor8U0Yq9xRgu77WeCg854PO2n1qPqm5qTvC29MvBOs4xResZdZf?=
 =?us-ascii?q?MKWYFADsF80WHdShKOsvm1KxdBILIPhS9LIoP8Ohb/aGwq+rM/p6kzK8kGtH55?=
 =?us-ascii?q?px0kSS+CpmS+7ExooKzOuc3gSaSTj8llChssbslIBAZDESGHe/yCf+CI5QYK1y?=
 =?us-ascii?q?YZgECWO0L8KrwdV+gobnW2RE+167G1MGxMipdAKSblz8xwFR1V4boWe6mSu+1D?=
 =?us-ascii?q?F0lzAprqyC3C3B2ejidRwHOnJVS2lml1vjPY+0j9UCVkiycwcpjAel5Vr9x6VD?=
 =?us-ascii?q?pqRwNXPTQURLfyjxNW1iSbG/trmBY85O7pMnryNXXf+4YVCbTL79vhQb3zniH2?=
 =?us-ascii?q?tY2DA0aTWqto/lkBx9jWKXNGxzo2bBecFs2Rff48TRRP5L0ToBXiV4izjXBl6n?=
 =?us-ascii?q?Mtmt/NWUkYrDs++kW2KgUJ1TbTfkzYeauCSn4m1qBAW1n+qvld3/DQg6zSj72s?=
 =?us-ascii?q?FpVSrSrRbweInr17mgPuJhcUllH1v868t8GoFjnYo8npAQ2X4GhpqL+XoLi3v8?=
 =?us-ascii?q?MdJe2ajmdnoCWSYLw8LJ4AjiwEBjK3OJx4HjWXmHzMpuecK6Yn8I1SIn9M9FFr?=
 =?us-ascii?q?2U7LNfkCtxo1q4qx/RYPdnkjccz/su9GAVg+UTtAUxySWdB6gYHVNEMiz0ixSI?=
 =?us-ascii?q?89e+ob1LZGaodLi8zkt/ksqnDLGfuQFcQ3f5d4wmHS9x6MV/LV3N3Gfy6oHiZN?=
 =?us-ascii?q?nfc9YTugeInBfHiuhfMIgxmeYShSp7JWL9umUoxPUhghxp2ZG6oZKLK2Fw/K+i?=
 =?us-ascii?q?Bh5YNzv1Z94c+z33jKZemNqW0J6rHpl7BjoLW57oR+qyED0OrfTnKxqOEDokp3?=
 =?us-ascii?q?eZA7XfGBGQ6Fx8o3LTCZyrNGyXJHoEzdVkXhadP1dSgAQVXDU8g544GRqmxM3n?=
 =?us-ascii?q?cEdl+D8R4kT0pQdLyuJtLxP/SHvQpB+0ajcoT5iSNBpX7gZf50fMLMyR9ORzEz?=
 =?us-ascii?q?tD/p2mqgyNJXeWZwBJDWEPR0yFCErvPrio5dnc7eeYAvCyIOfJYbWLseZeTeuH?=
 =?us-ascii?q?xYqz0ot6+DaBLsWPMWdjD/042UpDXGp1G8fDmzUIRCwYiTjNb9OApBqn/i13r8?=
 =?us-ascii?q?a/8OnkWQ715IuPDadSPstr+xysnaiDMOuQjj5jKTlEzpMM2WPIyL8H0VEIliFh?=
 =?us-ascii?q?bCOtHqoAtCLXSKLQm7RaDxoaayN1KctJ4Lgw3ghLOc7HlNz10qR0geIyC1dATV?=
 =?us-ascii?q?bhgN2mZdQWI2GhM1PKHFqLNLWDJTHR3877e7+zSb1Og+VSrBCwvTebE0n+PjWM?=
 =?us-ascii?q?jTXpVhavMf1SgyGfJhBRpIa9chN1A2j5UN3mcgG7MMNwjTAuwbw7nHXKNWsdMT?=
 =?us-ascii?q?h6a0xMr72Q4jlegvVwAGFB6ntlLe+ZmyeW9eXYK5AWsed1DSRwje5V/HM6y74G?=
 =?us-ascii?q?pB1DEedoniffo8Yop1KjlsGAzzNmVFxFrTMYqpiMuBBIO6LD8NFgVHLL9RsWpT?=
 =?us-ascii?q?GQBhAFrtJ+It7ioaZdzp7Ijq2le2QKyM7d4cZJX5ucE8mAKnd0aRc=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AEAABhDf9bh0O0hNFkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUwMBAQEBCwGDayeYGYINFIh8jjKBcxQYEwGHbiI2Bw0BAwEBAQE?=
 =?us-ascii?q?BAQIBEwEBAQgNCQgpIwyCNiKCZAEBAQECAQECJBMGAQE3AQQBCQEBChUDCSUDD?=
 =?us-ascii?q?AUNTwWDHIFqAw0IBaYzgWwzgnYBAQWFBg2CFAiKeoEcF4F/hCOCV4VfgiaQHY9?=
 =?us-ascii?q?SLgmOBYMhCxiBWog0hweOX4lpgU0LgXszGggoCDuCbIIbDBeIXoVeITKBAgMBA?=
 =?us-ascii?q?SETjS8BAQ?=
X-IPAS-Result: =?us-ascii?q?A0AEAABhDf9bh0O0hNFkGgEBAQEBAgEBAQEHAgEBAQGBUwM?=
 =?us-ascii?q?BAQEBCwGDayeYGYINFIh8jjKBcxQYEwGHbiI2Bw0BAwEBAQEBAQIBEwEBAQgNC?=
 =?us-ascii?q?QgpIwyCNiKCZAEBAQECAQECJBMGAQE3AQQBCQEBChUDCSUDDAUNTwWDHIFqAw0?=
 =?us-ascii?q?IBaYzgWwzgnYBAQWFBg2CFAiKeoEcF4F/hCOCV4VfgiaQHY9SLgmOBYMhCxiBW?=
 =?us-ascii?q?og0hweOX4lpgU0LgXszGggoCDuCbIIbDBeIXoVeITKBAgMBASETjS8BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,292,1539673200"; 
   d="scan'208";a="53060452"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 28 Nov 2018 13:55:50 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726604AbeK2I6v (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 29 Nov 2018 03:58:51 -0500
Received: from mail.kernel.org ([198.145.29.99]:52024 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726307AbeK2I6v (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 29 Nov 2018 03:58:51 -0500
Received: from localhost (unknown [69.71.4.100])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 74E9D20832;
        Wed, 28 Nov 2018 21:55:46 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1543442146;
        bh=hnatV5gSfA0QK7wLhAQgFTdYewmVXZ8mCF85eWy+dCE=;
        h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
        b=SbyKYUgzrpMs3sNYzWGoHlD884gKy/yHnH1buFoSyUmPhbKM82ik+1eGObMs7CVW4
         VMRCqYT+d6pv24ltCxIiOvuso8Yt6ChukZ0ll+PkTSAvv4IAILdNhPCqZqet/dgyEZ
         HoegN+HuAyS4OHBugubqMlCpqktN9Qz/R+UXYfDg=
Date: Wed, 28 Nov 2018 15:55:45 -0600
From: Bjorn Helgaas <helgaas@kernel.org>
To: sundeep.lkml@gmail.com
Cc: linux-pci@vger.kernel.org, linux-kernel@vger.kernel.org,
        sean.stalley@intel.com, sgoutham@marvell.com,
        Subbaraya Sundeep <sbhatta@marvell.com>
Subject: Re: [PATCH v2] PCI: assign bus numbers present in EA capability for
 bridges
Message-ID: <20181128215545.GC178809@google.com>
References: <1542633272-16161-1-git-send-email-sundeep.lkml@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <1542633272-16161-1-git-send-email-sundeep.lkml@gmail.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, Nov 19, 2018 at 06:44:32PM +0530, sundeep.lkml@gmail.com wrote:
> From: Subbaraya Sundeep <sbhatta@marvell.com>
> 
> As per the spec, bridges with EA capability work
> with fixed secondary and subordinate bus numbers.
> Hence assign bus numbers to bridges from EA if the
> capability exists.

A reference to the spec section would be good, i.e., PCIe r4.0, sec xxx.

> Signed-off-by: Subbaraya Sundeep <sbhatta@marvell.com>
> ---
> Changes for v2:
> 	No changes just added Sean Stalley who did EA support for BARs.
> 
>  drivers/pci/probe.c           | 58 ++++++++++++++++++++++++++++++++++++++++---
>  include/uapi/linux/pci_regs.h |  6 +++++
>  2 files changed, 60 insertions(+), 4 deletions(-)
> 
> diff --git a/drivers/pci/probe.c b/drivers/pci/probe.c
> index b1c05b5..f41d2e6 100644
> --- a/drivers/pci/probe.c
> +++ b/drivers/pci/probe.c
> @@ -1030,6 +1030,40 @@ static void pci_enable_crs(struct pci_dev *pdev)
>  
>  static unsigned int pci_scan_child_bus_extend(struct pci_bus *bus,
>  					      unsigned int available_buses);
> +/*
> + * pci_ea_fixed_busnrs() - Read fixed Secondary and Subordinate bus
> + * numbers from EA capability.
> + * @dev: Bridge with EA
> + * @secondary: updated with secondary bus number in EA
> + * @subordinate: updated with subordinate bus number in EA
> + *
> + * If it is a bridge with EA capability then fixed bus numbers are
> + * read from EA capability list and secondary, subordinate reference
> + * variables will be updated. Otherwise secondary and subordinate reference
> + * variables will be zeroed.
> + */
> +static void pci_ea_fixed_busnrs(struct pci_dev *dev, u8 *secondary,
> +				u8 *subordinate)
> +{
> +	int ea;
> +	int offset;
> +	u32 dw;
> +
> +	*secondary = *subordinate = 0;
> +
> +	if (dev->hdr_type != PCI_HEADER_TYPE_BRIDGE)
> +		return;
> +
> +	/* find PCI EA capability in list */
> +	ea = pci_find_capability(dev, PCI_CAP_ID_EA);
> +	if (!ea)
> +		return;
> +
> +	offset = ea + PCI_EA_FIRST_ENT;
> +	pci_read_config_dword(dev, offset, &dw);

"Num Entries" in the first DW of the capability is allowed to be zero,
in which case this word (the second DW) is invalid.  [See comments
below; this code would be valid based on the 2014 ECN, but not per the
2017 PCIe r4.0 spec]

It would be much better if this function could be somehow incorporated
into pci_ea_init(), which already knows how to parse much of the EA
capability.

> +	*secondary =  dw & PCI_EA_SEC_BUS_MASK;
> +	*subordinate = (dw & PCI_EA_SUB_BUS_MASK) >> PCI_EA_SUB_BUS_SHIFT;
> +}
>  
>  /*
>   * pci_scan_bridge_extend() - Scan buses behind a bridge
> @@ -1064,6 +1098,8 @@ static int pci_scan_bridge_extend(struct pci_bus *bus, struct pci_dev *dev,
>  	u16 bctl;
>  	u8 primary, secondary, subordinate;
>  	int broken = 0;
> +	u8 fixed_sec, fixed_sub;
> +	int next_busnr;
>  
>  	/*
>  	 * Make sure the bridge is powered on to be able to access config
> @@ -1163,17 +1199,25 @@ static int pci_scan_bridge_extend(struct pci_bus *bus, struct pci_dev *dev,
>  		/* Clear errors */
>  		pci_write_config_word(dev, PCI_STATUS, 0xffff);
>  
> +		/* read bus numbers from EA */
> +		pci_ea_fixed_busnrs(dev, &fixed_sec, &fixed_sub);
> +
> +		next_busnr = max + 1;
> +		/* Use secondary bus number in EA */
> +		if (fixed_sec)
> +			next_busnr = fixed_sec;
> +
>  		/*
>  		 * Prevent assigning a bus number that already exists.
>  		 * This can happen when a bridge is hot-plugged, so in this
>  		 * case we only re-scan this bus.
>  		 */
> -		child = pci_find_bus(pci_domain_nr(bus), max+1);
> +		child = pci_find_bus(pci_domain_nr(bus), next_busnr);
>  		if (!child) {
> -			child = pci_add_new_bus(bus, dev, max+1);
> +			child = pci_add_new_bus(bus, dev, next_busnr);
>  			if (!child)
>  				goto out;
> -			pci_bus_insert_busn_res(child, max+1,
> +			pci_bus_insert_busn_res(child, next_busnr,
>  						bus->busn_res.end);
>  		}
>  		max++;
> @@ -1234,7 +1278,13 @@ static int pci_scan_bridge_extend(struct pci_bus *bus, struct pci_dev *dev,
>  			max += i;
>  		}
>  
> -		/* Set subordinate bus number to its real value */
> +		/*
> +		 * Set subordinate bus number to its real value.
> +		 * If fixed subordinate bus number exists from EA
> +		 * capability then use it.
> +		 */
> +		if (fixed_sub)
> +			max = fixed_sub;
>  		pci_bus_update_busn_res_end(child, max);
>  		pci_write_config_byte(dev, PCI_SUBORDINATE_BUS, max);
>  	}
> diff --git a/include/uapi/linux/pci_regs.h b/include/uapi/linux/pci_regs.h
> index e1e9888..c3d0904 100644
> --- a/include/uapi/linux/pci_regs.h
> +++ b/include/uapi/linux/pci_regs.h
> @@ -372,6 +372,12 @@
>  #define PCI_EA_FIRST_ENT_BRIDGE	8	/* First EA Entry for Bridges */

You didn't add PCI_EA_FIRST_ENT_BRIDGE (Sean did with f80b0ba95964
("PCI: Add Enhanced Allocation register entries")), but it is unused
and I can't match it with anything in the spec (PCIe r4.0, sec 7.8.5).

It might be related to the code in pci_ea_init() that skips DWORD 2
for type 1 functions.  But I still don't see that in the spec.

If it's obsolete, we should remove it (with a separate patch).

Hmm, I do see this in the ECN dated 23 Oct 2014, sec 6.9.1.2.  But
presumably that would be incorporated in PCIe r4.0, which is dated 27
Sep 2017.

I have no idea what to do with this.  I can't merge this without some
clarification here,

>  #define  PCI_EA_ES		0x00000007 /* Entry Size */
>  #define  PCI_EA_BEI		0x000000f0 /* BAR Equivalent Indicator */
> +
> +/* EA fixed Secondary and Subordinate bus numbers for Bridge */
> +#define PCI_EA_SEC_BUS_MASK	0xff
> +#define PCI_EA_SUB_BUS_MASK	0xff00
> +#define PCI_EA_SUB_BUS_SHIFT	8
> +
>  /* 0-5 map to BARs 0-5 respectively */
>  #define   PCI_EA_BEI_BAR0		0
>  #define   PCI_EA_BEI_BAR5		5
> -- 
> 1.8.3.1
> 
