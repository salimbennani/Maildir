Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:27:58 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 0F296580460;
	Sat,  1 Dec 2018 19:23:15 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 01 Dec 2018 19:23:14 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A5J+HiBJaM6dFTR2dmtmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULPT6rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0yRD+s7bpkSAXwhS?=
 =?us-ascii?q?kHKTA37W/ZhM93gqJAuBKspQdyz5LIbIyPKPZzZL/Rcc8cSGFcXshRTStBAoak?=
 =?us-ascii?q?YoQNFeUBO+lYr5XnqFsJsBCwAwisD/7oxz9Uh3/226073/4vEAHH2gwvAtMPsX?=
 =?us-ascii?q?XPodX6MacdS+G1zK3SwTrfaPNW3C7w5Y7VeR4iufGBRax8fdbVxEU1Cg/IgEuc?=
 =?us-ascii?q?pZb4Mz6WyugBqWmW4uh4We+uiGMrsRx9rzmsy8s2l4XEiJ4ZxkrG+Ch7xos+OM?=
 =?us-ascii?q?e2R1RhYdG+FZtdryGaOJVyQsMlW2xopik6xaMcuZKhfygF1o4nxxjBZPyDaYSI?=
 =?us-ascii?q?5QjjVOmJLTd5gnJqZq6/ig6s/US8zuDwTNS43VhUoiZfj9XBtWwB2wbS58WFUv?=
 =?us-ascii?q?d9+12u2TeL1wDd8OFEJkU0mLLfK54gxL4wi5USvV3AHiDogkX2irGZdkE99uiv?=
 =?us-ascii?q?5eXnZKvppoWHOo9qhQHxLL4ulta8AesmKAgOWXaU+eCm2L3k5035T61Gjucqna?=
 =?us-ascii?q?nBrJDaOcMbq7a9Aw9U0YYs9QyzDji70NkDmXkHLVRFeA+IjoTzOlHOJuz4Aum7?=
 =?us-ascii?q?g1i2jDhrwPXGNKX7AprRNnjDjKvhfbFl5k5c0gUzzMxf6IhTCr0bIPLzR1X+tN?=
 =?us-ascii?q?rXDhIiNwy0wuDnCMhy148EWGKPBLOZP73WsVOS+u0vJOyMbpcPuDnhM/gl++Lu?=
 =?us-ascii?q?jXghlF8feqmmw4EbaHO/HvRgJUWZZmHhgtMAEWcMowo/Q/bmiFyEUT5PeXmyW7?=
 =?us-ascii?q?gw6S08CIKjFY3DXJyigKSd3CenGZ1bfnpJCkuMEXfvdIWIQe0MZziQIsJ6ljwE?=
 =?us-ascii?q?VL6hS5Iu1B20tQ/6zaZnIfTQ+iECqZ3j09117fXJlR4u7Tx0E9id02aVQmF3hG?=
 =?us-ascii?q?wIQSU63KR+oUNnzFeD3rN1g/hZFdxV+vNIXR02NZ/az+xmFd/yXhjNccuOSFaj?=
 =?us-ascii?q?Wt+mGy0+Tsotw98SZEZwA8itgQrd3yW0GbMVl6aEBJov8q3C2Xj9IMJ9y3XD1K?=
 =?us-ascii?q?kllFQmRspPNWu7hq9w7QTTBojJk1mHmKaub6gTwCnN9GKbx2qUoE5YSBJwUbnC?=
 =?us-ascii?q?XX0He0TZt8r56V3YQ7+uE7snNBBBxtCEKqZRbt3pjFNGROrsOdjEYmKxnXuwCg?=
 =?us-ascii?q?iMxr+WcIXqfGAd1j3HCEcYiwAT4WqGNQ8mCye9omLeCTtuFU7vY0Ls6+V+tGm3?=
 =?us-ascii?q?TkguzwGObk1h0bW19wURhfydTfMTw70FtD0gqzVyAFaywdbWB8CcqApmeaVWec?=
 =?us-ascii?q?k970tf1WLFqwx9OYStILpmhlEAfAV4oUPv2w9sBYVdjMcltnUqzAl1KaKGy15B?=
 =?us-ascii?q?czKY3ZbtOrzYMGXy/Rava7LI1VHaytqZ5qAP6PEgoVX5oA6pDlYi82lg09RN03?=
 =?us-ascii?q?qc+4/GAxYIXZPwUkY47R56p77Bbyk55oPU02BsMKauvj/D3dIpGPUqyhK6c9hD?=
 =?us-ascii?q?N6OEERf4E9cGCMi2NOwqh1+pYwoePOBT6KE7JdmmeOaB2KKxOuZvgiimjWVe7I?=
 =?us-ascii?q?9hyE2M8zdzRfDS35YCxfGVxQ+HVzb6jFe8vcH7g4FEZTcOHmWhzSjoHpJeZqp3?=
 =?us-ascii?q?fYwTE2ehP9W3xslih57qQ3NZ9F+jC0kG2cOzYhqSclr90BZU1UQWp3ynhCS5wy?=
 =?us-ascii?q?Z1kzEvsqqQwijOz/7+exoAP25BXHNigkv0IYiok9AaW1Clbwozmxu/5kb6xK9b?=
 =?us-ascii?q?qL5kL2bJQkdIfCn2L2d8Xau2rbeCZ89P6JU1sSRYSui8YFaaSqLjrBseyS/sA2?=
 =?us-ascii?q?xexDUjfTGwppr5hwB6iH6aLHtrrHvWY8ZwyQ3d5NzdQ/5cxT4GRCh+iTnKCVmw?=
 =?us-ascii?q?Jdip/dOIl5jdtuCyTX6uVppWcSPz14OPqDO75XF2AR24h/2zmcfoEQkg3S/7yt?=
 =?us-ascii?q?llTyPIrBnnb4nv1qS6N/9nf0ZyCF/97cp6Bp9xko8qiJ4M3ngag42f/WAbnmfr?=
 =?us-ascii?q?LdVbxaX+YWIIRT4KwN7a+hLp2UN9IXKS24L2SG+dzdB/aNmgbWMbwSY978FMCK?=
 =?us-ascii?q?eJ471Ihyp1olykrQ3PZfhxhCsSyfwr6HQCmeEGpBItzjmBArAVBURYISvslxGS?=
 =?us-ascii?q?49G/tqpXYnuvcaOr1Ep/ht2hCLCCogdBWHf2YJsiHClw7tlhP1LIynH89obkeN?=
 =?us-ascii?q?zIZ9IJqhKUiwvAj/RSKJ8pjfUFny1nOWbgvXE/z+47kAdj3ZW7vIiBNmVs87i1?=
 =?us-ascii?q?Ah9eNj3pecwT/ivhgrpZnsaTx4qvBIluGi0XXJv0SvKlCDASuu7iNwmQCz0wsG?=
 =?us-ascii?q?ubFaDcHQ+C60dmsnTPHIqwN3yMIHkZzNNiRASSJUBFgQAUWik6kYA9Fgyw2MPh?=
 =?us-ascii?q?d0J57CgL5lHkshtM1v5oNx7nX2bfoweody40SIWFIxpQ9A1C/EDVMcqR7u9oGy?=
 =?us-ascii?q?FY/5uhrBGCK2CBZgRIC30JVVKAB1z5Irau4tzA+fCCBuWiN/vOfamOqetGWveI?=
 =?us-ascii?q?252v04hm/zWNNsmVPXliFfo72kVdUnBjBsTZgC4CSygWlyLLcs6aqw2w+ixxrs?=
 =?us-ascii?q?Cj7vvrXBjj6peIC7tXKd9v4Qy5gb+fN+6MgyZ0MSxX1o4Xyn/S1rce3EQeiyVv?=
 =?us-ascii?q?dzS2FbQAtCjNTL/fm6NNDh4bbT9zO9VM764mwgZNPsvbgMvv1rFklv41F0tFVV?=
 =?us-ascii?q?v5l8G1ZMwKJnuxO0/dCEmXNLSJOzvLztrzYaO9T71QkepVuwexuTadD0/sIDCD?=
 =?us-ascii?q?myP1WBCoNOFGlDubMwBGuIGhbhZtDnDuTdL8ZR29Nd93jDs2zqU1h3PKL2EcNz?=
 =?us-ascii?q?d8flhJrr2R6yNYn/p+F3ZA7npjMemLhSKZ4/PEJZYRtPs4ShhzwutA5ngSwqFT?=
 =?us-ascii?q?4CsCSPEx0CLYrt9oqk+luuKIxjduTQBJsD8Ng5iE+Q1oK7rQ8JZoUnbe+xcM8G?=
 =?us-ascii?q?DWDA4F45NuDdnuveZTy97AvKn6LjBE8tnd+Y0XAM2QYMuGKn4gPBbBHD/SERtD?=
 =?us-ascii?q?TDPvfWPEjkpemdmZ8XGYp4UgrYLl3p0URfsTVlcvEe4BB2xuG9APKYptWSkt17?=
 =?us-ascii?q?mBg4pA/2u3oBDPbM5dsp3OS+iVG/ypLyyWyfFeYBEEyrfxN4c7OYjy2kgkYV5/?=
 =?us-ascii?q?2MzOGkzNTfhEuChlbwkpsANK6nc4U253k1n6YAS87FcYFeSzmx8rj015e+tpvC?=
 =?us-ascii?q?zv5FMzO1nXjCA3nEQ4hM/imznXdyT+aO+rUIhQEyPps2A6Mon8RgdoaEu1h0Mg?=
 =?us-ascii?q?fCvERr9Llaomb21niQnTkZRKEP9YC6ZDZUw+3/aSMsQh11tAoyLv4U4PsffED4?=
 =?us-ascii?q?okiwosfYy+h31F0gNnKtUyIPqDd+Jy0lFMi/fW7WeT3ecrzVpGKg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AgAAAPTwNch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUgYBAQsBgl2BDieMcIspUAEBBoFJiQuJMIR5gXYPAQEYEwGHdiI1CA0BAwE?=
 =?us-ascii?q?BAQEBAQIBEwEBAQoLCQgpIwyCNiKCbAIkGQEbHQEDAgkCBRA7Ax4CEQEFASMSB?=
 =?us-ascii?q?YMcgWkBAwgNBZgdPIwJFgUBF4J3BYEFAYMmChknDV2BNwIGEodbgxOBHIEPgQe?=
 =?us-ascii?q?BEYVpiAUCiTCFfnyPaC4HAg2OAYMjCxiBW4gANocUASyIWIVwiVIGAgkHDyGBJ?=
 =?us-ascii?q?gGCC3CBAYI7ghsMF4NKihxVIjKBAgMBASETjQgBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AgAAAPTwNch0O0hNFjHAEBAQQBAQcEAQGBUgYBAQsBgl2?=
 =?us-ascii?q?BDieMcIspUAEBBoFJiQuJMIR5gXYPAQEYEwGHdiI1CA0BAwEBAQEBAQIBEwEBA?=
 =?us-ascii?q?QoLCQgpIwyCNiKCbAIkGQEbHQEDAgkCBRA7Ax4CEQEFASMSBYMcgWkBAwgNBZg?=
 =?us-ascii?q?dPIwJFgUBF4J3BYEFAYMmChknDV2BNwIGEodbgxOBHIEPgQeBEYVpiAUCiTCFf?=
 =?us-ascii?q?nyPaC4HAg2OAYMjCxiBW4gANocUASyIWIVwiVIGAgkHDyGBJgGCC3CBAYI7ghs?=
 =?us-ascii?q?MF4NKihxVIjKBAgMBASETjQgBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,305,1539673200"; 
   d="scan'208";a="43158169"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 01 Dec 2018 19:23:13 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1725789AbeLBDTR (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sat, 1 Dec 2018 22:19:17 -0500
Received: from mail-pg1-f193.google.com ([209.85.215.193]:41823 "EHLO
        mail-pg1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725290AbeLBDTR (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 1 Dec 2018 22:19:17 -0500
Received: by mail-pg1-f193.google.com with SMTP id 70so4187242pgh.8;
        Sat, 01 Dec 2018 19:19:15 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id;
        bh=JbMipT4beD2NxGSzj++LCMz3H0vLVY/MGpnwAsfx8OY=;
        b=Qgy+jXGtpmAln9LEKKfN9x1G5nwBm/NF0sf+V5R67RP73bub8Rl2bw7eJIwx996btR
         7oxaMnoIk9QI2zHOFx5JKZgFKgkuqFKBibaODLwziRu67Ybffxmv+1P6jTJ3UV+uX69I
         9N3Q5YTG5AQBFiFtjze/uqjzjFB8MZEiQYYOEBtOkSqWGWlEw92/yMVfOnyT0IvdhAoV
         3bhAKA7FSKfQqIzfgtFML5P5apd8QKYXeSgzfVwz2a+8lAn8RqNw8CQ/cphp9n4EXOMN
         5Dryk76QOhUEJpyOdFF+MvTDpNC5eb8szLl8a5W1ZdU+5W4MfT/1WY+JNkEwOeHeseOu
         bCoA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id;
        bh=JbMipT4beD2NxGSzj++LCMz3H0vLVY/MGpnwAsfx8OY=;
        b=Cf9mXL+ARluobLydgWh8dkBDUpg4Ly67yKtohmAbIqdgyCJEysC8VPR9a99IqyVvkc
         YlQWdGF9BFP277ycu3IWNh+9oCSikjcaXwCQY7WHFG/CTXYkJZdKx5SOVarNOHHKZxP+
         jjmK19UU5jmP39JC9fbMfCAugsvpUnW4Q9XRBFqn+jHYUFYAD94k7qkRxacmtVp8WeL9
         Q7EJ7tz4h3R18SfgZE9kx72I6WjPvhiKnPhJsSyvCyt9DbjL9Q2LsbSe+Wflp+nwIDR4
         y9luvFGbkNGwswIlMKku2+M9HBmAQR/eggRYOJPJkc5kOCoCQTsvk2U/2vCjid4d/sxu
         bZ9g==
X-Gm-Message-State: AA+aEWbDNO7v9HzRZbnjLP2Yhn1q1863rcx5lOOc6uuxGFlNZ4L/lurL
        zGUnMZs/xK89qWSx3PdtJPk=
X-Google-Smtp-Source: AFSGD/Xdzs/DiinMbbWtxQxcyIKN9aTXJLrN2ifuZH7zkg1MZNHubbiHONLIlaspziCfIUXtSttN4w==
X-Received: by 2002:a62:178f:: with SMTP id 137mr11100855pfx.226.1543720754730;
        Sat, 01 Dec 2018 19:19:14 -0800 (PST)
Received: from localhost (68.168.130.77.16clouds.com. [68.168.130.77])
        by smtp.gmail.com with ESMTPSA id z7sm20538115pga.6.2018.12.01.19.19.13
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Sat, 01 Dec 2018 19:19:13 -0800 (PST)
From: Yangtao Li <tiny.windzz@gmail.com>
To: arnd@arndb.de, abhinavk@codeaurora.org, bzwang@chromium.org,
        colin.king@canonical.com, airlied@linux.ie, jsanka@codeaurora.org,
        jcrouse@codeaurora.org, ryadav@codeaurora.org, robdclark@gmail.com,
        linux@armlinux.org.uk, swboyd@chromium.org,
        skolluku@codeaurora.org, seanpaul@chromium.org,
        thierry.reding@gmail.com
Cc: linux-kernel@vger.kernel.org, linux-arm-msm@vger.kernel.org,
        dri-devel@lists.freedesktop.org, freedreno@lists.freedesktop.org,
        linux-tegra@vger.kernel.org, Yangtao Li <tiny.windzz@gmail.com>
Subject: [PATCH] gpu/drm: remove DEFINE_DPU_DEBUGFS_SEQ_FOPS()
Date: Sat,  1 Dec 2018 22:19:11 -0500
Message-Id: <20181202031912.9736-1-tiny.windzz@gmail.com>
X-Mailer: git-send-email 2.17.0
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

We already have the DEFINE_SHOW_ATTRIBUTE.There is no need to define
such a macro separately,so remove DEFINE_DPU_DEBUGFS_SEQ_FOPS.
Also use DEFINE_SHOW_ATTRIBUTE to simplify some code.

Signed-off-by: Yangtao Li <tiny.windzz@gmail.com>
---
 drivers/gpu/drm/armada/armada_debugfs.c      | 21 ++++--------
 drivers/gpu/drm/msm/disp/dpu1/dpu_core_irq.c | 14 +-------
 drivers/gpu/drm/msm/disp/dpu1/dpu_crtc.c     | 33 +++---------------
 drivers/gpu/drm/msm/disp/dpu1/dpu_encoder.c  | 17 ++-------
 drivers/gpu/drm/msm/disp/dpu1/dpu_kms.c      | 36 ++++----------------
 drivers/gpu/host1x/debug.c                   | 34 ++++--------------
 6 files changed, 29 insertions(+), 126 deletions(-)

diff --git a/drivers/gpu/drm/armada/armada_debugfs.c b/drivers/gpu/drm/armada/armada_debugfs.c
index 6758c3a83de2..64dccb7c8be2 100644
--- a/drivers/gpu/drm/armada/armada_debugfs.c
+++ b/drivers/gpu/drm/armada/armada_debugfs.c
@@ -28,7 +28,7 @@ static int armada_debugfs_gem_linear_show(struct seq_file *m, void *data)
 	return 0;
 }
 
-static int armada_debugfs_reg_show(struct seq_file *m, void *data)
+static int reg_show(struct seq_file *m, void *data)
 {
 	struct drm_device *dev = m->private;
 	struct armada_private *priv = dev->dev_private;
@@ -50,18 +50,7 @@ static int armada_debugfs_reg_show(struct seq_file *m, void *data)
 	return 0;
 }
 
-static int armada_debugfs_reg_r_open(struct inode *inode, struct file *file)
-{
-	return single_open(file, armada_debugfs_reg_show, inode->i_private);
-}
-
-static const struct file_operations fops_reg_r = {
-	.owner = THIS_MODULE,
-	.open = armada_debugfs_reg_r_open,
-	.read = seq_read,
-	.llseek = seq_lseek,
-	.release = single_release,
-};
+DEFINE_SHOW_ATTRIBUTE(reg);
 
 static int armada_debugfs_write(struct file *file, const char __user *ptr,
 	size_t len, loff_t *off)
@@ -119,12 +108,14 @@ int armada_drm_debugfs_init(struct drm_minor *minor)
 		return ret;
 
 	de = debugfs_create_file("reg", S_IFREG | S_IRUSR,
-				 minor->debugfs_root, minor->dev, &fops_reg_r);
+				 minor->debugfs_root, minor->dev,
+				 &reg_fops);
 	if (!de)
 		return -ENOMEM;
 
 	de = debugfs_create_file("reg_wr", S_IFREG | S_IWUSR,
-				 minor->debugfs_root, minor->dev, &fops_reg_w);
+				 minor->debugfs_root, minor->dev,
+				 &fops_reg_w);
 	if (!de)
 		return -ENOMEM;
 
diff --git a/drivers/gpu/drm/msm/disp/dpu1/dpu_core_irq.c b/drivers/gpu/drm/msm/disp/dpu1/dpu_core_irq.c
index 879c13fe74e0..7607aac9449c 100644
--- a/drivers/gpu/drm/msm/disp/dpu1/dpu_core_irq.c
+++ b/drivers/gpu/drm/msm/disp/dpu1/dpu_core_irq.c
@@ -299,18 +299,6 @@ static void dpu_disable_all_irqs(struct dpu_kms *dpu_kms)
 }
 
 #ifdef CONFIG_DEBUG_FS
-#define DEFINE_DPU_DEBUGFS_SEQ_FOPS(__prefix)				\
-static int __prefix ## _open(struct inode *inode, struct file *file)	\
-{									\
-	return single_open(file, __prefix ## _show, inode->i_private);	\
-}									\
-static const struct file_operations __prefix ## _fops = {		\
-	.owner = THIS_MODULE,						\
-	.open = __prefix ## _open,					\
-	.release = single_release,					\
-	.read = seq_read,						\
-	.llseek = seq_lseek,						\
-}
 
 static int dpu_debugfs_core_irq_show(struct seq_file *s, void *v)
 {
@@ -341,7 +329,7 @@ static int dpu_debugfs_core_irq_show(struct seq_file *s, void *v)
 	return 0;
 }
 
-DEFINE_DPU_DEBUGFS_SEQ_FOPS(dpu_debugfs_core_irq);
+DEFINE_SHOW_ATTRIBUTE(dpu_debugfs_core_irq);
 
 int dpu_debugfs_core_irq_init(struct dpu_kms *dpu_kms,
 		struct dentry *parent)
diff --git a/drivers/gpu/drm/msm/disp/dpu1/dpu_crtc.c b/drivers/gpu/drm/msm/disp/dpu1/dpu_crtc.c
index d4530d60767b..e705bad980ee 100644
--- a/drivers/gpu/drm/msm/disp/dpu1/dpu_crtc.c
+++ b/drivers/gpu/drm/msm/disp/dpu1/dpu_crtc.c
@@ -1309,7 +1309,7 @@ int dpu_crtc_vblank(struct drm_crtc *crtc, bool en)
 }
 
 #ifdef CONFIG_DEBUG_FS
-static int _dpu_debugfs_status_show(struct seq_file *s, void *data)
+static int status_show(struct seq_file *s, void *data)
 {
 	struct dpu_crtc *dpu_crtc;
 	struct dpu_plane_state *pstate = NULL;
@@ -1428,24 +1428,6 @@ static int _dpu_debugfs_status_show(struct seq_file *s, void *data)
 	return 0;
 }
 
-static int _dpu_debugfs_status_open(struct inode *inode, struct file *file)
-{
-	return single_open(file, _dpu_debugfs_status_show, inode->i_private);
-}
-
-#define DEFINE_DPU_DEBUGFS_SEQ_FOPS(__prefix)                          \
-static int __prefix ## _open(struct inode *inode, struct file *file)	\
-{									\
-	return single_open(file, __prefix ## _show, inode->i_private);	\
-}									\
-static const struct file_operations __prefix ## _fops = {		\
-	.owner = THIS_MODULE,						\
-	.open = __prefix ## _open,					\
-	.release = single_release,					\
-	.read = seq_read,						\
-	.llseek = seq_lseek,						\
-}
-
 static int dpu_crtc_debugfs_state_show(struct seq_file *s, void *v)
 {
 	struct drm_crtc *crtc = (struct drm_crtc *) s->private;
@@ -1468,20 +1450,15 @@ static int dpu_crtc_debugfs_state_show(struct seq_file *s, void *v)
 
 	return 0;
 }
-DEFINE_DPU_DEBUGFS_SEQ_FOPS(dpu_crtc_debugfs_state);
+
+DEFINE_SHOW_ATTRIBUTE(dpu_crtc_debugfs_state);
+DEFINE_SHOW_ATTRIBUTE(status);
 
 static int _dpu_crtc_init_debugfs(struct drm_crtc *crtc)
 {
 	struct dpu_crtc *dpu_crtc;
 	struct dpu_kms *dpu_kms;
 
-	static const struct file_operations debugfs_status_fops = {
-		.open =		_dpu_debugfs_status_open,
-		.read =		seq_read,
-		.llseek =	seq_lseek,
-		.release =	single_release,
-	};
-
 	if (!crtc)
 		return -EINVAL;
 	dpu_crtc = to_dpu_crtc(crtc);
@@ -1496,7 +1473,7 @@ static int _dpu_crtc_init_debugfs(struct drm_crtc *crtc)
 	/* don't error check these */
 	debugfs_create_file("status", 0400,
 			dpu_crtc->debugfs_root,
-			dpu_crtc, &debugfs_status_fops);
+			dpu_crtc, &status_fops);
 	debugfs_create_file("state", 0600,
 			dpu_crtc->debugfs_root,
 			&dpu_crtc->base,
diff --git a/drivers/gpu/drm/msm/disp/dpu1/dpu_encoder.c b/drivers/gpu/drm/msm/disp/dpu1/dpu_encoder.c
index 96cdf06e7da2..a36f9f72da87 100644
--- a/drivers/gpu/drm/msm/disp/dpu1/dpu_encoder.c
+++ b/drivers/gpu/drm/msm/disp/dpu1/dpu_encoder.c
@@ -1873,7 +1873,7 @@ void dpu_encoder_prepare_commit(struct drm_encoder *drm_enc)
 }
 
 #ifdef CONFIG_DEBUG_FS
-static int _dpu_encoder_status_show(struct seq_file *s, void *data)
+static int status_show(struct seq_file *s, void *data)
 {
 	struct dpu_encoder_virt *dpu_enc;
 	int i;
@@ -1912,11 +1912,7 @@ static int _dpu_encoder_status_show(struct seq_file *s, void *data)
 	return 0;
 }
 
-static int _dpu_encoder_debugfs_status_open(struct inode *inode,
-		struct file *file)
-{
-	return single_open(file, _dpu_encoder_status_show, inode->i_private);
-}
+DEFINE_SHOW_ATTRIBUTE(status);
 
 static int _dpu_encoder_init_debugfs(struct drm_encoder *drm_enc)
 {
@@ -1925,13 +1921,6 @@ static int _dpu_encoder_init_debugfs(struct drm_encoder *drm_enc)
 	struct dpu_kms *dpu_kms;
 	int i;
 
-	static const struct file_operations debugfs_status_fops = {
-		.open =		_dpu_encoder_debugfs_status_open,
-		.read =		seq_read,
-		.llseek =	seq_lseek,
-		.release =	single_release,
-	};
-
 	char name[DPU_NAME_SIZE];
 
 	if (!drm_enc || !drm_enc->dev || !drm_enc->dev->dev_private) {
@@ -1953,7 +1942,7 @@ static int _dpu_encoder_init_debugfs(struct drm_encoder *drm_enc)
 
 	/* don't error check these */
 	debugfs_create_file("status", 0600,
-		dpu_enc->debugfs_root, dpu_enc, &debugfs_status_fops);
+		dpu_enc->debugfs_root, dpu_enc, &status_fops);
 
 	for (i = 0; i < dpu_enc->num_phys_encs; i++)
 		if (dpu_enc->phys_encs[i] &&
diff --git a/drivers/gpu/drm/msm/disp/dpu1/dpu_kms.c b/drivers/gpu/drm/msm/disp/dpu1/dpu_kms.c
index 0a683e65a9f3..c3f036095c53 100644
--- a/drivers/gpu/drm/msm/disp/dpu1/dpu_kms.c
+++ b/drivers/gpu/drm/msm/disp/dpu1/dpu_kms.c
@@ -113,30 +113,19 @@ static int _dpu_danger_signal_status(struct seq_file *s,
 	return 0;
 }
 
-#define DEFINE_DPU_DEBUGFS_SEQ_FOPS(__prefix)				\
-static int __prefix ## _open(struct inode *inode, struct file *file)	\
-{									\
-	return single_open(file, __prefix ## _show, inode->i_private);	\
-}									\
-static const struct file_operations __prefix ## _fops = {		\
-	.owner = THIS_MODULE,						\
-	.open = __prefix ## _open,					\
-	.release = single_release,					\
-	.read = seq_read,						\
-	.llseek = seq_lseek,						\
-}
-
 static int dpu_debugfs_danger_stats_show(struct seq_file *s, void *v)
 {
 	return _dpu_danger_signal_status(s, true);
 }
-DEFINE_DPU_DEBUGFS_SEQ_FOPS(dpu_debugfs_danger_stats);
+
+DEFINE_SHOW_ATTRIBUTE(dpu_debugfs_danger_stats);
 
 static int dpu_debugfs_safe_stats_show(struct seq_file *s, void *v)
 {
 	return _dpu_danger_signal_status(s, false);
 }
-DEFINE_DPU_DEBUGFS_SEQ_FOPS(dpu_debugfs_safe_stats);
+
+DEFINE_SHOW_ATTRIBUTE(dpu_debugfs_safe_stats);
 
 static void dpu_debugfs_danger_destroy(struct dpu_kms *dpu_kms)
 {
@@ -162,7 +151,7 @@ static int dpu_debugfs_danger_init(struct dpu_kms *dpu_kms,
 	return 0;
 }
 
-static int _dpu_debugfs_show_regset32(struct seq_file *s, void *data)
+static int dpu_regset32_show(struct seq_file *s, void *data)
 {
 	struct dpu_debugfs_regset32 *regset;
 	struct dpu_kms *dpu_kms;
@@ -212,18 +201,7 @@ static int _dpu_debugfs_show_regset32(struct seq_file *s, void *data)
 	return 0;
 }
 
-static int dpu_debugfs_open_regset32(struct inode *inode,
-		struct file *file)
-{
-	return single_open(file, _dpu_debugfs_show_regset32, inode->i_private);
-}
-
-static const struct file_operations dpu_fops_regset32 = {
-	.open =		dpu_debugfs_open_regset32,
-	.read =		seq_read,
-	.llseek =	seq_lseek,
-	.release =	single_release,
-};
+DEFINE_SHOW_ATTRIBUTE(dpu_regset32);
 
 void dpu_debugfs_setup_regset32(struct dpu_debugfs_regset32 *regset,
 		uint32_t offset, uint32_t length, struct dpu_kms *dpu_kms)
@@ -245,7 +223,7 @@ void *dpu_debugfs_create_regset32(const char *name, umode_t mode,
 	regset->offset = round_down(regset->offset, 4);
 
 	return debugfs_create_file(name, mode, parent,
-			regset, &dpu_fops_regset32);
+			regset, &dpu_regset32_fops);
 }
 
 static int _dpu_debugfs_init(struct dpu_kms *dpu_kms)
diff --git a/drivers/gpu/host1x/debug.c b/drivers/gpu/host1x/debug.c
index 329e4a3d8ae7..de7f020e2932 100644
--- a/drivers/gpu/host1x/debug.c
+++ b/drivers/gpu/host1x/debug.c
@@ -119,7 +119,7 @@ static void show_all(struct host1x *m, struct output *o, bool show_fifo)
 	}
 }
 
-static int host1x_debug_show_all(struct seq_file *s, void *unused)
+static int host1x_all_show(struct seq_file *s, void *unused)
 {
 	struct output o = {
 		.fn = write_to_seqfile,
@@ -131,7 +131,7 @@ static int host1x_debug_show_all(struct seq_file *s, void *unused)
 	return 0;
 }
 
-static int host1x_debug_show(struct seq_file *s, void *unused)
+static int host1x_show(struct seq_file *s, void *unused)
 {
 	struct output o = {
 		.fn = write_to_seqfile,
@@ -143,29 +143,8 @@ static int host1x_debug_show(struct seq_file *s, void *unused)
 	return 0;
 }
 
-static int host1x_debug_open_all(struct inode *inode, struct file *file)
-{
-	return single_open(file, host1x_debug_show_all, inode->i_private);
-}
-
-static const struct file_operations host1x_debug_all_fops = {
-	.open = host1x_debug_open_all,
-	.read = seq_read,
-	.llseek = seq_lseek,
-	.release = single_release,
-};
-
-static int host1x_debug_open(struct inode *inode, struct file *file)
-{
-	return single_open(file, host1x_debug_show, inode->i_private);
-}
-
-static const struct file_operations host1x_debug_fops = {
-	.open = host1x_debug_open,
-	.read = seq_read,
-	.llseek = seq_lseek,
-	.release = single_release,
-};
+DEFINE_SHOW_ATTRIBUTE(host1x_all);
+DEFINE_SHOW_ATTRIBUTE(host1x);
 
 static void host1x_debugfs_init(struct host1x *host1x)
 {
@@ -177,9 +156,10 @@ static void host1x_debugfs_init(struct host1x *host1x)
 	/* Store the created entry */
 	host1x->debugfs = de;
 
-	debugfs_create_file("status", S_IRUGO, de, host1x, &host1x_debug_fops);
+	debugfs_create_file("status", S_IRUGO, de, host1x,
+			   &host1x_fops);
 	debugfs_create_file("status_all", S_IRUGO, de, host1x,
-			    &host1x_debug_all_fops);
+			    &host1x_all_fops);
 
 	debugfs_create_u32("trace_cmdbuf", S_IRUGO|S_IWUSR, de,
 			   &host1x_debug_trace_cmdbuf);
-- 
2.17.0

