Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 29 Nov 2018 08:37:14 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 922515802E4;
	Wed, 28 Nov 2018 06:35:47 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga001-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 28 Nov 2018 06:35:47 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Ap59ipBWowqv883DWl3wFg1siWbnV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhGHvKdThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmTgLjhi?=
 =?us-ascii?q?UaOD4j6GzZitJ+gr9VrhympRN/zYHbbo6WOvplZqPQf8gXSXZCU8tLSyBMGJ+w?=
 =?us-ascii?q?Y5cJAuEcPehYtY79p14WoBewGQSsAv3gxSFThn/2wKY01vkhEQTc0ww6AtkAtW?=
 =?us-ascii?q?7Yo9r7OKwPVu261q/IwivdYPNN2Tfx8ovIcg0kof6WR7J9as7RyUgpFwPYgVSc?=
 =?us-ascii?q?s43lMCiQ1ugXr2eb6O9gWPuphmU6qA9xuiCiytkwhoTNnI4Z117J+TtjzIooJt?=
 =?us-ascii?q?C0VFR3bN+mHZdIsyyWLYh7T8M4T2xruis20KMKtJ61cSUM1Z8p3QTQa+adfIiN?=
 =?us-ascii?q?+h/jVPieITN/hH99ZrK/iAi98VK6xu3/SMa0ylBKoTRBktXWsXANzRPT5tCGSv?=
 =?us-ascii?q?t74EihxS6C2x7P5uxAO0w4iKTWJ4A7zrItlZcfrV7PEy70lUnuia+ZbEQk+uym?=
 =?us-ascii?q?6+T9ZbXmo4eRN4t1igH4L6QvldWzAecmPQgUWWiU5+C82KTk/Uz3RrVFkOc2n7?=
 =?us-ascii?q?LHsJDVO8sbvLS1AwxL3YY57RawETOm3M4fnXkdI1JJYAiHgJTxO1HSPPD4Cu+y?=
 =?us-ascii?q?g1CtkDdo2f/KJLLgAojWI3jHkbfhe6t96kFGxAoyy9Bf+4xbCrUbLP3vXU/xsc?=
 =?us-ascii?q?TSDgUlPAys3+bnFNJ925seWW2VA6+ZLLndsViS6uIvPumDfokVuDnmJvgh5v7u?=
 =?us-ascii?q?i2I5mFAHcamo25sXdG63HvB8L0qFZnrsh88LEX0WsQomUOzqlFqCXCZRZ3a1Qa?=
 =?us-ascii?q?0w/DI7CIWgDYfFQYCgm7iB3Ca9Hp1LaWFKEFGMEXH0d4qaX/cAcj6dIshkkjYc?=
 =?us-ascii?q?T7iuV5ch1Q2ytA/907doNPHU+i0ftZLgztR1/ffclRMp+DxwDsSd1XyNTm5ukm?=
 =?us-ascii?q?MJQT82wL5woUhnxlif1qh4huRSFcZP6PNRTgc6KZncwvR5C9/oXALNZNOJSFe8?=
 =?us-ascii?q?TdWgDjE8VdYxw94IY0ZgFNSulBHD3yy2A7ALk7yHHoA78qXZ33LpPcZy127G1L?=
 =?us-ascii?q?U9j1khWsZAKHephrBh+ATJB47GiUOZl720eqQa2yLN8GSDzW+KvExDVA5wUKPF?=
 =?us-ascii?q?XW0QZ0fMrNT54F/CQKGqCbg9LgRBzsuCILNQatL1lVVGWOvjONPGbm2sgWiwGw?=
 =?us-ascii?q?iHyqmMbIXwfWUdxzvSCE4fngAX/HaGMxU+Byi7r2LfCjxuCUzgY0f2/eZir3O7?=
 =?us-ascii?q?S1c+zxuWYE15y7q15hkViOSAS/MS27IEvzshqzV0HVqnw9LaEd2ApxBlfKVdZ9?=
 =?us-ascii?q?M970xK1WbYtwx7I5yhILpuhl8YcwRroUzu0w97BZlHkcgvtHkq1hZ9KbqE0FNd?=
 =?us-ascii?q?cDOVxYr/OrnJJWj94h+ua7Ta1UrD0NmL4KgP7vc4q1L9vAyyEkoi8nNn08Ra0n?=
 =?us-ascii?q?eG55XKChYSXoz1Ukot6xd6oLTaaDEn54zIzX1sLbW0sjja1tMpGesp0Aqvc81e?=
 =?us-ascii?q?MaOEDgDyFcIaCtOqKOwrnVipcx0FMPpT9K4yI8Opaf+G1LS3M+ZnmTKslX5H75?=
 =?us-ascii?q?xl0kKQ6yp8TfbF34wEw/6ExASHTSrzjFC7vsDxh49EfzASEnOjxif+AI5ee7N9?=
 =?us-ascii?q?fZwMCWeoOMC3wtR+h5jwW39X7lKjBlUG2NO3dhqWdVDywQpQ1UEPq3y9hSS41y?=
 =?us-ascii?q?B0ky0urqeH3C3Owv7udRodNm5QWWlii0zhIYy1j9AcQUipYBIllBqj5Ubm2adb?=
 =?us-ascii?q?oL5zIHXUQUdNZyL2NX1tUrOstrqeZM5C8JEovj9NUOS/YlCaTaTxowAA3CPgHG?=
 =?us-ascii?q?texTY7eC+supjimxx6iWSdLGt8rXbDeMFwwwvf68LYRfJLwjUGQyx4gyHNBleg?=
 =?us-ascii?q?J9mp4cmUl5Dbv+G+TW2hUYdfcSvqzYOGrya74WxqARuin/G8gNHnEA460TPl2N?=
 =?us-ascii?q?luTynHsBH8Yozz3aSgLe1nZlVoBEP768diGYFxiIowiIsQ2XgHnJqV+3UHnHz3?=
 =?us-ascii?q?MdVa36L+cXUMSSQKw97T/AjqxkljImiVyIL+U3WX2tFhaMWiYmMKxiI96NhHCK?=
 =?us-ascii?q?KV7LxHhyR5uFS5ohzKYfhhgDgd0+Ah52AAg+EGowctyiSdArYPHUhXJyDslhKI?=
 =?us-ascii?q?78ygo6VTfmqgbb+w1E9ml9C7EL6Cuh1cWGr+epo6AS9w6cB/PEjN0XLp7IHkZc?=
 =?us-ascii?q?LQbckSthCPlxfAju5VKI8+l/YQhCpnP379smMhy+IhkRNu2pS6tpCdK2px5KK5?=
 =?us-ascii?q?HgJYNjrtaswI4D7tiqJentuM04CrA5VsATELXJruTfK1HzMer/XnNwCSEDIirn?=
 =?us-ascii?q?eXA6bQHQia6E1+tXLAD4irN22LJHke1dhiRgOSJElBjwAPRjk6goQ1FgO3xMzi?=
 =?us-ascii?q?bUd54Coe5kXjpxtIy+JoMQT/U2jFqAepbDc0VIaQLB5M4g5e4EfVNNSU7vhvEC?=
 =?us-ascii?q?FA4p2hsAuNJ3SbZgRPEGEJQ1GECErlPrW0/tnA9O6YBuWlIvvKYLWOr/FeVviS?=
 =?us-ascii?q?yZKu1Itm4yiDNsGVMnZ+CP0731JJXWplFMTBhzUPVysXmjrNb8GFpRe8+S53rs?=
 =?us-ascii?q?Gl/PToQgLv4oSPBKVIMdVy4BC7mqODN++WhCZkJjdUzJIMxXnUyLcB2F4ekT1h?=
 =?us-ascii?q?dz6oEb4Yry7CULrQmrNLDx4ccy58LtZI4Lkm3gZTOc/XkNf11r9jg/4xCldFU0?=
 =?us-ascii?q?Hhm86zacwLJWG9KE3IBEKROLuaIj3Lxtn9YbmgRr1IkOVUqxqwtC6HE0/iOzSP?=
 =?us-ascii?q?jSXmWwqzPuFMki6bOgdTuIW8chZrFGjiQ8jqahy9MN9rkzI2xac4iW/NNW4ZKT?=
 =?us-ascii?q?J8aV9CrqWM7SNEhfVyA2xA4WBjLemBmiaZ6fHXK5cWsfRxBCR0mPlX4HA7y7tT?=
 =?us-ascii?q?8SFFS+Z5mCrUrt5yvV6mlvODxSZgUBpL+X53g9eCvl1nEaHY8IRQHHjD4RQB5H?=
 =?us-ascii?q?mRDBJMoMFqTpXqo614x9zLmbj2ITEE8t6S9NZYT8LZLsKvM3c7NxftXjXOBRAF?=
 =?us-ascii?q?TDikc2bFiAgViPiP8mCOhoMzr5Ll3p0URex1TlswQ7kzDEloB9xKA4pyVylssv?=
 =?us-ascii?q?ilxoZc7HyzoQLRAsZHu5ndfvaTB+j/bjeTiP9PYB5ekuCwFpgaKoCugx8qUVJ9?=
 =?us-ascii?q?homfQ0c=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AZAAB4p/5bh0O0hNFkHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGDayeMEV+LKoIhaJZGgXMSAQEYEwGHbiI0CQ0BAwEBAQEBAQIBEwEBAQg?=
 =?us-ascii?q?NCQgpL4I2IoJlAgEDAQIPFQsBRgYJAQE+EgNUBwoIBR2Cf4ICAwKbfIlYAQEBg?=
 =?us-ascii?q?WozijyHa4QrgVc/gRGCXQeFIoVoAokFIAEyhkKQAQcCApEkCxiBWo87iHaBA44?=
 =?us-ascii?q?oAgQGBQITAYFGgg1wgzyCJgEXjiVqAYEEAQGKaIJLAQE?=
X-IPAS-Result: =?us-ascii?q?A0AZAAB4p/5bh0O0hNFkHQEBBQEHBQGBUQgBCwGDayeMEV+?=
 =?us-ascii?q?LKoIhaJZGgXMSAQEYEwGHbiI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpL4I2IoJlA?=
 =?us-ascii?q?gEDAQIPFQsBRgYJAQE+EgNUBwoIBR2Cf4ICAwKbfIlYAQEBgWozijyHa4QrgVc?=
 =?us-ascii?q?/gRGCXQeFIoVoAokFIAEyhkKQAQcCApEkCxiBWo87iHaBA44oAgQGBQITAYFGg?=
 =?us-ascii?q?g1wgzyCJgEXjiVqAYEEAQGKaIJLAQE?=
X-IronPort-AV: E=Sophos;i="5.56,290,1539673200"; 
   d="scan'208";a="54671370"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 28 Nov 2018 06:35:45 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728874AbeK2BhG (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 28 Nov 2018 20:37:06 -0500
Received: from mx0a-001b2d01.pphosted.com ([148.163.156.1]:36396 "EHLO
        mx0a-001b2d01.pphosted.com" rhost-flags-OK-OK-OK-OK)
        by vger.kernel.org with ESMTP id S1727726AbeK2BhG (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 28 Nov 2018 20:37:06 -0500
Received: from pps.filterd (m0098396.ppops.net [127.0.0.1])
        by mx0a-001b2d01.pphosted.com (8.16.0.22/8.16.0.22) with SMTP id wASEYIEu113979
        for <linux-kernel@vger.kernel.org>; Wed, 28 Nov 2018 09:35:13 -0500
Received: from e34.co.us.ibm.com (e34.co.us.ibm.com [32.97.110.152])
        by mx0a-001b2d01.pphosted.com with ESMTP id 2p1tf6q9r1-1
        (version=TLSv1.2 cipher=AES256-GCM-SHA384 bits=256 verify=NOT)
        for <linux-kernel@vger.kernel.org>; Wed, 28 Nov 2018 09:35:13 -0500
Received: from localhost
        by e34.co.us.ibm.com with IBM ESMTP SMTP Gateway: Authorized Use Only! Violators will be prosecuted
        for <linux-kernel@vger.kernel.org> from <aneesh.kumar@linux.ibm.com>;
        Wed, 28 Nov 2018 14:35:12 -0000
Received: from b03cxnp08028.gho.boulder.ibm.com (9.17.130.20)
        by e34.co.us.ibm.com (192.168.1.134) with IBM ESMTP SMTP Gateway: Authorized Use Only! Violators will be prosecuted;
        (version=TLSv1/SSLv3 cipher=AES256-GCM-SHA384 bits=256/256)
        Wed, 28 Nov 2018 14:35:09 -0000
Received: from b03ledav001.gho.boulder.ibm.com (b03ledav001.gho.boulder.ibm.com [9.17.130.232])
        by b03cxnp08028.gho.boulder.ibm.com (8.14.9/8.14.9/NCO v10.0) with ESMTP id wASEZ8jH9699448
        (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=FAIL);
        Wed, 28 Nov 2018 14:35:08 GMT
Received: from b03ledav001.gho.boulder.ibm.com (unknown [127.0.0.1])
        by IMSVA (Postfix) with ESMTP id F41366E06B;
        Wed, 28 Nov 2018 14:35:07 +0000 (GMT)
Received: from b03ledav001.gho.boulder.ibm.com (unknown [127.0.0.1])
        by IMSVA (Postfix) with ESMTP id E0E746E053;
        Wed, 28 Nov 2018 14:35:04 +0000 (GMT)
Received: from skywalker.ibmuc.com (unknown [9.85.87.253])
        by b03ledav001.gho.boulder.ibm.com (Postfix) with ESMTP;
        Wed, 28 Nov 2018 14:35:04 +0000 (GMT)
From: "Aneesh Kumar K.V" <aneesh.kumar@linux.ibm.com>
To: akpm@linux-foundation.org, mpe@ellerman.id.au,
        benh@kernel.crashing.org, paulus@samba.org
Cc: linux-mm@kvack.org, linux-kernel@vger.kernel.org,
        linuxppc-dev@lists.ozlabs.org,
        "Aneesh Kumar K.V" <aneesh.kumar@linux.ibm.com>
Subject: [PATCH V2 3/5] arch/powerpc/mm: Nest MMU workaround for mprotect RW upgrade.
Date: Wed, 28 Nov 2018 20:04:36 +0530
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181128143438.29458-1-aneesh.kumar@linux.ibm.com>
References: <20181128143438.29458-1-aneesh.kumar@linux.ibm.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
X-TM-AS-GCONF: 00
x-cbid: 18112814-0016-0000-0000-0000095C37AC
X-IBM-SpamModules-Scores: 
X-IBM-SpamModules-Versions: BY=3.00010137; HX=3.00000242; KW=3.00000007;
 PH=3.00000004; SC=3.00000270; SDB=6.01124008; UDB=6.00583546; IPR=6.00904137;
 MB=3.00024366; MTD=3.00000008; XFM=3.00000015; UTC=2018-11-28 14:35:10
X-IBM-AV-DETECTION: SAVI=unused REMOTE=unused XFE=unused
x-cbparentid: 18112814-0017-0000-0000-000041381589
Message-Id: <20181128143438.29458-4-aneesh.kumar@linux.ibm.com>
X-Proofpoint-Virus-Version: vendor=fsecure engine=2.50.10434:,, definitions=2018-11-28_07:,,
 signatures=0
X-Proofpoint-Spam-Details: rule=outbound_notspam policy=outbound score=0 priorityscore=1501
 malwarescore=0 suspectscore=0 phishscore=0 bulkscore=0 spamscore=0
 clxscore=1015 lowpriorityscore=0 mlxscore=0 impostorscore=0
 mlxlogscore=842 adultscore=0 classifier=spam adjust=0 reason=mlx
 scancount=1 engine=8.0.1-1810050000 definitions=main-1811280129
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

NestMMU requires us to mark the pte invalid and flush the tlb when we do a
RW upgrade of pte. We fixed a variant of this in the fault path in commit
Fixes: bd5050e38aec ("powerpc/mm/radix: Change pte relax sequence to handle nest MMU hang")

Do the same for mprotect upgrades.

Hugetlb is handled in the next patch.

Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
---
 arch/powerpc/include/asm/book3s/64/pgtable.h | 18 +++++++++++++
 arch/powerpc/include/asm/book3s/64/radix.h   |  4 +++
 arch/powerpc/mm/pgtable-book3s64.c           | 27 ++++++++++++++++++++
 arch/powerpc/mm/pgtable-radix.c              | 18 +++++++++++++
 4 files changed, 67 insertions(+)

diff --git a/arch/powerpc/include/asm/book3s/64/pgtable.h b/arch/powerpc/include/asm/book3s/64/pgtable.h
index 2e6ada28da64..92eaea164700 100644
--- a/arch/powerpc/include/asm/book3s/64/pgtable.h
+++ b/arch/powerpc/include/asm/book3s/64/pgtable.h
@@ -1314,6 +1314,24 @@ static inline int pud_pfn(pud_t pud)
 	BUILD_BUG();
 	return 0;
 }
+#define __HAVE_ARCH_PTEP_MODIFY_PROT_TRANSACTION
+pte_t ptep_modify_prot_start(struct vm_area_struct *, unsigned long, pte_t *);
+void ptep_modify_prot_commit(struct vm_area_struct *, unsigned long,
+			     pte_t *, pte_t, pte_t);
+
+/*
+ * Returns true for a R -> RW upgrade of pte
+ */
+static inline bool is_pte_rw_upgrade(unsigned long old_val, unsigned long new_val)
+{
+	if (!(old_val & _PAGE_READ))
+		return false;
+
+	if ((!(old_val & _PAGE_WRITE)) && (new_val & _PAGE_WRITE))
+		return true;
+
+	return false;
+}
 
 #endif /* __ASSEMBLY__ */
 #endif /* _ASM_POWERPC_BOOK3S_64_PGTABLE_H_ */
diff --git a/arch/powerpc/include/asm/book3s/64/radix.h b/arch/powerpc/include/asm/book3s/64/radix.h
index 7d1a3d1543fc..5ab134eeed20 100644
--- a/arch/powerpc/include/asm/book3s/64/radix.h
+++ b/arch/powerpc/include/asm/book3s/64/radix.h
@@ -127,6 +127,10 @@ extern void radix__ptep_set_access_flags(struct vm_area_struct *vma, pte_t *ptep
 					 pte_t entry, unsigned long address,
 					 int psize);
 
+extern void radix__ptep_modify_prot_commit(struct vm_area_struct *vma,
+					   unsigned long addr, pte_t *ptep,
+					   pte_t old_pte, pte_t pte);
+
 static inline unsigned long __radix_pte_update(pte_t *ptep, unsigned long clr,
 					       unsigned long set)
 {
diff --git a/arch/powerpc/mm/pgtable-book3s64.c b/arch/powerpc/mm/pgtable-book3s64.c
index 9f93c9f985c5..3d126353b11e 100644
--- a/arch/powerpc/mm/pgtable-book3s64.c
+++ b/arch/powerpc/mm/pgtable-book3s64.c
@@ -482,3 +482,30 @@ void arch_report_meminfo(struct seq_file *m)
 		   atomic_long_read(&direct_pages_count[MMU_PAGE_1G]) << 20);
 }
 #endif /* CONFIG_PROC_FS */
+
+pte_t ptep_modify_prot_start(struct vm_area_struct *vma, unsigned long addr,
+			     pte_t *ptep)
+{
+	unsigned long pte_val;
+
+	/*
+	 * Clear the _PAGE_PRESENT so that no hardware parallel update is
+	 * possible. Also keep the pte_present true so that we don't take
+	 * wrong fault.
+	 */
+	pte_val = pte_update(vma->vm_mm, addr, ptep, _PAGE_PRESENT, _PAGE_INVALID, 0);
+
+	return __pte(pte_val);
+
+}
+EXPORT_SYMBOL(ptep_modify_prot_start);
+
+void ptep_modify_prot_commit(struct vm_area_struct *vma, unsigned long addr,
+			     pte_t *ptep, pte_t old_pte, pte_t pte)
+{
+	if (radix_enabled())
+		return radix__ptep_modify_prot_commit(vma, addr,
+						      ptep, old_pte, pte);
+	set_pte_at(vma->vm_mm, addr, ptep, pte);
+}
+EXPORT_SYMBOL(ptep_modify_prot_commit);
diff --git a/arch/powerpc/mm/pgtable-radix.c b/arch/powerpc/mm/pgtable-radix.c
index 931156069a81..14938186df5b 100644
--- a/arch/powerpc/mm/pgtable-radix.c
+++ b/arch/powerpc/mm/pgtable-radix.c
@@ -1063,3 +1063,21 @@ void radix__ptep_set_access_flags(struct vm_area_struct *vma, pte_t *ptep,
 	}
 	/* See ptesync comment in radix__set_pte_at */
 }
+
+void radix__ptep_modify_prot_commit(struct vm_area_struct *vma,
+				    unsigned long addr, pte_t *ptep,
+				    pte_t old_pte, pte_t pte)
+{
+	struct mm_struct *mm = vma->vm_mm;
+
+	/*
+	 * To avoid NMMU hang while relaxing access we need to flush the tlb before
+	 * we set the new value. We need to do this only for radix, because hash
+	 * translation does flush when updating the linux pte.
+	 */
+	if (is_pte_rw_upgrade(pte_val(old_pte), pte_val(pte)) &&
+	    (atomic_read(&mm->context.copros) > 0))
+		flush_tlb_page(vma, addr);
+
+	set_pte_at(mm, addr, ptep, pte);
+}
-- 
2.19.1

