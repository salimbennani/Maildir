Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 29 Nov 2018 18:16:50 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from FMSMGA003.fm.intel.com (fmsmga003.fm.intel.com [10.253.24.29])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 2A55B5803ED;
	Wed, 28 Nov 2018 22:03:27 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by FMSMGA003-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 28 Nov 2018 22:03:26 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ATJJF4x+MBakzgP9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1+8TIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CRWRPQNtfWSJCDI27?=
 =?us-ascii?q?bYQPAfEBPf5aooTmu1cCsQGzCRW2Ce/z1jNFgGL9060g0+QmFAHLxBEuEMgVsH?=
 =?us-ascii?q?TUttr+KaEcXv6rzKnJyzXIcvRb2Szn54jTchAuu/WMUKlzccXP00kvER3KjlGK?=
 =?us-ascii?q?pYziJTOV2f0Avm6G5ORjTeKik3Arpx11rzS128shhJfFipgIxl3H6Sl12oc4KN?=
 =?us-ascii?q?+gREN1Y9OoCoZcui6EO4dsQs4uWX9ktDo4x7AApJW1ZjIFyI49yB7ac/GHc5aH?=
 =?us-ascii?q?4hbkVOuJPzd4i2xqeKilixax70eg0Ov8Wdew0FpQqSpFiNbMumgM1xzV9MeHVu?=
 =?us-ascii?q?Nw8lm91TuLzQzf9+9JLV4umabGKJMt3qQ8m5sRvEjbGy/5gkT2jKuYdkU+/eio?=
 =?us-ascii?q?7vzqYrHnpp+aKo91hRjyMqcwlcylB+Q3LAwOU3Gc+eWy0r3s41f5Ta5Ujv05jK?=
 =?us-ascii?q?bZqorWJccFqa6jBQ9azIIj5wy4Dze839QUhWMHI05deBKbk4jpPEnDIPT5Dfe8?=
 =?us-ascii?q?nVugijhqx+3dM73lA5XNKGXDkbj7cbZ87U5c1BQ8zdRF651IDbEBJer5WlXtu9?=
 =?us-ascii?q?zAEh85Lwu0zv7nCNpn14MeRXiAAqiDPKPSrF+H/OQvI+aXaY8RuTb9LeUl5vH0?=
 =?us-ascii?q?gX84n18dYbem3Z8NZH+kGfRmJl2TYWDwjdcZDWcKog0+QfToiF2FTzFffXWyX6?=
 =?us-ascii?q?U65jE9D4KrFoPDRoGrgLyc0ya3BJxWZmZaCl+SFXfkbZmLW/AJaCiKOM9ujiQE?=
 =?us-ascii?q?VaS9S48mzRyhrhT6y7pgLurX4CEYr4js1Npu6u3XlBEy8yF0DsuH32GMSWF0gn?=
 =?us-ascii?q?0HRzss0K9jpkx9z0+J0bJkjPxACdxT+/RJXx85NZHGyex2EdTyWgPbcdePR1ar?=
 =?us-ascii?q?WdGmATA3TtIszN4CeUd9G9O+jh/d2yqmGaMal7uOBJYs6KLTw2DxJ9phy3bBzK?=
 =?us-ascii?q?QukkMpQtVROmG8hq5w7Q7TB5XXnEWfkKqqcacc3CvJ9GqYyWqOvUdYUBN/UKnf?=
 =?us-ascii?q?XHAfYFfWosr95k/YU7CuDrEnOBNbycGeMqtKdsHpjVJeSfj+ItvefXy+l32wBR?=
 =?us-ascii?q?mSwLOMd5Tle2MG0SXZCUgElR0T/HmcOQg/ACehv3zRDDh0GV3zZEPs9PF0qGmn?=
 =?us-ascii?q?QU8s0wGKc0ph2qKp+h4UgPycTO8T3rIEuSs7tzV4BlG938jSC9qBoQphc75RYd?=
 =?us-ascii?q?c84FdByGLYuBZxPp2mL6B+mFEedx57sF/p1xVyEo9Ai9QlrGs2zApuLqKVyElO?=
 =?us-ascii?q?dzeG0pH/JLLWKnP+8wuya6HLwF7e1tWW+qAR6Pkjr1XjvQepFlct8nl90tlV1W?=
 =?us-ascii?q?ec6YvODAYITZ3xVUM3/QBgp77Geik9+5/U1Xp0PKi0rz/Owc4mCPEkyxagZdhf?=
 =?us-ascii?q?NqyEGRT2E80bAciuNeMrl0KobhICIOBd6qo0M9m6ePuB3a6hJPxgky6+jWRb/I?=
 =?us-ascii?q?B91VqB9zB9SuHUxZkF2eyX3gydWzf6klihqMH3lZlYaj4IGmqw1DbrBJRWZq10?=
 =?us-ascii?q?ZosLDWauI8uqxtRxnZLtWnhY9EK9CFMCwsOmZR2Sb1nl1w1KyUsXuWCnmTe/zz?=
 =?us-ascii?q?FskzApr7CT3SzUz+T5aRoHPHVGRG1jjVfqPIi1gMoWXEmubwg1ihSl4Vz2yLRc?=
 =?us-ascii?q?pKR6N2PTW1tHfzDqL2F+Vau9rriCbNRV6JMrsiVXV/6wYUuARb7+oBsa0iXjEH?=
 =?us-ascii?q?VYxD0gczGqu5P5nwF1iW6HLXZzqmbZdt90xRvF+NPcQvtR1CIcRCZkkTnXGkS8?=
 =?us-ascii?q?P96x8NSUjZjDtfqyV2CgVp1VaiTryYKAtC2m5WxlGxG/nvazmsH5Hgg+yyP0y9?=
 =?us-ascii?q?5qVSDQphbmfobrz7i6Mf5gfkRwB1/z8ct6Fpt+kostnp4Q33cai46R/XoGl2fz?=
 =?us-ascii?q?LNpa1bj/bHoLWT4E3drV7BL5101kK3KD35j5WWmFwst9e9m6ZXsb2ic878BJEq?=
 =?us-ascii?q?iY9rJFkjVuolqksw3Re+NykSkHyfsh83Mah+AJuAwwziSSGLwSHE9YPTDymBSM?=
 =?us-ascii?q?9dyxsKJXZGO3e7iqyEV+hcyhDK2FogxERHb5fZIiETVx78plNlLMzWbz6prleN?=
 =?us-ascii?q?TLadITtxuUkwrPjuRPKZIxkOYKijRjOW7noXIlzOs7hwR03Z6mpIiHN3lt/KWh?=
 =?us-ascii?q?DxFDLDL1YMcT+iz3gaZag8abxISvHpRnGjUWU5rkV/OoEDQOtfv5MwaCCiEzqn?=
 =?us-ascii?q?CeGbDHBw+Q9F9mr27TE5CsL3yXJmMWzdB8SxmGPkBfnBoYXDYnnp46CwCqwtbu?=
 =?us-ascii?q?cFxi6zAV5174rAZMy+1yOxn+VGffuBmnajMuRJeDKxpW6xlI513JPsyG8uJzAy?=
 =?us-ascii?q?ZY84WhrQyKN2ybfhlIAnsPWkCeHFDjOb+u5dbb/uicB+q+KebOYLqUpexfUfeI?=
 =?us-ascii?q?2Yyg0o988zmQMcWPO2FoD+cn1UpbQXB5B8PZli0PSyMJliLNbM2bpBam9i10tM?=
 =?us-ascii?q?C/9/vrVxz15YuSELtfKtFv+xGwgaeeOO+cnid5KTBE1pwSwX/E0qQQ3FkXiyt2?=
 =?us-ascii?q?bTmiDawAtTLRTKLXgqJYFQMbZDhpNMRW76MwxA1NOc/Ah9Px1754iOM1ClhfWV?=
 =?us-ascii?q?zgnMGpedIFI2WnOFzbA0aLMayMJSfXzMHvfaO8VbpQgf1Itx2xvDaXCVPsMi6f?=
 =?us-ascii?q?mDnpSR+vN/pBjCWaPBxYpYG8fQxhCWnlTNL6dBK7NMV7giExwb0xnnnKL3ITMS?=
 =?us-ascii?q?Bgc0NRqb2d9SNZje95G2xE73plK/GLmieZ7+bCLJYWvuBmAiB1l+Jc/XQ7xKFZ?=
 =?us-ascii?q?7CBCRPxphiTSqsRirE2hkumKmXJbV09Vtj9BgI+jo0pvI+Pa+4NGVHKC+wgCqS?=
 =?us-ascii?q?2UChIXt55mB8fptqR41NfCjuTwJS1E/taS+tETVObOL8fSC3M6MROhPDPKDQ1N?=
 =?us-ascii?q?GSWiLmHWg2ReneuU+3nTqYI1/Mu/0KESQ6NWAQRmXsgRDV5oSZlbeM96?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AMAACwgP9bh0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2snjBGMCIINFJcugXEWGBMBh3AiNAkNAQMBAQEBAQECARMBAQE?=
 =?us-ascii?q?IDQkIKSMMgjYkAYJiAwMBAiQZAQE3AQUJAQEfMQNUBxIFgxyCAgQBpR2BbDOCd?=
 =?us-ascii?q?gEBBYcoCIdrgw+BHBeBQD+Of4khhn1QjzMJgiGPBgsYkRosiEuMI4MwgUaCDTM?=
 =?us-ascii?q?aCCgIgyeCG4kBhV0iMgGBBAEBimUpgiQBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AMAACwgP9bh0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?njBGMCIINFJcugXEWGBMBh3AiNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkA?=
 =?us-ascii?q?YJiAwMBAiQZAQE3AQUJAQEfMQNUBxIFgxyCAgQBpR2BbDOCdgEBBYcoCIdrgw+?=
 =?us-ascii?q?BHBeBQD+Of4khhn1QjzMJgiGPBgsYkRosiEuMI4MwgUaCDTMaCCgIgyeCG4kBh?=
 =?us-ascii?q?V0iMgGBBAEBimUpgiQBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,293,1539673200"; 
   d="scan'208";a="53795466"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 28 Nov 2018 22:03:25 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729690AbeK2RGm (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 29 Nov 2018 12:06:42 -0500
Received: from mail.kernel.org ([198.145.29.99]:43208 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1729641AbeK2RGl (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 29 Nov 2018 12:06:41 -0500
Received: from sasha-vm.mshome.net (unknown [37.142.5.207])
        (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id C6258213A2;
        Thu, 29 Nov 2018 06:02:27 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1543471350;
        bh=q+QxCI+Fxjshjm62J4/HS3sFKLsxZSYLxI+7C+9iChE=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=Q8dhGcxFK5NODs4iZUCgeNAQ6weYmesqmEt3AANh9mnAAygN+rKCA4xSHTAHV1rem
         sMTlpX9aNpgXWmBnWRFLtvQtE+m7iR5wY3pfpbKB2AqYodtwvs1YdRHO8bHwL27rUn
         S1iNIFgkLc81cD6DR6Au/bDQGW7HpiIx7skuC1zM=
From: Sasha Levin <sashal@kernel.org>
To: stable@vger.kernel.org, linux-kernel@vger.kernel.org
Cc: Chanho Min <chanho.min@lge.com>,
        "Rafael J . Wysocki" <rafael.j.wysocki@intel.com>,
        Sasha Levin <sashal@kernel.org>, linux-fsdevel@vger.kernel.org
Subject: [PATCH AUTOSEL 4.14 20/35] exec: make de_thread() freezable
Date: Thu, 29 Nov 2018 01:00:54 -0500
Message-Id: <20181129060110.159878-20-sashal@kernel.org>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20181129060110.159878-1-sashal@kernel.org>
References: <20181129060110.159878-1-sashal@kernel.org>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Chanho Min <chanho.min@lge.com>

[ Upstream commit c22397888f1eed98cd59f0a88f2a5f6925f80e15 ]

Suspend fails due to the exec family of functions blocking the freezer.
The casue is that de_thread() sleeps in TASK_UNINTERRUPTIBLE waiting for
all sub-threads to die, and we have the deadlock if one of them is frozen.
This also can occur with the schedule() waiting for the group thread leader
to exit if it is frozen.

In our machine, it causes freeze timeout as bellows.

Freezing of tasks failed after 20.010 seconds (1 tasks refusing to freeze, wq_busy=0):
setcpushares-ls D ffffffc00008ed70     0  5817   1483 0x0040000d
 Call trace:
[<ffffffc00008ed70>] __switch_to+0x88/0xa0
[<ffffffc000d1c30c>] __schedule+0x1bc/0x720
[<ffffffc000d1ca90>] schedule+0x40/0xa8
[<ffffffc0001cd784>] flush_old_exec+0xdc/0x640
[<ffffffc000220360>] load_elf_binary+0x2a8/0x1090
[<ffffffc0001ccff4>] search_binary_handler+0x9c/0x240
[<ffffffc00021c584>] load_script+0x20c/0x228
[<ffffffc0001ccff4>] search_binary_handler+0x9c/0x240
[<ffffffc0001ce8e0>] do_execveat_common.isra.14+0x4f8/0x6e8
[<ffffffc0001cedd0>] compat_SyS_execve+0x38/0x48
[<ffffffc00008de30>] el0_svc_naked+0x24/0x28

To fix this, make de_thread() freezable. It looks safe and works fine.

Suggested-by: Oleg Nesterov <oleg@redhat.com>
Signed-off-by: Chanho Min <chanho.min@lge.com>
Acked-by: Oleg Nesterov <oleg@redhat.com>
Acked-by: Pavel Machek <pavel@ucw.cz>
Acked-by: Michal Hocko <mhocko@suse.com>
Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Signed-off-by: Sasha Levin <sashal@kernel.org>
---
 fs/exec.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/fs/exec.c b/fs/exec.c
index 0da4d748b4e6..25c529f46aaa 100644
--- a/fs/exec.c
+++ b/fs/exec.c
@@ -62,6 +62,7 @@
 #include <linux/oom.h>
 #include <linux/compat.h>
 #include <linux/vmalloc.h>
+#include <linux/freezer.h>
 
 #include <linux/uaccess.h>
 #include <asm/mmu_context.h>
@@ -1079,7 +1080,7 @@ static int de_thread(struct task_struct *tsk)
 	while (sig->notify_count) {
 		__set_current_state(TASK_KILLABLE);
 		spin_unlock_irq(lock);
-		schedule();
+		freezable_schedule();
 		if (unlikely(__fatal_signal_pending(tsk)))
 			goto killed;
 		spin_lock_irq(lock);
@@ -1107,7 +1108,7 @@ static int de_thread(struct task_struct *tsk)
 			__set_current_state(TASK_KILLABLE);
 			write_unlock_irq(&tasklist_lock);
 			cgroup_threadgroup_change_end(tsk);
-			schedule();
+			freezable_schedule();
 			if (unlikely(__fatal_signal_pending(tsk)))
 				goto killed;
 		}
-- 
2.17.1

