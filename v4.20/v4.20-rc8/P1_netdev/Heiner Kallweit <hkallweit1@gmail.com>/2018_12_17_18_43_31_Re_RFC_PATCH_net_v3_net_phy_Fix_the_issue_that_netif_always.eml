Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 08:48:26 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id AF20F5805FC;
	Mon, 17 Dec 2018 10:43:58 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 17 Dec 2018 10:43:58 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AyopyUB/KVS/aTf9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1OoVIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CWGRPXthfVyJCDI2y?=
 =?us-ascii?q?YYQAAOgOMvpXoYnmv1sDrwCzBRWuCe711jNEmnH70K883u88EQ/GxgsgH9cWvX?=
 =?us-ascii?q?rWstr1NaESXv6vzKLVyDvMdfdW2TPz6YfWcxAhveyHULVwccrS00YvEwfFj1uO?=
 =?us-ascii?q?pozkIzOZy/8As2ee7+V6VOKvj3QrpB12ojiq38ohjJTCiIwSylDB7yp5wYA1KM?=
 =?us-ascii?q?WjSE5jYN6kFppQuD2BN4dsRMMtXX1otD49yrwHvZ60ZjMFyI89yx7YcfyHfI6F?=
 =?us-ascii?q?6Q/gWuaJOTp0mm5pdbalixqv/0Ws1PfwWtS33VpWtCZIk9vBumgT2xDP9sSKRP?=
 =?us-ascii?q?5w8Vm71juK1A3c8f1LIU4xmKXFJZMt3qI8m58XvEjfGiL7m0D7gaGSe0k65uel?=
 =?us-ascii?q?7v/obqn7qpKeMoJ4lx3yPb8ylcG5HO82KBIBX3KB9uS5zLDj/VP2QLFNjvAujK?=
 =?us-ascii?q?nZv47VJd4Bqq66HQBVyIAj5Ai7Dzu819QYh3YHIEpEeBKBkYfpJ0nDLO7kAfq7?=
 =?us-ascii?q?mVigjTlmy+7cMrH8AZjBMmLPnbbjcLpl7k5T0gszzdRR55JODbEBJer+WkvwtN?=
 =?us-ascii?q?zeEx84PBW4w+X5B9Vn0IMRR2aPDraeMKLct1+H+PgvLvKSZI8apjn9MeIp5/3w?=
 =?us-ascii?q?gn8jn18SY62p0YEQaHCiEfRqO1+Zbmb0gtcdDWcKuRIzTOjriF2BTzFffXmzX7?=
 =?us-ascii?q?8n6zE/CYKmC5rDR4+3jLyA2ie7AoNZZmRcBl+QFnfocp2OW+0QZyKKPs9hjjsE?=
 =?us-ascii?q?WKChS4A71BGuqBX1y719IurU5y0Xr5Tj1Ndu6u3XlBEy8yF0DsuH32GMSWF0gn?=
 =?us-ascii?q?0HRzss0K9jpkx9z0+J0bJkjPxACdxT+/RJXx84NZ7b0eN2EdPyWgXHftePT1ar?=
 =?us-ascii?q?WdGmATA3TtIszN4CeUd9G9O+jh/d2yqmGaMal7uOBJYs6KLTw2DxJ9phy3bBzK?=
 =?us-ascii?q?QulUImQstINW2lnKJ/7RLcB4zSnkWdlqaqc7kc3SHX+GeCy2qOoF9XUApqXarZ?=
 =?us-ascii?q?WnAfY1Pcrc7l6UPaU7+uFbMnPxNCycGYLKtGcNnpjVRcS/flN9TTeGaxm2a2BR?=
 =?us-ascii?q?aVybKAdovqe2MB3CrDDEgIiRwc/XGDNQImHCeuv3reDCByFVLoe07j7PNxqG2l?=
 =?us-ascii?q?QUMuzwGFdUth16Gr9R4TgvCcT/AT3rcAuCo6rzV0HVC938/ZCtaapgpherlcbs?=
 =?us-ascii?q?054FtdyW3ZsAl9NIS6L69+nl4ebxh3v0T22hpqEIpAj9YloGkqzAVoL6KYy01O?=
 =?us-ascii?q?dzWD0JD0O73XLHTy/R+1Z67X3FHezMiZ+qMV5PskrFXjuRmjFlA+/HV/z9lVz3?=
 =?us-ascii?q?yc643WDAoTVJLxVVo39xh6pr3Afikx/YTU1WdoMam1tD/C1MkkBO8kyhamYtde?=
 =?us-ascii?q?P7mIFA70E80GGceuLPYmlESubhIBJOpS7rI7P9u6d/ua366mJPxvnDa4gmVI/o?=
 =?us-ascii?q?980liA+DFhSuHVxZkFxfKY3gyZVzrniFehs8b3mZ1LZD0IH2q/zzTkC5BVZqFo?=
 =?us-ascii?q?YYkLDmKuKdWtxtpin57tR2JY9Fm7ClIGxc+lYwadY0b83A1Qz0sXp3OnlDC8zz?=
 =?us-ascii?q?x1lTEps6We0DbPw+TkaBoIJGpLSHN+glfrJIi+l8oaU1Swbwg1iBul4l73x7Ja?=
 =?us-ascii?q?pKtjNWbTW1pHfy/sI2FkTKSwrLuCb9dT55wytSVYTfqzYUqdSr77uBYa1yLjH2?=
 =?us-ascii?q?1DxDE0bT2qu5P5nwBkh2KZNnp8sH3ZecRozxfF+NPcXeJR3iYBRCRgiTjXB0Kw?=
 =?us-ascii?q?Ptmz8dWPipfDtPuzV2agVp1VbCnqwpmMtCq95W12HxK/m+q/lcHgEQg/ySX7zc?=
 =?us-ascii?q?VlVT3UrBbgZYnmz6a6Pvh9fklrB1/87NB2GppknYszh5EQ2H4aiYuT/XcclWfz?=
 =?us-ascii?q?MNNb2b/xbXYXRD4LxcLV7xbh2EF5Mn2JwIf5XG2HwsR9f9m6fn8W2iUl4sFKEq?=
 =?us-ascii?q?iU66ZInSl0olq+tg/RZfl9njEAyfoh8nIagucJuBYzwSWZGLwdAU5YPSn0nRSS?=
 =?us-ascii?q?89++tLlXZHqocbWo10pxh9GhAKuCogFBQnn5fJgiEDR07sV+NlLMzXLy5pvleN?=
 =?us-ascii?q?nWcdIcqBmUnw3cgOhSLZI7juAKijZ/OWLhoX0lzPY2jRlv3ZG5poeLMWts87yi?=
 =?us-ascii?q?Ah5EKDL1fdgc9S/3jaZRhcuW24GvHpN8GjQERpfoTPSoEC4MuvTjLQqBDDo8qn?=
 =?us-ascii?q?KDE7rFAQCf8Ftmr27IE52zK3GXI3wZwc9jRRaHIkxfnRsUXC47npMiEgCqxcrh?=
 =?us-ascii?q?cFp25zwL5174rAdMxfxsNxXlTmjfowKoYC8uSJeDNBpW8h1C50DNPMOF9O1zGC?=
 =?us-ascii?q?VY/oC7oAyJN2yWfABIDWAPWkyZCFHvJLiu5d/c8+eGAuqyNefBYbKLqeZGTfeH?=
 =?us-ascii?q?2Yqv0pd6/zaLLsiPPGNtD/gl1UpYR3x5B97VmzYSSywUiiLNadSUpAyn9y1zr8?=
 =?us-ascii?q?C/9unrWQ316YuODbtSLctg+xSsjaifMO6QgT5zKSxE2ZMU2X/I1L8f0UYSiiFp?=
 =?us-ascii?q?ajmtCKkAujTLTK7Kga9XCBgbayxoOctM7qI82BRNOMHBhtP00L54kuA6C1NfWV?=
 =?us-ascii?q?P9ncGpYNQAI3uhO1PfGEaLKLOGKCXLw87pYKO8Sr5QjOROux2zozabFEDjMSqZ?=
 =?us-ascii?q?lzn0TBCiKuVMjCCdPBxDt4CxaBdtCW7/TN34bh23KsN4jTozwbcsnHPFKXYcMS?=
 =?us-ascii?q?Rgc0NKtrCf9z5Yje5lG2Nf7ntpN+2EmyeC4uncK5YWt+ZrAytum+Jb5nQ616Va?=
 =?us-ascii?q?7CVeSPNpnyvSq8Zko0u6nemX1jpnTB1Opy5XhIKKuEVuI7nW+oNcVnbE4h0N63?=
 =?us-ascii?q?6dCxALp9tjF93utLpcytnJlKLvNjhC98jY8tcbB8jRMMiHKmYuMQL1GD7ICwsI?=
 =?us-ascii?q?VT6qOnvZh0xYkfGS8GWar5k6qpf2npoORaRWVFg0FvMcF0RkE8YOIJZxXjM4j7?=
 =?us-ascii?q?GbiNQE6ma5rBnUF41mucXkS/STAfTsL365hKhNfBsJief4JJUaLY36nU9/bFh6?=
 =?us-ascii?q?nYfNM1HXVtFKpCBxckk/p0AbtDBXSGEp1l2tTh6r5jdHHPi4hBMpog9jZ+Jr/z?=
 =?us-ascii?q?e6px8ZIl3QpSI22Gc4mNPohTSQOGr/aqm5XIdbDy71n0c0O5L/BQ1yaFv21QZI?=
 =?us-ascii?q?PSnFS/pqyfNFdGRvhRWW8c9DEOBRSIVIaQEdwPWQaelu11lA/HaJ30hCsMvICJ?=
 =?us-ascii?q?1vjkMJeJqosH9Bx0o3bN08IajPKatVl3Bfg6uPummj0eVnk1xWHFoE7G7HIH1A?=
 =?us-ascii?q?g0cPLLRzYnPwpuE=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AJAAAo7hdch0O0hNFbCBoBAQEBAQIBA?=
 =?us-ascii?q?QEBBwIBAQEBgVEFAQEBAQsBAYEvgTmBAieDfIN7hB6LeIFgCCUUl0SBcxIBARg?=
 =?us-ascii?q?LCAGHViI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgpIwxCARABgWIkAYJhAQEBAQIBA?=
 =?us-ascii?q?QIgBBkBGx0BAwIJAQEFBQsNAgImAgIDHgIFDAEFARwGAQwGAgEBAYMdAYFnAQM?=
 =?us-ascii?q?NCAEECpxpPIsQfBYFAReCdwWBMQGDAgoZJw1dgTcCAQUSeYoXgRyCFoE4DIIxL?=
 =?us-ascii?q?oJXRwOBO4MtglcCgSoBjmmQVi8GA4FWhTeGLXCDKgYYiXMMh1OJPIR2gRKDLYZ?=
 =?us-ascii?q?MAgQCBAUCBQ8hgSWCDk0jgQFtgU6CGwwXEoM4hFk7hUA/MgGBBAEBIYEmiVsEg?=
 =?us-ascii?q?kkBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AJAAAo7hdch0O0hNFbCBoBAQEBAQIBAQEBBwIBAQEBgVE?=
 =?us-ascii?q?FAQEBAQsBAYEvgTmBAieDfIN7hB6LeIFgCCUUl0SBcxIBARgLCAGHViI0CQ0BA?=
 =?us-ascii?q?wEBAQEBAQIBEwEBAQoLCQgpIwxCARABgWIkAYJhAQEBAQIBAQIgBBkBGx0BAwI?=
 =?us-ascii?q?JAQEFBQsNAgImAgIDHgIFDAEFARwGAQwGAgEBAYMdAYFnAQMNCAEECpxpPIsQf?=
 =?us-ascii?q?BYFAReCdwWBMQGDAgoZJw1dgTcCAQUSeYoXgRyCFoE4DIIxLoJXRwOBO4Mtglc?=
 =?us-ascii?q?CgSoBjmmQVi8GA4FWhTeGLXCDKgYYiXMMh1OJPIR2gRKDLYZMAgQCBAUCBQ8hg?=
 =?us-ascii?q?SWCDk0jgQFtgU6CGwwXEoM4hFk7hUA/MgGBBAEBIYEmiVsEgkkBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,366,1539673200"; 
   d="scan'208";a="56703900"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 17 Dec 2018 10:43:43 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1732673AbeLQSnk (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 17 Dec 2018 13:43:40 -0500
Received: from mail-wr1-f66.google.com ([209.85.221.66]:41996 "EHLO
        mail-wr1-f66.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726653AbeLQSnj (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 17 Dec 2018 13:43:39 -0500
Received: by mail-wr1-f66.google.com with SMTP id q18so13359330wrx.9;
        Mon, 17 Dec 2018 10:43:37 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=subject:from:to:cc:references:message-id:date:user-agent
         :mime-version:in-reply-to:content-language:content-transfer-encoding;
        bh=oBNwkrMH8kwRKGH/6rRWOcDQm8QSaqta6El9c9xPFpc=;
        b=qBPC839q8xrNRZtxuLlyif8qScuckK1AW/jwnDqDk2lnv0D8yIYaxgqx1eT0UHx3O0
         BIAZgWMGNmGGe4n3FozwoV4ZN9cyC0D0jIZY3gab0gaylVD6H9MNe4yUBT0ePw6o8ufg
         LcI5tsJ/WSEgLrZT17eLfzfGblRiskN7+farA0Ul+GOjDc4f/uE4QZache8gvt4Kcxp1
         KYK/feT5Er79UhpfZ4uFZIttitGLDQPL9zP9y1OIBGFObEh+6osj3AWunDcuxKqYfCOa
         Ux8dkeeAFpvOrCa7JtKV6cPo1/Aa0flkcjbEH2R3nts2vnN9/Bk1GEvGCEFRaTXzYYl3
         SwAw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:subject:from:to:cc:references:message-id:date
         :user-agent:mime-version:in-reply-to:content-language
         :content-transfer-encoding;
        bh=oBNwkrMH8kwRKGH/6rRWOcDQm8QSaqta6El9c9xPFpc=;
        b=flS8hn88+wPGf70lD1ybHYoT+aXJBPE8pKBb5FrSIO28JMxQ4O9jXdK9ULNi9TdEEI
         4py07UYKoqJ159zrpSJsMCkn7aZlm14kKjPnPtBxwlC4gbJhjvrz5F5CHUZZfSAUfgoC
         moREHPsxMNXvlGkCV+hyuEot9lFk4KKzILWn0ztgeEQrlOMmun4x2e9HstfyLJhsc1Cc
         I3wjawbpW5d5lHxBhgwE8y+hOQDdyvfHgMwCMrQijoHoSOQ+D9DuXSmtolzTjQldKJgU
         Zgl04UsnwDmTnS/ILU+ClYOZ+iQoRmR+yYaZG309kcfR96c4brU2NViQPCrpK2y6FK2e
         MCxA==
X-Gm-Message-State: AA+aEWZJe9B0nffcVakOj9KbEJruB0n3IZhrDY2aNyQpTmr8ccDX1A5e
        pBQdO2oyNjAyXUcDvTmGSJ2nknOl
X-Google-Smtp-Source: AFSGD/VPiqjo6DGbgGwF67786MmvowHrkGPUqwgfr6E/BYqtxWvW7OFzVRblc+copw4Dj07jYjpG0w==
X-Received: by 2002:a5d:570c:: with SMTP id a12mr11276344wrv.161.1545072216874;
        Mon, 17 Dec 2018 10:43:36 -0800 (PST)
Received: from ?IPv6:2003:ea:8bcf:e300:9098:392c:b017:10bc? (p200300EA8BCFE3009098392CB01710BC.dip0.t-ipconnect.de. [2003:ea:8bcf:e300:9098:392c:b017:10bc])
        by smtp.googlemail.com with ESMTPSA id b13sm1427439wrn.28.2018.12.17.10.43.35
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Mon, 17 Dec 2018 10:43:36 -0800 (PST)
Subject: Re: [RFC PATCH net v3] net: phy: Fix the issue that netif always
 links up after resuming
From: Heiner Kallweit <hkallweit1@gmail.com>
To: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>,
        Andrew Lunn <andrew@lunn.ch>,
        Florian Fainelli <f.fainelli@gmail.com>,
        "David S. Miller" <davem@davemloft.net>
Cc: netdev@vger.kernel.org, linux-kernel@vger.kernel.org
References: <1543825349-423-1-git-send-email-hayashi.kunihiko@socionext.com>
 <20181217154102.34D9.4A936039@socionext.com>
 <bb910914-73e5-c040-08d5-5f16d259b105@gmail.com>
Message-ID: <a4bec1b7-1899-591a-c3b6-599e3730e2c1@gmail.com>
Date: Mon, 17 Dec 2018 19:43:31 +0100
User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:60.0) Gecko/20100101
 Thunderbird/60.3.3
MIME-Version: 1.0
In-Reply-To: <bb910914-73e5-c040-08d5-5f16d259b105@gmail.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 17.12.2018 19:41, Heiner Kallweit wrote:
> On 17.12.2018 07:41, Kunihiko Hayashi wrote:
>> Hi,
>>
>> Gentle ping...
>> Are there any comments about changes since v2?
>>
>> v2: https://www.spinics.net/lists/netdev/msg536926.html
>>
>> Thank you,
>>
>> On Mon, 3 Dec 2018 17:22:29 +0900 <hayashi.kunihiko@socionext.com> wrote:
>>
>>> Even though the link is down before entering hibernation,
>>> there is an issue that the network interface always links up after resuming
>>> from hibernation.
>>>
>>> The phydev->state is PHY_READY before enabling the network interface, so
>>> the link is down. After resuming from hibernation, the phydev->state is
>>> forcibly set to PHY_UP in mdio_bus_phy_restore(), and the link becomes up.
>>>
>>> This patch adds a new convenient function to check whether the PHY is in
>>> a started state, and expects to solve the issue by changing phydev->state
>>> to PHY_UP and calling phy_start_machine() only when the PHY is started.
>>>
> This convenience function and the related change to phy_stop() are part of
> the following already and don't need to be part of your patch.
> https://patchwork.ozlabs.org/patch/1014171/
> 
>>> Suggested-by: Heiner Kallweit <hkallweit1@gmail.com>
>>> Signed-off-by: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
>>> ---
>>>
>>> Changes since v2:
>>>  - add mutex lock/unlock for changing phydev->state
>>>  - check whether the mutex is locked in phy_is_started()
>>>  
>>> Changes since v1:
>>>  - introduce a new helper function phy_is_started() and use it instead of
>>>    checking link status
>>>  - replace checking phydev->state with phy_is_started() in
>>>    phy_stop_machine()
>>>
>>> drivers/net/phy/phy.c        |  2 +-
>>>  drivers/net/phy/phy_device.c | 12 +++++++++---
>>>  include/linux/phy.h          | 13 +++++++++++++
>>>  3 files changed, 23 insertions(+), 4 deletions(-)
>>>
>>> diff --git a/drivers/net/phy/phy.c b/drivers/net/phy/phy.c
>>> index 1d73ac3..f484d03 100644
>>> --- a/drivers/net/phy/phy.c
>>> +++ b/drivers/net/phy/phy.c
>>> @@ -670,7 +670,7 @@ void phy_stop_machine(struct phy_device *phydev)
>>>  	cancel_delayed_work_sync(&phydev->state_queue);
>>>  
>>>  	mutex_lock(&phydev->lock);
>>> -	if (phydev->state > PHY_UP && phydev->state != PHY_HALTED)
>>> +	if (phy_is_started(phydev))
>>>  		phydev->state = PHY_UP;
> 
> I'm wondering whether we need to do this. If the PHY is attached,
> then mdio_bus_phy_suspend() calls phy_stop_machine() which does
> exactly the same. If the PHY is not attached, then we don't have
> to do anything. Therefore I think we just have to do the same as
> in mdio_bus_phy_resume():
> 
> if (phydev->attached_dev && phydev->adjust_link)
> 	phy_start_machine(phydev);
> 
> Can you test this?
> 
Sorry for the confusion, this comment is related to the next part
of your patch.

>>>  	mutex_unlock(&phydev->lock);
>>>  }
>>> diff --git a/drivers/net/phy/phy_device.c b/drivers/net/phy/phy_device.c
>>> index ab33d17..4897d24 100644
>>> --- a/drivers/net/phy/phy_device.c
>>> +++ b/drivers/net/phy/phy_device.c
>>> @@ -309,10 +309,16 @@ static int mdio_bus_phy_restore(struct device *dev)
>>>  		return ret;
>>>  
>>>  	/* The PHY needs to renegotiate. */
>>> -	phydev->link = 0;
>>> -	phydev->state = PHY_UP;
>>> +	mutex_lock(&phydev->lock);
>>> +	if (phy_is_started(phydev)) {
>>> +		phydev->state = PHY_UP;
>>> +		mutex_unlock(&phydev->lock);
>>> +		phydev->link = 0;
>>> +		phy_start_machine(phydev);
>>> +	} else {
>>> +		mutex_unlock(&phydev->lock);
>>> +	}
>>>  
>>> -	phy_start_machine(phydev);
>>>  
>>>  	return 0;
>>>  }
>>> diff --git a/include/linux/phy.h b/include/linux/phy.h
>>> index 3ea87f7..dd21537 100644
>>> --- a/include/linux/phy.h
>>> +++ b/include/linux/phy.h
>>> @@ -898,6 +898,19 @@ static inline bool phy_is_pseudo_fixed_link(struct phy_device *phydev)
>>>  }
>>>  
>>>  /**
>>> + * phy_is_started - Convenience function for testing whether a PHY is in
>>> + * a started state
>>> + * @phydev: the phy_device struct
>>> + *
>>> + * The caller must have taken the phy_device mutex lock.
>>> + */
>>> +static inline bool phy_is_started(struct phy_device *phydev)
>>> +{
>>> +	WARN_ON(!mutex_is_locked(&phydev->lock));
>>> +	return phydev->state >= PHY_UP && phydev->state != PHY_HALTED;
>>> +}
>>> +
>>> +/**
>>>   * phy_write_mmd - Convenience function for writing a register
>>>   * on an MMD on a given PHY.
>>>   * @phydev: The phy_device struct
>>> -- 
>>> 2.7.4
>>
>> ---
>> Best Regards,
>> Kunihiko Hayashi
>>
>>
>>
> 

