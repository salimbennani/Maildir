Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  17 Dec 2018 16:14:54 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id A77E85805E2;
	Sun, 16 Dec 2018 22:41:12 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 16 Dec 2018 22:41:11 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AG4YXmR8onOiY3/9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1e8TIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CS2RPXthfWTFDDYOy?=
 =?us-ascii?q?bIUAAPYOM+lfoYnmv1sDrwCzBRWuCe711jNFnGP60bM83u88EQ/GxgsgH9cWvX?=
 =?us-ascii?q?rRsdX1MqYSUeC0zKnLyjXIcvFY1i396YfSaRAhofCMVq93fMrR00YuFxnKjk6Q?=
 =?us-ascii?q?qYzkJT+V1fkNs26a7+pgVOKviGknphpqojio2sgsi47JhoQLxVHL6SV12po6Jd?=
 =?us-ascii?q?q9SENiZ9OvDZVetyafN4RsQ8MiRXlluD0iyr0Hv567fTQFyI89yx7ZdfOHb46F?=
 =?us-ascii?q?6Q/gWuaJOTp0mm5pdbalixqv/0Ws1PfwWtS33VpWtCZIk9vBumgT2xDP9MSLUO?=
 =?us-ascii?q?Vx80ii1DqV2A3e7vtILE43mKfdNpUv2KQ/loAJvkTGBiL2mFv5jKuRdkg85Oio?=
 =?us-ascii?q?5ProYq/8qp+fKYB0kAf+PboqmsClBuQ4KAcOU3Ca+eS6yrLj4VX0TKtWgvAyiK?=
 =?us-ascii?q?XVrZ7XKdoBqqKkAAJZzpwv5he9Aju+1dQXh3gHLFZLeBKdiIjpPknDIPT5Dfe5?=
 =?us-ascii?q?nlStny5nx/PYMb37BJXCMHzDnK7mfbdz7U5T1hAzwMtB55JbFL4BOuj/Wkzvu9?=
 =?us-ascii?q?zCCB82LQi0z/zgCNVn2YMSQXiPDbOBMKPOrV+I4foiI+2NZI8WpjnxMfck5+P1?=
 =?us-ascii?q?gH89mF8de7Sp3JQNZHC5GPRmP1uWYX72jtgdFmcKuxI0TPb2h12aTT5Te3GyUr?=
 =?us-ascii?q?o85j4hCYKmEZ3MRoe3jLyBwSe0BJtWZm9dB1CIEHfocZiEWvgWZCKTJM9hjiIL?=
 =?us-ascii?q?Vby7R4A90hGusRfwy6B7IerM5i0YqZXj2cB35+3Uix4+7z90D8Ob02GLSGF5hW?=
 =?us-ascii?q?cIRz4w3KBirk1x0FaD0a5kg/NGEdxf/e9GUgA/NZTE1ex1F8jyWh7dfteOUFup?=
 =?us-ascii?q?WM6mATE2TtIy2dMOeVxyG9e5gxDH3iqqBaIVlrORCJw19KLcw2b+J8Jnx3na06?=
 =?us-ascii?q?khikEsQtFTOm2+mq5/6w/TCpbKk0qDkaamb6Ac3C/X+2eFwmqDp0VYUA92UaXY?=
 =?us-ascii?q?UnETfErWrdLl5kzcS7+iE6goMgxEycSaMKtFdsXpjUlaRPfkINnRfni+m3muCh?=
 =?us-ascii?q?qSxrODdozqe34D0yXbD0QElwMT/XOCNQUlAiehomTeDCFhFF71YkPs9/V+p22/?=
 =?us-ascii?q?TkMu0w6KaEhh3aKv+hEJnfycV+8T3rUctSg8sTp0Akiy08jWC9WaoQphZ7tTYd?=
 =?us-ascii?q?Um7VdD1GLZsRF9P5O6I6BjgF4ebxp4v0f02xprDYVAlNAgrGk2wwpqNaKYzFRB?=
 =?us-ascii?q?eiuE3ZDxP73XLXXy/BCvaqLMxlHSytGW+r0L6PQ5rVXjsxqkFk4j83VhztlU3G?=
 =?us-ascii?q?GQ5pTMDAoOT53xVlw7+AR9p7HfeiM9/Z/b1WVwMamotT/Pw8gmBO87xRevYdhe?=
 =?us-ascii?q?MLmIGxTvE8IHHceuLu8qm1+3bh8fOOBS9ag0P96pdvec2a6rOvpgkyyijWhd/I?=
 =?us-ascii?q?991UeM/TJmSuHUx5YF3+2Y3gyfWjb8kVetqNz4lZpFZDESBGW/zyfkCZVVZq1z?=
 =?us-ascii?q?e4YLFGivL9e2xtV4m57iRXpY+ES/CFMB3c+jYQCSYEDl3Q1MyUQXpmSqmTG5zz?=
 =?us-ascii?q?NoiT4ptLeQ3CvUz+TkahUHIG9LSHB+glj2JYi7ks4VXFKvbwgvjxal4Uf6x65G?=
 =?us-ascii?q?pKVwNWXTQEFIfzToIGFmSKe/qr2CY8tX4pMyrSpXSPi8YUydSrPloxoa0jnvHm?=
 =?us-ascii?q?tEyDAgajGqvI70nxh7iGKbMXZyo2DVecB2xRfD+tPcQeRd0SYBRCl9kTPXHESz?=
 =?us-ascii?q?P8G1/dWIkJfOquK+WHi7Vp1QcinrypmMtDCh6m1pAh2/nvazlcPhEQUh1S/71t?=
 =?us-ascii?q?9qVTjHrRrmY4nr0bi6PvxjfkVyGFD87M96EJlkkoQsnJEQxWQahpKN8HsHi2jz?=
 =?us-ascii?q?Ns9X2aD/bHoLXjMLx9/V4A742ExsNH6JxoT5VmmDzctlfdW1fmQW2icl5cBQFK?=
 =?us-ascii?q?iU9KBEnTdyolegrgLee/l9ki0dyfsz8nEahe4JtREpziWcBLASAEZZMTbtlxSO?=
 =?us-ascii?q?89CxsqFXaHyzfri30Up0hcqhA62aogFARHb5fY8vHSpx7sV8Kl3AynPy5Z//eN?=
 =?us-ascii?q?nMc90TrAabnAnaj+haM58xkvsKhSx6OWPyp3Elyug7jQBw0pG+poSIN2Jt/Keh?=
 =?us-ascii?q?CB5CKjL1f98T+i3qjatGgsaW2IWvEo9gGzoRWpvoUOmoECkTtfn8MwaOETs8qm?=
 =?us-ascii?q?qUGLbFHA+f7ltmoGzLE5yxK36XI3wZx814RBaBPExfnBwUXDIik5EiDA+qw8jh?=
 =?us-ascii?q?cFpj6jAV+171sR9MyuNuNxniXWbTvgaoajEoSJeBKBpa9B1N50DQMcaG9OJ8Az?=
 =?us-ascii?q?lY/oG9rAyKMmGbZR5HDWQXVUyfHVzjIqOi5drd8+ibG+q+KeHBYa6VpOxaVveI?=
 =?us-ascii?q?w4+v04R88zaNMMWPImdtD/kh1kVfWnB5HtzTmy8TRCwPiyLNc8mbqQ+8+y1ws8?=
 =?us-ascii?q?C/6enrVxjp5YeVELtSNtNv+x+tjKeHNu6Qgjt5KDlC2pMNw3/I1KYQ3FoIhy5y?=
 =?us-ascii?q?cDmtFKwKtTTRQ6LIhq9XExkbZjtzNMRW7qI83QpNOc/BhtP2zL54ifE1BElfVV?=
 =?us-ascii?q?z8gcGkfsgKI2C7NFPaC0eHLrWGJTvXw87pZaOwU6FfjOJRtxeoozaUD1fjPiif?=
 =?us-ascii?q?lznuTx2gK/xMgzqBPBNAuICxaBJtCWn4QdLiax27NsJ3jDIszb01gHPKKXATMT?=
 =?us-ascii?q?xmf0xRqb2Q6DtSgu9jFGxZ8nplMe6Elj6F7+nZL5Yaq+dkDj5omOJa/ns6zaBY?=
 =?us-ascii?q?7CVFRPxzhSvTocRio1CgkumT1DVnVABCpSpMhIKOpU9iI7nW9oFcWXbY+xIA9W?=
 =?us-ascii?q?WRBA4Mp9tgC93vvbhfy9nPlK3pLjdC/MnZ/c8dB8jSNcKGP2AtMRvvGD7IEgQF?=
 =?us-ascii?q?SSSnOn3Yh0xYw7mu8Si8qJQgp4ekvIcITPcPXVo5DP4FIkB4GtpEK5chGnsKlb?=
 =?us-ascii?q?mBjccOrVS3rR/cQMFb9sTJEPybAPPiLDKYpbZBbhoMh7j/KNJXfq322kpvcBFZ?=
 =?us-ascii?q?lYDOBEfRQZgZoi5oagsrrURRqVBxS2Qy3wTubQb7pDdZOfeqnxJ+sU02ROUp8D?=
 =?us-ascii?q?r2qR9jKlPUqS4YnEAvlNDhhj6NNjj8MPHjc5tRDn/Xqk4wMpL4RE5VZBy7hkxl?=
 =?us-ascii?q?fGPETqNYlLthM2N2jg7cuJhIMeVbRqxDZhIA2becYPB+ggcUkTmu2UISvbiNMp?=
 =?us-ascii?q?BljgZ/NMf0938=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAADtQxdch0O0hNFcCBkBAQEBAQEBA?=
 =?us-ascii?q?QEBAQEHAQEBAQEBgVEEAQEBAQELAYJpA20SJ4wVX4sWgg0UiQGOQ4FzLAsIAYd?=
 =?us-ascii?q?PIjQJDQEDAQEBAQEBAgETAQEBCgsJCCkjDII2JAGCYgECAgEBAiQTPwUBCQEBC?=
 =?us-ascii?q?kYDHgcvBgESBYMdAYFoAw0HAQUKqCUzGgKHWA2CFwWCfolAghaDAXQugldHA4E?=
 =?us-ascii?q?7g16CJgKQFDaQIC8HAo06cIMlI1+JJRQDhzeJPIYIi2ZggS4zGiODPIInFxKIE?=
 =?us-ascii?q?YYJMAEBMQGBBAEBiyIEgkkBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ABAADtQxdch0O0hNFcCBkBAQEBAQEBAQEBAQEHAQEBAQE?=
 =?us-ascii?q?BgVEEAQEBAQELAYJpA20SJ4wVX4sWgg0UiQGOQ4FzLAsIAYdPIjQJDQEDAQEBA?=
 =?us-ascii?q?QEBAgETAQEBCgsJCCkjDII2JAGCYgECAgEBAiQTPwUBCQEBCkYDHgcvBgESBYM?=
 =?us-ascii?q?dAYFoAw0HAQUKqCUzGgKHWA2CFwWCfolAghaDAXQugldHA4E7g16CJgKQFDaQI?=
 =?us-ascii?q?C8HAo06cIMlI1+JJRQDhzeJPIYIi2ZggS4zGiODPIInFxKIEYYJMAEBMQGBBAE?=
 =?us-ascii?q?BiyIEgkkBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,364,1539673200"; 
   d="scan'208";a="56619019"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 16 Dec 2018 22:41:09 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1731582AbeLQGlH (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 17 Dec 2018 01:41:07 -0500
Received: from mx.socionext.com ([202.248.49.38]:47147 "EHLO mx.socionext.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726455AbeLQGlG (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 17 Dec 2018 01:41:06 -0500
Received: from unknown (HELO iyokan-ex.css.socionext.com) ([172.31.9.54])
  by mx.socionext.com with ESMTP; 17 Dec 2018 15:41:04 +0900
Received: from mail.mfilter.local (m-filter-1 [10.213.24.61])
        by iyokan-ex.css.socionext.com (Postfix) with ESMTP id 868C460062;
        Mon, 17 Dec 2018 15:41:04 +0900 (JST)
Received: from 172.31.9.53 (172.31.9.53) by m-FILTER with ESMTP; Mon, 17 Dec 2018 15:41:04 +0900
Received: from yuzu.css.socionext.com (yuzu [172.31.8.45])
        by iyokan.css.socionext.com (Postfix) with ESMTP id EC8FF40305;
        Mon, 17 Dec 2018 15:41:03 +0900 (JST)
Received: from [127.0.0.1] (unknown [10.213.132.48])
        by yuzu.css.socionext.com (Postfix) with ESMTP id CA4CF120605;
        Mon, 17 Dec 2018 15:41:03 +0900 (JST)
Date: Mon, 17 Dec 2018 15:41:03 +0900
From: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
To: Andrew Lunn <andrew@lunn.ch>,
        Florian Fainelli <f.fainelli@gmail.com>,
        Heiner Kallweit <hkallweit1@gmail.com>,
        "David S. Miller" <davem@davemloft.net>
Subject: Re: [RFC PATCH net v3] net: phy: Fix the issue that netif always links up after resuming
Cc: <netdev@vger.kernel.org>, <linux-kernel@vger.kernel.org>
In-Reply-To: <1543825349-423-1-git-send-email-hayashi.kunihiko@socionext.com>
References: <1543825349-423-1-git-send-email-hayashi.kunihiko@socionext.com>
Message-Id: <20181217154102.34D9.4A936039@socionext.com>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-Mailer: Becky! ver. 2.70 [ja]
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi,

Gentle ping...
Are there any comments about changes since v2?

v2: https://www.spinics.net/lists/netdev/msg536926.html

Thank you,

On Mon, 3 Dec 2018 17:22:29 +0900 <hayashi.kunihiko@socionext.com> wrote:

> Even though the link is down before entering hibernation,
> there is an issue that the network interface always links up after resuming
> from hibernation.
> 
> The phydev->state is PHY_READY before enabling the network interface, so
> the link is down. After resuming from hibernation, the phydev->state is
> forcibly set to PHY_UP in mdio_bus_phy_restore(), and the link becomes up.
> 
> This patch adds a new convenient function to check whether the PHY is in
> a started state, and expects to solve the issue by changing phydev->state
> to PHY_UP and calling phy_start_machine() only when the PHY is started.
> 
> Suggested-by: Heiner Kallweit <hkallweit1@gmail.com>
> Signed-off-by: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
> ---
> 
> Changes since v2:
>  - add mutex lock/unlock for changing phydev->state
>  - check whether the mutex is locked in phy_is_started()
>  
> Changes since v1:
>  - introduce a new helper function phy_is_started() and use it instead of
>    checking link status
>  - replace checking phydev->state with phy_is_started() in
>    phy_stop_machine()
> 
> drivers/net/phy/phy.c        |  2 +-
>  drivers/net/phy/phy_device.c | 12 +++++++++---
>  include/linux/phy.h          | 13 +++++++++++++
>  3 files changed, 23 insertions(+), 4 deletions(-)
> 
> diff --git a/drivers/net/phy/phy.c b/drivers/net/phy/phy.c
> index 1d73ac3..f484d03 100644
> --- a/drivers/net/phy/phy.c
> +++ b/drivers/net/phy/phy.c
> @@ -670,7 +670,7 @@ void phy_stop_machine(struct phy_device *phydev)
>  	cancel_delayed_work_sync(&phydev->state_queue);
>  
>  	mutex_lock(&phydev->lock);
> -	if (phydev->state > PHY_UP && phydev->state != PHY_HALTED)
> +	if (phy_is_started(phydev))
>  		phydev->state = PHY_UP;
>  	mutex_unlock(&phydev->lock);
>  }
> diff --git a/drivers/net/phy/phy_device.c b/drivers/net/phy/phy_device.c
> index ab33d17..4897d24 100644
> --- a/drivers/net/phy/phy_device.c
> +++ b/drivers/net/phy/phy_device.c
> @@ -309,10 +309,16 @@ static int mdio_bus_phy_restore(struct device *dev)
>  		return ret;
>  
>  	/* The PHY needs to renegotiate. */
> -	phydev->link = 0;
> -	phydev->state = PHY_UP;
> +	mutex_lock(&phydev->lock);
> +	if (phy_is_started(phydev)) {
> +		phydev->state = PHY_UP;
> +		mutex_unlock(&phydev->lock);
> +		phydev->link = 0;
> +		phy_start_machine(phydev);
> +	} else {
> +		mutex_unlock(&phydev->lock);
> +	}
>  
> -	phy_start_machine(phydev);
>  
>  	return 0;
>  }
> diff --git a/include/linux/phy.h b/include/linux/phy.h
> index 3ea87f7..dd21537 100644
> --- a/include/linux/phy.h
> +++ b/include/linux/phy.h
> @@ -898,6 +898,19 @@ static inline bool phy_is_pseudo_fixed_link(struct phy_device *phydev)
>  }
>  
>  /**
> + * phy_is_started - Convenience function for testing whether a PHY is in
> + * a started state
> + * @phydev: the phy_device struct
> + *
> + * The caller must have taken the phy_device mutex lock.
> + */
> +static inline bool phy_is_started(struct phy_device *phydev)
> +{
> +	WARN_ON(!mutex_is_locked(&phydev->lock));
> +	return phydev->state >= PHY_UP && phydev->state != PHY_HALTED;
> +}
> +
> +/**
>   * phy_write_mmd - Convenience function for writing a register
>   * on an MMD on a given PHY.
>   * @phydev: The phy_device struct
> -- 
> 2.7.4

---
Best Regards,
Kunihiko Hayashi


