Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 18:08:10 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 914B35805AD;
	Mon, 17 Dec 2018 23:01:48 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga004-1.fm.intel.com with ESMTP; 17 Dec 2018 23:01:47 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AAw5dEB38i8szAnewsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segTLPnxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJPUMhRSSJPH4Gz?=
 =?us-ascii?q?b4UMAeUOIelWoI7zp0AWrRa8HgSsGOHixyVUinLswaE2zeIsGhzG0gw6GNIOtW?=
 =?us-ascii?q?zZotDoNKcUUOC1zKjIzTbEb/hL2zny8ojJfQo6ofGMXLJ7bM3cyUk1GALFlFqQ?=
 =?us-ascii?q?sozlPzKP2uQOrmib6etgVeKui24krAF8uSOvxsAwhYnIgYIVzE7L9CplwIovOd?=
 =?us-ascii?q?K4T0t7bMeiHZBNuS+aMI52TdkjQ2FuoCs60aUGuZ+9fCgL1Jsn3ATTa/qZfIiU?=
 =?us-ascii?q?+h7jU+eQITNii31+Y7KznRGy8VKvyuD6S8K6005KozJbntXQsn0BzQHf58aZRv?=
 =?us-ascii?q?dn40us2iqD2xrS5+xGOUw4i7bXJ4A7zrIumZcesl7PEyDylUnsgqKbdUMp8fWy?=
 =?us-ascii?q?5ev9eLXpvJqcOpd0ig7gNqQundSyAfo3MgcQRWiX4+e826P5/U3/XrpKiuc6kq?=
 =?us-ascii?q?7DsJDVPcgbp6i5DBFJ0os79RqzEzOr3M4FkXQJMl5JYg+Lgov1N13UIf31D++z?=
 =?us-ascii?q?g1G2nzdqw/DGMKfhApLILnXblLfhfLB961NTyQYqztBQ+YhUCrcfL/L3Q0Pxs9?=
 =?us-ascii?q?LZDhknPAyu2OvnFtp92Z0EWW6VAa+WLrnSsVmW6eIrOeWMY5UVuDnlJ/g/+/Hu?=
 =?us-ascii?q?lWM5mUMafaSx2ZsXaXO4Eep8L0SWfHrhmdMBEWYMvgojQ+3mklyCUThPZ3msW6?=
 =?us-ascii?q?Iw/C00CIWjDY3bXICinKSB3DunHp1Rfm1GCkqDEXb0d4qeXPcAciKSItJ7nTwC?=
 =?us-ascii?q?WrisUIsh1RCotA/nxLtrNOvU+isEtZ390Nh5/fHclRY39TZsFcSSz3mNT31onm?=
 =?us-ascii?q?MPXzI23qd/rlJnxleA1qh4hfpYFdtI6vNNUwc6M4PczuNgB9DzXALBYsmGSFK8?=
 =?us-ascii?q?Ttq6BjExS8o7w8USbEZlB9WikhfD0jKwDL8Ol7yLA580/rjG33frJcZw0HLG1K?=
 =?us-ascii?q?gnj1k7TcpDL2ymhqhj9wfNA47FiVmWl6Gvda4Exi7C6H+DzXaSvEFfSANwUr/K?=
 =?us-ascii?q?XXYFakvSrNT2/EXCT7C1BLQjMwtBz9OCK6RQZt3oi1VGWOnsONDEb22tnGewAA?=
 =?us-ascii?q?6CxqmQY4ryZ2UdwCLdBVAZnA8J43aJKxIyBie7rGLYFzxhC1Tvb0To8el9rXO7?=
 =?us-ascii?q?SlQ5zwWLb01nyrq09QQZhf2aS/MPwL0EvD0tpClzHFa4x9jWEcaPpxJ9fKVAZt?=
 =?us-ascii?q?Mw+EpI2njHtwNjJJCgL7pthlgFcwtpuUPjzBF3CoRGkcg3o3Im1gtyKaSE0Fxf?=
 =?us-ascii?q?czOUx4z/OrrSKmPq5hCgd7bW2k3C0NaR4qoP9PU4q1DkvAG1Fkoj829r08VP33?=
 =?us-ascii?q?ub/JXKCAsSUZT+Ukss8xh6prfaYjQy5o/O1H1sN7W0vSHG294zGOQlzROgdc9F?=
 =?us-ascii?q?MKyYDA/yD9EaB8+2JeMwn1imcB0FM/5S9aIuJMymauaJ17StPOZjmzKmk39K4I?=
 =?us-ascii?q?R80kKK6ip9RfTE35cDw/GEwASHUy3wg0umssDygYpEfy0dHnKjySj4A45cfq1z?=
 =?us-ascii?q?fZsRBWiyOcG2x9V+iITrW35X71OjA1IG2Mm0eRuddVD93AtQ1VgJrnyjgye30z?=
 =?us-ascii?q?t0kzQxpKqFwCPO2/jidAYAOmNTXmlijEvjLpKuj98HW0ikdQ4pmwW/5Ub73qRU?=
 =?us-ascii?q?uL5wL23OTkhWZSj2KGdiX7C0trqDZc5P9ZwpvT9WUOS6fVCVVLr9rwEG3CPkGm?=
 =?us-ascii?q?tU3Co7eC2yupXlgxx6j3qQLXZyrHbDecB83wzf5MHaRfNK2joGRS94iSTYB1Sm?=
 =?us-ascii?q?Ptmp+8mUmInHsuykS22hUZhTezHxzYycrCu7+XFqARqnkvCxgNLnCws60Sz819?=
 =?us-ascii?q?VwTiXHthX8Yorq16S8L+1neFJlBFv968p8B4F/nZE8hJAW2XgGmJqV+WALnnv0?=
 =?us-ascii?q?MdVewaj+dmYCRSYXw97J5wjowE1iIWiOx47jVHWdw81hasK+YmMX3CI98s9LBL?=
 =?us-ascii?q?2V7LxCgSt6vF64oRjNbvh6mzcX0eEu52ICg+EVpAotyT2QArMIEklZJyDslwmI?=
 =?us-ascii?q?4Mq4rKVYf2uvdbmw1ExjndGuFr2CowdcWGrndZcmByN/8sJ/MFfU2n3p9o7kYM?=
 =?us-ascii?q?XQbc4UthCMlhfAjutVJ4grmvsEmyVnIn79smM/y+EgkxNux566sZODK2Vs+qK5?=
 =?us-ascii?q?HxFZOif0Z8MV5jHik6JektyK0ICoG5VrAi8LU4fwTfK0DDISsuzqNxqJED05sH?=
 =?us-ascii?q?uaGKDQHQmC6Ed9tHLPEoumN3WWJHkf0NVjSwORJE1ZgAAIQjo6moQ1GRytxMzk?=
 =?us-ascii?q?aE15/Cwe5kbkqhtQzeJlLwLwXX3YpAesdzc4UpyfLAdN4wFG5kfVN9Ge7+1pEy?=
 =?us-ascii?q?FZ+J2hsBKCKmiBawtUCmEJX1SOB0r/Mbm2+dnA7++YC/K8L/TUZLWBt/deW+2U?=
 =?us-ascii?q?xZ610Ytm4jWMNtiJPnZ4FP02wU5DXXF/G8TElDQDUS0XlyTRb8GFoBew4DF4rs?=
 =?us-ascii?q?e68P7zQgLg+ZOPC6dOMdVo4x23gaCDN/OJhCZkMzlY0IkAxWTPyLgZ014fkCVu?=
 =?us-ascii?q?dzirEbQdui/BVqPQmqlLDxEFbyN/LtdH76U53gNVI87Ulsv11qJkjv4yE1pFVU?=
 =?us-ascii?q?LumsCqZcwJImGxLlDHBFyMNLSJOzLL2dz3YbinRL1UjeVUsQCwuDmBH0/iODSD?=
 =?us-ascii?q?iyfmVxS1Pe5QiyGbOQRUuJuhfRZ1FWjjUNXmZwWhP99qljI226M7h3PQOW4YMD?=
 =?us-ascii?q?hxaEdNrryW7SNFjfRzAW1B7nx5LeaanyaV9fXXKpETsfFzGCR7i/pa4Ggmy7tS?=
 =?us-ascii?q?9CxEWP11mC7IotFyuV2pjumPxSRhUBdVrjZLhYSLvVhtOKnD95lAX2rE8wwJ7W?=
 =?us-ascii?q?mKFxsKoN5lAMX1u69M0tjPiL7zKDBa/tPU58QcAc3UKMOBMHU5MBvpGCTbDA0K?=
 =?us-ascii?q?TTOwMWHfhkpdkOyd93GPr5g6rITsl4QKSrNBSFM1EfYaWQxZG4kiLZZxUylssr?=
 =?us-ascii?q?efiNEF5Gb2+BnSTcFeoZ3GSqu6DvDmKTLfhr5BMUgm27T9eKcOMIz72k9lInlz?=
 =?us-ascii?q?jY3RG0uYCdBEsyR6bg5yo1hL8Xh/TWobwEXuawSr7W8PU/Wzm0hl2UNFfe0x+W?=
 =?us-ascii?q?K0sB8MLV3QqX51yRFplA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAAAXmxhch0O0hNFcCBkBAQEBAQEBA?=
 =?us-ascii?q?QEBAQEHAQEBAQEBgVEEAQEBAQELAYJpA38njBVfixqCDRSJAY5FgXMtCwgBh1s?=
 =?us-ascii?q?iNAkNAQMBAQEBAQECARMBAQEKCwkIKSMMgjYkAYJhAQEBAQIBAQIkEz8FAQkBA?=
 =?us-ascii?q?QoOCi4DHgcvBhMFgx0BgWgDDQcBBQqoXDMaAoQRAYNjDYIYBYJ+iUGCFoMBdC6?=
 =?us-ascii?q?CV0cDgTuDXoImApAYNpAjMAcChw+GL3CDJSRfiScUA4c3jjeBEotrgg4zGiODP?=
 =?us-ascii?q?IInFxKIETuFTjABATEBgQQBAYsrBIJJAQE?=
X-IPAS-Result: =?us-ascii?q?A0ABAAAXmxhch0O0hNFcCBkBAQEBAQEBAQEBAQEHAQEBAQE?=
 =?us-ascii?q?BgVEEAQEBAQELAYJpA38njBVfixqCDRSJAY5FgXMtCwgBh1siNAkNAQMBAQEBA?=
 =?us-ascii?q?QECARMBAQEKCwkIKSMMgjYkAYJhAQEBAQIBAQIkEz8FAQkBAQoOCi4DHgcvBhM?=
 =?us-ascii?q?Fgx0BgWgDDQcBBQqoXDMaAoQRAYNjDYIYBYJ+iUGCFoMBdC6CV0cDgTuDXoImA?=
 =?us-ascii?q?pAYNpAjMAcChw+GL3CDJSRfiScUA4c3jjeBEotrgg4zGiODPIInFxKIETuFTjA?=
 =?us-ascii?q?BATEBgQQBAYsrBIJJAQE?=
X-IronPort-AV: E=Sophos;i="5.56,367,1539673200"; 
   d="scan'208";a="44457328"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 17 Dec 2018 23:01:45 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726410AbeLRG6n (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 18 Dec 2018 01:58:43 -0500
Received: from mx.socionext.com ([202.248.49.38]:3648 "EHLO mx.socionext.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726330AbeLRG6m (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 18 Dec 2018 01:58:42 -0500
Received: from unknown (HELO iyokan-ex.css.socionext.com) ([172.31.9.54])
  by mx.socionext.com with ESMTP; 18 Dec 2018 15:58:40 +0900
Received: from mail.mfilter.local (m-filter-1 [10.213.24.61])
        by iyokan-ex.css.socionext.com (Postfix) with ESMTP id 9DDCD60085;
        Tue, 18 Dec 2018 15:58:40 +0900 (JST)
Received: from 172.31.9.53 (172.31.9.53) by m-FILTER with ESMTP; Tue, 18 Dec 2018 15:58:40 +0900
Received: from yuzu.css.socionext.com (yuzu [172.31.8.45])
        by iyokan.css.socionext.com (Postfix) with ESMTP id 374394087F;
        Tue, 18 Dec 2018 15:58:40 +0900 (JST)
Received: from [127.0.0.1] (unknown [10.213.132.48])
        by yuzu.css.socionext.com (Postfix) with ESMTP id 14771120605;
        Tue, 18 Dec 2018 15:58:40 +0900 (JST)
Date: Tue, 18 Dec 2018 15:58:39 +0900
From: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
To: Heiner Kallweit <hkallweit1@gmail.com>
Subject: Re: [RFC PATCH net v3] net: phy: Fix the issue that netif always links up after resuming
Cc: Andrew Lunn <andrew@lunn.ch>,
        Florian Fainelli <f.fainelli@gmail.com>,
        "David S. Miller" <davem@davemloft.net>, netdev@vger.kernel.org,
        linux-kernel@vger.kernel.org
In-Reply-To: <fcfb1597-e8f4-27c6-ae8c-646fd43c846d@gmail.com>
References: <20181218152507.F2C6.4A936039@socionext.com> <fcfb1597-e8f4-27c6-ae8c-646fd43c846d@gmail.com>
Message-Id: <20181218155839.F2CA.4A936039@socionext.com>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-Mailer: Becky! ver. 2.70 [ja]
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Heiner,

On Tue, 18 Dec 2018 07:44:33 +0100 <hkallweit1@gmail.com> wrote:

> On 18.12.2018 07:25, Kunihiko Hayashi wrote:
> > Hi Heiner,
> > 
> > On Mon, 17 Dec 2018 19:43:31 +0100 <hkallweit1@gmail.com> wrote:
> > 
> >> On 17.12.2018 19:41, Heiner Kallweit wrote:
> >>> On 17.12.2018 07:41, Kunihiko Hayashi wrote:
> >>>> Hi,
> >>>>
> >>>> Gentle ping...
> >>>> Are there any comments about changes since v2?
> >>>>
> >>>> v2: https://www.spinics.net/lists/netdev/msg536926.html
> >>>>
> >>>> Thank you,
> >>>>
> >>>> On Mon, 3 Dec 2018 17:22:29 +0900 <hayashi.kunihiko@socionext.com> wrote:
> >>>>
> >>>>> Even though the link is down before entering hibernation,
> >>>>> there is an issue that the network interface always links up after resuming
> >>>>> from hibernation.
> >>>>>
> >>>>> The phydev->state is PHY_READY before enabling the network interface, so
> >>>>> the link is down. After resuming from hibernation, the phydev->state is
> >>>>> forcibly set to PHY_UP in mdio_bus_phy_restore(), and the link becomes up.
> >>>>>
> >>>>> This patch adds a new convenient function to check whether the PHY is in
> >>>>> a started state, and expects to solve the issue by changing phydev->state
> >>>>> to PHY_UP and calling phy_start_machine() only when the PHY is started.
> >>>>>
> >>> This convenience function and the related change to phy_stop() are part of
> >>> the following already and don't need to be part of your patch.
> >>> https://patchwork.ozlabs.org/patch/1014171/
> > 
> > I see. I'll follow your patch when necessary.
> > 
> >>>>> Suggested-by: Heiner Kallweit <hkallweit1@gmail.com>
> >>>>> Signed-off-by: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
> >>>>> ---
> >>>>>
> >>>>> Changes since v2:
> >>>>>  - add mutex lock/unlock for changing phydev->state
> >>>>>  - check whether the mutex is locked in phy_is_started()
> >>>>>  
> >>>>> Changes since v1:
> >>>>>  - introduce a new helper function phy_is_started() and use it instead of
> >>>>>    checking link status
> >>>>>  - replace checking phydev->state with phy_is_started() in
> >>>>>    phy_stop_machine()
> >>>>>
> >>>>> drivers/net/phy/phy.c        |  2 +-
> >>>>>  drivers/net/phy/phy_device.c | 12 +++++++++---
> >>>>>  include/linux/phy.h          | 13 +++++++++++++
> >>>>>  3 files changed, 23 insertions(+), 4 deletions(-)
> >>>>>
> >>>>> diff --git a/drivers/net/phy/phy.c b/drivers/net/phy/phy.c
> >>>>> index 1d73ac3..f484d03 100644
> >>>>> --- a/drivers/net/phy/phy.c
> >>>>> +++ b/drivers/net/phy/phy.c
> >>>>> @@ -670,7 +670,7 @@ void phy_stop_machine(struct phy_device *phydev)
> >>>>>  	cancel_delayed_work_sync(&phydev->state_queue);
> >>>>>  
> >>>>>  	mutex_lock(&phydev->lock);
> >>>>> -	if (phydev->state > PHY_UP && phydev->state != PHY_HALTED)
> >>>>> +	if (phy_is_started(phydev))
> >>>>>  		phydev->state = PHY_UP;
> >>>
> >>> I'm wondering whether we need to do this. If the PHY is attached,
> >>> then mdio_bus_phy_suspend() calls phy_stop_machine() which does
> >>> exactly the same. If the PHY is not attached, then we don't have
> >>> to do anything. Therefore I think we just have to do the same as
> >>> in mdio_bus_phy_resume():
> >>>
> >>> if (phydev->attached_dev && phydev->adjust_link)
> >>> 	phy_start_machine(phydev);
> > 
> > Agreed.
> > 
> > Although the original code changed phydev->state,
> > it seems that it's only enough to
> > - call phy_stop_machine() in mdio_bus_phy_suspend()
> > - call phy_start_machine() in mdio_bus_phy_resume() and mdio_bus_phy_restore()
> > if the PHY is attached.
> > 
> >>> Can you test this?
> > 
> > I tested your code instead of applying my entire patch, and I confirmed
> > that the code solved the issue in my environment.
> > 
> > Do you make new patch instead of my patch?
> > (and I can add Reported-by: for the issue and Tested-by:)
> > 
> Up to you. It's fine with me if you submit the patch, but I can also do it
> and mention you in Reported-by and Tested-by. Just let me know.

I see. I'll make and submit the patch as a fix for the issue.

Thank you,

> 
> > Thank you,
> > 
> > 
> >>>
> >> Sorry for the confusion, this comment is related to the next part
> >> of your patch.
> >>
> >>>>>  	mutex_unlock(&phydev->lock);
> >>>>>  }
> >>>>> diff --git a/drivers/net/phy/phy_device.c b/drivers/net/phy/phy_device.c
> >>>>> index ab33d17..4897d24 100644
> >>>>> --- a/drivers/net/phy/phy_device.c
> >>>>> +++ b/drivers/net/phy/phy_device.c
> >>>>> @@ -309,10 +309,16 @@ static int mdio_bus_phy_restore(struct device *dev)
> >>>>>  		return ret;
> >>>>>  
> >>>>>  	/* The PHY needs to renegotiate. */
> >>>>> -	phydev->link = 0;
> >>>>> -	phydev->state = PHY_UP;
> >>>>> +	mutex_lock(&phydev->lock);
> >>>>> +	if (phy_is_started(phydev)) {
> >>>>> +		phydev->state = PHY_UP;
> >>>>> +		mutex_unlock(&phydev->lock);
> >>>>> +		phydev->link = 0;
> >>>>> +		phy_start_machine(phydev);
> >>>>> +	} else {
> >>>>> +		mutex_unlock(&phydev->lock);
> >>>>> +	}
> >>>>>  
> >>>>> -	phy_start_machine(phydev);
> >>>>>  
> >>>>>  	return 0;
> >>>>>  }
> >>>>> diff --git a/include/linux/phy.h b/include/linux/phy.h
> >>>>> index 3ea87f7..dd21537 100644
> >>>>> --- a/include/linux/phy.h
> >>>>> +++ b/include/linux/phy.h
> >>>>> @@ -898,6 +898,19 @@ static inline bool phy_is_pseudo_fixed_link(struct phy_device *phydev)
> >>>>>  }
> >>>>>  
> >>>>>  /**
> >>>>> + * phy_is_started - Convenience function for testing whether a PHY is in
> >>>>> + * a started state
> >>>>> + * @phydev: the phy_device struct
> >>>>> + *
> >>>>> + * The caller must have taken the phy_device mutex lock.
> >>>>> + */
> >>>>> +static inline bool phy_is_started(struct phy_device *phydev)
> >>>>> +{
> >>>>> +	WARN_ON(!mutex_is_locked(&phydev->lock));
> >>>>> +	return phydev->state >= PHY_UP && phydev->state != PHY_HALTED;
> >>>>> +}
> >>>>> +
> >>>>> +/**
> >>>>>   * phy_write_mmd - Convenience function for writing a register
> >>>>>   * on an MMD on a given PHY.
> >>>>>   * @phydev: The phy_device struct
> >>>>> -- 
> >>>>> 2.7.4
> >>>>
> >>>> ---
> >>>> Best Regards,
> >>>> Kunihiko Hayashi
> >>>>
> >>>>
> >>>>
> >>>
> > 
> > ---
> > Best Regards,
> > Kunihiko Hayashi
> > 
> > 
> > 

---
Best Regards,
Kunihiko Hayashi


