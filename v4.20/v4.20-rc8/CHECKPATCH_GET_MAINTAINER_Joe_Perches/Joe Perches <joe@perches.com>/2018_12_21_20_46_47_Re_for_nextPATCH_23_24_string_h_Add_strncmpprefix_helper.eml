Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:55:12 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B786F58050C;
	Fri, 21 Dec 2018 12:46:57 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by fmsmga005-1.fm.intel.com with ESMTP; 21 Dec 2018 12:46:56 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AuLIybB3DaprZy2a0smDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segSKP/xwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJCUMhMVyJPHI2y?=
 =?us-ascii?q?YIkBD+UdM+lXoIbzp0AWrRa8HgSsGOHixyVUinPqx6A2zuIsGhzG0gw6GNIOtW?=
 =?us-ascii?q?zZotHyNKgMTOu71rfHzS/fYPNWxzj985XDfxcjofGLQ719atLRxlc1FwzZjlWf?=
 =?us-ascii?q?t5flMymJ2eQKtmiW9uxtXv+shW4/swx9vCSjy8M2hoXUiI8Z1ErI+Th6zYopP9?=
 =?us-ascii?q?G1SUx2bcarHZZSrS2WKot7Tt44T211uCs3xKcKtJ61cSUM1Z8p3QTQa+adfIiN?=
 =?us-ascii?q?+h/jVPieITN/hH99ZrK/iAi98VK6xu3/SMa0ylBKoTRBktXWsXANzRPT5tCGSv?=
 =?us-ascii?q?t74EihxS6C2x7P5uxAO0w4iKTWJ4A7zrItlZcfrV7PEy70lUnuia+ZbEQk+uym?=
 =?us-ascii?q?6+T9ZbXmo4eRN4t1igH4L6QvldWzAecmPQgUWWiU5+C82KTk/Uz3RrVFkOc2n7?=
 =?us-ascii?q?LHsJDVO8sbvLS1AwxL3YY57RawETOm3M4fnXkdI1JJYAiHgJTxO1HSPPD4Cu+y?=
 =?us-ascii?q?g1CtkDdo2f/KJLLgAojWI3jHkbfhe6t96kFGxAoyy9Bf+4xbCrUbLP3vXU/xsc?=
 =?us-ascii?q?TSDgUlPAys3+bnFNJ925seWW2VA6+ZLLndsViS6uIvPumDfokVuDnmJvgh5v7u?=
 =?us-ascii?q?i2I5mFAHcamo25sXdG63HvB8L0qFZnrsh88LEX0WsQomUOzqlFqCXCZJaHapX6?=
 =?us-ascii?q?I84TI7BJi8DYjZRICgm7iB3Ca9Hp1LaWFKEFGMEXH0d4qaX/cAcj6dIshkkjYc?=
 =?us-ascii?q?T7iuV5ch1Q2ytA/907dnLfDb+isCuZLn1dh6/evTlR4p+DxwDsSd1XyNTm5ukm?=
 =?us-ascii?q?MJQT82wL5woUhnxlif1qh4huRSFcZP6PNRTgc6KZncwvRnBN/oRALOYM2FSFa8?=
 =?us-ascii?q?TdWgGjE+UNQxz9gKY0Z+HtWiigvO3y6rA78TiryKC4Y48qPa33jtOcl9z2zK27?=
 =?us-ascii?q?Umj1kjWsFPL3GphrZj9wjPAI7Ei1iWmLy0dasCxiLN9H2MzWyVvE5GVg59SqHF?=
 =?us-ascii?q?XXEZZkvLotX1/ELCT7myCbs5NgtN09KNKqxPatfxl1VJWO/jOMjCY2K2g2qwGR?=
 =?us-ascii?q?eIxraLbIr2e2Uc3D/RCFQenwAU53aGMQk+BiGuo2/FCDxuFFTvY17j8OVkqXO7?=
 =?us-ascii?q?SFM0wB+Ob0F7y7W1/RsVj+SGS/wPxrIEpDshqzJsEVmn29LZFdWBqBRhfalGet?=
 =?us-ascii?q?w9/UpI2njftwx+OZygMbtvhlofcwRxokPv2A97CoRGkcg2snwqyBB+Jr6f0FNE?=
 =?us-ascii?q?bzmYx4z/OqXLKmnu+xCic67X2kzE3NmK4KsO6fQ4pE/lvAGmDUci93Rn099I03?=
 =?us-ascii?q?qT/JnKDQwSUY7vXUYz7RR1u7baYiwl7YPOyXJsKbW0siPF298xHuslywqvcM1F?=
 =?us-ascii?q?MKyZEw/+CcsaCNa0KOwrglSmcggLPORP+6EqJcOmcP2G1bWvPOZhmjKmkGtG7J?=
 =?us-ascii?q?p80kKK6ypzVOrI04wZzPGf2wuNTy38g0u5ssDrhYBEYikfH2q+yST+BI9dfLZy?=
 =?us-ascii?q?fZsNCWq1J823x9N+h4PiWnJC9V6jAU8G19GteRaIc1P92ghQ31wNoXO7gSu40y?=
 =?us-ascii?q?B0kzYxo6qdxiPO2efidBkAOmJRX2ltl1TsIYu1j9AcQkeoaRMklB+k5Ub82qha?=
 =?us-ascii?q?q75zL2jVQUdUYSf2K3tuXbe3trqHe8RP8o8nsT1LUOSgZlCXUr78rAEd0y/5HW?=
 =?us-ascii?q?texTY7eiquupX4mRx6lW2cIGxyrHrfZcF/2xPf6MbASv5W2zoMXDN4hiXPBlig?=
 =?us-ascii?q?I9mp+s2Zl5TZveC/TW6hVoBTfjPtzYOPrya74WxqARuin/G8gNHnEA460TPl2N?=
 =?us-ascii?q?luTynHsBH8Yozz3aSgLe1nZlVoBEP768diH4F+k4gwi4sK1XkUmJqV5mYHnnnp?=
 =?us-ascii?q?MdpAx63+dnUNSCUPw97U5gjlxUJiImiIx4L/SnWS3M9ha8OmbWMR3yI399pKB7?=
 =?us-ascii?q?uM7LxYgSt1pUK1rR7WYfh4hDscyOEh6HgHg+ESowotzz6QArQTHUleICztmA6E?=
 =?us-ascii?q?79G4rKVLemmvdaK821Z5ndCkFLuCuB1TWG7lepc+Gi999t5wP0jL0H3394HoYt?=
 =?us-ascii?q?3Qbc8Iux2QkhfAifVVKZ0rmvoLgypnJXzyvXk/x+Enihxu2ImwvJKbJGV14KK5?=
 =?us-ascii?q?HhlYOyX3Z8wJ/zHik71ektyK34y1HZVhBzYLXIbuTf2yCzIfrvDnNweIED0hpX?=
 =?us-ascii?q?aXA7vfHQmD6Eh4q3LDCYykN3aSJHMB19VtWAGdJFBDgAATRDg7npk5Fh2zxMz8?=
 =?us-ascii?q?akh54Cod5kX/qhtKxeJlLB3/UmbZpAe1ZTY4UpmfLBxK7g5c40fZK9CR7uV2Hy?=
 =?us-ascii?q?tA5J2usBSNKnCHZwRPFWwJWlKLB1HgPrmt5NnM6euYBvC5L/vBf7qOs/FeV+yT?=
 =?us-ascii?q?yJKr04tm+SuMN8qVMnljCf07xlRMXXRjF8vFnDUPTjQdlzjRYM6DuBe85ip3o9?=
 =?us-ascii?q?il//T2Qw3v/5WACrtIPdVr+hC7mqODN++WhCZkJjdUzJIMxXnUyLcB2F4ekT1h?=
 =?us-ascii?q?dz6oEb4Yry7CULrQmrNLDx4ccy5zKMpI76cm0gZRI8LUltP12aB+jvMuD1dFVF?=
 =?us-ascii?q?rhmtymZMAQImG9Mk/HC1iPNLicOTLLxMT3a7umSbJMlOVUqwGwuTGDHk7jJDuD?=
 =?us-ascii?q?kTzpVxGpMe5UjSCbPAZRuIeycht2DWjjTdTmagC0MdNtjD02x6E0iW3ONWIGLT?=
 =?us-ascii?q?d8dEZN/fWs6nZjnvhhFmoJ1H1+MeSIh27N9e7DNpsardNkBSN4kuNBpnMgxO0R?=
 =?us-ascii?q?pAVFQuFu0BfVtMBnp1292r2TzSB5WR5CsR5PhYSWrQBsPrjf+pBcWHHCuhUX4j?=
 =?us-ascii?q?PDJQ4Noo5HDdCng61KwdjCj+qnKjBP28rZ58AcCtOSI8WCZilyeSH1ESLZWVNW?=
 =?us-ascii?q?BQWgMnvS0gkEyKmf?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AXAAC9UB1ch0O0hNFkGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBZYNsjRyNKhSBDZhxAYcwIjgSAQMBAQEBAQECARMBAQEIDQk?=
 =?us-ascii?q?IKS+COikBgmcBAgMBAnYGCQEBChguA1QGAReDHYICAwKnTIVBhGyIU4NsF4F/g?=
 =?us-ascii?q?241imACi0OEHUgBN5BlCYIpj1iRXyyJJ5BKgVyBd00jFYMogiYXjj4ggTUBAQE?=
 =?us-ascii?q?gjg4BAQ?=
X-IPAS-Result: =?us-ascii?q?A0AXAAC9UB1ch0O0hNFkGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BZYNsjRyNKhSBDZhxAYcwIjgSAQMBAQEBAQECARMBAQEIDQkIKS+COikBgmcBA?=
 =?us-ascii?q?gMBAnYGCQEBChguA1QGAReDHYICAwKnTIVBhGyIU4NsF4F/g241imACi0OEHUg?=
 =?us-ascii?q?BN5BlCYIpj1iRXyyJJ5BKgVyBd00jFYMogiYXjj4ggTUBAQEgjg4BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,382,1539673200"; 
   d="scan'208";a="58501552"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 21 Dec 2018 12:46:55 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2390541AbeLUUqw (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Fri, 21 Dec 2018 15:46:52 -0500
Received: from smtprelay0105.hostedemail.com ([216.40.44.105]:60454 "EHLO
        smtprelay.hostedemail.com" rhost-flags-OK-OK-OK-FAIL)
        by vger.kernel.org with ESMTP id S1731379AbeLUUqw (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 21 Dec 2018 15:46:52 -0500
Received: from filter.hostedemail.com (clb03-v110.bra.tucows.net [216.40.38.60])
        by smtprelay02.hostedemail.com (Postfix) with ESMTP id C8BEE21FA;
        Fri, 21 Dec 2018 20:46:50 +0000 (UTC)
X-Session-Marker: 6A6F6540706572636865732E636F6D
X-Spam-Summary: 2,0,0,,d41d8cd98f00b204,joe@perches.com,:::::::::::::::::,RULES_HIT:41:355:379:599:973:988:989:1260:1277:1311:1313:1314:1345:1359:1437:1515:1516:1518:1534:1541:1593:1594:1711:1730:1747:1777:1792:1981:2194:2199:2393:2559:2562:2828:3138:3139:3140:3141:3142:3354:3622:3865:3866:3867:3868:3870:3871:3872:3874:4321:4605:5007:6119:7875:10004:10400:10848:11026:11232:11658:11914:12296:12740:12760:12895:13069:13161:13229:13311:13357:13439:14659:14721:21063:21080:21451:21627:21740:30029:30051:30054:30070:30091,0,RBL:47.151.153.53:@perches.com:.lbl8.mailshell.net-62.14.0.100 64.201.201.201,CacheIP:none,Bayesian:0.5,0.5,0.5,Netcheck:none,DomainCache:0,MSF:not bulk,SPF:fn,MSBL:0,DNSBL:neutral,Custom_rules:0:0:0,LFtime:28,LUA_SUMMARY:none
X-HE-Tag: coach68_1e6f4544b801b
X-Filterd-Recvd-Size: 3099
Received: from XPS-9350.home (unknown [47.151.153.53])
        (Authenticated sender: joe@perches.com)
        by omf02.hostedemail.com (Postfix) with ESMTPA;
        Fri, 21 Dec 2018 20:46:49 +0000 (UTC)
Message-ID: <077eeb8b09baebe78822819b5f15d671b738a2b2.camel@perches.com>
Subject: Re: [for-next][PATCH 23/24] string.h: Add strncmp_prefix() helper
 macro
From: Joe Perches <joe@perches.com>
To: Steven Rostedt <rostedt@goodmis.org>,
        Linus Torvalds <torvalds@linux-foundation.org>
Cc: Linux List Kernel Mailing <linux-kernel@vger.kernel.org>,
        Ingo Molnar <mingo@kernel.org>,
        Andrew Morton <akpm@linux-foundation.org>,
        Namhyung Kim <namhyung@kernel.org>,
        Masami Hiramatsu <mhiramat@kernel.org>,
        Tom Zanussi <zanussi@kernel.org>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date: Fri, 21 Dec 2018 12:46:47 -0800
In-Reply-To: <20181221153526.5e6055ca@gandalf.local.home>
References: <20181221175618.968519903@goodmis.org>
         <20181221175659.208858193@goodmis.org>
         <CAHk-=wg_sR-UEC1ggmkZpypOUYanL5CMX4R7ceuaV4QMf5jBtg@mail.gmail.com>
         <20181221144054.20bdeb33@gandalf.local.home>
         <CAHk-=wgSvRhj6KNRdn9gbK9RJVAswdtKSNjAxdf9O9vn04T5XQ@mail.gmail.com>
         <20181221153526.5e6055ca@gandalf.local.home>
Content-Type: text/plain; charset="ISO-8859-1"
User-Agent: Evolution 3.30.1-1build1 
Mime-Version: 1.0
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Fri, 2018-12-21 at 15:35 -0500, Steven Rostedt wrote:
> At first I thought this would have issues, but with a slight change...
> 
> #define have_prefix(str, prefix) ({ \
> 	const char *__pfx = (const char *)prefix; \
> 
> 
> And the rest the same, it appears to work.
> 
> Need the cast because if for some reason someone passed in something
> like "const unsigned char" then it wouldn't work. But that's just a nit.
> 
> So something like this then?
> 
> -- Steve
> 
> diff --git a/include/linux/string.h b/include/linux/string.h
[]
> @@ -14,6 +14,28 @@ extern void *memdup_user(const void __user *, size_t);
>  extern void *vmemdup_user(const void __user *, size_t);
>  extern void *memdup_user_nul(const void __user *, size_t);
>  
> +/**
> + * have_prefix - Test if a string has a given prefix

There is a naming mismatch of have/has here
and has_prefix is probably too generic a name.

How about str_has_prefix?

> + * @str: The string to test
> + * @prefix: The string to see if @str starts with
> + *
> + * A common way to test a prefix of a string is to do:
> + *  strncmp(str, prefix, sizeof(prefix) - 1)
> + *
> + * But this can lead to bugs due to typos, or if prefix is a pointer
> + * and not a constant. Instead use has_prefix().
> + *
> + * Returns: 0 if @str does not start with @prefix
> +         strlen(@prefix) if @str does start with @prefix
> + */
> +#define has_prefix(str, prefix)						\
> +	({								\
> +		const char *____prefix____ = (const char *)(prefix);	\
> +		int ____len____ = strlen(____prefix____);		\
> +		strncmp(str, ____prefix____, ____len____) == 0 ?	\
> +			____len____ : 0;				\
> +	}) 

I think all the underscores are unnecessary and confusing.


