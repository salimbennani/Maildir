Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  19 Dec 2018 21:33:59 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 7D06F580522;
	Wed, 19 Dec 2018 03:55:05 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga001-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 19 Dec 2018 03:55:04 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Anuu8NBLJs86WB8qgwtmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULvv8rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZXshfSTFPDI2/?=
 =?us-ascii?q?YYQNAeoBJv5YoovmqlcSsRezHxWgCP/zxjNUgHL9wK000/4mEQHDxAEuHswBsG?=
 =?us-ascii?q?7Jo97oNqkSVu61zKfNzTrZafNW3yr25Y/LchA7u/6NUqx/cc7KxEk1CQzKk1WQ?=
 =?us-ascii?q?ppb5Pz+PyusNtG2b4vNmWOmyiGAnsxl8riazysookIXFm4wYxk7e+Slkw4s5Oc?=
 =?us-ascii?q?e0RU95bNK8DpdcqyWXO5FrTs4sXW1kojs2x74ItJKhYiQHy5IqzAPFZfOdaYiH?=
 =?us-ascii?q?+BfjWf6RIThmgHJlf6qyhwi98Ue+0O3wTMq030hQripDjNbMsmoB1xvJ6siIUv?=
 =?us-ascii?q?d9/0Gh1iiT1w3L9O1IPUQ5mbDGJ5Mv3LI8jIcfvEffEiPsmUj7jreadkA+9eip?=
 =?us-ascii?q?7+TnbK/mppiZN4JsjgH+M6IumtGwAOghMQgBQXKb+eKi273n5EH5R7tLjvsona?=
 =?us-ascii?q?nDq53aO8sbqbCjAwNP0YYs9Qy/DzG439Qch3UHK0hFeB2fg4jzJ17OOOz4Deu4?=
 =?us-ascii?q?g1m0lDdrxvPGMaP7DpTCM3jOi7Phfbd7605Bxws/19Ff55RICr4fJPL/QFP+tN?=
 =?us-ascii?q?vdDhUhKQy73/7nCMlh1oMZQW+PArWWMKLOsVCS4eIjOemMZJIPtzb7JPgo/Pru?=
 =?us-ascii?q?jX4/mV8Acqilx5oXaHakHvt4J0WVe2bjgtAEEW0SpAoxUPTqiEGeUT5Uf3uyXa?=
 =?us-ascii?q?U86S8hBIKlCofDQIatgLua0Se/H51WYH1GC1+WHXfpcYWER+kDaCaILsB9lTwE?=
 =?us-ascii?q?UKCrS5U92hG2qA/6171nI/LO9S0DtZLj09t16/fJlR4o9zx5FMCd02CLT2FpkW?=
 =?us-ascii?q?IEXT423KZjoUNjzlePy7R3g/tdFdZL/fNGTh86NYLAz+x9E93yWRjOftGTRFai?=
 =?us-ascii?q?Q9WpGzcxTt0qzt8KYkZ9Hciijx/Z0yqrBb8Vi6KEBJgu/q3A2HjxIt53y2za26?=
 =?us-ascii?q?k5k1kmXsxPOHW7iaFl6QjcGZTFk0WDmKasbqQTwijN+GCHzWqNuUFYVBV9UaHE?=
 =?us-ascii?q?XXAZe0vXos715kLET7+yF7snNhFNxtKFKqtPctfpl0lJRO//ONTCZGK8g3q/Cg?=
 =?us-ascii?q?yWxrySdobqe38S3CPGCEcalQAe5nKGNQk4Bie8rGPSFj1uFVTzY0zy9elysm+0?=
 =?us-ascii?q?TkgxzwuSdU1uy6K1+gIJhfybU/4TwrMEuCImqzVoHFa838jaC8aaqwpmZqVcZd?=
 =?us-ascii?q?I94FFI1W/Cswx9P5qgL71th1IEcgR3uV/u2AtzColajccqq3YqxhJoKa2EyFNB?=
 =?us-ascii?q?ay+Y3ZfoN7LNLmn94h+uZLDW213Ey9mW57oA5+4+q1XguwGpCFEv83Fm09lTzn?=
 =?us-ascii?q?ud6Y/GDAsUUZLtTEk38wJ2qK3dYik4/4nUz2FjMbGosj/e3NIkHOskygu6c9hD?=
 =?us-ascii?q?Kq+FFQ/yHNccB8ihM+Eqn1mpbhQZPOFd7qI0PsWmd+eY166vJupvgDWmjWFf6o?=
 =?us-ascii?q?Bnzk2M7zZ8SvLP35sd2fGY3xeIWC3mjFi8tcD7g4ZEai8IHmq+0CTrGJReZqlv?=
 =?us-ascii?q?cokVE2euJMu3y856h57sXX5Y6VGiC0kH2M+vZRqdcVj90RdM2kQQpHytgTG4wC?=
 =?us-ascii?q?BskzE1sqqf2zTDwuTjdBYdOm9HXnJijUrqIYWvi9AaXU6obxUmlRe/5Eb6wbRb?=
 =?us-ascii?q?q7p7L2XJXUhIeC32JXl4UqSsrrqCf9JP6JQwvCVVSuu8e1OaSr36oxcAyCPsBW?=
 =?us-ascii?q?hexDM6dzGspJr5mQd3iGacLHZ1sXrYdtt8xRbZ5NzAW/FR2iAKSzV/iTnSHlK8?=
 =?us-ascii?q?JcWm/c2Il5ffteCzT2KgWYdUcSXxz4OAtS276HZuAR2+mfCzh9LmHRI70S/9y9?=
 =?us-ascii?q?llSyHIoAzgbYns0qSwKfhncVVwBF/g98p6HZlzkogqi5ERw3QahoiV8mABkWf8?=
 =?us-ascii?q?Kthb3aP+bHwQRT8E2dLV4Q7l2FF9IXKN3Y72SnKdws55bdmgfmwWwj4979xNCK?=
 =?us-ascii?q?qM6bxEnCh1rUCioQPff/d9hSsdxuU06HEBne4JogUtwz6ZArATG0lYICPtmw6J?=
 =?us-ascii?q?79C4sKVYemKvfaKs20p5mNCrFKuCrR1EWHblZpciGjd97tl4MFLJynHy65vreN?=
 =?us-ascii?q?/NbdIIrR2UkgzNj+xUKJI3i/oLijBrOWP7vX051eE7iQZi0o29vIiCM29t5r62?=
 =?us-ascii?q?AgZENj3pYMMe4irigrxZnsaSwoCjBJFhGigQUZvsTPKoFi8StPv9OwaPFj08tm?=
 =?us-ascii?q?mUGb7FEQCD70dmqmrFE4q3OHGPOHkZ0dJiSQGfJENFhQAbQi46koQlFgywx8zh?=
 =?us-ascii?q?bUR55i0X5lHisRtB0eZoNxj5UmfCqwakcDY0SJ6DLBVI6gFO/VvaMcub7uhrBS?=
 =?us-ascii?q?FX4oWhrBCRKmycfwlJDWYJWlGdB1D+JLau48PM8/OfBuq4IPvDerGOqe1YV/eV?=
 =?us-ascii?q?ypOjyIpm/zCQNsqROnluFeE02k1GXXphAcTWhy0PSzALlyLKd8ObpAmz+ix0rs?=
 =?us-ascii?q?C88fTnQgHv5ZGIC7tdL9pv4Q22gbyYOu6UhSZ5LytY15wWyX/JzrgfwEAdiyV0?=
 =?us-ascii?q?ezaxFrQAsDbHTLjMla9PEx4bdyRzOdNS4KIhxQZNI9DUi9Pv2r58j/44EFNFVV?=
 =?us-ascii?q?3nmsG0as0GOWC9NFXbBEmVMLSKPyHEw8byYamkU71fkP1UtwGsuTacC0LjIjWD?=
 =?us-ascii?q?lzzzWx+zK+1DkCGbMwJYuIymdhZtCG7jTM/paxGhMd93iyE2zqMwhn/QKWEcNj?=
 =?us-ascii?q?18eVtXrrKM9SNYnul/G2tZ43tlN+aEnSOZ7+jeKpkOsPprAj57l+RV4Hkhz7tV?=
 =?us-ascii?q?7SdEROF6mSfIr95upU2mnfeLyjZ9TBVOrTNL18q3uhBuI6Sc+pReVHLs+BMW8X?=
 =?us-ascii?q?7WBQ4HqtdoEd7zvLgWzcLA0OrfISlD/5r9/NEYBsWcfMuGKn4gPBbBAjPYDAIZ?=
 =?us-ascii?q?CzWsMDeMqVZalaS9+2eZ5rg9pJbpkZwIAutYTlUlG/cyEElpHNUeZpxwW2V3wv?=
 =?us-ascii?q?agkMcU6C/m/1HqT8JAs8WCD6rKDA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AgAACYMBpch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUgYBAQsBg2snjHWLHVABAQaBSYkPjjqBcxUYEwGHKiI1CA0BAwEBAQEBAQI?=
 =?us-ascii?q?BEwEBAQgNCQgpL4I2JAGCYgMDAQIkUgYJAQFQAykrBgESBYMdgXUNBahIM4ovj?=
 =?us-ascii?q?D8XeIEHgRGNcgKJPwqHXpANCZFWDBiJd4diLIkckDqBSAGCC00jFYMngicXjh4?=
 =?us-ascii?q?+AQExgQUBARyNRAEB?=
X-IPAS-Result: =?us-ascii?q?A0AgAACYMBpch0O0hNFkHAEBAQQBAQcEAQGBUgYBAQsBg2s?=
 =?us-ascii?q?njHWLHVABAQaBSYkPjjqBcxUYEwGHKiI1CA0BAwEBAQEBAQIBEwEBAQgNCQgpL?=
 =?us-ascii?q?4I2JAGCYgMDAQIkUgYJAQFQAykrBgESBYMdgXUNBahIM4ovjD8XeIEHgRGNcgK?=
 =?us-ascii?q?JPwqHXpANCZFWDBiJd4diLIkckDqBSAGCC00jFYMngicXjh4+AQExgQUBARyNR?=
 =?us-ascii?q?AEB?=
X-IronPort-AV: E=Sophos;i="5.56,372,1539673200"; 
   d="scan'208";a="56518925"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 19 Dec 2018 03:55:03 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729457AbeLSLvk (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 19 Dec 2018 06:51:40 -0500
Received: from mx1.redhat.com ([209.132.183.28]:47844 "EHLO mx1.redhat.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1729413AbeLSLve (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 19 Dec 2018 06:51:34 -0500
Received: from smtp.corp.redhat.com (int-mx03.intmail.prod.int.phx2.redhat.com [10.5.11.13])
        (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
        (No client certificate requested)
        by mx1.redhat.com (Postfix) with ESMTPS id 5ADF864100;
        Wed, 19 Dec 2018 11:51:33 +0000 (UTC)
Received: from sirius.home.kraxel.org (ovpn-117-174.ams2.redhat.com [10.36.117.174])
        by smtp.corp.redhat.com (Postfix) with ESMTP id 0782960DB7;
        Wed, 19 Dec 2018 11:51:33 +0000 (UTC)
Received: by sirius.home.kraxel.org (Postfix, from userid 1000)
        id 156B5422F6; Wed, 19 Dec 2018 12:51:29 +0100 (CET)
From: Gerd Hoffmann <kraxel@redhat.com>
To: dri-devel@lists.freedesktop.org, David Airlie <airlied@redhat.com>
Cc: Gerd Hoffmann <kraxel@redhat.com>, David Airlie <airlied@linux.ie>,
        virtualization@lists.linux-foundation.org (open list:DRM DRIVER FOR
        BOCHS VIRTUAL GPU), linux-kernel@vger.kernel.org (open list)
Subject: [PATCH 09/14] drm/bochs: remove old bochs_crtc_* functions
Date: Wed, 19 Dec 2018 12:51:22 +0100
Message-Id: <20181219115127.31359-10-kraxel@redhat.com>
In-Reply-To: <20181219115127.31359-1-kraxel@redhat.com>
References: <20181219115127.31359-1-kraxel@redhat.com>
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.13
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16 (mx1.redhat.com [10.5.110.39]); Wed, 19 Dec 2018 11:51:33 +0000 (UTC)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Remove the old, now unused crtc callbacks.

Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
---
 drivers/gpu/drm/bochs/bochs_kms.c | 81 ---------------------------------------
 1 file changed, 81 deletions(-)

diff --git a/drivers/gpu/drm/bochs/bochs_kms.c b/drivers/gpu/drm/bochs/bochs_kms.c
index 9e836386e9..85dd268fa1 100644
--- a/drivers/gpu/drm/bochs/bochs_kms.c
+++ b/drivers/gpu/drm/bochs/bochs_kms.c
@@ -20,74 +20,6 @@ MODULE_PARM_DESC(defy, "default y resolution");
 
 /* ---------------------------------------------------------------------- */
 
-static void bochs_crtc_dpms(struct drm_crtc *crtc, int mode)
-{
-	switch (mode) {
-	case DRM_MODE_DPMS_ON:
-	case DRM_MODE_DPMS_STANDBY:
-	case DRM_MODE_DPMS_SUSPEND:
-	case DRM_MODE_DPMS_OFF:
-	default:
-		return;
-	}
-}
-
-static int bochs_crtc_mode_set_base(struct drm_crtc *crtc, int x, int y,
-				    struct drm_framebuffer *old_fb)
-{
-	struct bochs_device *bochs =
-		container_of(crtc, struct bochs_device, crtc);
-	struct bochs_bo *bo;
-	u64 gpu_addr = 0;
-	int ret;
-
-	if (old_fb) {
-		bo = gem_to_bochs_bo(old_fb->obj[0]);
-		ret = ttm_bo_reserve(&bo->bo, true, false, NULL);
-		if (ret) {
-			DRM_ERROR("failed to reserve old_fb bo\n");
-		} else {
-			bochs_bo_unpin(bo);
-			ttm_bo_unreserve(&bo->bo);
-		}
-	}
-
-	if (WARN_ON(crtc->primary->fb == NULL))
-		return -EINVAL;
-
-	bo = gem_to_bochs_bo(crtc->primary->fb->obj[0]);
-	ret = ttm_bo_reserve(&bo->bo, true, false, NULL);
-	if (ret)
-		return ret;
-
-	ret = bochs_bo_pin(bo, TTM_PL_FLAG_VRAM, &gpu_addr);
-	if (ret) {
-		ttm_bo_unreserve(&bo->bo);
-		return ret;
-	}
-
-	ttm_bo_unreserve(&bo->bo);
-	bochs_hw_setbase(bochs, x, y, gpu_addr);
-	return 0;
-}
-
-static int bochs_crtc_mode_set(struct drm_crtc *crtc,
-			       struct drm_display_mode *mode,
-			       struct drm_display_mode *adjusted_mode,
-			       int x, int y, struct drm_framebuffer *old_fb)
-{
-	struct bochs_device *bochs =
-		container_of(crtc, struct bochs_device, crtc);
-
-	if (WARN_ON(crtc->primary->fb == NULL))
-		return -EINVAL;
-
-	bochs_hw_setmode(bochs, mode);
-	bochs_hw_setformat(bochs, crtc->primary->fb->format);
-	bochs_crtc_mode_set_base(crtc, x, y, old_fb);
-	return 0;
-}
-
 static void bochs_crtc_mode_set_nofb(struct drm_crtc *crtc)
 {
 	struct bochs_device *bochs =
@@ -96,14 +28,6 @@ static void bochs_crtc_mode_set_nofb(struct drm_crtc *crtc)
 	bochs_hw_setmode(bochs, &crtc->mode);
 }
 
-static void bochs_crtc_prepare(struct drm_crtc *crtc)
-{
-}
-
-static void bochs_crtc_commit(struct drm_crtc *crtc)
-{
-}
-
 static void bochs_crtc_atomic_enable(struct drm_crtc *crtc,
 				     struct drm_crtc_state *old_crtc_state)
 {
@@ -138,12 +62,7 @@ static const struct drm_crtc_funcs bochs_crtc_funcs = {
 };
 
 static const struct drm_crtc_helper_funcs bochs_helper_funcs = {
-	.dpms = bochs_crtc_dpms,
-	.mode_set = bochs_crtc_mode_set,
-	.mode_set_base = bochs_crtc_mode_set_base,
 	.mode_set_nofb = bochs_crtc_mode_set_nofb,
-	.prepare = bochs_crtc_prepare,
-	.commit = bochs_crtc_commit,
 	.atomic_enable = bochs_crtc_atomic_enable,
 	.atomic_flush = bochs_crtc_atomic_flush,
 };
-- 
2.9.3

