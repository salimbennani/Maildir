Return-Path: <virtualization-bounces@lists.linux-foundation.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  20 Dec 2018 16:21:20 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 193C25805F0
	for <like.xu@linux.intel.com>; Wed, 19 Dec 2018 17:56:41 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 19 Dec 2018 17:56:40 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AvUxLbx8ZFHNwH/9uRHKM819IXTAuvvDOBiVQ1KB+?=
 =?us-ascii?q?0+MUIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDwULs6Wymt771zRRHoli?=
 =?us-ascii?q?kJKjA3/mLQhMN/lKJWohCvqhNiz4PafI2aKPVwfrjDct4BWWpMXNxcWzBbD4+g?=
 =?us-ascii?q?cYcCCfcKM+ZCr4n6olsDtR+wBQ62BOPg1DBIgGL9068g3OQnCgHJwgogFM8JvX?=
 =?us-ascii?q?TWrNX6LqESUfurw6nO1jjDcfZW2Dnn54jSbB8tu+2DXbV1ccfIz0QkCg3LjlKV?=
 =?us-ascii?q?qYP/PjOV0PwAs2ya7+pmSOKuhGAnqwZsojip28gjkJXJhoMSylDC7yl5x5w1Jd?=
 =?us-ascii?q?K+RUVmYtCkCINduzyVOodqWM8uXXxktDsgxrEbuJO2eDIGxIk5yxLHdfCLb4uF?=
 =?us-ascii?q?7gjnWeqMOzt0mGhpdK+7ihqu90Wr1/fyWdOu0FlQqypIitnMuW4J1xzU8sWHT+?=
 =?us-ascii?q?Fy/kal2TqV0wDT6+dEIV07lKrVLJ4h37gwmYcJvkTfHy/2n0P2gLWRdkU+9eik?=
 =?us-ascii?q?8+XnYrP4qZ+AL4J4lw7zPrg0lsChHOg0LxICU3Wa9Om4zrHv4FP1TK1PjvIsk6?=
 =?us-ascii?q?nZtJ7aJd4cpq68GwJVzIcj6wyjDze7ytsYmXgHLVNfdxKbjojpPFfOLOnjAve4?=
 =?us-ascii?q?nlSslitkyO7dPrD6BpXNL2PDkKv6fbpn705cyQwzzc1Q5p5NBLEBJ+/zWknsu9?=
 =?us-ascii?q?PCEh85Mgu0w+D9BNV6zIMeVnqDArWFP6PKrV+I+uUvLvGIZI8UuzbyNeIp5vHz?=
 =?us-ascii?q?jXIinV8dfK+p3YYYaXyiH/RmJVmZbmTogtsbDWgKuQ8+H6TXjkafW2tTe2qqRP?=
 =?us-ascii?q?B7oTU6E569S4PCQJ29jruc2iuyApxRYCZBEF/LFH7pc4CNXbALcD6TJcl61SIF?=
 =?us-ascii?q?T6S8QosgxxiytQj8mIdhNfferygRtJb/04pr5vfPiBg29C59E8Wa1SSXQnhpk3?=
 =?us-ascii?q?gUbzs3x7xk50h8zEqTlKZ/nvpUHMBS4PUPVR01YoXBxe53AMynRwTaY92SQ0yn?=
 =?us-ascii?q?SNj1PTZkGtQ839MDfW5jFNi4yBPOxSynB/kSjbPdQNRg9qPawmi0JMtnzXvC/L?=
 =?us-ascii?q?cugkNgQcZVM2CiwKll+F6XT9rXkl+Fiq+udLYVwC/K8k+HzHGSpwdcUQhtQeDL?=
 =?us-ascii?q?Wm0ZakLKrNP/oETYQOn9J64gN15jztSNJ60CStTvllhADKPhON3YeG+3s3m1Gh?=
 =?us-ascii?q?+Sy/WHa4+8KDZV5znUFEVRy1Nbxn2BLwVrXio=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ARAACV9hpchwyp04xkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgmlzBDKMFl+OS5Y8FIFfFRgLhAODMyI0CQ0BAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQoLCQgpIwyCNgUCAxgJgl0CBAEBJBMMCh4LAwMBAgYCQAQECAMBIwE1ARIFg?=
 =?us-ascii?q?x0BggEFCqhdM4opBYd+hEEXgUA/gRGCZINMAQSBRwGFdQKJRgSGVzeQFEsJhxC?=
 =?us-ascii?q?DRIJthCECFol1h2SJSIR6i0KBRoIOMxoIGxU7gmyLHIVgHgEBMYxwgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ARAACV9hpchwyp04xkHAEBAQQBAQcEAQGBUQcBAQsBgml?=
 =?us-ascii?q?zBDKMFl+OS5Y8FIFfFRgLhAODMyI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgpIwyCN?=
 =?us-ascii?q?gUCAxgJgl0CBAEBJBMMCh4LAwMBAgYCQAQECAMBIwE1ARIFgx0BggEFCqhdM4o?=
 =?us-ascii?q?pBYd+hEEXgUA/gRGCZINMAQSBRwGFdQKJRgSGVzeQFEsJhxCDRIJthCECFol1h?=
 =?us-ascii?q?2SJSIR6i0KBRoIOMxoIGxU7gmyLHIVgHgEBMYxwgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,375,1539673200"; 
   d="scan'208";a="55902624"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from mail.linuxfoundation.org ([140.211.169.12])
  by mtab.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 19 Dec 2018 17:56:39 -0800
Received: from mail.linux-foundation.org (localhost [127.0.0.1])
	by mail.linuxfoundation.org (Postfix) with ESMTP id EE651BE0;
	Tue, 18 Dec 2018 08:34:10 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@mail.linuxfoundation.org
Received: from smtp1.linuxfoundation.org (smtp1.linux-foundation.org
	[172.17.192.35])
	by mail.linuxfoundation.org (Postfix) with ESMTPS id 7D25F92F
	for <virtualization@lists.linux-foundation.org>;
	Tue, 18 Dec 2018 08:34:07 +0000 (UTC)
X-Greylist: domain auto-whitelisted by SQLgrey-1.7.6
Received: from EX13-EDG-OU-002.vmware.com (ex13-edg-ou-002.vmware.com
	[208.91.0.190])
	by smtp1.linuxfoundation.org (Postfix) with ESMTPS id ED4FA2C4
	for <virtualization@lists.linux-foundation.org>;
	Tue, 18 Dec 2018 08:34:06 +0000 (UTC)
Received: from sc9-mailhost3.vmware.com (10.113.161.73) by
	EX13-EDG-OU-002.vmware.com (10.113.208.156) with Microsoft SMTP Server
	id 15.0.1156.6; Tue, 18 Dec 2018 00:34:03 -0800
Received: from pa-dbc1104.eng.vmware.com (pa-dbc1104.eng.vmware.com
	[10.162.210.4])
	by sc9-mailhost3.vmware.com (Postfix) with ESMTP id 1E43D41104;
	Tue, 18 Dec 2018 00:34:06 -0800 (PST)
From: Jorgen Hansen <jhansen@vmware.com>
To: <netdev@vger.kernel.org>, <linux-kernel@vger.kernel.org>,
	<virtualization@lists.linux-foundation.org>
Subject: [PATCH v2] VSOCK: Send reset control packet when socket is partially
	bound
Date: Tue, 18 Dec 2018 00:34:06 -0800
Message-ID: <1545122046-43955-1-git-send-email-jhansen@vmware.com>
X-Mailer: git-send-email 2.6.2
MIME-Version: 1.0
X-Spam-Status: No, score=-4.2 required=5.0 tests=BAYES_00,RCVD_IN_DNSWL_MED
	autolearn=ham version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	smtp1.linux-foundation.org
Cc: pv-drivers@vmware.com, gregkh@linuxfoundation.org, davem@davemloft.net,
	Jorgen Hansen <jhansen@vmware.com>
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.12
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>,
	<mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>,
	<mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: virtualization-bounces@lists.linux-foundation.org
Errors-To: virtualization-bounces@lists.linux-foundation.org

If a server side socket is bound to an address, but not in the listening
state yet, incoming connection requests should receive a reset control
packet in response. However, the function used to send the reset
silently drops the reset packet if the sending socket isn't bound
to a remote address (as is the case for a bound socket not yet in
the listening state). This change fixes this by using the src
of the incoming packet as destination for the reset packet in
this case.

Fixes: d021c344051a ("VSOCK: Introduce VM Sockets")
Reviewed-by: Adit Ranadive <aditr@vmware.com>
Reviewed-by: Vishnu Dasa <vdasa@vmware.com>
Signed-off-by: Jorgen Hansen <jhansen@vmware.com>
---

v1 -> v2:
- Changed order of local variables

 net/vmw_vsock/vmci_transport.c | 67 +++++++++++++++++++++++++++++++-----------
 1 file changed, 50 insertions(+), 17 deletions(-)

diff --git a/net/vmw_vsock/vmci_transport.c b/net/vmw_vsock/vmci_transport.c
index 0ae3614..5cf8935 100644
--- a/net/vmw_vsock/vmci_transport.c
+++ b/net/vmw_vsock/vmci_transport.c
@@ -264,6 +264,31 @@ vmci_transport_send_control_pkt_bh(struct sockaddr_vm *src,
 }
 
 static int
+vmci_transport_alloc_send_control_pkt(struct sockaddr_vm *src,
+				      struct sockaddr_vm *dst,
+				      enum vmci_transport_packet_type type,
+				      u64 size,
+				      u64 mode,
+				      struct vmci_transport_waiting_info *wait,
+				      u16 proto,
+				      struct vmci_handle handle)
+{
+	struct vmci_transport_packet *pkt;
+	int err;
+
+	pkt = kmalloc(sizeof(*pkt), GFP_KERNEL);
+	if (!pkt)
+		return -ENOMEM;
+
+	err = __vmci_transport_send_control_pkt(pkt, src, dst, type, size,
+						mode, wait, proto, handle,
+						true);
+	kfree(pkt);
+
+	return err;
+}
+
+static int
 vmci_transport_send_control_pkt(struct sock *sk,
 				enum vmci_transport_packet_type type,
 				u64 size,
@@ -272,9 +297,7 @@ vmci_transport_send_control_pkt(struct sock *sk,
 				u16 proto,
 				struct vmci_handle handle)
 {
-	struct vmci_transport_packet *pkt;
 	struct vsock_sock *vsk;
-	int err;
 
 	vsk = vsock_sk(sk);
 
@@ -284,17 +307,10 @@ vmci_transport_send_control_pkt(struct sock *sk,
 	if (!vsock_addr_bound(&vsk->remote_addr))
 		return -EINVAL;
 
-	pkt = kmalloc(sizeof(*pkt), GFP_KERNEL);
-	if (!pkt)
-		return -ENOMEM;
-
-	err = __vmci_transport_send_control_pkt(pkt, &vsk->local_addr,
-						&vsk->remote_addr, type, size,
-						mode, wait, proto, handle,
-						true);
-	kfree(pkt);
-
-	return err;
+	return vmci_transport_alloc_send_control_pkt(&vsk->local_addr,
+						     &vsk->remote_addr,
+						     type, size, mode,
+						     wait, proto, handle);
 }
 
 static int vmci_transport_send_reset_bh(struct sockaddr_vm *dst,
@@ -312,12 +328,29 @@ static int vmci_transport_send_reset_bh(struct sockaddr_vm *dst,
 static int vmci_transport_send_reset(struct sock *sk,
 				     struct vmci_transport_packet *pkt)
 {
+	struct sockaddr_vm *dst_ptr;
+	struct sockaddr_vm dst;
+	struct vsock_sock *vsk;
+
 	if (pkt->type == VMCI_TRANSPORT_PACKET_TYPE_RST)
 		return 0;
-	return vmci_transport_send_control_pkt(sk,
-					VMCI_TRANSPORT_PACKET_TYPE_RST,
-					0, 0, NULL, VSOCK_PROTO_INVALID,
-					VMCI_INVALID_HANDLE);
+
+	vsk = vsock_sk(sk);
+
+	if (!vsock_addr_bound(&vsk->local_addr))
+		return -EINVAL;
+
+	if (vsock_addr_bound(&vsk->remote_addr)) {
+		dst_ptr = &vsk->remote_addr;
+	} else {
+		vsock_addr_init(&dst, pkt->dg.src.context,
+				pkt->src_port);
+		dst_ptr = &dst;
+	}
+	return vmci_transport_alloc_send_control_pkt(&vsk->local_addr, dst_ptr,
+					     VMCI_TRANSPORT_PACKET_TYPE_RST,
+					     0, 0, NULL, VSOCK_PROTO_INVALID,
+					     VMCI_INVALID_HANDLE);
 }
 
 static int vmci_transport_send_negotiate(struct sock *sk, size_t size)
-- 
2.6.2

_______________________________________________
Virtualization mailing list
Virtualization@lists.linux-foundation.org
https://lists.linuxfoundation.org/mailman/listinfo/virtualization
