Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:36:27 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 4EFBF580522;
	Thu, 20 Dec 2018 05:19:44 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 20 Dec 2018 05:19:43 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Amp5Y+BWDE6DFqYVdZiEfPAldlrzV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhCPuKdThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGp6y?=
 =?us-ascii?q?YZUBD+QBPuhWoYfyqFQMohSiCgesH/vvxz1Ti3/q36A3yfgtHR3I0QEiGd8FrX?=
 =?us-ascii?q?TarM/yNKcXSe271a3IwivAb/NNwzj97pXHcgo8qvyQW7J/bNDRyVQ0FwPFklqQ?=
 =?us-ascii?q?qZLqPzWW1uQKrmOW6PBvVeSyhG49tQ19viSjyts3h4nGg4Ia0FHE9SFjzIkpIt?=
 =?us-ascii?q?24TVd2bNi5G5VTryGXL5V6Tt8mTm1ypSo3xKMKtYSmcCUJ1Jgr3R/SZv6ff4WL?=
 =?us-ascii?q?4h/vTvidLSl2iX5/Zr6zmxK//VK+xuHiUMS/zUxEoTBfktbWs3AAzxzT5daDSv?=
 =?us-ascii?q?t65kqhxzmP2B7J6u1eIkA7i7DbK5g/zb40jJYTtl7DHiDulEX3iq+ZaFkk9/C2?=
 =?us-ascii?q?5+j7ZrjqvIKQOoFqhg3kL6gjmdCzDf45PwUMR2Sb/P6z1Lzn/U33WrVKifg2n7?=
 =?us-ascii?q?HdsJDbI8Qbu6G4DxZW0ok98Ra/CSmp0NABkXkAIlNFfgyIj5LyNlHQL/D3E+2/?=
 =?us-ascii?q?j06vkDh13fDGOKPuApHXInjEirfhcq5x61RAxwor0dBf+5VUB6kFIPLyWU/+qs?=
 =?us-ascii?q?bUDxAkMwGvx+bnCdN91p4RWG6VA6+ZNr/SvkGM5u41P+aMY4oVsi7nK/c5//7u?=
 =?us-ascii?q?kWM5mVgFcKmpx5QXaWy4Ee5hI0mDYXrsn80OEWEFvgclSOzqiVuCUSNcZnqoXq?=
 =?us-ascii?q?I84C07B5yiDYvZWo+th7mB1j+hHpJKfmBGFkyMEXDweoqeQPcMaCWSIsx7njwe?=
 =?us-ascii?q?T7ehSZQs1RWvtA/81rpmIfDY+iwetZL/ytd14/ffmg019TxxF86dyX2CT3lonm?=
 =?us-ascii?q?MUQD87xKN/rlZ7yluZ1ah4guZXFdpc5/5SVgc6NJjcz/F1CtzoWwLBeMuJR0ii?=
 =?us-ascii?q?Qtm8HT4xSdcxyccUY0lhA9WikgzD3y2yDrAIjbOLGoI7/rjc33frIcZ90GjJ1K?=
 =?us-ascii?q?8mg1kiQctPMGmmi7V79wjSAY7JjkqYm7yrdaQawC7C6mODwXCSs0FfVQ56Sb/F?=
 =?us-ascii?q?UmwHZkvKsdT54VvPQKK0BrQ5LARN086CJbFMat3yk1pGQuzuONDfY2K3hmexCg?=
 =?us-ascii?q?yExrKKbIr2ZWod2D/RB1QDkwAW5XyGLxQxBj+9o2LCCzxjDU7vY0Lp8el5tHO7?=
 =?us-ascii?q?Tk81wxuWb0F70Lq14BoVhf2aS/Mcxb8EvCYhqzNpHFeyxd7WCtyApxZ/c6VYe9?=
 =?us-ascii?q?8y/FBH1WfBvQxnIpOgN7xihkIZcwlvpUzu0wt4C4penskqtn8l1xdyJr+C31NH?=
 =?us-ascii?q?dDOY2o7wN6bTKmnz+hCvdqHX1kvf0NaQ5qcA9vA4p0//swGuE0oo629n3MVN03?=
 =?us-ascii?q?uA+pXKCxIfUJLsUkot6xd2vbDbYikn6IPS2n1hKq20sj7E29I0C+op0Begf9FD?=
 =?us-ascii?q?MKyaEA/+CdEVB8+rKOYygVimcgoEPPxO9K4zJ86mbfqG17KxM+Z6gT2min5L4I?=
 =?us-ascii?q?Zj3UKW9ipwU/LH0IwBw/6FwASHTTD8jFG6v8DzmIBEYywSH2WlxSjlAo5RerN9?=
 =?us-ascii?q?fYIRBWiyJM23w810h4TxVH5A6F6jG1QG1depeBqTdVD83Rdc1V8KoXyhgia4yz?=
 =?us-ascii?q?10kzc0rquQxiDOwuLidAYZNW5PXmVtkVDsIY2shdAAQEeodxQplAei5UvixahU?=
 =?us-ascii?q?vr5/L2rQQUdPZST2NHttUqiztrqDZc5A9pUovD5TUOS9Z1CaV7H8rwEb0yPlA2?=
 =?us-ascii?q?tR2jQ7eyu2tZX+mhxwkHidI2prrHrFZcFwwg/S5dzGSv5WxDYGRih4iT/MC1i4?=
 =?us-ascii?q?Ptmp+8iUlpjZvuC/UWKhSoNccS3xwYycsyu74HVgAQejkPCrht3nDQ863Df419?=
 =?us-ascii?q?ZwVCXEthb8YpTx2KS8PuJqZU1oBF7668pnFYByiIowhJcM2XcEgpWZ52YIkWD2?=
 =?us-ascii?q?Md9Dw6LxcGINRSIXw97S+AXl3UxjLnGTyI7jWHSS3NBhZ8WkbWMMwS0y8dpKCK?=
 =?us-ascii?q?iP4bxAnCt1pEe4rA3Lbfh8mDcd1eUh6HoAj+4Vvwotyz2XAqoOEklAISzsixOI?=
 =?us-ascii?q?4siirKVQYWaja7mx21B4ndC8F7GCuQBcVW39epcjGy9w88p+PEjN0H319oHrZt?=
 =?us-ascii?q?3QYcgPuR2TlhfKl/JVJ44plvoWmSpnPnrwsmY/xO48iRxuwIu2vIyaK2h2+KK5?=
 =?us-ascii?q?AxhYNiD6Zs8J+zHti7pekdiS34y1ApphHTALVoPyTf20CDISqejnNwGWHT0+sH?=
 =?us-ascii?q?ibHKTQHRSF5Ed6tX7PEI2rN3KKJHkf19piXwKQJEhegAASQTU7kYQ1FgGsxMz9?=
 =?us-ascii?q?bkh54iod6UL/qhtJ0uhoLQXwUn/DpAe0bTc5UJieLB1L7gFb+kfaK8qe4vhoHy?=
 =?us-ascii?q?Ff+J2hoxeAKmiaZwROEGEIVVaIB1HlPrmy+9bA9/KUCfa5L/vLeb+Os/BRV++U?=
 =?us-ascii?q?xZKz1Ytr5zaMOduOPnlhDP0721BPXXNjG8TelDUAVTYXlz/Wb8OAoBe8+yt3rt?=
 =?us-ascii?q?2w8fjxWQLv45ePBKVWMdl15x+2hqKDPfaKhCllMTZYyo8MxXjQxbcFwV4dkDtu?=
 =?us-ascii?q?eCetELgasS7NTbndmqtWDx4ddiNyO9FE76M63glRJ8Hbjsn52aJ/jv4wE11FT0?=
 =?us-ascii?q?Dumtm1ZcwWJGGwLE/HBEeONLicOTLH2d34YaOiRr1Wl+hUsxywuTCGE07sJDiD?=
 =?us-ascii?q?lj/pVwyxPuFIli2UIBteuISleBZ3FWfjVM7magG8MNJvjTw527s0hnbLNW4aKT?=
 =?us-ascii?q?d9ckNNoaeW7SNXmfh/H21B7nx4LeiLgSqZ7u/YKooIvvtvGCh7i+Va4HFpg4dS?=
 =?us-ascii?q?uQ5JXvA9uCzcoNtnpVfuxuqVwypqVDJUpzpLjZ7NtkJnb+GR+oNBHHrJ4h8JxW?=
 =?us-ascii?q?GREAgR4dV/B9DjtrtT1t/X0qXpJ3MK39vK/MdULsnOLMOKeC4oMADtGTPYJBEI?=
 =?us-ascii?q?QT6iKSfUgEkLw9+I8XjAiZw3qYPlnpYUApZdWEYoDfMRCkljH9tKdJ5xUil+ye?=
 =?us-ascii?q?bDpMEN7Hu66hLWQZMJ7dj8SvuODKC3e36ihr5eak5NmOugIA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AaAABClhtch0O0hNFkGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUQYBAQELAYJdgQ4ng32De4Qei3tQAQEGgQgtFIhuIQMFao1IgXMTAQE?=
 =?us-ascii?q?YEwGEQIJuIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYgECAwECIAQRC?=
 =?us-ascii?q?AEbHQEDAgkBAQUFCwMKAgImAgIDIBEBBQEcBgEMBgIBAQGDHYFpAQMIDQQBnAU?=
 =?us-ascii?q?8ixl8FgUBF4J3BYJEgXYKGScNXlBnAgYSeYoYgRyBD4EHgREngmuFAYMIglcCg?=
 =?us-ascii?q?SoBAQGIFAqGWYEJkA8BBgIBgVYFkAQGGIl4EYdUiU2QGQIEAgQFAgUPIYElgg5?=
 =?us-ascii?q?wgQFtgU6CGwwXg0qKVT4ygQUBAY1gAQE?=
X-IPAS-Result: =?us-ascii?q?A0AaAABClhtch0O0hNFkGwEBAQEDAQEBBwMBAQGBUQYBAQE?=
 =?us-ascii?q?LAYJdgQ4ng32De4Qei3tQAQEGgQgtFIhuIQMFao1IgXMTAQEYEwGEQIJuIjQJD?=
 =?us-ascii?q?QEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYgECAwECIAQRCAEbHQEDAgkBAQU?=
 =?us-ascii?q?FCwMKAgImAgIDIBEBBQEcBgEMBgIBAQGDHYFpAQMIDQQBnAU8ixl8FgUBF4J3B?=
 =?us-ascii?q?YJEgXYKGScNXlBnAgYSeYoYgRyBD4EHgREngmuFAYMIglcCgSoBAQGIFAqGWYE?=
 =?us-ascii?q?JkA8BBgIBgVYFkAQGGIl4EYdUiU2QGQIEAgQFAgUPIYElgg5wgQFtgU6CGwwXg?=
 =?us-ascii?q?0qKVT4ygQUBAY1gAQE?=
X-IronPort-AV: E=Sophos;i="5.56,377,1539673200"; 
   d="scan'208";a="57688378"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 20 Dec 2018 05:19:41 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1732970AbeLTNQj (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Thu, 20 Dec 2018 08:16:39 -0500
Received: from mail-lj1-f194.google.com ([209.85.208.194]:33763 "EHLO
        mail-lj1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1730884AbeLTNQi (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 20 Dec 2018 08:16:38 -0500
Received: by mail-lj1-f194.google.com with SMTP id v1-v6so1541859ljd.0
        for <linux-kernel@vger.kernel.org>; Thu, 20 Dec 2018 05:16:35 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=subject:to:cc:references:from:message-id:date:user-agent
         :mime-version:in-reply-to:content-transfer-encoding:content-language;
        bh=rLiaP2mDPQVwh+1KwPfkdo4z8oGXMYZAvdrxqwirswY=;
        b=CrqVO1E55Njq91i+yc9JVxeFiPUqiknqZ8QtGthmXBWDTbCsibIgshlrzpTRdeMfub
         W1rLVQJHNypYJokOBERCc3elnXSvQnzhdhHhrN7/L675SH0UADlInRxUSu08O27UjE8s
         GdHlomYpDWJr2/70mAP0VG+9t7e8gV5vJUp3qvdKcbafAjk7bktvJU1btc9mOHqH/aHJ
         Db9c9RC2PlJr5mdEo81Q6PlH6HCSkvzSJJ9ZBk285ID/eyHarhxmmEHgyvSLlL5NpnCW
         glcTqw2n535fSCQgbqXDstlfifx8OL4lP/DeUEOD5qz3sOCBtZ1aCNTld0sGTcow8ClH
         ECdA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:subject:to:cc:references:from:message-id:date
         :user-agent:mime-version:in-reply-to:content-transfer-encoding
         :content-language;
        bh=rLiaP2mDPQVwh+1KwPfkdo4z8oGXMYZAvdrxqwirswY=;
        b=aQvI01YxfqvRU/0VopqN4unyqvu105uVq48Jkt7FlschNy7FIgpBm4xNL3FR2mezfb
         qJw7wHFmpu4nLhgtXB2jCsWpGURXZO9YCSi1gLunMwwQOup5lkdGUDs2UTK8E1D7gzLo
         0jrEYa3PkZA44XqBKSTT/c7t6xejjdDZe+r+pC7RA5zcNj0Pjad3GSPDioF/O4ePANjQ
         EmO99y8q0bfnoRLty1ZZKEnbOqxoi4pZGuAIgIlSIK8T9kX2ylLpeJRzOmL8fasyv2k/
         un9OGKyXJPkgr0mXaPEcuh08vUFMpBjuMFhU/m/N3OfkkWA9jcsaO4bm7dgQs749otAj
         eaDg==
X-Gm-Message-State: AA+aEWYrPUhmClXTVrYp92gVfZCI1DfOAQn05mivqf95hCOQ9iArmzpz
        BcD03S4BBRvBOiB4p6fdAP7fQ+fo
X-Google-Smtp-Source: AFSGD/VPtfNfDPEy9MYd2q10BTA2ZCWX+Ha1l6Omz6BmYrr9EqGB6ssc17D78xqheI3hhUT+Hqh9cA==
X-Received: by 2002:a2e:29d7:: with SMTP id p84-v6mr15166087ljp.12.1545311794310;
        Thu, 20 Dec 2018 05:16:34 -0800 (PST)
Received: from [10.17.182.20] (ll-22.209.223.85.sovam.net.ua. [85.223.209.22])
        by smtp.gmail.com with ESMTPSA id s3-v6sm4145943lje.73.2018.12.20.05.16.33
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Thu, 20 Dec 2018 05:16:33 -0800 (PST)
Subject: Re: [PATCH 13/14] drm/bochs: drop old fbdev emulation code
To: Gerd Hoffmann <kraxel@redhat.com>, dri-devel@lists.freedesktop.org,
        David Airlie <airlied@redhat.com>
Cc: David Airlie <airlied@linux.ie>,
        open list <linux-kernel@vger.kernel.org>,
        "open list:DRM DRIVER FOR BOCHS VIRTUAL GPU" 
        <virtualization@lists.linux-foundation.org>
References: <20181219115127.31359-1-kraxel@redhat.com>
 <20181219115127.31359-14-kraxel@redhat.com>
From: Oleksandr Andrushchenko <andr2000@gmail.com>
Message-ID: <ea0e7d2b-ebbd-a4eb-93c4-be3cf5a238a8@gmail.com>
Date: Thu, 20 Dec 2018 15:16:32 +0200
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <20181219115127.31359-14-kraxel@redhat.com>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Transfer-Encoding: 7bit
Content-Language: en-US
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 12/19/18 1:51 PM, Gerd Hoffmann wrote:
> Not needed any more, bochs uses the generic emulation now.
>
> Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
Reviewed-by: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
> ---
>   drivers/gpu/drm/bochs/bochs.h       |   9 ---
>   drivers/gpu/drm/bochs/bochs_drv.c   |   6 --
>   drivers/gpu/drm/bochs/bochs_fbdev.c | 137 ------------------------------------
>   3 files changed, 152 deletions(-)
>
> diff --git a/drivers/gpu/drm/bochs/bochs.h b/drivers/gpu/drm/bochs/bochs.h
> index 4236d5d811..42a587e71e 100644
> --- a/drivers/gpu/drm/bochs/bochs.h
> +++ b/drivers/gpu/drm/bochs/bochs.h
> @@ -80,12 +80,6 @@ struct bochs_device {
>   		struct ttm_bo_device bdev;
>   		bool initialized;
>   	} ttm;
> -
> -	/* fbdev */
> -	struct {
> -		struct drm_framebuffer *fb;
> -		struct drm_fb_helper helper;
> -	} fb;
>   };
>   
>   struct bochs_bo {
> @@ -161,7 +155,4 @@ int bochs_kms_init(struct bochs_device *bochs);
>   void bochs_kms_fini(struct bochs_device *bochs);
>   
>   /* bochs_fbdev.c */
> -int bochs_fbdev_init(struct bochs_device *bochs);
> -void bochs_fbdev_fini(struct bochs_device *bochs);
> -
>   extern const struct drm_mode_config_funcs bochs_mode_funcs;
> diff --git a/drivers/gpu/drm/bochs/bochs_drv.c b/drivers/gpu/drm/bochs/bochs_drv.c
> index f1f65324bb..ad1290ca7b 100644
> --- a/drivers/gpu/drm/bochs/bochs_drv.c
> +++ b/drivers/gpu/drm/bochs/bochs_drv.c
> @@ -110,12 +110,9 @@ static int bochs_pm_suspend(struct device *dev)
>   {
>   	struct pci_dev *pdev = to_pci_dev(dev);
>   	struct drm_device *drm_dev = pci_get_drvdata(pdev);
> -	struct bochs_device *bochs = drm_dev->dev_private;
>   
>   	drm_kms_helper_poll_disable(drm_dev);
>   
> -	drm_fb_helper_set_suspend_unlocked(&bochs->fb.helper, 1);
> -
>   	return 0;
>   }
>   
> @@ -123,12 +120,9 @@ static int bochs_pm_resume(struct device *dev)
>   {
>   	struct pci_dev *pdev = to_pci_dev(dev);
>   	struct drm_device *drm_dev = pci_get_drvdata(pdev);
> -	struct bochs_device *bochs = drm_dev->dev_private;
>   
>   	drm_helper_resume_force_mode(drm_dev);
>   
> -	drm_fb_helper_set_suspend_unlocked(&bochs->fb.helper, 0);
> -
>   	drm_kms_helper_poll_enable(drm_dev);
>   	return 0;
>   }
> diff --git a/drivers/gpu/drm/bochs/bochs_fbdev.c b/drivers/gpu/drm/bochs/bochs_fbdev.c
> index 92feb817ff..7cac3f5253 100644
> --- a/drivers/gpu/drm/bochs/bochs_fbdev.c
> +++ b/drivers/gpu/drm/bochs/bochs_fbdev.c
> @@ -11,132 +11,6 @@
>   
>   /* ---------------------------------------------------------------------- */
>   
> -static int bochsfb_mmap(struct fb_info *info,
> -			struct vm_area_struct *vma)
> -{
> -	struct drm_fb_helper *fb_helper = info->par;
> -	struct bochs_bo *bo = gem_to_bochs_bo(fb_helper->fb->obj[0]);
> -
> -	return ttm_fbdev_mmap(vma, &bo->bo);
> -}
> -
> -static struct fb_ops bochsfb_ops = {
> -	.owner = THIS_MODULE,
> -	DRM_FB_HELPER_DEFAULT_OPS,
> -	.fb_fillrect = drm_fb_helper_cfb_fillrect,
> -	.fb_copyarea = drm_fb_helper_cfb_copyarea,
> -	.fb_imageblit = drm_fb_helper_cfb_imageblit,
> -	.fb_mmap = bochsfb_mmap,
> -};
> -
> -static int bochsfb_create_object(struct bochs_device *bochs,
> -				 const struct drm_mode_fb_cmd2 *mode_cmd,
> -				 struct drm_gem_object **gobj_p)
> -{
> -	struct drm_device *dev = bochs->dev;
> -	struct drm_gem_object *gobj;
> -	u32 size;
> -	int ret = 0;
> -
> -	size = mode_cmd->pitches[0] * mode_cmd->height;
> -	ret = bochs_gem_create(dev, size, true, &gobj);
> -	if (ret)
> -		return ret;
> -
> -	*gobj_p = gobj;
> -	return ret;
> -}
> -
> -static int bochsfb_create(struct drm_fb_helper *helper,
> -			  struct drm_fb_helper_surface_size *sizes)
> -{
> -	struct bochs_device *bochs =
> -		container_of(helper, struct bochs_device, fb.helper);
> -	struct fb_info *info;
> -	struct drm_framebuffer *fb;
> -	struct drm_mode_fb_cmd2 mode_cmd;
> -	struct drm_gem_object *gobj = NULL;
> -	struct bochs_bo *bo = NULL;
> -	int size, ret;
> -
> -	if (sizes->surface_bpp != 32)
> -		return -EINVAL;
> -
> -	mode_cmd.width = sizes->surface_width;
> -	mode_cmd.height = sizes->surface_height;
> -	mode_cmd.pitches[0] = sizes->surface_width * 4;
> -	mode_cmd.pixel_format = DRM_FORMAT_HOST_XRGB8888;
> -	size = mode_cmd.pitches[0] * mode_cmd.height;
> -
> -	/* alloc, pin & map bo */
> -	ret = bochsfb_create_object(bochs, &mode_cmd, &gobj);
> -	if (ret) {
> -		DRM_ERROR("failed to create fbcon backing object %d\n", ret);
> -		return ret;
> -	}
> -
> -	bo = gem_to_bochs_bo(gobj);
> -
> -	ret = ttm_bo_reserve(&bo->bo, true, false, NULL);
> -	if (ret)
> -		return ret;
> -
> -	ret = bochs_bo_pin(bo, TTM_PL_FLAG_VRAM);
> -	if (ret) {
> -		DRM_ERROR("failed to pin fbcon\n");
> -		ttm_bo_unreserve(&bo->bo);
> -		return ret;
> -	}
> -
> -	ret = ttm_bo_kmap(&bo->bo, 0, bo->bo.num_pages,
> -			  &bo->kmap);
> -	if (ret) {
> -		DRM_ERROR("failed to kmap fbcon\n");
> -		ttm_bo_unreserve(&bo->bo);
> -		return ret;
> -	}
> -
> -	ttm_bo_unreserve(&bo->bo);
> -
> -	/* init fb device */
> -	info = drm_fb_helper_alloc_fbi(helper);
> -	if (IS_ERR(info)) {
> -		DRM_ERROR("Failed to allocate fbi: %ld\n", PTR_ERR(info));
> -		return PTR_ERR(info);
> -	}
> -
> -	info->par = &bochs->fb.helper;
> -
> -	fb = drm_gem_fbdev_fb_create(bochs->dev, sizes, 0, gobj, NULL);
> -	if (IS_ERR(fb)) {
> -		DRM_ERROR("Failed to create framebuffer: %ld\n", PTR_ERR(fb));
> -		return PTR_ERR(fb);
> -	}
> -
> -	/* setup helper */
> -	bochs->fb.helper.fb = fb;
> -
> -	strcpy(info->fix.id, "bochsdrmfb");
> -
> -	info->fbops = &bochsfb_ops;
> -
> -	drm_fb_helper_fill_fix(info, fb->pitches[0], fb->format->depth);
> -	drm_fb_helper_fill_var(info, &bochs->fb.helper, sizes->fb_width,
> -			       sizes->fb_height);
> -
> -	info->screen_base = bo->kmap.virtual;
> -	info->screen_size = size;
> -
> -	drm_vma_offset_remove(&bo->bo.bdev->vma_manager, &bo->bo.vma_node);
> -	info->fix.smem_start = 0;
> -	info->fix.smem_len = size;
> -	return 0;
> -}
> -
> -static const struct drm_fb_helper_funcs bochs_fb_helper_funcs = {
> -	.fb_probe = bochsfb_create,
> -};
> -
>   static struct drm_framebuffer *
>   bochs_gem_fb_create(struct drm_device *dev, struct drm_file *file,
>   		    const struct drm_mode_fb_cmd2 *mode_cmd)
> @@ -153,14 +27,3 @@ const struct drm_mode_config_funcs bochs_mode_funcs = {
>   	.atomic_check = drm_atomic_helper_check,
>   	.atomic_commit = drm_atomic_helper_commit,
>   };
> -
> -int bochs_fbdev_init(struct bochs_device *bochs)
> -{
> -	return drm_fb_helper_fbdev_setup(bochs->dev, &bochs->fb.helper,
> -					 &bochs_fb_helper_funcs, 32, 1);
> -}
> -
> -void bochs_fbdev_fini(struct bochs_device *bochs)
> -{
> -	drm_fb_helper_fbdev_teardown(bochs->dev);
> -}

