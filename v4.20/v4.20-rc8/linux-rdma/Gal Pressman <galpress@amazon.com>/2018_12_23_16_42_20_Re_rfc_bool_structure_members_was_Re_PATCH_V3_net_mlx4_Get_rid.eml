Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 16:01:21 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 8CC2858048A;
	Sun, 23 Dec 2018 08:42:47 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga002-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 23 Dec 2018 08:42:46 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AVS+tBxPOF8ZdKCX0BHkl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPn7oMbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRttfWTJPAo28?=
 =?us-ascii?q?bIUBAeQOMulaoIbhqFUOrAC+BRGuCe701j9FhGX70bEm3+kvEwzL2hErEdIUsH?=
 =?us-ascii?q?TTqdX4LKYcXvqxzKLV1zvDde1Z2Szm6IjNaB8hp+yHULV/ccXLzUkvDxnFgUuL?=
 =?us-ascii?q?qYz+JD6azOENvHKa7upnU+KjkXIoqwZ0ojW2wMonl4fHhoUQyl/e9CV5xp44Jc?=
 =?us-ascii?q?agSE56Z96kEYdftzqAO4twXMwiX3lkuCUkxb0cv560YiwKxI4gxx7FZPyKdZWD?=
 =?us-ascii?q?7BH7VOuJPzt0mHZodKiiixu870Ss0PDwW8qo3FpQrydIkMHAum0R2xDJ5cWKRO?=
 =?us-ascii?q?Fx8lqg1DqSzQze6u5JLVgqmabHKZMt2KM8m5gOvUjZAyP7m0r7gLWIekgg/OWj?=
 =?us-ascii?q?9v7pba/8ppCGMo95kgH+Pboqmsy4Gek4LAcOUHaB+eim173s41f5QLNUgf0yiK?=
 =?us-ascii?q?XZt4raJcsDqq64BQ9azJoj5g6hAzu61NkUh2QLIVxbdB6dkoTkOE3CLOr5APq9?=
 =?us-ascii?q?m1islS1kx/HCPr3vGJXNKX3Dna/lfbZ87U5c1QUywclc551KELEBJuz8WkvouN?=
 =?us-ascii?q?zfAB45NRK7w/z8BdVj2YMRR3iPDrWaMKzMq1+I4PwgI+2WaI8Sojb9JOAp5+Ty?=
 =?us-ascii?q?gn8hhV8dYa6p0IMTaHC5HfRpPV+VYHXxgtoaFWcKvww+TPHliVGYUD5TYWqyUL?=
 =?us-ascii?q?w45j0hFI2mCoLDTJi3gLOdxCe7AoFWZmdeB1CMC3jodpmEVO0LaC6IIs9hjyYL?=
 =?us-ascii?q?Vb6uS4I60RGutQn6y6doL+bO+y0Ys47j28Zx5+HJiR4y8jl0BdyH026RV2F0gn?=
 =?us-ascii?q?8IRzgu0a9lukx9ylCD0atij/xCD9NT5ehEUgM7NZ7a0ux7BMr+WgPHfteVVlmm?=
 =?us-ascii?q?Rs+qDi02TtI029UOeVpyG82+jhDf2CqnG7wVmKaNBJAu9qLc3mL+J8Byy3vd0K?=
 =?us-ascii?q?khjl8mQtZANGG8h65/8RTTCJDNk0mDi6mqcqEc1jbX9Gif1WqOoF1YUAloXKrY?=
 =?us-ascii?q?R38feFXZoc755kzYSb+uEqooMg1Gxc6GKatKb9npgE5CRPfiPtTefm2wl32xBR?=
 =?us-ascii?q?aO2rODco7qd38B0yXaDUgOixoT8mqeNQgiGiehpHrTAyF0GlLxfUzg6+l+p2m9?=
 =?us-ascii?q?Tk8v0Q6KaVZs1760+h4TmPydROkf3rMCuCc9tTp0GEyx0M7RC9qFvwBhZrlTYc?=
 =?us-ascii?q?sh4Fdb0mLUrxB9Pp2lL6Blml4ecwR2s1ny1xltDYVAi8wqrHIszAp9Mq+Y1FJB?=
 =?us-ascii?q?dzWF3ZH/ILHXK2/y/AyxZK7SwF3RzNGW+qIX4vQit1rjpB2pFlYl83h/ydZV12?=
 =?us-ascii?q?WT55rUAwsSS57+SVs3+AVgqLHcYSk94J3U2GZoMam1tD/Cxt0oCPEkyhamY9dQ?=
 =?us-ascii?q?LqeEGBXuHM0dAsikMPYqlESxbhIYIOBS87Y5PsO7d/ecxKGnJudhnDK8gmRB74?=
 =?us-ascii?q?BwyUaM9yt6Su7V0JcJ2fCY3g2bVzjiiFetqNz4mYdBZTsKBGqw1TDkBJJNZq11?=
 =?us-ascii?q?ZYsLE2auLNGtydVkmpHtXGRU9Fi9CFMc2c+lYAadYEb53QJNy0sXu3unmS2jwj?=
 =?us-ascii?q?xwkjEpqLef3SPUz+TjchoHJnBERG14gVjwJoi0isgQXFK0YAgxiBul+UH6yrBb?=
 =?us-ascii?q?paR+NWXSQV1EfzPrL2FkSaawsruCY8hS6JInqylXUeK8YUyERb75uRcVzyTjH2?=
 =?us-ascii?q?5GzjAhaz6qoon5nwB9iG+FLnZ8tmDZecJzxRfY/tDcXuRe3jkFRCl5jznYGF68?=
 =?us-ascii?q?MsKt/dWVkZfDr++/W3igVp1VbSnk04eAuDGn6m1tBB21h+qzlcH/EQgmzS/70M?=
 =?us-ascii?q?FnVCXSoxb7eIXr1aW6MeR8c0lsBV/87dd6G45knosxgpEQxWYVhpGP8XUblmfz?=
 =?us-ascii?q?NM1R2bjiY3oVWT4L39nV7RDm2EJ5L3KF3YL5VmiHzctnaNm3eWcW2iM778BXB6?=
 =?us-ascii?q?aY9r1EnS1polWmqQLde+RynjAYyfE28n4Vn/kJuBYxziWaGr0SGEhYPS/2mBiS?=
 =?us-ascii?q?4dGxsr5XZHqxfriqz0Vxg8qhDL6ZrwFYWXb5fIoiHCBq4sV+NlLMzGP86oX+dN?=
 =?us-ascii?q?bMatITswWekw3cgOhNNJIxiv0KiDJ7OWL6uH0p0e86ggZo3ZGnp4iHMGRt8bm9?=
 =?us-ascii?q?Ah5ZMD31eswS9ivsjaZYgsaZwYSvEo99FTUMWZviVeioHy4KtfT7KwaOFyUxpW?=
 =?us-ascii?q?yBFrrYGQ+f9V1qr3bSE52wM3GXJX8ZzchtRRWHJUxfhhwUUys+npIjCg+qw8nh?=
 =?us-ascii?q?el9j5j8N/l74tgdMyuVwOhn9SGjfoRmnaiwuRJiDNhZW7RxC50TIMcyY9O1zBD?=
 =?us-ascii?q?pV/pmgrAyLN2yaaB5EDWAPWkyYGV/jOqOi6sXH8+idHuC+NefBYa2SqexCUPeF?=
 =?us-ascii?q?3ZKu0ox7/zaVK8WAJH9iA+cg2kpEW3B5FN/UmzEOSywRiiLMYNSXpBa6+i1rsM?=
 =?us-ascii?q?+/9O7nVx7o5YuKE7FSK8lg+wiqgaefMO6dnCZ5JihZ1pMPxn/IyaIT3F0IiyFp?=
 =?us-ascii?q?eDmiD64AtTPWTK/Lnq9XDhgbaz58NcdS7qI82BVNNtDfit/vyrF4ifs1AU9fVV?=
 =?us-ascii?q?P9gsGpedAKI2alOVzdGUaEL66GKiPLws3tZaO8SKZdjOFVtx22pDaaHFXvPjWF?=
 =?us-ascii?q?lzn1SR+vNftAgz2cPBxboIu9aApiCXD/TNL6bR22KMN3jTwzwbEumnzGL3ITMT?=
 =?us-ascii?q?hifENLtbCQ6SJYgvNiG21O9HZlLO+EmzqH4OncMJoZrfxrAiFsneJA/Hs606dV?=
 =?us-ascii?q?7D1DRPFtmCrdtNhuo1SnkumJ0jVmURpOpSxNhIKEpkhiPaTZ9p9dWXfL5h4N7G?=
 =?us-ascii?q?OQCwgUqNthENHgp6dQyt2c3J70fRVL6NXSteQBAdTUL9ifPTJ1MxXmMCzVARMI?=
 =?us-ascii?q?CzWiYyWXpUtQ2Mmf7HaVo4Ny/prrlbIWR6VQVFEuUPgdDxI2MsYFJcJYVzdsqa?=
 =?us-ascii?q?SWl9UN7Hz2+BbYQN1As4vcfvuXCOfoLnCSirwSNEhA+q/xMYlGbt6z4EdlcFQv?=
 =?us-ascii?q?2d2SQ0c=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AFAACUuR9ch0O0hNFiGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUwIBAQEBAQsBgmlwEicKg3SIeIsagWAtFJJRhH6BcxMBARg?=
 =?us-ascii?q?NBgGHMCI2Bw0BAwEBAQEBAQIBEwEBAQoLCQgpIwyCOikBgmYBAQEBAgEBAg4SH?=
 =?us-ascii?q?QEBKgoDAQUJAQEKDgMBAgECAQICHwcCAgMlHwIGCAYBDAEFAgEBAYMdAYF5CAU?=
 =?us-ascii?q?Kjw0BiRABjFtwgS+CdgEBBYJDhFUDBYELihiBHBeBQD+BESeCa4MeAgGBOQcBA?=
 =?us-ascii?q?YMmgleJT4F4hGeRHwkdggyEaYY0hB0GGIl7EYdaLYkshQGEUIZYAhETAYFNAYI?=
 =?us-ascii?q?GTSMVgyeCGwwXEoM4hFk7hUE9AQExAQGBAwEBilkPF4EIgR8BAQ?=
X-IPAS-Result: =?us-ascii?q?A0AFAACUuR9ch0O0hNFiGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUwIBAQEBAQsBgmlwEicKg3SIeIsagWAtFJJRhH6BcxMBARgNBgGHMCI2Bw0BA?=
 =?us-ascii?q?wEBAQEBAQIBEwEBAQoLCQgpIwyCOikBgmYBAQEBAgEBAg4SHQEBKgoDAQUJAQE?=
 =?us-ascii?q?KDgMBAgECAQICHwcCAgMlHwIGCAYBDAEFAgEBAYMdAYF5CAUKjw0BiRABjFtwg?=
 =?us-ascii?q?S+CdgEBBYJDhFUDBYELihiBHBeBQD+BESeCa4MeAgGBOQcBAYMmgleJT4F4hGe?=
 =?us-ascii?q?RHwkdggyEaYY0hB0GGIl7EYdaLYkshQGEUIZYAhETAYFNAYIGTSMVgyeCGwwXE?=
 =?us-ascii?q?oM4hFk7hUE9AQExAQGBAwEBilkPF4EIgR8BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,388,1539673200"; 
   d="scan'208";a="46155109"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 23 Dec 2018 08:42:45 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726046AbeLWQmk (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Sun, 23 Dec 2018 11:42:40 -0500
Received: from smtp-fw-9102.amazon.com ([207.171.184.29]:35562 "EHLO
        smtp-fw-9102.amazon.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725710AbeLWQmj (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sun, 23 Dec 2018 11:42:39 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
  d=amazon.com; i=@amazon.com; q=dns/txt; s=amazon201209;
  t=1545583359; x=1577119359;
  h=subject:to:cc:references:from:message-id:date:
   mime-version:in-reply-to:content-transfer-encoding;
  bh=G/bYWMA0pyiMWuDzmo4NgdlFCMjxCm2KagjL+udLSDY=;
  b=AEvz53eeV4XvhTD9Wi0BhhnTsO2sDvGU2eLuycLdiQm/82WP0I8s4tmj
   qbsRXEhjo7sqOyw8QeHpz2QFVQTTG7P12VYx2Y7cgbFrY7v+QmgwLvf7g
   uMW9Dcg8/O1ZjGkvWy7+dP/lYpHJNFe5B69SbCyvoXpFvi6LH/XM0KRz1
   0=;
X-IronPort-AV: E=Sophos;i="5.56,253,1539648000"; 
   d="scan'208";a="649762489"
Received: from sea3-co-svc-lb6-vlan3.sea.amazon.com (HELO email-inbound-relay-2b-baacba05.us-west-2.amazon.com) ([10.47.22.38])
  by smtp-border-fw-out-9102.sea19.amazon.com with ESMTP/TLS/DHE-RSA-AES256-SHA; 23 Dec 2018 16:42:36 +0000
Received: from EX13MTAUEA001.ant.amazon.com (pdx1-ws-svc-p6-lb9-vlan3.pdx.amazon.com [10.236.137.198])
        by email-inbound-relay-2b-baacba05.us-west-2.amazon.com (8.14.7/8.14.7) with ESMTP id wBNGgWa8125849
        (version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=FAIL);
        Sun, 23 Dec 2018 16:42:34 GMT
Received: from EX13D19EUB003.ant.amazon.com (10.43.166.69) by
 EX13MTAUEA001.ant.amazon.com (10.43.61.82) with Microsoft SMTP Server (TLS)
 id 15.0.1367.3; Sun, 23 Dec 2018 16:42:34 +0000
Received: from [10.218.62.26] (10.43.161.54) by EX13D19EUB003.ant.amazon.com
 (10.43.166.69) with Microsoft SMTP Server (TLS) id 15.0.1367.3; Sun, 23 Dec
 2018 16:42:25 +0000
Subject: Re: rfc: bool structure members (was Re: [PATCH V3] net/mlx4: Get rid
 of page operation after dma_alloc_coherent)
To: Jason Gunthorpe <jgg@ziepe.ca>, Joe Perches <joe@perches.com>
CC: Bart Van Assche <bvanassche@acm.org>,
        Stephen Warren <swarren@wwwdotorg.org>,
        Tariq Toukan <tariqt@mellanox.com>, <xavier.huwei@huawei.com>,
        <netdev@vger.kernel.org>, <linux-rdma@vger.kernel.org>,
        Doug Ledford <dledford@redhat.com>,
        "Stephen Warren" <swarren@nvidia.com>,
        Christoph Hellwig <hch@lst.de>,
        Andrew Morton <akpm@linux-foundation.org>,
        Linus Torvalds <torvalds@linux-foundation.org>,
        Jonathan Corbet <corbet@lwn.net>,
        <linux-kernel@vger.kernel.org>
References: <20181219182031.8675-1-swarren@wwwdotorg.org>
 <20181220174318.GA21404@ziepe.ca> <20181220174448.GA21149@lst.de>
 <1545328145.185366.500.camel@acm.org>
 <072c2d9d187daf0672bf54ab035e47a05fd1cd1d.camel@perches.com>
 <20181221033159.GF23877@ziepe.ca>
 <b906bec0fd12d25474561263087a26b8b0519fe4.camel@perches.com>
 <20181221235230.GC13168@ziepe.ca>
From: Gal Pressman <galpress@amazon.com>
Message-ID: <dc6d4923-63bd-e133-310b-7b164b0c92f5@amazon.com>
Date: Sun, 23 Dec 2018 18:42:20 +0200
User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:60.0) Gecko/20100101
 Thunderbird/60.3.3
MIME-Version: 1.0
In-Reply-To: <20181221235230.GC13168@ziepe.ca>
Content-Type: text/plain; charset="utf-8"
Content-Language: en-US
Content-Transfer-Encoding: 7bit
X-Originating-IP: [10.43.161.54]
X-ClientProxiedBy: EX13D19UWA003.ant.amazon.com (10.43.160.170) To
 EX13D19EUB003.ant.amazon.com (10.43.166.69)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 22-Dec-18 01:52, Jason Gunthorpe wrote:
> On Thu, Dec 20, 2018 at 09:12:43PM -0800, Joe Perches wrote:
>> Care to submit a coding_style.rst patch or
>> improve the one below this?
> 
> I took yours and revised it a little bit. I spent some time looking at
> assembly and decided to drop the performance note, the number of cases
> that run into overhead seems pretty small and probably already
> requires !! to be correct. There is also an equally unlikely gain, ie
> 'if (a & b)' optimizes a tiny bit better for bool types.
> 
> I also added a small intro on bool, as I know some people are
> unfamiliar with C11 _Bool and might think bool is just '#define bool
> u8'
> 
> (for those added to the cc) I'm looking at cases, like the patch that
> spawned this, where the struct has a single bool and no performance
> considerations. As CH said, seeing that get converted to int due to
> checkpatch is worse than having used bool. Using u8 won't make this
> struct smaller or faster.
> 
> Cheers,
> Jason
> 
> From c5e2c887f6326e1c4369876f39996417da5e90cc Mon Sep 17 00:00:00 2001
> From: Jason Gunthorpe <jgg@mellanox.com>
> Date: Fri, 21 Dec 2018 16:29:22 -0700
> Subject: [PATCH] coding-style: Clarify the expectations around bool
> 
> There has been some confusion since checkpatch started warning about bool
> use in structures, and people have been avoiding using it.
> 
> Many people feel there is still a legitimate place for bool in structures,
> so provide some guidance on bool usage derived from the entire thread that
> spawned the checkpatch warning.

Since a "Using bool" section is added, perhaps it's worth documenting the bool
usage as a function parameter [1]?

[1] https://www.spinics.net/lists/linux-rdma/msg72336.html

> 
> Link: https://lkml.kernel.org/r/CA+55aFwVZk1OfB9T2v014PTAKFhtVan_Zj2dOjnCy3x6E4UJfA@mail.gmail.com
> Signed-off-by: Joe Perches <joe@perches.com>
> Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
> ---
>  Documentation/process/coding-style.rst | 33 ++++++++++++++++++++++----
>  1 file changed, 29 insertions(+), 4 deletions(-)
> 
> diff --git a/Documentation/process/coding-style.rst b/Documentation/process/coding-style.rst
> index 4e7c0a1c427a9a..efdb1d32035fe1 100644
> --- a/Documentation/process/coding-style.rst
> +++ b/Documentation/process/coding-style.rst
> @@ -918,7 +918,32 @@ result.  Typical examples would be functions that return pointers; they use
>  NULL or the ERR_PTR mechanism to report failure.
>  
>  
> -17) Don't re-invent the kernel macros
> +17) Using bool
> +--------------
> +
> +The Linux kernel uses the C11 standard for the bool type. bool values can only
> +evaluate to 0 or 1, and implicit or explicit conversion to bool automatically
> +converts the value to true or false. When using bool types the !! construction
> +is not needed, which eliminates a class of bugs.
> +
> +When working with bool values the true and false labels should be used instead
> +of 0 and 1.
> +
> +bool function return types, arguments and stack variables are always fine to
> +use whenever appropriate. Use of bool is encouraged to improve readability and
> +is often a better option than 'int' for storing boolean values.
> +
> +Do not use bool if cache line layout or size of the value matters, its size
> +and alignment varies based on the compiled architecture. Structures that are
> +optimized for alignment and size should not use bool.
> +
> +If a structure has many true/false values, consider consolidating them into a
> +bitfield with 1 bit members, or using an appropriate fixed width type, such as
> +u8.
> +
> +Otherwise limited use of bool in structures does improve readability.
> +
> +18) Don't re-invent the kernel macros
>  -------------------------------------
>  
>  The header file include/linux/kernel.h contains a number of macros that
> @@ -941,7 +966,7 @@ need them.  Feel free to peruse that header file to see what else is already
>  defined that you shouldn't reproduce in your code.
>  
>  
> -18) Editor modelines and other cruft
> +19) Editor modelines and other cruft
>  ------------------------------------
>  
>  Some editors can interpret configuration information embedded in source files,
> @@ -975,7 +1000,7 @@ own custom mode, or may have some other magic method for making indentation
>  work correctly.
>  
>  
> -19) Inline assembly
> +20) Inline assembly
>  -------------------
>  
>  In architecture-specific code, you may need to use inline assembly to interface
> @@ -1007,7 +1032,7 @@ the next instruction in the assembly output:
>  	     : /* outputs */ : /* inputs */ : /* clobbers */);
>  
>  
> -20) Conditional Compilation
> +21) Conditional Compilation
>  ---------------------------
>  
>  Wherever possible, don't use preprocessor conditionals (#if, #ifdef) in .c
> 

