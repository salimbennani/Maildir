Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 18:10:05 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga007.fm.intel.com (fmsmga007.fm.intel.com [10.253.24.52])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 6B8325805F0;
	Tue, 18 Dec 2018 01:55:38 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga007-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 18 Dec 2018 01:55:38 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AXeYlaRaVkwLIsfjJ1ugmZGL/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpciybR7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTzFPDJ2y?=
 =?us-ascii?q?b4UPDOQPM+hXoIb/qFQSohW+HhGsCeH0xz9UhHL7x7E23/gvHAzE2gErAtIAsG?=
 =?us-ascii?q?7TrNXwLKodXuS1w7PTzTXfbvNW3Db96IzVeR08u/6DRrFwftDMwkQoCQPKlU+f?=
 =?us-ascii?q?ppfmPzyPzekNqHWb7/F+Wu61l2Emqhh8rz6yzckvkonEnpwZxkzA+Clj3Yo4K8?=
 =?us-ascii?q?O0RFRmbdOnDJdcrSCXOoluTs8/R2xluDw2xqAItJO7ZiQG1oorywLFZ/CZc4WF?=
 =?us-ascii?q?7RTuX/uLLzhinnJqYre/ig6y8Ue+zu38UdG50EhFriVbiNnArHMN2ALJ6siBVP?=
 =?us-ascii?q?R9+l2t2TGV1wDc8u1EIEY0mrTHK5M53LI8ip4evV7eEiL4hkn6lrKae0Y49uSy?=
 =?us-ascii?q?6unqYK3qppqGOI91jgH+PL4umsu6AekgNggOXm6b+fmz1bH6/k32Xq9Kjvsona?=
 =?us-ascii?q?ndqZzaIsoapqinDA9PyYsj9Rm/ACm80NgCnnkIMkhFeBSZgIjtIV3OJ+r4Dfin?=
 =?us-ascii?q?j1S2jDhr3+zGPqHmApjVKnjDkbThcqhn509T1Qo+1tRf55NSCrEcL/P/QE7xtN?=
 =?us-ascii?q?rEDhAnNwy42froCNJ41okGQ2KAHreZML/OsV+P/u8vI/ODZI4JuDnnLPgp/f7u?=
 =?us-ascii?q?jWIjll8bcqmkxp8XaHG+HvR7LESVe3vsgtEdEWgUugoyVvDliFqHUTRLfXa9Q7?=
 =?us-ascii?q?o85i0nCIKhFYrDRIetj6Kb0Ce4GZ1WYGZGCleXHHfsdoWEXeoMaS2ILs9glDwE?=
 =?us-ascii?q?SaauS4s72R6ysw/6zqJtLvDI9S0AqZLjyN916vXJmhEp9Tx0CMed33uXT25unG?=
 =?us-ascii?q?MFXDs23KF5oUxgxVaPy6l4g/pEFdNN4/NFSBs1NZnZz+ZiEdD9RhrBfsuVSFah?=
 =?us-ascii?q?WtimAis+TtQrz98KYkZyAdOijh/Y0iquAr8VkaGLBZMu/qLd2XjxO9hyy3Lc2K?=
 =?us-ascii?q?Y9iFkmR9NFNXe6ia5n6wjTG4nJnl2EmKmwa6QTwjTB9GeZwmqIp0FXTghwXaLB?=
 =?us-ascii?q?XXAcY0vWqc/05kfDT7+oFLQmPRFNyc+EKqtWdNLpiU9KS+vkONTbe2ixgXu/BQ?=
 =?us-ascii?q?6UxrOQa4rnY3gS0z/DCEcaiQwT/WyJNQ4lBii/pWLTFzhuFVPpY0Px/uhysnK7?=
 =?us-ascii?q?Tkkozw6Ua01tzaa6+hkQhfaEUfMcwqoEuDs9qzVzBFu9w9PWC9+Hpwp9fKVdYc?=
 =?us-ascii?q?kx4Etd2WLerQx9Op2gL6ZthlMFdwR3vkXu1wh4C4lakMgqqm8qwxR2Ka6CzFxB?=
 =?us-ascii?q?cDaY14jqOrLLMmny4Ayva6nO117E1NaZ5KgO5+o4qln5pw6pC1ct/G9h09lW1H?=
 =?us-ascii?q?uc+I7HDA4TUZL3T0Y2+AJ2p7DcYikh+YzU0WdgPrWzsj/Hw9gpHvcqyg68f9dD?=
 =?us-ascii?q?N6OJDA/zE9AAC8eyMuArmlipYQgCPOBd76M0O8Kmd/2b2K+kJupgnTSmjXhZ74?=
 =?us-ascii?q?B5yE6D6y18SuvQ1ZYf3/6YxheHVyv7jFq5qMD3mJxLaisIHmWizijoHohRabNo?=
 =?us-ascii?q?fYYKEGuhP9e4xtFjiJHzQX5Y81ijCkgC2M+ofxqSclP80RdR1UQRvXyohy+4wy?=
 =?us-ascii?q?ZonDEuq6qVxDbOzPj6dBobJm5LQ3FvjFftIYSuj9EWRlOobxUvlBa+4Ub6xq5b?=
 =?us-ascii?q?pLlwLmXJQEdIeTT2IH9mUqeqqrWCZMtP4osysSpLSOS8fUyaSrnlrhsYySzjBW?=
 =?us-ascii?q?hexDM8dz2woZX2hR96iGGcLHZ1snXZf9p9xRPe5NzaWP5Q0SAKRCh+iTnLGFe8?=
 =?us-ascii?q?O8Ol8smTl5fGquq+TX6uVoVPcSn3yoONrCu66ndtARGlnfCzm9vnHBM+0S/60d?=
 =?us-ascii?q?lqSCrJoAz9Yonty6S1L+ZnclN0C1/77spwApt+nZcohJEMxXgagY2Y/Xkdnmfy?=
 =?us-ascii?q?K9lb2b/+Y2ALRT4E2NPV5Anl2Et+LnOG3Y75V3Odwtd/aNm+eG8ZxiU978VSAq?=
 =?us-ascii?q?eO8LNEhTd1oka/rQ/JZPh9nzQdxuE05H8Une4JoxYtwTuHAr8JA0ZYJyPsmg+M?=
 =?us-ascii?q?79C/qqVXeWmufaKx1Ep4gdCuErWCrhtAV3b+f5coBTVw4dlnMFLQzH3z7ZnpeM?=
 =?us-ascii?q?XXbdIWrBGVkg3Pj+5IKJIqjfoKhDFqOWb8vX0j1u46ggZi3ZC8vIibNWpt+Li1?=
 =?us-ascii?q?DQJfNj3wf8kT4C3ijb5CnsaK2ICiBo5uFS8MXJvsUPKkCjYSten8OgaKET08rG?=
 =?us-ascii?q?qbGLXFEQ+e7kdms2zAE5SxO36LI3kZyM1oRAOBK0xHnAAUQDI6k4Y7Fg+wwczu?=
 =?us-ascii?q?blx56ioN5lLiqRtM1+FoNwT5UmjFvwelcTM0SJmZLBpL4QBO/UbVMcqC7u1tGy?=
 =?us-ascii?q?FU5IGurAuIKmaDfQRHEXkJWlCYB1DkJrSv5d7A8/WBBuqjNfTOZ6+CqfdZV/eO?=
 =?us-ascii?q?ypKiyY9m/zeKNsWSMXhuFfw72kxfXX9nH8TVgSkASysSlyjVdc6UuA+8+jFrrs?=
 =?us-ascii?q?C46PnrWBzg5YqMC7tRMNVj4RO2gb2EN+6fmil5MytY1ogXyH/Mybgf2kMSii50?=
 =?us-ascii?q?ezmsF7QAqTDCTKbKlqBLCB4bbjt5NNFU4KIkwglNJcnbh8vv2b5llfE1EUlKVF?=
 =?us-ascii?q?z7lsGtZMwHOGW9NFLBBEaWO7WKPzzLw8frYayiTb1clvlbtxq1uTyDCU/sIiyD?=
 =?us-ascii?q?lyX1VxCoKexMkCCbPBlEtI6haBpiFWjjQ8zgahCgNN93jDs2waA7h3/QNG4cNy?=
 =?us-ascii?q?R8fF1JrrGK8SxYhfB/EXRb7nV5NemEhzqZ7+7AJ5cWq/RrBCF0l+Nc4HsiyrpV?=
 =?us-ascii?q?7DtLRPp6mCbJqt5uolemkvSAyzZ9URpOrCpLi5yPvUl4JarZ8ZxACj74+0co4G?=
 =?us-ascii?q?HYJBMQotJjQonqtKdKz9HJvL7+IzdZ8tTb4M8VHcnIOYSBPWZ3dVLNGTjJHE4g?=
 =?us-ascii?q?aHb/MWDZmlwYlfS69WOcpZt8rYLjzskgULheAWIxH+gGC0FkGJQoKZ10V3twj7?=
 =?us-ascii?q?SShs0BzWGjtxSXT9cM7cOPbe6bHfi6cGXRtrJDfRZdhOqgdYk=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CUAQCYwxhch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBZYFbghEng3yUEoFgCCUUmTQyEwGHXyI4EgEDAQEBAQEBAgETAQEBCgsJCCk?=
 =?us-ascii?q?vgjYkAYJhAQEBAQIBAQIgBFIFAQkBAQoOCgICGA4CAgNUBgEMBgIBAQGDHYF5C?=
 =?us-ascii?q?AQBp2h8M4VAgyGBWoELizQXgUA/gREnDIJfiAmCVwKLOoRekQkJilGHCAYYigG?=
 =?us-ascii?q?HU4h1TJIKgXczGggwO4JsgicXEm0BAo0cPzKBBQEBjXgBAQ?=
X-IPAS-Result: =?us-ascii?q?A0CUAQCYwxhch0O0hNFkHAEBAQQBAQcEAQGBZYFbghEng3y?=
 =?us-ascii?q?UEoFgCCUUmTQyEwGHXyI4EgEDAQEBAQEBAgETAQEBCgsJCCkvgjYkAYJhAQEBA?=
 =?us-ascii?q?QIBAQIgBFIFAQkBAQoOCgICGA4CAgNUBgEMBgIBAQGDHYF5CAQBp2h8M4VAgyG?=
 =?us-ascii?q?BWoELizQXgUA/gREnDIJfiAmCVwKLOoRekQkJilGHCAYYigGHU4h1TJIKgXczG?=
 =?us-ascii?q?ggwO4JsgicXEm0BAo0cPzKBBQEBjXgBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,367,1539673200"; 
   d="scan'208";a="56332301"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 18 Dec 2018 01:55:36 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726495AbeLRJze (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 18 Dec 2018 04:55:34 -0500
Received: from mx2.suse.de ([195.135.220.15]:58002 "EHLO mx1.suse.de"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726365AbeLRJze (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 18 Dec 2018 04:55:34 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
        by mx1.suse.de (Postfix) with ESMTP id 3924BACB8;
        Tue, 18 Dec 2018 09:55:32 +0000 (UTC)
Subject: Re: [PATCH 08/14] mm, compaction: Use the page allocator bulk-free
 helper for lists of pages
To: Mel Gorman <mgorman@techsingularity.net>,
        Linux-MM <linux-mm@kvack.org>
Cc: David Rientjes <rientjes@google.com>,
        Andrea Arcangeli <aarcange@redhat.com>,
        Linus Torvalds <torvalds@linux-foundation.org>,
        Michal Hocko <mhocko@kernel.org>, ying.huang@intel.com,
        kirill@shutemov.name, Andrew Morton <akpm@linux-foundation.org>,
        Linux List Kernel Mailing <linux-kernel@vger.kernel.org>
References: <20181214230310.572-1-mgorman@techsingularity.net>
 <20181214230310.572-9-mgorman@techsingularity.net>
From: Vlastimil Babka <vbabka@suse.cz>
Openpgp: preference=signencrypt
Message-ID: <e5a93476-c31d-5c5e-7649-2b23188aaaac@suse.cz>
Date: Tue, 18 Dec 2018 10:55:31 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.3.3
MIME-Version: 1.0
In-Reply-To: <20181214230310.572-9-mgorman@techsingularity.net>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 12/15/18 12:03 AM, Mel Gorman wrote:
> release_pages() is a simpler version of free_unref_page_list() but it
> tracks the highest PFN for caching the restart point of the compaction
> free scanner. This patch optionally tracks the highest PFN in the core
> helper and converts compaction to use it.
> 
> Signed-off-by: Mel Gorman <mgorman@techsingularity.net>

Acked-by: Vlastimil Babka <vbabka@suse.cz>

Nit below:

> --- a/mm/page_alloc.c
> +++ b/mm/page_alloc.c
> @@ -2961,18 +2961,26 @@ void free_unref_page(struct page *page)
>  /*
>   * Free a list of 0-order pages
>   */
> -void free_unref_page_list(struct list_head *list)
> +void __free_page_list(struct list_head *list, bool dropref,
> +				unsigned long *highest_pfn)
>  {
>  	struct page *page, *next;
>  	unsigned long flags, pfn;
>  	int batch_count = 0;
>  
> +	if (highest_pfn)
> +		*highest_pfn = 0;
> +
>  	/* Prepare pages for freeing */
>  	list_for_each_entry_safe(page, next, list, lru) {
> +		if (dropref)
> +			WARN_ON_ONCE(!put_page_testzero(page));

That will warn just once, but then page will remain with elevated count
and free_unref_page_prepare() will warn either immediately or later
depending on DEBUG_VM, for each page.
Also IIRC it's legal for basically anyone to do get_page_unless_zero()
and later put_page(), and this would now cause warning. Maybe just test
for put_page_testzero() result without warning, and continue? Hm but
then we should still do a list_del() and that becomes racy after
dropping our ref...

>  		pfn = page_to_pfn(page);
>  		if (!free_unref_page_prepare(page, pfn))
>  			list_del(&page->lru);
>  		set_page_private(page, pfn);
> +		if (highest_pfn && pfn > *highest_pfn)
> +			*highest_pfn = pfn;
>  	}
>  
>  	local_irq_save(flags);
> 

