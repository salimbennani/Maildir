Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  20 Dec 2018 08:41:19 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 30FDB58055F;
	Wed, 19 Dec 2018 09:38:12 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 19 Dec 2018 09:38:10 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AbhFRKhYvwpc96wASZoh0P7H/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpc+zZR7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyxPDJ2h?=
 =?us-ascii?q?YYUBDOQPOuRXr4fyqFUBthu+HQuhCfjzxjJLnHL6wbc33/g9HQzAwQcuH8gOsH?=
 =?us-ascii?q?PRrNjtKKkSVuW1w7POzT7ebv1WxCz96IjUfRAhoPGMW697fM3eyUkyDQPFiU+f?=
 =?us-ascii?q?qYr+MjOa0+QCqWmb7+56We2zjG4nrhh8rz6yzckvkonEnpwZxkzA+Clj3Yo4K8?=
 =?us-ascii?q?O0RFRmbdOnDJdcrSCXOoluTs88Qmxkpjo2x7gbtZKnYScHzYgoywLbZvCbdoWE?=
 =?us-ascii?q?/A7vWPqULDp9hn9ofamwiAu8/Ee+zOD3S9O630xQriVfl9nBrnAN2ALX6siAUv?=
 =?us-ascii?q?Z94Eih1iiV1wzJ6eFLP1o0lazFJJ4l2LIwkYATsUvbEi/3nkX5krOWe1069uS0?=
 =?us-ascii?q?7+nreKjqq5GCO4Nulw3zMbgilta+DOk6KgQOWnKU+eW41L3t5035R7BKg+Uykq?=
 =?us-ascii?q?nYtpDaOMsaqre6AwBLyIYj7QiwDzO/3NQfk3gHKkxKeAicgoj3NFHBPur4Ae28?=
 =?us-ascii?q?g1uyijdrwe7JPrn7DpXKNHjDn6/tfaxh5E5E1Aoz0ddf6opQCrEAI/L8RFX9td?=
 =?us-ascii?q?PFDhIiNwy0wuDnCMhy148EWGKPBLOZP73WsVOS+u0vJOyMbpcPuDnhM/gl++Lu?=
 =?us-ascii?q?jXghlF8dZ6ap3IcXZ2q/Hvh8I0WZfGDjgtEOEWoRugo+TerqiECNUDJJZnayWb?=
 =?us-ascii?q?486S8/CI68EYjDQYWtiqSb3CinBp1WenxGCleUHHjybIWEW/AMaCGILs97iDME?=
 =?us-ascii?q?V6OsS4sg1RGoqQ/7xKBrLuvS+i0Eq53j0MJ56PHUlRE37TZ0FdiS03mRT2FomW?=
 =?us-ascii?q?MFXzw207p5oUBnzleD0LJ3g/pXFdFI4/NJUwE6NYPTzuBgCtDyXB7BccmNSFq8?=
 =?us-ascii?q?XtqmBjQxRMorw9ASe0Z9B8mijhfb0iW3GbAViaKECIY08q3G2XjxPNhyy3DB2K?=
 =?us-ascii?q?kljFkmR89POHaihq5+8QjTGoHIn1+Yl6asaaQTwirN+H2fwmqJuUFSSBRwXrnd?=
 =?us-ascii?q?XXADekvWqsz06V7YQL+wF7srKAtBxtSEKqtRdNLpi05LRPPiONTYfmKwlH28BR?=
 =?us-ascii?q?eOxrOQcoXqf38R0znaCEgBiwoT52qJNRAiBie9pGLTFCBuFVPqY0Pr7el+qHO6?=
 =?us-ascii?q?QlUozw2QaE1hzb61+h8ThfyTUP4T2rMEuCE8qzR7Blq93tTWC8aeqAplZqlTfd?=
 =?us-ascii?q?Q94FJf32LDqwN9JoCgL7xlhlMGaQt3u13h1hppBYRAi8Qlt24qwxdoJqKe01NB?=
 =?us-ascii?q?cC2Y0Iv0Or3WLGny4R+uZ7TX2lHYzNaZ5KMP5O4kpFXkuQGjDlAi/Gl/09lJz3?=
 =?us-ascii?q?uc4Y3HDQoPUZ7rTkk77Rl7p7HAbSk76IPZznlsMaiysj/f1NMlHuolyhC8f9hB?=
 =?us-ascii?q?NKOIDhP9E8ofB8K2Muwlh0Cpbg4YPOBV7KM0JcKmeOec166xIelgmyiqjWJZ74?=
 =?us-ascii?q?Bn00KA7jZzRfTM35kY3f6YxAyHVzHngVels8D3n51EZD4IEmq+zyjkGJBeZqlo?=
 =?us-ascii?q?cYkXDmeuJtW9xs9iiJ71R35Y6FmjCksG2c+oYxaTb0bx3RZN1UQRunGnnSq4zz?=
 =?us-ascii?q?ppkzAmtKaf3SrOw/j8exoDIGJEWG5ijVL0K4iuk98aRFSobxQulBa950b13bJb?=
 =?us-ascii?q?pKd8L2nUW0tIZDL5L2JhUquxsLqNfchP5YgssSVWVuS8fF+bRqT8oxsczyPsAW?=
 =?us-ascii?q?9eyConeDGtv5XzhwZ6h36FLHZvsHrZftl9xBfF69zbX/JR3DsGRC9jhDnTB1i8?=
 =?us-ascii?q?OcSp/NqOm5fCtOC+S3yuVplJfSb3yoOAsTOx5Xd2Dh2ng/CzhtrnHBA50SDh1t?=
 =?us-ascii?q?lmTyXIrAvmbYnt2KS3KuZnfkhuBF/h5Mt2AIB+ko0shJ4O3XgWnIma/X0CkW3r?=
 =?us-ascii?q?K9VUxbr+bGYRRT4M29PV5Qnl2E55IX6TyYP2SG6dwtd/aNmgeWwZxDg9789RBa?=
 =?us-ascii?q?eQ7bxEmzZ1o1WioQLQZ/h9gikSyf805HEGhOEJvRInzj+BDbAKAUlYISvsmgyU?=
 =?us-ascii?q?79C5qaVbfmeufqK21EpjhtChF7CCrxpYWHb4fJciACBx4t9+MFLKzH389IXkdM?=
 =?us-ascii?q?PMYtIUsx2eiw3AgPRNKJItivoKgjJqNnnnsn0iz+47kAZi3ZWnvIWcL2Vt/aS5?=
 =?us-ascii?q?AgNXNzHvZsMT/C3tgrhansqMw4+vGZBhEC0RXJT0VfKoDC4StfP/OgaMCjI8r2?=
 =?us-ascii?q?mUGaHFEQ+D8ktmrG/PE5O2N3GRPnYZ1s5vRB2cJExZnQAVUy82np8/FgC22sPh?=
 =?us-ascii?q?dF116SwW5l79shFM0P5nNwHjUmfDowelcjc1SJ+CLBpP8wFN/UHVPdaF7uJ0GS?=
 =?us-ascii?q?FY8YasrAiMKmydegRJAnsFWk2CB1D/ILau4cPM/PSfBuq7N/HOe6mBqfRCV/eU?=
 =?us-ascii?q?wpKiyotm8CiNNsWMPXliDuc32klZXXB+FMTWhS8PSzEMly/Wa86bpRG8+jB4r8?=
 =?us-ascii?q?yl8fTrXh7v6pWLC7dILdpv/BW2i7+ZN+GMnCZ5NSpY1pQUyHDS1bgQx0QShD9u?=
 =?us-ascii?q?djW3FbQAtDXATKbRmq9REh4aZDl/NMpO76IgwAZNPdTXhc/y1r59lvQ1EUtKVU?=
 =?us-ascii?q?T9msG1YswHO329NFLCBEqRKLuKPyHEw8HpbqO6UrBQiORUtxutuTeUCUPjPzKD?=
 =?us-ascii?q?lyX3WBCrK+1DkCabPBlGsoGnbhltEXTjTM7hahCjMN54lzs2wbg1hnPMLWEdMD?=
 =?us-ascii?q?h8fFlLrr2f9i5YhvR/G2pc7ntqN+WEmiCZ7/XGJZYSq/dkHiN0l+cJqEg9nr9U?=
 =?us-ascii?q?6jxUAflwsCjMp9Vt5Va8nbqh0D1iBSBJrz9NzK2WpkVpOaTfvs1PRGzD9RQl4m?=
 =?us-ascii?q?CZChBMrNxgXI6885tMw8TCwfqgYAxJ9MjZqI5FX5DZ?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AcAACQgRpch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTCBLYEOJ4wWi3xQAQEGgUmJDwNvjUiBcRUBARgTAYctIjQJDQE?=
 =?us-ascii?q?DAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYgMDAQIkCwENARsdAQMCCQEBBUsDI?=
 =?us-ascii?q?BEBBQEcGQWDHYFpAQMIDQEEnFc8jBUWBQEXgncFhEEKGScNXoE3AgYSh2yDJYE?=
 =?us-ascii?q?cF3iBB4lxhRICiSUaCocNUZANCZFWJIl3h2IsmS8GAgkHDyGBJYIOTSMVgyeCG?=
 =?us-ascii?q?wwXg0qKdB8ygQUBAY1gAQE?=
X-IPAS-Result: =?us-ascii?q?A0AcAACQgRpch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBgTC?=
 =?us-ascii?q?BLYEOJ4wWi3xQAQEGgUmJDwNvjUiBcRUBARgTAYctIjQJDQEDAQEBAQEBAgETA?=
 =?us-ascii?q?QEBCA0JCCkjDII2JAGCYgMDAQIkCwENARsdAQMCCQEBBUsDIBEBBQEcGQWDHYF?=
 =?us-ascii?q?pAQMIDQEEnFc8jBUWBQEXgncFhEEKGScNXoE3AgYSh2yDJYEcF3iBB4lxhRICi?=
 =?us-ascii?q?SUaCocNUZANCZFWJIl3h2IsmS8GAgkHDyGBJYIOTSMVgyeCGwwXg0qKdB8ygQU?=
 =?us-ascii?q?BAY1gAQE?=
X-IronPort-AV: E=Sophos;i="5.56,373,1539673200"; 
   d="scan'208";a="56574911"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 19 Dec 2018 09:38:10 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730594AbeLSRiH (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Wed, 19 Dec 2018 12:38:07 -0500
Received: from mail-it1-f196.google.com ([209.85.166.196]:39154 "EHLO
        mail-it1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728595AbeLSRiD (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 19 Dec 2018 12:38:03 -0500
Received: by mail-it1-f196.google.com with SMTP id a6so10451132itl.4
        for <linux-kernel@vger.kernel.org>; Wed, 19 Dec 2018 09:38:02 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=kgDREch0uno6TnGn8VSgP/fbnyM+Daf0DWv6CA+Hm7o=;
        b=EDmYQL9hb4bDPQdcE93OZn3ioCoP52SxxzGFhz0zf5rH+Ox1gnqs8MluVRoJmSEdTh
         LqA2yOsLrmTl5fh4qGqZsGrmtNB6n7hKKXE6FOrjJTsDMZd6u5mHEz5L5lrpbI5Vbw3C
         LxSEWdQHUFV/QQLNWUYZoWCC9IbSy4pvLaSUl2fjHyEyWX+G9IntgwPmxsKXB+KO7KRD
         DK0BMk48t5EUbKJG+SkHp2mvjZqvR3/wETNBeh8AxjtrpXL+rPbHymphuU3XEggXK/vp
         Uta1GFKR2u5cwG6+tZ5DFmtiiH3WjrrJPqeoUTYad2daPOkmBZpSwVjspQBBk/Oy4FW7
         KmkA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=kgDREch0uno6TnGn8VSgP/fbnyM+Daf0DWv6CA+Hm7o=;
        b=go8LSYbTlsJirDM7mfqgH6Jzq3v7Q1dy0v6r5gLyTc3jTyGrL5HFf9DTGt0PwFyFsG
         oSQRF5OVTmltc+NK54hEwCs+RTUY5bi8alIz9stA9Eg1kAHIGBwurpaq08+KEn9aRxbJ
         XFTtM+/UyWsinqPe1B80ZINpphWs39rpGMKHwPFpOd2YFMCfzAbC9zpKr7G8tNf+v4U4
         Tw6dcdd8fCxotME1OhiwWaLRfuvGxE1JczMlEHe4m+dcy6KV8T4rW0nkrAKsZALGjE7N
         zm37rDq4ymABaRQ/u0mYLsQgfG28Ov0bfQ+Ga8r0lVLQfETWvXKDjBjjYxm8NdEmQSJZ
         mRgg==
X-Gm-Message-State: AA+aEWZyt2SrEpcJIJg0rv2p3QyzE1/01OKRCD1aMFXV7L7B2A9J6zCh
        5e4dxBn2sv2xwgJBIJO3E1M=
X-Google-Smtp-Source: AFSGD/UQryS0JBeZSHy5Ve6NEwHMkAFotihqqp++wX/z/7Cpw+1p8Vn/QuZCOnyDhw7iwMUh4DCcGQ==
X-Received: by 2002:a24:8203:: with SMTP id t3mr7216765itd.151.1545241081846;
        Wed, 19 Dec 2018 09:38:01 -0800 (PST)
Received: from tower.thefacebook.com ([2620:10d:c090:200::7:bd3e])
        by smtp.gmail.com with ESMTPSA id a10sm3637728itc.3.2018.12.19.09.38.00
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Wed, 19 Dec 2018 09:38:01 -0800 (PST)
From: Roman Gushchin <guroan@gmail.com>
X-Google-Original-From: Roman Gushchin <guro@fb.com>
To: linux-mm@kvack.org
Cc: Matthew Wilcox <willy@infradead.org>,
        Johannes Weiner <hannes@cmpxchg.org>,
        Michal Hocko <mhocko@suse.com>, linux-kernel@vger.kernel.org,
        kernel-team@fb.com, Roman Gushchin <guro@fb.com>
Subject: [PATCH 2/3] mm: separate memory allocation and actual work in alloc_vmap_area()
Date: Wed, 19 Dec 2018 09:37:50 -0800
Message-Id: <20181219173751.28056-3-guro@fb.com>
X-Mailer: git-send-email 2.19.2
In-Reply-To: <20181219173751.28056-1-guro@fb.com>
References: <20181219173751.28056-1-guro@fb.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

alloc_vmap_area() is allocating memory for the vmap_area, and
performing the actual lookup of the vm area and vmap_area
initialization.

This prevents us from using a pre-allocated memory for the map_area
structure, which can be used in some cases to minimize the number
of required memory allocations.

Let's keep the memory allocation part in alloc_vmap_area() and
separate everything else into init_vmap_area().

Signed-off-by: Roman Gushchin <guro@fb.com>
Acked-by: Johannes Weiner <hannes@cmpxchg.org>
Reviewed-by: Matthew Wilcox <willy@infradead.org>
---
 mm/vmalloc.c | 50 +++++++++++++++++++++++++++++++++-----------------
 1 file changed, 33 insertions(+), 17 deletions(-)

diff --git a/mm/vmalloc.c b/mm/vmalloc.c
index 7660e3ef4133..042175d7d95f 100644
--- a/mm/vmalloc.c
+++ b/mm/vmalloc.c
@@ -395,16 +395,10 @@ static void purge_vmap_area_lazy(void);
 
 static BLOCKING_NOTIFIER_HEAD(vmap_notify_list);
 
-/*
- * Allocate a region of KVA of the specified size and alignment, within the
- * vstart and vend.
- */
-static struct vmap_area *alloc_vmap_area(unsigned long size,
-				unsigned long align,
-				unsigned long vstart, unsigned long vend,
-				int node, gfp_t gfp_mask)
+static int init_vmap_area(struct vmap_area *va, unsigned long size,
+			  unsigned long align, unsigned long vstart,
+			  unsigned long vend, int node, gfp_t gfp_mask)
 {
-	struct vmap_area *va;
 	struct rb_node *n;
 	unsigned long addr;
 	int purged = 0;
@@ -416,11 +410,6 @@ static struct vmap_area *alloc_vmap_area(unsigned long size,
 
 	might_sleep();
 
-	va = kmalloc_node(sizeof(struct vmap_area),
-			gfp_mask & GFP_RECLAIM_MASK, node);
-	if (unlikely(!va))
-		return ERR_PTR(-ENOMEM);
-
 	/*
 	 * Only scan the relevant parts containing pointers to other objects
 	 * to avoid false negatives.
@@ -512,7 +501,7 @@ static struct vmap_area *alloc_vmap_area(unsigned long size,
 	BUG_ON(va->va_start < vstart);
 	BUG_ON(va->va_end > vend);
 
-	return va;
+	return 0;
 
 overflow:
 	spin_unlock(&vmap_area_lock);
@@ -534,8 +523,35 @@ static struct vmap_area *alloc_vmap_area(unsigned long size,
 	if (!(gfp_mask & __GFP_NOWARN) && printk_ratelimit())
 		pr_warn("vmap allocation for size %lu failed: use vmalloc=<size> to increase size\n",
 			size);
-	kfree(va);
-	return ERR_PTR(-EBUSY);
+
+	return -EBUSY;
+}
+
+/*
+ * Allocate a region of KVA of the specified size and alignment, within the
+ * vstart and vend.
+ */
+static struct vmap_area *alloc_vmap_area(unsigned long size,
+					 unsigned long align,
+					 unsigned long vstart,
+					 unsigned long vend,
+					 int node, gfp_t gfp_mask)
+{
+	struct vmap_area *va;
+	int ret;
+
+	va = kmalloc_node(sizeof(struct vmap_area),
+			gfp_mask & GFP_RECLAIM_MASK, node);
+	if (unlikely(!va))
+		return ERR_PTR(-ENOMEM);
+
+	ret = init_vmap_area(va, size, align, vstart, vend, node, gfp_mask);
+	if (ret) {
+		kfree(va);
+		return ERR_PTR(ret);
+	}
+
+	return va;
 }
 
 int register_vmap_purge_notifier(struct notifier_block *nb)
-- 
2.19.2

