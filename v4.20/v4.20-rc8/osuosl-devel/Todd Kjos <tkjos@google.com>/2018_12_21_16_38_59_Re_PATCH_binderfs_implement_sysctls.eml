Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:53:08 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga008.fm.intel.com (fmsmga008.fm.intel.com [10.253.24.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E49525804D6;
	Fri, 21 Dec 2018 08:39:21 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by fmsmga008-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 21 Dec 2018 08:39:21 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A2bswtRE2u/AFevb9VT1rnJ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75pMu6bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJWCNBDIGz?=
 =?us-ascii?q?YYsBAeQCIOhWsZXyp0AWrRa8HgSsGP/jxyVUinPqwaE30eIsGhzG0gw6GNIOtW?=
 =?us-ascii?q?zZosvyNKgPTO++0azGzTfEb/NNxDzw75TIchMjofGLRrJ9asXRyU4oFwPKilWf?=
 =?us-ascii?q?t5bpMC+S1uQIqmWW6fdrW+G3i2M/tQ19vjyiyt0xhoTHmI4Z0E3I+CZlzIovJN?=
 =?us-ascii?q?C1SlZ3bcC4HJZUrS2XNIt7Ttk8T210uys20KAKtJq6cSUM1Z8p3QTQa+adfIiN?=
 =?us-ascii?q?+h/jVPieITN/hH99ZrK/iAi98VK6xu3/SMa0ylBKoTRBktXWsXANzRPT5tCGSv?=
 =?us-ascii?q?t74EihxS6C2x7P5uxAO0w4iKTWJ4A7zrItlZcfrV7PEy70lUnuia+ZbEQk+uym?=
 =?us-ascii?q?6+T9ZbXmo4eRN4t1igH4L6QvldWzAecmPQgUWWiU5+C82KTk/Uz3RrVFkOc2n7?=
 =?us-ascii?q?LHsJDVO8sbvLS1AwxL3YY57RawETOm3M4fnXkdI1JJYAiHgJTxO1HSPPD4Cu+y?=
 =?us-ascii?q?g1CtkDdo2f/KJLLgAojWI3jHkbfhe6t96kFGxAoyy9Bf+4xbCrUbLP3vXU/xsc?=
 =?us-ascii?q?TSDgUlPAys3+bnFNJ925seWW2VA6+ZLLndsViS6uIvPumDfokVuDnmJvgh5v7u?=
 =?us-ascii?q?i2I5mFAHcamo25sXdG63HvB8L0qFZnrsh88LEX0WsQomUOzqlFqCXCZJaHapX6?=
 =?us-ascii?q?I84TI7BJi8DYjZRICgm7iB3Ca9Hp1LaWFKEFGMEXH0d4qaX/cAcj6dIshkkjYc?=
 =?us-ascii?q?T7iuV5ch1Q2ytA/907dnLfDb+isCuZLn1dh6/evTlR4p+DxwDsSd1XyNTm5ukm?=
 =?us-ascii?q?MJQT82wL5woUhnxlif1qh4huRSFcZP6PNRTgc6KZncwvRnBN/oRALOYM2FSFa8?=
 =?us-ascii?q?TdWgGjE+UNQxz9gKY0Z+HtWiigvO3y6rA78TiryKC4Y48qPa33jtOcl9z2zK27?=
 =?us-ascii?q?Umj1kjWsFPL3GphrZj9wjPAI7Ei1iWmLy0dasCxiLN9H2MzWyVvE5GVg59SqHF?=
 =?us-ascii?q?XXEZZkvLotX1/ELCT7myCbs5NgtN09KNKqxPatfxl1VJWO/jOMjCY2K2g2qwGR?=
 =?us-ascii?q?eIxraLbIr2e2Uc3D/RCFQenwAU53aGMQk+BiGuo2/FCDxuFFTvY17j8OVkqXO7?=
 =?us-ascii?q?SFM0wB+Ob0F7y7W1/RsVj+SGS/wPxrIEpDshqzJsEVmn29LZFdWBqBRhfalGet?=
 =?us-ascii?q?w9/UpI2njftwx+OZygMbtvhlofcwRxokPv2A97CoRGkcg2snwqyBB+Jr6f0FNE?=
 =?us-ascii?q?bzmYx4z/OqXLKmnu+xCic67X2kzE3NmK4KsO6fQ4pE/lvAGmDUci93Rn099I03?=
 =?us-ascii?q?qT/JnKDQwSUY7vXUYz7RR1u7baYiwl7YPOyXJsKbW0siPF298xHuslywqvcM1F?=
 =?us-ascii?q?MKyZEw/+CcsaCNa0KOwrglSmcggLPORP+6EqJcOmcP2G1bWvPOZhmjKmkGtG7J?=
 =?us-ascii?q?p80kKK6ypzVOrI04wZzPGf2wuNTy38g0u5ssDrhYBEYikfH2q+yST+BI9dfLZy?=
 =?us-ascii?q?fZsNCWq1J823x9N+h4PiWnJC9V6jAU8G19GteRaIc1P92ghQ31wNoXO7gSu40y?=
 =?us-ascii?q?B0kzYxo6qdxiPO2efidBkAOmJRX2ltl1TsIYu1j9AcQkeoaRMklB+k5Ub82qha?=
 =?us-ascii?q?q75zL2jVQUdUYSf2K3tuXbe3trqHe8RP8o8nsT1LUOSgZlCXUr78rAEd0y/5HW?=
 =?us-ascii?q?texTY7eiquupX4mRx6lW2cIGxyrHrfZcF/2xPf6MbASv5W2zoMXDN4hiXPBlig?=
 =?us-ascii?q?I9mp+s2Zl5TZveC/TW6hVoBTfjPtzYOPrya74WxqARuin/G8gNHnEA460TPl2N?=
 =?us-ascii?q?luTynHsBH8Yozz3aSgLe1nZlVoBEP768diH4F+k4gwi4sK1XkUmJqV5mYHnnnp?=
 =?us-ascii?q?MdpAx63+dnUNSCUPw97U5gjlxUJiImiIx4L/SnWS3M9ha8OmbWMR3yI399pKB7?=
 =?us-ascii?q?uM7LxYgSt1pUK1rR7WYfh4hDscyOEh6HgHg+ESowotzz6QArQTHUleICztmA6E?=
 =?us-ascii?q?79G4rKVLemmvdaK821Z5ndCkFLuCuB1TWG7lepc+Gi999t5wP0jL0H3394HoYt?=
 =?us-ascii?q?3Qbc8Iux2QkhfAifVVKZ0rmvoLgypnJXzyvXk/x+Enihxu2ImwvJKbJGV14KK5?=
 =?us-ascii?q?HhlYOyX3Z8wJ/zHik71ektyK34y1HZVhBzYLXIbuTf2yCzIfrvDnNweIED0hpX?=
 =?us-ascii?q?aXA7vfHQmD6Eh4q3LDCYykN3aSJHMB19VtWAGdJFBDgAATRDg7npk5Fh2zxMz8?=
 =?us-ascii?q?akh54Cod5kX/qhtKxeJlLB3/UmbZpAe1ZTY4UpmfLBxK7g5c40fZK9CR7uV2Hy?=
 =?us-ascii?q?tA5J2usBSNKnCHZwRPFWwJWlKLB1HgPrmt5NnM6euYBvC5L/vBf7qOs/FeV+yT?=
 =?us-ascii?q?yJKr04tm+SuMN8qVMnljCf07xlRMXXRjF8vFnDUPTjQdlzjRYM6DuBe85ip3o9?=
 =?us-ascii?q?il//T2Qw3v/5WACrtIPdVr+hC7mqODN++WhCZkJjdUzJIMxXnUyLcB2F4ekT1h?=
 =?us-ascii?q?dz6oEb4Yry7CULrQmrNLDx4ccy5zKMpI76cm0gZRI8LUltP12aB+jvMuD1dFVF?=
 =?us-ascii?q?rhmtymZMAQImG9Mk/HC1iPNLicOTLLxMT3a7umSbJMlOVUqwGwuTGDHk7jJDuD?=
 =?us-ascii?q?kTzpVxGpMe5UjSCbPAZRuIeycht2DWjjTdTmagC0MdNtjD02x6E0iW3ONWIGLT?=
 =?us-ascii?q?d8dEZN/fWs6nZ3mPhwU09hpi5qN+SLmCax6+jeN4YYtuZtDi1oluVcpnMgxO0G?=
 =?us-ascii?q?wjtDQalJnyfe5v1spEruxvWMyD18eBVJrTlPicSAukA0avaRzYVJRXuRpEFF1m?=
 =?us-ascii?q?6XERlf4oI9UtA=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ATAADxFR1ch0O0hNFjHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGDayeDfYgZjgkUl0sUgRADTC0TAYQ8AoJyIjQJDQEDAQEBAQEBAgETAQE?=
 =?us-ascii?q?BCA0JCCkjDII6KQGCZgEBAQECAQECIB0BASoNAQUJAQEKCw0CAiYCAgMfEgEFA?=
 =?us-ascii?q?RwGEwUDgxqBeggFmkE8ihkQcIEvgnYBAQWHKwgSeYs0F4FAP4Qjgx4CgTsOgyC?=
 =?us-ascii?q?CV4kpVYFHhR2QC1oJhUKMJxiRX5oNMIElgg4zGggbFWwGgjWCG4NtinQeM4EFA?=
 =?us-ascii?q?QGLYoJMAQE?=
X-IPAS-Result: =?us-ascii?q?A0ATAADxFR1ch0O0hNFjHQEBBQEHBQGBUQgBCwGDayeDfYg?=
 =?us-ascii?q?ZjgkUl0sUgRADTC0TAYQ8AoJyIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII6K?=
 =?us-ascii?q?QGCZgEBAQECAQECIB0BASoNAQUJAQEKCw0CAiYCAgMfEgEFARwGEwUDgxqBegg?=
 =?us-ascii?q?FmkE8ihkQcIEvgnYBAQWHKwgSeYs0F4FAP4Qjgx4CgTsOgyCCV4kpVYFHhR2QC?=
 =?us-ascii?q?1oJhUKMJxiRX5oNMIElgg4zGggbFWwGgjWCG4NtinQeM4EFAQGLYoJMAQE?=
X-IronPort-AV: E=Sophos;i="5.56,382,1539673200"; 
   d="scan'208";a="57866848"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 21 Dec 2018 08:39:20 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2388396AbeLUQjP (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Fri, 21 Dec 2018 11:39:15 -0500
Received: from mail-lj1-f196.google.com ([209.85.208.196]:42606 "EHLO
        mail-lj1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725781AbeLUQjP (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 21 Dec 2018 11:39:15 -0500
Received: by mail-lj1-f196.google.com with SMTP id l15-v6so5271742lja.9
        for <linux-kernel@vger.kernel.org>; Fri, 21 Dec 2018 08:39:12 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=77hOC+aRarRpZO88sL6E8aKzVRukop1Y6dKNN3+Oiks=;
        b=dMlYaSQyqiCpp/L5zi86Ze9KJNfFp2U8E28Xx4UiS7T/DEIPH4rvy+KJD5O+6cedp1
         V195qWcJUpOTbdUzdKy166xHWRyDI3RmhuoGGttLn7pQ1120ZbG0K7LMO47u/4EK5C+q
         LKHRTbwtcrazFcAk9pPngbYSaENWuV2qvHopQICXVJ6V6QtVlnrR+5ok7UVNmLR6G2UH
         4bitAhNaqKNk/AGyrwdkJFhla3pDyhx6EA4b+611NQ1T13/xnedZVaaHYKrVo7Ofxy8o
         sbJL/jHiGgRpbHm9UtYlYB1Qqd0YcY4T7jK+n3GiuF0KZUJUPHBitr+xDiIXcpt3MFEr
         js0w==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=77hOC+aRarRpZO88sL6E8aKzVRukop1Y6dKNN3+Oiks=;
        b=s8N3O6e5FkG0t0f2qUVfiJt18AbrI8HXDDsRGx2Vo8EaIbZmhoNkvXFt/S0L1is6QP
         SwZoZdgFhJfN3Ipsji82gOPurxanwaUwrzJgBDXsxy4KZmzfs7GRHW1/D2gph8yoeZBU
         cy7P5bVGyUSc2bGznx7yfLYIytNJxJRmyuAJwPqXSXGRnt9R7nV896UhGthEEgwDmn6P
         G/My6FN+gCP8hF8AOcohs/HrhaAv02hSBAr++c4QQqTnOC8XsRUKgZE/rNcc6pAiUZgu
         CcvwfRT64q7HKBVq4xH9CqcWcBmJzq6hClKMwx7q+v4VlrwPz0oF4V4+GQfXVKliKX51
         piPA==
X-Gm-Message-State: AA+aEWapFcA25w8jSO7XMyGj8zOO+YmuB+DRrWna4Z+wdNzeMoG+jGNz
        l4R0pVpbzxUcpRMn0e0pPAOJhMGnuwGT/oTDftKNtK193/Q=
X-Google-Smtp-Source: ALg8bN7llGC5UqQ8EbOYvbykSwEEJLnRZTPtHpX4aehaGAJ3FVqBPPecaHtbd/vPWSFxjFPe92TDObgwNPxCpxiX/sA=
X-Received: by 2002:a2e:9655:: with SMTP id z21-v6mr2280994ljh.136.1545410351201;
 Fri, 21 Dec 2018 08:39:11 -0800 (PST)
MIME-Version: 1.0
References: <20181221133909.18794-1-christian@brauner.io> <20181221135509.GA30679@kroah.com>
 <20181221141241.gnxoiw7t5ajwcd6d@brauner.io> <20181221153758.GB14584@kroah.com>
 <20181221155918.b3sgv2adx5i74r6i@brauner.io> <20181221163316.GA8517@kroah.com>
In-Reply-To: <20181221163316.GA8517@kroah.com>
From: Todd Kjos <tkjos@google.com>
Date: Fri, 21 Dec 2018 08:38:59 -0800
Message-ID: <CAHRSSEx+gDVW4fKKK8oZNAir9G5icJLyodO8hykv3O0O1jt2FQ@mail.gmail.com>
Subject: Re: [PATCH] binderfs: implement sysctls
To: Greg KH <gregkh@linuxfoundation.org>
Cc: Christian Brauner <christian@brauner.io>,
        "open list:ANDROID DRIVERS" <devel@driverdev.osuosl.org>,
        Todd Kjos <tkjos@android.com>,
        LKML <linux-kernel@vger.kernel.org>,
        =?UTF-8?B?QXJ2ZSBIasO4bm5ldsOlZw==?= <arve@android.com>,
        joel@joelfernandes.org, Martijn Coenen <maco@android.com>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Fri, Dec 21, 2018 at 8:33 AM Greg KH <gregkh@linuxfoundation.org> wrote:
>
> On Fri, Dec 21, 2018 at 04:59:19PM +0100, Christian Brauner wrote:
> > On Fri, Dec 21, 2018 at 04:37:58PM +0100, Greg KH wrote:
> > > On Fri, Dec 21, 2018 at 03:12:42PM +0100, Christian Brauner wrote:
> > > > On Fri, Dec 21, 2018 at 02:55:09PM +0100, Greg KH wrote:
> > > > > On Fri, Dec 21, 2018 at 02:39:09PM +0100, Christian Brauner wrote:
> > > > > > This implements three sysctls that have very specific goals:
> > > > >
> > > > > Ick, why?
> > > > >
> > > > > What are these going to be used for?  Who will "control" them?  As you
> > > >
> > > > Only global root in the initial user namespace. See the reasons below. :)
> > > >
> > > > > are putting them in the "global" namespace, that feels like something
> > > > > that binderfs was trying to avoid in the first place.
> > > >
> > > > There are a couple of reason imho:
> > > > - Global root needs a way to restrict how many binder devices can be
> > > >   allocated across all user + ipc namespace pairs.
> > > >   One obvious reason is that otherwise userns root in a non-initial user
> > > >   namespace can allocate a huge number of binder devices (pick a random
> > > >   number say 10.000) and use up a lot of kernel memory.
> > >
> > > Root can do tons of other bad things too, why are you picking on
> >
> > That's global root not userns root though. :) These sysctls are about
> > global root gaining the ability to proactively restrict binder device
> > delegation.
> >
> > > binderfs here?  :)
> > >
> > > >   In addition they can pound on the binder.c code causing a lot of
> > > >   contention for the remaining global lock in there.
> > >
> > > That's the problem of that container, don't let it do that.  Or remove
> > > the global lock :)
> > >
> > > >   We should let global root explicitly restrict non-initial namespaces
> > > >   in this respect. Imho, that's just good security design. :)
> > >
> > > If you do not trust your container enough to have it properly allocate
> > > the correct binder resources, then perhaps you shouldn't be allowing it
> > > to allocate any resources at all?
> >
> > Containers just like VMs get delegated and you might not have control
> > over what is running in there. That's AWS in a nutshell. :) Restricting
> > it by saying "just don't do that" seems not something that is
> > appropriate given the workloads out there in the wild.
> > In general, I do *understand* the reasoning but I think the premise is
> > flawed if we can somewhat trivially make this safe.
> >
> > >
> > > > - The reason for having a number of reserved devices is when the initial
> > > >   binderfs mount needs to bump the number of binder devices after the
> > > >   initial allocation done during say boot (e.g. it could've removed
> > > >   devices and wants to reallocate new ones but all binder minor numbers
> > > >   have been given out or just needs additional devices). By reserving an
> > > >   initial pool of binder devices this can be easily accounted for and
> > > >   future proofs userspace. This is to say: global root in the initial
> > > >   userns + ipcns gets dibs on however many devices it wants. :)
> > >
> > > binder devices do not "come and go" at runtime, you need to set them up
> > > initially and then all is fine.  So there should never be a need for the
> > > "global" instance to need "more" binder devices once it is up and
> > > running.  So I don't see what you are really trying to solve here.
> >
> > That's dismissing a whole range of use-cases where you might allocate
> > and deallocate devices on the fly which this is somewhat designed for.
> > But I guess ok for now.
> >
> > >
> > > You seem to be trying to protect the system from the container you just
> > > gave root to and trusted it with creating its own binder instances.
> > > If you do not trust it to create binder instances then do not allow it
> > > to create binder instances!  :)
> >
> > Again, I get the reasoning but think that this dismisses major
> > real-world use-cases not just for binderfs but for all instances where
> > untrusted workloads are run which both containers and VMs aim to make
> > sure are possible.
> > Note, I mean untrusted not in the sense of necessarily being malicious
> > but just "can't guarantee that things don't blow up in your face".
> >
> > >
> > > > - The fact that we have a single shared pool of binder device minor
> > > >   numbers for all namespaces imho makes it necessary for the global root
> > > >   user in the initial ipc + user namespace to manage device allocation
> > > >   and delegation.
> > >
> > > You are managing the allocation, you are giving who ever asks for one a
> > > device.  If you run out of devices, oops, you run out of devices, that's
> > > it.  Are you really ever going to run out of a major's number of binder
> > > devices?
> >
> > The point is more about someone intentionally trying to do that.
> >
> > >
> > > > The binderfs sysctl stuff is really small code-wise and adds a lot of
> > > > security without any performance impact on the code itself. So we
> > > > actually very strictly adhere to the requirement to not blindly
> > > > sacrifice performance for security. :)
> > >
> > > But you are adding a brand new user/kernel api by emulating one that is
> > > very old and not the best at all, to try to protect from something that
> > > seems like you can't really "protect" from in the first place.
> >
> > Of course we can protect from that. It's about init root never running
> > out of devices. We don't care about non-init-userns running out of
> > devices at all.
> >
> > >
> > > You now have a mis-match of sysctls, ioctls and file operations all
> > > working on the same logical thing.  And all interacting in different and
> > > uncertian ways.  Are you sure that's wise?
> >
> > The sysctl approach is present in other pseudo-filesystems apart from
> > devpts. For example, mqueue.
> >
> > >
> > > If the binderfs code as-is isn't "safe enough" to use without this, then
> > > we need to revisit it before someone starts to use it...
> >
> > *It is safe.* I just don't see a good argument against additional
> > hardening. *But I'm definitely not going to push this patch if it's
> > additional hardening features are used to push the unsound argument that
> > binderfs isn't safe.* :)
>
> Ok, so what you really want is just "limits" to prevent a container from
> doing something really crazy, right?  So, how about a limit of 10 binder
> nodes per container?  Make it a kernel build option so it can be changed
> by a vendor if they really find that is a problem.
>
> Would that solve the issue you are thinking might be here?

We already have CONFIG_ANDROID_BINDER_DEVICES which specifies 3
devices (binder,hwbinder,vndbinder). How about limiting each container
to no more than the number of devices specified there?

>
> thanks,
>
> greg k-h
