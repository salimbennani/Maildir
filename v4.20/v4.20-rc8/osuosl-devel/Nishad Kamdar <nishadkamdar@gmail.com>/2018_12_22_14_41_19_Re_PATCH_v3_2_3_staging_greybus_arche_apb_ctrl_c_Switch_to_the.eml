Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:58:08 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 370ED5805CF;
	Sat, 22 Dec 2018 09:41:19 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Dec 2018 09:41:18 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Az3i2axBg+3iBOx0MbLiSUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP74rsuwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95fWSJBHI2y?=
 =?us-ascii?q?cogBD+QOMulEsobypVUBrQCmBQSuH+7v1iNEi2Xq0aEmyektDwfL1xEgEdIUt3?=
 =?us-ascii?q?TUqc34Or8TUeCuzKnH1yjMZO5T1zjn7YjHbwouoeuRVr93d8rRyFIvFwPfgVqN?=
 =?us-ascii?q?qozqJTaV2fkXvGiB9OdgWuevhHQmqwF1uDSg2sAsiozQi48T11vK9j15zZ4rKd?=
 =?us-ascii?q?GkTEN3e8OoHZVOuy2AKod7Qd8uT3tptSs40rEKpIK3cSkQxJkn2hLTceKLfoiS?=
 =?us-ascii?q?7h7+SOqcIzF1j29/dr2lnRa9602gx/X8Vsaq1FZKqTJIksfDtn8TzRzf8MuHRe?=
 =?us-ascii?q?Vn/kenxzmP0xrf6uZeIUA7jabbKpghzaAslpcLr0jPAiv7lF/rgKKYaEko4PWk?=
 =?us-ascii?q?5uf7brn8p5KRNZd4igTkPaQvnsy/D/44Mg8LX2WD/eS81bvj/VD2QblTjf05jL?=
 =?us-ascii?q?PZsJbEKsQfv6K5BAFU0oA95BalFDqmztsYkmcdLF5fexKIkZLpO1fQL/D8F/u/?=
 =?us-ascii?q?hE6skDhzy/DcIrLhGonNLmTEkLr5ebZ96k1cxxQpwdFQ+pJZEbUBIPP1Wk/su9?=
 =?us-ascii?q?3UFB45Mwqow+n5DNVxzJ8RWWWKAqWBKqPdrUeI5v4zI+mLfIIVuCzyK/k55/H0?=
 =?us-ascii?q?in81g18dfbSz0psRZ3C1BfBmI0SfYXrxjdYNC2YKvgwiTOP0jF2OSyJcZ3G3X6?=
 =?us-ascii?q?gk/DE0FJqmDZvfRoCqmLGOxjy7Hp1RZmBFEFyMC23nd4efVvcIaSKSJNJhkzMe?=
 =?us-ascii?q?WbigTY8hyQ+htAvgx7V7KerU/zUStYj/29ht++3TiRYy+CR3D8uH1WGBVWV0nm?=
 =?us-ascii?q?ISSD8w06Byukh9ylaF0ahljP1UD91T5/VVUggkMZ7Q1fB1C9f3WgjZZNeGVE6m?=
 =?us-ascii?q?Qsm6ATE2Vt8+3sUBY1hjFNm4jhDMxSyqA6QLmLyNA5A09qHc3331J8tmz3bG1a?=
 =?us-ascii?q?8hj0QpQ8dVNG2mgLJ/+BbXB4LTj0qZkKOqf7wG3CHR7GeD0XaOvEZAXQFtS6rF?=
 =?us-ascii?q?Q24QalHWrdvj4EPCVKGhCbI8PwtFyM6CLLZKa9LzgVVHQvfjJMrRY2arl2isAh?=
 =?us-ascii?q?aIw6uGbJD2dGUFwCXdFE8EnhgP/XaHMAg+ATuho2LeDTB0CVLjeUTs8fN6qHO6?=
 =?us-ascii?q?SE80wBqHb0lg17qz5x4UiuaQS/IV3rIYpighry94E0q639LTE9CAvRZufL1AYd?=
 =?us-ascii?q?Mh51dKzXjWtwhjMZ2vMa9jhkQSfB9qv0zzzRp3DIZAkc80rH4xyApyKKSY0E5O?=
 =?us-ascii?q?dj+C3JDwPKHXJXf2/By1d6HW3VTe2s6M+qgT8PQ4t0njvAaxG0si7nVrycVa32?=
 =?us-ascii?q?Gd55XKFgUSV53xX10z9xh7obHafyY865nV1X1qLam7rDvC18g1C+sizxaqZ81f?=
 =?us-ascii?q?P7+cFA/uD80aANCjKPYrm1e1dB0EJv1d9KkuM8OgafSGwq+rMP98kz28iWRI/Z?=
 =?us-ascii?q?5y0liL9yp6UePI25cFw/eF3gqITTv8jVGhstzploBAfz0dAm2/yS38Do5LeqJy?=
 =?us-ascii?q?ZZoLCXupI8CvxtR+hoThWn5C+F64GlMG3tSkeR6Tb1z7wA1R2l4boX2hmSuk0T?=
 =?us-ascii?q?N0lyslobaY3CzL2+7ibgYIOnZXRGl+ilfhOYq0gMoAXEirbAgpkwGp5V3gyKhY?=
 =?us-ascii?q?p6R/Lm/TTllOfyXtK2FiU62wtqeNYsJV6ZMotzlXX/q4YVyAVrH9pB4a2Tv5H2?=
 =?us-ascii?q?RC3DA7ay2qupLhkh16km2dK2x/rHjYecF23hrf4N3cRfhM3jsJXiV4iD/XBkSi?=
 =?us-ascii?q?MNmt59mbi5DDsuWmXWK7SpJTaTXrzZ+HtCaj5m1lGxy/k+qzmt36Cwc61yD72s?=
 =?us-ascii?q?JuVSXJqhb8f4bq2767MeJhYklnGlv859BmFYF5l4s6nIsQ1mQChpWJ4XoHln/+?=
 =?us-ascii?q?MdBa2aL9dnUBXzAKzMDO4Aj5xkJjNGmGyJzjVnWS2cZhY9i6YmUL2iMy9cxKCa?=
 =?us-ascii?q?GU7KBakitxuFa3sQXRYf1llDcH1fQu8GIag/0OuAc10iWdBbUSEVNZPCP2kRSI?=
 =?us-ascii?q?8su+rL5WZGu0dbiw1Ux+nc2uDb2YowFcXmr5dYkmHSNq8sp/N1fM2mXp6o74YN?=
 =?us-ascii?q?nQcc4TthqMnhjbledVL5YxlucQiSpjJGLwpnkly+89jRxz0pC2pomHK2Nx/K2n?=
 =?us-ascii?q?Bh5ULCH6Z8QW+jv1l6ZRgt6W35yzHpVmAjgLXoHnTfe2HzIJr/jnKxyCED4hqn?=
 =?us-ascii?q?eYBLrfGxWQ6Fx9onLLEpCrMWyXJXYDwdVjQhmdOFJQgAQOUDommZ45ExigxNb9?=
 =?us-ascii?q?f0dh+jAR+ln4pwNMy+JvKhn/S3rfqx2uajsuU5ifKxxW7g5Z6kfRMMye6P9zHi?=
 =?us-ascii?q?5C8p2gqgyNNnKUZwBSAW4VXUyEAkjpPqOy6tnY7+iYGu2+IuPOYbqQqOxeVPSI?=
 =?us-ascii?q?xZO13otl5TaMMcqPMWd4D/0mwUpORnR5G8XfmzUSRC0bjSPNb8iHpBii/i17tN?=
 =?us-ascii?q?yw8PPuWAj3/4uAF6NSMclz+xCxmaqMLfOQiz1jKTlG1pIA33vIyLkE0V4WiiFu?=
 =?us-ascii?q?cSStELsauS7MSqLQhrFYDxoBZyxvM8tI6ro23hNRNs7DltP1yrl4g+YpC1dEUF?=
 =?us-ascii?q?ztgN2madYWLGG9KlzHAl2GNLCHJT3N3sH2brmwSbxWjOVIqRKwvSyXHFPkPjSG?=
 =?us-ascii?q?jzPpTQygMflQjCGHOxxToIG8fQxrCWjmTdLmbAW0Md53jTIsx700iWjHNWodMT?=
 =?us-ascii?q?h6bkNMoaec7SJegvVjBWNB6mBpIvWDmyacvKHkLcM0tvtiBGxUkPxd5Hhyn7lS?=
 =?us-ascii?q?7ChCbP94gi3fqphpuV7wwceVzT8ydhtVqj9HzKGCuElrI+2N8JhbWX/I/xsI4W?=
 =?us-ascii?q?yKIxsPrtphTNbovvYDmZD0iKvvJWIaoJrv9swGCp2RcZrfPQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAACRdh5ch0O0hNFkGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBg2snjBeOCRSJFoRriU4UgV8TAQEYEwGHMCI?=
 =?us-ascii?q?0CQ0BAwEBAQEBAQIBEwEBAQoLCQgpIwyCOikBgmYBAQEBAgEBAiQTBgEbBBkBA?=
 =?us-ascii?q?wEBCQEBBQUYCQwZAwwFDQIRAQUBASELCAWDHYFpAQMNBwEFmjQ8jBUWBQEXgnc?=
 =?us-ascii?q?FhDYKGScNXoE3AgYSEIsBgRwXgUA/gRGDEoJXgWUpBVaCeoImAolDCocVU49jM?=
 =?us-ascii?q?wmCKYwNgyckCoFWiBuHa4pfhQ2KFgYCCQcPIYElgg4zGiODPIIbDBcSgziKWzg?=
 =?us-ascii?q?ygQIDAQEhEwsBjTABAQ?=
X-IPAS-Result: =?us-ascii?q?A0ABAACRdh5ch0O0hNFkGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBg2snjBeOCRSJFoRriU4UgV8TAQEYEwGHMCI0CQ0BAwEBAQEBA?=
 =?us-ascii?q?QIBEwEBAQoLCQgpIwyCOikBgmYBAQEBAgEBAiQTBgEbBBkBAwEBCQEBBQUYCQw?=
 =?us-ascii?q?ZAwwFDQIRAQUBASELCAWDHYFpAQMNBwEFmjQ8jBUWBQEXgncFhDYKGScNXoE3A?=
 =?us-ascii?q?gYSEIsBgRwXgUA/gRGDEoJXgWUpBVaCeoImAolDCocVU49jMwmCKYwNgyckCoF?=
 =?us-ascii?q?WiBuHa4pfhQ2KFgYCCQcPIYElgg4zGiODPIIbDBcSgziKWzgygQIDAQEhEwsBj?=
 =?us-ascii?q?TABAQ?=
X-IronPort-AV: E=Sophos;i="5.56,385,1539673200"; 
   d="scan'208";a="56977615"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 22 Dec 2018 09:41:17 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2392714AbeLVRlN (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Sat, 22 Dec 2018 12:41:13 -0500
Received: from mail-pl1-f195.google.com ([209.85.214.195]:46930 "EHLO
        mail-pl1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2392702AbeLVRlJ (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 22 Dec 2018 12:41:09 -0500
Received: by mail-pl1-f195.google.com with SMTP id t13so3912852ply.13
        for <linux-kernel@vger.kernel.org>; Sat, 22 Dec 2018 09:41:08 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=VuBSRvJnqiDEMW+Z1CQCS4e955HGskApAplyOTSUIJU=;
        b=iao3fUG3pWDhyZn3xwjscFVMF3DVZvxZBB64sGcPP6C35N6uhqrZg8/kvsTTubu3em
         2YQz0PNW1qOezEvwohl0FmBV1UEL4SNvipyIbFkObddcq2CkgBy6+5AKACBHB9v4qmFu
         g8VPUVqz30x5iIE6aS1fTxqbVE7v2sNFU3l5NKOgofHXEgotyR298c0UR5fHokEo8w5h
         akDsv6z6QHqhZy6yz7AmJmRMTnyhHtpSupqgxCbNhbeATmRGDGj+fS+PoQo79sANDbJ7
         mhvJzhwEKu+kVvFyDZXzLoflUPrRGo29NSRHgweG3evqPOvp4sbkFnRbeuYND2MF8ACO
         LnwQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:cc:subject:message-id:references
         :mime-version:content-disposition:in-reply-to:user-agent;
        bh=VuBSRvJnqiDEMW+Z1CQCS4e955HGskApAplyOTSUIJU=;
        b=DQvEbqz4N74oNVtdDomzlRwNdes1qO+Th3MMAmbQnz9zal/4pgqHxZ6hhZlFjHr2+5
         +t7lhjn1LPHWiuhL74FsvpBYF27H+uQ7EBRRL5GBC4f8NUDOgn9H/SB9xrr92pM6UMon
         EQMXSVi77cMXhcIHDDkGm1guB+qDM9Gb4SFg1Dy2rFX58hxyZWKbPOqzL6Uq4vCrjtFM
         aF9LYYR3UT7o6Ytl40/dgfOwuLxYR9/GupW5bPbSdrEvi41ia9mL6r99/LECCeVhU9S8
         d3U+1P2ju6OtS1VWUiYEUd5AlVBin0OZkxnP1fpH4XS8WXQuFgE99+QJ7rmIr56LyA56
         f4gQ==
X-Gm-Message-State: AJcUukfBbtghboRP3jpOEW8YYSeW7RZ5JIdIau+pK9g02oUlOhGg7ecq
        en1ciYgax0xM7nEK9BAiu3/Q8KOwIL0=
X-Google-Smtp-Source: ALg8bN6bBvLSVgjp1Djh6K7n0S49yjZXGPk+GeDNmbaAIE09wGuDHWMOm5j0Y0S8Oa2RzJVt61Wp3g==
X-Received: by 2002:a17:902:a710:: with SMTP id w16mr6521734plq.95.1545489687275;
        Sat, 22 Dec 2018 06:41:27 -0800 (PST)
Received: from nishad ([106.51.25.107])
        by smtp.gmail.com with ESMTPSA id q187sm46842815pfq.128.2018.12.22.06.41.23
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Sat, 22 Dec 2018 06:41:26 -0800 (PST)
Date: Sat, 22 Dec 2018 20:11:19 +0530
From: Nishad Kamdar <nishadkamdar@gmail.com>
To: Johan Hovold <johan@kernel.org>
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Alex Elder <elder@kernel.org>,
        Rui Miguel Silva <rmfrfs@gmail.com>,
        greybus-dev@lists.linaro.org, devel@driverdev.osuosl.org,
        linux-kernel@vger.kernel.org,
        Nishad Kamdar <nishadkamdar@gmail.com>
Subject: Re: [PATCH v3 2/3] staging: greybus: arche-apb-ctrl.c: Switch to the
 gpio descriptor interface
Message-ID: <20181222144118.GB15439@nishad>
References: <cover.1542898267.git.nishadkamdar@gmail.com>
 <9ebe2c3909643701e5936da3778bf4fab3e53036.1542898267.git.nishadkamdar@gmail.com>
 <20181218113540.GN20658@localhost>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181218113540.GN20658@localhost>
User-Agent: Mutt/1.9.4 (2018-02-28)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Tue, Dec 18, 2018 at 12:35:40PM +0100, Johan Hovold wrote:
> On Thu, Nov 22, 2018 at 10:38:18PM +0530, Nishad Kamdar wrote:
> > Use the gpiod interface instead of the deprecated old non-descriptor
> > interface.
> > 
> > Signed-off-by: Nishad Kamdar <nishadkamdar@gmail.com>
> > ---
> > Changes in v2:
> >  - Resolved compilation errors.
> > ---
> >  drivers/staging/greybus/arche-apb-ctrl.c | 159 +++++++++--------------
> >  1 file changed, 65 insertions(+), 94 deletions(-)
> > 
> > diff --git a/drivers/staging/greybus/arche-apb-ctrl.c b/drivers/staging/greybus/arche-apb-ctrl.c
> > index be5ffed90bcf..e887f6aee20b 100644
> > --- a/drivers/staging/greybus/arche-apb-ctrl.c
> > +++ b/drivers/staging/greybus/arche-apb-ctrl.c
> > @@ -8,9 +8,8 @@
> >  
> >  #include <linux/clk.h>
> >  #include <linux/delay.h>
> > -#include <linux/gpio.h>
> > +#include <linux/gpio/consumer.h>
> >  #include <linux/interrupt.h>
> > -#include <linux/of_gpio.h>
> >  #include <linux/of_irq.h>
> >  #include <linux/module.h>
> >  #include <linux/pinctrl/consumer.h>
> > @@ -24,12 +23,12 @@ static void apb_bootret_deassert(struct device *dev);
> >  
> >  struct arche_apb_ctrl_drvdata {
> >  	/* Control GPIO signals to and from AP <=> AP Bridges */
> > -	int resetn_gpio;
> > -	int boot_ret_gpio;
> > -	int pwroff_gpio;
> > -	int wake_in_gpio;
> > -	int wake_out_gpio;
> > -	int pwrdn_gpio;
> > +	struct gpio_desc *resetn;
> > +	struct gpio_desc *boot_ret;
> > +	struct gpio_desc *pwroff;
> > +	struct gpio_desc *wake_in;
> > +	struct gpio_desc *wake_out;
> > +	struct gpio_desc *pwrdn;
> >  
> >  	enum arche_platform_state state;
> >  	bool init_disabled;
> > @@ -37,28 +36,28 @@ struct arche_apb_ctrl_drvdata {
> >  	struct regulator *vcore;
> >  	struct regulator *vio;
> >  
> > -	int clk_en_gpio;
> > +	struct gpio_desc *clk_en;
> >  	struct clk *clk;
> >  
> >  	struct pinctrl *pinctrl;
> >  	struct pinctrl_state *pin_default;
> >  
> >  	/* V2: SPI Bus control  */
> > -	int spi_en_gpio;
> > +	struct gpio_desc *spi_en;
> >  	bool spi_en_polarity_high;
> >  };
> >  
> >  /*
> >   * Note that these low level api's are active high
> >   */
> > -static inline void deassert_reset(unsigned int gpio)
> > +static inline void deassert_reset(struct gpio_desc *gpio)
> >  {
> > -	gpio_set_value(gpio, 1);
> > +	gpiod_set_value(gpio, 1);
> >  }
> >  
> > -static inline void assert_reset(unsigned int gpio)
> > +static inline void assert_reset(struct gpio_desc *gpio)
> >  {
> > -	gpio_set_value(gpio, 0);
> > +	gpiod_set_value(gpio, 0);
> >  }
> 
> As the comment above deassert_reset() suggests, this change will
> actually change the semantics of these calls by taking any gpio flags
> into account (e.g. ACTIVE_LOW which will invert the signals).
> 
> Perhaps you should just use gpiod_set_raw_value() for now, and this can
> be addressed later. Alternatively, drop the comment and invert the
> polarity here and any users will need to update their device trees.
> 
> Either way, mention this in the commit message.
> 
Ok, I'll use the gpiod_set_raw_value().

> >  /*
> > @@ -75,11 +74,11 @@ static int coldboot_seq(struct platform_device *pdev)
> >  		return 0;
> >  
> >  	/* Hold APB in reset state */
> > -	assert_reset(apb->resetn_gpio);
> > +	assert_reset(apb->resetn);
> >  
> >  	if (apb->state == ARCHE_PLATFORM_STATE_FW_FLASHING &&
> > -	    gpio_is_valid(apb->spi_en_gpio))
> > -		devm_gpio_free(dev, apb->spi_en_gpio);
> > +	    apb->spi_en)
> 
> No need to break the line any more.
> 
Ok.

> > +		devm_gpiod_put(dev, apb->spi_en);
> >  
> >  	/* Enable power to APB */
> >  	if (!IS_ERR(apb->vcore)) {
> > @@ -101,13 +100,13 @@ static int coldboot_seq(struct platform_device *pdev)
> >  	apb_bootret_deassert(dev);
> >  
> >  	/* On DB3 clock was not mandatory */
> > -	if (gpio_is_valid(apb->clk_en_gpio))
> > -		gpio_set_value(apb->clk_en_gpio, 1);
> > +	if (apb->clk_en)
> > +		gpiod_set_value(apb->clk_en, 1);
> >  
> >  	usleep_range(100, 200);
> >  
> >  	/* deassert reset to APB : Active-low signal */
> > -	deassert_reset(apb->resetn_gpio);
> > +	deassert_reset(apb->resetn);
> >  
> >  	apb->state = ARCHE_PLATFORM_STATE_ACTIVE;
> >  
> > @@ -119,6 +118,7 @@ static int fw_flashing_seq(struct platform_device *pdev)
> >  	struct device *dev = &pdev->dev;
> >  	struct arche_apb_ctrl_drvdata *apb = platform_get_drvdata(pdev);
> >  	int ret;
> > +	unsigned long flags;
> >  
> >  	if (apb->init_disabled ||
> >  	    apb->state == ARCHE_PLATFORM_STATE_FW_FLASHING)
> > @@ -136,25 +136,20 @@ static int fw_flashing_seq(struct platform_device *pdev)
> >  		return ret;
> >  	}
> >  
> > -	if (gpio_is_valid(apb->spi_en_gpio)) {
> 
> spi_en_gpio is currently optional, so cannot just drop the check.
>
Ok, I'll restore it.

> > -		unsigned long flags;
> > +	if (apb->spi_en_polarity_high)
> > +		flags = GPIOD_OUT_HIGH;
> > +	else
> > +		flags = GPIOD_OUT_LOW;
> 
> This should probably also be converted to honouring the gpio flags, but
> perhaps better to do in a later patch.
> 
Ok.

> >  
> > -		if (apb->spi_en_polarity_high)
> > -			flags = GPIOF_OUT_INIT_HIGH;
> > -		else
> > -			flags = GPIOF_OUT_INIT_LOW;
> > -
> > -		ret = devm_gpio_request_one(dev, apb->spi_en_gpio,
> > -					    flags, "apb_spi_en");
> > -		if (ret) {
> > -			dev_err(dev, "Failed requesting SPI bus en gpio %d\n",
> > -				apb->spi_en_gpio);
> > -			return ret;
> > -		}
> > +	apb->spi_en = devm_gpiod_get(dev, "gb,spi-en-gpio", flags);
> > +	if (IS_ERR(apb->spi_en)) {
> > +		ret = PTR_ERR(apb->spi_en);
> > +		dev_err(dev, "Failed requesting SPI bus en GPIO: %d\n", ret);
> > +		return ret;
> >  	}
> >  
> >  	/* for flashing device should be in reset state */
> > -	assert_reset(apb->resetn_gpio);
> > +	assert_reset(apb->resetn);
> >  	apb->state = ARCHE_PLATFORM_STATE_FW_FLASHING;
> >  
> >  	return 0;
> > @@ -177,8 +172,8 @@ static int standby_boot_seq(struct platform_device *pdev)
> >  		return 0;
> >  
> >  	if (apb->state == ARCHE_PLATFORM_STATE_FW_FLASHING &&
> > -	    gpio_is_valid(apb->spi_en_gpio))
> > -		devm_gpio_free(dev, apb->spi_en_gpio);
> > +	    apb->spi_en)
> 
> No line break. Check this throughout.
>
Yes.

> > +		devm_gpiod_put(dev, apb->spi_en);
> >  
> >  	/*
> >  	 * As per WDM spec, do nothing
> 
> > @@ -404,12 +379,8 @@ static int apb_ctrl_get_devtree_data(struct platform_device *pdev,
> >  	}
> >  
> >  	/* Only applicable for platform >= V2 */
> > -	apb->spi_en_gpio = of_get_named_gpio(np, "spi-en-gpio", 0);
> > -	if (apb->spi_en_gpio >= 0) {
> > -		if (of_property_read_bool(pdev->dev.of_node,
> > -					  "spi-en-active-high"))
> > -			apb->spi_en_polarity_high = true;
> > -	}
> > +	if (of_property_read_bool(pdev->dev.of_node, "gb,spi-en-active-high"))
> > +		apb->spi_en_polarity_high = true;
> 
> Guess it's fine to drop the spi_en check here though.
>
Ok.
Thanks for the review.
regards,
Nishad

> Johan
