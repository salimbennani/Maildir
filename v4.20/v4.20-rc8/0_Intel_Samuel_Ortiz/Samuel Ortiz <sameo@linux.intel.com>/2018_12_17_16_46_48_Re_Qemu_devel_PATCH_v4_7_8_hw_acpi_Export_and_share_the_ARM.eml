Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 08:47:08 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 757255805FC
	for <like.xu@linux.intel.com>; Mon, 17 Dec 2018 08:48:00 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga006-1.jf.intel.com with ESMTP; 17 Dec 2018 08:48:00 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AutGhoBFmMyeEOvFyw5DBTp1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ7yoMSwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95fWSJBHI2y?=
 =?us-ascii?q?bIUPAOUdMulFoIfypVUBowamBQSuBu3ixSJEi3Hq0aIkyOQsCh3G0Q86Et4SrH?=
 =?us-ascii?q?jZtsj5OaEPWu611qnIyjDDYutL1zjn7YjIbw4uofWRVrxpa8rR1UgvFgLYhViX?=
 =?us-ascii?q?sozqJTaV2foKs2WA6+pgVOSvi3Moqg1rozivwNsshZfNho4P1l/E8iB5zZ8zKN?=
 =?us-ascii?q?alS0B7ecapHIVMuyyZLYd6X94uTmJytCokxLALuYS3cDUIxZg/2hLSb+KLf5KI?=
 =?us-ascii?q?7x/jTuqcISl0iGh4dL+/mhq/91WrxPfmWcmuyllKqzJIktnSuXAJ0Bze8syHSv?=
 =?us-ascii?q?pm/ke9wjaDzQ/T6udZIUwukqrbMZEhzqYxlpoVr0vDAjf7lFvqgKKVbEko5/Wk?=
 =?us-ascii?q?5uf9brn4qJKRN5V4hhz8P6g2n8ywG+U4MgwAX2iB/uS80aXu/VTnT7VPk/06i7?=
 =?us-ascii?q?TWv47EJcsFoq61GhRa0oE+6xa5Ezipzs8YkX4DLFJEexKIkZLlOl7TIP3gCfe/?=
 =?us-ascii?q?glKskCpkxvzcP73hBInNIWbHkLv7Ybl97EtcxRE1zdBY4ZJUBbcBIO/pVk/2rt?=
 =?us-ascii?q?zYAQc1MxaozOb/FNV9yoQeVHqLAq+YM6Pdr0WE5+0yI+SXYI8VuTD9K+Uq5vL0?=
 =?us-ascii?q?jH85n0Mdcret3ZcNdH+4GfFmcA2kZ2HxiIIBDXsSpVh5C+jrk0GZFzhUYXm0Qu?=
 =?us-ascii?q?Q7/D58DYunCYLKQMeqmKCA2yGgWYRbY30DBl2SHHO7SoOfRv1ZbSuTJtNmwCUJ?=
 =?us-ascii?q?UKXkR4I/2BXrrgLj1rd8MsLS/SsXs4+l08J6sPbOnxM//iAhEsKGzmuWRHt1lG?=
 =?us-ascii?q?5bezhj/a94uwRYw1KG3KR/nbQMFNla4vZEXgASL5PQz+VmTdv1X1SSUM2OTQOd?=
 =?us-ascii?q?S9C7DDV5acgtws1GN110HtilphTC2Te6Rb4Ti7GPQpcz9/SPjDDKO89hxiOeh+?=
 =?us-ascii?q?EahF48T54KbDX+iw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AFAAAn0hdchxHrdtBkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwEBgS+CYowVX4sYUAEBBoE1iSOEbYlIgXMUGBSEQIM?=
 =?us-ascii?q?WIjQJDQEDAQEBAQEBAgETAQEBCgsJCBsOL0IBAQEDCQKBYwUCAxoBBoJcAQIDA?=
 =?us-ascii?q?QIkCwETCikDAwECBgEBCg4KCR0IAwELBUkTBYMdgXQNAQSpBjOKIIw+F3iBB4E?=
 =?us-ascii?q?RgxKFAYVfAos2lWMJik2HAiMKApFGmWSBRoIOMxoIGxWDJ4IkAxeOHkAxgQeFI?=
 =?us-ascii?q?iOGM4F3AQE?=
X-IPAS-Result: =?us-ascii?q?A0AFAAAn0hdchxHrdtBkGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwEBgS+CYowVX4sYUAEBBoE1iSOEbYlIgXMUGBSEQIMWIjQJDQEDAQEBA?=
 =?us-ascii?q?QEBAgETAQEBCgsJCBsOL0IBAQEDCQKBYwUCAxoBBoJcAQIDAQIkCwETCikDAwE?=
 =?us-ascii?q?CBgEBCg4KCR0IAwELBUkTBYMdgXQNAQSpBjOKIIw+F3iBB4ERgxKFAYVfAos2l?=
 =?us-ascii?q?WMJik2HAiMKApFGmWSBRoIOMxoIGxWDJ4IkAxeOHkAxgQeFIiOGM4F3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,366,1539673200"; 
   d="scan'208";a="44374129"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 17 Dec 2018 08:47:59 -0800
Received: from localhost ([::1]:47833 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gYw3i-0001sU-T7
	for like.xu@linux.intel.com; Mon, 17 Dec 2018 11:47:58 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:59220)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <sameo@linux.intel.com>) id 1gYw3D-0001rG-SW
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 11:47:29 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <sameo@linux.intel.com>) id 1gYw3C-0004Nm-Nd
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 11:47:27 -0500
Received: from mga17.intel.com ([192.55.52.151]:48295)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <sameo@linux.intel.com>)
	id 1gYw36-0004Gb-7t; Mon, 17 Dec 2018 11:47:20 -0500
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from orsmga007.jf.intel.com ([10.7.209.58])
	by fmsmga107.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
	17 Dec 2018 08:47:16 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,366,1539673200"; d="scan'208";a="99395943"
Received: from ammantio-mobl.amr.corp.intel.com (HELO caravaggio)
	([10.252.16.95])
	by orsmga007.jf.intel.com with ESMTP; 17 Dec 2018 08:47:11 -0800
Date: Mon, 17 Dec 2018 17:46:48 +0100
From: Samuel Ortiz <sameo@linux.intel.com>
To: Igor Mammedov <imammedo@redhat.com>
Message-ID: <20181217164648.GG4456@caravaggio>
References: <20181217104838.18957-1-sameo@linux.intel.com>
	<20181217104838.18957-8-sameo@linux.intel.com>
	<20181217132028.4e387d2d@Igors-MacBook-Pro.local>
	<20181217134959.GB4456@caravaggio>
	<20181217163536.034fd13c@Igors-MacBook-Pro.local>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <20181217163536.034fd13c@Igors-MacBook-Pro.local>
User-Agent: Mutt/1.10.1 (2018-07-13)
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 192.55.52.151
Subject: Re: [Qemu-devel] [PATCH v4 7/8] hw: acpi: Export and share the ARM
 RSDP build
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Laurent Vivier <lvivier@redhat.com>,
	Peter Maydell <peter.maydell@linaro.org>, Thomas Huth <thuth@redhat.com>,
	Eduardo Habkost <ehabkost@redhat.com>, Ben Warren <ben@skyportsystems.com>,
	"Michael S. Tsirkin" <mst@redhat.com>, qemu-devel@nongnu.org,
	Shannon Zhao <shannon.zhaosl@gmail.com>, qemu-arm@nongnu.org,
	Paolo Bonzini <pbonzini@redhat.com>, Richard Henderson <rth@twiddle.net>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Mon, Dec 17, 2018 at 04:35:36PM +0100, Igor Mammedov wrote:
> On Mon, 17 Dec 2018 14:49:59 +0100
> Samuel Ortiz <sameo@linux.intel.com> wrote:
> 
> > On Mon, Dec 17, 2018 at 01:20:28PM +0100, Igor Mammedov wrote:
> > > On Mon, 17 Dec 2018 11:48:37 +0100
> > > Samuel Ortiz <sameo@linux.intel.com> wrote:
> > > 
> > > > Now that build_rsdp() supports building both legacy and current RSDP
> > > > tables, we can move it to a generic folder (hw/acpi) and have the i386
> > > > ACPI code reuse it in order to reduce code duplication.
> > > > 
> > > > Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>
> > > > Reviewed-by: Philippe Mathieu-Daudé <philmd@redhat.com>
> > > > Tested-by: Philippe Mathieu-Daudé <philmd@redhat.com>
> > > > Reviewed-by: Andrew Jones <drjones@redhat.com>
> > > > Reviewed-by: Igor Mammedov <imammedo@redhat.com>
> > > for future reference, if one changes patch in a significant way,
> > > one is supposed to drop Tested/Reviewed-by tags so that reviewers
> > > would look at it again and we by mistake won't merge not actually
> > > reviewed changes.
> > > 
> > > [...]
> > > 
> > > > diff --git a/hw/i386/acpi-build.c b/hw/i386/acpi-build.c
> > > > index fb877648ac..846cb6d755 100644
> > > > --- a/hw/i386/acpi-build.c
> > > > +++ b/hw/i386/acpi-build.c
> > > > @@ -2547,35 +2547,6 @@ build_amd_iommu(GArray *table_data, BIOSLinker *linker)
> > > >                   "IVRS", table_data->len - iommu_start, 1, NULL, NULL);
> > > >  }
> > > >  
> > > > -static void
> > > > -build_rsdp(GArray *rsdp_table, BIOSLinker *linker, unsigned rsdt_tbl_offset)
> > > > -{
> > > > -    /* AcpiRsdpDescriptor describes revision 2 RSDP table and as result we
> > > > -     * allocate extra 16 bytes for pc/q35 RSDP rev1 as well. Keep extra 16 bytes
> > > > -     * wasted to make sure we won't breake migration for machine types older
> > > > -     * than 2.3 due to size mismatch.
> > > > -     */
> > > > -    AcpiRsdpDescriptor *rsdp = acpi_data_push(rsdp_table, sizeof *rsdp);
> > > > -    unsigned rsdt_pa_size = sizeof(rsdp->rsdt_physical_address);
> > > > -    unsigned rsdt_pa_offset =
> > > > -        (char *)&rsdp->rsdt_physical_address - rsdp_table->data;
> > > > -
> > > > -    bios_linker_loader_alloc(linker, ACPI_BUILD_RSDP_FILE, rsdp_table, 16,
> > > > -                             true /* fseg memory */);
> > > > -
> > > > -    memcpy(&rsdp->signature, "RSD PTR ", 8);
> > > > -    memcpy(rsdp->oem_id, ACPI_BUILD_APPNAME6, 6);
> > > > -    /* Address to be filled by Guest linker */
> > > > -    bios_linker_loader_add_pointer(linker,
> > > > -        ACPI_BUILD_RSDP_FILE, rsdt_pa_offset, rsdt_pa_size,
> > > > -        ACPI_BUILD_TABLE_FILE, rsdt_tbl_offset);
> > > > -
> > > > -    /* Checksum to be filled by Guest linker */
> > > > -    bios_linker_loader_add_checksum(linker, ACPI_BUILD_RSDP_FILE,
> > > > -        (char *)rsdp - rsdp_table->data, 20 /* ACPI rev 1.0 RSDP size */,
> > > > -        (char *)&rsdp->checksum - rsdp_table->data);
> > > > -}
> > > > -
> > > >  typedef
> > > >  struct AcpiBuildState {
> > > >      /* Copy of table in RAM (for patching). */
> > > > @@ -2732,7 +2703,25 @@ void acpi_build(AcpiBuildTables *tables, MachineState *machine)
> > > >                 slic_oem.id, slic_oem.table_id);
> > > >  
> > > >      /* RSDP is in FSEG memory, so allocate it separately */
> > > > -    build_rsdp(tables->rsdp, tables->linker, rsdt);
> > > > +    {
> > > > +        AcpiRsdpData rsdp_data = {
> > > > +            .revision = 0,
> > > > +            .oem_id = ACPI_BUILD_APPNAME6,
> > > > +            .xsdt_tbl_offset = NULL,
> > > > +            .rsdt_tbl_offset = &rsdt,
> > > > +        };
> > > > +        build_rsdp(tables->rsdp, tables->linker, &rsdp_data);
> > > > +        if (!pcmc->rsdp_in_ram) {
> > > > +            /*
> > > > +             * Legacy machine types (2.2 and older) expect to get a complete
> > > > +             * revision 2 RSDP table, even though they only look at the
> > > not true, rev is set to 0 for pc machines,
> > Rev is set to 0 but they effectively expect to get a structure which
> > size is the rev 2 one. That's what I meant.
> > 
> > > the point of the original comment was
> > > that we allocate extra 16 bytes but not actually using them and why it's bad
> > > to drop it suddenly.
> > >
> > > > +             * revision 0 fields (xsdt pointer is not set). So in order to
> > > > +             * not break migration to those machine types we waste 16 bytes
> > > > +             * that we amend to the RSDP revision 0 structure.
> > >                           ^^^ added
> > > > +             */
> > > Perhaps amended original comment would be clearer:
> > > 
> > >    /* We used to allocate extra space for RSDP rev 2 but used only space for
> > >     * legacy RSDP and extra bytes were zeroed out. Keep wasting extra 16 bytes
> > >     * to make sure we won't breake migration for machine types 2.2 and older
> > >     * due to RSDP blob size mismatch.
> > >     */
> > > 
> > > > +            build_append_int_noprefix(tables->rsdp, 0, 16);
> Looks like I've haven't noticed, it might work but are you sure?
> 0 here is uint64_t and then it's shifted 16 times which is sort of gray area (undefined behavior)
AFAIK shifting by N bits when N > width(left operand) is undefined but
that's not the case here. build_append_int_noprefix(foo, 0, 16) shift a 64 bits
wide unsigned int by 8 bits, for each iterations of a 16 iterations
loop. So we're doing 16 iterations of properly defined behaviour.

Cheers,
Samuel.


