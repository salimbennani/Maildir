Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 08:43:40 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 3E58E5805FC;
	Mon, 17 Dec 2018 04:45:29 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 17 Dec 2018 04:45:29 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AZe13cBBmsc6Avev2HxqKUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP7/ps6wAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VDK/5KlpVRDokj?=
 =?us-ascii?q?8KODE38G7VisJ+gqFVrg+/qRNj2I7UeIOYOeFifq/BZ94WWXZNUtpTWiFHH4iy?=
 =?us-ascii?q?b5EPD+0EPetAqof8p18OogWjDgeyH+PvzSJDi3j13aw61+QuDx3G3BcnH98Vv3?=
 =?us-ascii?q?TUq9L1NKgWUe+r1qXH0TLDb/ZP1Dr79YPGcQghrOmSUb5sdcfd01QjGg3bglmK?=
 =?us-ascii?q?tIDoPC+Z2v4MvmWZ9+ZsS/6jhmo9pwxyojWj3NkghpfXio4P11zJ8St0zYAoLt?=
 =?us-ascii?q?OiUkF7e8SrEJ5IuiGaKYR2RsQiTnl2uCY11LIGo4S3fCsUx5Q9wR7QdfiHf5KP?=
 =?us-ascii?q?4hL5W+adOTZ4hHR7d7Kjnxu+71Ssx+nmWsWp3ltGsDBJnsTPu3wRzRDe68qKRu?=
 =?us-ascii?q?N4/ki72DaP0w7T6vtDIUAxjafbL58hwrgtlpscqEjDHTH5mF/wjKCIckUo4++o?=
 =?us-ascii?q?6urhYrr4vJ+RLJF0ig7gPaQ0gMC/Avo3MhIIX2eF/eSwzrrj/Vf2QLlSlP05jr?=
 =?us-ascii?q?HZsIzGJcQcvqO5Bw5V0oU95BqlADamzc8VnX0GLFJDZRKGgJLlO1DIIPDkE/i/?=
 =?us-ascii?q?h06gnytsx/DDJrfhGInCLmDfkLf9erZw805cxxAyzdBD/Z1UDasNIPLuWkDrst?=
 =?us-ascii?q?zYAQQ0Mwi1w+bhFdV82ZkSWWOJAq+FLqzStUWE6f4oI+mJfIUVoiryK+A55/7y?=
 =?us-ascii?q?in80gV0dfa630pcNa3C4GfJmI0OeYXf3htcBEGEKvhcxTeDwiV2CVyJTaGi2X6?=
 =?us-ascii?q?4m+j47D4emB5/ZRo+xmLyBwDu7HppOa29cEVCMEXDod4aeV/cWci2SINRskjgF?=
 =?us-ascii?q?VbinVo8g2guitA78y7p7MOXU/jcUuo7k1Nhw/+fTjw099SRoD8SB1GGAV2J0kX?=
 =?us-ascii?q?kORzMs2KB/oFZyylGM0aVjh/xYFNpT5+5GUwsgNJ7cyfB6BM72Wg7bYtiJT1Om?=
 =?us-ascii?q?SM28AT4tVtIx38MOY0FlFtq/lB/DwTSlD6UVl7ORApw06bzT3372K8Z5yHbG0a?=
 =?us-ascii?q?0hgkIiQstOM22mm6F++xLSB47Pj0WWiaKqeb4A0y7K8WeJ1XCOs11AUA5sTaXF?=
 =?us-ascii?q?WmgSaVbMotTn+EzOVb+uBq4hMgta18GCLLBHatnojVVAWffiN87SY2O3m2esGx?=
 =?us-ascii?q?mIwqmAY5bte2UYxC/dElQLkxgP/XaaMggzHjuho2PbDDxpCVLvY0Pt/fNiqH+h?=
 =?us-ascii?q?SU801QWKb0xn17q64RMVgf2cS/UO3rMLoishqjN0HEqj0NLSEdaPuw1hfKBEa9?=
 =?us-ascii?q?Mn/FhHzX7ZtxB6PpG4Na9igkARcgtpsELuzRl4EZhAntUwo3MszwpyLryY3UhF?=
 =?us-ascii?q?dzOZ25DwJ7LWJnPz/BCpd67ZxFXe3MyK9acI7fQys0/jsx2xFko+73Vn1MFY0n?=
 =?us-ascii?q?uB5pnQEAUeS5PwUkYt+Bh8qLHXeS0954LS1X1xPqi4qD7C29Q1BOQ7zhasZctQ?=
 =?us-ascii?q?MKSBFAXqCc0VG9CuKPA2m1iudh8EJuFS+7IuMMO8avSG37SnPOB+kzK8jGRL+Z?=
 =?us-ascii?q?xy3ViI9yVhVOHIxZEFw/eD0wuDVjf8ikqhs8/tlYBFYzESAnSwySz+CIFNYa1y?=
 =?us-ascii?q?eJ4BCX2yLM2v2tV+m5ntVmZY9V6iHV8H2NWleQGPb1z7xgBQ0UUXoXq6mSq31T?=
 =?us-ascii?q?B0kjcprraB0yzK2ejtaB0HOmtTTml4kVjsOZS0j8wdXEWwbQgmjgGl5UX5x6hc?=
 =?us-ascii?q?vqh/NHPcQURLfyj3KWFtTK2wu6GGY85O7pMorCpWXP69YVCcVr7yvR8a3zn/EG?=
 =?us-ascii?q?tZwTAxbyuqtYnhnxxmlGKdK25+rXrDdsF33xvf5t3cRfhK0zoCRSl4jyTXB1em?=
 =?us-ascii?q?M9mo+9WUi4nMsuSkW229UZ1TdDHhzZmcuyuj+W1qHRq/kuiwmtL9EAg2yy/718?=
 =?us-ascii?q?RwWiXOoxbxeY3r16W8MeJ6cUhkHl7868xmGo5glos8no0f2X8fhp+N53oIjX/z?=
 =?us-ascii?q?MclH2aL5dHcNQD8Lw93P7wT/1kxsMGmJx57nWXWH2cRuecO6YmwN1yI57sBKDr?=
 =?us-ascii?q?qU7bNekSt0pFq4sRzeYfxnkjgBzvsu7WYQg/sVtwo10iWdHrcSEFFEPSzrkhSE?=
 =?us-ascii?q?9dG/o79RZGayariwz0t+kMulDLGDpAFcRXn4do0jHS928sVwLlbM3Gfv5YHjfd?=
 =?us-ascii?q?nadcgTuQGMkxfck+hVL4o8meEQiipgPWL9oGcpy+omjRF12ZG6vY6HK3hi/a6j?=
 =?us-ascii?q?Ax5YMCH1aN0X+j33kalemcOW1Zi1Hpp9AjULQIfoTfWwHTIQr/vnMhiBECYmpn?=
 =?us-ascii?q?eHA7bfHhKf6ER7r3LJCZ+rLGqaJH0YzdVkWRmcK1ZTgAESXDUmgJE5Ehqmy9Dm?=
 =?us-ascii?q?cEd8/joR/EL3qgNQyuJ0MBnySmfepAC1ajctVZiQNhxW4htZ50fSN8ye4fl+Hy?=
 =?us-ascii?q?VZ/p2nsQyMJXaXZwVODWEVREOEA0rvMaWp5dnF6+KYHPaxL+PSYbWSruxTT/eI?=
 =?us-ascii?q?yoyu0otl/DaMN9+DPnp4D/081UpMQ2p5G9nCmzgUTywXliTNb9OUpRum+y13qN?=
 =?us-ascii?q?y//+rvWA71+YSPDL5SO811+x+qmaeDK/KQhCFhJDlCy5MD3mXIx6Yf3VIIjyFu?=
 =?us-ascii?q?diKgEbABtS7LUaLRlbVbDx8dayNvKsRI67gw0RVKOc7ektn1zKJ3juYpC1dZUl?=
 =?us-ascii?q?zsgt2pZc0PI22nKFzLHlqENLSYKj3N2Mz3ZaK8SbtNjORbrRGwuDCbE1P9MTSH?=
 =?us-ascii?q?jTXmSxevMeRUhiGBIBNeoJ29cgpqCWX7TNPpcBu7MNp2jT0w2bI1h3PKOnQaMT?=
 =?us-ascii?q?hzaE5NqryQ7SVFgvRwAWBB73xlLfWalCad9eXXNpEWsf44ShhzwstW6XFy97tS?=
 =?us-ascii?q?6TpDQrQhsSfbq5hSo1ajie6JjB1/XRxVrStRj4+jsURrIqjc999LXnOSrzwX6m?=
 =?us-ascii?q?DFKAUOqpNZEdqn76NBztXTj6XbJzBF/NbZu8AbAp6He4q8LHM9PE+xS3bvBwwf?=
 =?us-ascii?q?QGvzOA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BVAgDgmRdch0O0hNFkHgEGBwaBZYJqg?=
 =?us-ascii?q?QIng3yUD4INFJhoA0wsAxABh1UiOBIBAwEBAQEBAQIBEwEBAQoLCQgpIwyCNiK?=
 =?us-ascii?q?CZAEBAQECAQECIAQZAQE3AQUJAQEKCw0CAiYCAgMfEgEFARwGEwWDHQGBeAgFn?=
 =?us-ascii?q?DU8iiBwfDOCdgEBBYcZCBJ5izMXgUA/gRGCZC6DHgKBOgsRgxOCV4lEgXSFFI9?=
 =?us-ascii?q?5VgmCKIMVgVCKTRiRUplVMIE8VoEhMxoIGxVsBoI1CYISg22EWYYHMjMBgQQBA?=
 =?us-ascii?q?Ysigk0BAQ?=
X-IPAS-Result: =?us-ascii?q?A0BVAgDgmRdch0O0hNFkHgEGBwaBZYJqgQIng3yUD4INFJh?=
 =?us-ascii?q?oA0wsAxABh1UiOBIBAwEBAQEBAQIBEwEBAQoLCQgpIwyCNiKCZAEBAQECAQECI?=
 =?us-ascii?q?AQZAQE3AQUJAQEKCw0CAiYCAgMfEgEFARwGEwWDHQGBeAgFnDU8iiBwfDOCdgE?=
 =?us-ascii?q?BBYcZCBJ5izMXgUA/gRGCZC6DHgKBOgsRgxOCV4lEgXSFFI95VgmCKIMVgVCKT?=
 =?us-ascii?q?RiRUplVMIE8VoEhMxoIGxVsBoI1CYISg22EWYYHMjMBgQQBAYsigk0BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,365,1539673200"; 
   d="scan'208";a="45267548"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 17 Dec 2018 04:45:27 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727293AbeLQMpY (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 17 Dec 2018 07:45:24 -0500
Received: from mail-qk1-f193.google.com ([209.85.222.193]:43500 "EHLO
        mail-qk1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726803AbeLQMpX (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 17 Dec 2018 07:45:23 -0500
Received: by mail-qk1-f193.google.com with SMTP id r71so7190947qkr.10
        for <linux-kernel@vger.kernel.org>; Mon, 17 Dec 2018 04:45:22 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=XoKAFNlqBXAcoto9ZYoUMnQ6qZtFfdac/CIbHk9LtGc=;
        b=OyxJaBILsRYvsAET2O9hFIuL4bTf68LCw295ffokq0uw7z70RRkjQgOZ1dqSjn2Lm6
         KecaHxu3VwHYEvkTLjMuf3Ih8rbpZdIQax+rRQGdxYRwdsCaIghNKEpLJwCDTYmrodJb
         KijVvOjFrOQHfOrAzoef8kmxOwa2rzvB6GXdDtZnKFwb1rIaEpiqt7MlPcEqQQR1+L2A
         iFeWA/XbPjZKWEBUx4QuiAp6PJH4tfif5g7J2FBMbPHNjMmVSq9xkZPunQs8e6apc/F3
         NvE3Orn+SAKvlvlKJ0lxE+dShaAhuxa+KRSWOS6Xzbc8ePiQJQHpJqpZ2jxylcy5sSJ6
         9Eng==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=XoKAFNlqBXAcoto9ZYoUMnQ6qZtFfdac/CIbHk9LtGc=;
        b=GYIV1xZiQbJOBGD8WMRwqCLT4/UEs5ndIGEJVGscvnrLB9IYa9wr0ZBMlG4SKEh7hc
         tW2wBSuAtPcU5MKk6BBAhw0KlSH5wBXSwG9LIbR3KpBnwzq1KxffsmZCHdDpWMTRyBT8
         gyi7c2HZcUh9ZxUPmEIrqUhi6NeGFuQ9L+WngxzabvsZAFoo4UTlsqgtBQWz66BZHIIO
         6zhCDl/td460/+cGAUwY6ODq4GW4ZuOtjvE3Qp1VVneZh+veyCUgNwlwV5bDqHzF4whG
         jR8tx9kTFarUUz17PolbH9HFpgwpXGlrqX3Ez489HZnfZalPwuED36qRMH7N3KuLtXoP
         Cx4Q==
X-Gm-Message-State: AA+aEWZjxXs2fNKInbAAL1h1+M00uHV1hXI1bHYNfBWdFlqOcIg7u8Yx
        7syg21sLh5YrzrNUkwhgX9RzSL2WQrFBpaqSAUyy9w==
X-Google-Smtp-Source: AFSGD/VQpZ8QsXvIt9hJa4ezEwgc/POf5VDpF3l63k+/o0TjJIqaZ1hd1vU9687+qF/kzTcFF7tn1uhoZNZKDi2OF08=
X-Received: by 2002:a37:6005:: with SMTP id u5mr11322956qkb.219.1545050721363;
 Mon, 17 Dec 2018 04:45:21 -0800 (PST)
MIME-Version: 1.0
References: <20181217024805.122897-1-kyletso@google.com> <HE1PR1001MB1002719044E56D116949E2AE80BC0@HE1PR1001MB1002.EURPRD10.PROD.OUTLOOK.COM>
In-Reply-To: <HE1PR1001MB1002719044E56D116949E2AE80BC0@HE1PR1001MB1002.EURPRD10.PROD.OUTLOOK.COM>
From: Kyle Tso <kyletso@google.com>
Date: Mon, 17 Dec 2018 20:45:10 +0800
Message-ID: <CAGZ6i=1jC0e1gkh6nmDS2y4SE3op0pZ+RPAgExfmfnBJkcFWCw@mail.gmail.com>
Subject: Re: [PATCH] usb: typec: tcpm: Extend the matching rules on PPS APDO selection
To: Adam Thomson <Adam.Thomson.Opensource@diasemi.com>
Cc: "linux@roeck-us.net" <linux@roeck-us.net>,
        "heikki.krogerus@linux.intel.com" <heikki.krogerus@linux.intel.com>,
        "gregkh@linuxfoundation.org" <gregkh@linuxfoundation.org>,
        "badhri@google.com" <badhri@google.com>,
        "linux-usb@vger.kernel.org" <linux-usb@vger.kernel.org>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, Dec 17, 2018 at 8:23 PM Adam Thomson
<Adam.Thomson.Opensource@diasemi.com> wrote:
>
> On 17 December 2018 02:48, Kyle Tso wrote:
>
> > Current matching rules ensure that the voltage range of selected Source
> > Capability is entirely within the range defined in one of the Sink Capabilities. This
> > is reasonable but not practical because Sink may not support wide range of
> > voltage when sinking power while Source could advertise its capabilities in
> > raletively wider range. For example, a Source PDO advertising 3.3V-11V@3A (9V
>
> relatively
>

noted!
Thanks for the correction. I will fix this in the next patch.

> > Prog of Fixed Nominal Voltage) will not be selected if the Sink requires 5V-
> > 12V@3A PPS power. However, the Sink could work well if the requested voltage
> > range in RDOs is 5V-11V@3A.
> >
> > Currently accepted:
> >               |--------- source -----|
> >       |----------- sink ---------------|
> >
> > Currently not accepted:
> >                       |--------- source -----|
> >       |----------- sink ---------------|
> >
> >       |--------- source -----|
> >               |----------- sink ---------------|
> >
> >       |--------- source -----------------|
> >               |------ sink -------|
> >
> > To improve the usability, change the matching rules to what listed
> > below:
> > a. The Source PDO is selectable if any portion of the voltage range
> >    overlaps one of the Sink PDO's voltage range.
> > b. The maximum operational voltage will be the lower one between the
> >    selected Source PDO and the matching Sink PDO.
> > c. The maximum power will be the maximum operational voltage times the
> >    maximum current defined in the selected Source PDO d. Select the Source PDO
> > with the highest maximum power
> >
> > Signed-off-by: Kyle Tso <kyletso@google.com>
> >
> > ---
> > Changelog since v1:
> > - updated the commit message as suggested by Guenter Roeck <linux@roeck-
> > us.net>
> > ---
> >  drivers/usb/typec/tcpm/tcpm.c | 29 +++++++++++++++++------------
> >  1 file changed, 17 insertions(+), 12 deletions(-)
> >
> > diff --git a/drivers/usb/typec/tcpm/tcpm.c b/drivers/usb/typec/tcpm/tcpm.c
> > index 3620efee2688..3001df7bd602 100644
> > --- a/drivers/usb/typec/tcpm/tcpm.c
> > +++ b/drivers/usb/typec/tcpm/tcpm.c
> > @@ -2213,7 +2213,8 @@ static unsigned int tcpm_pd_select_pps_apdo(struct
> > tcpm_port *port)
> >       unsigned int i, j, max_mw = 0, max_mv = 0;
> >       unsigned int min_src_mv, max_src_mv, src_ma, src_mw;
> >       unsigned int min_snk_mv, max_snk_mv;
> > -     u32 pdo;
> > +     unsigned int max_op_mv;
> > +     u32 pdo, src, snk;
> >       unsigned int src_pdo = 0, snk_pdo = 0;
> >
> >       /*
> > @@ -2263,16 +2264,18 @@ static unsigned int tcpm_pd_select_pps_apdo(struct
> > tcpm_port *port)
> >                                       continue;
> >                               }
> >
> > -                             if (max_src_mv <= max_snk_mv &&
> > -                                 min_src_mv >= min_snk_mv) {
> > +                             if (min_src_mv <= max_snk_mv &&
> > +                                 max_src_mv >= min_snk_mv) {
> > +                                     max_op_mv = min(max_src_mv,
> > max_snk_mv);
> > +                                     src_mw = (max_op_mv * src_ma) / 1000;
> >                                       /* Prefer higher voltages if available */
> >                                       if ((src_mw == max_mw &&
> > -                                          min_src_mv > max_mv) ||
> > +                                          max_op_mv > max_mv) ||
> >                                           src_mw > max_mw) {
>
> Sorry I didn't raise this before, but came to mind this morning when I was
> considering your updates again. What happens if the Source validly provides two
> PPS APDOs, for example:
>
>         3.3V - 11V, 3A (9V programmable)
>         3.3V - 16V, 3A (15V programmable)
>
> and the sink APDO is:
>
>         5V - 9V, 3A
>
> I think the code here will now select the higher range (15V programmable) as it
> gives a larger power output value, even if the sink can only support a voltage
> that's far smaller. I really don't think this is correct. *If* you are going to
> allow selection of PPS APDOs that provide a larger voltage range than the Sink
> can actually cope with, then I think you should at least select the lower of
> those advertised which fulfils the needs of the Sink.

Source:
3.3V - 11V, 3A (9V programmable)
3.3V - 16V, 3A (15V programmable)

Sink
5V - 9V, 3A

In this case, the Sink will select "3.3V - 11V, 3A (9V programmable)"
because the
"max_op_mv" when dealing with both Source Cap will be the same.

See line#2269, "max_op_mv" will be limited by "max_snk_mv" which is 9V.
And in line#2273, "max_op_mv" (of the second src_cap) fails the check
because "max_mv", which is equal to the "max_op_mv" of the previous src_cap,
is the same as it.

2267                             if (min_src_mv <= max_snk_mv &&
2268                                 max_src_mv >= min_snk_mv) {
2269                                     max_op_mv = min(max_src_mv,
max_snk_mv);
2270                                     src_mw = (max_op_mv * src_ma) / 1000;
2271                                     /* Prefer higher voltages if
available */
2272                                     if ((src_mw == max_mw &&
2273                                          max_op_mv > max_mv) ||
2274                                         src_mw > max_mw) {
2275                                             src_pdo = i;
2276                                             snk_pdo = j;
2277                                             max_mw = src_mw;
2278                                             max_mv = max_op_mv;
2279                                     }
2280                             }

>
> >                                               src_pdo = i;
> >                                               snk_pdo = j;
> >                                               max_mw = src_mw;
> > -                                             max_mv = max_src_mv;
> > +                                             max_mv = max_op_mv;
> >                                       }
> >                               }
> >                       }
> > @@ -2285,14 +2288,16 @@ static unsigned int tcpm_pd_select_pps_apdo(struct
> > tcpm_port *port)
> >       }
> >
> >       if (src_pdo) {
> > -             pdo = port->source_caps[src_pdo];
> > -
> > -             port->pps_data.min_volt = pdo_pps_apdo_min_voltage(pdo);
> > -             port->pps_data.max_volt = pdo_pps_apdo_max_voltage(pdo);
> > -             port->pps_data.max_curr =
> > -                     min_pps_apdo_current(pdo, port->snk_pdo[snk_pdo]);
> > +             src = port->source_caps[src_pdo];
> > +             snk = port->snk_pdo[snk_pdo];
> > +
> > +             port->pps_data.min_volt =
> > max(pdo_pps_apdo_min_voltage(src),
> > +                                           pdo_pps_apdo_min_voltage(snk));
> > +             port->pps_data.max_volt =
> > min(pdo_pps_apdo_max_voltage(src),
> > +                                           pdo_pps_apdo_max_voltage(snk));
> > +             port->pps_data.max_curr = min_pps_apdo_current(src, snk);
> >               port->pps_data.out_volt =
> > -                     min(pdo_pps_apdo_max_voltage(pdo), port-
> > >pps_data.out_volt);
> > +                     min(port->pps_data.max_volt, port-
> > >pps_data.out_volt);
> >               port->pps_data.op_curr =
> >                       min(port->pps_data.max_curr, port->pps_data.op_curr);
> >       }
> > --
> > 2.20.0.405.gbc1bbc6f85-goog
>
