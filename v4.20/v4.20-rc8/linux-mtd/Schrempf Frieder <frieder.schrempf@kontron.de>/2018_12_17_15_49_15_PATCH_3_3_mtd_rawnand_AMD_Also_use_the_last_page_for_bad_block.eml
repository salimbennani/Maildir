Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 08:46:05 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id DDB505805FC;
	Mon, 17 Dec 2018 07:49:23 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 17 Dec 2018 07:49:23 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AU9XcvRdrJ9UMt3+hAFVcz0gtlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc69ZhSN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRBDI2i?=
 =?us-ascii?q?coUPE+QPM+VWr4b/plsBsRSwCga3BOP3yDJFnWP2068g3ug9DQ3KwBEsEtQTu3?=
 =?us-ascii?q?rUttX1M6ISXPiowqbUzTXDde1Z2TLl6IjGbxsvoeuMXbNufsXM10YvDR7Og1Ke?=
 =?us-ascii?q?qYz/PjOayPkCvHaB7+Z6TuKgl24nqxtvrTiq3scshJLEhoESylDC6SV52oE1Jd?=
 =?us-ascii?q?uiREFmf9GpCZ1dvDyZOYtuWs4uXX1ktSIgxrEbt5O3YjIGxIkkyhLDcfCKcoqF?=
 =?us-ascii?q?7gr+WOuTPzt0nmxpdbKlixu260StxfPwWtG60FlUrSdJjtzBu3UT2BHT6sWLV/?=
 =?us-ascii?q?5w80Sj1DuPywze7+NJLlsvmqXBLpMszLA9moYTvEnFAyT4gl/5jLWMeUUh4uWo?=
 =?us-ascii?q?6/roYrHhppKEKY90hR/xMr40lsy8H+s4KA4OUHaf+eim073j50L5TK1Ljv0wjK?=
 =?us-ascii?q?bZrIjXKdoHqqO9GQNZz4gu5wilAzu709kUgWMLIVNHdR6fiojmIVDOIPT2Dfel?=
 =?us-ascii?q?hFSslS9mx/THPr3nH5XMIWHPkLT/crZn7U5T1g4zwclY55NaDLEOPujzV1TvtN?=
 =?us-ascii?q?zXEBA5KRa4w+X5B9Vn0IMRR2aPDrWeMKPIvl+E/vgvLPWUZI8JpDb9LOAo5/rv?=
 =?us-ascii?q?jX86h1ARZ6ao3YYMZXC8H/RmJViZYHX2jtcAF2cKohQxTOjwhFKeVj5TYm64X7?=
 =?us-ascii?q?gg6TEjFIKmEYDDS5itgLOb3Se7AodZZmdcBlCMDHfnbYOEW/gXZSKWI89hlCEE?=
 =?us-ascii?q?VLe7R48g0xGuqBH1y759IuXI/S0YsIrp1MJp6O3LiREy6Tt0Atyf02GKUW54hG?=
 =?us-ascii?q?AIRzgw3KB5pkxw0VOD0al+g/xFGt1f/fJJUgEmNZHCy+x2Ecz9WgXEft2RUlap?=
 =?us-ascii?q?Xs2mAS0tTtI229IBeV19G9WljhDAxSaqGaUal76QCZww86Lc2WXxJslnx3bH0q?=
 =?us-ascii?q?khk0cpQs9VOWK6ga5/8hDZB5TVnEWBi6aqaaMc0TbO9GiZy2qCpkVYUA9qXqXD?=
 =?us-ascii?q?UnASfU/WrdX/5kPfQL6iE7UnMg1dycGcLqtGcMHmjVJDRP37ItTRf3qxm3usBR?=
 =?us-ascii?q?aP3r6DcZDle3sD0ynHCEgLiQYT/W2YOgg4ASuhp2HeDDlqFV/0Z0Ps8O9+qG60?=
 =?us-ascii?q?T0MuzgGKaVFh2KSx+hIPmfOcTPYT1KoeuCg9szV0AEq939XOBtWdvQVhYrtTbc?=
 =?us-ascii?q?k94Fhd02LZrBJyPpq7IqBmh14edRl3vkz02xV2DIVAjdYlrHcwwAVuLqKY1UtL?=
 =?us-ascii?q?dymE0pDoJr3XNm7y8Qiza67X31He18qW+qcP6fgit1XvpgapFlAm83Vm1dlV3G?=
 =?us-ascii?q?CR5pHLDAoUTJLwXVw79xl8p7HGfCY945nY2mFrMamxqjXCwc4mBPM5yha8eNdS?=
 =?us-ascii?q?KLmLFAvsHMwVGcevKPYmlEO0bh0ZJu9S8q00P8S4d/ad3K6rPeBgnC+pjGhd4Y?=
 =?us-ascii?q?B91F6M+DR4SuLSw5kFxPSY1BOdVzjglFehrtz3mYdcaDASA2qz0zTrCJRQZ61y?=
 =?us-ascii?q?Z4kLD2iuLtazxtV/gZ7tRnFZ+ESiB1MAxM+mZx6SY0bh0g1X0EQduWanljegzz?=
 =?us-ascii?q?xojzEpqbKS3DbPw+v+bhUHIHNERG54gVfqP4e0ldEaUFG0YAczkBuq+Fj1x7Jc?=
 =?us-ascii?q?pKR5NGTTRUZIfy7rL2BtSKewt7yCY9JR55MsqylYTOO8YVWCQL7nvxQayz/jH3?=
 =?us-ascii?q?dZxD0jdzCqu4/1nhxghGKGMXZzqmHUecVxxRfZ+dzdSuRd3jsARClklzbXAkKw?=
 =?us-ascii?q?MMWu/dWRj53DqPyxV3q9Vp1Pdinm1YGAuzGh5W1pAh2/mOq/msb9Hgg50i/71t?=
 =?us-ascii?q?9qWjvOrBvnZonr1qK6Mf9of0VyBV/87dZ6FZ96kocqmJ4Q3n0ajI2P/XUbiWfz?=
 =?us-ascii?q?Lclb2aXmYXsNXzELxMTZ4Ark2E1lNX+Jw4P5VnOAwspufdW6Y2UW2j4j4MBOEq?=
 =?us-ascii?q?ub8LtEnS5tqFqisQ3ReeR9nisayfY2634VmeAJtBAtziWAGL8SG0ZYMDfolxSJ?=
 =?us-ascii?q?6dC+sapWaHyucbi2yEpxg9ShAKuerQFbXXbzYo0iEjNo7sVjLFLM12X+6oTleN?=
 =?us-ascii?q?nTd90frBOVnAnbj+hJNp0xjOEFijR9OWLypnAlz+87jRpz3ZC1poSHKmNt/L6n?=
 =?us-ascii?q?DR5cLDH6e8QT+jT1h6ZEgsmWx5yvHolmGjgTQJvoSveoHCgTtPv9MQaODSY8qm?=
 =?us-ascii?q?yaGbfEGQ+f6UFmr2/AEpyxNnGXImUZwstmRBWHOENfhwUUVi0gnpElDgCq2NDh?=
 =?us-ascii?q?cEBh6z8K/FH4rR9Myv9yOxn7T2fSvwOoajYySJiCIxta9ABC50HJMcOA6uJ/BT?=
 =?us-ascii?q?1X/pqkrAaVMGyUexxIDX0VWkyDH13jPKOh5dze/OiDHOa+M+HCYbaTqexdSveI?=
 =?us-ascii?q?w4ig0pB98jaIN8WPOGRiDvIh1kpCW3B5B9rWmzEVRyMLkCLNataRpA2g9S1vss?=
 =?us-ascii?q?C/7PPrVRrv5IuIFrtSKMhv9AqwgauZLO6QgyB5KTlD25MIxH/IzqUf3VEIhyFv?=
 =?us-ascii?q?cTmtDaoPtSrXQK3Mna9XCgYRazlvO8tQ86I8wg5NNNbbitzr1754jf01C1ZfWV?=
 =?us-ascii?q?zigMGpYsMKLH+nNFPaH0aGL7CGJTzNw8HqbqKwU7xQjONItxKuvTaXCVPsPjOG?=
 =?us-ascii?q?lzPxTRCgLflMjD2HPBxZoIyyaAttBnP5TN34ahy3Ktt3jTwtzL0wh3PKM3McMD?=
 =?us-ascii?q?dmf0NMqL2Q8T1XgvFlF2Nd6XplKPGOmzyF4OnANpYWrfxrDzxol+Jb5XQ20ada?=
 =?us-ascii?q?4DtYS/x1hiTSqMVjo1WnkumJ1zpmXwBCqjdNhIKXo0piPb/V+YVHWXbB5BgN93?=
 =?us-ascii?q?mfCwwWp9t5Dd3io6BRxcLJlKL2KTdC9crb/MocB8fOLsKHP2EsMR7oGD7SEQsE?=
 =?us-ascii?q?QiSnNWDZh0xBjv6S8meZoYQ9qpjpy9IyTeoRXlsvF+hcAF5oDt0GJJBxdjkjlq?=
 =?us-ascii?q?KfjchO7n275lGFTsJAv4uBXOifE/TrLDGfpbNDYAcMwLW+JoMWYMmzkUljc0R3?=
 =?us-ascii?q?mMLQElvWVNRlqCpmcgs1pgNG9300Bjk22lv4Zwfr+nYCE/ewthQxjRd6YOJr/z?=
 =?us-ascii?q?DptRN/bEDLrys5ikUZn9LpxzmNOnalNqa7XYhMBwLysER3O4+tB04/aQy0gFwh?=
 =?us-ascii?q?NzreQb9Vp6VveHotiwLGv5ZLX/lGQucMNBsRw+yHIvYly1JRrg25ykJdo+jIE5?=
 =?us-ascii?q?1vkE0ta5H6/Fxa3Ac2V9U1P6HVPKQB4EJRi66DpGf82PowzQMTPQAW+2OIdSsQ?=
 =?us-ascii?q?tmQLMb86PS2uuOBhv1/R0wBfcXQBAqJ56slh8VkwbqHZl3rt?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AUAAB4xBdch0O0hNFjHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGBMII7JwqMC4t2gg0Ul0SBcBYBGBMBh1YiNAkNAQMBAQEBAQECARMBAQE?=
 =?us-ascii?q?KCwkIKS+CNiQBgmIDAwECJAxGBgkBAQEBHTEDLyUCBAENBQWDHYIBAQMBqHMzi?=
 =?us-ascii?q?h+MPoIWg3WEeIYWAos2hF2RBgcCgRaQRhZfkHOJPJABAgQCBAUCFIFGgg4zGiS?=
 =?us-ascii?q?DO4InF44dQAExgQUBAYsigS6BHwEB?=
X-IPAS-Result: =?us-ascii?q?A0AUAAB4xBdch0O0hNFjHQEBBQEHBQGBUQgBCwGBMII7Jwq?=
 =?us-ascii?q?MC4t2gg0Ul0SBcBYBGBMBh1YiNAkNAQMBAQEBAQECARMBAQEKCwkIKS+CNiQBg?=
 =?us-ascii?q?mIDAwECJAxGBgkBAQEBHTEDLyUCBAENBQWDHYIBAQMBqHMzih+MPoIWg3WEeIY?=
 =?us-ascii?q?WAos2hF2RBgcCgRaQRhZfkHOJPJABAgQCBAUCFIFGgg4zGiSDO4InF44dQAExg?=
 =?us-ascii?q?QUBAYsigS6BHwEB?=
X-IronPort-AV: E=Sophos;i="5.56,365,1539673200"; 
   d="scan'208";a="142435541"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 17 Dec 2018 07:49:22 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2387935AbeLQPtT convert rfc822-to-8bit (ORCPT
        <rfc822;like.xu@linux.intel.com> + 23 others);
        Mon, 17 Dec 2018 10:49:19 -0500
Received: from skedge04.snt-world.com ([91.208.41.69]:43348 "EHLO
        skedge04.snt-world.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2387748AbeLQPtR (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 17 Dec 2018 10:49:17 -0500
Received: from sntmail10s.snt-is.com (unknown [10.203.32.183])
        (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
        (No client certificate requested)
        by skedge04.snt-world.com (Postfix) with ESMTPS id CDE5667A7C6;
        Mon, 17 Dec 2018 16:49:15 +0100 (CET)
Received: from sntmail12r.snt-is.com (10.203.32.182) by sntmail10s.snt-is.com
 (10.203.32.183) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.1466.3; Mon, 17 Dec
 2018 16:49:15 +0100
Received: from sntmail12r.snt-is.com ([fe80::e551:8750:7bba:3305]) by
 sntmail12r.snt-is.com ([fe80::e551:8750:7bba:3305%5]) with mapi id
 15.01.1466.003; Mon, 17 Dec 2018 16:49:15 +0100
From: Schrempf Frieder <frieder.schrempf@kontron.de>
To: "boris.brezillon@bootlin.com" <boris.brezillon@bootlin.com>,
        "miquel.raynal@bootlin.com" <miquel.raynal@bootlin.com>,
        "richard@nod.at" <richard@nod.at>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>
CC: "linux-mtd@lists.infradead.org" <linux-mtd@lists.infradead.org>,
        "Schrempf Frieder" <frieder.schrempf@kontron.de>,
        David Woodhouse <dwmw2@infradead.org>,
        Brian Norris <computersforpeace@gmail.com>,
        Marek Vasut <marek.vasut@gmail.com>
Subject: [PATCH 3/3] mtd: rawnand: AMD: Also use the last page for bad block
 markers
Thread-Topic: [PATCH 3/3] mtd: rawnand: AMD: Also use the last page for bad
 block markers
Thread-Index: AQHUliAQeUwRMKaL702zrNgBVREB4g==
Date: Mon, 17 Dec 2018 15:49:15 +0000
Message-ID: <1545061693-29216-4-git-send-email-frieder.schrempf@kontron.de>
References: <1545061693-29216-1-git-send-email-frieder.schrempf@kontron.de>
In-Reply-To: <1545061693-29216-1-git-send-email-frieder.schrempf@kontron.de>
Accept-Language: de-DE, en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-originating-ip: [172.25.9.42]
x-c2processedorg: 51b406b7-48a2-4d03-b652-521f56ac89f3
Content-Type: text/plain; charset="iso-8859-1"
Content-Transfer-Encoding: 8BIT
MIME-Version: 1.0
X-SnT-MailScanner-Information: Please contact the ISP for more information
X-SnT-MailScanner-ID: CDE5667A7C6.A01C8
X-SnT-MailScanner: Found to be clean
X-SnT-MailScanner-SpamCheck: 
X-SnT-MailScanner-From: frieder.schrempf@kontron.de
X-SnT-MailScanner-To: boris.brezillon@bootlin.com,
        computersforpeace@gmail.com, dwmw2@infradead.org,
        linux-kernel@vger.kernel.org, linux-mtd@lists.infradead.org,
        marek.vasut@gmail.com, miquel.raynal@bootlin.com, richard@nod.at
X-Spam-Status: No
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Frieder Schrempf <frieder.schrempf@kontron.de>

According to the datasheet of some Cypress SLC NANDs, the bad
block markers can be in the first, second or last page of a block.
So let's check all three locations.

Signed-off-by: Frieder Schrempf <frieder.schrempf@kontron.de>
---
 drivers/mtd/nand/raw/nand_amd.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/drivers/mtd/nand/raw/nand_amd.c b/drivers/mtd/nand/raw/nand_amd.c
index 890c5b4..aad5f14 100644
--- a/drivers/mtd/nand/raw/nand_amd.c
+++ b/drivers/mtd/nand/raw/nand_amd.c
@@ -40,7 +40,13 @@ static void amd_nand_decode_id(struct nand_chip *chip)
 static int amd_nand_init(struct nand_chip *chip)
 {
 	if (nand_is_slc(chip))
-		chip->bbt_options |= NAND_BBT_SCAN2NDPAGE;
+		/*
+		 * According to the datasheet of some Cypress SLC NANDs,
+		 * the bad block markers can be in the first, second or last
+		 * page of a block. So let's check all three locations.
+		 */
+		chip->bbt_options |= NAND_BBT_SCAN2NDPAGE |
+				     NAND_BBT_SCANLASTPAGE;
 
 	return 0;
 }
-- 
2.7.4
