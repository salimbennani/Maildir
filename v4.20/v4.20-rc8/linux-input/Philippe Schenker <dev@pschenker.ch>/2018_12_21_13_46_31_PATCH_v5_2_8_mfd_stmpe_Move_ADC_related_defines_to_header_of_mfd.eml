Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:50:37 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E3208580522;
	Fri, 21 Dec 2018 05:47:44 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 21 Dec 2018 05:47:44 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AEwoqth+hvlROWv9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?0O0RIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDwULs6Wymt771zRRHoli?=
 =?us-ascii?q?kJKjA3/mLQhMNygqJUrx2vpwdnw4PWe4yZKPlzc7nBcd4AWWZNQsBcXDFBDIOm?=
 =?us-ascii?q?aIsPCvIMM/xYr4n8o1sOrAO+BRGyC+jy1zFHmn/20rM80+QiDw7GxhErEtUTv3?=
 =?us-ascii?q?vKstX4L78SUfupw6nI0zrDafBW1inn6ITSbh8hoeiBULRtesTS0UkiDx3JgkmU?=
 =?us-ascii?q?pID/Ij+Y2PoBv3KG4+djSe6jkW8qpgNprjWgx8ogkJTFi40Jxlze9yh13pw5KN?=
 =?us-ascii?q?6mREN9fNWqCoFftzuAOItzWs4iQ39nuCI9yrAep567czYFyI49yx7cdfOHaY6I?=
 =?us-ascii?q?7QznVOqLJjd4nn1ldKq+hxa070eg1vXxWteo3FtOtCZJj9fBum4X2xDO6cWLVu?=
 =?us-ascii?q?Fx80aj1DqX0gDc8OBEIUQ6larBLJ4hx6Y9lp4SsUTFAy/3l1z6jKyIeUU+/Oin?=
 =?us-ascii?q?9eDnbqzhpp6SMY97lBv+P78wmsywH+s4KBICX2uF9uSm0r3s40n5TK9Njv0sna?=
 =?us-ascii?q?nVqIraKtgDpq6lHw9V1Z4u6xK+DzelztsUh3YGLE9edRKDjojpPUzOIf/iAfe+?=
 =?us-ascii?q?hVSsjClkx/TcMrL9BZXNK2DJkK39crZl905c1A0zwMhf551OC7EBPOj8WkjruN?=
 =?us-ascii?q?zYEx82KQq0w+n8BdV514MeX3+PA6CDPKPTt1+I+vwgI+2WaIAJvzb9LuAv5+Ty?=
 =?us-ascii?q?gn8hhV8dYa6p0IMNZ3CjHvRmJEaZbWD2gtgbE2cHpQ4+TO3siF2fXj9ffXeyX6?=
 =?us-ascii?q?Qg5j4lDIKqF5vMRoeogLaZxie0AoVWZnxaClCLCXrodJ+LW/EWZCKWI89uiDoE?=
 =?us-ascii?q?Vbe6Ro8l1BGushL6yrV9IurV/C0YqYzs1Nxv6+LPkhEy8CR+D96B3GGVU2F0gm?=
 =?us-ascii?q?QISicr069lv0xy1E2P0ahijPxeDtxc+fVJXgA+NZ7fyux6D8v/WgbAftePVVan?=
 =?us-ascii?q?Tc+qATA3TtIt3dAOZ1xxFMmljhDGxyCqGaMal6SXBJwo9aLRx2X+KNxjy3nYzq?=
 =?us-ascii?q?Uhj0MpQs1UNWK4gK5y7AzTB4/Pk0WEmKemb6Uc3CjR9GidyWqCpl1XUAl1Ua/d?=
 =?us-ascii?q?R3AQelPWrcjl5kPFV7KuFbUnMg5Gyc6eKqtLasfljUlcSPfkItTeZ2Oxm2G/BR?=
 =?us-ascii?q?uTwrOMbYzqe3gS3SnHCUgElRwT8miCNQQkGiihpGfeBiR0FV3ze0Ps7fV+qHSj?=
 =?us-ascii?q?Q0AuywGFcUJg2KS1+xIPnvOcVu4c0agCuCcirDV0Ak2w39bXC9qGugpgc79QYd?=
 =?us-ascii?q?I74Fdby23ZsxZxMYCnL6BnnlQeaRh4v1vy1xVrDYVNicgrrG4wwAVuM66Z0VNB?=
 =?us-ascii?q?eCme3ZD/IbDXLmjy/Baya6/ZwF3e0dCW+rsR5/Q8sVnsoAapFk86+XV9z9ZVy2?=
 =?us-ascii?q?ec5onNDAcKS5LxU1o4+AJgp77HZSkx/YXU2mN2Mam1qzPNx8gmBO84xRm+Zddf?=
 =?us-ascii?q?N6WEGRT2E80bAciuNeMrl0KobhICIOBd6qo0M9m6ePuB3a6hJPxgky6+jWRb/I?=
 =?us-ascii?q?B91VqB9ip9SuLS35cJ2eqY3haBVzrniFehs8b3mZ1LZD0IH2q/zzTkC5BVZqFo?=
 =?us-ascii?q?YYkLDmKuKdWtxtpin57tR2JY9Fm7ClMEwsCpYxmSb1/63QFKzkQYu3+nmSi5zz?=
 =?us-ascii?q?xyjT4pqLGS3CjPw+TkaRoGNXRHRGhkjVfwP4e0i8oWU1SvbwgsjBGl/1r1x7BH?=
 =?us-ascii?q?pKRjKGneWUdJcDLxL214UKuwt7yCbtVL6JMptyVXTeu9bUqbSr77vxsVzSfjE3?=
 =?us-ascii?q?FCyzA8cjGgoo/5kABiiGKBMHZzq2LUecJqyhfe/tDcReNR0SAARCl3kjTXAlm8?=
 =?us-ascii?q?P9+0/dSbjZvDs+a+V36/WZ1XayXk0YSAtC6j721wHRK/h+yzmsHgEQUi1C/71t?=
 =?us-ascii?q?pqWj/SoBfyfIbrzLi6Pvx9fkZzGlD88cV6F5p6kosxgpEQxHcbio+U/XoBjWf8?=
 =?us-ascii?q?L9Fb1bjiY3oKQD4B28TV7xT92E1/MnKJwJr0VmmawstkfdW7Y3kZ2iQg78BRE6?=
 =?us-ascii?q?eU7adJnS90olq+sALQbuJxnjYbyfsy9nEah/sFtxYqziWYGroSB1VXPTTwlxSU?=
 =?us-ascii?q?6NCztL5Ya3yocbi0yUpyh9ShDKyZrwFYWXb5fIoiHCBq4sV+NlLMzGP86oX+dN?=
 =?us-ascii?q?bMatITswWekw3cgOhNNJIxiv0KiDJlOW3nuH0q1fU7gQZy3Z2gv4iHNmZt/L+/?=
 =?us-ascii?q?AhFCLT34fMcT+jDrjaZDkceaxYGvHpN9GjoVWJvkV+6nEDUXtf7/LQaBDCU8qm?=
 =?us-ascii?q?uHGbrYBQKe6EBmr2/WE5C2LX6XImMVzc5lRBmbK0xSmwQUXDQ8np4kGQGm3s3h?=
 =?us-ascii?q?cEFl5j8P4l70sAdDyuVtNxPnSGfQuB+oaisoSJiYNBdW7h9N50bWMcyd7+J/BS?=
 =?us-ascii?q?JY/oemrAyCNGObfRlIDXoSV0yABlDjOKSu5Nba/+iZAOq+M+XBYbGUpeNCUPeI?=
 =?us-ascii?q?wIql0pF68DaUKsWPIn5iAuUh1UpeRn95AdrWmjUVRywTliLAdMqbpBa6+i1qoc?=
 =?us-ascii?q?Gz6vXrWATz5YSRD7teK8lg+xezga2bLe6fmD55KSpE1pML3XLI1Lkf3FsIhy5y?=
 =?us-ascii?q?bTWiDbQAujDLTK/Lnq9XDhgbaz58NcdS7qI82BVNNtDfit/vyrF4ifs1AU9fVV?=
 =?us-ascii?q?P9gsGpedAKI2alOVLHHkmLMrGGJTzNw87vYKK8SadfjONbtxCrvTabEknjPimM?=
 =?us-ascii?q?ljXzVhCvN/1Mgz+fPBBEpI69dRNtWiDfS4fkaxbha/d0gCcwzLlygWnFcSYZOC?=
 =?us-ascii?q?J3fkcLvLyL8iJcj+9XB2tb53ZoPa+PnCPdp/LEJ5gft9NiDSJ5jaRR4CcU0bxQ?=
 =?us-ascii?q?uRlERfh0gDPf5uVlo1ygkeSVgm5rXQRmsi1AhI+Nvkh4f67ZoMoTEU3Y9Q4AuD?=
 =?us-ascii?q?3DQy8BoMFoX4Xi?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AeAAAj7hxch0O0hNFjHgEGBwaBUQkLA?=
 =?us-ascii?q?YNrJ5gSgg0UiQKOSRSBXxUYEwGHMCI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpL4I?=
 =?us-ascii?q?6IoJvAwMBAiQLAUYGCQEBHzEDHjYHEgWDHYFqAxUEAaZ0M4gJDYIdh36EQRc+g?=
 =?us-ascii?q?UGDdYMFgXcBEgGFfgKJS5dHMwmBFoU9AodhgyckiguHVIlThhCKOYFGgR1xTTi?=
 =?us-ascii?q?DJ5BcPwExgQUBAYtRgj4BAQ?=
X-IPAS-Result: =?us-ascii?q?A0AeAAAj7hxch0O0hNFjHgEGBwaBUQkLAYNrJ5gSgg0UiQK?=
 =?us-ascii?q?OSRSBXxUYEwGHMCI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpL4I6IoJvAwMBAiQLA?=
 =?us-ascii?q?UYGCQEBHzEDHjYHEgWDHYFqAxUEAaZ0M4gJDYIdh36EQRc+gUGDdYMFgXcBEgG?=
 =?us-ascii?q?FfgKJS5dHMwmBFoU9AodhgyckiguHVIlThhCKOYFGgR1xTTiDJ5BcPwExgQUBA?=
 =?us-ascii?q?YtRgj4BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,381,1539673200"; 
   d="scan'208";a="57844699"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 21 Dec 2018 05:47:42 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2388846AbeLUNq5 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Fri, 21 Dec 2018 08:46:57 -0500
Received: from mxout017.mail.hostpoint.ch ([217.26.49.177]:60045 "EHLO
        mxout017.mail.hostpoint.ch" rhost-flags-OK-OK-OK-OK)
        by vger.kernel.org with ESMTP id S1731766AbeLUNq4 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 21 Dec 2018 08:46:56 -0500
Received: from [10.0.2.46] (helo=asmtp013.mail.hostpoint.ch)
        by mxout017.mail.hostpoint.ch with esmtp (Exim 4.91 (FreeBSD))
        (envelope-from <dev@pschenker.ch>)
        id 1gaL8c-0005b8-Ae; Fri, 21 Dec 2018 14:46:50 +0100
Received: from [46.140.72.82] (helo=philippe-pc.toradex.int)
        by asmtp013.mail.hostpoint.ch with esmtpsa (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
        (Exim 4.91 (FreeBSD))
        (envelope-from <dev@pschenker.ch>)
        id 1gaL8c-000BCi-5I; Fri, 21 Dec 2018 14:46:50 +0100
X-Authenticated-Sender-Id: dev@pschenker.ch
From: Philippe Schenker <dev@pschenker.ch>
To: jic23@kernel.org, marcel.ziswiler@toradex.com, stefan@agner.ch
Cc: robh@kernel.org, alexandre.torgue@st.com, shawnguo@kernel.org,
        dmitry.torokhov@gmail.com, thierry.reding@gmail.com,
        digetx@gmail.com, lee.jones@linaro.org, coquelin.stm32@gmail.com,
        Philippe Schenker <philippe.schenker@toradex.com>,
        linux-kernel@vger.kernel.org, linux-input@vger.kernel.org,
        Maxime Coquelin <mcoquelin.stm32@gmail.com>,
        linux-stm32@st-md-mailman.stormreply.com,
        linux-arm-kernel@lists.infradead.org
Subject: [PATCH v5 2/8] mfd: stmpe: Move ADC related defines to header of mfd
Date: Fri, 21 Dec 2018 14:46:31 +0100
Message-Id: <20181221134638.20600-3-dev@pschenker.ch>
X-Mailer: git-send-email 2.19.2
In-Reply-To: <20181221134638.20600-1-dev@pschenker.ch>
References: <20181221134638.20600-1-dev@pschenker.ch>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Philippe Schenker <philippe.schenker@toradex.com>

Move defines that are ADC related to the header of the overlying mfd,
so they can be used from multiple sub-devices.

Signed-off-by: Philippe Schenker <philippe.schenker@toradex.com>
Acked-by: Lee Jones <lee.jones@linaro.org>
Acked-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>

---

Changes in v5:
 - Changed author of commit to use correct email

Changes in v4:
 - Added Lee Jone's Ack
 - Added Dmitry Torokhov's Ack

Changes in v3: None
Changes in v2:
 - This is a new added commit. Separate commit for moving the defines
   out of drivers/input/touchscreen/stmpe-ts.c to overlying mfd-device
   drivers/mfd/stmpe.c
 - Pre-fix defines with STMPE_

 drivers/input/touchscreen/stmpe-ts.c | 34 +++++++++++-----------------
 include/linux/mfd/stmpe.h            | 11 +++++++++
 2 files changed, 24 insertions(+), 21 deletions(-)

diff --git a/drivers/input/touchscreen/stmpe-ts.c b/drivers/input/touchscreen/stmpe-ts.c
index 2a78e27b4495..c5d9006588a2 100644
--- a/drivers/input/touchscreen/stmpe-ts.c
+++ b/drivers/input/touchscreen/stmpe-ts.c
@@ -49,17 +49,6 @@
 
 #define STMPE_IRQ_TOUCH_DET		0
 
-#define SAMPLE_TIME(x)			((x & 0xf) << 4)
-#define MOD_12B(x)			((x & 0x1) << 3)
-#define REF_SEL(x)			((x & 0x1) << 1)
-#define ADC_FREQ(x)			(x & 0x3)
-#define AVE_CTRL(x)			((x & 0x3) << 6)
-#define DET_DELAY(x)			((x & 0x7) << 3)
-#define SETTLING(x)			(x & 0x7)
-#define FRACTION_Z(x)			(x & 0x7)
-#define I_DRIVE(x)			(x & 0x1)
-#define OP_MODE(x)			((x & 0x7) << 1)
-
 #define STMPE_TS_NAME			"stmpe-ts"
 #define XY_MASK				0xfff
 
@@ -213,9 +202,10 @@ static int stmpe_init_hw(struct stmpe_touch *ts)
 		return ret;
 	}
 
-	adc_ctrl1 = SAMPLE_TIME(ts->sample_time) | MOD_12B(ts->mod_12b) |
-		REF_SEL(ts->ref_sel);
-	adc_ctrl1_mask = SAMPLE_TIME(0xff) | MOD_12B(0xff) | REF_SEL(0xff);
+	adc_ctrl1 = STMPE_SAMPLE_TIME(ts->sample_time) |
+		    STMPE_MOD_12B(ts->mod_12b) | STMPE_REF_SEL(ts->ref_sel);
+	adc_ctrl1_mask = STMPE_SAMPLE_TIME(0xff) | STMPE_MOD_12B(0xff) |
+			 STMPE_REF_SEL(0xff);
 
 	ret = stmpe_set_bits(stmpe, STMPE_REG_ADC_CTRL1,
 			adc_ctrl1_mask, adc_ctrl1);
@@ -225,15 +215,17 @@ static int stmpe_init_hw(struct stmpe_touch *ts)
 	}
 
 	ret = stmpe_set_bits(stmpe, STMPE_REG_ADC_CTRL2,
-			ADC_FREQ(0xff), ADC_FREQ(ts->adc_freq));
+			STMPE_ADC_FREQ(0xff), STMPE_ADC_FREQ(ts->adc_freq));
 	if (ret) {
 		dev_err(dev, "Could not setup ADC\n");
 		return ret;
 	}
 
-	tsc_cfg = AVE_CTRL(ts->ave_ctrl) | DET_DELAY(ts->touch_det_delay) |
-			SETTLING(ts->settling);
-	tsc_cfg_mask = AVE_CTRL(0xff) | DET_DELAY(0xff) | SETTLING(0xff);
+	tsc_cfg = STMPE_AVE_CTRL(ts->ave_ctrl) |
+		  STMPE_DET_DELAY(ts->touch_det_delay) |
+		  STMPE_SETTLING(ts->settling);
+	tsc_cfg_mask = STMPE_AVE_CTRL(0xff) | STMPE_DET_DELAY(0xff) |
+		       STMPE_SETTLING(0xff);
 
 	ret = stmpe_set_bits(stmpe, STMPE_REG_TSC_CFG, tsc_cfg_mask, tsc_cfg);
 	if (ret) {
@@ -242,14 +234,14 @@ static int stmpe_init_hw(struct stmpe_touch *ts)
 	}
 
 	ret = stmpe_set_bits(stmpe, STMPE_REG_TSC_FRACTION_Z,
-			FRACTION_Z(0xff), FRACTION_Z(ts->fraction_z));
+			STMPE_FRACTION_Z(0xff), STMPE_FRACTION_Z(ts->fraction_z));
 	if (ret) {
 		dev_err(dev, "Could not config touch\n");
 		return ret;
 	}
 
 	ret = stmpe_set_bits(stmpe, STMPE_REG_TSC_I_DRIVE,
-			I_DRIVE(0xff), I_DRIVE(ts->i_drive));
+			STMPE_I_DRIVE(0xff), STMPE_I_DRIVE(ts->i_drive));
 	if (ret) {
 		dev_err(dev, "Could not config touch\n");
 		return ret;
@@ -263,7 +255,7 @@ static int stmpe_init_hw(struct stmpe_touch *ts)
 	}
 
 	ret = stmpe_set_bits(stmpe, STMPE_REG_TSC_CTRL,
-			OP_MODE(0xff), OP_MODE(OP_MOD_XYZ));
+			STMPE_OP_MODE(0xff), STMPE_OP_MODE(OP_MOD_XYZ));
 	if (ret) {
 		dev_err(dev, "Could not set mode\n");
 		return ret;
diff --git a/include/linux/mfd/stmpe.h b/include/linux/mfd/stmpe.h
index 4a827af17e59..c0353f6431f9 100644
--- a/include/linux/mfd/stmpe.h
+++ b/include/linux/mfd/stmpe.h
@@ -10,6 +10,17 @@
 
 #include <linux/mutex.h>
 
+#define STMPE_SAMPLE_TIME(x)	((x & 0xf) << 4)
+#define STMPE_MOD_12B(x)	((x & 0x1) << 3)
+#define STMPE_REF_SEL(x)	((x & 0x1) << 1)
+#define STMPE_ADC_FREQ(x)	(x & 0x3)
+#define STMPE_AVE_CTRL(x)	((x & 0x3) << 6)
+#define STMPE_DET_DELAY(x)	((x & 0x7) << 3)
+#define STMPE_SETTLING(x)	(x & 0x7)
+#define STMPE_FRACTION_Z(x)	(x & 0x7)
+#define STMPE_I_DRIVE(x)	(x & 0x1)
+#define STMPE_OP_MODE(x)	((x & 0x7) << 1)
+
 struct device;
 struct regulator;
 
-- 
2.19.2

