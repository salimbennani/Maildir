Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 18:09:03 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id A7DBA5805AD
	for <like.xu@linux.intel.com>; Tue, 18 Dec 2018 00:18:03 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 18 Dec 2018 00:18:03 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AlrCjNhzNmgQIZ5bXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0uoWL/ad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7S60/Vza/4KdxUBLmiD?=
 =?us-ascii?q?kJOTA6/m/QiMNwgr9VoAqjqhJ9zIPYfY+YOOZgcaPGZt4WWXZNU9xNWyFbHo+w?=
 =?us-ascii?q?c40CBPcBM+ZCqIn9okMDohi+BQa2AuPvxSJDiX333aYn1OkgEQDG0BYhHt4UsX?=
 =?us-ascii?q?XUrM/6NKEdUe2uyKnIzDPDb+5Z2Dvn6YjIdAwhru+IXb5qbcXRzkwvGhrDg16N?=
 =?us-ascii?q?qoLlJyuY2voRv2WY9eZsSP+jhm09pw1vrDWixt0ghpTLi44N11zJ8Tt1zJw1KN?=
 =?us-ascii?q?C4UkJ2YcCoHIFUuiyUMYZ9X9ksTHtyuCkgz70LoZ67czYOyJQg3xPfb/2Hc5OU?=
 =?us-ascii?q?4hL4TuqRLjF4hG9/dLK4nRay/lCsyuz6VsaqzFZHtjRJnsXPu3wXyhDf98uKRu?=
 =?us-ascii?q?Fj8kqv2TuDzR3f5+NcLUAxj6XbKpohwrAqlpoUtETOBjb2l1vzjK+Lb0kr5/an?=
 =?us-ascii?q?6/r5bbXiv5OTLIh0ihz4MqsyhMO/GuM0MgwPX2iY5+uwzrLi/VDhTbVOj/02lL?=
 =?us-ascii?q?TZsZ/AKcQaoK65HxFa0oI55xmjCDem1c8VnX8ALFJDdxKHiZXpN0vJIPDiAvez?=
 =?us-ascii?q?m06snytzx/DaIr3hBY3ALnzCkLfiY7lx8UFdyBcowNBb5pJUDKwBIf3pVk/wst?=
 =?us-ascii?q?zYEgE2Mwiuz+n7D9V909BWZGSUH6XMML/OqUTaoaUrIvKQf8kTvzDyLeVj4OTh?=
 =?us-ascii?q?ynowmFsYdK/u2oMLaXe+BbN/LkCEJHbhnNoFQloMpRc0GenjiVmeVmxKanOvGq?=
 =?us-ascii?q?4x+Dw/TZirFJrOXZyFhruH0yGmWJpMaTddF1qOHHz0IpiCQOoGcymII8VswQAD?=
 =?us-ascii?q?AL26V6c72B2uvRO8wL1iaqLM9zEVr9Tm3cl56unXvRUz8zVuCIKayW7JB3Bp2G?=
 =?us-ascii?q?hOVT8/2q9XpU1710fF0K5kjvgeHttWo7tEUg4wNpnH08RgBtzyUx6HddCMDB6n?=
 =?us-ascii?q?R9yjBDw9SforztMOalo7ENKn3T7Z2C//Mb8ckbPDNZ18prPdmWq3NcZ0zXnu0K?=
 =?us-ascii?q?gnkklgQ81TOGngjal6oVuAT7XVmlmUwv75PZ8X2zTAoT+O?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BRAAAIrBhchxHrdtBkHgEGBwaBUQkLA?=
 =?us-ascii?q?YEwglASjHSLGimBPwGXfoFzFRgUh14iNAkNAQMBAQEBAQECARMBAQEKCwkIGw4?=
 =?us-ascii?q?vgjYFAgMYCYJcAwMBAkMKKQMDAQIGAQFICAMBUwcSBYMdggEBBKkyijuHfoRBe?=
 =?us-ascii?q?oEcgREzAY0+ApBOkFMHAg2RUhhfkHUsiRWQLYFGgg5wgzyCJxcSjhg0MQEBgQW?=
 =?us-ascii?q?MAYF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0BRAAAIrBhchxHrdtBkHgEGBwaBUQkLAYEwglASjHSLGim?=
 =?us-ascii?q?BPwGXfoFzFRgUh14iNAkNAQMBAQEBAQECARMBAQEKCwkIGw4vgjYFAgMYCYJcA?=
 =?us-ascii?q?wMBAkMKKQMDAQIGAQFICAMBUwcSBYMdggEBBKkyijuHfoRBeoEcgREzAY0+ApB?=
 =?us-ascii?q?OkFMHAg2RUhhfkHUsiRWQLYFGgg5wgzyCJxcSjhg0MQEBgQWMAYF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,367,1539673200"; 
   d="scan'208";a="56322062"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 18 Dec 2018 00:18:02 -0800
Received: from localhost ([::1]:52451 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gZAZl-0001hB-7u
	for like.xu@linux.intel.com; Tue, 18 Dec 2018 03:18:01 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:53640)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <yi.z.zhang@linux.intel.com>) id 1gZAZ8-0001g1-9J
	for qemu-devel@nongnu.org; Tue, 18 Dec 2018 03:17:23 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <yi.z.zhang@linux.intel.com>) id 1gZAZ5-0001cQ-3C
	for qemu-devel@nongnu.org; Tue, 18 Dec 2018 03:17:22 -0500
Received: from mga11.intel.com ([192.55.52.93]:61479)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <yi.z.zhang@linux.intel.com>)
	id 1gZAZ4-0001bZ-Lp
	for qemu-devel@nongnu.org; Tue, 18 Dec 2018 03:17:18 -0500
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga008.fm.intel.com ([10.253.24.58])
	by fmsmga102.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
	18 Dec 2018 00:17:17 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,367,1539673200"; d="scan'208";a="110304085"
Received: from linux.intel.com ([10.54.29.200])
	by fmsmga008.fm.intel.com with ESMTP; 18 Dec 2018 00:17:17 -0800
Received: from dazhang1-ssd.sh.intel.com (unknown [10.239.48.128])
	by linux.intel.com (Postfix) with ESMTP id BB6DE5805FC;
	Tue, 18 Dec 2018 00:17:14 -0800 (PST)
From: Zhang Yi <yi.z.zhang@linux.intel.com>
To: mst@redhat.com, peter.maydell@linaro.org, yu.c.zhang@linux.intel.com,
	ehabkost@redhat.com, imammedo@redhat.com
Date: Tue, 18 Dec 2018 16:17:12 +0800
Message-Id: <2dda518be27a44e26dc8b45d6e2dc7f46c890926.1545120100.git.yi.z.zhang@linux.intel.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <cover.1545120100.git.yi.z.zhang@linux.intel.com>
References: <cover.1545120100.git.yi.z.zhang@linux.intel.com>
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 192.55.52.93
Subject: [Qemu-devel] [PATCH V7 3/6] util/mmap-alloc: support MAP_SYNC in
 qemu_ram_mmap()
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: xiaoguangrong.eric@gmail.com, crosthwaite.peter@gmail.com,
	richard.henderson@linaro.org, qemu-devel@nongnu.org,
	Zhang Yi <yi.z.zhang@linux.intel.com>, stefanha@redhat.com,
	pbonzini@redhat.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

When a file supporting DAX is used as vNVDIMM backend, mmap it with
MAP_SYNC flag in addition can guarantee the persistence of guest write
to the backend file without other QEMU actions (e.g., periodic fsync()
by QEMU).

A set of RAM_SYNC flags are added to qemu_ram_mmap():

Signed-off-by: Haozhong Zhang <haozhong.zhang@intel.com>
Signed-off-by: Zhang Yi <yi.z.zhang@linux.intel.com>
---
 exec.c                    |  2 +-
 include/exec/memory.h     |  3 +++
 include/exec/ram_addr.h   |  1 +
 include/qemu/mmap-alloc.h |  1 +
 include/qemu/osdep.h      | 29 +++++++++++++++++++++++++++++
 util/mmap-alloc.c         | 14 ++++++++++----
 6 files changed, 45 insertions(+), 5 deletions(-)

diff --git a/exec.c b/exec.c
index e92a7da..dc4d180 100644
--- a/exec.c
+++ b/exec.c
@@ -2241,7 +2241,7 @@ RAMBlock *qemu_ram_alloc_from_fd(ram_addr_t size, MemoryRegion *mr,
     int64_t file_size;
 
     /* Just support these ram flags by now. */
-    assert((ram_flags & ~(RAM_SHARED | RAM_PMEM)) == 0);
+    assert((ram_flags & ~(RAM_SHARED | RAM_PMEM | RAM_SYNC)) == 0);
 
     if (xen_enabled()) {
         error_setg(errp, "-mem-path not supported with Xen");
diff --git a/include/exec/memory.h b/include/exec/memory.h
index 667466b..33a4e2c 100644
--- a/include/exec/memory.h
+++ b/include/exec/memory.h
@@ -126,6 +126,9 @@ typedef struct IOMMUNotifier IOMMUNotifier;
 /* RAM is a persistent kind memory */
 #define RAM_PMEM (1 << 5)
 
+/* RAM can be mmap by a MAP_SYNC flag */
+#define RAM_SYNC (1 << 6)
+
 static inline void iommu_notifier_init(IOMMUNotifier *n, IOMMUNotify fn,
                                        IOMMUNotifierFlag flags,
                                        hwaddr start, hwaddr end,
diff --git a/include/exec/ram_addr.h b/include/exec/ram_addr.h
index 9ecd911..d239ce7 100644
--- a/include/exec/ram_addr.h
+++ b/include/exec/ram_addr.h
@@ -87,6 +87,7 @@ long qemu_getrampagesize(void);
  *              or bit-or of following values
  *              - RAM_SHARED: mmap the backing file or device with MAP_SHARED
  *              - RAM_PMEM: the backend @mem_path or @fd is persistent memory
+ *              - RAM_SYNC:   mmap with MAP_SYNC flag
  *              Other bits are ignored.
  *  @mem_path or @fd: specify the backing file or device
  *  @errp: pointer to Error*, to store an error if it happens
diff --git a/include/qemu/mmap-alloc.h b/include/qemu/mmap-alloc.h
index 6fe6ed4..1755a8b 100644
--- a/include/qemu/mmap-alloc.h
+++ b/include/qemu/mmap-alloc.h
@@ -18,6 +18,7 @@ size_t qemu_mempath_getpagesize(const char *mem_path);
  *  @flags: specifies additional properties of the mapping, which can be one or
  *          bit-or of following values
  *          - RAM_SHARED: mmap with MAP_SHARED flag
+ *          - RAM_SYNC:   mmap with MAP_SYNC flag
  *          Other bits are ignored.
  *
  * Return:
diff --git a/include/qemu/osdep.h b/include/qemu/osdep.h
index 3bf48bc..f94ea68 100644
--- a/include/qemu/osdep.h
+++ b/include/qemu/osdep.h
@@ -410,6 +410,35 @@ void qemu_anon_ram_free(void *ptr, size_t size);
 #  define QEMU_VMALLOC_ALIGN getpagesize()
 #endif
 
+/*
+ * MAP_SHARED_VALIDATE and MAP_SYNC are introduced in Linux kernel
+ * 4.15, so they may not be defined when compiling on older kernels.
+ */
+#ifdef CONFIG_LINUX
+
+#include <sys/mman.h>
+
+#ifndef MAP_SHARED_VALIDATE
+#define MAP_SHARED_VALIDATE   0x3
+#endif
+
+#ifndef MAP_SYNC
+#define MAP_SYNC              0x80000
+#endif
+
+/* MAP_SYNC is only available with MAP_SHARED_VALIDATE. */
+#define MAP_SYNC_FLAGS (MAP_SYNC | MAP_SHARED_VALIDATE)
+
+#else  /* !CONFIG_LINUX */
+
+#define MAP_SHARED_VALIDATE   0x0
+#define MAP_SYNC              0x0
+
+#define QEMU_HAS_MAP_SYNC     false
+#define MAP_SYNC_FLAGS 0
+
+#endif /* CONFIG_LINUX */
+
 #ifdef CONFIG_POSIX
 struct qemu_signalfd_siginfo {
     uint32_t ssi_signo;   /* Signal number */
diff --git a/util/mmap-alloc.c b/util/mmap-alloc.c
index 8f0a740..89ae862 100644
--- a/util/mmap-alloc.c
+++ b/util/mmap-alloc.c
@@ -99,6 +99,8 @@ void *qemu_ram_mmap(int fd, size_t size, size_t align, uint32_t flags)
     void *ptr = mmap(0, total, PROT_NONE, MAP_ANONYMOUS | MAP_PRIVATE, -1, 0);
 #endif
     bool shared = flags & RAM_SHARED;
+    bool is_pmem = flags & RAM_PMEM;
+    int mmap_xflags = 0;
     size_t offset;
     void *ptr1;
 
@@ -109,16 +111,20 @@ void *qemu_ram_mmap(int fd, size_t size, size_t align, uint32_t flags)
     assert(is_power_of_2(align));
     /* Always align to host page size */
     assert(align >= getpagesize());
+    if ((flags & RAM_SYNC) && shared && is_pmem) {
+        mmap_xflags |= MAP_SYNC_FLAGS;
+    }
 
     offset = QEMU_ALIGN_UP((uintptr_t)ptr, align) - (uintptr_t)ptr;
+ retry_mmap_fd:
     ptr1 = mmap(ptr + offset, size, PROT_READ | PROT_WRITE,
                 MAP_FIXED |
                 (fd == -1 ? MAP_ANONYMOUS : 0) |
-                (shared ? MAP_SHARED : MAP_PRIVATE),
+                (shared ? MAP_SHARED : MAP_PRIVATE) | mmap_xflags,
                 fd, 0);
-    if (ptr1 == MAP_FAILED) {
-        munmap(ptr, total);
-        return MAP_FAILED;
+    if ((ptr1 == MAP_FAILED) && (mmap_xflags & MAP_SYNC_FLAGS)) {
+        mmap_xflags &= ~MAP_SYNC_FLAGS;
+        goto retry_mmap_fd;
     }
 
     if (offset > 0) {
-- 
2.7.4


