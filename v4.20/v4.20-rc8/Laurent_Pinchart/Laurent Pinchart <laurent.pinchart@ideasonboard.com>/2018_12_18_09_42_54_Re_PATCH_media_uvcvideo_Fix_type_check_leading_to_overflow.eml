Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 18:09:59 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 1EB315805AD;
	Tue, 18 Dec 2018 01:42:12 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 18 Dec 2018 01:42:11 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ADKG0ihRDzNSCsIlBEmChPrSVs9psv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YhCEt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94VQndPXttKVyxZHIyz?=
 =?us-ascii?q?c5cPAeQGPeZdtYb9pl0Opga6CQSjAO7jzzlFjWL006InyeQsCQHI0hI9EdwAs3?=
 =?us-ascii?q?rUq9f6NKkdXu660KbI1i3DYvFN1Dfh9YbFaAwtre2QUb5ud8fa1EkhFxnCjlWV?=
 =?us-ascii?q?sYHrOSma1vkXs2eF6epgSf+khXQmqwF3vjevxt0jipPVhokIzV3E8T92wJsvJd?=
 =?us-ascii?q?KmTk57fcSoEINRtyGcK4R2QtktQ3t0uCshy70JpIC0czIRyJQgwR7QcPuHfJKS?=
 =?us-ascii?q?4h3+TuqePTB4hHd8db+5mh28/0+gyujmWcm11lZHtiVFkt7LtnAC0xzc9NKLRe?=
 =?us-ascii?q?d6/kek3zuEygPd6vlcLEwqiabWL4QtzqM+m5YNq0jPAyz7lFnsgKKXdEgo4vak?=
 =?us-ascii?q?5/j7brn7o5KQKoB5hRrkPakrhMCzHOo4PwgLUmWb4uuwyKHv8EjnTLpUjfA7k6?=
 =?us-ascii?q?zUvZ/ZKMkauKK0BhFa0ogi5hmlCjqqztcVkWUIIV9DZRmJlZLmO0vUL/D9Ffq/?=
 =?us-ascii?q?g0qjkDNsx/3eIL3hDYvCLmLZnLfiY7l98UhcxxQ3zdxF4JJUEL4BLOryWk/3qt?=
 =?us-ascii?q?PYEgc0PxKoz+vjEtlxy40TVXyVDqOEM67erUWE6+MtLuWUYY8aojf9K/wr5/70?=
 =?us-ascii?q?in85nEcQfa2o3ZsRdXC5Ee1qI0aHbnr2hNcOD2MKshM5TO3kjl2NTyRTam2sX6?=
 =?us-ascii?q?Iz+D47EpiqDYTdSYC3hryOwiO7EodRZmBcBVCACW3oeJmcW/cQdCKSJddskjgF?=
 =?us-ascii?q?VbiiVYAtzx6vtBLhxrpjL+rU/DAYtJ352Nh04e3TiQ899ThuA8uB1GGNSnl+nn?=
 =?us-ascii?q?kUSD8uwKB/vUt9x0+D0adigvxYCcZc5/RTXgc6KJ7T1ep6C9/pVwLFf9eJTkum?=
 =?us-ascii?q?Q9q8DTEwSNIx38EBY0JnF9q+iRDD2jKgA6UJmLyTGJw07qXc0mDzJ8Z61XnKzq?=
 =?us-ascii?q?ohj14gQstJMm2rnap/9wnVB47UnESVjaeqdaIA3CHT8GeP13aBvEZdUARoS6XK?=
 =?us-ascii?q?QWgfZlfKrdT+/k7NVaSuCbQgMgtC08KCMLFFat/ygFVCRffjPsneYm2rl2exAx?=
 =?us-ascii?q?aI2q2DbI7wd2oB2yXdDVAOkxoP8naeKQg+GiChrnrdDDN0E1LjeUfs8ehkp3O9?=
 =?us-ascii?q?QU851AWKb0xn17qo9R8Zn/2cS/UP3r0avCctsSl7HFG439jOEdqPuxJhfLlAYd?=
 =?us-ascii?q?M6+FpIyHjWtxJjMZC6L6BtnFgecx9psEPo0Bl3DoZAkc0urH4xyApyKKSY0E5O?=
 =?us-ascii?q?dj+C3JDwPKHXJXf2/By1d6HW3VTe2s6M+qgT8PQ4t0njvAaxG0U/6Xpnzcda32?=
 =?us-ascii?q?Gc5prQCgoSSoz+UkAs+hh+prHaZDQ95ozO2X1tN6m0riHN29YzCOQ5zRages9V?=
 =?us-ascii?q?MLmYGw/qD80aG8+uJfQ2m1ioaxIEO/xS9K40Ps+8a/uKwqmrPPxknDKni2RH75?=
 =?us-ascii?q?tw0kaN9yp6V+7J0IwJw/Ce3gubSTj8iE2tvdzwmYBBfTsSBHawyTD4BI5NYa1/?=
 =?us-ascii?q?ZZwECWOwLMy42Np/h4ThVGVF9FG+HVwG3sypeR2Mb1Hm2Q1Q1EIXoWGomCeizj?=
 =?us-ascii?q?x0lS0pobSb3CDU3+vicx8HMHZRRGZ+lVfsPZS0j9cCUUmocggljgeq6Vz7xqhb?=
 =?us-ascii?q?vqt/KWbTTFxMfyj3KWFiT6SxuqCDY85J9JMnryFXXP6gblCdT773uwEa3D/7H2?=
 =?us-ascii?q?tC2DA7cCmnuo/4nxNmkm2dNmt8rH3DdcF22xjf/t3cSedN0TUcQCl3lCfYBkK7?=
 =?us-ascii?q?P9mv5tiUk5bDsuajV2OuTJFTcC/rzZ+euyu//2FlHRq/n/WrkN39DQc6yTP718?=
 =?us-ascii?q?VtVSjQrBf8Y5Pn1qSgPeJ8Y0loAkTx6857GoF4j4sxi4sc2XkchpWJ43UHlX3/?=
 =?us-ascii?q?Pslc2aL7dHANXyIEw8bJ4Aj5301uNnCJyJjjVnWewcthYMO2YngM1SI+7MBKCa?=
 =?us-ascii?q?GU46JCnSZuplq4rATRYeVynzsHyPsu7mIajP8NuAY30iqdBbUSF1FCPSPwjxSI?=
 =?us-ascii?q?88y+rKJPaWeva7ew01ByndKgDLGEuQxcXHf5epE/HS5/9Ml/MVTM0GHt5YHgYt?=
 =?us-ascii?q?XfcdUTthiMmRfak+dVMI4xluYNhSd/OmLyp3wlx/Q7jRxzx566uoeHJn5p/KK4?=
 =?us-ascii?q?BB5YKzL0a9kS+jHrkaZRgMKW05qzEZVmHzUBRIHoQu6wEDIOqfTnMB6DEDg9qn?=
 =?us-ascii?q?eYA7XTBwGe51l9r3LTDZ+rLWqYK2cDzdVtXxSdIE1fgAYJXDQ1hJI5FwaqxND/?=
 =?us-ascii?q?f0d9/Dwe+ln4qh5UwOJyKxb/SnvfpBuvajosVJifKx9W4htD5kjPN8ye8/lzHz?=
 =?us-ascii?q?pZ/pC6qAyNK2qbZxlHDG0TW0yEAUzjMaeq5dXa7+eYAe++JePUYbqSsexeS+uI?=
 =?us-ascii?q?xZW334R95TmMMcGPPmR4A/0/x0pORnR5G8XfmzUSRC0bjSPNb8iHpBii/i17tN?=
 =?us-ascii?q?yw8PPuWAj3/4uAF6NSMclz+xCxmaqDNfSfhCNnJjZDzJ8M2WXEyLsC3F4RliFu?=
 =?us-ascii?q?cSOiEa8buC7JTaLQnLJXDhEBZyNyMstI87wz3g1XNcHHjdP106ZyjuQpBFddSV?=
 =?us-ascii?q?zhhsapaNQKImG6KVPHHVuLO66AJTHR2MH3ZqW8SbJLgeVQth2wvyubEkD5MjSC?=
 =?us-ascii?q?kTnpSw6gMeVWgC6HOxxevZm3cgxxBmj7UNLmdhq7Pcd3jTIowL00hXDKNW8GPT?=
 =?us-ascii?q?h/aUNNqbKQ4j1CgvViAGxM9X5lLeiCmyaE4OjUMJcWsf13Aitqk+JW+mg1y7xQ?=
 =?us-ascii?q?7CtcXvx6hDPSrsJyo1GhiuSA0CdnXwFUqjlVhIOHp0FiOaTC+5lEWHbE+g8N7G?=
 =?us-ascii?q?qKBxQLodtlFsPgu6RKxtfTk6LzLS9I88jI8ssEG8jUNMWHPWI9MRroHT7YFhcK?=
 =?us-ascii?q?QSS3OmHfmUNdluqf9nmUrpg8t5jtl4ACSr5dVFwpCPwaDl5pE8AFIJdyRjkki6?=
 =?us-ascii?q?KUjNYU5XqiqxncXMVbsYrBVvKXAPXvLi6WjLhEZxQSx7P4Ip8eNon620xkd1l7?=
 =?us-ascii?q?k57GG0vWXdBRvCJhahU4r1lK8Hh7HSUP3BfMbgK2/HYSD7aPggQ/gQt3Z6x5/S?=
 =?us-ascii?q?zw+V48JlPMjCQ3l0Y1lJPuhjXHIxDrK6LleYhLESfyqwAJM5XwQw9vcUXmmUV5?=
 =?us-ascii?q?LjrCW/RJjr1rdWlxlCfdtZZGAvlaR6pNehNWzvaSMaZ7mW9AozmqkBcUrdDODo?=
 =?us-ascii?q?FvwU53KJM=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ALAACLwBhch0O0hNFkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUwMBAQEBCwGBMIE5gQInhTyHOIsagg0UjX2JSYEkA0wtCwgBh18?=
 =?us-ascii?q?iNgcNAQMBAQEBAQECARMBAQEKCwkIKSMMgjYkgmMBAgMBAiQTBgEBNwEFCQEBC?=
 =?us-ascii?q?g4KCRUQAwwBRwYTBYMdAYIAAQMBCqZzgWwzgnYBAQWBMAGGBQMFeYoqgRyBVz+?=
 =?us-ascii?q?EI4MeAgKHPol0jBuLFAcCgiUEhGaKaAqRSo43jQQHX4EhTSODPIIbg22KVT4yg?=
 =?us-ascii?q?QQBAQGNeAEB?=
X-IPAS-Result: =?us-ascii?q?A0ALAACLwBhch0O0hNFkGgEBAQEBAgEBAQEHAgEBAQGBUwM?=
 =?us-ascii?q?BAQEBCwGBMIE5gQInhTyHOIsagg0UjX2JSYEkA0wtCwgBh18iNgcNAQMBAQEBA?=
 =?us-ascii?q?QECARMBAQEKCwkIKSMMgjYkgmMBAgMBAiQTBgEBNwEFCQEBCg4KCRUQAwwBRwY?=
 =?us-ascii?q?TBYMdAYIAAQMBCqZzgWwzgnYBAQWBMAGGBQMFeYoqgRyBVz+EI4MeAgKHPol0j?=
 =?us-ascii?q?BuLFAcCgiUEhGaKaAqRSo43jQQHX4EhTSODPIIbg22KVT4ygQQBAQGNeAEB?=
X-IronPort-AV: E=Sophos;i="5.56,367,1539673200"; 
   d="scan'208";a="45410760"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 18 Dec 2018 01:42:10 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726417AbeLRJmH (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 18 Dec 2018 04:42:07 -0500
Received: from perceval.ideasonboard.com ([213.167.242.64]:38432 "EHLO
        perceval.ideasonboard.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726358AbeLRJmH (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 18 Dec 2018 04:42:07 -0500
Received: from avalon.localnet (dfj612ybrt5fhg77mgycy-3.rev.dnainternet.fi [IPv6:2001:14ba:21f5:5b00:2e86:4862:ef6a:2804])
        by perceval.ideasonboard.com (Postfix) with ESMTPSA id AE2C953A;
        Tue, 18 Dec 2018 10:42:03 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=ideasonboard.com;
        s=mail; t=1545126124;
        bh=XunOINnwadmpU9sTmIhA/wdBl8KY10IfxKFHeeqi4ks=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=MW/KutmzKu1sS4EtaZ2OypD2PbyvAUhmLLhlisfU0C8tEiKaY1QQ7VgzkDSIdqJgt
         sGx7/fnkCccezUr5U6B1fJgxJYNlLAlmqhe/wuBRJPiBpDrKWhwjeOGQG9tCFVerrQ
         rRUEyOU6GZ7azOMi+lGY07RRyJyLu7Bl3Ie+OWpc=
From: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
To: Alistair Strachan <astrachan@google.com>
Cc: linux-kernel@vger.kernel.org, syzbot <syzkaller@googlegroups.com>,
        Mauro Carvalho Chehab <mchehab@kernel.org>,
        linux-media@vger.kernel.org, kernel-team@android.com
Subject: Re: [PATCH] media: uvcvideo: Fix 'type' check leading to overflow
Date: Tue, 18 Dec 2018 11:42:54 +0200
Message-ID: <45456214.XvNNoR8qLh@avalon>
Organization: Ideas on Board Oy
In-Reply-To: <20181217210222.115419-1-astrachan@google.com>
References: <20181217210222.115419-1-astrachan@google.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 7Bit
Content-Type: text/plain; charset="us-ascii"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Alistair,

Thank you for the patch.

On Monday, 17 December 2018 23:02:22 EET Alistair Strachan wrote:
> When initially testing the Camera Terminal Descriptor wTerminalType
> field (buffer[4]), no mask is used. Later in the function, the MSB is
> overloaded to store the descriptor subtype, and so a mask of 0x7fff
> is used to check the type.
> 
> If a descriptor is specially crafted to set this overloaded bit in the
> original wTerminalType field, the initial type check will fail (falling
> through, without adjusting the buffer size), but the later type checks
> will pass, assuming the buffer has been made suitably large, causing an
> overflow.
> 
> This problem could be resolved in a few different ways, but this fix
> applies the same initial type check as used by UVC_ENTITY_TYPE (once we
> have a 'term' structure.) Such crafted wTerminalType fields will then be
> treated as *generic* Input Terminals, not as CAMERA or
> MEDIA_TRANSPORT_INPUT, avoiding an overflow.
> 
> Originally reported here:
> https://groups.google.com/forum/#!topic/syzkaller/Ot1fOE6v1d8
> A similar (non-compiling) patch was provided at that time.
> 
> Reported-by: syzbot <syzkaller@googlegroups.com>
> Signed-off-by: Alistair Strachan <astrachan@google.com>
> Cc: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
> Cc: Mauro Carvalho Chehab <mchehab@kernel.org>
> Cc: linux-media@vger.kernel.org
> Cc: kernel-team@android.com
> ---
>  drivers/media/usb/uvc/uvc_driver.c | 4 ++--
>  1 file changed, 2 insertions(+), 2 deletions(-)
> 
> diff --git a/drivers/media/usb/uvc/uvc_driver.c
> b/drivers/media/usb/uvc/uvc_driver.c index bc369a0934a3..279a967b8264
> 100644
> --- a/drivers/media/usb/uvc/uvc_driver.c
> +++ b/drivers/media/usb/uvc/uvc_driver.c
> @@ -1082,11 +1082,11 @@ static int uvc_parse_standard_control(struct
> uvc_device *dev, p = 0;
>  		len = 8;
> 
> -		if (type == UVC_ITT_CAMERA) {
> +		if ((type & 0x7fff) == UVC_ITT_CAMERA) {
>  			n = buflen >= 15 ? buffer[14] : 0;
>  			len = 15;
> 
> -		} else if (type == UVC_ITT_MEDIA_TRANSPORT_INPUT) {
> +		} else if ((type & 0x7fff) == UVC_ITT_MEDIA_TRANSPORT_INPUT) {
>  			n = buflen >= 9 ? buffer[8] : 0;
>  			p = buflen >= 10 + n ? buffer[9+n] : 0;
>  			len = 10;

How about rejecting invalid types instead ? Something along the lines of

diff --git a/drivers/media/usb/uvc/uvc_driver.c b/drivers/media/usb/uvc/uvc_driver.c
index b62cbd800111..33a22c016456 100644
--- a/drivers/media/usb/uvc/uvc_driver.c
+++ b/drivers/media/usb/uvc/uvc_driver.c
@@ -1106,11 +1106,19 @@ static int uvc_parse_standard_control(struct uvc_device *dev,
 			return -EINVAL;
 		}
 
-		/* Make sure the terminal type MSB is not null, otherwise it
-		 * could be confused with a unit.
+		/*
+		 * Reject invalid terminal types that would cause issues:
+		 *
+		 * - The high byte must be non-zero, otherwise it would be
+		 *   confused with a unit.
+		 *
+		 * - Bit 15 must be 0, as we use it internally as a terminal
+		 *   direction flag.
+		 *
+		 * Other unknown types are accepted.
 		 */
 		type = get_unaligned_le16(&buffer[4]);
-		if ((type & 0xff00) == 0) {
+		if ((type & 0x7f00) == 0 || (type & 0x8000) != 0) {
 			uvc_trace(UVC_TRACE_DESCR, "device %d videocontrol "
 				"interface %d INPUT_TERMINAL %d has invalid "
 				"type 0x%04x, skipping\n", udev->devnum,

-- 
Regards,

Laurent Pinchart



