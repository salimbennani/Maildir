Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  20 Dec 2018 08:41:47 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 40D6B58055F
	for <like.xu@linux.intel.com>; Wed, 19 Dec 2018 10:51:06 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 19 Dec 2018 10:51:06 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AeR5vAB37vk/c0L6asmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?sesUKv7xwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJfUMZfVyJBBYCy?=
 =?us-ascii?q?YYUBAOUOP+lXs4bzqUYWrRa8BwehC/7jxzFUinDoxq03yPghHAPc0QA8A94Dvn?=
 =?us-ascii?q?bZodPoP6kSS+C1y6zIwC3MYfNM2Dfy9JXDfw0lof6WXrJ/b9faxE4xGAzeilWf?=
 =?us-ascii?q?s4/lMC2O2+QXrWeU8upgWvizi2I9tw5xpT2vy94qh4LUiIwVzVXE+j94wIYzPd?=
 =?us-ascii?q?C4UE56YcKkEJtXsSGVK5V5QsU+Q2Fyoik6zqcKuZ+8fCQSzJQnxgXQa+KGc4iS?=
 =?us-ascii?q?/hLvTuGRIS13hH59YbKwmROy8VW6xu37TMm031BHpTdGnNnUrn0ByQDf58udRv?=
 =?us-ascii?q?dg40us2iyD2x7d5+xEO0w4iKjWJ4Y/zrIskpcfq1nPEyHolEnskaObdUsp9vK2?=
 =?us-ascii?q?5+nkZLjtu4WSOJVuig7kN6Qjgsy/Dvo8MggJR2Wb/eW81Kb//U3iWrlKgfs2kr?=
 =?us-ascii?q?TDvJDdP8Qbqba1Aw5T0ok99xayFymq3MgbkHUdMV5JZRGKg5L3N1zAIP30F+qz?=
 =?us-ascii?q?jla0nDdu3f/GP7nhApvXLnjElbfsZa995FBZyAou1NxQ+oxbCq8fL/L3Q0P+r9?=
 =?us-ascii?q?vYDgI/MwOo3ennE9Jx1ocfWWKMHKCVKqzTsUKQ6+IrIumMYpIVuTnnJ/gk4f7u?=
 =?us-ascii?q?kWE2mVsHcaa12psXbWu1HvJhI0WfbnrshMoBHX0NvgokQ+zmkEeCXiJLZ3auQ6?=
 =?us-ascii?q?I84Sk2CIanDYfAWI+hmrOA3DqgE51SZ2BGDE2MEHjye4WFXfcMdDydIst7njMY?=
 =?us-ascii?q?UrihTtxp6Be1qQWvy6Z7NvGGvWoctIn/z55z4Ovckwx08iZ7SMGU0mWIRmczmX?=
 =?us-ascii?q?sURjgwx+dmrElgj1uOz6V80MFeDsFZsvZAUwMmMszFwulnTtz/RA/FO82EUUur?=
 =?us-ascii?q?WcmOBzY3QdQshdgUbBFmBt+ggxvfijesGKIfjLeRBZY5oZ7bilr2J8A18HDBy+?=
 =?us-ascii?q?F1jUIgRdRnL2CqhqdjsQPUAtiN23udnqqrcKUGlBXA8WqF0XGJogR/Xw99T77G?=
 =?us-ascii?q?XGFXMlXNoNH04F/ZSKGGF7U9LhZG29yFbKBNb4utxR9fSfL+fdjTfW+1s2G3Ax?=
 =?us-ascii?q?mO2/WLdoWgMzEE0SDATUQJjQ0X1XCBMwc4G2GmuW2ISHQkDF/qfgbm9e51q1u9?=
 =?us-ascii?q?SUk7yRzMaFdunfLh4xMQmLmWT/QY3ZoCvyEurSgyG0yyiYH4Ed2F8id7fa4US9?=
 =?us-ascii?q?c041oPgW/TswV+M7S6Iqxij0JYeANy6RC9ny5rA5lNxJB55EghyxB/fOfBiAtM?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0B3AACHkhpchxHrdtBhAxwBAQEEAQEHB?=
 =?us-ascii?q?AEBgVQEAQELAYEwgTmBFhODfYh4ix2BYC2ZThcYDQeBS4ViIjcGDQEDAQEBAQE?=
 =?us-ascii?q?BAgETAQEBCgsJCBsOIwyCNgUCAxoBBoJcAQICAQECIBUOCikDAwECBgEBCg4MA?=
 =?us-ascii?q?iIEAgIDAVMGAQwIAQEBgx0BgXkIAQQKqBSBL4VAhHGBC4s0F4FAP4E4gmuBfoN?=
 =?us-ascii?q?KgkGCVwKQHzeQXgmHEIpMBhiCK4dMEYdRiUiQOoFcgXgzGggbFYMnCYhjgjCFX?=
 =?us-ascii?q?iIxgQcci02BdwEB?=
X-IPAS-Result: =?us-ascii?q?A0B3AACHkhpchxHrdtBhAxwBAQEEAQEHBAEBgVQEAQELAYE?=
 =?us-ascii?q?wgTmBFhODfYh4ix2BYC2ZThcYDQeBS4ViIjcGDQEDAQEBAQEBAgETAQEBCgsJC?=
 =?us-ascii?q?BsOIwyCNgUCAxoBBoJcAQICAQECIBUOCikDAwECBgEBCg4MAiIEAgIDAVMGAQw?=
 =?us-ascii?q?IAQEBgx0BgXkIAQQKqBSBL4VAhHGBC4s0F4FAP4E4gmuBfoNKgkGCVwKQHzeQX?=
 =?us-ascii?q?gmHEIpMBhiCK4dMEYdRiUiQOoFcgXgzGggbFYMnCYhjgjCFXiIxgQcci02BdwE?=
 =?us-ascii?q?B?=
X-IronPort-AV: E=Sophos;i="5.56,373,1539673200"; 
   d="scan'208";a="57582149"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 19 Dec 2018 10:51:05 -0800
Received: from localhost ([::1]:33625 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gZgvw-0000ef-CT
	for like.xu@linux.intel.com; Wed, 19 Dec 2018 13:51:04 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:39391)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <eblake@redhat.com>) id 1gZgvR-0000cS-Uc
	for qemu-devel@nongnu.org; Wed, 19 Dec 2018 13:50:35 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <eblake@redhat.com>) id 1gZgvQ-0005ZW-M5
	for qemu-devel@nongnu.org; Wed, 19 Dec 2018 13:50:33 -0500
Received: from mx1.redhat.com ([209.132.183.28]:53962)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <eblake@redhat.com>)
	id 1gZgvF-0005NR-AV; Wed, 19 Dec 2018 13:50:23 -0500
Received: from smtp.corp.redhat.com (int-mx07.intmail.prod.int.phx2.redhat.com
	[10.5.11.22])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 47EEC83F46;
	Wed, 19 Dec 2018 18:50:18 +0000 (UTC)
Received: from [10.10.122.76] (ovpn-122-76.rdu2.redhat.com [10.10.122.76])
	by smtp.corp.redhat.com (Postfix) with ESMTP id CE3EF100190B;
	Wed, 19 Dec 2018 18:50:14 +0000 (UTC)
To: John Snow <jsnow@redhat.com>,
	Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>,
	"qemu-devel@nongnu.org" <qemu-devel@nongnu.org>,
	"qemu-block@nongnu.org" <qemu-block@nongnu.org>
References: <20181219015230.18652-1-jsnow@redhat.com>
	<20181219015230.18652-2-jsnow@redhat.com>
	<fe80addc-0e37-a453-b9e1-5e78b559a093@virtuozzo.com>
	<a1b2fca0-2bd1-01f6-6ff0-dfde78d4dfec@redhat.com>
From: Eric Blake <eblake@redhat.com>
Organization: Red Hat, Inc.
Message-ID: <dd3979c0-2fd6-83a2-8b6f-7e3a2b828583@redhat.com>
Date: Wed, 19 Dec 2018 12:50:14 -0600
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.1
MIME-Version: 1.0
In-Reply-To: <a1b2fca0-2bd1-01f6-6ff0-dfde78d4dfec@redhat.com>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-US
Content-Transfer-Encoding: 7bit
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.22
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.27]);
	Wed, 19 Dec 2018 18:50:18 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH v4 1/5] iotests: add qmp recursive sorting
 function
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Kevin Wolf <kwolf@redhat.com>, Markus Armbruster <armbru@redhat.com>,
	Max Reitz <mreitz@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On 12/19/18 11:55 AM, John Snow wrote:

>>> +def ordered_kwargs(kwargs):
>>> +    # kwargs prior to 3.6 are not ordered, so:
>>> +    od = OrderedDict()
>>> +    for k in sorted(kwargs.keys()):
>>
>> you can use for k, v in sorted(kwargs.items()):
>> and use then v instead of kwargs[k]
>>
> 
> I don't need to sort the tuples, though, Only the keys -- which are not
> duplicated. Is it really worth changing? ...

If I'm reading this correctly:
https://www.pythoncentral.io/how-to-sort-python-dictionaries-by-key-or-value/

sorting tuples with unique keys is the same as sorting by the keys, but 
gives you the value (as part of the tuple) for free.  So the benefit is 
that:

> 
>>> +        if isinstance(kwargs[k], dict):
>>> +            od[k] = ordered_kwargs(kwargs[k])

here, you'd write:

if isinstance(v, dict):
   od[k] = ordered_kwargs(v)

instead of having to repeat the value lookup.

> 
> The motivation is that log() will log whatever you give it and apply
> filters that work on that kind of object. Some callers need to filter
> rich QMP objects and some callers need to filter text -- this is the way
> log() behaves right now and I simply didn't change it.
> 
> What qmp_log currently does is convert both the outgoing and incoming
> QMP objects to text, and then filters them as text. However, only
> precisely one test (206) uses this functionality.
> 
> So... I need some way for test 206 to do what it does. One way is to
> make a rich QMP filter, which is what I do later in this series under
> the pretense that other tests will likely want to filter QMP output, too.
> 
> The other approach involves teaching qmp_log to accept two kinds of
> filters (qmp and text) and then passing both along to log(), which will
> then filter the object before pretty-printing and then apply the text
> filters after pretty-printing, and then logging the result.
> 
> As it stands now, though, log() just applies all filters to the first
> argument without the caller needing to disambiguate. If I teach log() to
> use two types of filters, I need to go back through all of the iotests
> and teach all callers to specify e.g. qfilters= or tfilters=.
> 
> I opted for an approach that let me just edit test 206 instead -- and
> one that added a recursive QMP filter that might be useful in the future
> for other purposes.

The reasoning here makes sense to me.

-- 
Eric Blake, Principal Software Engineer
Red Hat, Inc.           +1-919-301-3266
Virtualization:  qemu.org | libvirt.org

