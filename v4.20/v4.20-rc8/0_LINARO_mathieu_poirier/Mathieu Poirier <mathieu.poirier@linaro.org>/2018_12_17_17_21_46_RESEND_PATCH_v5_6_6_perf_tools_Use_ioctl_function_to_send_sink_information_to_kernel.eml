Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 08:47:28 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id CA7DE5805CF;
	Mon, 17 Dec 2018 09:22:07 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 17 Dec 2018 09:22:07 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AepPWkxJ+GUqSRqPpO9mcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULvr9rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0yRD+s7bpkSAXwhS?=
 =?us-ascii?q?kHKTA37W/ZhM93gq1ZrhKhvAR/zozPbY2JKPZzZL/RcMkGSWZdWMtaSixPApm7?=
 =?us-ascii?q?b4sKF+cPOvxXr5X9p1sPsxS+GBSnCvnoyj9JnH/23LM10/48GgzB2QwvBc4OsH?=
 =?us-ascii?q?TVrNrrKaceS/i1zK7JzTXZbvNZxy395ZPMchAgp/GDR6hwcc3LxUkoDQPFgUyd?=
 =?us-ascii?q?pIr4ND2WzuQAq3aX4/ZkWO61lmIqpR99riKyysovloXFnIMYx1Lc+Sh4w4s5P8?=
 =?us-ascii?q?C0RUF5bNK+E5ZcrT+WOot5T84kXmpmojw1yqcctp6+ZCUKyIooxxrYa/GfbYiI?=
 =?us-ascii?q?7QzsVPyLLTd7mn1lYrS/iAi28US6ze38TMa03E5LripDjNbMqmgA2wLP5sWDUP?=
 =?us-ascii?q?dx40ms1SiV2wzO6exIPVo4mKvZJpI5x74/jJsTsUDNHi/sn0X2ibebdkEl+uiu?=
 =?us-ascii?q?9uTmbazqppyCOI9ujAHxLKAultW4AeU2NAgBQXKb9P+i1L3s40L5Wq9Gjv4ona?=
 =?us-ascii?q?nDtpDVO8AbqrS+Aw9P3YYv8wy/ACu+0NQEgXkHK0pIeBaGj4jqJV7COv/5Deqk?=
 =?us-ascii?q?jlSokTdrwe3GP7L7DpXMKHjDjKnufbJn50FAzwozyMhV54hIBbEZPPLzRkjxuc?=
 =?us-ascii?q?TYDhAjMgy03/zoCNJn2oMeRGKAGKmZMKzJvF+M5+IvJfSMZYAPtDb8Lfgl++Dh?=
 =?us-ascii?q?jXsjlVABeqmp2IMdaGqkEfR+P0WZfX3sj88DEWcNoAUyVu/qiFqEUT5VYHa/RK?=
 =?us-ascii?q?Y85jA9CIK7AobPXIGtgLqd3CilGp1afHxJCleJEX3wbYWLR+8MaD6OIs9mijEL?=
 =?us-ascii?q?T6OhS48m1RGtrgP60aBoLujP9y0ctJLj0sV15uLJmREz8zx0E9qS02WXQ25omW?=
 =?us-ascii?q?MIQic83Lpjrkxl1leDza94juRbFdNJ4fNFSAM6NZ/GwOx8BND/QQbBftaPSFa7?=
 =?us-ascii?q?TdSqGzAxTtQtw9AQZ0ZxAcmtjhfG3yCyGb8ai6SLBIAo8qLbx3X+Otxyy2jY26?=
 =?us-ascii?q?U7j1kpWM1PNXa4ia558ATTA43Jk0Cdl6uxcaQc3SjN9HqMzGaUvUFYVhJwXrvB?=
 =?us-ascii?q?XXwFekTWqtH57FvYT7CyEbQnLhdBycmaJ6RXcNLpk0tJSO3jONvEZWKxgHm/BR?=
 =?us-ascii?q?CTy7OIbYrqfXgd3SrHBEgFlQAT4WiJNQwkCii9pGLeCSRkFUjzbEP07el+tHS7?=
 =?us-ascii?q?Q1cozwGLak1h0Ka1+h4VhPCGV/MfxLUEuD0lqzV1Gla90MnbC96BpwpnYaVdbs?=
 =?us-ascii?q?kx4FZB1WLFqQN9OoasILxlhl4baw53pV/h1w1rCoVclsgntGklzA5sJqOXzlxA?=
 =?us-ascii?q?dymU0ovtOrLKMGby+hOva6nI2lzF1NaW+6EP6Ok3qln5vQGpEFYi/Gtj09VPz3?=
 =?us-ascii?q?Sc4ZDKBhIIUZ3tSkY36wR6p7bCbyg9+oPYz2FjPbO1sz/Cwd0pAuQlxw2kf9de?=
 =?us-ascii?q?NqOECQDzH9cbB8ioNOwlhVypYggYM+BV8a4+J9mmeOee2K63IOZgmyqrjX5G4I?=
 =?us-ascii?q?9hyE2M7TdzSunS05YD3f6YxAqHWy7gg1i7tsD4hJ5LZSsVHmq50iXkAI9RZqtv?=
 =?us-ascii?q?fYcEE2uuIsu3xslgiJ7pQXJX6FmjB1Ye0s+zZRWSd0D93RFX1UkPoX2nmDG0zj?=
 =?us-ascii?q?xunzEys6qf2jfDw+DjdBoBJ25KS3NujVbqIYiokd8aWFKkYBQulBug/Uz63bRU?=
 =?us-ascii?q?pLxjL2nPRkdFZyr2IHt4UquztbqCZNRD6IgyviVUU+S8YFaaRaD7oxYB1yPjHm?=
 =?us-ascii?q?1exC00dj2wu5X5mQB6h3yZLHppsHXZfsRwzw/F5NPAXf5RwiYGRC5ghDjXHFe8?=
 =?us-ascii?q?OMOl/deVl5fFqe2+U2OhVptOcSjk14+AtS275XF0Dh27hfy8htrnEQ0i2y/hy9?=
 =?us-ascii?q?ZqTTnIrAr7YoTz1KS1K+NnclNoBF/h8cV6HI5+n5A0hJER33gam5qU8WAGkWf1?=
 =?us-ascii?q?LdVUx6b+YGARSj4Mxt7f+BLl11F7LnKV24L5UW2Qws5gZ9m5eGwawCw84N5RCK?=
 =?us-ascii?q?eI8rNEhzB6rUSirQLeevV9mjYdyf0z6H8Vme0JuQwtzjmDDbAWB0VXISvslxGQ?=
 =?us-ascii?q?5dCksKpXfHqvcaS31EdmgdChC7SCrhtdWXnjfJciADRw7t5+MF/X1H3z64fkeM?=
 =?us-ascii?q?TfbN4Jtx2UlQvAgPZRKJ4rivUKgi9nM3rnvXI50+47kQBu3ZaisYecMWpt+6a5?=
 =?us-ascii?q?AgNCOj3xesMe4TXtjadYnsaL0IGjBJRhGjMXXJT2SfKkCi4dtfPiNwyWCj0ztm?=
 =?us-ascii?q?+bGabDHQ+Y8EpmrWjAE5W1OHGMPnUZ0c9uRBqAJExcnQAUWi81noUiGwCuxczh?=
 =?us-ascii?q?dlp55z8L6l75rBtM1vxnNx3lXmjDoweoby8+SIKDIxpO8gFC+0DVPNSe7+J0Ai?=
 =?us-ascii?q?FY54ChoxaLKmCBfARICmcJWkOfClDnP7mu48TA8ueCCuq/KfvOfauBqehEW/iU?=
 =?us-ascii?q?wpKv15Ns/yyQOcWXInliE/o711JDXX9nGsTZmDYPSy0NmyLOdc6boxi89TNtrs?=
 =?us-ascii?q?Ci6/TmQwbv5YqJC7tPPtRj4RG2gaGfN+GOgCZ1MypX1pQJxXXQ0rgQwEYSiz1y?=
 =?us-ascii?q?dzmqCbkPrzPNQ7nKmqBJDx8XcSdzNMpT4qI43wlNP9Pbi9zv2r55iP41F0lKVV?=
 =?us-ascii?q?j7ls61YswKJnm3NEnbC0aTKLSGOTrLztnrYaO9TL1clvlbuwestjabDUDjOC+O?=
 =?us-ascii?q?lz3oVxCpLOFNgzuXPB1YuIGhbBltDXLvQ87hah2+KNV3lyE5waUohnPWMm4RKT?=
 =?us-ascii?q?h9fFlLrr2V7CNYhO1wGm1B7nV/K+mElD2U7+3ZKpYQrPtqDT54l+Nc4HQm1bRV?=
 =?us-ascii?q?6DtIS+BymCvX/ZZSpASvmeyC4jlqShxDrnBMno3P9V1vJajD5LFBX3je9R4A5G?=
 =?us-ascii?q?nWDA4F45NqENDguKB4ztnJibL9LypE/9vI/MwaQc/OJ5GpKn0kZD/gBD7VARZN?=
 =?us-ascii?q?dTmqL2DSnQQJlfiO9nyYs94irZn2mZcUYrtaUlUvEbUdEEszT49KG4t+Qj5xye?=
 =?us-ascii?q?3Tt8UP/3fr9BQ=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CQAACi2hdch0O0hNFkHgEGBwaBVAYLA?=
 =?us-ascii?q?YFaghEnjHSLGIIhl1iBXxIBARgTAYdWIjcGDQEDAQEBAQEBAgETAQEBCgsJCCk?=
 =?us-ascii?q?jDII2IoJlAwMBAiQZAQE3AQUJAQE+EgMxAQUBHAcSBYJSS4IBBZxPPIoggWwzg?=
 =?us-ascii?q?nYBAQWHHAgSh2uDJYEcgVc/gRGCZIRzhhuPT36QTgcCgiQEjzICFoNBhjKEbYJ?=
 =?us-ascii?q?yiTyQAQIEAgkCBQ8hgTuBeDMaMIMvghs1iEyFXyAygQUBAY1vAQE?=
X-IPAS-Result: =?us-ascii?q?A0CQAACi2hdch0O0hNFkHgEGBwaBVAYLAYFaghEnjHSLGII?=
 =?us-ascii?q?hl1iBXxIBARgTAYdWIjcGDQEDAQEBAQEBAgETAQEBCgsJCCkjDII2IoJlAwMBA?=
 =?us-ascii?q?iQZAQE3AQUJAQE+EgMxAQUBHAcSBYJSS4IBBZxPPIoggWwzgnYBAQWHHAgSh2u?=
 =?us-ascii?q?DJYEcgVc/gRGCZIRzhhuPT36QTgcCgiQEjzICFoNBhjKEbYJyiTyQAQIEAgkCB?=
 =?us-ascii?q?Q8hgTuBeDMaMIMvghs1iEyFXyAygQUBAY1vAQE?=
X-IronPort-AV: E=Sophos;i="5.56,366,1539673200"; 
   d="scan'208";a="142452333"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 17 Dec 2018 09:22:06 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2388386AbeLQRWD (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 17 Dec 2018 12:22:03 -0500
Received: from mail-pl1-f196.google.com ([209.85.214.196]:45964 "EHLO
        mail-pl1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2388299AbeLQRWA (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 17 Dec 2018 12:22:00 -0500
Received: by mail-pl1-f196.google.com with SMTP id a14so6428730plm.12
        for <linux-kernel@vger.kernel.org>; Mon, 17 Dec 2018 09:22:00 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=from:to:cc:subject:date:message-id:in-reply-to:references;
        bh=3vpJNza9or+DqAPy2Ouz+IaFpD2uwWIrDBJByTZlu+A=;
        b=WBT0TGuzBRScvsuhIEQeJ4p5P/ED7pvZwMP1kvAA1n//d+x1KAuFV92CjrST4/Vzml
         25yzhLdHeKYAFk+jZaWo74/5nIrkljnJhwDC1jFUIYhUQ0fpKf/FUzzRyUGlPuGnpcSo
         WmX62nnHyUDu8zelXpQJOHbYsDzeBAAXBsq0E=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references;
        bh=3vpJNza9or+DqAPy2Ouz+IaFpD2uwWIrDBJByTZlu+A=;
        b=V4yfm0rdLHuG5VLmdMfSkXTaacOnIqrsWTk6pioI3tVS4tS95CTD02lb3kBmoxJ3wh
         STZVCpNG0QY1TEpUk4GCzB5pKr310rCy7qyYR6NI0hnaV2P/FHNCDmqgLd3lGtxMYmO5
         r52z9rtdtjUYhD4ZNWt81CjigttoKc25SSTnwWpy5i55gPEVtn2C2/5pyG8m2xVnnufJ
         vfzAQn4D4bfAsyUp8bCZVE06szb3dxXQZVW8K8NPoI38Ocw8YRTD/+GwN4QPSJmpjny3
         micuyFdmYbFp9YX+m6dDILMUXP32x07+cXlqv/+y5F7N2yv83McWPuvhudOiT7cgoR65
         rPAw==
X-Gm-Message-State: AA+aEWakXC0vDV84P9i2Vkh7culdjm1zfDxFtS7obAq/yaqog/ZM0uvG
        L3ppmuFg1JlGlW0UOrpU0Oaoqg==
X-Google-Smtp-Source: AFSGD/W3rAQeKcrlu6C2xJRjkJM0Wm+1HGgVskXUMBLHLFPSTZQCZlcMuiXSTGc7Vs8VZa+iY4DSlA==
X-Received: by 2002:a17:902:4681:: with SMTP id p1mr13799807pld.184.1545067319819;
        Mon, 17 Dec 2018 09:21:59 -0800 (PST)
Received: from xps15.cg.shawcable.net (S0106002369de4dac.cg.shawcable.net. [68.147.8.254])
        by smtp.gmail.com with ESMTPSA id j6sm20526648pfg.126.2018.12.17.09.21.58
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
        Mon, 17 Dec 2018 09:21:59 -0800 (PST)
From: Mathieu Poirier <mathieu.poirier@linaro.org>
To: acme@kernel.org, peterz@infradead.org, gregkh@linuxfoundation.org
Cc: mingo@redhat.com, tglx@linutronix.de,
        alexander.shishkin@linux.intel.com, schwidefsky@de.ibm.com,
        heiko.carstens@de.ibm.com, will.deacon@arm.com,
        mark.rutland@arm.com, jolsa@redhat.com, namhyung@kernel.org,
        adrian.hunter@intel.com, ast@kernel.org, hpa@zytor.com,
        suzuki.poulosi@arm.com, linux-s390@vger.kernel.org,
        linux-kernel@vger.kernel.org, linux-arm-kernel@lists.infradead.org
Subject: [RESEND PATCH v5 6/6] perf tools: Use ioctl function to send sink information to kernel
Date: Mon, 17 Dec 2018 10:21:46 -0700
Message-Id: <1545067306-31687-7-git-send-email-mathieu.poirier@linaro.org>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1545067306-31687-1-git-send-email-mathieu.poirier@linaro.org>
References: <1545067306-31687-1-git-send-email-mathieu.poirier@linaro.org>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

The communication of sink information for a trace session doesn't work when
more than one CPU is involved in the scenario due to the static nature of
sysfs.  As such communicate the sink information to each event by using the
an ioctl command.  The information sent to the kernel is the component's HW
address, which is guaranteed to be unique on the CoreSight bus and known to
the kernel.

Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
---
 tools/perf/arch/arm/util/cs-etm.c | 66 +++++++++++++++++++++++++++++++++++++--
 tools/perf/util/evsel.c           |  6 ++++
 tools/perf/util/evsel.h           |  1 +
 3 files changed, 71 insertions(+), 2 deletions(-)

diff --git a/tools/perf/arch/arm/util/cs-etm.c b/tools/perf/arch/arm/util/cs-etm.c
index d8081c2e6d44..41e394806707 100644
--- a/tools/perf/arch/arm/util/cs-etm.c
+++ b/tools/perf/arch/arm/util/cs-etm.c
@@ -22,11 +22,13 @@
 #include "../../util/thread_map.h"
 #include "../../util/cs-etm.h"
 
+#include <stdio.h>
 #include <stdlib.h>
 #include <sys/stat.h>
 
 #define ENABLE_SINK_MAX	128
 #define CS_BUS_DEVICE_PATH "/bus/coresight/devices/"
+#define AMBA_BUS_DEVICE_PATH "/bus/amba/devices/"
 
 struct cs_etm_recording {
 	struct auxtrace_record	itr;
@@ -619,6 +621,41 @@ static FILE *cs_device__open_file(const char *name)
 
 }
 
+static int cs_etm_check_drv_config_term(const char *name, u64 *addr)
+{
+	char path[PATH_MAX];
+	const char *sysfs;
+	int err;
+	FILE *file;
+	u64 start;
+
+	/* CS devices are all found under sysFS */
+	sysfs = sysfs__mountpoint();
+	if (!sysfs)
+		return -EINVAL;
+
+	/* The resource file contains the HW start address of this component */
+	snprintf(path, PATH_MAX,
+		 "%s" AMBA_BUS_DEVICE_PATH "%s" "/resource", sysfs, name);
+
+	file = fopen(path, "r");
+	if (!file) {
+		pr_debug("Unable to open file: %s\n", path);
+		return -EINVAL;
+	}
+
+	/* We just need the first value */
+	err = fscanf(file, "%016lx", &start);
+	if (err != 1) {
+		pr_debug("Unable to get resource start value for: %s\n", path);
+		return -EINVAL;
+	}
+
+	*addr = start;
+
+	return 0;
+}
+
 static int __printf(2, 3) cs_device__print_file(const char *name, const char *fmt, ...)
 {
 	va_list args;
@@ -635,7 +672,7 @@ static int __printf(2, 3) cs_device__print_file(const char *name, const char *fm
 	return ret;
 }
 
-static int cs_etm_set_drv_config_term(struct perf_evsel_config_term *term)
+static int cs_etm_set_drv_config_term_sysfs(struct perf_evsel_config_term *term)
 {
 	int ret;
 	char enable_sink[ENABLE_SINK_MAX];
@@ -650,6 +687,21 @@ static int cs_etm_set_drv_config_term(struct perf_evsel_config_term *term)
 	return 0;
 }
 
+static int cs_etm_set_drv_config_term_ioctl(struct perf_evsel *evsel,
+					    struct perf_evsel_config_term *term)
+{
+	u64 addr;
+	int ret;
+
+	/* First check the input */
+	ret = cs_etm_check_drv_config_term(term->val.drv_cfg, &addr);
+	if (ret)
+		return ret;
+
+	/* All good, apply configuration */
+	return perf_evsel__apply_drv_config(evsel, addr);
+}
+
 int cs_etm_set_drv_config(struct perf_evsel *evsel,
 			  struct perf_evsel_config_term **err_term)
 {
@@ -660,7 +712,17 @@ int cs_etm_set_drv_config(struct perf_evsel *evsel,
 		if (term->type != PERF_EVSEL__CONFIG_TERM_DRV_CFG)
 			continue;
 
-		err = cs_etm_set_drv_config_term(term);
+		/* First try the new interface, i.e ioctl() */
+		err = cs_etm_set_drv_config_term_ioctl(evsel, term);
+		if (!err)
+			continue;
+
+		/*
+		 * Something went wrong, we are probably working with an older
+		 * kernel.  As such use the sysFS interface, which will only
+		 * work for per-thread scenarios.
+		 */
+		err = cs_etm_set_drv_config_term_sysfs(term);
 		if (err) {
 			*err_term = term;
 			break;
diff --git a/tools/perf/util/evsel.c b/tools/perf/util/evsel.c
index 6d187059a373..8aa2b79c3314 100644
--- a/tools/perf/util/evsel.c
+++ b/tools/perf/util/evsel.c
@@ -1195,6 +1195,12 @@ static int perf_evsel__append_filter(struct perf_evsel *evsel,
 	return -1;
 }
 
+int perf_evsel__apply_drv_config(struct perf_evsel *evsel, u64 addr)
+{
+	return perf_evsel__run_ioctl(evsel,
+				     PERF_EVENT_IOC_SET_DRV_CONFIG, &addr);
+}
+
 int perf_evsel__append_tp_filter(struct perf_evsel *evsel, const char *filter)
 {
 	return perf_evsel__append_filter(evsel, "(%s) && (%s)", filter);
diff --git a/tools/perf/util/evsel.h b/tools/perf/util/evsel.h
index 3147ca76c6fc..6be7560bc986 100644
--- a/tools/perf/util/evsel.h
+++ b/tools/perf/util/evsel.h
@@ -276,6 +276,7 @@ int perf_evsel__append_tp_filter(struct perf_evsel *evsel, const char *filter);
 int perf_evsel__append_addr_filter(struct perf_evsel *evsel,
 				   const char *filter);
 int perf_evsel__apply_filter(struct perf_evsel *evsel, const char *filter);
+int perf_evsel__apply_drv_config(struct perf_evsel *evsel, u64 addr);
 int perf_evsel__enable(struct perf_evsel *evsel);
 int perf_evsel__disable(struct perf_evsel *evsel);
 
-- 
2.7.4

