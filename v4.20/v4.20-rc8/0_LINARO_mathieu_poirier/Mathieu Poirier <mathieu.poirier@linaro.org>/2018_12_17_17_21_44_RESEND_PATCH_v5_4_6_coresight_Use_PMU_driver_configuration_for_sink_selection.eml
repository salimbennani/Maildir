Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 08:47:31 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga008.fm.intel.com (fmsmga008.fm.intel.com [10.253.24.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 9EBA15805FC;
	Mon, 17 Dec 2018 09:25:22 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga008-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 17 Dec 2018 09:25:22 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ADks95xbFYG/KUNgi27ZMdnj/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpci8Yh7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v6bpgRh31hy?=
 =?us-ascii?q?cdLzM38H/ZhNF+gqxYpxyupRJ/w5XMYIyXL/dyYr/RcMkGSWdbQspdSypMCZ68?=
 =?us-ascii?q?YYsVCOoBOP5VoY7nqFsSrRu+BBejBP7ywTFSgX/23Lc60+U/HgHcwQctGNcOv2?=
 =?us-ascii?q?7IrNX1NacdT/21wLPQzTXEbvNWwzb955bSch06pfGMXLRwftDLyUkoDQ/FiU+Q?=
 =?us-ascii?q?qYP8Mj6Ty+8DsHCb4vJ+We6zj2MrsRx9rzaxyss2l4XEhZ4ZxkrF+Ch72Io4JN?=
 =?us-ascii?q?61RFRmbdOrEpZcrSKXO5FoTs4iTGxlvjsxxKcctp6hZicKzYwqxx7BZPyDdIiF?=
 =?us-ascii?q?+gzjVOmPLjdinn5le6ywhwy08Ue+zu3wTM600ExFriZdk9nMsG4C1wDL58SZVv?=
 =?us-ascii?q?dw+l2t1SuB2gzN8O1IPEM5mbbBJ5MgwLM8jp8Tvl7CHi/ylkX2lqiWdkA89+is?=
 =?us-ascii?q?6uTnZKjmp5CFO493lA7+KKIuldK7AeghNQgPUW6b9vqm1LD44035T6tFjucsnq?=
 =?us-ascii?q?narp/aP8IbqbC9AwNP1YYj8Rm/Ay+80NsEhXkHME5FeBWfgojtOlHOI+73Ae2w?=
 =?us-ascii?q?glSxizprw/HGPrv8ApTCNHTDkbHhfapj5E5Y0gY80ddf55dMALEbPP3zQlPxtM?=
 =?us-ascii?q?DfDhIhMwy72efnCMln2YMZQ26PArKZP7nUsV+H/e8vJ+iMZIkIuDfyMfQl5vju?=
 =?us-ascii?q?jWMnll8ZZ6WmwZwXaHWgFPR8P0qZeWbsgssGEWoSvAo+S/LlhEeBUT5UYXayWa?=
 =?us-ascii?q?U86yo/CIKnC4fDW4+sjKaA3Ce9Ap1ZeGRGBkqQHnfvcoWOQ+0MZz6KIs99jjwE?=
 =?us-ascii?q?UqCsRJU61RGusw/6yKBrLvDO9S0arp/j0Nl15+vOlRA97zB0DsKd032TQGFwhG?=
 =?us-ascii?q?8HWzg23KVnq0xn1liDybR4g+BfFdFL5PNGSAE6OYTYz+x7Ed/yXA3Bc8yNSFan?=
 =?us-ascii?q?RNWmHD4wQsgww98If0ZyBdGiggrf0CqtBr8fj6aLC4As8qLAw3jxIN5wxGvc26?=
 =?us-ascii?q?k/kVYqWMtPOneghq5k6QfTAYnFk0Gal6avcaQRxyrN9GaFzWqTs0BUSg9wUaPZ?=
 =?us-ascii?q?XX8BYkvat8j25kTHT7W2E7QoLhNBydKeKqtNctDmkE9JROn9N9jEY2K+gWGwBQ?=
 =?us-ascii?q?2WybOKd4fqf2Qd3CPACEkLiQwT/HCGNRQgCSeluW7REDtuFVf3aUP27eZ+sG+7?=
 =?us-ascii?q?TlMzzwySc01h1r+1+hkJhfycS/IfxK4EtD0mqzVuGFa93tTWC9WbqgplfaVcZ8?=
 =?us-ascii?q?494Vhd2WLYsQx9IoKvL6R4ilECdAR3ulvk1w9rBYVYjcgqsHQqwRJoJqKczlxA?=
 =?us-ascii?q?eC2X3JDqNrLMN2n94Qqga6jV2lHZztab4aMP6PU+q1X+swClDEsi83N709ZL13?=
 =?us-ascii?q?uQ/InFDA0XUZjpSEY46wB6p63GYik6/47V1WBsPbOovTPY2tMpBPEqyhCvf9pE?=
 =?us-ascii?q?NKOEFQnyE9AVBsS0KewqnUSpYQwAPOxI6KE0OMamfeOc2KG3JOZggC6mjWNf7Y?=
 =?us-ascii?q?Bn00KD6zBzSvTV0JYC2f2Y2BWIVy39jFu4rs/4g4REaiwMEWqlzijkApVcZqlz?=
 =?us-ascii?q?fYYNFGevLNe7xtR4h57xRXFY8ESvCE8B2M+sYRCSdUDy3RVM1UQLpnyqgSu5zz?=
 =?us-ascii?q?1unzAptKafxzHOw+L5eRoDO25LQnRijFj2LYi1idAaQFanbwwzmBS54kb6wrBR?=
 =?us-ascii?q?pL5jIGnLXUdIYy/2InlgUqSqrLqCYM1P6JQyvSVMSuu8YlOaSr/7oxQE1SPuBG?=
 =?us-ascii?q?9exDE9dzG3tZT1hR16iGSBLHltqHrVY91/xRDa5NbEX/5ewiIGRDVkiTnQHlW9?=
 =?us-ascii?q?P8Om/dKOm5fBs+C+UXmsVplScSnt0IOBuzG35WxsAR2jgf+znsfrHhQ90S/+z9?=
 =?us-ascii?q?NqTznHrA7gYon30KS3KeFncVNpBFPm68p6B5txko0/hJwL3Xgah5OV/WcIkGvp?=
 =?us-ascii?q?MNVb377+Y2QJRTIR39HV5w3l0lV5Ln2V34L5Smmdwsx5atm/Y2MW2Tgy49pECa?=
 =?us-ascii?q?iK97xEgTV6okCjog3Pe/h9kSwQyf8v6H4cnuEItxAhziSbArAOA0ZYOTbgmAiP?=
 =?us-ascii?q?79C7tK9XfnqgcaCs1EpimtCsFK2CogZZWHrje5YtBylw7thkMFLX0X3+8YXkeN?=
 =?us-ascii?q?jWbdIOuRyYiRbAj+5JKJ0vkvoGnzZoOWX4vXc90e40kQRu3Y2mvIiAM2hi57i2?=
 =?us-ascii?q?AhlcNj3ofc8T/iztgL1ansaX2YCvA5pgFi8KXJvuUfKnDjYSue77OAaJFT02sm?=
 =?us-ascii?q?2bFqbHHQ+D9EdmqGrCE5KxOHGSOnYZ1s9uRAWHKExcnQAUXyg6npgjGQCx38Hh?=
 =?us-ascii?q?dEZ55jYM5l/3sBdMy+RoNwXhXWfbvgundjA0SJ2HJhpM8g5C/1vVMdCZ7u9rHy?=
 =?us-ascii?q?BY+YChrBWQKmOBYQREF3oJWkuCB1DsJbSu4djA8+6FBuuxNffOYLOOqfBAWPeM?=
 =?us-ascii?q?356gzoxm/zOUPMWVInZiF+E72lZEXX1hG8TWhTQPSy8UlyLMdcKbpw28+ip4rs?=
 =?us-ascii?q?+h6vTrRRnv6JCLC7tTN9Vv5h+3jb2CN+6WmCZ2NzJY2okQyn/PzbgVxEQShD12?=
 =?us-ascii?q?dzmxDbQAsjbAQ7jNmqBMFR4UdSNyONFM76I9xQRNPc/bitXo1r93lPI1ClFFVU?=
 =?us-ascii?q?D/lcGtf8AFP2a9NFbfDkaRKLuGPSHLw93wYa6kVb1QjeBUuwestjqBD0DjPiqM?=
 =?us-ascii?q?lz/yWhCrMOFMijybPRNEtIG8dBZtFXbsTNb8ZhKnN993iCU8wacoiXPSKW4cLT?=
 =?us-ascii?q?98fltNr7KK6yNYh/R/G2pZ4XtkLemLgSCZ7+bDJ5YSsPtrBDl0lu1A7HQ7zbtV?=
 =?us-ascii?q?8D9LRPhvlCTOqd5upgLuru7awzFiXTJNpyxNiYbNul9tfe3B+4VNQ2Ts/RQD92?=
 =?us-ascii?q?ycBh0G4dx/BZmntLpdxdvPvKbyLipS/dXJ+8cVG8nTLoSAKnVyHwDuHWvxBRcF?=
 =?us-ascii?q?TDO2fVnYhlZcnevaonicspg7p4WqgJ0PUL5WTnQxF/UTEEMjG8YNdsQkFgg4mK?=
 =?us-ascii?q?KW2ZZbrUG1qwPcEZ1X?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BZAACi2hdch0O0hNFkHgEGBwaBUwcLA?=
 =?us-ascii?q?YFaghEnhF6IFosYgiGXRBSBXxIBARgTAYdWIjYHDQEDAQEBAQEBAgETAQEBCgs?=
 =?us-ascii?q?JCCkjDII2IoJlAwMBAiQZAQE3AQUJAQE+EgMxAQUBHAcSBYJSS4IBBZxPPIogg?=
 =?us-ascii?q?WwzgnYBAQWHHAgSh2uDJYEcgVc/gRGCZIUYhXaQTZBOBwKCJASPMgIWiXOHX4k?=
 =?us-ascii?q?8kAECBAIJAgUPIYEsC4F8MxowQ4JsghsMF4hehT4hIDKBBQEBjW8BAQ?=
X-IPAS-Result: =?us-ascii?q?A0BZAACi2hdch0O0hNFkHgEGBwaBUwcLAYFaghEnhF6IFos?=
 =?us-ascii?q?YgiGXRBSBXxIBARgTAYdWIjYHDQEDAQEBAQEBAgETAQEBCgsJCCkjDII2IoJlA?=
 =?us-ascii?q?wMBAiQZAQE3AQUJAQE+EgMxAQUBHAcSBYJSS4IBBZxPPIoggWwzgnYBAQWHHAg?=
 =?us-ascii?q?Sh2uDJYEcgVc/gRGCZIUYhXaQTZBOBwKCJASPMgIWiXOHX4k8kAECBAIJAgUPI?=
 =?us-ascii?q?YEsC4F8MxowQ4JsghsMF4hehT4hIDKBBQEBjW8BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,366,1539673200"; 
   d="scan'208";a="142452805"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 17 Dec 2018 09:25:20 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1732636AbeLQRWR (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 17 Dec 2018 12:22:17 -0500
Received: from mail-pl1-f196.google.com ([209.85.214.196]:43950 "EHLO
        mail-pl1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2388354AbeLQRV5 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 17 Dec 2018 12:21:57 -0500
Received: by mail-pl1-f196.google.com with SMTP id gn14so6435618plb.10
        for <linux-kernel@vger.kernel.org>; Mon, 17 Dec 2018 09:21:56 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=from:to:cc:subject:date:message-id:in-reply-to:references;
        bh=vffhfUlrlCExin749UjB4Nm/CBeftT0GbW0095v/Xho=;
        b=C+6xK+0a+lPk9/Jka+QJIqeB/MDgk+NIwssQyhCsdKazJTK6n7oJHufE+4M2VUaOta
         VuCjWVMB0oSrl6eYfOVL2IMEbPjH9hRfS3UyN2MKJx6Bz1TAu1BJaQ8+hJsCkFxVmDEG
         n4zktOwuQ/RU4YR/amHmjcaCwvJTzliiG4kyI=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references;
        bh=vffhfUlrlCExin749UjB4Nm/CBeftT0GbW0095v/Xho=;
        b=ZDmWZeTLOvYyurwE3gfv3Jyqcj2P0tkCUkPmkC88w1XNIZTwmMFc7OpX9XA8Z+avz6
         N5jHFKgHkD+QBi13Q/T7XQK8YWzjV6qBeTddWOGhp5G+k9E684LJO8jfvZ7+HpL50yKX
         MhyKgDNo9zguGqSzzi1jAVuWkAELRlQHXrT8uBkXWPhdUwfHIhK05YPygcd9h0FE6FE0
         8I1tm/3xCdNcwlJ7bzMhME5zmIBaEXThWlyeaXmNUDKjONfdcJLpdupbYetpS1MDpo1I
         TSj2zOcjaicRJOvrzrH0z4qPOe8+dXKlgLVpBF/MmhD6pw5qkxumaKROlnrYRUpR+LJL
         PxQw==
X-Gm-Message-State: AA+aEWbKxPntRZyYmmtaT7oTC7q7vqEz/m3+pe9puGpqB0ieOe5f/Mlc
        FQlcY0QucqRPf4j8LVCA5FbE+g==
X-Google-Smtp-Source: AFSGD/X1mJFY5vQ8ap8ZO5bG0Nt30OZ01y2j7owN+iuOR/CNWZSqJBLbtJD4y18lnrO8kaEQbQ9LMw==
X-Received: by 2002:a17:902:9a9:: with SMTP id 38mr13171952pln.204.1545067316335;
        Mon, 17 Dec 2018 09:21:56 -0800 (PST)
Received: from xps15.cg.shawcable.net (S0106002369de4dac.cg.shawcable.net. [68.147.8.254])
        by smtp.gmail.com with ESMTPSA id j6sm20526648pfg.126.2018.12.17.09.21.54
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
        Mon, 17 Dec 2018 09:21:55 -0800 (PST)
From: Mathieu Poirier <mathieu.poirier@linaro.org>
To: acme@kernel.org, peterz@infradead.org, gregkh@linuxfoundation.org
Cc: mingo@redhat.com, tglx@linutronix.de,
        alexander.shishkin@linux.intel.com, schwidefsky@de.ibm.com,
        heiko.carstens@de.ibm.com, will.deacon@arm.com,
        mark.rutland@arm.com, jolsa@redhat.com, namhyung@kernel.org,
        adrian.hunter@intel.com, ast@kernel.org, hpa@zytor.com,
        suzuki.poulosi@arm.com, linux-s390@vger.kernel.org,
        linux-kernel@vger.kernel.org, linux-arm-kernel@lists.infradead.org
Subject: [RESEND PATCH v5 4/6] coresight: Use PMU driver configuration for sink selection
Date: Mon, 17 Dec 2018 10:21:44 -0700
Message-Id: <1545067306-31687-5-git-send-email-mathieu.poirier@linaro.org>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1545067306-31687-1-git-send-email-mathieu.poirier@linaro.org>
References: <1545067306-31687-1-git-send-email-mathieu.poirier@linaro.org>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

This patch uses the PMU driver configuration held in event::hw::drv_config
to select a sink for each event that is created (the old sysFS way of
working is kept around for backward compatibility).

By proceeding in this way a sink can be used by multiple sessions
without having to play games with entries in sysFS.

Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
---
 drivers/hwtracing/coresight/coresight-etm-perf.c | 74 ++++++++++++++++++++----
 1 file changed, 62 insertions(+), 12 deletions(-)

diff --git a/drivers/hwtracing/coresight/coresight-etm-perf.c b/drivers/hwtracing/coresight/coresight-etm-perf.c
index f21eb28b6782..a7e1fdef07f2 100644
--- a/drivers/hwtracing/coresight/coresight-etm-perf.c
+++ b/drivers/hwtracing/coresight/coresight-etm-perf.c
@@ -4,6 +4,7 @@
  * Author: Mathieu Poirier <mathieu.poirier@linaro.org>
  */
 
+#include <linux/amba/bus.h>
 #include <linux/coresight.h>
 #include <linux/coresight-pmu.h>
 #include <linux/cpumask.h>
@@ -11,6 +12,7 @@
 #include <linux/list.h>
 #include <linux/mm.h>
 #include <linux/init.h>
+#include <linux/ioport.h>
 #include <linux/perf_event.h>
 #include <linux/percpu-defs.h>
 #include <linux/slab.h>
@@ -177,6 +179,26 @@ static void etm_free_aux(void *data)
 	schedule_work(&event_data->work);
 }
 
+static struct coresight_device *etm_drv_config_sync(struct perf_event *event)
+{
+	struct coresight_device *sink = NULL;
+	struct pmu_drv_config *drv_config = perf_event_get_drv_config(event);
+
+	/*
+	 * Make sure we don't race with perf_drv_config_replace() in
+	 * kernel/events/core.c.
+	 */
+	raw_spin_lock(&drv_config->lock);
+
+	/* Copy what we got from user space if applicable. */
+	if (drv_config->config)
+		sink = drv_config->config;
+
+	raw_spin_unlock(&drv_config->lock);
+
+	return sink;
+}
+
 static void *etm_setup_aux(struct perf_event *event, void **pages,
 			   int nr_pages, bool overwrite)
 {
@@ -190,18 +212,11 @@ static void *etm_setup_aux(struct perf_event *event, void **pages,
 		return NULL;
 	INIT_WORK(&event_data->work, free_event_data);
 
-	/*
-	 * In theory nothing prevent tracers in a trace session from being
-	 * associated with different sinks, nor having a sink per tracer.  But
-	 * until we have HW with this kind of topology we need to assume tracers
-	 * in a trace session are using the same sink.  Therefore go through
-	 * the coresight bus and pick the first enabled sink.
-	 *
-	 * When operated from sysFS users are responsible to enable the sink
-	 * while from perf, the perf tools will do it based on the choice made
-	 * on the cmd line.  As such the "enable_sink" flag in sysFS is reset.
-	 */
-	sink = coresight_get_enabled_sink(true);
+	/* First get the sink config from user space. */
+	sink = etm_drv_config_sync(event);
+	if (!sink)
+		sink = coresight_get_enabled_sink(true);
+
 	if (!sink || !sink_ops(sink)->alloc_buffer)
 		goto err;
 
@@ -454,6 +469,40 @@ static void etm_addr_filters_sync(struct perf_event *event)
 	filters->nr_filters = i;
 }
 
+static int etm_drv_config_find_sink(struct device *dev, void *data)
+{
+	struct amba_device *adev = to_amba_device(dev->parent);
+	struct resource *res = &adev->res;
+	u64 value = *((u64 *)data);
+
+	/*
+	 * The HW mapping of a component is unique.  If the value we've been
+	 * given matches the component's start address, then we must have found
+	 * the device we are looking for.
+	 */
+	if (res->start == value)
+		return 1;
+
+	return 0;
+}
+
+static void *etm_drv_config_validate(struct perf_event *event, u64 value)
+{
+	struct device *dev;
+	struct coresight_device *sink;
+
+	/* Look for the device with a res->start equal to @value. */
+	dev = bus_find_device(&coresight_bustype, NULL,
+			      &value, etm_drv_config_find_sink);
+	if (!dev)
+		return ERR_PTR(-EINVAL);
+
+	sink = to_coresight_device(dev);
+	put_device(dev);
+
+	return sink;
+}
+
 int etm_perf_symlink(struct coresight_device *csdev, bool link)
 {
 	char entry[sizeof("cpu9999999")];
@@ -498,6 +547,7 @@ static int __init etm_perf_init(void)
 	etm_pmu.addr_filters_sync	= etm_addr_filters_sync;
 	etm_pmu.addr_filters_validate	= etm_addr_filters_validate;
 	etm_pmu.nr_addr_filters		= ETM_ADDR_CMP_MAX;
+	etm_pmu.drv_config_validate	= etm_drv_config_validate;
 
 	ret = perf_pmu_register(&etm_pmu, CORESIGHT_ETM_PMU_NAME, -1);
 	if (ret == 0)
-- 
2.7.4

