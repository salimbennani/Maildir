Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 08:47:32 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 043735805CF;
	Mon, 17 Dec 2018 09:25:39 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 17 Dec 2018 09:25:38 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AU7ap3RRxWYQaGGU9h6yVfikvqtpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YBKBt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KptVRTmij?=
 =?us-ascii?q?oINyQh/W/XlMJ+kaxVrhGmqRN9zY7Ue5mVOfhlc6/BYd8XX3ZNU9xNWyBdBI63?=
 =?us-ascii?q?cosBD/AGPeZdt4TzoEEBrQe+BQmtGuzv1yJDiGXx3a07yeQhEB/J3BY9FN8JtX?=
 =?us-ascii?q?Tbtsn1NKcTUe+r0anE1y3Db/RX2Tfn6YjHbAohrOqIXbJxd8re01MvFwTfglWX?=
 =?us-ascii?q?s4zlMCqY2+IQuGaY9+ptTfyjh3Ijpg1rvzSiyNkghpPUio8W1lzI7yR0zYQtKd?=
 =?us-ascii?q?C5S0N3e8OoHZRSui2ANIZ6WN0uTmFntSs817YIo4S0fDIQx5Qi3xPfa+KIc4yP?=
 =?us-ascii?q?4h/7SuaRLil3hGh/dLK8mRmy606gxfP4VsWu11ZKtCVFnsHNtnALyRPT9tCKRu?=
 =?us-ascii?q?Vh8kqlwzqDyg7e5v9eLUwplqfXN4Qtz78ym5YLtETMBC72mEH4jK+McUUk//Cl?=
 =?us-ascii?q?6+DmYrXgu5+dOJZ4igLgPaQ0nMywH+A4PhEJX2mV/+Szyqfj8FbnQLVFkPI2iL?=
 =?us-ascii?q?PVsJPEKsQBoK62HQtV3pwk6xalADeqyM4YkmUfLFJZZBKHiJDkO1XPIPD7E/iz?=
 =?us-ascii?q?mVutkCpwyvDCP73hBIjNL3fZnLfge7Z991BTyA4pwd9D4JJUD6kLIOjvVU/pqN?=
 =?us-ascii?q?zYEhg5PhS0w+n9CdV9ypkRWWWVDq+ZLaPdq1mI5u00LumIZY8Vviv9Kvc/6/7v?=
 =?us-ascii?q?i385hUESfa2z0ZQLb3C4G+xsI1+Fbnr0ntcBDWAKsxI8TOztllKOSz1TZ3G0X6?=
 =?us-ascii?q?I64TE2E4amDYbFRoCwj72Nxia7HptKZm9YDlCAC2vnd4KBW/0UciKdPtdhkiAY?=
 =?us-ascii?q?VbimU4IuzwqutA/9y7pkNObU4DcXtZD42dhx5u3Tkwwy9DNuA8Sc1WGNU397nm?=
 =?us-ascii?q?cSSzAq26B/pFR3yk2f3qhgn/xYCdtT6utKUgggM57Q1eh6C9HoVQLHcdeEU1Km?=
 =?us-ascii?q?QtSgATEsQdM92d4OY0BhG9q8ihDPxTalA7gQl7aTHpw77rrc32TtJ8Z603vJyb?=
 =?us-ascii?q?Muj0c4TcdVNW2pnKh/9xPNCI7PlEmZk6WqdaEY3CPW8GeDzGyOvFxXUQJqUKXF?=
 =?us-ascii?q?W2wfaVXSrdjj+kzCSLquA6w9MgRd0c6CNrdKatrxgFpbXvjjJsrRb3ixm2iqAx?=
 =?us-ascii?q?aI3a2DbIzxdmUZ3SXdDlUEkg8J8XaHMwg+Gjmuo2bEADNyElLvZlvm8fNip3Oj?=
 =?us-ascii?q?Uk800waKYlV917q0/x4VguCcS/MT374epCctsTJ0HEy539LXDdqAqBFsfKFdYd?=
 =?us-ascii?q?M7/VdG2njVtw17Ppy8Ma9igkQSfBhwv0Przx93EJlPkdA2rHM2ywp/MbiX0Fdf?=
 =?us-ascii?q?eDKXw5/xOqfbJXLv/B+ycaHW3FLe0NGI+qoU7PQ4qlPjvBymF0Y48nVn1cVV3G?=
 =?us-ascii?q?WY5pnQEAUSVpfxWF4t9xdmv7HafjU954TM2HxsLKm4qCPN18goBesl0Bmgedhf?=
 =?us-ascii?q?PbiAFA/zFc0aGsevJPYrm1ivchILIuRS+LQoMMOhcvuMwLSrM/p4nDK6kWRH55?=
 =?us-ascii?q?hw0liN9yVgUOHIxYsKw/aC0guBSTj8llahvtnrlo9eYTEdA3SwyTLjBI5XfaBy?=
 =?us-ascii?q?eYcLCWGzI8y43Nl+hpjtW2JG+16nHV8JxMipeR+KZVznwQJQzVgXoWCgmSagzz?=
 =?us-ascii?q?10kislr6qF0CzV3uTicgEKOmpKRGlkkFftLpK4j9EcXEi0cQcpkAGp6lr9x6he?=
 =?us-ascii?q?vK5/NXXcQV9UfyjqKGFvSqmwuaCYY85M65Motj9bUP+mblCZSb79oh0a3D3lH2?=
 =?us-ascii?q?ZFwDA7djequoj2nhBgiWKdKmpzo2Tdec1q2Rjf49ncT+ZL3jUaXCl4lSXXBl+k?=
 =?us-ascii?q?Mtip59qUkI3PsuK/V2KnTZBTdSjrzYWdtCq0/2FqABu/n+ytld3jCwQ1zSj719?=
 =?us-ascii?q?xyXyXSsBn8epXr17i9Me9/fUlnHl7859B6GoFjiIQwgp4Q1GMehpWU+3oHjGjy?=
 =?us-ascii?q?Pc9a2aL4cHoCWzoLz8TJ7wji3U1pNmiJyJ7hVnWB3sthYMG3YmYX2iI+9c9GEq?=
 =?us-ascii?q?mV46JfnStpvFW4txnebuZnnjcS0vYu7H8ag+cUuAsi1CmdA7YSHVVGMizojRiH?=
 =?us-ascii?q?89e+rKBPbma1bbewzFZ+ncymDLyavgFcX3P5do0jHCBq6MV/LUnM0Gby6oz/fN?=
 =?us-ascii?q?nQbNQTtgCbkhvajuhVLo4xmeQOhSZ9JW39unglwfYhjRNyxZG6oJSHK2J18a2i?=
 =?us-ascii?q?GBFYMTn1Z94J9jHpkKZThcKW34GpHpV8FTQHRproTfS0ED0MsfTrLRqBEDo5qn?=
 =?us-ascii?q?2DA7rQARef6Ft6r3LIC52rNWuYJHwHwtV5XhWdOFZTgAMJXDU5g545EBqlxNf6?=
 =?us-ascii?q?fUd95zAR4EP4qxRWxuJpMRn/TnnQpAOyZjgoT5ifKQJc7hte6EfNLcye8uVzEj?=
 =?us-ascii?q?lY/52msQyNM3GbaB5ODW0TQUyEAFbjPra16NnE8uiYAPe+LvTUbbWPr+xeS+mH?=
 =?us-ascii?q?xZa13oR6+DaMM92FPmN+AP0jxkpDQXd5FtzZmzoRSiwXlCHNb8+BqBe/4C13qc?=
 =?us-ascii?q?+//+rxWALy/ouCEL9SMdRp+xCrjqaPLe+QhCBlKTlG0pMA32PHyL8a3FQKkSFh?=
 =?us-ascii?q?ayGtEagctS7KVK/fgLJXAAUBayxtNMpE9aY83ghWNM7fi9P10KN4j/EvB1dEU1?=
 =?us-ascii?q?zhht+mZcgQL26hM1PHAV6BNK6aKj3T38H3faS8RKVMjOVVsh28oyqUH1X/MTSD?=
 =?us-ascii?q?iTbpUQuiMeVNjCGdIRxft5uxchdrCWj/Ut3mbge3P8NwjT0z2bc0nG/FNXYAMT?=
 =?us-ascii?q?hgdENAtr2R4jlegvV6GmxB6GJqLOiEmymD6enYJY0bsf9qAiRyiuJb7242y7pT?=
 =?us-ascii?q?7CFYWvN1nDHeocJpo1GjwaGzzW9uWx9DgjVGnoSGuQNlI6qdvoFNRXve7joM62?=
 =?us-ascii?q?uKAhgHrtcjDcfg/+hf0NXAl6LbLDZE7sLa+tYaC8HIKcWBdn07PknHAjnRWS4M?=
 =?us-ascii?q?UT6qOHyXv0tcivCf7DXBq5EmqpnhhdwWTb5BVVEvPvcbDE1/G5oFOpghDWBsqq?=
 =?us-ascii?q?KSkMNdvSn2lxLWXsgP5p0=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AfAADP2xdch0O0hNFkHgEGBwaBUQkLA?=
 =?us-ascii?q?YFaghEnjHSLGIIhl0SBcxIBARgTAYdWIjQJDQEDAQEBAQEBAgETAQEBCgsJCCk?=
 =?us-ascii?q?jDII2IoJlAwMBAiQZAQE3AQUJAQE+EgMxAQUBHAcSBYJSS4IBBZxSPIoggWwzg?=
 =?us-ascii?q?nYBAQWHHAgSh2uDJYEcgVc/gRGNcpBNkE4HAoIkBI8yAhaJc4dfLIkQkAECBAI?=
 =?us-ascii?q?JAgUPIYElgg4zGjCDL4IbDBeIXoVfIDKBBQEBjW8BAQ?=
X-IPAS-Result: =?us-ascii?q?A0AfAADP2xdch0O0hNFkHgEGBwaBUQkLAYFaghEnjHSLGII?=
 =?us-ascii?q?hl0SBcxIBARgTAYdWIjQJDQEDAQEBAQEBAgETAQEBCgsJCCkjDII2IoJlAwMBA?=
 =?us-ascii?q?iQZAQE3AQUJAQE+EgMxAQUBHAcSBYJSS4IBBZxSPIoggWwzgnYBAQWHHAgSh2u?=
 =?us-ascii?q?DJYEcgVc/gRGNcpBNkE4HAoIkBI8yAhaJc4dfLIkQkAECBAIJAgUPIYElgg4zG?=
 =?us-ascii?q?jCDL4IbDBeIXoVfIDKBBQEBjW8BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,366,1539673200"; 
   d="scan'208";a="57222004"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 17 Dec 2018 09:25:26 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2388346AbeLQRV4 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 17 Dec 2018 12:21:56 -0500
Received: from mail-pl1-f195.google.com ([209.85.214.195]:34051 "EHLO
        mail-pl1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2387698AbeLQRVz (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 17 Dec 2018 12:21:55 -0500
Received: by mail-pl1-f195.google.com with SMTP id w4so6450076plz.1
        for <linux-kernel@vger.kernel.org>; Mon, 17 Dec 2018 09:21:55 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=from:to:cc:subject:date:message-id:in-reply-to:references;
        bh=ydPIIvwp7JBz3247k2TeCqAjfpttVF2V+RHCfDoclY8=;
        b=bFXHmWDgkZqoXIobAE+FI43Ux8IdZjsFC39FgIUq/Kr8vG1aXSlYrZMeGMkvMMVmbc
         FX+9kU9osL2/DFcIxUBiUDVlrz9H0rYNIEcIwwT/IyZP7ILrWbQAqAR7uwtuNAk7Uvzb
         OSqQEJ/43Bn+uyCieHa6d0zJ+GUJahZUjSnKA=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references;
        bh=ydPIIvwp7JBz3247k2TeCqAjfpttVF2V+RHCfDoclY8=;
        b=lJA30JDbVbuVsFr5l5m6TkBic5G6Fm9SzgreSz9JCJynQ1OFmBJc+Da6ntSFaH01ho
         qyE/iqPkIjsxcfk8ObrNjUctJ38QTHkPrBxxnhCCIluQU4uVG8KRMLPn0ctVk7x0xUel
         1V+Lv9KYQ3MiNZrN8F7mkUqnBEWQh+fvhvtWfRBd0X8UuJ09GyMY+3E8AN2a3nTfV04t
         pfIFDFmEvQII1ZYhkhQfNMrkvfcgCV7yY16jJWW8LPCHpeQAbNnwfIu8UxAF31UZ1llt
         2ERM17Pg1kryODpTzUJwXMSgeEyRH8Ga54nqDfFoNg9CQCN2T5mX8E40X8hv87u4xxDA
         pM6A==
X-Gm-Message-State: AA+aEWb2LIB3ZipH6fFB7qNLnJIPxG7Kr0jIFm4EIswYnWGgQUDYiVmM
        hLCKCpLqFRTem0Jrqz5jJvDvgQ==
X-Google-Smtp-Source: AFSGD/ViVo9Vo9I5Q/7QnjAgKLWTg7yhDfUZBvnYYjabUXPrJlNMEHKcEKBcgeu16eDcBeCJFf3A4g==
X-Received: by 2002:a17:902:d202:: with SMTP id t2mr13608602ply.193.1545067314681;
        Mon, 17 Dec 2018 09:21:54 -0800 (PST)
Received: from xps15.cg.shawcable.net (S0106002369de4dac.cg.shawcable.net. [68.147.8.254])
        by smtp.gmail.com with ESMTPSA id j6sm20526648pfg.126.2018.12.17.09.21.53
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
        Mon, 17 Dec 2018 09:21:54 -0800 (PST)
From: Mathieu Poirier <mathieu.poirier@linaro.org>
To: acme@kernel.org, peterz@infradead.org, gregkh@linuxfoundation.org
Cc: mingo@redhat.com, tglx@linutronix.de,
        alexander.shishkin@linux.intel.com, schwidefsky@de.ibm.com,
        heiko.carstens@de.ibm.com, will.deacon@arm.com,
        mark.rutland@arm.com, jolsa@redhat.com, namhyung@kernel.org,
        adrian.hunter@intel.com, ast@kernel.org, hpa@zytor.com,
        suzuki.poulosi@arm.com, linux-s390@vger.kernel.org,
        linux-kernel@vger.kernel.org, linux-arm-kernel@lists.infradead.org
Subject: [RESEND PATCH v5 3/6] perf/aux: Make perf_event accessible to setup_aux()
Date: Mon, 17 Dec 2018 10:21:43 -0700
Message-Id: <1545067306-31687-4-git-send-email-mathieu.poirier@linaro.org>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1545067306-31687-1-git-send-email-mathieu.poirier@linaro.org>
References: <1545067306-31687-1-git-send-email-mathieu.poirier@linaro.org>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

When pmu::setup_aux() is called the coresight PMU needs to know which
sink to use for the session by looking up the information in the
drv_config field of the hw_perf_event structure.

As such simply replace the cpu information by the complete perf_event
structure and change all affected customers.

Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
---
 arch/s390/kernel/perf_cpum_sf.c                  | 6 +++---
 arch/x86/events/intel/bts.c                      | 4 +++-
 arch/x86/events/intel/pt.c                       | 5 +++--
 drivers/hwtracing/coresight/coresight-etm-perf.c | 6 +++---
 drivers/perf/arm_spe_pmu.c                       | 6 +++---
 include/linux/perf_event.h                       | 2 +-
 kernel/events/ring_buffer.c                      | 2 +-
 7 files changed, 17 insertions(+), 14 deletions(-)

diff --git a/arch/s390/kernel/perf_cpum_sf.c b/arch/s390/kernel/perf_cpum_sf.c
index 7bf604ff50a1..df92c2af99b6 100644
--- a/arch/s390/kernel/perf_cpum_sf.c
+++ b/arch/s390/kernel/perf_cpum_sf.c
@@ -1600,7 +1600,7 @@ static void aux_sdb_init(unsigned long sdb)
 
 /*
  * aux_buffer_setup() - Setup AUX buffer for diagnostic mode sampling
- * @cpu:	On which to allocate, -1 means current
+ * @event:	Event the buffer is setup for, event->cpu == -1 means current
  * @pages:	Array of pointers to buffer pages passed from perf core
  * @nr_pages:	Total pages
  * @snapshot:	Flag for snapshot mode
@@ -1612,8 +1612,8 @@ static void aux_sdb_init(unsigned long sdb)
  *
  * Return the private AUX buffer structure if success or NULL if fails.
  */
-static void *aux_buffer_setup(int cpu, void **pages, int nr_pages,
-			      bool snapshot)
+static void *aux_buffer_setup(struct perf_event *event, void **pages,
+			      int nr_pages, bool snapshot)
 {
 	struct sf_buffer *sfb;
 	struct aux_buffer *aux;
diff --git a/arch/x86/events/intel/bts.c b/arch/x86/events/intel/bts.c
index 24ffa1e88cf9..7139f6bf27ad 100644
--- a/arch/x86/events/intel/bts.c
+++ b/arch/x86/events/intel/bts.c
@@ -77,10 +77,12 @@ static size_t buf_size(struct page *page)
 }
 
 static void *
-bts_buffer_setup_aux(int cpu, void **pages, int nr_pages, bool overwrite)
+bts_buffer_setup_aux(struct perf_event *event, void **pages,
+		     int nr_pages, bool overwrite)
 {
 	struct bts_buffer *buf;
 	struct page *page;
+	int cpu = event->cpu;
 	int node = (cpu == -1) ? cpu : cpu_to_node(cpu);
 	unsigned long offset;
 	size_t size = nr_pages << PAGE_SHIFT;
diff --git a/arch/x86/events/intel/pt.c b/arch/x86/events/intel/pt.c
index 3a0aa83cbd07..f7ec5c5fbf0a 100644
--- a/arch/x86/events/intel/pt.c
+++ b/arch/x86/events/intel/pt.c
@@ -1104,10 +1104,11 @@ static int pt_buffer_init_topa(struct pt_buffer *buf, unsigned long nr_pages,
  * Return:	Our private PT buffer structure.
  */
 static void *
-pt_buffer_setup_aux(int cpu, void **pages, int nr_pages, bool snapshot)
+pt_buffer_setup_aux(struct perf_event *event, void **pages,
+		    int nr_pages, bool snapshot)
 {
 	struct pt_buffer *buf;
-	int node, ret;
+	int node, ret, cpu = event->cpu;
 
 	if (!nr_pages)
 		return NULL;
diff --git a/drivers/hwtracing/coresight/coresight-etm-perf.c b/drivers/hwtracing/coresight/coresight-etm-perf.c
index abe8249b893b..f21eb28b6782 100644
--- a/drivers/hwtracing/coresight/coresight-etm-perf.c
+++ b/drivers/hwtracing/coresight/coresight-etm-perf.c
@@ -177,15 +177,15 @@ static void etm_free_aux(void *data)
 	schedule_work(&event_data->work);
 }
 
-static void *etm_setup_aux(int event_cpu, void **pages,
+static void *etm_setup_aux(struct perf_event *event, void **pages,
 			   int nr_pages, bool overwrite)
 {
-	int cpu;
+	int cpu = event->cpu;
 	cpumask_t *mask;
 	struct coresight_device *sink;
 	struct etm_event_data *event_data = NULL;
 
-	event_data = alloc_event_data(event_cpu);
+	event_data = alloc_event_data(cpu);
 	if (!event_data)
 		return NULL;
 	INIT_WORK(&event_data->work, free_event_data);
diff --git a/drivers/perf/arm_spe_pmu.c b/drivers/perf/arm_spe_pmu.c
index 54ec278d2fc4..4dcd7bf14dcc 100644
--- a/drivers/perf/arm_spe_pmu.c
+++ b/drivers/perf/arm_spe_pmu.c
@@ -824,10 +824,10 @@ static void arm_spe_pmu_read(struct perf_event *event)
 {
 }
 
-static void *arm_spe_pmu_setup_aux(int cpu, void **pages, int nr_pages,
-				   bool snapshot)
+static void *arm_spe_pmu_setup_aux(struct perf_event *event, void **pages,
+				   int nr_pages, bool snapshot)
 {
-	int i;
+	int i, cpu = event->cpu;
 	struct page **pglist;
 	struct arm_spe_pmu_buf *buf;
 
diff --git a/include/linux/perf_event.h b/include/linux/perf_event.h
index 8e69b7e309e7..b772ea2441a7 100644
--- a/include/linux/perf_event.h
+++ b/include/linux/perf_event.h
@@ -420,7 +420,7 @@ struct pmu {
 	/*
 	 * Set up pmu-private data structures for an AUX area
 	 */
-	void *(*setup_aux)		(int cpu, void **pages,
+	void *(*setup_aux)		(struct perf_event *event, void **pages,
 					 int nr_pages, bool overwrite);
 					/* optional */
 
diff --git a/kernel/events/ring_buffer.c b/kernel/events/ring_buffer.c
index 4a9937076331..857308295f63 100644
--- a/kernel/events/ring_buffer.c
+++ b/kernel/events/ring_buffer.c
@@ -658,7 +658,7 @@ int rb_alloc_aux(struct ring_buffer *rb, struct perf_event *event,
 			goto out;
 	}
 
-	rb->aux_priv = event->pmu->setup_aux(event->cpu, rb->aux_pages, nr_pages,
+	rb->aux_priv = event->pmu->setup_aux(event, rb->aux_pages, nr_pages,
 					     overwrite);
 	if (!rb->aux_priv)
 		goto out;
-- 
2.7.4

