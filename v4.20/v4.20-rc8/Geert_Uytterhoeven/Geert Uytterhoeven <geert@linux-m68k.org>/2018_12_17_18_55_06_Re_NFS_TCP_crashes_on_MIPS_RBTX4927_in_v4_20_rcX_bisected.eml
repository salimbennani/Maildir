Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 08:48:40 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id F01D15805FC;
	Mon, 17 Dec 2018 10:55:24 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 17 Dec 2018 10:55:24 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A4f5VOBH4oO6RbeiQ5S3zdZ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75osS6bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJVyJPHJ6y?=
 =?us-ascii?q?YYUMAeQGP+lYoYbyqEcBoxulHQmhBvjiyiNLi3LswaE3yfgtHAPA0Qc9H9wOqn?=
 =?us-ascii?q?PUrNDtOakTT++60rPIzSneZPxY2Tb99JTIfQ47ofGMWrJ/b9TRxlcpFwjYiViQ?=
 =?us-ascii?q?ppLqMC2P1uQRqGWb6+tgVeSyi28osg1xpzmiy8QvioXTgYIV0F/E+Dx/zY0oK9?=
 =?us-ascii?q?O4T0t7bsSlEJtWryyaM4p2QsU/Q2BnoSo6z7wGuYagfCQQz5Qn3RHfZ+SEc4eW?=
 =?us-ascii?q?+BLjUvieITNiiHJiYrK/iA6+8Uyhyu36S8m1309GrixLktnXrHwN0AbT6seBR/?=
 =?us-ascii?q?Bg/UmhwS6C2x7P5uxAO0w4iKTWJ4A7zrItlZcfrV7PEy70lUnuj6KbeV8o9vWs?=
 =?us-ascii?q?5unoeLnqu4KQO5Juhg3jM6kjlMqyCvkiPAcURWiU4+G82aXj/ULnRLVKieU7kr?=
 =?us-ascii?q?fWsJ/EP8QXvK25DBFP0oYl9Rm/Cy2q0NMCnXkINF5FeRSHgJb1O1zWPvz0EfOy?=
 =?us-ascii?q?j06xnDpl2fzKJKDtD5bRInTZkbrsf65x60tGxwoyydBf6YhUCrYEIP/rXk/xtd?=
 =?us-ascii?q?rYDgI2MgCtwOboFs991oUAVmKLG6OZN63TsVmW6eI1OOSMeoAVtyjnK/Q/5P7h?=
 =?us-ascii?q?k2U5mVkDcqmtx5cXb2q4Hvt+L0WDfXXsmssBEXsNvgcmSOzqiV6CXiBJa3e9Qq?=
 =?us-ascii?q?Ix/TU7CIOgDYfeSYGhmr2B3CGnHpJIYmBKEEyDEXDtd4+cQfcDdDqSItN9kjwD?=
 =?us-ascii?q?TbWhS5Uu1RCytADgzLprNOrU+jACupLl29h4/OnTlRA09TxpAMWRyWCNT2donm?=
 =?us-ascii?q?wWQz86xrxwoUt4yl2by6h3n+RYFcBP5/NOSgo6N5ncwPJgB9DxXQLBeNGJSFG9?=
 =?us-ascii?q?T9WiADExSM8xwtAUb0Z8HdWikg7M3y6wD7AJkLyLAYQ+8rjA0HjpO8Z913HG2b?=
 =?us-ascii?q?E7gFk9QstPMm6mirRl9wfJBY7EiEGZl6esdaQB0y/B7maDzWySvE5GVA58S7nK?=
 =?us-ascii?q?XXcaZkHOt9T2+lvCT6OyCbQgKgZBytSNKq1QZt3tjFVJXvHjONvFbmK1mmewAw?=
 =?us-ascii?q?uIx7yWYIrrfWUdwDvSCEwenw8P+naGMBA0Bj29rGLGEDxuCVXvblvx/uZktnO0?=
 =?us-ascii?q?UFU4zwGQYE1nzLq65BgVifuYS/MQ27IEvDwsqzF1HFa7wtLXBMCMpwtnfKVAf9?=
 =?us-ascii?q?w95E1L2n7etwx4JpagNbxthkYCcwRruEPjzwh4BZ9ekcc0tn8qzBB9KaSD0Fxf?=
 =?us-ascii?q?cTOVxpTwOrzRKmnv8xGjca/W2lfC0NmI/qcD8ug3q1LmvAuxDEot721n08VJ03?=
 =?us-ascii?q?ub/pjKEAsSUZf2UkYr9xh7p6vWYjUn64PTz31sNai0sjnN298yAOslyxCgf8pQ?=
 =?us-ascii?q?Ma+eFQ/yFdEaCNaqKOAwh1epaRcENvhI9KEoJ8Oma+eG2KmzMel6mDKpk2tG75?=
 =?us-ascii?q?59006W7CV8V/PH0IwDw/Gb2QuHSSzxjFOgssDxhIBFaiseHmu5ySj4GoFRYrd+?=
 =?us-ascii?q?cpoMCWerO8e33Mlxh4bxW35E816uH1MH2NKzdRWOdVD83A1Q2l4RoXyogia4yz?=
 =?us-ascii?q?10kzc0rquQxiDOwuLidAYZNW5PXmVtkVDsIY2shdAAQEeodxQplAei5Uvi3ahb?=
 =?us-ascii?q?pbhwIHPJQUhVeCj6NWdiXbWqtrqDesJA9IknsSFKX+uie1CaTbj9rgAe0yPiGW?=
 =?us-ascii?q?te2T86eyurupX/gxx1lmadIGxvo3refMF63Q3f68DERf5NwjoGQzF1iDnWBlSm?=
 =?us-ascii?q?P9il586Ul4rFsu2lU2KhV5tTcTTkzI+atSu743FqDgO7n/yphtLnFg062zfh19?=
 =?us-ascii?q?Z2TSXIsAr8Yo7z2qS4K+1nZEpoBFz768ZgAYFxiIgwhJIR2XgcmJqV+2EKkWPy?=
 =?us-ascii?q?MdVdxKL/Y2ABRT8Nw97J/gfl3FdvIW6Ox4L8Tn+d2NduZ8GmYmMK3SIw98BLB7?=
 =?us-ascii?q?2T7LBenyt1o1y4oBnVYfh8mDcd1PQv5GQbg+EPpAoi0CGdDqoOEklfOCzmjw6I?=
 =?us-ascii?q?4MymrKVLeGavdqC91ElkktCgFr2CohxcV2z/epctBiJw6sR/MFTR0Hz88I3ked?=
 =?us-ascii?q?/Qbc4NuR2QiRvPk+9VKJcpnPoQmSVnIX79vWEiy+MjiBxu3JK6s5KdJ2Rj4q25?=
 =?us-ascii?q?GQJYOSPvZ8wI5D7tl6lek92S34CuGJVhBzoKUIHpTfKuDDIdq/DnOxySHz07r3?=
 =?us-ascii?q?eRAaDfEhOH6Ed6s3LPFIimN22QJHkc19ljRQOSJEpCgAAPRzU6n4U0FgSrxMzn?=
 =?us-ascii?q?bUd46Sod5l/+qhtQ1O1oMwPzXXvYpAetcj00UoSQLAJK7gFe4EfYKdeR4fh0Hy?=
 =?us-ascii?q?Fc452ttgiNKnGAagRMDGEJXFGEBl/5Mrmv49nA7/aXBu6kI/TSZrWOrPRUV+2U?=
 =?us-ascii?q?ypK3zotm4zGMO92NPnZ4Cv00xFFDUWplG8jDmDUPVi8Xlz/Lb8GBvxex4Sl3rs?=
 =?us-ascii?q?G58PT2VwPj/4qPC71OMdpx/xC6m7uMN+mVhCxhMzZXyosMxWPUyLgYxFMTiyZu?=
 =?us-ascii?q?dyS0EbQdryHNSrjcmrRQDx4dZCN+L89I76M63glQNs/XkNL11rhkjvErD1dJT0?=
 =?us-ascii?q?DumsasZcYSOWGyKEvHBFqXNLSBPTDLw9/4YaK/Sb1TjeVYrR6wuSycE0/sIDuD?=
 =?us-ascii?q?jSTpVwu0POFIjSGbOgFeuY6nfhZsD2jjUMzpahmhPNBrij02xKU+hmnWOm4ELT?=
 =?us-ascii?q?h8b0RNo6WK4iNFmfp/AXJO73p/IemAmiaU9O3YKpcQsft2DSV4jeNa4HImy7RL?=
 =?us-ascii?q?6CFIXuB6mCzXrtR2uVGpjvGPyiZ7UBpJsjtLmIOLvUB4NarF7JVPRXbE8wwL7W?=
 =?us-ascii?q?iLDxQKpt1lCsDguqxKy9jPkr7zJylG897O4cQcAM3UItqdMHU9KRrpBCLUDAwd?=
 =?us-ascii?q?QD+rL27fgUldkPCU9nKNr5k6qoLjmJwBSrJAUFw1F/UaCllqHdAYIZd3WC8knq?=
 =?us-ascii?q?CfjMIS+XW+qxzRF41mucX7TPWUDb3KOTWdgLNZfAdAla/iKoIfM5zT20Vnb1Rg?=
 =?us-ascii?q?h5zDEEeWVtdI9H5PdAgx9WpA/WJiBlAix17ocAOq7WEeE7bgkRM7kBdWZeUr6S?=
 =?us-ascii?q?ep5glnJRzNviRmwxp5osnsnT3EKG25F6y3R4wDTnOs70U=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ATAABP8Bdch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBAYJogQIng3yIGYt4gg0Ul0SBcywNBgGHViI0CQ0BAwEBAQEBAQI?=
 =?us-ascii?q?BEwEBAQoLCQgpIwxCAQwBgWYkAYJhAQEBAQIBAQIgBAsBRgUBCQEBChgCAiYCA?=
 =?us-ascii?q?gM5GwYTBQ8HgwcBgXgIBAEKqDF8M4QtAQMChXGBC4ZyhEEXgX+BEYMSgUGBRBk?=
 =?us-ascii?q?DAYE/AQEKAoMaglcCiR6CGIpSixEIAYIohGWKQiNgkHKOMox4gg59CIMnCQmCE?=
 =?us-ascii?q?gMXiF6FQD8BMQEBgQADAQEhEwsBgRSJTgEOFwSCIwEB?=
X-IPAS-Result: =?us-ascii?q?A0ATAABP8Bdch0O0hNFjHAEBAQQBAQcEAQGBUQcBAQsBAYJ?=
 =?us-ascii?q?ogQIng3yIGYt4gg0Ul0SBcywNBgGHViI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgpI?=
 =?us-ascii?q?wxCAQwBgWYkAYJhAQEBAQIBAQIgBAsBRgUBCQEBChgCAiYCAgM5GwYTBQ8Hgwc?=
 =?us-ascii?q?BgXgIBAEKqDF8M4QtAQMChXGBC4ZyhEEXgX+BEYMSgUGBRBkDAYE/AQEKAoMag?=
 =?us-ascii?q?lcCiR6CGIpSixEIAYIohGWKQiNgkHKOMox4gg59CIMnCQmCEgMXiF6FQD8BMQE?=
 =?us-ascii?q?BgQADAQEhEwsBgRSJTgEOFwSCIwEB?=
X-IronPort-AV: E=Sophos;i="5.56,366,1539673200"; 
   d="scan'208";a="56245784"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 17 Dec 2018 10:55:22 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1732187AbeLQSzU (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 17 Dec 2018 13:55:20 -0500
Received: from laurent.telenet-ops.be ([195.130.137.89]:59500 "EHLO
        laurent.telenet-ops.be" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728163AbeLQSzT (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 17 Dec 2018 13:55:19 -0500
Received: from ramsan ([84.194.111.163])
        by laurent.telenet-ops.be with bizsmtp
        id D6vD1z00R3XaVaC016vDK1; Mon, 17 Dec 2018 19:55:16 +0100
Received: from rox.of.borg ([192.168.97.57])
        by ramsan with esmtp (Exim 4.90_1)
        (envelope-from <geert@linux-m68k.org>)
        id 1gYy2r-00045Q-D1; Mon, 17 Dec 2018 19:55:13 +0100
Received: from geert by rox.of.borg with local (Exim 4.90_1)
        (envelope-from <geert@linux-m68k.org>)
        id 1gYy2r-0005zV-Ai; Mon, 17 Dec 2018 19:55:13 +0100
From: Geert Uytterhoeven <geert@linux-m68k.org>
To: Trond Myklebust <trondmy@hammerspace.com>
Cc: Alexander Viro <viro@zeniv.linux.org.uk>,
        Atsushi Nemoto <anemo@mba.ocn.ne.jp>,
        Ralf Baechle <ralf@linux-mips.org>,
        Paul Burton <paul.burton@mips.com>,
        James Hogan <jhogan@kernel.org>, linux-nfs@vger.kernel.org,
        linux-mips@vger.kernel.org, linux-kernel@vger.kernel.org,
        Geert Uytterhoeven <geert@linux-m68k.org>
Subject: Re: NFS/TCP crashes on MIPS/RBTX4927 in v4.20-rcX (bisected)
Date: Mon, 17 Dec 2018 19:55:06 +0100
Message-Id: <20181217185506.22976-1-geert@linux-m68k.org>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <f322eb9ee0cac75f98d188b46843c2df00485f35.camel@hammerspace.com>
References: <f322eb9ee0cac75f98d188b46843c2df00485f35.camel@hammerspace.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

	Hi Trond,

(For the newly added CCs, first message was
https://lore.kernel.org/lkml/CAMuHMdVJr0PwvJg3FeTCy7vxuyY1=S1tPLHO7hPsoZX4wZ+-cQ@mail.gmail.com/)

> On Mon, Dec 17, 2018 at 3:51 PM Trond Myklebust <trondmy@hammerspace.com> wrote:
> > On Mon, 2018-12-17 at 15:03 +0100, Geert Uytterhoeven wrote:
> > > On Wed, Dec 5, 2018 at 3:47 PM Geert Uytterhoeven <
> > > geert@linux-m68k.org> wrote:
> > > > On Wed, Dec 5, 2018 at 2:45 PM Trond Myklebust <
> > > > trondmy@hammerspace.com> wrote:
> > > > > On Wed, 2018-12-05 at 14:41 +0100, Geert Uytterhoeven wrote:
> > > > > > On Wed, Dec 5, 2018 at 2:11 PM Atsushi Nemoto <
> > > > > > anemo@mba.ocn.ne.jp>
> > > > > > wrote:
> > > > > > > On Tue, 4 Dec 2018 14:53:07 +0100, Geert Uytterhoeven <
> > > > > > > geert@linux-m68k.org> wrote:
> > > > > > > > I found similar crashes in a report from 2006, but of
> > > > > > > > course the
> > > > > > > > code
> > > > > > > > has changed too much to apply the solution proposed there
> > > > > > > > (
> > > > > > > > https://www.linux-mips.org/archives/linux-mips/2006-09/msg00169.html
> > > > > > > > ).
> > > > > > > >
> > > > > > > > Userland is Debian 8 (the last release supporting "old"
> > > > > > > > MIPS).
> > > > > > > > My kernel is based on v4.20.0-rc5, but the issue happens
> > > > > > > > with
> > > > > > > > v4.20-rc1,
> > > > > > > > too.
> > > > > > > >
> > > > > > > > However, I noticed it works in v4.19! Hence I've bisected
> > > > > > > > this,
> > > > > > > > to commit
> > > > > > > > 277e4ab7d530bf28 ("SUNRPC: Simplify TCP receive code by
> > > > > > > > switching
> > > > > > > > to using
> > > > > > > > iterators").
> > > > > > > >
> > > > > > > > Dropping the ",tcp" part from the nfsroot parameter also
> > > > > > > > fixes
> > > > > > > > the issue.
> > > > > > > >
> > > > > > > > Given RBTX4927 is little endian, just like my arm/arm64
> > > > > > > > boards,
> > > > > > > > it's probably
> > > > > > > > not an endianness issue.  Sparse didn't show anything
> > > > > > > > suspicious
> > > > > > > > before/after
> > > > > > > > the guilty commit.
> > > > > > > >
> > > > > > > > Do you have a clue?
> > > > > > >
> > > > > > > If it was a cache issue, disabling i-cache or d-cache
> > > > > > > completely
> > > > > > > might
> > > > > > > help understanding the problem.  I added TXx9 specific
> > > > > > > "icdisable"
> > > > > > > and
> > > > > > > "dcdisable" kernel options for debugging long ago.
> > > > > > >
> > > > > > > I hope these options still works correctly with recent kernel
> > > > > > > but
> > > > > > > not
> > > > > > > sure.
> > > > > > >
> > > > > > > Also, disabling i-cache makes your board VERY slow, of
> > > > > > > course.
> > > > > >
> > > > > > Thanks!
> > > > > >
> > > > > > When using these options, I do see a slowdown in early boot,
> > > > > > but the
> > > > > > issue
> > > > > > is still there.
> > > > > >
> > > > > > My next guess is an unaligned access not using
> > > > > > {get,put}_unaligned(),
> > > > > > which
> > > > > > doesn't seem to work on tx4927, but doesn't cause an exception
> > > > > > neither.
> > > > >
> > > > > Can you try my linux-next branch on git.linux-nfs.org? It
> > > > > contains a
> > > > > fixes for a hang that results from the above commit.
> > > > >
> > > > > git pull git://git.linux-nfs.org/projects/trondmy/linux-nfs.git
> > > > > linux-next
> > > >
> > > > Thanks for the suggestion, but unfortunately it doesn't help.
> > >
> > > In the mean time, I tried your newer linux-next, no change.
> > > I tried several other things:
> > >   - remove the packed attribute (why did you add that?),
> >
> > The packed attribute allows us to avoid a series of copy operations
> > when decoding the first three elements of a RPC over TCP header (which
> > is why they are all declared as big endian). The alternative would be
> > to have a 12 byte buffer there for temporary storage, and then a
> > duplicate set of 3 32-bit words into which we copy the buffer contents
> > after extracting them from the (non-blocking) socket.
> >
> > >   - verify (at runtime) that all accesses to fraghdr, xid, and
> > > calldir
> > > are aligned,
> > >   - enable RPC_DEBUG_DATA, nothing fishy seen at first sight.
> > >
> > > Is anyone else seeing this on MIPS, or any other platform?
> > > Does mounting NFS with -o nfsvers=3,tcp work on other MIPS platforms?
> >
> > I have no access to any MIPS hardware for the purposes of testing so
> > that would be a question for the community.
> >
> > One thing that I have noticed is that unlike the old code, the bvec
> > 'generic' code does appear to fail to call flush_dcache_page(). Could
> > that be causing the problem here? If so, why would that not be a
> > problem in the context of regular block I/O?

Thanks for the hint!

It wasn't clear to me where exactly the old code called
flush_dcache_page(), but as rpcrdma_inline_fixup() calls it in between
copying to a page, and unmapping the page, I added a call to
flush_dcache_page() to all functions in lib/iov_iter.c that map a page
and copy to it, cfr. the patch below.

And suddenly NFS root over TCP is working again!

Note that I have no idea if it affects regular block I/O, as my RBTX4927
does not have block devices.

Also note that this platform does not use highmem.

So, where's the proper place to fix this?
Thanks in advance!

diff --git a/lib/iov_iter.c b/lib/iov_iter.c
index 54c248526b55fc49..5be62db33414d3f9 100644
--- a/lib/iov_iter.c
+++ b/lib/iov_iter.c
@@ -277,6 +277,7 @@ static size_t copy_page_from_iter_iovec(struct page *page, size_t offset, size_t
 			to += copy;
 			bytes -= copy;
 		}
+		flush_dcache_page(page);
 		if (likely(!bytes)) {
 			kunmap_atomic(kaddr);
 			goto done;
@@ -463,6 +464,7 @@ static void memcpy_to_page(struct page *page, size_t offset, const char *from, s
 {
 	char *to = kmap_atomic(page);
 	memcpy(to + offset, from, len);
+	flush_dcache_page(page);
 	kunmap_atomic(to);
 }
 
@@ -470,6 +472,7 @@ static void memzero_page(struct page *page, size_t offset, size_t len)
 {
 	char *addr = kmap_atomic(page);
 	memset(addr + offset, 0, len);
+	flush_dcache_page(page);
 	kunmap_atomic(addr);
 }
 
@@ -580,6 +583,7 @@ static size_t csum_and_copy_to_pipe_iter(const void *addr, size_t bytes,
 		char *p = kmap_atomic(pipe->bufs[idx].page);
 		next = csum_partial_copy_nocheck(addr, p + r, chunk, 0);
 		sum = csum_block_add(sum, next, off);
+		flush_dcache_page(pipe->bufs[idx].page);
 		kunmap_atomic(p);
 		i->idx = idx;
 		i->iov_offset = r + chunk;
@@ -628,6 +632,7 @@ static unsigned long memcpy_mcsafe_to_page(struct page *page, size_t offset,
 
 	to = kmap_atomic(page);
 	ret = memcpy_mcsafe(to + offset, from, len);
+	flush_dcache_page(page);
 	kunmap_atomic(to);
 
 	return ret;
@@ -894,6 +899,7 @@ size_t copy_page_from_iter(struct page *page, size_t offset, size_t bytes,
 	if (i->type & (ITER_BVEC|ITER_KVEC)) {
 		void *kaddr = kmap_atomic(page);
 		size_t wanted = _copy_from_iter(kaddr + offset, bytes, i);
+		flush_dcache_page(page);
 		kunmap_atomic(kaddr);
 		return wanted;
 	} else
@@ -958,6 +964,7 @@ size_t iov_iter_copy_from_user_atomic(struct page *page,
 				 v.bv_offset, v.bv_len),
 		memcpy((p += v.iov_len) - v.iov_len, v.iov_base, v.iov_len)
 	)
+	flush_dcache_page(page);
 	kunmap_atomic(kaddr);
 	return bytes;
 }
@@ -1494,6 +1501,7 @@ size_t csum_and_copy_to_iter(const void *addr, size_t bytes, __wsum *csum,
 		next = csum_partial_copy_nocheck((from += v.bv_len) - v.bv_len,
 						 p + v.bv_offset,
 						 v.bv_len, 0);
+		flush_dcache_page(v.bv_page);
 		kunmap_atomic(p);
 		sum = csum_block_add(sum, next, off);
 		off += v.bv_len;

Gr{oetje,eeting}s,

						Geert

--
Geert Uytterhoeven -- There's lots of Linux beyond ia32 -- geert@linux-m68k.org

In personal conversations with technical people, I call myself a hacker. But
when I'm talking to journalists I just say "programmer" or something like that.
							    -- Linus Torvalds
