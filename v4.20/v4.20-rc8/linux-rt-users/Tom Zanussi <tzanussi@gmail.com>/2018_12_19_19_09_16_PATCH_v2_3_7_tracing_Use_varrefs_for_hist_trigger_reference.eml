Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  20 Dec 2018 08:41:55 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C7B5658055F;
	Wed, 19 Dec 2018 11:09:24 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 19 Dec 2018 11:09:23 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A/DLmMxX/Upphbk8fezbRTkXMHpnV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZheAvadThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmTgLjhi?=
 =?us-ascii?q?UaOD4j6GzZidF+gqJFrhyvpRN/zZLbboaaO/RxZaPdZdEXSHFdXstTTSFNHpmx?=
 =?us-ascii?q?Y5cNAucHIO1Wr5P9p1wLrRamGwesA+bvwSJLiXDs2606zv8hERrH3Ac9GN8OrH?=
 =?us-ascii?q?XVo8/zNKcPSuC116jIwC7Mb/NTwzj96YzIfgo9rvGLWLJ9aMzcwlQsGQPdllic?=
 =?us-ascii?q?t5DpMjeP2ugQvWWX8fBsWf+shmI7sQ18ozqiyt8yhoTImo4Z11XJ+Tt2zYs0IN?=
 =?us-ascii?q?C0VEt2bNy4HJdMuCyXMpV6T8MiTm10vSs3xb8LtoO/cSUP1Zso3B3SZviCfoeW?=
 =?us-ascii?q?4x/sSvudLDFlj3x/Yr2/nQy98U24x+38SMa01FFKozJbktnDqH8NzQbf6suZRf?=
 =?us-ascii?q?tn+EeuxzKP2xrU6uFeLkA4javbK5g/zb4sjpcfr1jPEyvslEnrgqKaaF8o9vWr?=
 =?us-ascii?q?5uj7eLnrp52RO5dxig7kM6QunsK/Af4/MggLR2Wb/eW81Lv+/Uz2WblKjeM5kr?=
 =?us-ascii?q?PfsJ/EIcQXv6m5AgFT0ok98RayFCmm0NsGknkdNl5FewyIj5LvO17QJPD0F/C/?=
 =?us-ascii?q?g06jkDtz3fDJIqXhAonRLnjEiLrhebd9601CxwYpwtFf+olZCrUAIPL1R0/wu8?=
 =?us-ascii?q?bUDh4/Mwyo3ennDM9x2Z8ZWWKKGqWZKr/dsUeU5uIzJOmBfI8Vtyz8K/g5/fHu?=
 =?us-ascii?q?imU1mV8Afaaz25sXZ2u1HvBnI0WffHrtjc0NEWYMvgoiUuPqjEeOXiJUZ3a3R6?=
 =?us-ascii?q?g8/C00CJq6DYffQYCgmKaO3Dy7Hp1RZWBKEEqMHm3qd4ifX/cMaSSSItJukzAe?=
 =?us-ascii?q?VLihTZMh2g+qtAPg17VnKe/U8DUCtZ3/zNh1+/HTlRYq+Dx3Fcud1XuBT2V1nm?=
 =?us-ascii?q?wSQT8207tyoUh8yleFzKh5jOZUFd1V5/NVTAg6MYTQwPB9C9D3QgjBZMuGSE66?=
 =?us-ascii?q?QtW6BjE8Vs8+zMUQY0ljAdmijgrM3yyxA7ALkbyHA5g08qHZ33j1PMt9z3fG1K?=
 =?us-ascii?q?88j1gpWMdPNGumhrJh+AjXHYLGj0KZl6Oyf6QGwCHN7HuDzXaJvExATQF/S7vF?=
 =?us-ascii?q?Um4FakvWt9v54FjCQKGoCbk8NgtByMiCKrZFa9HzjFVGQuvjN8raY26rh2iwAh?=
 =?us-ascii?q?OIzKuWbIX2Y2UdwDndCE8cngAP/HaGMA8+Bjuho2PeFjBuCUjjY0T28el6qXO7?=
 =?us-ascii?q?SEA0whqOb01g0bq15xEUieadS/MVwrILpiMhpy9oE1a62tLcE8CAqBZ5fKVAfd?=
 =?us-ascii?q?M9509K2njdtwNjMZ2vMaBjikQFfARqokzhzRN3CoZHkcg0t34qyAtyKaSF0FJO?=
 =?us-ascii?q?bT+Y3JbwOqHJJWn25hygd6nW2lTG2taM5qgP8Og4q0nkvAyxFksi7m9r3MVP33?=
 =?us-ascii?q?qd5pXFFgwSUZ3qX0Yz9hh6oazaYyYn64PV031sLbe7sjvY1901A+slzw6qf81D?=
 =?us-ascii?q?P6OcCA/yD8oaCtC0KOwrh1emdAgEM/1V9KIuOcOpaeGG2K+yMOl8hj2miXlI75?=
 =?us-ascii?q?5n0kKL8SpxUerI35cDw/GF0QqLTTb8jFG9ss/pnYBIfy0dHm26ySL8Ho5eerVy?=
 =?us-ascii?q?fZoXCWepO8C2xtR+i4TtWnJC716jGlUG1dSteRqTaVz9wAJR2V4WoXyhhSu30T?=
 =?us-ascii?q?h0nys1oaqY2SzE2/7iewYfOm5XWGliik/hIYqugNAAX0iobA8pmAG+5UngxKhb?=
 =?us-ascii?q?p6V/L2/NTkdOZCX2K2BiUq2ttruNecJP6ZUosTlJX+S4e1yVVrn9ox4C2SP5A2?=
 =?us-ascii?q?Re3Cw7dy2tupjhnx11kmWdIGxxrHrYf8F93hPf5N3aRf5M0TsKXih4iT/LBlei?=
 =?us-ascii?q?O9ml58mbl5DGsuqmTWKuSoVTcTX3zYOHrCa75ndlARylk/Czh93oCw460SDg2t?=
 =?us-ascii?q?luVCXIqgv8Y4bx26S7N+JnYldnBFvm58VmHYF+l5M6hIsM1ngCmpWV4X0HnH/2?=
 =?us-ascii?q?MdVa2qLxdmABRDAVzN7O/AjqxldjIWmXyILjWXWQ2c9hZ9i8YmML1SMx9cFKCK?=
 =?us-ascii?q?GI7LNamSt5uEa3rQXUYfJlhDcS1eMu6GIGg+EOoAct0iKdArUIEUhZJyPskQmI?=
 =?us-ascii?q?78ulrKVWf2uvdbmw1ExjndGuFr2CowdcWGrndZcmByN/8sJ/MFfU2n3p9o7kYM?=
 =?us-ascii?q?XQbc4UthCMiBjPle9VKJYslvYQgSpnJHnwvXkky+49kBxv0ou2vImBK2Vx4q25?=
 =?us-ascii?q?BgRUOSHyZ8MW4jvtl7pRnt6K34CzGZVsAjcLU4HtTf22CzIer+jnOxyNED0hqX?=
 =?us-ascii?q?ebBLzfEhWE6Ep9q3LPEparN2yYJXUDzNViQgWdK1JbgAwOQDo6mZs5HBiwxMP9?=
 =?us-ascii?q?aEd5+iwR5lngpxpMzeJoKgD/UnrFqweucDs0U5+fLBxZ7gxZ40fVMMqe7v98Hi?=
 =?us-ascii?q?1C/52hqhCNJXKfZwhSEW4JXUmEDUj5Pray/dnA7/SYBu2mIvvOf7qOqO9eV/SJ?=
 =?us-ascii?q?xZ610Ytm5TGMNsqRMXl4Ev07wVFOXXR4G8TfhjUORDYblyPLb86Huhi8/jd7od?=
 =?us-ascii?q?y48PTuQAjv/5eAC6NOMdVz/BC7mb2MN/OLiyZjNzlZ1okAxXvJyLUE2F4Siidu?=
 =?us-ascii?q?dySiELgatC7NSr7QlbFTDxIBdyxzM85I5bom3gZRIc7bls/11rlgg/4pCldFUE?=
 =?us-ascii?q?btld2zacMWI2GyKlXHCV2PNLSHIz3L3s72bbm9Sb1WkOVbqRmwtSyHHE/kOzSJ?=
 =?us-ascii?q?jyPpWAy3MeFQkCGbOwRTuYGnfRZrDGjjTdTmZQW6Md93lzI2x7I0i2jONW4dNz?=
 =?us-ascii?q?h8bkxMoqeR7SNenvVwBWhB4mB5IumDnibKp9Xff4wRqudmDjhcmOVd7HE70P1S?=
 =?us-ascii?q?9i4XauZynX7uqdsmkVigj/KUy3IzTAhHrCtQn4OjskBrOKGf/Z5FDyWXtCkR5H?=
 =?us-ascii?q?mdXkxZ7+BuDcfi7vhd?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BGAAATlhpch0O0hNFkHgEGBwaBUwcLA?=
 =?us-ascii?q?YEwgjsng32UFYIhiRJvjUiBcxMBARgTAYctIjYHDQEDAQEBAQEBAgETAQEBCA0?=
 =?us-ascii?q?JCCkjDII2IoJlAwMBAiAEGQEbHQEDAgkBAQUQDwImAgIDIBEBBQEcGQWDHYFpA?=
 =?us-ascii?q?QMVAQScQDyLGXwWBQEXgncFgkWBfQoZJw1egTcCBhJ5ihiBHBeBQD+BEYsbglc?=
 =?us-ascii?q?CiUmGVjeQXgmRYhiJd4diLJkvBgIJBw8hgSwMgXtNIxVsgjuCGwwXg0qKciEyA?=
 =?us-ascii?q?YEEAQEhjT8BAQ?=
X-IPAS-Result: =?us-ascii?q?A0BGAAATlhpch0O0hNFkHgEGBwaBUwcLAYEwgjsng32UFYI?=
 =?us-ascii?q?hiRJvjUiBcxMBARgTAYctIjYHDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2IoJlA?=
 =?us-ascii?q?wMBAiAEGQEbHQEDAgkBAQUQDwImAgIDIBEBBQEcGQWDHYFpAQMVAQScQDyLGXw?=
 =?us-ascii?q?WBQEXgncFgkWBfQoZJw1egTcCBhJ5ihiBHBeBQD+BEYsbglcCiUmGVjeQXgmRY?=
 =?us-ascii?q?hiJd4diLJkvBgIJBw8hgSwMgXtNIxVsgjuCGwwXg0qKciEyAYEEAQEhjT8BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,373,1539673200"; 
   d="scan'208";a="67587271"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 19 Dec 2018 11:09:22 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730315AbeLSTJU (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Wed, 19 Dec 2018 14:09:20 -0500
Received: from mail-it1-f193.google.com ([209.85.166.193]:35454 "EHLO
        mail-it1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1729303AbeLSTJU (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 19 Dec 2018 14:09:20 -0500
Received: by mail-it1-f193.google.com with SMTP id p197so10912035itp.0;
        Wed, 19 Dec 2018 11:09:19 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=message-id:subject:from:to:cc:date:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=pcGFm+WWDHMbNkU16anFiaUGHrZn3yGJ3Q07OiBG13g=;
        b=HYLRvYXdkfKHcAblKIBrGZVgbt4hEPc3QJM9MLgCXh8kKV8TP+RjeTiHZaf6nTWMpr
         rjTZbdqVfewSAkNQVJqPxdwb60qEXBRwk3BkMNguhDCUT5uoFhUJtER3pramCJMllIio
         ZxH2X0IEg1YuujLEyeW36ch8gTYon/CS1ns23/meqxHYYDxiS/1APcqi7YFQUWtIjBfU
         LDhHmaaxNxrbPuNu3IBI+9JPrwUKdi1pUSx6ZYJO0TL6en5Bn0GQJdwblfsH5WHbt/iJ
         ZvN6/mjkcu8q8lVQJYR5A7Vsqt/+3FvkV1r2uvBhz4FARLAgclRrh5VIVdWik1ApTpvS
         91Tg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:message-id:subject:from:to:cc:date:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=pcGFm+WWDHMbNkU16anFiaUGHrZn3yGJ3Q07OiBG13g=;
        b=AtviUOMC+Id/VlwF+mvmLoZf+T0iebxPFc82pt3da2Ex0pxZfV3O/bLQDDY+kVr3qi
         573migdq1JGxT5AEjg5h9zDW8IrcjFI5Nk4nX3lWm70HG4BH27DSgysFROdkAodF6/vO
         aOMsZZqXQOARRnXfih/lhL453LWb4bkGPc91bCIaD8BbupGn/fZbsab4FN9JWRjK6+yC
         3kv+Lf4Jbfz5n1KO6GPxT3e27zUl9RRRAHZbbU1nA/kDVjVQLHrKOLs1DlAGLPlthxll
         g2/ThnSRN+nAjsdVaMcJENaZWqL92icvlpCEkxFbJ+Rb2Agn7OwinsgnsogibPD8SKs6
         Syag==
X-Gm-Message-State: AA+aEWa7W7cqmSUKIM4yu93CsyubuOIKQOs2b903SZ+vND7Kk4XO62X6
        zL1eL/xuPEe4k7Ee/WEG0+I=
X-Google-Smtp-Source: AFSGD/URCyFjb9IQQJKrZCpe9Re/8eFHLdfGsK1lwzTny8sDIuYHe/uLT3Etoso72w9L6XMS6qlAdQ==
X-Received: by 2002:a02:9b26:: with SMTP id o35mr20904426jak.23.1545246559092;
        Wed, 19 Dec 2018 11:09:19 -0800 (PST)
Received: from tzanussi-mobl ([2601:246:0:7004:2550:47d9:db89:e6e1])
        by smtp.googlemail.com with ESMTPSA id 196sm4367385itu.37.2018.12.19.11.09.17
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Wed, 19 Dec 2018 11:09:18 -0800 (PST)
Message-ID: <1545246556.4239.7.camel@gmail.com>
Subject: [PATCH v2 3/7] tracing: Use var_refs[] for hist trigger reference
 checking
From: Tom Zanussi <tzanussi@gmail.com>
To: rostedt@goodmis.org
Cc: tglx@linutronix.de, mhiramat@kernel.org, namhyung@kernel.org,
        vedang.patel@intel.com, bigeasy@linutronix.de,
        joel@joelfernandes.org, mathieu.desnoyers@efficios.com,
        julia@ni.com, linux-kernel@vger.kernel.org,
        linux-rt-users@vger.kernel.org
Date: Wed, 19 Dec 2018 13:09:16 -0600
In-Reply-To: <becb9627fb09681960f26809961b832be9591048.1545161087.git.tom.zanussi@linux.intel.com>
References: <cover.1545161087.git.tom.zanussi@linux.intel.com>
         <becb9627fb09681960f26809961b832be9591048.1545161087.git.tom.zanussi@linux.intel.com>
Content-Type: text/plain; charset="UTF-8"
X-Mailer: Evolution 3.26.1-1 
Mime-Version: 1.0
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Since all the variable reference hist_fields are collected into
hist_data->var_refs[] array, there's no need to go through all the
fields looking for them, or in separate arrays like synth_var_refs[],
which will be going away soon anyway.

This also allows us to get rid of some unnecessary code and functions
currently used for the same purpose.

Signed-off-by: Tom Zanussi <tom.zanussi@linux.intel.com>
---
 kernel/trace/trace_events_hist.c | 68 +++++++---------------------------------
 1 file changed, 11 insertions(+), 57 deletions(-)

diff --git a/kernel/trace/trace_events_hist.c b/kernel/trace/trace_events_hist.c
index 25d06b3ae1f6..f3caf6e484f4 100644
--- a/kernel/trace/trace_events_hist.c
+++ b/kernel/trace/trace_events_hist.c
@@ -1297,75 +1297,29 @@ check_field_for_var_ref(struct hist_field *hist_field,
 			struct hist_trigger_data *var_data,
 			unsigned int var_idx)
 {
-	struct hist_field *found = NULL;
-
-	if (hist_field && hist_field->flags & HIST_FIELD_FL_VAR_REF) {
-		if (hist_field->var.idx == var_idx &&
-		    hist_field->var.hist_data == var_data) {
-			found = hist_field;
-		}
-	}
-
-	return found;
-}
-
-static struct hist_field *
-check_field_for_var_refs(struct hist_trigger_data *hist_data,
-			 struct hist_field *hist_field,
-			 struct hist_trigger_data *var_data,
-			 unsigned int var_idx,
-			 unsigned int level)
-{
-	struct hist_field *found = NULL;
-	unsigned int i;
-
-	if (level > 3)
-		return found;
-
-	if (!hist_field)
-		return found;
-
-	found = check_field_for_var_ref(hist_field, var_data, var_idx);
-	if (found)
-		return found;
-
-	for (i = 0; i < HIST_FIELD_OPERANDS_MAX; i++) {
-		struct hist_field *operand;
+	WARN_ON(!(hist_field && hist_field->flags & HIST_FIELD_FL_VAR_REF));
 
-		operand = hist_field->operands[i];
-		found = check_field_for_var_refs(hist_data, operand, var_data,
-						 var_idx, level + 1);
-		if (found)
-			return found;
-	}
+	if (hist_field && hist_field->var.idx == var_idx &&
+	    hist_field->var.hist_data == var_data)
+		return hist_field;
 
-	return found;
+	return NULL;
 }
 
 static struct hist_field *find_var_ref(struct hist_trigger_data *hist_data,
 				       struct hist_trigger_data *var_data,
 				       unsigned int var_idx)
 {
-	struct hist_field *hist_field, *found = NULL;
+	struct hist_field *hist_field;
 	unsigned int i;
 
-	for_each_hist_field(i, hist_data) {
-		hist_field = hist_data->fields[i];
-		found = check_field_for_var_refs(hist_data, hist_field,
-						 var_data, var_idx, 0);
-		if (found)
-			return found;
-	}
-
-	for (i = 0; i < hist_data->n_synth_var_refs; i++) {
-		hist_field = hist_data->synth_var_refs[i];
-		found = check_field_for_var_refs(hist_data, hist_field,
-						 var_data, var_idx, 0);
-		if (found)
-			return found;
+	for (i = 0; i < hist_data->n_var_refs; i++) {
+		hist_field = hist_data->var_refs[i];
+		if (check_field_for_var_ref(hist_field, var_data, var_idx))
+			return hist_field;
 	}
 
-	return found;
+	return NULL;
 }
 
 static struct hist_field *find_any_var_ref(struct hist_trigger_data *hist_data,
-- 
2.14.1

