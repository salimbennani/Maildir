Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  20 Dec 2018 08:42:16 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 3B3C858055F
	for <like.xu@linux.intel.com>; Wed, 19 Dec 2018 11:25:37 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 19 Dec 2018 11:25:37 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AQaZt+RF96uAaFxEPQBlP651GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ76p8u/bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjmk8qxlSgLniD?=
 =?us-ascii?q?0fOjA57m/XlsJ+gqFVoB2joBJ/wpLbbo6aO/RjZqPQf9EUSGVcUstfSyBOHJi8?=
 =?us-ascii?q?YpATD+oYJ+tUs5Pwq0cToRa4GAKiBPnvyjhNhnLuwaA61+UhERra3AM6HtIOqm?=
 =?us-ascii?q?nfotXvNKgIV+C60KjIzS7eZP5RxTr97InIcgs9of6WXLJwa9Ddx0k1FwzfiFWf?=
 =?us-ascii?q?tY3lPyiO2+UDrmeU8/BsWv6oi24isgx8pCWkyMQ0ioTRmI4Z1lPJ+T9kzIooJt?=
 =?us-ascii?q?C0UlB3bNCkHZdKqi2XNZN6Tt4mTmxsoio21L0LtJ6hcCUFx5kr3QPTZv6af4SQ?=
 =?us-ascii?q?7BLsSuWcLSt9iX9gfL+zmxe//Eqlx+3yTca531lHoy9En9TNrX8ByRne58qGR/?=
 =?us-ascii?q?dh8Uqs3yuE2RrJ5eFeO080kLLWK54/zb40kZoeqUDDHi7tmEXql6+abEok+u61?=
 =?us-ascii?q?6+j9ZbXmvJCcO5d1igH4LKsuhtSyDfokPgUNRWSX5Pmw2b758UHnTrhHjuc6nr?=
 =?us-ascii?q?TbvZzCIMQUvK+5Awtb0oY57Ba/Ci+r0M0GknkCMVJJYQ+IgJb3O17QJPD0FOyw?=
 =?us-ascii?q?g1OxkDdt2//JIKbhDpLJLnjCk7fuY6xx6kFByAcrydBf5pRUCqwOIf7pW0/xss?=
 =?us-ascii?q?DYAQE9MwCu3+nnD9B925gYWWKIBK+ZP6XSsUKS6uIoOemMa5cZuCzhJPg9+/7u?=
 =?us-ascii?q?kXg5lEcZfamo3psYdmq0H/t7I0iCZXrsg9EBEXoFvwYkTezqjkGCXiBXZ3qoQ6?=
 =?us-ascii?q?084TQ7W8qbC5zeTNWtnKCZx3X8WZlXfXxdTFaLF3juasODQfhLbSuTJspolHsD?=
 =?us-ascii?q?TaSgTIk6kgijsRK/x7d5I+6HxysDqJi20dF04/HUxwg/8CExA8mD3mXIVWxtg2?=
 =?us-ascii?q?4TWxcw26Zwp1E7zU2MhrNlif5VHsAG+vVSTw0hPoTdxeEpN9enEBvMe8rMRFu4?=
 =?us-ascii?q?T9GOBzY3QdQshdgUbAw1T8yviw2G0ye0Drs9kbuNC5optKXG0C61b4xkxnPbkb?=
 =?us-ascii?q?MglFI4as1IM2Kgm+h47QeZT9rQnkCE0ryrbq8C9CjK8miF0CyJpk4OAyBqVqCQ?=
 =?us-ascii?q?dHQefVffrM6xyFnLSbSvEvxzGw9A0tKLK7EMRMfgi15HX9/8NN+YaGW0zTTjTS?=
 =?us-ascii?q?2Uz6+BOdK5M14W2z/QXRAJ?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AaAADPmhpchxHrdtBkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTBQgVk5Coc6A4RPX4pTSoFomAKBJANMFAEYFIctIjQJDQEDAQE?=
 =?us-ascii?q?BAQEBAgETAQEBCgsJCBsOIwyCNgUCAxgJglwCAQMBAg8VGQEBBAoDJgECAwECB?=
 =?us-ascii?q?gEBAQFGCAMBLiUCBAESBR2DAIFqAxUBBJtrPQJgAoEMiQeBbDOCdgEBBYJDgkg?=
 =?us-ascii?q?YggoIh36DJYEcgVc/gUSCKosVkCCRFgcCgimPUZFZiUiQEwIEAgQFAg0BAQWBR?=
 =?us-ascii?q?oIOHxQaI4M8ghsMFxKDOIpTcoEHIYtIWAGBHgEB?=
X-IPAS-Result: =?us-ascii?q?A0AaAADPmhpchxHrdtBkHAEBAQQBAQcEAQGBUQcBAQsBgTB?=
 =?us-ascii?q?QgVk5Coc6A4RPX4pTSoFomAKBJANMFAEYFIctIjQJDQEDAQEBAQEBAgETAQEBC?=
 =?us-ascii?q?gsJCBsOIwyCNgUCAxgJglwCAQMBAg8VGQEBBAoDJgECAwECBgEBAQFGCAMBLiU?=
 =?us-ascii?q?CBAESBR2DAIFqAxUBBJtrPQJgAoEMiQeBbDOCdgEBBYJDgkgYggoIh36DJYEcg?=
 =?us-ascii?q?Vc/gUSCKosVkCCRFgcCgimPUZFZiUiQEwIEAgQFAg0BAQWBRoIOHxQaI4M8ghs?=
 =?us-ascii?q?MFxKDOIpTcoEHIYtIWAGBHgEB?=
X-IronPort-AV: E=Sophos;i="5.56,373,1539673200"; 
   d="scan'208";a="67589441"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mga01b.intel.com with ESMTP/TLS/AES256-SHA; 19 Dec 2018 11:25:36 -0800
Received: from localhost ([::1]:33760 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gZhTL-00075m-DC
	for like.xu@linux.intel.com; Wed, 19 Dec 2018 14:25:35 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:45932)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <prvs=884a3e257=Alistair.Francis@wdc.com>)
	id 1gZhN7-0002NL-EV
	for qemu-devel@nongnu.org; Wed, 19 Dec 2018 14:19:10 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <prvs=884a3e257=Alistair.Francis@wdc.com>)
	id 1gZhN2-0001A5-MC
	for qemu-devel@nongnu.org; Wed, 19 Dec 2018 14:19:09 -0500
Received: from esa6.hgst.iphmx.com ([216.71.154.45]:63928)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <prvs=884a3e257=Alistair.Francis@wdc.com>)
	id 1gZhN2-00019O-DI; Wed, 19 Dec 2018 14:19:04 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple;
	d=wdc.com; i=@wdc.com; q=dns/txt; s=dkim.wdc.com;
	t=1545247145; x=1576783145;
	h=from:to:cc:subject:date:message-id:references:
	in-reply-to:content-transfer-encoding:mime-version;
	bh=ErPoJQaau3edoJ544xIPnWiQrPP+dqOz4wi3XAA2iWI=;
	b=QJn9TZZpRBdiIZdyy6yiOYAsBoPVzl4m0PK0Yyp/lfT+Gq/PxjmNx6Wc
	ywar38biZQZmmW5nSELz5HXan/yp0OvT9FuuelcWTUQfe1GBnW5Rb2JrL
	6jiChHLVSvUQlBX9XTs2cMPx9SUE9T8eJKBh0iWAW+V9auFLz0ojN7SYn
	OjGzypFhJX1HQqSnVp+vU7EC2QSqG/slZPtMvreozH5YNLIq6ImQBvth/
	bst4DnVofN/+jvTwwNlkg8BM3t+2sncfgijtnzrLSZiploEOZ+tS/6gxn
	UJGTaGRXHGedg7OVhbVQuNEhbmqfhvw32b+r3bZUAjF+maQuBEAsKfsVh Q==;
X-IronPort-AV: E=Sophos;i="5.56,373,1539619200"; d="scan'208";a="98754887"
Received: from mail-bn3nam01lp2054.outbound.protection.outlook.com (HELO
	NAM01-BN3-obe.outbound.protection.outlook.com) ([104.47.33.54])
	by ob1.hgst.iphmx.com with ESMTP; 20 Dec 2018 03:19:02 +0800
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=sharedspace.onmicrosoft.com; s=selector1-wdc-com;
	h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
	bh=S1Db0DguRYvina1m2lGJWCwW/jNvK4NyVFIXKPhjEHM=;
	b=bvm1tfCZGwStA4mEcpYti7bXSyZysxvIhp2agKlNt/y7jDMNq9AJR47LUNsY9gSyPgwGCDAZPOMaFZ5J45Otgg8a3pILQbPqtadVuvCTm3tjxZnh2GD6BDZ1x8hjdjd3JbqFNer/13PQYKbCm7avzZYBIb87wflQr0hN3+zoL0E=
Received: from MWHPR04MB0401.namprd04.prod.outlook.com (10.173.48.18) by
	MWHPR04MB0832.namprd04.prod.outlook.com (10.172.168.142) with Microsoft
	SMTP
	Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
	15.20.1425.22; Wed, 19 Dec 2018 19:19:00 +0000
Received: from MWHPR04MB0401.namprd04.prod.outlook.com
	([fe80::9067:fb44:66b2:7604]) by
	MWHPR04MB0401.namprd04.prod.outlook.com
	([fe80::9067:fb44:66b2:7604%4]) with mapi id 15.20.1446.018;
	Wed, 19 Dec 2018 19:19:00 +0000
From: Alistair Francis <Alistair.Francis@wdc.com>
To: "qemu-devel@nongnu.org" <qemu-devel@nongnu.org>, "qemu-riscv@nongnu.org"
	<qemu-riscv@nongnu.org>
Thread-Topic: [PATCH v2 15/23] riscv: tcg-target: Add branch and jump
	instructions
Thread-Index: AQHUl8+y6ZqYIOqDkECuxmWSixXkyw==
Date: Wed, 19 Dec 2018 19:19:00 +0000
Message-ID: <c356657e627168d89cb5b012b7e21e4efbbe83f3.1545246859.git.alistair.francis@wdc.com>
References: <cover.1545246859.git.alistair.francis@wdc.com>
In-Reply-To: <cover.1545246859.git.alistair.francis@wdc.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-mailer: git-send-email 2.19.1
x-clientproxiedby: BYAPR07CA0014.namprd07.prod.outlook.com
	(2603:10b6:a02:bc::27) To MWHPR04MB0401.namprd04.prod.outlook.com
	(2603:10b6:300:70::18)
x-ms-exchange-messagesentrepresentingtype: 1
x-originating-ip: [199.255.44.171]
x-ms-publictraffictype: Email
x-microsoft-exchange-diagnostics: 1; MWHPR04MB0832;
	6:1W6OIk+tePIMtPNwZtylnivvP/18k2T4gcktVi2TGNXPGMtpdyDw4nfzsa2OAhzvDzUam5pqGRLVH4ZL9uOHLZl3hgNNQjHS810pbCJiACo9LJkpZhR6c8k917rGwNyFlKgcolue6pZ0Y1uDNozlX1ZFnFmpBZUMxdPvT2OJEn6NRYLYY9JVghPbr4eJOaQBJijR0GqM1MzS3oIrMqlZkTvNB/jD0xkbcx31/1YO38Q6hXCLLE+F2/CcnVrfrvnqotrBZAQpuyzQCuULeoxE7ncQ8b+st9j4B8RK2cKlna6UuQiLcfzCsh2P6aETf417QqZlOPNgY5aRIMq7kMWSja22PyE4JZyDwSx8NAiMDbR0TQTimC8h88ViH2v+Ifol7YTr8vAyZaY5prHsaLX8bu0JGDHlGLm8HVrsNAeStQSk9psmmPQiSWqV+vQohxfwSdwfaBYrONNT0hnzGJv/LQ==;
	5:GNmcTAiug36rKT/IrTrXThLG9+Uhakx92hC/NmkoL2pQRJIwVC21PPhyfb7JfBIvDoo11/Laanx+537mTAYQtflfB3IOGoBQPdSBwpsZcQESGzKSf4gPJZ85hn2sRSLjP4UfwxC516IERbkrA11hhsdIaSL5vRulY/eetkSJ6tc=;
	7:dYuZER57NLok2SQT2SdWnLLpS/qW+kCoz/x+w6ydt1XMwMhDdetBP15Q8j0WcgW6cB9WszBvVo2kr/lzizpW67YrP4n7gQE++3MzAz4euSwEZdKtFEGlm7noqo0EpSqwO6oYOsZR4Up07pZ0ck1BLA==
x-ms-office365-filtering-correlation-id: 0fc9165e-3206-417c-7633-08d665e6d4a4
x-ms-office365-filtering-ht: Tenant
x-microsoft-antispam: BCL:0; PCL:0;
	RULEID:(2390118)(7020095)(4652040)(8989299)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(5600074)(711020)(4618075)(2017052603328)(7153060)(7193020);
	SRVR:MWHPR04MB0832; 
x-ms-traffictypediagnostic: MWHPR04MB0832:
wdcipoutbound: EOP-TRUE
x-microsoft-antispam-prvs: <MWHPR04MB08321C0BB0C58636433FDED290BE0@MWHPR04MB0832.namprd04.prod.outlook.com>
x-ms-exchange-senderadcheck: 1
x-exchange-antispam-report-cfa-test: BCL:0; PCL:0;
	RULEID:(8211001083)(3230021)(999002)(5005020)(6040522)(2401047)(8121501046)(3231475)(944501520)(52105112)(93006095)(93001095)(3002001)(10201501046)(6055026)(149066)(150057)(6041310)(20161123560045)(20161123562045)(20161123564045)(201703131423095)(201702281528075)(20161123555045)(201703061421075)(201703061406153)(20161123558120)(201708071742011)(7699051)(76991095);
	SRVR:MWHPR04MB0832; BCL:0; PCL:0; RULEID:; SRVR:MWHPR04MB0832; 
x-forefront-prvs: 0891BC3F3D
x-forefront-antispam-report: SFV:NSPM;
	SFS:(10019020)(376002)(39860400002)(366004)(396003)(346002)(136003)(189003)(199004)(6506007)(68736007)(76176011)(386003)(102836004)(476003)(2616005)(44832011)(486006)(97736004)(118296001)(478600001)(316002)(26005)(6346003)(4326008)(110136005)(54906003)(186003)(39060400002)(8676002)(50226002)(81166006)(86362001)(6512007)(52116002)(81156014)(53936002)(71200400001)(99286004)(256004)(71190400001)(8936002)(446003)(11346002)(305945005)(7736002)(106356001)(6486002)(3846002)(6116002)(66066001)(25786009)(5660300001)(2906002)(72206003)(2501003)(14454004)(36756003)(6436002)(105586002);
	DIR:OUT; SFP:1102; SCL:1; SRVR:MWHPR04MB0832;
	H:MWHPR04MB0401.namprd04.prod.outlook.com; FPR:; SPF:None;
	LANG:en; PTR:InfoNoRecords; MX:1; A:1; 
authentication-results: spf=none (sender IP is )
	smtp.mailfrom=Alistair.Francis@wdc.com; 
x-microsoft-antispam-message-info: jkc1x//5Xiry8ZQYBrSrGIGZH3Q/eVFioH9lyHgxhqmvwK5OPL4vPKJSx6FQRj33lS5l0pYvc4+UlVIA8MlbkbIy/ywOIg9Fr2tybMWR7F/71uUm4sgtz56ZzOMTYnD0Lj+RaGI16a0YPrlcbptFZZ3Q+ymXeuWeG7HxXL4xxwW6D7aaWkCqQKrrQtD3GMKiNxCkcdGCohtYiLh+R9fzsPesgwZTLVSGH3H1crKMONZDaAe4qjnDm3C64+4DRIRX0DdwegvPyapeOhxNx/8EZmeeW3EDQH2Hg8cdw/6/XfgKd3PyNhp30BNXNa6s51ln
spamdiagnosticoutput: 1:99
spamdiagnosticmetadata: NSPM
Content-Type: text/plain; charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
X-OriginatorOrg: wdc.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 0fc9165e-3206-417c-7633-08d665e6d4a4
X-MS-Exchange-CrossTenant-originalarrivaltime: 19 Dec 2018 19:19:00.6447 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: b61c8803-16f3-4c35-9b17-6f65f441df86
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MWHPR04MB0832
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 216.71.154.45
Subject: [Qemu-devel] [PATCH v2 15/23] riscv: tcg-target: Add branch and
 jump instructions
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: "alistair23@gmail.com" <alistair23@gmail.com>,
	"richard.henderson@linaro.org" <richard.henderson@linaro.org>,
	Alistair Francis <Alistair.Francis@wdc.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Signed-off-by: Alistair Francis <alistair.francis@wdc.com>
Signed-off-by: Michael Clark <mjc@sifive.com>
Signed-off-by: Richard Henderson <richard.henderson@linaro.org>
---
 tcg/riscv/tcg-target.inc.c | 145 +++++++++++++++++++++++++++++++++++++
 1 file changed, 145 insertions(+)

diff --git a/tcg/riscv/tcg-target.inc.c b/tcg/riscv/tcg-target.inc.c
index 5da850b957..ecc76c9ef8 100644
--- a/tcg/riscv/tcg-target.inc.c
+++ b/tcg/riscv/tcg-target.inc.c
@@ -750,3 +750,148 @@ static void tcg_out_addsub2(TCGContext *s,
         tcg_out_opc_reg(s, opc_add, rh, th, TCG_REG_TMP0);
     }
 }
+
+static const struct {
+    RISCVInsn op;
+    bool swap;
+} tcg_brcond_to_riscv[] =3D {
+    [TCG_COND_EQ] =3D  { OPC_BEQ,  false },
+    [TCG_COND_NE] =3D  { OPC_BNE,  false },
+    [TCG_COND_LT] =3D  { OPC_BLT,  false },
+    [TCG_COND_GE] =3D  { OPC_BGE,  false },
+    [TCG_COND_LE] =3D  { OPC_BGE,  true  },
+    [TCG_COND_GT] =3D  { OPC_BLT,  true  },
+    [TCG_COND_LTU] =3D { OPC_BLTU, false },
+    [TCG_COND_GEU] =3D { OPC_BGEU, false },
+    [TCG_COND_LEU] =3D { OPC_BGEU, true  },
+    [TCG_COND_GTU] =3D { OPC_BLTU, true  }
+};
+
+static void tcg_out_brcond(TCGContext *s, TCGCond cond, TCGReg arg1,
+                           TCGReg arg2, TCGLabel *l)
+{
+    RISCVInsn op =3D tcg_brcond_to_riscv[cond].op;
+
+    tcg_debug_assert(op !=3D 0);
+
+    if (tcg_brcond_to_riscv[cond].swap) {
+        TCGReg t =3D arg1;
+        arg1 =3D arg2;
+        arg2 =3D t;
+    }
+
+    if (l->has_value) {
+        intptr_t diff =3D tcg_pcrel_diff(s, l->u.value_ptr);
+        if (diff =3D=3D sextreg(diff, 0, 12)) {
+            tcg_out_opc_branch(s, op, arg1, arg2, diff);
+        } else {
+            /* Invert the conditional branch.  */
+            tcg_out_opc_branch(s, op ^ (1 << 12), arg1, arg2, 8);
+            tcg_out_opc_jump(s, OPC_JAL, TCG_REG_ZERO, diff - 4);
+        }
+    } else {
+        tcg_out_reloc(s, s->code_ptr, R_RISCV_BRANCH, l, 0);
+        tcg_out_opc_branch(s, op, arg1, arg2, 0);
+        /* NOP to allow patching later */
+        tcg_out_opc_imm(s, OPC_ADDI, TCG_REG_ZERO, TCG_REG_ZERO, 0);
+    }
+}
+
+static void tcg_out_setcond(TCGContext *s, TCGCond cond, TCGReg ret,
+                            TCGReg arg1, TCGReg arg2)
+{
+    switch (cond) {
+    case TCG_COND_EQ:
+        tcg_out_opc_reg(s, OPC_SUB, ret, arg1, arg2);
+        tcg_out_opc_imm(s, OPC_SLTIU, ret, ret, 1);
+        break;
+    case TCG_COND_NE:
+        tcg_out_opc_reg(s, OPC_SUB, ret, arg1, arg2);
+        tcg_out_opc_reg(s, OPC_SLTU, ret, TCG_REG_ZERO, ret);
+        break;
+    case TCG_COND_LT:
+        tcg_out_opc_reg(s, OPC_SLT, ret, arg1, arg2);
+        break;
+    case TCG_COND_GE:
+        tcg_out_opc_reg(s, OPC_SLT, ret, arg1, arg2);
+        tcg_out_opc_imm(s, OPC_XORI, ret, ret, 1);
+        break;
+    case TCG_COND_LE:
+        tcg_out_opc_reg(s, OPC_SLT, ret, arg2, arg1);
+        tcg_out_opc_imm(s, OPC_XORI, ret, ret, 1);
+        break;
+    case TCG_COND_GT:
+        tcg_out_opc_reg(s, OPC_SLT, ret, arg2, arg1);
+        break;
+    case TCG_COND_LTU:
+        tcg_out_opc_reg(s, OPC_SLTU, ret, arg1, arg2);
+        break;
+    case TCG_COND_GEU:
+        tcg_out_opc_reg(s, OPC_SLTU, ret, arg1, arg2);
+        tcg_out_opc_imm(s, OPC_XORI, ret, ret, 1);
+        break;
+    case TCG_COND_LEU:
+        tcg_out_opc_reg(s, OPC_SLTU, ret, arg2, arg1);
+        tcg_out_opc_imm(s, OPC_XORI, ret, ret, 1);
+        break;
+    case TCG_COND_GTU:
+        tcg_out_opc_reg(s, OPC_SLTU, ret, arg2, arg1);
+        break;
+    default:
+         g_assert_not_reached();
+         break;
+     }
+}
+
+static void tcg_out_brcond2(TCGContext *s, TCGCond cond, TCGReg al, TCGReg=
 ah,
+                            TCGReg bl, TCGReg bh, TCGLabel *l)
+{
+    /* todo */
+    g_assert_not_reached();
+}
+
+static void tcg_out_setcond2(TCGContext *s, TCGCond cond, TCGReg ret,
+                             TCGReg al, TCGReg ah, TCGReg bl, TCGReg bh)
+{
+    /* todo */
+    g_assert_not_reached();
+}
+
+static inline void tcg_out_goto(TCGContext *s, tcg_insn_unit *target)
+{
+    ptrdiff_t offset =3D tcg_pcrel_diff(s, target);
+    tcg_debug_assert(offset =3D=3D sextreg(offset, 1, 20) << 1);
+    tcg_out_opc_jump(s, OPC_JAL, TCG_REG_ZERO, offset);
+}
+
+static void tcg_out_call_int(TCGContext *s, tcg_insn_unit *arg, bool tail)
+{
+    TCGReg link =3D tail ? TCG_REG_ZERO : TCG_REG_RA;
+    ptrdiff_t offset =3D tcg_pcrel_diff(s, arg);
+    int ret;
+
+    if (offset =3D=3D sextreg(offset, 1, 20) << 1) {
+        /* short jump: -2097150 to 2097152 */
+        tcg_out_opc_jump(s, OPC_JAL, link, offset);
+    } else if (TCG_TARGET_REG_BITS =3D=3D 32 ||
+        offset =3D=3D sextreg(offset, 1, 31) << 1) {
+        /* long jump: -2147483646 to 2147483648 */
+        tcg_out_opc_upper(s, OPC_AUIPC, TCG_REG_TMP0, 0);
+        tcg_out_opc_imm(s, OPC_JALR, link, TCG_REG_TMP0, 0);
+        ret =3D reloc_call(s->code_ptr - 2, arg);\
+        tcg_debug_assert(ret =3D=3D true);
+    } else if (TCG_TARGET_REG_BITS =3D=3D 64) {
+        /* far jump: 64-bit */
+        tcg_target_long imm =3D sextreg((tcg_target_long)arg, 0, 12);
+        tcg_target_long base =3D (tcg_target_long)arg - imm;
+        tcg_out_movi(s, TCG_TYPE_PTR, TCG_REG_TMP0, base);
+        tcg_out_opc_imm(s, OPC_JALR, link, TCG_REG_TMP0, imm);
+    } else {
+        g_assert_not_reached();
+    }
+}
+
+static void tcg_out_call(TCGContext *s, tcg_insn_unit *arg)
+{
+    tcg_out_call_int(s, arg, false);
+}
--=20
2.19.1


