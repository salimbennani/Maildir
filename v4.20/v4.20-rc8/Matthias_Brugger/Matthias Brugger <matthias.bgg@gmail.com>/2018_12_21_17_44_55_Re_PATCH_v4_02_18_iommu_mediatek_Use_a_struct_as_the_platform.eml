Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:53:38 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga007.fm.intel.com (fmsmga007.fm.intel.com [10.253.24.52])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 12CC358050C;
	Fri, 21 Dec 2018 09:45:10 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga007-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 21 Dec 2018 09:45:09 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Abl51RhBdBIDhzJa7pOrHUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP7+p8SwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95MWSJfDIOy?=
 =?us-ascii?q?b4gBAeQPMulXrYbyu1QArQCmBQSuH+7v1jxFi2Xq0aEm3eksEwfL1xEgEdIUt3?=
 =?us-ascii?q?TUqc34OqAIXuCp0KnIzTTDYOlN2Tzg9YXIaA0hof6DXb1ua8ra1E4iFwbfgVWM?=
 =?us-ascii?q?tYzlPzKV2f4Ws2SB9OVgWu2vhnUoqwF0uDevx8MshpPViYISz1DJ7CN0y5s2K9?=
 =?us-ascii?q?2gUEN3f8KoHZ9Kuy2HOYZ6XNkuT3xrtSom0LELuJy2cDAOxZkp3RLTdv6KfomS?=
 =?us-ascii?q?7h7+VOucLy10iXxldb+5mh2861KvyvfmWcmxyFtKrjRKkt3Ltn0VyRzT5daISu?=
 =?us-ascii?q?Fn8keixzmPzQbT5f9AIUwukqrbMZEhzqYxlpoVr0vDAjf7lFvqgKKSbEko5+al?=
 =?us-ascii?q?5/r9brn7pZKQK5V4hwD8P6g2n8ywG+U4MgwAX2iB/uS80aXu/Un4QLVMk/03nb?=
 =?us-ascii?q?DVsJPEKsQBoK62HQtV3p8k6xexCTepzs4YkGIZLFJKZh2HlZLlO1LQL/DiC/ew?=
 =?us-ascii?q?nVCsnC1sx/DcMb3tGo/NIWTbkLf9YbZ97FZRyA4yzdBc+Z1YEL4AIO/oV0/1td?=
 =?us-ascii?q?zYCAI5MgOuz+bmDtV9yp0RWWaVDqCFN6PStEeC5vgzLOmUeI8VpDH9JuAl5/H0?=
 =?us-ascii?q?jH85hUUSfa6z0ZsXdXC3BPJmI0qCbHrog9cBF3oKvwUkQOzrjl2CTSBcZ3KoU6?=
 =?us-ascii?q?0g4TE7DZqsDZ3fSYC1nLyBwCC7E4VMaWBdClCMFnToe5+eW/gWaiKfOcthkj0C?=
 =?us-ascii?q?Vbi8RI4tzxCutAnmy7V5KurY4DEXtZXm1NJt/e3ciQky9SBoD8Say2yNTHt7nm?=
 =?us-ascii?q?USSz8y3aBwu0p9yliY3Kh8gvxYE8FT5vxTXgc7M57c0/J1C9ToVg3dedeJTU6s?=
 =?us-ascii?q?Qs+6DjEpUtIx39gObl5gFNq4kBDMwTCmA78PmLyNH5w77KTc03/1J8Z+znbG0L?=
 =?us-ascii?q?Isj10nQstJKG2nibRz9wnVB47VjUqZk7ymergb3C7I7G2D13aBvFlEUA5sVqXI?=
 =?us-ascii?q?RW0QaVHIrdvn/E/CT6WhCbI8MgRfz86PMa9KatzvjVVbS/bvItXeY2Stm2iuAR?=
 =?us-ascii?q?aE3K+DbI3ve28FxiXSFFAEkxwP/XaBLQU+Giaho2fZDDxyFVLuY1ng8fVkpHO8?=
 =?us-ascii?q?VE80ywCKb0tu17eu/h4VhPqcS+4c374euSchrSl0E0i5397MF9WAoA9hdr1GYd?=
 =?us-ascii?q?wh+FdHyX7ZtwtlM5O6K6BtmFEffBp3vk/0zBp3F5hPntIsrHMpywpyN7mV0FdA?=
 =?us-ascii?q?dzOewJDxNafbKmj0/BCzdaHW3kvS38qR+qcK8P44sUnsvBm1Fko+9HVqy9lU02?=
 =?us-ascii?q?aG6prWFgYTUJLxXVwx9xh1vLzaZig954XJ1XxjK6W0sznC2843C+sh0BqvY9Bf?=
 =?us-ascii?q?MKacHg/oD8IaH9SuKPAtm1WxdBIEPfxd+7QuP8y7cPuKwqirM/h6nDKnlGhI/J?=
 =?us-ascii?q?py0kaR+CViUO7I2JAFzuqc3guGUTf8kVigvtr2mYBCeTEdAG6/xTL4C45WY614?=
 =?us-ascii?q?ZZwLBnu2I82r2tV+gIbgWn5Z9FK5B1IKwtSpeQeUb1Hm2Q1Q1EIXoWGomCeizj?=
 =?us-ascii?q?x0lS0pobSb3CDU3+vicx8HMHZRRGZ+lVfsPZS0j9cCUUiqdQcpjhil5UX9x6RB?=
 =?us-ascii?q?v6RwNWrTQURJfyjwMW5iVLC9tr6DY85J9ZMpvj9bUOW6YVCGVLH9pwEW3D/kH2?=
 =?us-ascii?q?tb3Do7bS2luo3lnxxmj2KQNHZyo2Deec1qxxff5drcSOVV3joHQil4lDbWCkK9?=
 =?us-ascii?q?P9mv4dWbiZPDvvqiWGKmU51ZaTPrwp+YtCun+W1qBgWyn/Opld3mCwQ60TL72M?=
 =?us-ascii?q?NsVSXHtxv8Zojr16KnMeNoZEVoBVn869ZkFYF6iIc/mJYQ2X0CjJWP4XUHiXvz?=
 =?us-ascii?q?Mclc2a/maXoNRD0LzMTP7AnrxkJjNW6JyJzjVnqG3MRhfda6b3gS2iI86cBKFa?=
 =?us-ascii?q?iV4KZFnStzvlq3swbRbeJhkTcazPsk8GQajP0RuAox0iWdBagfHVVfPSzpjRiJ?=
 =?us-ascii?q?7sqxrKNKZGa0ariw1VFzndSgDLGEvwFdV2z1epYkHS9s8Mp/NEjA32H06oHhYN?=
 =?us-ascii?q?PQd84ctgWIkxfciOhYMIk+meANhSpjJGLxp3kly/MggBxq3JG6upWHKmp38KK4?=
 =?us-ascii?q?BB5YKiP6Z8cJ9j7xiqZem96c35qzEZV5BjULQJzoQOqqED0IsPToKR2OHCcgqn?=
 =?us-ascii?q?uBGrrfAAyf6Fpgr33VCJCmLHWXJHgfzdV/SxiRPk1fgAYIXDokmp41DBylxMvk?=
 =?us-ascii?q?cE1h/DAe+kb4qgdQyuJvLxT+UmDfpBqxajcpUpefKgBa7hpF50fTPsyT9eZzHy?=
 =?us-ascii?q?Be/p28ow2BMG2bZwJUDW4XXkyIHUzsPr6r5dPY6eiXGvK+L+fSYbWJseFeV+mH?=
 =?us-ascii?q?xZOs0otl/jaALMaPPmNlD/00xEVDR215G9/CljULSiwXkT/NbsGBqBe9/C13st?=
 =?us-ascii?q?6w8PDxVA3z4ouPDqNYMc9z9BCunaeDK+mQiT5jJjZFzZwM32HHybgF0F4WiiFj?=
 =?us-ascii?q?bD2tEbUGtS7QQ6PcgK5XDxgHayxtMMtE9b4z3g5IOcTDkNP6yqZ4juIpC1dCTV?=
 =?us-ascii?q?HhhsCpZckQL26hLl/IGEaLO6qAJTDQx8H3YKW8SaBfjelOth2wvyqbHFHnPjiZ?=
 =?us-ascii?q?izbpUBWvO/lWjC6HJBxepJ29chF1BGnjVt3mbBi7MN5xjTIuwLw0hmnFNWgTMT?=
 =?us-ascii?q?Vnd0NNr7uQ7T5Xg/llGmxB6GZlIveAmyqD8+bYLZMW4rNXBXFFkORVqEsng+9E?=
 =?us-ascii?q?6ydLAuNosC7fot9nv1yl1OKIz2wjGDhJpyxEzLiMsElvPe2N9J5aXl6U9gMR4H?=
 =?us-ascii?q?7WDA4F8Z8tMNrluqYY78XVjKLiYGNY9NjV+40ZGtLMKNOvOWAkdxHuHWiQRDEC?=
 =?us-ascii?q?R3aLOHvFhkpS2KWI8XeV7ZQmgpvhgpwDTvlcTlNjRd0ADUEwOdUePJd2Vyhsu6?=
 =?us-ascii?q?SGg8EF/zLqqRDNWMVbt4uBXP2dKfrqITedy7JDYk1bkvvDMY0PO9ijiARZYV5g?=
 =?us-ascii?q?kdGPQhKIUA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AcAABTJR1ch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2sng32De4QejV0tFIkTjjiBcxMBARgTAYcwIjQJDQEDAQEBAQE?=
 =?us-ascii?q?BAgETAQEBCA0JCCkjDII6KQGCZgEBAQECAQECIAQLAQ0BGx0BAwEBCQEBBQULD?=
 =?us-ascii?q?QICJgICAx4CEQEFARwGAQwGAgEBAYMdgWkBAw0IBAGaSzyLGXwWBQEXgncFhD8?=
 =?us-ascii?q?KGScNXoE3AgYSeYoYgRyCFoERJ4I9LoJXhTKCVwKhEjMHAoIpjA2DLQYYiXqHZ?=
 =?us-ascii?q?YlThhCKEgIEAgQFAgUPIYElgg4zGiNQMYI7ghsMF4NKilQ/MoEEAQEBi2MrgiA?=
 =?us-ascii?q?BAQ?=
X-IPAS-Result: =?us-ascii?q?A0AcAABTJR1ch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?ng32De4QejV0tFIkTjjiBcxMBARgTAYcwIjQJDQEDAQEBAQEBAgETAQEBCA0JC?=
 =?us-ascii?q?CkjDII6KQGCZgEBAQECAQECIAQLAQ0BGx0BAwEBCQEBBQULDQICJgICAx4CEQE?=
 =?us-ascii?q?FARwGAQwGAgEBAYMdgWkBAw0IBAGaSzyLGXwWBQEXgncFhD8KGScNXoE3AgYSe?=
 =?us-ascii?q?YoYgRyCFoERJ4I9LoJXhTKCVwKhEjMHAoIpjA2DLQYYiXqHZYlThhCKEgIEAgQ?=
 =?us-ascii?q?FAgUPIYElgg4zGiNQMYI7ghsMF4NKilQ/MoEEAQEBi2MrgiABAQ?=
X-IronPort-AV: E=Sophos;i="5.56,382,1539673200"; 
   d="scan'208";a="143111769"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 21 Dec 2018 09:45:07 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2391067AbeLURpC (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Fri, 21 Dec 2018 12:45:02 -0500
Received: from mail-wm1-f66.google.com ([209.85.128.66]:40769 "EHLO
        mail-wm1-f66.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1731150AbeLURpB (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 21 Dec 2018 12:45:01 -0500
Received: by mail-wm1-f66.google.com with SMTP id f188so6486023wmf.5;
        Fri, 21 Dec 2018 09:44:58 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=subject:to:cc:references:from:openpgp:autocrypt:message-id:date
         :user-agent:mime-version:in-reply-to:content-language
         :content-transfer-encoding;
        bh=yQkmZzZyXGoJXiFchhrQyJkpQERkH20QIS6NwSQuAKE=;
        b=JfGOBZzQ0xR3v/7e2LHBANjASAi3Zb3rBEnpMdDQuaYKrUax44Z4oGXmr9sdL9SjCn
         dI3+7vzTxOb1CirBqMVFqtPDQWOr+zmag6j0cGV4siTb+BorNqtHrJrsGXgLd02nL7Dh
         GSGwgfdycx/GvwJ3CzsI+FFQfAQ34gKoXTbaoEpXLzTyFSbgopdauG6Fr1VVIYlRzLG8
         RTjX5p6w77ThpzeSNrwtMRAw7EPO4pC1FfVmqebwp06qMvog8srV0UwGJSmXPweGCh1i
         i9/lkA2QoXr33ZEANnaWJzC3P/hcadD5ieNoENiNCpg37KwUZUdMDrmyTK+Eq6JswQ5M
         qf7w==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:subject:to:cc:references:from:openpgp:autocrypt
         :message-id:date:user-agent:mime-version:in-reply-to
         :content-language:content-transfer-encoding;
        bh=yQkmZzZyXGoJXiFchhrQyJkpQERkH20QIS6NwSQuAKE=;
        b=jbFuB/suGQ1NkkPP3EtF4SoKKPTCWKhkVwYcAGSo1MdU2GfO/BeYfbmm30Orv8fyfY
         iderwdRUAye0JrsHjV6AjR0TXIWrHrCe/XqcAA8e4PCRR+xdzI50brmVJ6QkEHPR1N2H
         m/qaoQ0tb/xQ20Ye+ju4adYbFEtye8lfjypXUovAXLvoR+lIiEj2lw3CvIJYPa2P01pM
         OGtlHpso70VVXM7DDWAz9efqu9xar6bNngG1aO1U8jmT5A0ihyw0BnM9v5l6C3H/4+yc
         hUJnlEz+Q1+c1ez1dfzCNB37kFDOUiVs2Wm3H+7GsqxNmHGFc9VWj6rduIPxZilXd0hs
         AukQ==
X-Gm-Message-State: AA+aEWYxr2n+Q8iRWFqN6EmjsOaE09LjnFSuZREuGEz3kClsVW3S9Gzz
        zkkfNv6bO+Ap2gW7iJO8SMU=
X-Google-Smtp-Source: ALg8bN5XH5wpT2OmAspg1wposIdIDVur4eXTCz7M/w5cRTaFu6H74juUFSvFoNaHlBolDr3EzMhu6A==
X-Received: by 2002:a1c:30b:: with SMTP id 11mr3674570wmd.110.1545414297742;
        Fri, 21 Dec 2018 09:44:57 -0800 (PST)
Received: from ziggy.stardust ([93.176.153.35])
        by smtp.gmail.com with ESMTPSA id w18sm9398387wru.54.2018.12.21.09.44.55
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Fri, 21 Dec 2018 09:44:56 -0800 (PST)
Subject: Re: [PATCH v4 02/18] iommu/mediatek: Use a struct as the platform
 data
To: Yong Wu <yong.wu@mediatek.com>, Joerg Roedel <joro@8bytes.org>,
        Robin Murphy <robin.murphy@arm.com>,
        Rob Herring <robh+dt@kernel.org>
Cc: Tomasz Figa <tfiga@google.com>, Will Deacon <will.deacon@arm.com>,
        linux-mediatek@lists.infradead.org, srv_heupstream@mediatek.com,
        devicetree@vger.kernel.org, linux-kernel@vger.kernel.org,
        linux-arm-kernel@lists.infradead.org,
        iommu@lists.linux-foundation.org, arnd@arndb.de,
        yingjoe.chen@mediatek.com, youlin.pei@mediatek.com,
        Nicolas Boichat <drinkcat@chromium.org>,
        Arvind Yadav <arvind.yadav.cs@gmail.com>
References: <1544258371-4600-1-git-send-email-yong.wu@mediatek.com>
 <1544258371-4600-3-git-send-email-yong.wu@mediatek.com>
From: Matthias Brugger <matthias.bgg@gmail.com>
Openpgp: preference=signencrypt
Autocrypt: addr=matthias.bgg@gmail.com; prefer-encrypt=mutual; keydata=
 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
 jrHWeQEI2ucSKsNa8FllDmG/fQ==
Message-ID: <be32c912-359e-73c9-ca24-d0cbface47d3@gmail.com>
Date: Fri, 21 Dec 2018 18:44:55 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.3.3
MIME-Version: 1.0
In-Reply-To: <1544258371-4600-3-git-send-email-yong.wu@mediatek.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org



On 08/12/2018 09:39, Yong Wu wrote:
> Use a struct as the platform special data instead of the enumeration.
> This is a prepare patch for adding mt8183 iommu support.
> 
> Signed-off-by: Yong Wu <yong.wu@mediatek.com>
> ---

Reviewed-by: Matthias Brugger <matthias.bgg@gmail.com>

>  drivers/iommu/mtk_iommu.c | 24 ++++++++++++++++--------
>  drivers/iommu/mtk_iommu.h |  6 +++++-
>  2 files changed, 21 insertions(+), 9 deletions(-)
> 
> diff --git a/drivers/iommu/mtk_iommu.c b/drivers/iommu/mtk_iommu.c
> index 44bd5b9..9a2225b 100644
> --- a/drivers/iommu/mtk_iommu.c
> +++ b/drivers/iommu/mtk_iommu.c
> @@ -54,7 +54,7 @@
>  #define REG_MMU_CTRL_REG			0x110
>  #define F_MMU_PREFETCH_RT_REPLACE_MOD		BIT(4)
>  #define F_MMU_TF_PROTECT_SEL_SHIFT(data) \
> -	((data)->m4u_plat == M4U_MT2712 ? 4 : 5)
> +	((data)->plat_data->m4u_plat == M4U_MT2712 ? 4 : 5)
>  /* It's named by F_MMU_TF_PROT_SEL in mt2712. */
>  #define F_MMU_TF_PROTECT_SEL(prot, data) \
>  	(((prot) & 0x3) << F_MMU_TF_PROTECT_SEL_SHIFT(data))
> @@ -517,7 +517,7 @@ static int mtk_iommu_hw_init(const struct mtk_iommu_data *data)
>  	}
>  
>  	regval = F_MMU_TF_PROTECT_SEL(2, data);
> -	if (data->m4u_plat == M4U_MT8173)
> +	if (data->plat_data->m4u_plat == M4U_MT8173)
>  		regval |= F_MMU_PREFETCH_RT_REPLACE_MOD;
>  	writel_relaxed(regval, data->base + REG_MMU_CTRL_REG);
>  
> @@ -538,14 +538,14 @@ static int mtk_iommu_hw_init(const struct mtk_iommu_data *data)
>  		F_INT_PRETETCH_TRANSATION_FIFO_FAULT;
>  	writel_relaxed(regval, data->base + REG_MMU_INT_MAIN_CONTROL);
>  
> -	if (data->m4u_plat == M4U_MT8173)
> +	if (data->plat_data->m4u_plat == M4U_MT8173)
>  		regval = (data->protect_base >> 1) | (data->enable_4GB << 31);
>  	else
>  		regval = lower_32_bits(data->protect_base) |
>  			 upper_32_bits(data->protect_base);
>  	writel_relaxed(regval, data->base + REG_MMU_IVRP_PADDR);
>  
> -	if (data->enable_4GB && data->m4u_plat != M4U_MT8173) {
> +	if (data->enable_4GB && data->plat_data->m4u_plat != M4U_MT8173) {
>  		/*
>  		 * If 4GB mode is enabled, the validate PA range is from
>  		 * 0x1_0000_0000 to 0x1_ffff_ffff. here record bit[32:30].
> @@ -556,7 +556,7 @@ static int mtk_iommu_hw_init(const struct mtk_iommu_data *data)
>  	writel_relaxed(0, data->base + REG_MMU_DCM_DIS);
>  
>  	/* It's MISC control register whose default value is ok except mt8173.*/
> -	if (data->m4u_plat == M4U_MT8173)
> +	if (data->plat_data->m4u_plat == M4U_MT8173)
>  		writel_relaxed(0, data->base + REG_MMU_STANDARD_AXI_MODE);
>  
>  	if (devm_request_irq(data->dev, data->irq, mtk_iommu_isr, 0,
> @@ -589,7 +589,7 @@ static int mtk_iommu_probe(struct platform_device *pdev)
>  	if (!data)
>  		return -ENOMEM;
>  	data->dev = dev;
> -	data->m4u_plat = (enum mtk_iommu_plat)of_device_get_match_data(dev);
> +	data->plat_data = of_device_get_match_data(dev);
>  
>  	/* Protect memory. HW will access here while translation fault.*/
>  	protect = devm_kzalloc(dev, MTK_PROTECT_PA_ALIGN * 2, GFP_KERNEL);
> @@ -733,9 +733,17 @@ static int __maybe_unused mtk_iommu_resume(struct device *dev)
>  	SET_NOIRQ_SYSTEM_SLEEP_PM_OPS(mtk_iommu_suspend, mtk_iommu_resume)
>  };
>  
> +static const struct mtk_iommu_plat_data mt2712_data = {
> +	.m4u_plat     = M4U_MT2712,
> +};
> +
> +static const struct mtk_iommu_plat_data mt8173_data = {
> +	.m4u_plat     = M4U_MT8173,
> +};
> +
>  static const struct of_device_id mtk_iommu_of_ids[] = {
> -	{ .compatible = "mediatek,mt2712-m4u", .data = (void *)M4U_MT2712},
> -	{ .compatible = "mediatek,mt8173-m4u", .data = (void *)M4U_MT8173},
> +	{ .compatible = "mediatek,mt2712-m4u", .data = &mt2712_data},
> +	{ .compatible = "mediatek,mt8173-m4u", .data = &mt8173_data},
>  	{}
>  };
>  
> diff --git a/drivers/iommu/mtk_iommu.h b/drivers/iommu/mtk_iommu.h
> index 778498b..333a0ef 100644
> --- a/drivers/iommu/mtk_iommu.h
> +++ b/drivers/iommu/mtk_iommu.h
> @@ -41,6 +41,10 @@ enum mtk_iommu_plat {
>  	M4U_MT8173,
>  };
>  
> +struct mtk_iommu_plat_data {
> +	enum mtk_iommu_plat m4u_plat;
> +};
> +
>  struct mtk_iommu_domain;
>  
>  struct mtk_iommu_data {
> @@ -57,7 +61,7 @@ struct mtk_iommu_data {
>  	bool				tlb_flush_active;
>  
>  	struct iommu_device		iommu;
> -	enum mtk_iommu_plat		m4u_plat;
> +	const struct mtk_iommu_plat_data *plat_data;
>  
>  	struct list_head		list;
>  };
> 
