Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 08:48:28 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 80CB35805FC;
	Mon, 17 Dec 2018 10:45:42 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga004-1.jf.intel.com with ESMTP; 17 Dec 2018 10:45:42 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A9X3jxxQ+PPWuZKyrtAH/2vtP5tpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YReGt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZH42y?=
 =?us-ascii?q?cYUPAeoCM+hWoYbyqFkBogexCwm3HOPiyCRFhmP00KAgz+gtDQ/L0Q4mEtkTsH?=
 =?us-ascii?q?rUttL1NKIKXO6yzanIzivMZO5T1zfn8ofIbA4uoe2NXLltdsfRzEgvFwDbgVmK?=
 =?us-ascii?q?qozlJSma1voTvGiH7uttTuWvi3Q9pA5tpjig2N0ghZXOhoIQ013J8zhyzoUtJd?=
 =?us-ascii?q?CgVkJ3fdqpHIFNuyyUKYd6WN4uTmJ0tCogy7ALu4a3cDUFxZg63RLTdvOKfomS?=
 =?us-ascii?q?7h7+SeqcIC10iG9qdb+5mh2861KvyvfmWcmxyFtKrjRKkt3Ltn0VyRzT5daISu?=
 =?us-ascii?q?Fn8keixzmPzQbT5f9AIUwukqrbMZEhzqYxlpoVr0vDAjf7lFvqgKKSbEko5+al?=
 =?us-ascii?q?5/r9brn7pZKQK5V4hwD8P6g2n8ywG+U4MgwAX2iB/uS80aXu/Un4QLVMk/03nb?=
 =?us-ascii?q?DVsJPEKsQBoK62HQtV3p8k6xexCTepzs4YkGIZLFJKZh2HlZLlO1LQL/DiC/ew?=
 =?us-ascii?q?nVCsnC1sx/DcMb3tGo/NIWTbkLf9YbZ97FZRyA4yzdBc+Z1YEL4AIO/oV0/1td?=
 =?us-ascii?q?zYCAI5MgOuz+bmDtV9yp0RWWaVDqCFN6PStEeC5vgzLOmUeI8VpDH9JuAl5/H0?=
 =?us-ascii?q?jH85hUUSfa6z0ZsXdXC3BPJmI0qCbHrog9cBF3oKvwUkQOzrjl2CTSBcZ3KoU6?=
 =?us-ascii?q?0g4TE7DZqsDZ3fSYC1nLyBwCC7E4VUZmBBFF+AC3Tod4KCW/cKbyKfOcthkj0C?=
 =?us-ascii?q?Vbi8RI4tzxCutAnmy7V5KurY4DEXtZXm1NJt/e3ciQky9SBoD8Say2yCVXp0nm?=
 =?us-ascii?q?MPRz81xqx/u1ZyylWY3Kh8gvxYE8FT5vxTXgc7M57c0/J1C9ToVg3dedeJTU6s?=
 =?us-ascii?q?Qs+6DjEpUtIx39gObl5+G9q4iBDPxS6qA74PmLyNC5w56abc33n3J8ZgxHfKzq?=
 =?us-ascii?q?ghj186QsRRMW2qnLJw9w/WB4TRiUWWi76qdbgA3C7K7GqM0HCBvF9GXwJqUaXK?=
 =?us-ascii?q?R3YfZlDIotT/4U/CS7yuCbEjMgZazc6CK61KasDmjFlcRffjPsjebHy1m2uqGR?=
 =?us-ascii?q?mIwbaMZpLwe2oBxCXdFFQEkwcL8HmbLwc+GDmur3jeDDN0E1LveF3j8e9lpXO/?=
 =?us-ascii?q?T080yRyKbkJ727q0/B4VmeKTS/cJ0r0Yvychri1+HEyh0NLOF9qAuw1hcb1AYd?=
 =?us-ascii?q?M85VdH0n7Ztwx9P5C6M6BunFkecx5zv0Pv0RV3BZ5NkcwrrHMs0QpzJriU0FJH?=
 =?us-ascii?q?dzOEw5/wPqfbJXX1/BCqc6TWwE3R0M6K+qcT7/Q1s0/svAW3GUst7Xpm08NZ3G?=
 =?us-ascii?q?CB5prXFgUSV5HxUkEp9xVho7HaYy89557b1HF2MKm0tCPC1MwtBOc/1hmgeNJf?=
 =?us-ascii?q?OrueFADuC80aG9SuKOsyllmpcxIIJvxd+LQ1PsOmbfSG3qGrMf1knDKni2RH/Y?=
 =?us-ascii?q?983liN9yp6Vu7HwZIFz+uE0QuAUjf2lE2hvdzvmYBYeTESGXKyyTLlBIFNfKJy?=
 =?us-ascii?q?Z5sECWC0L82x2Np+nZ/tV2dE+1G5A1MJxdGmeQCVb1z7xgBQ0UUXoXq6mSq31T?=
 =?us-ascii?q?B0kjcprraB0yzK2ejtaB0HOmtTTml4kVjsOZS0j8wdXEWwbwkplQGp5Ebgy6hA?=
 =?us-ascii?q?uaR/KXLeQUNJfyjwMmFjXbG8truEY85T9pwotT9bX/i7YVCfUrT9uQcV0zv/H2?=
 =?us-ascii?q?tCwzA2bzOqtY/jnxx5i2KdK2x/rGHDdsFzxhff5drcSuBX3jcdQCl4iD/XBkWz?=
 =?us-ascii?q?PtWz/NWUkYvDvf66V267SpJTdizrx5uatCSn/W1qHQG/n/erl9znCwc61jX319?=
 =?us-ascii?q?trVSXOtxv8Zojr16KnMeNoZEVoBVn869ZkFYF6iIc/mJYQ2X0CjJWP4XUHiXvz?=
 =?us-ascii?q?Mclc2a/mb3oCXz8Lz8TV4Aj4wkJjKH2Jypn9VnWcxMtheta7bnkX2iI788BFFq?=
 =?us-ascii?q?OU4KZYkityp1qytRjRbuRlnjcB1fsu72YXg+QIuAou1CqRGL4TEldDPSzwiRuI?=
 =?us-ascii?q?9cuxo7tNZGagarWw0Et+nda8DLCNuA1cWXD5eos8Ei909MlwLFXM0Hjr4IH+ZN?=
 =?us-ascii?q?bQdc4TtgGTkxrYk+hVL5cxmuALhCV9P2L9oGYly/U6jRF12ZG6vY6HK3hi/a6j?=
 =?us-ascii?q?Ax5YMCH1aN0X+j33kalemcOW1Zi1Hpp9AjULQIfoTfWwHT0Jr/vnMAKOECAmpn?=
 =?us-ascii?q?efBLrSBguf6EZgr3LSHJGnLXCXJH8Fzdp8QBmRPlBQgAcRXD8ihJ42ChiqxND9?=
 =?us-ascii?q?cEd+/j0R5ET3qh5SxeJzLRX/Tn3TpAS1ajc3VZifKgBZ7hpZ6kfRMMye6P9zHi?=
 =?us-ascii?q?5C8p2gqgyNNnKUZwBSAW4VXUyEAkjpPqOy6tnY7+iYGu2+IuPOYLWJtOxeTuqI?=
 =?us-ascii?q?yoip0od85DaMMcOPPnZ5Av0/20pDW215GsvDlzUOTSwXizzCb8qBqBig/S13q9?=
 =?us-ascii?q?i18O73VwL3+YuPF7xSPM1v+x+ogKeDNO2QhCdjJTZbzJMMwnDIx6YF3F4PkCFj?=
 =?us-ascii?q?bD2tEbUGtS7QQ6PcgK5XDxgHayxtMMtE9b4z3g5IOcTDkNP6yqZ4juIpC1dCTV?=
 =?us-ascii?q?HugNypatcQI26jNFLLHkKLNLWdKD3PwsH3Z768SLJKgOVVsR2wpSiUE0v5Mjuf?=
 =?us-ascii?q?kDnpUgilMftQgyGDIBxepIa9fw5xCWjiSdLqcAG0PMVrgj0237I0gGjHNWodMT?=
 =?us-ascii?q?h6bkNMoaec7SJegvVjBWNB6mBpIvWDmyac9+PYMIoZseN3AiRokOJX+HQ7xKFT?=
 =?us-ascii?q?7CFBRfx1njPdr99uo168lOmPxSFqUB5PqjZNmYKKsl9uOaTf9plcR3nE+AgB4n?=
 =?us-ascii?q?mXCxQP9JNZDYilkqZdx8PP3IHuLT5Yu/GSw4FUU8HSJc+cMDwiLB/gAhbQDQ0Y?=
 =?us-ascii?q?XXiqP2SZjEtYxrXa8nyTs4h/r53Em4QHQbwdU0Y6UrseC0J4DJkBLY1xUzcMj7?=
 =?us-ascii?q?GWlogL6GC4oR2XQ99V7b7dUffHJPTsJX66l7Baagcaief9LIcecI7h0lJvdktS?=
 =?us-ascii?q?m57DEE7dG9tKp3syPUcPvExR/S0mHSUI0EX/Z1bouSdLGA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AJAABz7hdch0O0hNFjGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBVAEBAQEBAQsBg2sng3yIeIsZgWAtFJdYgV8SAQEYEwGHViI?=
 =?us-ascii?q?3Bg0BAwEBAQEBAQIBEwEBAQoLCQgpIwyCNiQBgmIBAgMBAiAEGQEBNwEFCQEBC?=
 =?us-ascii?q?hgCAhEVAgIDVAYBDAYCAQEBgx2CAQQBp09wfDOCdgEBBYJDhFwIgQuLM4FXP4E?=
 =?us-ascii?q?4gmuEPC1XgkmCV4lAgXiEXjeFPYsRBwKCJASIJYcHBhiBXYgnJocoLIkQkAECB?=
 =?us-ascii?q?AIEBQITAYFcgXgzGgQfgzyCGwsBF4NKinRRgQUBAY1vAQE?=
X-IPAS-Result: =?us-ascii?q?A0AJAABz7hdch0O0hNFjGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BVAEBAQEBAQsBg2sng3yIeIsZgWAtFJdYgV8SAQEYEwGHViI3Bg0BAwEBAQEBA?=
 =?us-ascii?q?QIBEwEBAQoLCQgpIwyCNiQBgmIBAgMBAiAEGQEBNwEFCQEBChgCAhEVAgIDVAY?=
 =?us-ascii?q?BDAYCAQEBgx2CAQQBp09wfDOCdgEBBYJDhFwIgQuLM4FXP4E4gmuEPC1XgkmCV?=
 =?us-ascii?q?4lAgXiEXjeFPYsRBwKCJASIJYcHBhiBXYgnJocoLIkQkAECBAIEBQITAYFcgXg?=
 =?us-ascii?q?zGgQfgzyCGwsBF4NKinRRgQUBAY1vAQE?=
X-IronPort-AV: E=Sophos;i="5.56,366,1539673200"; 
   d="scan'208";a="44392101"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 17 Dec 2018 10:45:40 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2389107AbeLQSmi (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 17 Dec 2018 13:42:38 -0500
Received: from userp2120.oracle.com ([156.151.31.85]:42068 "EHLO
        userp2120.oracle.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727031AbeLQSmh (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 17 Dec 2018 13:42:37 -0500
Received: from pps.filterd (userp2120.oracle.com [127.0.0.1])
        by userp2120.oracle.com (8.16.0.22/8.16.0.22) with SMTP id wBHIcoEs075359;
        Mon, 17 Dec 2018 18:42:24 GMT
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=oracle.com; h=subject : to : cc :
 references : from : message-id : date : mime-version : in-reply-to :
 content-type : content-transfer-encoding; s=corp-2018-07-02;
 bh=5NQAwKI6BPkMli61v3/BbXZPUF3F0B7MFFmBnQFNKgk=;
 b=p7n4cSGvtMxSsCu0np6uk2cEH/1hNoZqvzlZyW/kxapIA5jSmEYNcsxrfbYjm+P7urFx
 N6YJjNSezMu7OPBdvgWZ4lF4b3Z6UHwnzu55UUK2WehLPEEtI4bJV7bVmbMm4fRivz85
 OdV3Zsnk0b6WxVvBvbJkwOw+Ur5ybJq3RX+lV/ZNmqeEHIpHna/PbmHI6robD5neWMLS
 zRmJJfckiWNUBUJeI1oBBEqQNla/4jUE1Gnf5RtjVdRvby6n7tpvDXcCg3UKBjMq043A
 6ANYmBND/7zgaJJWxsj7pIeUtc4KYX9TnxafZPG9+kjbGIH2IalKMG7Gyi3kt24K8tlu AQ== 
Received: from aserv0022.oracle.com (aserv0022.oracle.com [141.146.126.234])
        by userp2120.oracle.com with ESMTP id 2pct8qq5jk-1
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
        Mon, 17 Dec 2018 18:42:24 +0000
Received: from userv0121.oracle.com (userv0121.oracle.com [156.151.31.72])
        by aserv0022.oracle.com (8.14.4/8.14.4) with ESMTP id wBHIgM0o005317
        (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
        Mon, 17 Dec 2018 18:42:22 GMT
Received: from abhmp0008.oracle.com (abhmp0008.oracle.com [141.146.116.14])
        by userv0121.oracle.com (8.14.4/8.13.8) with ESMTP id wBHIgJug003501;
        Mon, 17 Dec 2018 18:42:19 GMT
Received: from [192.168.1.164] (/50.38.38.67)
        by default (Oracle Beehive Gateway v4.0)
        with ESMTP ; Mon, 17 Dec 2018 10:42:19 -0800
Subject: Re: [PATCH 2/3] hugetlbfs: Use i_mmap_rwsem to fix page
 fault/truncate race
To: "Aneesh Kumar K.V" <aneesh.kumar@linux.ibm.com>,
        linux-mm@kvack.org, linux-kernel@vger.kernel.org
Cc: Michal Hocko <mhocko@kernel.org>, Hugh Dickins <hughd@google.com>,
        Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>,
        "Aneesh Kumar K . V" <aneesh.kumar@linux.vnet.ibm.com>,
        Andrea Arcangeli <aarcange@redhat.com>,
        "Kirill A . Shutemov" <kirill.shutemov@linux.intel.com>,
        Davidlohr Bueso <dave@stgolabs.net>,
        Prakash Sangappa <prakash.sangappa@oracle.com>,
        Andrew Morton <akpm@linux-foundation.org>,
        stable@vger.kernel.org
References: <20181203200850.6460-1-mike.kravetz@oracle.com>
 <20181203200850.6460-3-mike.kravetz@oracle.com>
 <27f8893b-57b3-088d-2d48-9e8acc5987bd@linux.ibm.com>
From: Mike Kravetz <mike.kravetz@oracle.com>
Message-ID: <f6fd9491-4b3d-16ca-f606-025c78756936@oracle.com>
Date: Mon, 17 Dec 2018 10:42:17 -0800
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.3.1
MIME-Version: 1.0
In-Reply-To: <27f8893b-57b3-088d-2d48-9e8acc5987bd@linux.ibm.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
X-Proofpoint-Virus-Version: vendor=nai engine=5900 definitions=9110 signatures=668679
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0 suspectscore=0 malwarescore=0
 phishscore=0 bulkscore=0 spamscore=0 mlxscore=0 mlxlogscore=999
 adultscore=0 classifier=spam adjust=0 reason=mlx scancount=1
 engine=8.0.1-1810050000 definitions=main-1812170163
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 12/17/18 2:25 AM, Aneesh Kumar K.V wrote:
> On 12/4/18 1:38 AM, Mike Kravetz wrote:
>> hugetlbfs page faults can race with truncate and hole punch operations.
>> Current code in the page fault path attempts to handle this by 'backing
>> out' operations if we encounter the race.  One obvious omission in the
>> current code is removing a page newly added to the page cache.  This is
>> pretty straight forward to address, but there is a more subtle and
>> difficult issue of backing out hugetlb reservations.  To handle this
>> correctly, the 'reservation state' before page allocation needs to be
>> noted so that it can be properly backed out.  There are four distinct
>> possibilities for reservation state: shared/reserved, shared/no-resv,
>> private/reserved and private/no-resv.  Backing out a reservation may
>> require memory allocation which could fail so that needs to be taken
>> into account as well.
>>
>> Instead of writing the required complicated code for this rare
>> occurrence, just eliminate the race.  i_mmap_rwsem is now held in read
>> mode for the duration of page fault processing.  Hold i_mmap_rwsem
>> longer in truncation and hold punch code to cover the call to
>> remove_inode_hugepages.
>>
>> Cc: <stable@vger.kernel.org>
>> Fixes: ebed4bfc8da8 ("hugetlb: fix absurd HugePages_Rsvd")
>> Signed-off-by: Mike Kravetz <mike.kravetz@oracle.com>
>> ---
>>   fs/hugetlbfs/inode.c | 4 ++--
>>   1 file changed, 2 insertions(+), 2 deletions(-)
>>
>> diff --git a/fs/hugetlbfs/inode.c b/fs/hugetlbfs/inode.c
>> index 32920a10100e..3244147fc42b 100644
>> --- a/fs/hugetlbfs/inode.c
>> +++ b/fs/hugetlbfs/inode.c
>> @@ -505,8 +505,8 @@ static int hugetlb_vmtruncate(struct inode *inode, loff_t
>> offset)
>>       i_mmap_lock_write(mapping);
>>       if (!RB_EMPTY_ROOT(&mapping->i_mmap.rb_root))
>>           hugetlb_vmdelete_list(&mapping->i_mmap, pgoff, 0);
>> -    i_mmap_unlock_write(mapping);
>>       remove_inode_hugepages(inode, offset, LLONG_MAX);
>> +    i_mmap_unlock_write(mapping);
>>       return 0;
>>   }
> 
> 
> We used to do remove_inode_hugepages()
> 
>     mutex_lock(&hugetlb_fault_mutex_table[hash]);
>     i_mmap_lock_write(mapping);
>     hugetlb_vmdelete_list(&mapping->i_mmap,
>     i_mmap_unlock_write(mapping);
> 
> did we change the lock ordering with this patch?

Thanks for taking a look.

Yes, we did take locks in that order in the 'if (unlikely(page_mapped(page)))'
case within remove_inode_hugepages.  That ordering was important as the
fault_mutex prevented faults while unmapping the page in all potential
mappings.

With the change above, we will be holding i_mmap_rwsem in write mode while
calling remove_inode_hugepages.  The page fault code (modified in previous
patch) acquires i_mmap_rwsem in read mode.  Therefore, no page faults can
occur and, that 'if (unlikely(page_mapped(page)))' case within
remove_inode_hugepages will never happen.  The now dead code is removed in
the subsequent patch.

As you suggested in a comment to the subsequent patch, it would be better to
combine the patches and remove the dead code when it becomes dead.  I will
work on that.  Actually some of the code in patch 3 applies to patch 1 and
some applies to patch 2.  So, it will not be simply combining patch 2 and 3.

-- 
Mike Kravetz
