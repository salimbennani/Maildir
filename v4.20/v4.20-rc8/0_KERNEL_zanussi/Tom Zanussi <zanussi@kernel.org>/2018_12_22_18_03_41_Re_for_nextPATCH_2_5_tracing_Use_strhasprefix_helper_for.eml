Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:58:31 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id D5D3C5805CF;
	Sat, 22 Dec 2018 10:03:52 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by fmsmga002-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Dec 2018 10:03:51 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AUGnsvxIsrszdOcUGUNmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULv77rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZXchfSixPDJ2y?=
 =?us-ascii?q?YYQNAeoOIeFWoIbyqVsVtRuzBxKhBP/txzJSmnP7x7E23uYnHArb3AIgBdUOsH?=
 =?us-ascii?q?HModvrM6cSVP2+w6rSwjXFcvNWwiz96InVeR0moPCDR7RwcdfKyUk0FgPIlVaQ?=
 =?us-ascii?q?ppL/PzOTyOsNt3KX7+16VeKgkmMqrRx6rDaoxscpkIbJh4QVx0jF9SV/3IY6O9?=
 =?us-ascii?q?m4RFRnbt6jFZtdsTyROYhuQs46XW1kpCI3xqcbtZO1YiQG0okryh3DZ/CdcoWF?=
 =?us-ascii?q?4ArvWeKSLDtimn5pZq6ziwys/UWuyeDwTMq53EtMoyFYiNfDrGoN2AbW6sWfSv?=
 =?us-ascii?q?ty4EOh2TGX2gDN5eFLP1o0mbDYK5E/2L4wkIQcsUDZEi/xgkX2g7eadkQi+ue2?=
 =?us-ascii?q?9+TqeqvqqoOYOoNulw3zPLoiltaiDek7LgQCRWmW9Oak2L3m50L5QbFKjvMskq?=
 =?us-ascii?q?netZDXPcAbpq+/Aw9I3Ycv8hW/ACm80NQeg3YHKEtJeBWJjojvJV7OOuv1Demw?=
 =?us-ascii?q?g1uyijdn3fPGMaP7ApXLMHfDlK3tfbFn605T0AYz18xQ54pICrEdJ/L+QkvxtN?=
 =?us-ascii?q?3bDhAnKQC1zPvnBc551oMfX2KPH6CYPLnTsV+O+uIgPe2MaJUJtzb6Lvgv/+Tu?=
 =?us-ascii?q?gmMhmV8BYamp2oMaaHCiEfRnP0WWe33sjs0BEWcXpAU+SuPqhUaGUT5SYXayQq?=
 =?us-ascii?q?096is6CIKgEYfMWIStjKad0ye8G51cfnpGBUyUEXf0a4WEXO8BZziJIs9hlTwE?=
 =?us-ascii?q?VqKtS5U72hGsrwL6z7tnLuzJ+iwXr57j1d515/HNmhE27zB7E8Od02SVRWFugm?=
 =?us-ascii?q?wIXyM23Lx4oUFlyVeMy654j+ZcFdxS/fxJVAg6OIXYz+x7DdDyRw3Acs2ISFag?=
 =?us-ascii?q?XtWpHzUxQsgtzN8JZkZ3A8+igQzb3yq2H78VkKSGC4Eu/aLCwXf9PcZ9xGzA1K?=
 =?us-ascii?q?k6kVYmRMxDNWmlhq568wjeHIrJk0Sfl6a3eqUQxi/N9GGfzWWQuEFUShJ/UaLA?=
 =?us-ascii?q?XXoHfEvZscz55l/eT7+pEbkoLxFOydCcJadQat3ml1NGROz9N9TYeG+xn2awBR?=
 =?us-ascii?q?CVxrKDdobqemMd3DnDB0gAiQwc4XGGNQ0mDCe7v23eFCBuFU7oY0707el+qXa7?=
 =?us-ascii?q?TkgozwGKb0xtzaa19gQShfyGT/MT37QEuCg6pjVwHVa92c/WCtWaqwpgeqVcfc?=
 =?us-ascii?q?0y4FNd2W3FsAx9O4SqL7p+iV4GbwR3o0Tu2g1tBYVEj8cro20lzQpoJa2DzVNO?=
 =?us-ascii?q?aimX3ZbzOr3QNGn/5xSva6/Q2lHD39ea4KYP6PIkq1r9uAGlDFYt83Ji09NNyX?=
 =?us-ascii?q?uT+o3KDBYOUZL2Sks29wV6q6vGbSUn5oLU1WdjMa+7sjLZ39IpBe0lyguvfttF?=
 =?us-ascii?q?MaOEEhPyHNMeB8S0NOMqnF2pZAoePO9O7K40I9+md/ye1a6xPeZvgCipjX5a74?=
 =?us-ascii?q?B6yE6M8TRzSvTJ35oc3/6XxA+HWCrig1e7tcD3n5tJZTUTHmq51CjlC5RdZqx0?=
 =?us-ascii?q?fYYXF2iuJ9e7ycl5h57oQ3RY7kKsB0sa2M+1fhqfd1z83QxK2UUXu3Cngja4zz?=
 =?us-ascii?q?pvnjEtr6qf2jHOwuv4eBoGPG5LWHdtjVP2LYeoiNAaWVCibxI1mxu9+Ub6269b?=
 =?us-ascii?q?qbx9L2bJW0dIfCv2L2Z4XqurrLWCYM1P6JIusSpJVuSxelSaSr/7oxsH3CLvBW?=
 =?us-ascii?q?pexDYndz60vpX1hQB1iGWYLHxrtnrWZdlwxQvD5NzbXfNQ3iAJRC5ihTnVB1i8?=
 =?us-ascii?q?OcKk/dGVl5fFr+C/WHitVpxVcSn304yAsDG36nFtAR26h/qzgMHoERAm0S/n0N?=
 =?us-ascii?q?lnTSbIowz9YoXx16S6LPhofk9nBFLn78p6G4d+kpY/hZ0K2HgagImV8mQDkWvp?=
 =?us-ascii?q?Ldpb3qf+ZmIXRTEX297V/BTl2Ep7I3KMxoL5VW+SztFvZtakeWMWxjwy79pRB6?=
 =?us-ascii?q?iK9rxEkjB4ol65rQLXfPh8kS0Ryfoo6H4Gne4JvBAhwTmaArAXBUNYJzDjlwyU?=
 =?us-ascii?q?79Ciq6VafHqvcb+11EZknNGuFreCohxHWHbie5cvBitw7sR5MFLR33z/8IDkeN?=
 =?us-ascii?q?/Mbd0Nsh2YiQvPj+9QKJgpjPoFmTJnOX7hvX0i0+M0lgZh3Za+vIiaMWlt+L+5?=
 =?us-ascii?q?DwVcNj30YcMT5z7sgbxfnsaQw4CgAJFhFi8XU5vvSPKiCCgSuuj/NwaSDD08rW?=
 =?us-ascii?q?+WGbjFEg+a9khmtGjDE4yxO3GUOXkZzshiRB+HK0xEmw0UWDQ6npgkFgGl3sDh?=
 =?us-ascii?q?cUF55iwP6V78sBdD1uVoNxznWGfFuAiocis0SISYLBdO7gBC4FrVMdWD7u1pGS?=
 =?us-ascii?q?FU5IahrAuLKmyUfAlICWAJWkqZB1HsJLWu5N/A8/SGCeq6NffBfbKOqelGXfeS?=
 =?us-ascii?q?2Z2vypdm/yqLNsiXPnltEfw72klAXXB4AcjZmC8PSysYly3Tdc6buQy89zZzrs?=
 =?us-ascii?q?C+9vTrRQ3u6ZGOC7tULdVg5RS2jb2fOO6XgSZzMSxY2Y8UxX/U1Lgf20YfhDtz?=
 =?us-ascii?q?dza2C7QPqy7MQLjUmq9WFBMbbyJzNM1V76MzxAVNOMjbis/r2b58lPI6F1BFVV?=
 =?us-ascii?q?n5kMGzecMKO329NE/ABEuTKLSGJDjLz9vrbq+mVbJQjPtbtxurtDafEk/jOCmD?=
 =?us-ascii?q?ljbzWxCuN+FMkD+UPBhEtI6hdRZtDHDpTMj6ZR2jLN93kTo2zKU0h3zQM24cND?=
 =?us-ascii?q?l8c0VVobyR7SNXmPN/G2Na43phLOmEnTuZ7ubCJpYXt/trHjp7l+ZA7HsmzLtV?=
 =?us-ascii?q?6XIMePsgozffsNNo62uhifWCxiYvBABJsSpGiJ6jskJlNaDY7d9HQ3mSrzwX6m?=
 =?us-ascii?q?DFNxMP7+lsDMD0oKEYnsrGkr/oMzZq8N/O+8YYQc/OJ5TUYzIaLRP1FWuMX0M+?=
 =?us-ascii?q?RjmxODSa3hQFnQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AgAAAwfB5ch0O0hNFkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBZYJqgQIng36IeI0qFI41iS6BXxUYAxABhECCcCI4EgEDAQEBAQE?=
 =?us-ascii?q?BAgETAQEBCgsJCCkjDII6KQGCZgEBAQEDAQIgBBkBATcBBQkBAQoVAwICJgICA?=
 =?us-ascii?q?1QGEwWDHQGCAQWlDHB8M4J2AQEFgkSEXQiBC4oYgRwXgX+EI4ROARIBH4MIgle?=
 =?us-ascii?q?JT4F4hB5JN5BoCYcSilcYgi2POS2ZfIFdgQZxTTAIgycJghI1gziFFIVeITIBg?=
 =?us-ascii?q?QQBASGLEYI+AQE?=
X-IPAS-Result: =?us-ascii?q?A0AgAAAwfB5ch0O0hNFkGgEBAQEBAgEBAQEHAgEBAQGBZYJ?=
 =?us-ascii?q?qgQIng36IeI0qFI41iS6BXxUYAxABhECCcCI4EgEDAQEBAQEBAgETAQEBCgsJC?=
 =?us-ascii?q?CkjDII6KQGCZgEBAQEDAQIgBBkBATcBBQkBAQoVAwICJgICA1QGEwWDHQGCAQW?=
 =?us-ascii?q?lDHB8M4J2AQEFgkSEXQiBC4oYgRwXgX+EI4ROARIBH4MIgleJT4F4hB5JN5BoC?=
 =?us-ascii?q?YcSilcYgi2POS2ZfIFdgQZxTTAIgycJghI1gziFFIVeITIBgQQBASGLEYI+AQE?=
X-IronPort-AV: E=Sophos;i="5.56,385,1539673200"; 
   d="scan'208";a="57470076"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 22 Dec 2018 10:03:50 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2390579AbeLVSDp (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Sat, 22 Dec 2018 13:03:45 -0500
Received: from mail.kernel.org ([198.145.29.99]:39746 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1731337AbeLVSDp (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 22 Dec 2018 13:03:45 -0500
Received: from tzanussi-mobl (c-98-220-238-81.hsd1.il.comcast.net [98.220.238.81])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 117B820874;
        Sat, 22 Dec 2018 18:03:43 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1545501823;
        bh=g3H3tshLXYkBtGbeyRZYyA8LQXghena3BBcFSibSwwE=;
        h=Subject:From:To:Cc:Date:In-Reply-To:References:From;
        b=o7knIhlAbF67HNyEJrtAp6gCdUvgyb1FYm1Mx7ENmF183LdPaI5pmhbDO9bL9YQqX
         g4yGhtW6e4PGTOyOINXCzqekbZo1M/QXFFEAJAwxCHAzXePznjkkJpv917SYtnJa41
         EuXau7iz2n26tm5tjf1twTKN6eSMO74mck5sImQo=
Message-ID: <1545501821.4383.2.camel@kernel.org>
Subject: Re: [for-next][PATCH 2/5] tracing: Use str_has_prefix() helper for
 histogram code
From: Tom Zanussi <zanussi@kernel.org>
To: Steven Rostedt <rostedt@goodmis.org>
Cc: linux-kernel@vger.kernel.org, Ingo Molnar <mingo@kernel.org>,
        Andrew Morton <akpm@linux-foundation.org>,
        Joe Perches <joe@perches.com>,
        Namhyung Kim <namhyung@kernel.org>,
        Linus Torvalds <torvalds@linux-foundation.org>,
        Yoshinori Sato <ysato@users.sourceforge.jp>,
        Rich Felker <dalias@libc.org>, linux-sh@vger.kernel.org
Date: Sat, 22 Dec 2018 12:03:41 -0600
In-Reply-To: <20181222130107.43aaac9c@gandalf.local.home>
References: <20181222162007.697862256@goodmis.org>
         <20181222162856.666843139@goodmis.org>
         <20181222130107.43aaac9c@gandalf.local.home>
Content-Type: text/plain; charset="UTF-8"
X-Mailer: Evolution 3.26.1-1 
Mime-Version: 1.0
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Steve,

On Sat, 2018-12-22 at 13:01 -0500, Steven Rostedt wrote:
> On Sat, 22 Dec 2018 11:20:09 -0500
> Steven Rostedt <rostedt@goodmis.org> wrote:
> 
> > From: "Steven Rostedt (VMware)" <rostedt@goodmis.org>
> > 
> > The tracing histogram code contains a lot of instances of the
> > construct:
> > 
> >  strncmp(str, "const", sizeof("const") - 1)
> > 
> > This can be prone to bugs due to typos or bad cut and paste. Use
> > the
> > str_has_prefix() helper macro instead that removes the need for
> > having two
> > copies of the constant string.
> > 
> > Cc: Tom Zanussi <zanussi@linux.intel.com>
> 
> I have no idea why I copied your intel email. The linux.intel.com
> appears to be no longer active. I'm going to rebase to fix this email
> address.

linux.intel.com is active, but there's no zanussi there, just
tom.zanussi ;-)

So tom.zanussi@linux.intel.com should work fine.

Tom

> 
> -- Steve
> 
> 
> > Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
> > ---
> >  kernel/trace/trace_events_hist.c | 28 ++++++++++++++--------------
> >  1 file changed, 14 insertions(+), 14 deletions(-)
> > 
> > diff --git a/kernel/trace/trace_events_hist.c
> > b/kernel/trace/trace_events_hist.c
> > index c5448c103770..9d590138f870 100644
> > --- a/kernel/trace/trace_events_hist.c
> > +++ b/kernel/trace/trace_events_hist.c
> > @@ -1881,8 +1881,8 @@ static int parse_action(char *str, struct
> > hist_trigger_attrs *attrs)
> >  	if (attrs->n_actions >= HIST_ACTIONS_MAX)
> >  		return ret;
> >  
> > -	if ((strncmp(str, "onmatch(", sizeof("onmatch(") - 1) ==
> > 0) ||
> > -	    (strncmp(str, "onmax(", sizeof("onmax(") - 1) == 0)) {
> > +	if ((str_has_prefix(str, "onmatch(")) ||
> > +	    (str_has_prefix(str, "onmax("))) {
> >  		attrs->action_str[attrs->n_actions] = kstrdup(str,
> > GFP_KERNEL);
> >  		if (!attrs->action_str[attrs->n_actions]) {
> >  			ret = -ENOMEM;
> > @@ -1899,34 +1899,34 @@ static int parse_assignment(char *str,
> > struct hist_trigger_attrs *attrs)
> >  {
> >  	int ret = 0;
> >  
> > -	if ((strncmp(str, "key=", sizeof("key=") - 1) == 0) ||
> > -	    (strncmp(str, "keys=", sizeof("keys=") - 1) == 0)) {
> > +	if ((str_has_prefix(str, "key=")) ||
> > +	    (str_has_prefix(str, "keys="))) {
> >  		attrs->keys_str = kstrdup(str, GFP_KERNEL);
> >  		if (!attrs->keys_str) {
> >  			ret = -ENOMEM;
> >  			goto out;
> >  		}
> > -	} else if ((strncmp(str, "val=", sizeof("val=") - 1) == 0)
> > ||
> > -		 (strncmp(str, "vals=", sizeof("vals=") - 1) == 0)
> > ||
> > -		 (strncmp(str, "values=", sizeof("values=") - 1)
> > == 0)) {
> > +	} else if ((str_has_prefix(str, "val=")) ||
> > +		   (str_has_prefix(str, "vals=")) ||
> > +		   (str_has_prefix(str, "values="))) {
> >  		attrs->vals_str = kstrdup(str, GFP_KERNEL);
> >  		if (!attrs->vals_str) {
> >  			ret = -ENOMEM;
> >  			goto out;
> >  		}
> > -	} else if (strncmp(str, "sort=", sizeof("sort=") - 1) ==
> > 0) {
> > +	} else if (str_has_prefix(str, "sort=")) {
> >  		attrs->sort_key_str = kstrdup(str, GFP_KERNEL);
> >  		if (!attrs->sort_key_str) {
> >  			ret = -ENOMEM;
> >  			goto out;
> >  		}
> > -	} else if (strncmp(str, "name=", sizeof("name=") - 1) ==
> > 0) {
> > +	} else if (str_has_prefix(str, "name=")) {
> >  		attrs->name = kstrdup(str, GFP_KERNEL);
> >  		if (!attrs->name) {
> >  			ret = -ENOMEM;
> >  			goto out;
> >  		}
> > -	} else if (strncmp(str, "clock=", sizeof("clock=") - 1) ==
> > 0) {
> > +	} else if (str_has_prefix(str, "clock=")) {
> >  		strsep(&str, "=");
> >  		if (!str) {
> >  			ret = -EINVAL;
> > @@ -1939,7 +1939,7 @@ static int parse_assignment(char *str, struct
> > hist_trigger_attrs *attrs)
> >  			ret = -ENOMEM;
> >  			goto out;
> >  		}
> > -	} else if (strncmp(str, "size=", sizeof("size=") - 1) ==
> > 0) {
> > +	} else if (str_has_prefix(str, "size=")) {
> >  		int map_bits = parse_map_size(str);
> >  
> >  		if (map_bits < 0) {
> > @@ -3558,7 +3558,7 @@ static struct action_data *onmax_parse(char
> > *str)
> >  	if (!onmax_fn_name || !str)
> >  		goto free;
> >  
> > -	if (strncmp(onmax_fn_name, "save", sizeof("save") - 1) ==
> > 0) {
> > +	if (str_has_prefix(onmax_fn_name, "save")) {
> >  		char *params = strsep(&str, ")");
> >  
> >  		if (!params) {
> > @@ -4346,7 +4346,7 @@ static int parse_actions(struct
> > hist_trigger_data *hist_data)
> >  	for (i = 0; i < hist_data->attrs->n_actions; i++) {
> >  		str = hist_data->attrs->action_str[i];
> >  
> > -		if (strncmp(str, "onmatch(", sizeof("onmatch(") -
> > 1) == 0) {
> > +		if (str_has_prefix(str, "onmatch(")) {
> >  			char *action_str = str +
> > sizeof("onmatch(") - 1;
> >  
> >  			data = onmatch_parse(tr, action_str);
> > @@ -4355,7 +4355,7 @@ static int parse_actions(struct
> > hist_trigger_data *hist_data)
> >  				break;
> >  			}
> >  			data->fn = action_trace;
> > -		} else if (strncmp(str, "onmax(", sizeof("onmax(")
> > - 1) == 0) {
> > +		} else if (str_has_prefix(str, "onmax(")) {
> >  			char *action_str = str + sizeof("onmax(")
> > - 1;
> >  
> >  			data = onmax_parse(action_str);
> 
> 
