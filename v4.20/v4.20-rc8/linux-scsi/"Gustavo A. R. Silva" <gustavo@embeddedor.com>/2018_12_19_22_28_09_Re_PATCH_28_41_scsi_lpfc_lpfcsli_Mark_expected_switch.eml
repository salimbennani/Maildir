Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  20 Dec 2018 08:43:41 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 13B145805F0;
	Wed, 19 Dec 2018 14:28:18 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 19 Dec 2018 14:28:17 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AO0ba7BNL4tU38kgnrKsl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPj8pcbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRttfWTJPAo28?=
 =?us-ascii?q?bIUBAeQOMulaoIbhqFUOtgO+CAu3CePzyDJFnGP60bE03ukjFwzNwQwuH8gJsH?=
 =?us-ascii?q?TRtNj5OqYcUf2uzKnU1zrDcfRW0irh5YTSbxsvveuAVq9tf8rQzUkvCRnKgluN?=
 =?us-ascii?q?ooHiMDOVy/8Ns3SB4Op+UuKikHAoqwRqrTex28gjl5fGiZ8SylDe7yl23IE1Jd?=
 =?us-ascii?q?ihRUN9fNWqE4NQujmEO4dqRs4uWXxktSgkxrEcpJK2fzQGxI4myhPdc/CLbouF?=
 =?us-ascii?q?7xb5WOqPITp0mGhpdK+jixuz60StxeLxW8+p21hQtCVFiMPDtnUV2hzT9MeHTv?=
 =?us-ascii?q?x981+/2TaAyQ/T8PtIIUMqmqrBLZ4u3LowmoAUsUTZES/6gET2jKmIeUU44uWk?=
 =?us-ascii?q?9fjrb7H8qpOBOYJ4lBvyPrktl8CjG+g1MwoDU3Ce+eum1b3j+UP5QK9Njv0ziq?=
 =?us-ascii?q?TZtJHaJcIGpq+2GgNV0Zgs6wy5Dzi41NQUhH4HLVxDeB2ZlYjkIE/OIP/mAvel?=
 =?us-ascii?q?mViskylkx+rAPrL/BpXBNH/DkK3ufbpl8U5T1BIzzcxD55JTErwBJPPzWkzvu9?=
 =?us-ascii?q?DCAR45Lhe5w+LmCNV7y4MfVniDAq6fMKPOr1CI4vgjLPWLZI8QoDz9MeQq5+by?=
 =?us-ascii?q?jX8lnl8QZamp0oEWaHCkBPtmJF+VYXrxgtgbF2cKsREzTOjriF2ETD5SaGy+X6?=
 =?us-ascii?q?M65jEnFo2mCZ3PSZyqgLyExC27BIFZZnhaClCQFnflb5+LW+wMaCKVIc9tiCYE?=
 =?us-ascii?q?WqKjS4I60RGutQn6y6doL+bO+y0Ys47j28Zx5+HJiR4y8jl0BdyH026RV2F0gn?=
 =?us-ascii?q?8IRzgu0aB8u0N9zE2P0ax5g/NCE9xT6OhEUgM7NZ7a0ux7BMr+WgPHfteVVlmm?=
 =?us-ascii?q?Rs+qDi02TtI029UOeVpyG82+jhDf2CqnG6IamKaVBJMq6K7c32L+J8Bmy3nY0q?=
 =?us-ascii?q?ktiF0mQshKNW2inaN/8wnTB4jUk0SWjaqqdKIc3DLT+2eH12aBoEZYUAtoW6Xf?=
 =?us-ascii?q?QX8fflfWrcj+5k7aUrChE6onPRVbxc6CMKRKbMbpgktARPr4PNTeYmSxm3q/BB?=
 =?us-ascii?q?qSx7OMapbqdHsZ3CnHFEcElAUT926cNQciHiehv37eDDt2GFLzYkPs9O5+qG+7?=
 =?us-ascii?q?Tk401Q2Kc1dt172v+h4RhPycTfwT06kAuCcgrTV0AVm808jXC9qGuwpuYqFcbc?=
 =?us-ascii?q?kh71dA0GLTrxZ9MYC4L6B+ml4edBx6sFnq1xppBYRPj8groGkxwwpvNK2XylVB?=
 =?us-ascii?q?dzCf3ZDuIbDXLmjy/Baya6/ZwF3e0dCW+rsR5/Q8sVnsoAapFk86+XV9z9ZVy2?=
 =?us-ascii?q?ec5onNDAcKUZPxT1w7+ARgq7DbYiky/YXU1XJ3PKmwsz/C3c8pBeQ/xhaheddf?=
 =?us-ascii?q?LL2LFAvoH8IGAMiuLfQgm0K1YRIcIOBS6Kk0Mtu8d/uHxKGkJvxgky+hjWhd5o?=
 =?us-ascii?q?ByzFiM9ytlRuHUxZkFx+yX0RWdVzf7ilesqcT3mYFCZTEPEWuz0ynkBIhNZqJs?=
 =?us-ascii?q?eYYHE3uhI8qyxt9mnZ7iR2ZY9EK/B1MBwMKoeRuSY0b93AFKzkQXvHqnlDC8zz?=
 =?us-ascii?q?x1lTEps6We0DbPw+TkaBoIJGpLSHN+glfrJIi+l8oaU1Swbwg1iBul4l73x6pB?=
 =?us-ascii?q?q6RlLGnTQkBIczLtL254UauwtbuCY8hR55MuqihXVOW8YVaHSr/yuRca0iXjH3?=
 =?us-ascii?q?dAyzA/bT2lppL5nxligmKHMHlztGbZed13xRrH5N3TX/lR0iAERCl5jznaHVy8?=
 =?us-ascii?q?P9iv/dWJmJbPqOG+V2S9VpJNdSnn15+PtCy+5WdyGx2wg+izmsH7EQg9ySL71M?=
 =?us-ascii?q?NlVSTSoBb8f4nkzaK6Me18c0lsBV/87dd6G45knosxgpEQxWYVhpGP8XUblmfz?=
 =?us-ascii?q?NM1R2bjiY3oVWT4L39nV7RDg2E1iLXKG3Zj1V3uDzct6e9m1fHkW1Tkj4MBQB6?=
 =?us-ascii?q?eZ97hEnSpzolqlogPde/l9njEByfQw7H4Wmf0GuA0ozi+FGLAdAVFYPTDwlxSP?=
 =?us-ascii?q?992+sKJXZGO1fbmxzkV+m82hDKqZogFdQ3v5fpYiHSlt7sRwKl7M0Xvz6p36d9?=
 =?us-ascii?q?nUd94cqhqUkxLYhehPNJ0xjuYKhTZgOW/lpnIq0ek7jRhz3Z2guIiHNn5g/Ka4?=
 =?us-ascii?q?Ah5eKz30aNkf+jDrjaZCgMmW25qjEYlmGjUORJHoV+6nECoOtfT7MAaDCD88pW?=
 =?us-ascii?q?2eGbXBBg+T8ltmo2jME5C2NHGXOX8Zws95RBSGIExfgQYUXCg1n5IjFwCqwtDh?=
 =?us-ascii?q?f1l95jwL+lH4rR5MwPpyNxbjSmffuBuoajAsRZmfKxpW8xhC51rPPsyY9O5zBC?=
 =?us-ascii?q?ZY/puurAGWLmybZgJIDXwGW0CeBlDjOKWu6sfE8+SCGuW+KP7Oa62UqeNCT/eI?=
 =?us-ascii?q?2Y6v0ox+8jaMKMqPP3piD/462kZZXnB5AcPZmzoRRCwNiiLNdNWWpBO9+i1xs8?=
 =?us-ascii?q?C+/+7nWAPp5YuTFbRSNc9j9AyxgaeGL+SQnjp2KS5E1pMQwn/F0KIQ3EMJhCF0?=
 =?us-ascii?q?aTasEa4MtSrMTK/Lnq9XDhgbaz58NcdS7qI82BVNNtDfit/vyrF4ifs1AU9fVV?=
 =?us-ascii?q?P9gsGpedAKI2alOVPbBUaLMa6KKiHRz87rYaOzV7tQgf5Qtx2xvzabDkDiMi6C?=
 =?us-ascii?q?lznvSxCgL+VMgDuHMxxZvYG3agxtBnT7TNL6dh27N8d6jD0szr0yg3PKNGgcPi?=
 =?us-ascii?q?B9ckNNtLKQ6yxYj+57G2xA6HplMOaFlzyY7+neNpYZr/9rDj5omOJd5XRpg4dS?=
 =?us-ascii?q?uQNNQfFu0BDXp8Ry6wWkm+yC0Xx8VRNUth5BnoWCsU5lPOPS8ZwWHT7o/RkOpU?=
 =?us-ascii?q?adDRIHq8otXtHusKMWydXJkq//OR9I6dXd8cAbAo7fL8fRY1Q7Nh+8UhHJFxcM?=
 =?us-ascii?q?UznjHCeXvQoVq/CW6HTf5sw1t4PwkYQJYrJeXlE5Gv4WDV4jF9sHdsQkFgg4mK?=
 =?us-ascii?q?KW2ZZbrUG1qwPcEYAD5sjK?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AxAAD9xBpch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUwUBAQsBgmx/J4N9lXUtFJdJgXMVGBMBhy0iNgcNAQMBAQEBAQECARMBAQE?=
 =?us-ascii?q?IDQkIKS+CNiQBgmIBAgMBAiAEEUEGCQEBChgCAiYCAgNUBgEMBgIBAQGDHYICA?=
 =?us-ascii?q?gOoI3wzhUCEboELizQRBoF5BoE4gmuICYJXApAfN5BeBwICilKDIINoHoFeI4R?=
 =?us-ascii?q?8gwuHUSyJHJA6gU0FVIEucBWDJ5B6U4EFAQGNYAEB?=
X-IPAS-Result: =?us-ascii?q?A0AxAAD9xBpch0O0hNFkHAEBAQQBAQcEAQGBUwUBAQsBgmx?=
 =?us-ascii?q?/J4N9lXUtFJdJgXMVGBMBhy0iNgcNAQMBAQEBAQECARMBAQEIDQkIKS+CNiQBg?=
 =?us-ascii?q?mIBAgMBAiAEEUEGCQEBChgCAiYCAgNUBgEMBgIBAQGDHYICAgOoI3wzhUCEboE?=
 =?us-ascii?q?LizQRBoF5BoE4gmuICYJXApAfN5BeBwICilKDIINoHoFeI4R8gwuHUSyJHJA6g?=
 =?us-ascii?q?U0FVIEucBWDJ5B6U4EFAQGNYAEB?=
X-IronPort-AV: E=Sophos;i="5.56,374,1539673200"; 
   d="scan'208";a="57083139"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 19 Dec 2018 14:28:14 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730107AbeLSW2M (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Wed, 19 Dec 2018 17:28:12 -0500
Received: from gateway32.websitewelcome.com ([192.185.145.113]:19273 "EHLO
        gateway32.websitewelcome.com" rhost-flags-OK-OK-OK-OK)
        by vger.kernel.org with ESMTP id S1730002AbeLSW2L (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 19 Dec 2018 17:28:11 -0500
Received: from cm12.websitewelcome.com (cm12.websitewelcome.com [100.42.49.8])
        by gateway32.websitewelcome.com (Postfix) with ESMTP id 83A95144D66
        for <linux-kernel@vger.kernel.org>; Wed, 19 Dec 2018 16:28:10 -0600 (CST)
Received: from gator4166.hostgator.com ([108.167.133.22])
        by cmsmtp with SMTP
        id ZkK2gs9iIiQerZkK2gxcSt; Wed, 19 Dec 2018 16:28:10 -0600
X-Authority-Reason: nr=8
Received: from [189.250.106.44] (port=47232 helo=[192.168.1.76])
        by gator4166.hostgator.com with esmtpsa (TLSv1.2:ECDHE-RSA-AES128-GCM-SHA256:128)
        (Exim 4.91)
        (envelope-from <gustavo@embeddedor.com>)
        id 1gZkK2-000E7O-1o; Wed, 19 Dec 2018 16:28:10 -0600
Subject: Re: [PATCH 28/41] scsi: lpfc: lpfc_sli: Mark expected switch
 fall-throughs
To: James Smart <james.smart@broadcom.com>,
        Dick Kennedy <dick.kennedy@broadcom.com>
Cc: "James E.J. Bottomley" <jejb@linux.ibm.com>,
        "Martin K. Petersen" <martin.petersen@oracle.com>,
        linux-scsi@vger.kernel.org, linux-kernel@vger.kernel.org
References: <cover.1543374820.git.gustavo@embeddedor.com>
 <cb80d182329a02971ff365446b0e04771fc77da8.1543374820.git.gustavo@embeddedor.com>
From: "Gustavo A. R. Silva" <gustavo@embeddedor.com>
Message-ID: <1a29b249-e248-d4ea-525e-e5f3efece00f@embeddedor.com>
Date: Wed, 19 Dec 2018 16:28:09 -0600
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <cb80d182329a02971ff365446b0e04771fc77da8.1543374820.git.gustavo@embeddedor.com>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-US
Content-Transfer-Encoding: 7bit
X-AntiAbuse: This header was added to track abuse, please include it with any abuse report
X-AntiAbuse: Primary Hostname - gator4166.hostgator.com
X-AntiAbuse: Original Domain - vger.kernel.org
X-AntiAbuse: Originator/Caller UID/GID - [47 12] / [47 12]
X-AntiAbuse: Sender Address Domain - embeddedor.com
X-BWhitelist: no
X-Source-IP: 189.250.106.44
X-Source-L: No
X-Exim-ID: 1gZkK2-000E7O-1o
X-Source: 
X-Source-Args: 
X-Source-Dir: 
X-Source-Sender: ([192.168.1.76]) [189.250.106.44]:47232
X-Source-Auth: gustavo@embeddedor.com
X-Email-Count: 70
X-Source-Cap: Z3V6aWRpbmU7Z3V6aWRpbmU7Z2F0b3I0MTY2Lmhvc3RnYXRvci5jb20=
X-Local-Domain: yes
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi,

Friendly ping:

Who can ack or review this patch, please?

Thanks
-- 
Gustavo

On 11/27/18 10:32 PM, Gustavo A. R. Silva wrote:
> In preparation to enabling -Wimplicit-fallthrough, mark switch cases
> where we are expecting to fall through.
> 
> Notice that, in this particular case, I replaced "Drop thru" and
> "Fall Thru" with "fall through" annotations, which is what GCC
> is expecting to find.
> 
> Also, in some cases a dash is added as a token in order to separate
> the "fall through" annotation from the rest of the comment on the
> same line, which is what GCC is expecting to find.
> 
> Addresses-Coverity-ID: 114979 ("Missing break in switch")
> Addresses-Coverity-ID: 114980 ("Missing break in switch")
> Signed-off-by: Gustavo A. R. Silva <gustavo@embeddedor.com>
> ---
>   drivers/scsi/lpfc/lpfc_sli.c | 20 +++++++++++---------
>   1 file changed, 11 insertions(+), 9 deletions(-)
> 
> diff --git a/drivers/scsi/lpfc/lpfc_sli.c b/drivers/scsi/lpfc/lpfc_sli.c
> index 3912a2d0b95d..cbcda5a91068 100644
> --- a/drivers/scsi/lpfc/lpfc_sli.c
> +++ b/drivers/scsi/lpfc/lpfc_sli.c
> @@ -9334,6 +9334,7 @@ lpfc_sli4_iocb2wqe(struct lpfc_hba *phba, struct lpfc_iocbq *iocbq,
>   		cmnd = CMD_XMIT_SEQUENCE64_CR;
>   		if (phba->link_flag & LS_LOOPBACK_MODE)
>   			bf_set(wqe_xo, &wqe->xmit_sequence.wge_ctl, 1);
> +		/* fall through */
>   	case CMD_XMIT_SEQUENCE64_CR:
>   		/* word3 iocb=io_tag32 wqe=reserved */
>   		wqe->xmit_sequence.rsvd3 = 0;
> @@ -13460,6 +13461,7 @@ lpfc_sli4_sp_handle_rcqe(struct lpfc_hba *phba, struct lpfc_rcqe *rcqe)
>   	case FC_STATUS_RQ_BUF_LEN_EXCEEDED:
>   		lpfc_printf_log(phba, KERN_ERR, LOG_SLI,
>   				"2537 Receive Frame Truncated!!\n");
> +		/* fall through */
>   	case FC_STATUS_RQ_SUCCESS:
>   		spin_lock_irqsave(&phba->hbalock, iflags);
>   		lpfc_sli4_rq_release(hrq, drq);
> @@ -13859,7 +13861,7 @@ lpfc_sli4_nvmet_handle_rcqe(struct lpfc_hba *phba, struct lpfc_queue *cq,
>   	case FC_STATUS_RQ_BUF_LEN_EXCEEDED:
>   		lpfc_printf_log(phba, KERN_ERR, LOG_SLI,
>   				"6126 Receive Frame Truncated!!\n");
> -		/* Drop thru */
> +		/* fall through */
>   	case FC_STATUS_RQ_SUCCESS:
>   		spin_lock_irqsave(&phba->hbalock, iflags);
>   		lpfc_sli4_rq_release(hrq, drq);
> @@ -14769,7 +14771,7 @@ lpfc_eq_create(struct lpfc_hba *phba, struct lpfc_queue *eq, uint32_t imax)
>   				eq->entry_count);
>   		if (eq->entry_count < 256)
>   			return -EINVAL;
> -		/* otherwise default to smallest count (drop through) */
> +		/* fall through - otherwise default to smallest count */
>   	case 256:
>   		bf_set(lpfc_eq_context_count, &eq_create->u.request.context,
>   		       LPFC_EQ_CNT_256);
> @@ -14899,7 +14901,7 @@ lpfc_cq_create(struct lpfc_hba *phba, struct lpfc_queue *cq,
>   			       LPFC_CQ_CNT_WORD7);
>   			break;
>   		}
> -		/* Fall Thru */
> +		/* fall through */
>   	default:
>   		lpfc_printf_log(phba, KERN_ERR, LOG_SLI,
>   				"0361 Unsupported CQ count: "
> @@ -14910,7 +14912,7 @@ lpfc_cq_create(struct lpfc_hba *phba, struct lpfc_queue *cq,
>   			status = -EINVAL;
>   			goto out;
>   		}
> -		/* otherwise default to smallest count (drop through) */
> +		/* fall through - otherwise default to smallest count */
>   	case 256:
>   		bf_set(lpfc_cq_context_count, &cq_create->u.request.context,
>   		       LPFC_CQ_CNT_256);
> @@ -15070,7 +15072,7 @@ lpfc_cq_create_set(struct lpfc_hba *phba, struct lpfc_queue **cqp,
>   					       LPFC_CQ_CNT_WORD7);
>   					break;
>   				}
> -				/* Fall Thru */
> +				/* fall through */
>   			default:
>   				lpfc_printf_log(phba, KERN_ERR, LOG_SLI,
>   						"3118 Bad CQ count. (%d)\n",
> @@ -15079,7 +15081,7 @@ lpfc_cq_create_set(struct lpfc_hba *phba, struct lpfc_queue **cqp,
>   					status = -EINVAL;
>   					goto out;
>   				}
> -				/* otherwise default to smallest (drop thru) */
> +				/* fall through - otherwise default to smallest */
>   			case 256:
>   				bf_set(lpfc_mbx_cq_create_set_cqe_cnt,
>   				       &cq_set->u.request, LPFC_CQ_CNT_256);
> @@ -15351,7 +15353,7 @@ lpfc_mq_create(struct lpfc_hba *phba, struct lpfc_queue *mq,
>   			status = -EINVAL;
>   			goto out;
>   		}
> -		/* otherwise default to smallest count (drop through) */
> +		/* fall through - otherwise default to smallest count */
>   	case 16:
>   		bf_set(lpfc_mq_context_ring_size,
>   		       &mq_create_ext->u.request.context,
> @@ -15770,7 +15772,7 @@ lpfc_rq_create(struct lpfc_hba *phba, struct lpfc_queue *hrq,
>   				status = -EINVAL;
>   				goto out;
>   			}
> -			/* otherwise default to smallest count (drop through) */
> +			/* fall through - otherwise default to smallest count */
>   		case 512:
>   			bf_set(lpfc_rq_context_rqe_count,
>   			       &rq_create->u.request.context,
> @@ -15907,7 +15909,7 @@ lpfc_rq_create(struct lpfc_hba *phba, struct lpfc_queue *hrq,
>   				status = -EINVAL;
>   				goto out;
>   			}
> -			/* otherwise default to smallest count (drop through) */
> +			/* fall through - otherwise default to smallest count */
>   		case 512:
>   			bf_set(lpfc_rq_context_rqe_count,
>   			       &rq_create->u.request.context,
> 
