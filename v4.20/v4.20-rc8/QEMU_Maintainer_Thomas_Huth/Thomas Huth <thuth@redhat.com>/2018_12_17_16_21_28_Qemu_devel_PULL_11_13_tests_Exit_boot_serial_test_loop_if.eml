Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 08:46:59 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id A61065805FC
	for <like.xu@linux.intel.com>; Mon, 17 Dec 2018 08:33:02 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga008-1.jf.intel.com with ESMTP; 17 Dec 2018 08:33:02 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AzsDuvhTn7q54koWwihEUQmFI8Npsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa6zYBCN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRBDI2i?=
 =?us-ascii?q?YYUBDOgOPehXoIbhqFUAsAO+CAuuCu7g1zNFiGP60rMh0+k6DQHGxRYtE84SvH?=
 =?us-ascii?q?jIrtj4MroZX+CvzKnPyDXOd+1Y2Tf66IjNaB8huuyHU7BtccrNyUkkCgTIjkmQ?=
 =?us-ascii?q?qYz4IzOV1v8As3KF4OV9VeKgkXInpxttrTiow8chk4/EjZ8WxFDc7Sh13po5KN?=
 =?us-ascii?q?6iREJmfNKpE4Fcuz+UOoZ2WM8uXmNltD4kxrEavZO3ZjUGxZo5yxLFdvCKcIaF?=
 =?us-ascii?q?7gj9WOuSJzpzmWhrd6ilhxmo9Eit0u38Wdew0FZNtidFltjMtmsR1xzI8MSHRf?=
 =?us-ascii?q?19/lq71TaIzQDT5flIIUEylaXFN54s2qA8moYQvEjZAyP6hUb7gLWIekgq+uWk?=
 =?us-ascii?q?8fnrb7f+qp+ZLYB0iwX+Mqo0msy4BOQ1KhEOUHae+eShzbHs4FP2QKtUgf0yi6?=
 =?us-ascii?q?XWq5faJdkdpqGlHQBVyYEv6xK+DzelztsUh3YGLE9ddRKDjojpPUzOIf/iAfe+?=
 =?us-ascii?q?hVSsjClkx/TcMrL9BZXNK2POkLHmfbZ75E5czhczwcpY55JOBbENOOjzVVPptN?=
 =?us-ascii?q?zEEh85NBS5w+LmCNV+yIwSQ22OArKCPaPWsF+I4P8vIuaWaI8Uvjb9N+Yq5/r0?=
 =?us-ascii?q?gXAlnl8dePrh4J0MdXrtHuh6O17LJj3og8wdCiEMuQwxSvGsj0eNFjtaZnK3Vq?=
 =?us-ascii?q?R74SknCYWgFsDaS4WwxbCMwiq/TaBQfX1MX1WFEHP0cNedVvIRLS6fPMJl1yYJ?=
 =?us-ascii?q?TKWsUJMJ0xaouwnnjb19Ib3P5ycauJn/gcVz/PDZjhoo9DZ5XPiahniASnwxkm?=
 =?us-ascii?q?4WSjse2qd5rkpgjFCZ3vtWmftdQOBT4PZASU8aKILch7hmC83uWirbc9uJQUrg?=
 =?us-ascii?q?SdKjV2JiBuktysMDNh4uU+6piQrOim/zW+cY?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BgAACezhdchxHrdtBkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBVAQBAQsBgTCCYoN8iHiLGIINfJhPFBgUh1YiNwYNAQMBAQEBAQECARMBAQE?=
 =?us-ascii?q?KCwkIGw4vgjYFAgMaAQaCXAMDAQIgBB8KKQMDAQIGAQEfBQIiBAICAwE5GhkFg?=
 =?us-ascii?q?x2CAQEEqAJ8M4VAhGCBC4szF4FAP4ERgl2CAIY+glcCiTgKh1qPfQmRWgIWgV2?=
 =?us-ascii?q?FHIJ6N4V6gS6ZZIFcgXgzGggbFYMngicXjh5AMYEHHItcgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0BgAACezhdchxHrdtBkHAEBAQQBAQcEAQGBVAQBAQsBgTC?=
 =?us-ascii?q?CYoN8iHiLGIINfJhPFBgUh1YiNwYNAQMBAQEBAQECARMBAQEKCwkIGw4vgjYFA?=
 =?us-ascii?q?gMaAQaCXAMDAQIgBB8KKQMDAQIGAQEfBQIiBAICAwE5GhkFgx2CAQEEqAJ8M4V?=
 =?us-ascii?q?AhGCBC4szF4FAP4ERgl2CAIY+glcCiTgKh1qPfQmRWgIWgV2FHIJ6N4V6gS6ZZ?=
 =?us-ascii?q?IFcgXgzGggbFYMngicXjh5AMYEHHItcgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,366,1539673200"; 
   d="scan'208";a="57803299"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 17 Dec 2018 08:33:02 -0800
Received: from localhost ([::1]:47753 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gYvpF-0001Lg-4r
	for like.xu@linux.intel.com; Mon, 17 Dec 2018 11:33:01 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:51127)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <thuth@redhat.com>) id 1gYveb-0000fn-QX
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 11:22:02 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <thuth@redhat.com>) id 1gYveX-0000VH-GA
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 11:22:01 -0500
Received: from mx1.redhat.com ([209.132.183.28]:38084)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <thuth@redhat.com>) id 1gYveX-0000UU-6N
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 11:21:57 -0500
Received: from smtp.corp.redhat.com (int-mx07.intmail.prod.int.phx2.redhat.com
	[10.5.11.22])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 47698325B2;
	Mon, 17 Dec 2018 16:21:56 +0000 (UTC)
Received: from thuth.com (dhcp-200-199.str.redhat.com [10.33.200.199])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 7759F1001942;
	Mon, 17 Dec 2018 16:21:47 +0000 (UTC)
From: Thomas Huth <thuth@redhat.com>
To: qemu-devel@nongnu.org
Date: Mon, 17 Dec 2018 17:21:28 +0100
Message-Id: <1545063690-10116-12-git-send-email-thuth@redhat.com>
In-Reply-To: <1545063690-10116-1-git-send-email-thuth@redhat.com>
References: <1545063690-10116-1-git-send-email-thuth@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.22
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.28]);
	Mon, 17 Dec 2018 16:21:56 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [PULL 11/13] tests: Exit boot-serial-test loop if
 child dies
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Laurent Vivier <lvivier@redhat.com>, Paolo Bonzini <pbonzini@redhat.com>,
	Richard Henderson <richard.henderson@linaro.org>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

From: Richard Henderson <richard.henderson@linaro.org>

There's no point in waiting 5 full minutes when there will be
no more output.  Compute timeout based on elapsed wall clock
time instead of N * delays, as the delay is a minimum sleep time.

Cc: Thomas Huth <thuth@redhat.com>
Cc: Laurent Vivier <lvivier@redhat.com>
Cc: Paolo Bonzini <pbonzini@redhat.com>
Signed-off-by: Richard Henderson <richard.henderson@linaro.org>
Reviewed-by: Philippe Mathieu-Daud=C3=A9 <philmd@redhat.com>
Reviewed-by: Wainer dos Santos Moschetta <wainersm@redhat.com>
[thuth: Replaced global_qtest with local qts variable]
Signed-off-by: Thomas Huth <thuth@redhat.com>
---
 tests/boot-serial-test.c | 20 ++++++++++----
 tests/libqtest.c         | 72 ++++++++++++++++++++++++++++++------------=
------
 tests/libqtest.h         |  8 ++++++
 3 files changed, 68 insertions(+), 32 deletions(-)

diff --git a/tests/boot-serial-test.c b/tests/boot-serial-test.c
index 366fe51..58a48f3 100644
--- a/tests/boot-serial-test.c
+++ b/tests/boot-serial-test.c
@@ -128,13 +128,14 @@ static testdef_t tests[] =3D {
     { NULL }
 };
=20
-static bool check_guest_output(const testdef_t *test, int fd)
+static bool check_guest_output(QTestState *qts, const testdef_t *test, i=
nt fd)
 {
-    int i, nbr =3D 0, pos =3D 0, ccnt;
+    int nbr =3D 0, pos =3D 0, ccnt;
+    time_t now, start =3D time(NULL);
     char ch;
=20
-    /* Poll serial output... Wait at most 360 seconds */
-    for (i =3D 0; i < 36000; ++i) {
+    /* Poll serial output... */
+    while (1) {
         ccnt =3D 0;
         while (ccnt++ < 512 && (nbr =3D read(fd, &ch, 1)) =3D=3D 1) {
             if (ch =3D=3D test->expect[pos]) {
@@ -148,6 +149,15 @@ static bool check_guest_output(const testdef_t *test=
, int fd)
             }
         }
         g_assert(nbr >=3D 0);
+        /* Wait only if the child is still alive.  */
+        if (!qtest_probe_child(qts)) {
+            break;
+        }
+        /* Wait at most 360 seconds.  */
+        now =3D time(NULL);
+        if (now - start >=3D 360) {
+            break;
+        }
         g_usleep(10000);
     }
=20
@@ -199,7 +209,7 @@ static void test_machine(const void *data)
         unlink(codetmp);
     }
=20
-    if (!check_guest_output(test, ser_fd)) {
+    if (!check_guest_output(qts, test, ser_fd)) {
         g_error("Failed to find expected string. Please check '%s'",
                 serialtmp);
     }
diff --git a/tests/libqtest.c b/tests/libqtest.c
index 43be078..1d75d3c 100644
--- a/tests/libqtest.c
+++ b/tests/libqtest.c
@@ -39,10 +39,11 @@ struct QTestState
 {
     int fd;
     int qmp_fd;
-    bool irq_level[MAX_IRQ];
-    GString *rx;
     pid_t qemu_pid;  /* our child QEMU process */
+    int wstatus;
     bool big_endian;
+    bool irq_level[MAX_IRQ];
+    GString *rx;
 };
=20
 static GHookList abrt_hooks;
@@ -96,36 +97,52 @@ static int socket_accept(int sock)
     return ret;
 }
=20
-static void kill_qemu(QTestState *s)
+bool qtest_probe_child(QTestState *s)
 {
-    if (s->qemu_pid !=3D -1) {
-        int wstatus =3D 0;
-        pid_t pid;
+    pid_t pid =3D s->qemu_pid;
=20
-        kill(s->qemu_pid, SIGTERM);
-        TFR(pid =3D waitpid(s->qemu_pid, &wstatus, 0));
+    if (pid !=3D -1) {
+        pid =3D waitpid(pid, &s->wstatus, WNOHANG);
+        if (pid =3D=3D 0) {
+            return true;
+        }
+        s->qemu_pid =3D -1;
+    }
+    return false;
+}
=20
+static void kill_qemu(QTestState *s)
+{
+    pid_t pid =3D s->qemu_pid;
+    int wstatus;
+
+    /* Skip wait if qtest_probe_child already reaped.  */
+    if (pid !=3D -1) {
+        kill(pid, SIGTERM);
+        TFR(pid =3D waitpid(s->qemu_pid, &s->wstatus, 0));
         assert(pid =3D=3D s->qemu_pid);
-        /*
-         * We expect qemu to exit with status 0; anything else is
-         * fishy and should be logged with as much detail as possible.
-         */
-        if (wstatus) {
-            if (WIFEXITED(wstatus)) {
-                fprintf(stderr, "%s:%d: kill_qemu() tried to terminate Q=
EMU "
-                        "process but encountered exit status %d\n",
-                        __FILE__, __LINE__, WEXITSTATUS(wstatus));
-            } else if (WIFSIGNALED(wstatus)) {
-                int sig =3D WTERMSIG(wstatus);
-                const char *signame =3D strsignal(sig) ?: "unknown ???";
-                const char *dump =3D WCOREDUMP(wstatus) ? " (core dumped=
)" : "";
-
-                fprintf(stderr, "%s:%d: kill_qemu() detected QEMU death =
"
-                        "from signal %d (%s)%s\n",
-                        __FILE__, __LINE__, sig, signame, dump);
-            }
-            abort();
+    }
+
+    /*
+     * We expect qemu to exit with status 0; anything else is
+     * fishy and should be logged with as much detail as possible.
+     */
+    wstatus =3D s->wstatus;
+    if (wstatus) {
+        if (WIFEXITED(wstatus)) {
+            fprintf(stderr, "%s:%d: kill_qemu() tried to terminate QEMU =
"
+                    "process but encountered exit status %d\n",
+                    __FILE__, __LINE__, WEXITSTATUS(wstatus));
+        } else if (WIFSIGNALED(wstatus)) {
+            int sig =3D WTERMSIG(wstatus);
+            const char *signame =3D strsignal(sig) ?: "unknown ???";
+            const char *dump =3D WCOREDUMP(wstatus) ? " (core dumped)" :=
 "";
+
+            fprintf(stderr, "%s:%d: kill_qemu() detected QEMU death "
+                    "from signal %d (%s)%s\n",
+                    __FILE__, __LINE__, sig, signame, dump);
         }
+        abort();
     }
 }
=20
@@ -228,6 +245,7 @@ QTestState *qtest_init_without_qmp_handshake(const ch=
ar *extra_args)
=20
     g_test_message("starting QEMU: %s", command);
=20
+    s->wstatus =3D 0;
     s->qemu_pid =3D fork();
     if (s->qemu_pid =3D=3D 0) {
         setenv("QEMU_AUDIO_DRV", "none", true);
diff --git a/tests/libqtest.h b/tests/libqtest.h
index 96a6c01..9758c51 100644
--- a/tests/libqtest.h
+++ b/tests/libqtest.h
@@ -1011,4 +1011,12 @@ bool qmp_rsp_is_err(QDict *rsp);
  */
 void qmp_assert_error_class(QDict *rsp, const char *class);
=20
+/**
+ * qtest_probe_child:
+ * @s: QTestState instance to operate on.
+ *
+ * Returns: true if the child is still alive.
+ */
+bool qtest_probe_child(QTestState *s);
+
 #endif
--=20
1.8.3.1


