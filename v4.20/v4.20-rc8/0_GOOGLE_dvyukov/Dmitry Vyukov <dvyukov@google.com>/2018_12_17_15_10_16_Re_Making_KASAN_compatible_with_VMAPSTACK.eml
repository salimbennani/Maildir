Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 08:45:40 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 171D45805FC;
	Mon, 17 Dec 2018 07:13:36 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga001-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 17 Dec 2018 07:13:36 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AWuYRgRz87a/557HXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e8TKvad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYO/1jcKPAZtMaXXROUdpNVyJPBYO8?=
 =?us-ascii?q?apEAD+sHPe1Fq4XwqF8DoR64CAKxBu3g1yVIi2f50q000esvEQ/I0g89EdwQrH?=
 =?us-ascii?q?vUt831OaUJXOCp0KXF1ynPY+9K1Tr/7oXDbxAvoeuLXbJ1acffx0wvFwLZjlWK?=
 =?us-ascii?q?qY3uIjya1+QQs2iY6OpgS/+khmk6pAFvojmv28Qsio7Xho8OxVDE8iJ5wIkxJd?=
 =?us-ascii?q?KmUkJ0fdmkEJ5JuiycKoB4TMQiQ2RytyY7zL0LoZ27czYQyJQh2RHfb+aLc4+S?=
 =?us-ascii?q?4hLsTOqRLjB4hHVqeLK7mRm+61Svyur5VsSyzV1ErTJFn8HSunwR0xHf8NWLR/?=
 =?us-ascii?q?Vj8ku7xDqC1Bzf5vtFLE02jabXNYItz7oqmpcQsUnPBDL6lUT3gaOMeUgo5+6l?=
 =?us-ascii?q?4Pn9bLr8vJ+TLYp0hxn+Mqswnsy/Bvw1MhYBX2eF4+Swzr7j8lPjQLVMkPI2lr?=
 =?us-ascii?q?PVsJfAJcQUvqK5AglV3Zg/6xunETuqzNAVkWMaIF9LZh6LlZXlNlLSLPziDPqy?=
 =?us-ascii?q?gUygkDJxyPDHOr3hDI/NLn/GkLr5ebZ96khcyBc8zNxG5JJbFKsBIPTtVU/1rd?=
 =?us-ascii?q?DYCRE4MwqqzOb9E9h9yIweVnyVAqODM6Pdr0WI5uQxLOmIfoMVvyz9K/c96/70?=
 =?us-ascii?q?kXA5gUMdfbWu3ZYPbHC4H/dmLFuDbXvjn9cMCmMKvgs4TOz3h1yOSz9TZ3CuX6?=
 =?us-ascii?q?0i4jE3Ep6pDYDGRoq1mryOwD+7HoFKZmBBEl2MEW3nd4SYW/gWbyKeOM9hkiEe?=
 =?us-ascii?q?WrinRI8szhWutA78y7p6IevY4CwYtZT/1Ndr4+3fjw099TtxD86FyWGCU3l0nn?=
 =?us-ascii?q?8URz8xxK1/o0t9xUmZ3ah7hPxYE9pT5/RSXwc+NJ7cyfF6Ct/oVgLAeNeJVEip?=
 =?us-ascii?q?QtG8DT4tSdIxxscEY1xhFNW6khDDwy2qDqcPmLyQBJw09aHc02LrJ8lnyXbLz6?=
 =?us-ascii?q?0hj1ggQstSOmyqnK9/9w7PB4HXl0WVjbqldaMZ3CTV7meM0XKOvF1EUA53SajF?=
 =?us-ascii?q?XmoQZk3ModT950PNVbmuCbs8PwtFyM6CLLZKa9LzgVVHQvfjJMrRY2arl2isAh?=
 =?us-ascii?q?aIw6uGbJD2dGUFwCXdFE8EnhgO8nmcKwgxGD2to2LEAzxoDlLgfUXs/e56qHO4?=
 =?us-ascii?q?S080yxqHb0lg17qz5x4UiuaQS/IV3rIYpighry94E0q639LTE9CAvRZufL1AYd?=
 =?us-ascii?q?Mh51dKzX/WuBZjPpO+NaxihkQRcwJsv0zw0RV6EYFAkcksrHM3wwt+M6OY0FVd?=
 =?us-ascii?q?dzyG2ZD8IKHYKm73/Bq3ca7Zxkne0MqK+qcI8Pk4t1TjvASuFko+83Vm08NZ02?=
 =?us-ascii?q?eG6pXNFgoSVZPxUkA49xVho7HaYy89557b1HF2MKm0tCPC1MwtBOc/1hmgeNJf?=
 =?us-ascii?q?OrueFADuC80aG9SuKOsyllezahILIu9T+7A0Ps+8bPSGxbOkM/xmnDKlimRH/p?=
 =?us-ascii?q?tw0kaN9yp6V+7J0IwJw/Ce3gubSTj8iE2tvdzwmYBBfTsSBHawyTD4BI5NYa1/?=
 =?us-ascii?q?ZYYKCXq0L8Kr3Nl/hp7tVGRe9F6sHF4G3M6peRyPb13yxwFQ1EIXoWC5liu81T?=
 =?us-ascii?q?B7jzYprq+H1izU3+vibAYHOnJMRGR6l1fsIJS7gMoAXEe1aAgljh2l6ljgx6ha?=
 =?us-ascii?q?vahwM3PcQUNVcCfoNWFiVa2wu6GGY85O7pMorCpWXP69YVCcVr7yvR8a3zn/EG?=
 =?us-ascii?q?tZwTAxbyuqtYnhnxxmlGKdK25+rXrYec1qxRbT/sfcReNX3jcdQCl4iD/XBkWz?=
 =?us-ascii?q?PtWz/NWUkYvDvf66V267SpJTdizrx5uatCSn/W1qHQG/n/erl93lCwc6yyz719?=
 =?us-ascii?q?ptVSnStxbzeIrr16e7MeJhYEZoAkTx6857GoF4j4sxi4sc2XkchpWJ43UHlX3/?=
 =?us-ascii?q?Pslc2aL7dHANXyIEw8bJ4Aj5301uNnKIyJj+VnmHwMthZt+6b3gS2iI86cBKFa?=
 =?us-ascii?q?iV4KZFnStzvlq3swbRbeJhkTcazPsk8GQajP0RuAox0iWdBagfHUpCMiztjRiI?=
 =?us-ascii?q?782+o79RZGagarWw0Et+nda8DLCNuA1cWXD5eos8Ei909MlwLFXM0Hjr4IH+ZN?=
 =?us-ascii?q?bQdc4TtgGTkxrYiuhVKZExmeAQiStpJ239pmElxPAhjRN1w566poeHJn5p/KK4?=
 =?us-ascii?q?BB5YKzL0a9kS+jHrkaZRgMKW05qzEZVmHzUBRIHoQu6wEDIOqfTnMB6DECE7qn?=
 =?us-ascii?q?eeA7beHBWQ6EF7r3LUCJCrNmqaJH0YzdVkWRmcK1ZTgAESXDUmgJE5Ehqmy9Dm?=
 =?us-ascii?q?cEd8/joR/EL3qgNQyuJ0MBnySnzQqx2vajcwVZiTNh5W7hxZ6kfRMMye6P9zHi?=
 =?us-ascii?q?5C8p2gqgyNNnKUZwBSAW4VXUyEAkjpPqOy6tnY7+iYGu2+IuPMYbqUrOxRSeyI?=
 =?us-ascii?q?yYiz0od8/DaMK8aPPmRkD/IhwUpORnR5G8XfmzUSRC0bjSPNb8iHpBii/i17tN?=
 =?us-ascii?q?yw8PPuWAj3/4uAF6NSMclz+xCxmaqCN+mQhDtgKTZFzJwMw2XEyKMY3F4UhCFj?=
 =?us-ascii?q?bD2tEbUGtS7QQ6PcgK5XDxgHayxtMMtE9b4z3g5IOcTDkNP6yqZ4juIpC1dCTV?=
 =?us-ascii?q?Hhmt+mZc0JI2G+NVPLHkWLNK6BJT3E3c73e768SaZLgeVQth2wvyubEkD5MjSC?=
 =?us-ascii?q?kTnpSw6gMeVWgC6HOxxevZm3cgxxBmj7UNLmdhq7Pcdtgj0r2rI0nG3FNG4GPT?=
 =?us-ascii?q?h4ckNAtbmQ7SJegvViFG1N9HtlLe+YmymH6+nUMIoZsfxuAi5sjeJV/Gw6y6dJ?=
 =?us-ascii?q?7CFDXPF1hCrSrtt0r166iOWA1jpnXwRIqjtQgIKLvENiObjW95VaWHbE+g4N4n?=
 =?us-ascii?q?uUCxgQu9RlDdjvsbhKytfTjKLzNCtC89XM8MocHcfULseHMHsnMRXxGT/UDBEK?=
 =?us-ascii?q?TTikNWzEg0xdkfeS9mCar5Qgq5jsnoYORaFfVFAvCvwaDUFlT5Q+J8JSVykn2Y?=
 =?us-ascii?q?SGkMoB43b2+BzYXsYcpI3bUvuUDd3mMjPfhr5BMUgm27T9eKgWN5HhygRce0R5?=
 =?us-ascii?q?m5qCT0bOTM1OpTNJYQgzr0FAtnN5SztgiAredgqx7SpLRraPlRksh147PL0g?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A7AQDevBdch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBZYJqgQIng3yUD4INFJhoA0wsCwgBh1YiOBIBAwEBAQEBAQIBEwEBAQoLCQg?=
 =?us-ascii?q?pIwyCNiSCYwECAwECIB0BATcBBQkBAQoLDQICJgICAx8SAQUBHAYTBYMdAYIAB?=
 =?us-ascii?q?QqcNTyKIHCBCSaCdgEBBYEwAYVpAwUSeYszF4FAP4Qjgx4CAhiET4JXiUAygUa?=
 =?us-ascii?q?VYwmFPYFQg0CHDRiRUiyOBosjMIE8VoEhMxoIGxVsBoI1ghuDbYUUhUA+MwGBB?=
 =?us-ascii?q?AEBjW8BAQ?=
X-IPAS-Result: =?us-ascii?q?A0A7AQDevBdch0O0hNFjHAEBAQQBAQcEAQGBZYJqgQIng3y?=
 =?us-ascii?q?UD4INFJhoA0wsCwgBh1YiOBIBAwEBAQEBAQIBEwEBAQoLCQgpIwyCNiSCYwECA?=
 =?us-ascii?q?wECIB0BATcBBQkBAQoLDQICJgICAx8SAQUBHAYTBYMdAYIABQqcNTyKIHCBCSa?=
 =?us-ascii?q?CdgEBBYEwAYVpAwUSeYszF4FAP4Qjgx4CAhiET4JXiUAygUaVYwmFPYFQg0CHD?=
 =?us-ascii?q?RiRUiyOBosjMIE8VoEhMxoIGxVsBoI1ghuDbYUUhUA+MwGBBAEBjW8BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,365,1539673200"; 
   d="scan'208";a="56670225"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 17 Dec 2018 07:13:33 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2387523AbeLQPKa (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 17 Dec 2018 10:10:30 -0500
Received: from mail-io1-f41.google.com ([209.85.166.41]:46685 "EHLO
        mail-io1-f41.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726891AbeLQPKa (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 17 Dec 2018 10:10:30 -0500
Received: by mail-io1-f41.google.com with SMTP id v10so10175885ios.13
        for <linux-kernel@vger.kernel.org>; Mon, 17 Dec 2018 07:10:29 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=1wnnihTXSI7C1dISr8t2StBBRXqW8X+jGNH93zCQ2AQ=;
        b=mzZXozZrxngzshDSOpzjpyDYbm7BACbbNmKxKnA1RfuLzrj/d+SRIXB+AGEW1DWofV
         yX4TsV1caYa7TSJzkhk5UOdtT2RPANkREP4B3MxmIKjlIwL10EvSMlTxALUbvHKyTajF
         XWqB+0e56lZz0fIdaQwuzLWBY8gx3gz016s6LkwyumjzjTvhHJaOQBn87l6ZR28sVl7l
         9G6mdOKuExPDiGmFMwHqaJjQkI63upuRE04wyRlAU8zaQdu73ToJiUTcpSsbPpeVMhUM
         SO9HgSa7zPxKPjpG8jL24dcyAReIvcNstAvKUDfVfnqbT+fzc85ibIL+Z8MbHNyT5eNx
         PA+w==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=1wnnihTXSI7C1dISr8t2StBBRXqW8X+jGNH93zCQ2AQ=;
        b=jLjXyHw7zQyy4sUofJFMNhETC/XXx/DZWTGSi39M6XlDNHbpT5Pzv0C71qbGb5rwgU
         ezfYTM6aM29tjwqdu1TZITmXK9n4405DA0ZPdgzXkLHRsXPT7J5WoOmsNQCRmP2BYrEp
         Puzl6hb5Gzx9MNAyF/b3mDRldcZNFbis22ZKyv6zubpqMYlLPEULa3UPO1TzOlqkZksG
         bsus9VYNMacFOD2k3eEzd4FtGCS+QrZYu7HB5K7Kl+8+5YmSAe5ktqKkWBmgyLXwf67X
         UN8Rt2RJLkX9WEJCDpHnlsJa9z1+qGZzW0w9/SCt48jRmtVuE5yzNpFQO7XqHVwBps5T
         kaKg==
X-Gm-Message-State: AA+aEWZNLIP0Gz4mM4bLcLR+ZGpU0bN3rAhVaxvSrS9/j+EthDyFUahK
        S86POIyZ0l9vM1PM97cTk8JDD2tffGw7MLWuRiOfvw==
X-Google-Smtp-Source: AFSGD/Uuco3DtgeQny9gB3gFGKpe//fW1k5bWrL+F/hmql29YCXTeb6zXbS9SAzwM+Jhwz8P/q59xTslNXkOQoSbjS4=
X-Received: by 2002:a5d:8491:: with SMTP id t17mr11306544iom.11.1545059428959;
 Mon, 17 Dec 2018 07:10:28 -0800 (PST)
MIME-Version: 1.0
References: <CALCETrW4F33LWWA=cWYZ2N9=veCmVfjhCCLnSv2qh=32fOAf-w@mail.gmail.com>
 <CACT4Y+aP4QSGBiLWt0iNHVJ4nMc_phthK9P+gTMd4d=exaAKwA@mail.gmail.com>
 <20180723111813.vbnsmx2k45eqzdkc@lakrids.cambridge.arm.com>
 <CACT4Y+YMYogSo+Wq=29A7fKC9hufsc_DwLrneOKtsefZP-9h6g@mail.gmail.com>
 <20180723124026.3uqc6r3mgge62onh@lakrids.cambridge.arm.com> <CACT4Y+ZN98Ti=zU6eWAUgNFchxENbz2EeeUtCcbMS9Lek-D9EA@mail.gmail.com>
In-Reply-To: <CACT4Y+ZN98Ti=zU6eWAUgNFchxENbz2EeeUtCcbMS9Lek-D9EA@mail.gmail.com>
From: Dmitry Vyukov <dvyukov@google.com>
Date: Mon, 17 Dec 2018 16:10:16 +0100
Message-ID: <CACT4Y+bTCaaqL_teSh-BQu--bKqNW58J82sWR2ybGcR3KtCMqQ@mail.gmail.com>
Subject: Re: Making KASAN compatible with VMAP_STACK
To: Mark Rutland <mark.rutland@arm.com>
Cc: Andy Lutomirski <luto@kernel.org>,
        Andrey Ryabinin <aryabinin@virtuozzo.com>,
        Alexander Potapenko <glider@google.com>,
        kasan-dev <kasan-dev@googlegroups.com>,
        LKML <linux-kernel@vger.kernel.org>, X86 ML <x86@kernel.org>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, Jul 23, 2018 at 2:51 PM Dmitry Vyukov <dvyukov@google.com> wrote:
>
> On Mon, Jul 23, 2018 at 2:42 PM, Mark Rutland <mark.rutland@arm.com> wrote:
> >> >> > Hi all-
> >> >> >
> >> >> > It would be really nice to make KASAN compatible with VMAP_STACK.
> >> >> > Both are valuable memory debugging features, and the fact that you
> >> >> > can't use both is disappointing.
> >> >> >
> >> >> > As far as I know, there are only two problems:
> >> >> >
> >> >> > 1. The KASAN shadow population code is a mess, and adding *anything*
> >> >> > to the KASAN shadow requires magical, fragile incantations.  It should
> >> >> > be cleaned up so that ranges can be easily populated without needing
> >> >> > to very carefully align things, call helpers in the right order, etc.
> >> >> > The core KASAN code should figure it out by itself.
> >> >> >
> >> >> > 2. The vmalloc area is potentially extremely large.  It might be
> >> >> > necessary to have a way to *depopulate* shadow space when stacks get
> >> >> > freed or, more generally, when vmap areas are freed.  Ideally KASAN
> >> >> > would integrate with the core vmalloc/vmap code and it would Just Work
> >> >> > (tm).  And, as a bonus, we'd get proper KASAN protection of vmalloced
> >> >> > memory.
> >> >> >
> >> >> > Any volunteers to fix this?
> >> >>
> >> >> Hi Andy,
> >> >>
> >> >> I understand that having most configs as orthogonal settings that can
> >> >> be enabled independently is generally good in intself, but I would
> >> >> like to understand what does VMAP_STACK add on top of KASAN in terms
> >> >> of debugging capabilities?
> >> >
> >> > VMAP_STACK makes it possible to detect stack overflows reliably at the
> >> > point of overflow.
> >> >
> >> > KASAN can't handle this reliably, even if it detects that an access is
> >> > out of the stack bounds, since handling this requires stack space.
> >> > Depending on a number of factors, this may be reported, might result in
> >> > recursive exceptions, etc.
> >>
> >> Interesting. Does VMAP_STACK detect task_struct smashing today? As far
> >> as I remember, the first version didn't.
> >
> > I assume you mean thread_info? Both arm64 and x86 moved the thread_info
> > out of the stack region by moving it into task_struct, which has always
> > been allocated separately. So thread_info smashing by stack overflow is
> > not possible.
> >
> > Regardless of VMAP_STACK, the stack region is purely stack on arm64 and
> > x86.
> >
> >> As an orthogonal measure we could add KASAN redzone between stack and
> >> task_struct, and make KASAN instrumentation detect when the new frame
> >> hits this redzone. We bump stack order under KASAN significantly, so
> >> adding, say 128 byte redzone should not be a problem. Does it make any
> >> sense?
> >
> > I don't think this is necessary since the two are allocated separately.
>
>
> I see. Thanks.
>
> So current KASAN failure mode would be silently smashing whatever page
> happens to be after the stack. If so, I guess combining it with
> VMAP_STACK would be useful, in particular, to prevent random assorted
> crashes coming out of syzbot.
>
> But I think I am not well qualified to actually do this.

A stack overflow just fired in:
https://groups.google.com/forum/#!topic/syzkaller-bugs/HoRZMT92WKk
on incoming network packet parsing (!). Was detected as some "innocent
WARNING" in rcu subsystem.

I filed https://bugzilla.kernel.org/show_bug.cgi?id=202009 to track
KASAN+VMAP_STACK.
