Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:45:03 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 9B8FF5805F0;
	Thu, 20 Dec 2018 20:50:26 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga004-1.fm.intel.com with ESMTP; 20 Dec 2018 20:50:25 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Aj+389B35tnAtcP4UsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segVI/vxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJOUcZfVSNPAo2y?=
 =?us-ascii?q?YYgSAeQfIelYtJH9qlkVoBuiGQWhHv/jxiNUinL026AxzuQvERvB3AwlB98AqH?=
 =?us-ascii?q?XUo8nyNKcWS++117TDwCjEb/NXxTj96JLHcgw8qvyLQL1wa8vRyU8sFwzZlFqQ?=
 =?us-ascii?q?tZfoMC+V1uQXtGib6utgVf+qi2I9rAFxuDevy94qh4LUhYwV0kjJ+TtlzIsxP9?=
 =?us-ascii?q?G0VUB2bcC+HJdNtCyWK5F6T8IgTm1wpio21rkLtYS4cSUK0pgr2h/SZ+Cdf4SV?=
 =?us-ascii?q?5h/uVOCcKipiin1/YrKwnROy/FCgyuLiUsm0105HrjRKktbSrHABzR/T5dadSv?=
 =?us-ascii?q?t74Eih3SyD1wfJ6uFLOUw0lKzbJIA9wrMoiJYfrUDOEjXrlEj4kqOabFgo9+u0?=
 =?us-ascii?q?5+j9Y7jrpIeQN4puhQH/NqQulNa/AeM9MgUWW2ib+OK81KDs/EHgQ7VFkOc2kq?=
 =?us-ascii?q?/Hv5DePMgboaC4AwlL3YY58Bu/ETim38oCnXUdL1JKZgiHj473NFHKOvz4Cu2/?=
 =?us-ascii?q?g1u0nDdx2//GJqHhAonKLnXblLfhfLV95FBGxAs80NBS/JZUCrAHIPLuVU79rt?=
 =?us-ascii?q?3YDhklMwOqx+brEsly1oQbWWiXGK+WLLvSsUOU5uIoO+SMZJUauDfhK/c/4P7i?=
 =?us-ascii?q?l385mUIHcqmv0psac3S4HvVgI0WEbnvgmNYBEWEWvgUgSOzmkkGNUTlWZ3yqRa?=
 =?us-ascii?q?Iz+ik7CJ66DYfEXo2imqeB3Ce8Hp1VfGxGEEqDEXXzeoWAWvcMbj+SI8B7njwF?=
 =?us-ascii?q?U7ihV5Eu1RW0uADmzLpnK/Le+jcEupL7yNh1++rTmAkx9TNuCcSRyWWNT2BukW?=
 =?us-ascii?q?MOSD87x6R/oU17ylee3ql0mf1YFdpP5/xXVgc2L4LTz+t/C9rqQALOYs+JSEq6?=
 =?us-ascii?q?QtWhGTw+U8g+w8EQbEpnG9WtlBbD3zG0DL8TkLCLAJ808qfY33XqI8Z9ynDG1L?=
 =?us-ascii?q?QujlU8Q8tPM3GmibB79wTJG4HJlECZnb6wdasAxC7N6HuDzW2WsU5FSgFwT7vK?=
 =?us-ascii?q?UWofZkTMq9T5/V3NT7m1BLQjMwtBz9OCK6RQZt3oi1VGWOnsONDEb22tnGewAA?=
 =?us-ascii?q?6CxqmQY4ryZ2UdwCLdBVAYkwAS+HaGMhQ+Biehom7EEDxiD1XvY1no8el/rnO7?=
 =?us-ascii?q?QVQ5zwWLb01nyrq09QQZhf2aS/MPwL0EvD0tpClzHFa4x9jWEcaPpxJ9fKVAZt?=
 =?us-ascii?q?Mw+E1I1WbHuA1yIJOhL7puiUUDcwtqpUzu0RZ3CoJekcUxqHMqzQxyKb+X0V9b?=
 =?us-ascii?q?djOY24zwNaPTKmXo4B+vbKvW0EnE0NmK4qcP9Og4q1L7sQCpC0ou6Wlo38NU0n?=
 =?us-ascii?q?uc/JrKCgUSXIn1UkY28Rh6ur7bbjM854PSyX1jL620viXe1NIuAesv0gygcMtH?=
 =?us-ascii?q?MKOYCA/yFNUXB9KvKOM2gVepdA8LPOdI+K4yIcymbfqG1Le3M+l6mDKpkHpI4J?=
 =?us-ascii?q?p60kKK7Cd8Tu/I35AYw/CXxAeHVjH8jEu/vcDzg4xLeTYSHm+nwyj+GIFRfrFy?=
 =?us-ascii?q?fZoMCWq2I8y3x89yhp73V35D6V6jAUgL2MuoeRqUclz80hdc1UURoXy7hyS4yy?=
 =?us-ascii?q?Z4nC0urqqaxCbO2fjtdAIbOm5XQ2lvlVXsLpKuj9AZX0ioaBIllAC/6kb5xKhb?=
 =?us-ascii?q?paJ/IHfVQUpTeyj2LmdiUra/t7aYYs5P7o8ovjtTUOimfV+aTbv9qQMA0yz/B2?=
 =?us-ascii?q?te2Cw7dzayt5T5hRN6j3iRLHRyrHrfYsxwwRbf5NrBRf9exDYGRS94iSXJCVi4?=
 =?us-ascii?q?JdWm4dKUl5LbuOCkS22hToFTcTXszY6Ytyu0/2xqDQe/n/CugNLnFwc63DT/19?=
 =?us-ascii?q?lrUyXIsRn9bpPq16S8LeJoYE1oCEXg5Mp9H4F0ipEwi40I2XgGmpWV+mIKkWLy?=
 =?us-ascii?q?MdVYw63ydnQMSiAQw97J/gflwlZsIWyTx4L2TXidxsphZ9+nYmIZwC497sZKCL?=
 =?us-ascii?q?uK47xAhyd6vl24rQfJa/hngjgd0ecu6GIdg+wRpAotySCdDqoTHEZCOyzsig+I?=
 =?us-ascii?q?78u/rKhMYGavcL6w1FdxnNy7DbGCpB1cV2j9eps4ASBw6cB/OkrW0HLv8oHkZM?=
 =?us-ascii?q?XQbdULuxKPiRjAiOxVKI8rmvoOmCpqImb9vXwjy+4mgh1ix5C6vI6bK2pz+KK1?=
 =?us-ascii?q?GAJXNjrwZ8kL4DHikb5entqK34CoBphhGC8EXJ72QvKzCj4Sqe7rNwWTED0/t3?=
 =?us-ascii?q?ebH6DQHRSE5UdirnLPFY2rNn6NKHkYy9ViWAeSJEhFjA8IWzU6m4YzFhq2y8z5?=
 =?us-ascii?q?bEd5+jcR60b4qxtL1+JoLgT/XX3ZpAuycTc0T56fLBVN4wFG5kfVN9Ge7+1pEy?=
 =?us-ascii?q?FZ+J2hsBKCKmiBawtUCmEJX1SOB0r/Mbm2+dnA7++YC/K+L/TQYLWOqu9eV/aS?=
 =?us-ascii?q?yZKsyItm+DmMOduVPnl/FP02wU5DXXF/G8TElDQDUS0XlyTRb8GFoBew4DF4rs?=
 =?us-ascii?q?e68P7zQgLg+ZOPC6dOMdVo4x25m7qDOPWKhClnKTdUzJcMxX7Txbgb3V4SjTxu?=
 =?us-ascii?q?dja3HbQBsy7NULzfmqtNAxEHbCNzMdNC77gg0QlVJc7bltT126Zkjv40DldJT0?=
 =?us-ascii?q?Dultu1aswKPW69MkjKBEKKNLSAOD3KzNv7YaK6Sb1MkupUswe8tiqcE0/mJj6D?=
 =?us-ascii?q?jSXmVwizMeFQiyGWJBxft5u7chZoCGjjSsrpaxy7MNBtiz02zqY5hnfLNW4aLD?=
 =?us-ascii?q?h9fFlBrryW7SNEnPp/H3ZN4WZiLemByG6l6LzpLZAZ+cR2SnBlkORVpmsn475Y?=
 =?us-ascii?q?4CBNWPF23iDVq4g9jUuhl7ypyzFgVBNV4hxMhYmLtFkqbanD959DUn/Y1BkN92?=
 =?us-ascii?q?KVCgkP4dx/BYu86Ohr1tHTmfere395+NXO8J5ZXpCMJQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AZAACbcBxch0O0hNFkHgEGBwaBUQkLA?=
 =?us-ascii?q?YNrJ4N9lBRQAQEGgTUUiRCOOoFzLRMBhy4iNAkNAQMBAQEBAQECARMBAQEIDQk?=
 =?us-ascii?q?IKSMMgjYkAYJiAQIDAQILFQQZAQEjFAEFCQEBCgsNAgImAgIDHxIBBQEcBhMFg?=
 =?us-ascii?q?x2BdQ0Fmxs8iilwfDOCdgEBBYcvCBJ5izQXeIEHhCOICYJXiUOHGVOQDwmRZRi?=
 =?us-ascii?q?RXSyZUjCBJYIOMxoIKAhsBoI1ghsMF4hehUwyM4EFAQGOGQEB?=
X-IPAS-Result: =?us-ascii?q?A0AZAACbcBxch0O0hNFkHgEGBwaBUQkLAYNrJ4N9lBRQAQE?=
 =?us-ascii?q?GgTUUiRCOOoFzLRMBhy4iNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkAYJiA?=
 =?us-ascii?q?QIDAQILFQQZAQEjFAEFCQEBCgsNAgImAgIDHxIBBQEcBhMFgx2BdQ0Fmxs8iil?=
 =?us-ascii?q?wfDOCdgEBBYcvCBJ5izQXeIEHhCOICYJXiUOHGVOQDwmRZRiRXSyZUjCBJYIOM?=
 =?us-ascii?q?xoIKAhsBoI1ghsMF4hehUwyM4EFAQGOGQEB?=
X-IronPort-AV: E=Sophos;i="5.56,380,1539673200"; 
   d="scan'208";a="44939366"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 20 Dec 2018 20:50:24 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2389102AbeLUErV (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Thu, 20 Dec 2018 23:47:21 -0500
Received: from mail-qt1-f195.google.com ([209.85.160.195]:40253 "EHLO
        mail-qt1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2388977AbeLUErU (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 20 Dec 2018 23:47:20 -0500
Received: by mail-qt1-f195.google.com with SMTP id k12so4398621qtf.7
        for <linux-kernel@vger.kernel.org>; Thu, 20 Dec 2018 20:47:19 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=chromium.org; s=google;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=9H1D9Nqf+4PUZlmYIEOQ3XEEn2RwgBMkN+9rPJV20eA=;
        b=ai0vh+GpEJszFZjxgawSbcZLVoZRrKEyh4rUIXLaIf13Z+nv9EcKIYuLzY4vVpMGht
         AVp//wl67+V1H1FFvv+pPd0aQFxBfdZfhCBAx5Y2UAtu9H8GNfsCArtCtMxaseUg53U4
         eJO0jaJh31zVFH9enp+l2BKZbWx8p8ugrahPM=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=9H1D9Nqf+4PUZlmYIEOQ3XEEn2RwgBMkN+9rPJV20eA=;
        b=uWP6lJnDctxL/YmIjn1as+veWZTliSHFgIGOiTAz9HEav2AhITnxvFFBT+0/mozQSY
         TAV+uavqXhsVnbrQ1nFynAn4VyuKmusQqSzg0WZ6bCgBdfG2fwcxoCU40K9WYiEifQtv
         qLSgwpf4Fa85Pv5L9HQA3y1FSDB48aSZ9s0MZHUv3qkZ42tPYSVLpYgaePHWZe2I5myx
         9GsGrJdF5zsmp2b8jRlPyVU3H7HEZhRAHfWhwIyj7wBf6c+l129AsqlMM08X9q7l9wuQ
         tfBaqUAQX4kd8dB4kTXC4rLTWDjQI+iHY7OH1APy/FMAKwWclVg2okzhwzZTnhewFQ9O
         /Lzg==
X-Gm-Message-State: AA+aEWaJdnW21cw5A4/cte88YDUzfQABdPjtVFHHJr+vR9ST+oW37fLK
        f9DIyYtUXurQcEqeBvpqJek2H5pe6eNe0ID+/MxTlg==
X-Google-Smtp-Source: AFSGD/Uk6uM1l3M/mKJcTj7wq5496QVOwEUnJ3E3Itj92NycddxmrafAKhArHCoj68PE12CqYTNVpBN4ZSYaFOD5FNU=
X-Received: by 2002:ac8:6b18:: with SMTP id w24mr972568qts.144.1545367639289;
 Thu, 20 Dec 2018 20:47:19 -0800 (PST)
MIME-Version: 1.0
References: <1544258371-4600-1-git-send-email-yong.wu@mediatek.com> <1544258371-4600-14-git-send-email-yong.wu@mediatek.com>
In-Reply-To: <1544258371-4600-14-git-send-email-yong.wu@mediatek.com>
From: Nicolas Boichat <drinkcat@chromium.org>
Date: Fri, 21 Dec 2018 12:47:08 +0800
Message-ID: <CANMq1KA4GLZHcDH31=W==8BTBZOVbRX9HBTJrpPFNQ3rWaM4xg@mail.gmail.com>
Subject: Re: [PATCH v4 13/18] memory: mtk-smi: Add bus_sel for mt8183
To: Yong Wu <yong.wu@mediatek.com>
Cc: Joerg Roedel <joro@8bytes.org>,
        Matthias Brugger <matthias.bgg@gmail.com>,
        Robin Murphy <robin.murphy@arm.com>,
        Rob Herring <robh+dt@kernel.org>,
        Tomasz Figa <tfiga@google.com>,
        Will Deacon <will.deacon@arm.com>,
        linux-mediatek@lists.infradead.org, srv_heupstream@mediatek.com,
        devicetree@vger.kernel.org, lkml <linux-kernel@vger.kernel.org>,
        linux-arm Mailing List <linux-arm-kernel@lists.infradead.org>,
        iommu@lists.linux-foundation.org, arnd@arndb.de,
        yingjoe.chen@mediatek.com, youlin.pei@mediatek.com,
        Arvind Yadav <arvind.yadav.cs@gmail.com>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Sat, Dec 8, 2018 at 4:43 PM Yong Wu <yong.wu@mediatek.com> wrote:
>
> There are 2 mmu cells in a M4U HW. we could adjust some larbs entering
> mmu0 or mmu1 to balance the bandwidth via the smi-common register
> SMI_BUS_SEL(0x220)(Each larb occupy 2 bits).
>
> In mt8183, For better performance, we switch larb1/2/5/7 to enter
> mmu1 while the others still keep enter mmu0.
>
> In mt8173 and mt2712, we don't get the performance issue,
> Keep its default value(0x0), that means all the larbs enter mmu0.
>
> Signed-off-by: Yong Wu <yong.wu@mediatek.com>
> ---
>  drivers/memory/mtk-smi.c | 22 ++++++++++++++++++++--
>  1 file changed, 20 insertions(+), 2 deletions(-)
>
> diff --git a/drivers/memory/mtk-smi.c b/drivers/memory/mtk-smi.c
> index ee6165e..88eb61a 100644
> --- a/drivers/memory/mtk-smi.c
> +++ b/drivers/memory/mtk-smi.c
> @@ -49,6 +49,12 @@
>  #define SMI_LARB_NONSEC_CON(id)        (0x380 + ((id) * 4))
>  #define F_MMU_EN               BIT(0)
>
> +/* SMI COMMON */
> +#define SMI_BUS_SEL                    0x220
> +#define SMI_BUS_LARB_SHIFT(larbid)     ((larbid) << 1)
> +/* All are MMU0 defaultly. Only specialize mmu1 here. */
> +#define F_MMU1_LARB(larbid)            (0x1 << SMI_BUS_LARB_SHIFT(larbid))
> +
>  enum mtk_smi_gen {
>         MTK_SMI_GEN1,
>         MTK_SMI_GEN2
> @@ -57,6 +63,7 @@ enum mtk_smi_gen {
>  struct mtk_smi_common_plat {
>         enum mtk_smi_gen gen;
>         bool             has_gals;
> +       u32              bus_sel; /* Balance some larbs to enter mmu0 or mmu1 */
>  };
>
>  struct mtk_smi_larb_gen {
> @@ -72,8 +79,8 @@ struct mtk_smi {
>         struct clk                      *clk_apb, *clk_smi;
>         struct clk                      *clk_gals0, *clk_gals1;
>         struct clk                      *clk_async; /*only needed by mt2701*/
> -       void __iomem                    *smi_ao_base;
> -
> +       void __iomem                    *smi_ao_base; /* only for gen1 */
> +       void __iomem                    *base;        /* only for gen2 */
>         const struct mtk_smi_common_plat *plat;
>  };
>
> @@ -409,6 +416,8 @@ static int __maybe_unused mtk_smi_larb_suspend(struct device *dev)
>  static const struct mtk_smi_common_plat mtk_smi_common_mt8183 = {
>         .gen      = MTK_SMI_GEN2,
>         .has_gals = true,
> +       .bus_sel  = F_MMU1_LARB(1) | F_MMU1_LARB(2) | F_MMU1_LARB(5) |
> +                   F_MMU1_LARB(7),

Maybe it's ok for now, but I wonder if this is something that should
be specified in device tree? Maybe different applications will want
different larb split between MMU0 and MMU1?

>  };
>
>  static const struct of_device_id mtk_smi_common_of_ids[] = {
> @@ -481,6 +490,11 @@ static int mtk_smi_common_probe(struct platform_device *pdev)
>                 ret = clk_prepare_enable(common->clk_async);
>                 if (ret)
>                         return ret;
> +       } else {
> +               res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
> +               common->base = devm_ioremap_resource(dev, res);
> +               if (IS_ERR(common->base))
> +                       return PTR_ERR(common->base);
>         }
>         pm_runtime_enable(dev);
>         platform_set_drvdata(pdev, common);
> @@ -496,6 +510,7 @@ static int mtk_smi_common_remove(struct platform_device *pdev)
>  static int __maybe_unused mtk_smi_common_resume(struct device *dev)
>  {
>         struct mtk_smi *common = dev_get_drvdata(dev);
> +       u32 bus_sel = common->plat->bus_sel;
>         int ret;
>
>         ret = mtk_smi_clk_enable(common);
> @@ -503,6 +518,9 @@ static int __maybe_unused mtk_smi_common_resume(struct device *dev)
>                 dev_err(common->dev, "Failed to enable clock(%d).\n", ret);
>                 return ret;
>         }
> +
> +       if (common->plat->gen == MTK_SMI_GEN2 && bus_sel)
> +               writel(bus_sel, common->base + SMI_BUS_SEL);
>         return 0;
>  }
>
> --
> 1.9.1
>
