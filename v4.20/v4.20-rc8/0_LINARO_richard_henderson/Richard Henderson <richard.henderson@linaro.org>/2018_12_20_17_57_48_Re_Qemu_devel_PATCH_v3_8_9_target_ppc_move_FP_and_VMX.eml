Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:39:47 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 27FB95805F0
	for <like.xu@linux.intel.com>; Thu, 20 Dec 2018 09:58:19 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 20 Dec 2018 09:58:18 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3Azj3X4xCgzmISoVlN4tskUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP36p8ywAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95PWSxPAo2y?=
 =?us-ascii?q?bIUBAOQOMulas4bzqEYArQO8CAeuC+7j1zFFimPo0q0hyOkhDQPL0RY8E94Svn?=
 =?us-ascii?q?nZrtP4P7oSX+Cvy6nIyC3OYe9X2Tjh6IjHaAohruyRVrxyb8XRz1QgGB3fjlWL?=
 =?us-ascii?q?rozlOS6e2+MXs2ia8+VgVfigi3Q6pA1rojig2MEshZTXiYIP0VDE8iN5zZ0xJd?=
 =?us-ascii?q?25Tk50e8SkEJxKuyGdLYt2TdovTmd1syg50r0LoYC3cDQJxZg92hLTdv+Kf5KW?=
 =?us-ascii?q?7h/tVOudOyp0iXB9dL+7hRu+61WsxvP9W8WuzVpGsypInsPRun0N1RHe7NWMRO?=
 =?us-ascii?q?Fn8Ue7wzmP0hje6uFaLkAwkqrWM5ohwr8rlpoPqkTPBCD2mEPrjKOMcUUk4Oeo?=
 =?us-ascii?q?5/zmYrXguJCcK5d5hh/iPqktgMCzHPk0PwsUU2SF9+mx1Kfv8VD7TblSi/05iK?=
 =?us-ascii?q?jZsJTUJcQBoa65BhdY0p895Ba6EjeqyckXkmcZLF1bfBKLlpPmO1bTIPD+Efiw?=
 =?us-ascii?q?nU+snDBvx/DHPb3uHI/BL3fekLr5ebZ96khcyBc8zNxF5pJUDK0BL+z3WkPrqN?=
 =?us-ascii?q?PYCRo5Pheyw+bgDtV92YUeWX+VDq+eKqPSvkeE5vgzLOmUeI8VpDH9JuAh5/7v?=
 =?us-ascii?q?jn82h0URfKa03ZYMbHC4H/JmI1iWYHb2g9cBF3sKsRQ6TODwlFKCVjtTND6PWb?=
 =?us-ascii?q?kh7GQ7FJ6+FtWEAYSsm6CamiG8GJJQeyZBEF/LFH7pc4CNXbALcD6TJcl61SUJ?=
 =?us-ascii?q?UKXkR4I/2BX9iQnh1rAyK+PV/jEf54vu0cUw6+DNmBV37zFtEsmGz0mLSGd7mH?=
 =?us-ascii?q?5OQCU5i7tiq05wwUvWzK5jnvZDHsZS7f4abgBvEJfGzKRRAs7/HyvQet6PRB7y?=
 =?us-ascii?q?R9y8Anc6R8w8htYfZ097F/2jihnF0yfsCLhTir/dQNQt/6fBmnT8Oct543DB0q?=
 =?us-ascii?q?Ynkh8hWMQLfXSrg7M67xDYL4jOlUqfiuCtb6tYlCLE6maP5WWPtlpfVkh8S6Ld?=
 =?us-ascii?q?V30WfA3XoZLw+xDsVbirXI4mOQtI08LKCqZMZtDzllJADKP5Od/eani93We9Ax?=
 =?us-ascii?q?qF3KiLaqLuemMUxiKbD1ILxVNAtU2aPBQzU3/y61nVCyZjQBe2Oxvh?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0B9BgD11xtchxHrdtBlHQIfBQeBTQKBL?=
 =?us-ascii?q?4Jig32IeIscgWAtl10UgV8TAQEYFIcuIjYHDQEDAQEBAQEBAgETAQEBCgsJCBs?=
 =?us-ascii?q?OIwyCNgUCAxoBBoJcAQIDAQIgBBkBAQQKKgIDAQIGAQEKGAICGAcDBAICAwEwA?=
 =?us-ascii?q?QUBHAYBDAYCAQEBgx2CAgEEnAs8iilwfDOCdgEBBYJDhF4IEnmLNIFXP4E4gjY?=
 =?us-ascii?q?1hGmDIIJXiU2GWTeQYgcCgiUEiC2HCQYYiXiHZYlNkBkCBAIEBQIFDyGBLAOCB?=
 =?us-ascii?q?E0wgy+CJxcSiEyFYFGBB4tpgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0B9BgD11xtchxHrdtBlHQIfBQeBTQKBL4Jig32IeIscgWA?=
 =?us-ascii?q?tl10UgV8TAQEYFIcuIjYHDQEDAQEBAQEBAgETAQEBCgsJCBsOIwyCNgUCAxoBB?=
 =?us-ascii?q?oJcAQIDAQIgBBkBAQQKKgIDAQIGAQEKGAICGAcDBAICAwEwAQUBHAYBDAYCAQE?=
 =?us-ascii?q?Bgx2CAgEEnAs8iilwfDOCdgEBBYJDhF4IEnmLNIFXP4E4gjY1hGmDIIJXiU2GW?=
 =?us-ascii?q?TeQYgcCgiUEiC2HCQYYiXiHZYlNkBkCBAIEBQIFDyGBLAOCBE0wgy+CJxcSiEy?=
 =?us-ascii?q?FYFGBB4tpgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,378,1539673200"; 
   d="scan'208";a="142967628"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 20 Dec 2018 09:58:18 -0800
Received: from localhost ([::1]:39129 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1ga2aP-00026t-4l
	for like.xu@linux.intel.com; Thu, 20 Dec 2018 12:58:17 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:47857)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <richard.henderson@linaro.org>) id 1ga2a4-00023P-3n
	for qemu-devel@nongnu.org; Thu, 20 Dec 2018 12:57:56 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <richard.henderson@linaro.org>) id 1ga2a0-0004yu-Q0
	for qemu-devel@nongnu.org; Thu, 20 Dec 2018 12:57:55 -0500
Received: from mail-pl1-x642.google.com ([2607:f8b0:4864:20::642]:43451)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <richard.henderson@linaro.org>)
	id 1ga2a0-0004xR-GM
	for qemu-devel@nongnu.org; Thu, 20 Dec 2018 12:57:52 -0500
Received: by mail-pl1-x642.google.com with SMTP id gn14so1215365plb.10
	for <qemu-devel@nongnu.org>; Thu, 20 Dec 2018 09:57:52 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=linaro.org; s=google;
	h=subject:to:references:from:openpgp:message-id:date:user-agent
	:mime-version:in-reply-to:content-language:content-transfer-encoding;
	bh=BbuEEiR7+2CdNtLDudqv58bwrV1UD1vZQtgv6M3qrZA=;
	b=RZf4s46m38cEuzXEhxMmDx02oPOGRd2yS2NvHq/kYfjicoctc8dVeY3eVNefmXFO4a
	SCDjYeNN5ponUkubVtt9Mpw0DJofYy50enIl9Ov1tj5qAulIwUnSURnhlpdlEPDYjLgM
	7MvysJ6k4T+s6xU1orxUR+miKvnhVnVBEJUHM=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:subject:to:references:from:openpgp:message-id
	:date:user-agent:mime-version:in-reply-to:content-language
	:content-transfer-encoding;
	bh=BbuEEiR7+2CdNtLDudqv58bwrV1UD1vZQtgv6M3qrZA=;
	b=cn0YdK0PT452JgJqqEGvTIhHc2p9jfJ7tW282U/i3WwmVJ8aGvnB2yzX1I2MDX+lBj
	dAR9n/+DBt8yGw3lSSXxCJSG3ybm7IzVatzA/lfs9S1rCNWg3XFwjkMlaTq6JwaRZAWi
	AGjlNJU7ckPFJint17zeNexxXslUFR+AAndWW08SAc5MiOQsfRdPt87Z0vahyk+zd/mU
	FmDvetfPL83Z7msdNZ20ZUz+Litu/K6n1H5p8FC0oA0Eb0d96TbdKqEar5raxP9HbOuY
	dZhmpKxbfx5r7r5vFP2ZkVQ/T/WnU6CjJKh1+MKNqFuNSwIxQKNhLHz2LNrS/qaR/DxF
	oWAQ==
X-Gm-Message-State: AA+aEWY78xBIXCk+dNdjThjvNsiy8TqtRB6W3dN8lStkUT/sDiLTGPzM
	4RViEVZHS53CXfYNyEhrbOuIxw==
X-Google-Smtp-Source: AFSGD/U5GzTlTRRhQMSdIjXuF2ciURexEeQr1LXl+/E8y2PRq6ZrCTRtMeOfSFoM05xo8v6Tl3+xxg==
X-Received: by 2002:a17:902:9a04:: with SMTP id
	v4mr25520721plp.34.1545328671273; 
	Thu, 20 Dec 2018 09:57:51 -0800 (PST)
Received: from cloudburst.twiddle.net (97-126-115-157.tukw.qwest.net.
	[97.126.115.157]) by smtp.gmail.com with ESMTPSA id
	d129sm32582747pfc.31.2018.12.20.09.57.50
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Thu, 20 Dec 2018 09:57:50 -0800 (PST)
To: Mark Cave-Ayland <mark.cave-ayland@ilande.co.uk>, qemu-devel@nongnu.org,
	qemu-ppc@nongnu.org, david@gibson.dropbear.id.au
References: <20181220163123.9233-1-mark.cave-ayland@ilande.co.uk>
	<20181220163123.9233-9-mark.cave-ayland@ilande.co.uk>
From: Richard Henderson <richard.henderson@linaro.org>
Openpgp: preference=signencrypt
Message-ID: <06d2cdee-30f6-2ad7-ba56-3a0ca161fb72@linaro.org>
Date: Thu, 20 Dec 2018 09:57:48 -0800
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.1
MIME-Version: 1.0
In-Reply-To: <20181220163123.9233-9-mark.cave-ayland@ilande.co.uk>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2607:f8b0:4864:20::642
Subject: Re: [Qemu-devel] [PATCH v3 8/9] target/ppc: move FP and VMX
 registers into aligned vsr register array
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On 12/20/18 8:31 AM, Mark Cave-Ayland wrote:
> The VSX register array is a block of 64 128-bit registers where the first 32
> registers consist of the existing 64-bit FP registers extended to 128-bit
> using new VSR registers, and the last 32 registers are the VMX 128-bit
> registers as show below:
> 
>             64-bit               64-bit
>     +--------------------+--------------------+
>     |        FP0         |                    |  VSR0
>     +--------------------+--------------------+
>     |        FP1         |                    |  VSR1
>     +--------------------+--------------------+
>     |        ...         |        ...         |  ...
>     +--------------------+--------------------+
>     |        FP30        |                    |  VSR30
>     +--------------------+--------------------+
>     |        FP31        |                    |  VSR31
>     +--------------------+--------------------+
>     |                  VMX0                   |  VSR32
>     +-----------------------------------------+
>     |                  VMX1                   |  VSR33
>     +-----------------------------------------+
>     |                  ...                    |  ...
>     +-----------------------------------------+
>     |                  VMX30                  |  VSR62
>     +-----------------------------------------+
>     |                  VMX31                  |  VSR63
>     +-----------------------------------------+
> 
> In order to allow for future conversion of VSX instructions to use TCG vector
> operations, recreate the same layout using an aligned version of the existing
> vsr register array.
> 
> Since the old fpr and avr register arrays are removed, the existing callers
> must also be updated to use the correct offset in the vsr register array. This
> also includes switching the relevant VMState fields over to using subarrays
> to make sure that migration is preserved.
> 
> Signed-off-by: Mark Cave-Ayland <mark.cave-ayland@ilande.co.uk>
> Reviewed-by: Richard Henderson <richard.henderson@linaro.org>
> Acked-by: David Gibson <david@gibson.dropbear.id.au>
> ---
>  linux-user/ppc/signal.c             | 24 ++++++-------
>  target/ppc/arch_dump.c              | 12 +++----
>  target/ppc/cpu.h                    |  9 ++---
>  target/ppc/gdbstub.c                |  8 ++---
>  target/ppc/internal.h               | 18 +++-------
>  target/ppc/machine.c                | 72 ++++++++++++++++++++++++++++++++++---
>  target/ppc/monitor.c                |  4 +--
>  target/ppc/translate.c              | 14 ++++----
>  target/ppc/translate/dfp-impl.inc.c |  2 +-
>  target/ppc/translate/vmx-impl.inc.c |  7 +++-
>  target/ppc/translate/vsx-impl.inc.c |  4 +--
>  target/ppc/translate_init.inc.c     | 24 ++++++-------
>  12 files changed, 126 insertions(+), 72 deletions(-)
> 
> diff --git a/linux-user/ppc/signal.c b/linux-user/ppc/signal.c
> index 2ae120a2bc..a053dd5b84 100644
> --- a/linux-user/ppc/signal.c
> +++ b/linux-user/ppc/signal.c
> @@ -258,8 +258,8 @@ static void save_user_regs(CPUPPCState *env, struct target_mcontext *frame)
>      /* Save Altivec registers if necessary.  */
>      if (env->insns_flags & PPC_ALTIVEC) {
>          uint32_t *vrsave;
> -        for (i = 0; i < ARRAY_SIZE(env->avr); i++) {
> -            ppc_avr_t *avr = &env->avr[i];
> +        for (i = 0; i < 32; i++) {
> +            ppc_avr_t *avr = &env->vsr[32 + i];

Because of our subsequent discussion re endianness within these vectors, I
think it would be helpful add some helpers here.

static inline ppc_avr_t *cpu_avr_ptr(CPUPPCState *env, int i)
{
    return &env->vsr[32 + i];
}

>      /* Save VSX second halves */
>      if (env->insns_flags2 & PPC2_VSX) {
>          uint64_t *vsregs = (uint64_t *)&frame->mc_vregs.altivec[34];
> -        for (i = 0; i < ARRAY_SIZE(env->vsr); i++) {
> -            __put_user(env->vsr[i], &vsregs[i]);
> +        for (i = 0; i < 32; i++) {
> +            __put_user(env->vsr[i].u64[1], &vsregs[i]);

static inline uint64_t *cpu_vsrl_ptr(CPUPPCState *env, int i)
{
    return &env->vsr[i].u64[1];
}

>      /* Save floating point registers.  */
>      if (env->insns_flags & PPC_FLOAT) {
> -        for (i = 0; i < ARRAY_SIZE(env->fpr); i++) {
> -            __put_user(env->fpr[i], &frame->mc_fregs[i]);
> +        for (i = 0; i < 32; i++) {
> +            __put_user(env->vsr[i].u64[0], &frame->mc_fregs[i]);

static inline uint64_t *cpu_fpr_ptr(CPUPPCState *env, int i)
{
    return &env->vsr[i].u64[0];
}


Eventually, we will want to make these last two functions be dependent on host
endianness, so that we can remove getVSR and putVSR.  At which point VSR and
AVX registers will have the same representation.  Because at present they
don't, which IMO is, if not a bug, at least a severe mis-feature.


r~

