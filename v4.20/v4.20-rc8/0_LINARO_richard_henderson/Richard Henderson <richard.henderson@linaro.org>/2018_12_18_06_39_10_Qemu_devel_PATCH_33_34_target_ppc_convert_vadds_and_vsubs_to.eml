Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 18:07:57 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 242F55805FC
	for <like.xu@linux.intel.com>; Mon, 17 Dec 2018 22:46:59 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga005-1.jf.intel.com with ESMTP; 17 Dec 2018 22:46:59 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3ArID7NhLAT7Mrf7mBUdmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgfL//xwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QLYpUjqg8qhrUgflhi?=
 =?us-ascii?q?cZOTA382/Zjc5/jKxGrhK5pRFxwYHZbJybOfZiYKzdZsgXSXZdUstLSyBMGJ+w?=
 =?us-ascii?q?Y5cJAuEcPehYtY79p14WoBWiBAmjGOPvxSVShnDrwKY00fouEQfb0wM+BdIOq3?=
 =?us-ascii?q?PUrNPoP6oVS+C1zbXHzTXZYPNMxDjx8ojIfQ4nof6RQ71wa9HRyU4pFw7eilWQ?=
 =?us-ascii?q?qIrlMCmP1uQKqWSb6PBgVe22hmMhtgp/oSCvy98yhoXVhY8Z0E3I+Th6zYovO9?=
 =?us-ascii?q?G1Rk52bcS5HJZSry2XM4l7Ttk/T212uSs20KAKtYO7cSQQ1ZgqxxzSZvqaeIaS?=
 =?us-ascii?q?+B3jTvyeITJgiXJlZr2/gxGy/FCkyu39Tcm0zE1KojBKktnKq3ABzRvT6tKISv?=
 =?us-ascii?q?dl/0eh3yiA1xzL5+1aPUw5lrDXJ4M8zrMzjJYfr0rOEy/slEnrjqKabkAk9fKp?=
 =?us-ascii?q?6+TjbLXmvJicN4pshwHnLKsun9G/Df0lPQcQQWiU5+C82KT48k3+XbVKiOE5nb?=
 =?us-ascii?q?fCsJzdIcQbp625DBFP3ocs9hayFzOm0NUenXkaI1NJYhOHj471O17QJPD0F+uw?=
 =?us-ascii?q?g1OpkDpwwfDGObvhAprLLnjeirvheqx960FExAop0d9f/45UCq0GIP/rXk/xtd?=
 =?us-ascii?q?/YAQEjPw273ubqE9F91oIYWWKSDa6VKqLSsVmU5u0xJ+mAfpMauDH4K6tt2vj1?=
 =?us-ascii?q?kHVsmUMBZbL7mtwTaWukBbJgJEOWZ2eqhc0OVmIDvw47Reqtj0WeUDlVfDGrUq?=
 =?us-ascii?q?choz02Fo+iXrrFXZ2n1bmI3SOnGc9Pa2VbT1yBD3rsMp+JQuoBcz66JMhnnToZ?=
 =?us-ascii?q?E7+7RNg6yBusuQTmnqdhNffe4SYCtJjuh+RysvTekAx3+TFqAsC11WaLQGdp2G?=
 =?us-ascii?q?QSSGwYxqd69HZ8wVeKy6Qwo/FeGdFJ/PRPGlMgNJXcxvZ2TdD/XA7MZMyOTn6i?=
 =?us-ascii?q?Q9OvGzZ3Scg+lYxdK31hEsmv20iQlxGhBKUYwuSG?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BQAACMlxhchxHrdtBkHQEBBQEHBQGBU?=
 =?us-ascii?q?wYBCwGBMIJijHSLGoMJll6BcxMBARgUh1oiNgcNAQMBAQEBAQECARMBAQEKCwk?=
 =?us-ascii?q?IGw4jDII2BQIDGAmCXAMDAQIkGQEBBAopAQIDAQIGAQE+CggDATABBQEcGQWDH?=
 =?us-ascii?q?YIBAQScGjyKKYFsM4J2AQEFgkOEcwgSh2yDJYEcgVc/gRGCXYsVj1N+kFIHAoI?=
 =?us-ascii?q?lBI8qDBiJdYdfmUcGAgkHDyGBLA2Bek0wgy+CGwwXEohMhWBRgQeMAYF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0BQAACMlxhchxHrdtBkHQEBBQEHBQGBUwYBCwGBMIJijHS?=
 =?us-ascii?q?LGoMJll6BcxMBARgUh1oiNgcNAQMBAQEBAQECARMBAQEKCwkIGw4jDII2BQIDG?=
 =?us-ascii?q?AmCXAMDAQIkGQEBBAopAQIDAQIGAQE+CggDATABBQEcGQWDHYIBAQScGjyKKYF?=
 =?us-ascii?q?sM4J2AQEFgkOEcwgSh2yDJYEcgVc/gRGCXYsVj1N+kFIHAoIlBI8qDBiJdYdfm?=
 =?us-ascii?q?UcGAgkHDyGBLA2Bek0wgy+CGwwXEohMhWBRgQeMAYF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,367,1539673200"; 
   d="scan'208";a="44456276"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 17 Dec 2018 22:46:58 -0800
Received: from localhost ([::1]:52058 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gZ99d-0007D4-Fe
	for like.xu@linux.intel.com; Tue, 18 Dec 2018 01:46:57 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:53260)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <richard.henderson@linaro.org>) id 1gZ934-0001sJ-KN
	for qemu-devel@nongnu.org; Tue, 18 Dec 2018 01:40:19 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <richard.henderson@linaro.org>) id 1gZ92v-0002xK-1i
	for qemu-devel@nongnu.org; Tue, 18 Dec 2018 01:40:10 -0500
Received: from mail-pf1-x444.google.com ([2607:f8b0:4864:20::444]:34389)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <richard.henderson@linaro.org>)
	id 1gZ92u-0002tc-MX
	for qemu-devel@nongnu.org; Tue, 18 Dec 2018 01:40:00 -0500
Received: by mail-pf1-x444.google.com with SMTP id h3so7665511pfg.1
	for <qemu-devel@nongnu.org>; Mon, 17 Dec 2018 22:39:59 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=linaro.org; s=google;
	h=from:to:cc:subject:date:message-id:in-reply-to:references;
	bh=5IUcjCqITmxuoIPgM27ilGyi87YBj9+/Mr6P+i3IEFo=;
	b=YU5E2L8QpC7avK1PCm8kZivQAeBOfDZ+CFKHXU5VPBdt9Iwk9vREEmkoZSjRpNdZuO
	WsZxwwVNyLMpSXo4XbCOCWeMP+sQE5rmz4al6knCwxD2sKPoY4++8k3GruoE2YySEHF8
	BkkYYf4+0wOjM5Wx0Rvo4469UiAPZDtGmXlMw=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references;
	bh=5IUcjCqITmxuoIPgM27ilGyi87YBj9+/Mr6P+i3IEFo=;
	b=WkNYx3BTdca7uCrGvV2c+t+IToRj6WBPdXttbglp0eq4jO3TqwSfBbR/xqp2lQPGGs
	dlA/ocEOaiIOK0xSEiDn73H7nLhhIzJ5OgKgorgX5w8Y1znaH7D5LjAq6ozqzwrHTSqp
	sMCR5IOyjDfR0wpM5dLjTMBttbpj7wmUWrfrL1GWr4ej1QqZpoM7rEG4lGvD0ITx8VXD
	iOKDuBLLIAPgRth5gjYo10M+3/H5UWH8G7wL3sIkEy0JafN20fd2QpG/ac0Rb4+Y/IKE
	gCGUvJx06iflBUkZRCvieLc9w/y7U/kig/zbrgmKIBRHHj5yYJ/+RGobQJzoNTxvygSz
	iFfA==
X-Gm-Message-State: AA+aEWZ06KhM3i6cIxT97XmLsaD//6nDcTDGBQgKBwMXrDZVYZMaDwem
	OzpmwQNQyj5euPdwA5wGC5JdAZITnaA=
X-Google-Smtp-Source: AFSGD/U/npA8a1siBKrxmlsBKbZ6riV9MrVGKCR+1QjUjcDtKiGwcN34LpCN7aVaXBiX1r6o7KumOA==
X-Received: by 2002:a63:ee4c:: with SMTP id n12mr14335103pgk.21.1545115197874; 
	Mon, 17 Dec 2018 22:39:57 -0800 (PST)
Received: from cloudburst.twiddle.net (97-126-115-157.tukw.qwest.net.
	[97.126.115.157]) by smtp.gmail.com with ESMTPSA id
	c7sm27072509pfh.18.2018.12.17.22.39.56
	(version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
	Mon, 17 Dec 2018 22:39:57 -0800 (PST)
From: Richard Henderson <richard.henderson@linaro.org>
To: qemu-devel@nongnu.org
Date: Mon, 17 Dec 2018 22:39:10 -0800
Message-Id: <20181218063911.2112-34-richard.henderson@linaro.org>
X-Mailer: git-send-email 2.17.2
In-Reply-To: <20181218063911.2112-1-richard.henderson@linaro.org>
References: <20181218063911.2112-1-richard.henderson@linaro.org>
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2607:f8b0:4864:20::444
Subject: [Qemu-devel] [PATCH 33/34] target/ppc: convert vadd*s and vsub*s to
 vector operations
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-ppc@nongnu.org, mark.cave-ayland@ilande.co.uk,
	david@gibson.dropbear.id.au
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Signed-off-by: Richard Henderson <richard.henderson@linaro.org>
---
 target/ppc/helper.h                 | 24 ++++++------
 target/ppc/int_helper.c             | 18 ++-------
 target/ppc/translate/vmx-impl.inc.c | 57 +++++++++++++++++++++++------
 3 files changed, 61 insertions(+), 38 deletions(-)

diff --git a/target/ppc/helper.h b/target/ppc/helper.h
index 7dbb08b9dd..3daf6bf863 100644
--- a/target/ppc/helper.h
+++ b/target/ppc/helper.h
@@ -219,18 +219,18 @@ DEF_HELPER_2(vprtybq, void, avr, avr)
 DEF_HELPER_3(vsubcuw, void, avr, avr, avr)
 DEF_HELPER_2(lvsl, void, avr, tl)
 DEF_HELPER_2(lvsr, void, avr, tl)
-DEF_HELPER_4(vaddsbs, void, env, avr, avr, avr)
-DEF_HELPER_4(vaddshs, void, env, avr, avr, avr)
-DEF_HELPER_4(vaddsws, void, env, avr, avr, avr)
-DEF_HELPER_4(vsubsbs, void, env, avr, avr, avr)
-DEF_HELPER_4(vsubshs, void, env, avr, avr, avr)
-DEF_HELPER_4(vsubsws, void, env, avr, avr, avr)
-DEF_HELPER_4(vaddubs, void, env, avr, avr, avr)
-DEF_HELPER_4(vadduhs, void, env, avr, avr, avr)
-DEF_HELPER_4(vadduws, void, env, avr, avr, avr)
-DEF_HELPER_4(vsububs, void, env, avr, avr, avr)
-DEF_HELPER_4(vsubuhs, void, env, avr, avr, avr)
-DEF_HELPER_4(vsubuws, void, env, avr, avr, avr)
+DEF_HELPER_FLAGS_5(vaddsbs, TCG_CALL_NO_RWG, void, avr, avr, avr, avr, i32)
+DEF_HELPER_FLAGS_5(vaddshs, TCG_CALL_NO_RWG, void, avr, avr, avr, avr, i32)
+DEF_HELPER_FLAGS_5(vaddsws, TCG_CALL_NO_RWG, void, avr, avr, avr, avr, i32)
+DEF_HELPER_FLAGS_5(vsubsbs, TCG_CALL_NO_RWG, void, avr, avr, avr, avr, i32)
+DEF_HELPER_FLAGS_5(vsubshs, TCG_CALL_NO_RWG, void, avr, avr, avr, avr, i32)
+DEF_HELPER_FLAGS_5(vsubsws, TCG_CALL_NO_RWG, void, avr, avr, avr, avr, i32)
+DEF_HELPER_FLAGS_5(vaddubs, TCG_CALL_NO_RWG, void, avr, avr, avr, avr, i32)
+DEF_HELPER_FLAGS_5(vadduhs, TCG_CALL_NO_RWG, void, avr, avr, avr, avr, i32)
+DEF_HELPER_FLAGS_5(vadduws, TCG_CALL_NO_RWG, void, avr, avr, avr, avr, i32)
+DEF_HELPER_FLAGS_5(vsububs, TCG_CALL_NO_RWG, void, avr, avr, avr, avr, i32)
+DEF_HELPER_FLAGS_5(vsubuhs, TCG_CALL_NO_RWG, void, avr, avr, avr, avr, i32)
+DEF_HELPER_FLAGS_5(vsubuws, TCG_CALL_NO_RWG, void, avr, avr, avr, avr, i32)
 DEF_HELPER_3(vadduqm, void, avr, avr, avr)
 DEF_HELPER_4(vaddecuq, void, avr, avr, avr, avr)
 DEF_HELPER_4(vaddeuqm, void, avr, avr, avr, avr)
diff --git a/target/ppc/int_helper.c b/target/ppc/int_helper.c
index 9dbcbcd87a..22671c71e5 100644
--- a/target/ppc/int_helper.c
+++ b/target/ppc/int_helper.c
@@ -583,27 +583,17 @@ VARITHFPFMA(nmsubfp, float_muladd_negate_result | float_muladd_negate_c);
     }
 
 #define VARITHSAT_DO(name, op, optype, cvt, element)                    \
-    void helper_v##name(CPUPPCState *env, ppc_avr_t *r, ppc_avr_t *a,   \
-                        ppc_avr_t *b)                                   \
+    void helper_v##name(ppc_avr_t *r, ppc_avr_t *vscr_sat,              \
+                        ppc_avr_t *a, ppc_avr_t *b, uint32_t desc)      \
     {                                                                   \
         int sat = 0;                                                    \
         int i;                                                          \
                                                                         \
         for (i = 0; i < ARRAY_SIZE(r->element); i++) {                  \
-            switch (sizeof(r->element[0])) {                            \
-            case 1:                                                     \
-                VARITHSAT_CASE(optype, op, cvt, element);               \
-                break;                                                  \
-            case 2:                                                     \
-                VARITHSAT_CASE(optype, op, cvt, element);               \
-                break;                                                  \
-            case 4:                                                     \
-                VARITHSAT_CASE(optype, op, cvt, element);               \
-                break;                                                  \
-            }                                                           \
+            VARITHSAT_CASE(optype, op, cvt, element);                   \
         }                                                               \
         if (sat) {                                                      \
-            set_vscr_sat(env);                                          \
+            vscr_sat->u32[0] = 1;                                       \
         }                                                               \
     }
 #define VARITHSAT_SIGNED(suffix, element, optype, cvt)          \
diff --git a/target/ppc/translate/vmx-impl.inc.c b/target/ppc/translate/vmx-impl.inc.c
index 1c0c461241..c6a53a9f63 100644
--- a/target/ppc/translate/vmx-impl.inc.c
+++ b/target/ppc/translate/vmx-impl.inc.c
@@ -548,22 +548,55 @@ GEN_VXFORM(vslo, 6, 16);
 GEN_VXFORM(vsro, 6, 17);
 GEN_VXFORM(vaddcuw, 0, 6);
 GEN_VXFORM(vsubcuw, 0, 22);
-GEN_VXFORM_ENV(vaddubs, 0, 8);
+
+#define GEN_VXFORM_SAT(NAME, VECE, NORM, SAT, OPC2, OPC3)               \
+static void glue(glue(gen_, NAME), _vec)(unsigned vece, TCGv_vec t,     \
+                                         TCGv_vec sat, TCGv_vec a,      \
+                                         TCGv_vec b)                    \
+{                                                                       \
+    TCGv_vec x = tcg_temp_new_vec_matching(t);                          \
+    glue(glue(tcg_gen_, NORM), _vec)(VECE, x, a, b);                    \
+    glue(glue(tcg_gen_, SAT), _vec)(VECE, t, a, b);                     \
+    tcg_gen_cmp_vec(TCG_COND_NE, VECE, x, x, t);                        \
+    tcg_gen_or_vec(VECE, sat, sat, x);                                  \
+    tcg_temp_free_vec(x);                                               \
+}                                                                       \
+static void glue(gen_, NAME)(DisasContext *ctx)                         \
+{                                                                       \
+    static const GVecGen4 g = {                                         \
+        .fniv = glue(glue(gen_, NAME), _vec),                           \
+        .fno = glue(gen_helper_, NAME),                                 \
+        .opc = glue(glue(INDEX_op_, NORM), _vec),                       \
+        .write_aofs = true,                                             \
+        .vece = VECE,                                                   \
+    };                                                                  \
+    if (unlikely(!ctx->altivec_enabled)) {                              \
+        gen_exception(ctx, POWERPC_EXCP_VPU);                           \
+        return;                                                         \
+    }                                                                   \
+    tcg_gen_gvec_4(avr64_offset(rD(ctx->opcode), true),                 \
+                   offsetof(CPUPPCState, vscr_sat),                     \
+                   avr64_offset(rA(ctx->opcode), true),                 \
+                   avr64_offset(rB(ctx->opcode), true),                 \
+                   16, 16, &g);                                         \
+}
+
+GEN_VXFORM_SAT(vaddubs, MO_8, add, usadd, 0, 8);
 GEN_VXFORM_DUAL_EXT(vaddubs, PPC_ALTIVEC, PPC_NONE, 0,       \
                     vmul10uq, PPC_NONE, PPC2_ISA300, 0x0000F800)
-GEN_VXFORM_ENV(vadduhs, 0, 9);
+GEN_VXFORM_SAT(vadduhs, MO_16, add, usadd, 0, 9);
 GEN_VXFORM_DUAL(vadduhs, PPC_ALTIVEC, PPC_NONE, \
                 vmul10euq, PPC_NONE, PPC2_ISA300)
-GEN_VXFORM_ENV(vadduws, 0, 10);
-GEN_VXFORM_ENV(vaddsbs, 0, 12);
-GEN_VXFORM_ENV(vaddshs, 0, 13);
-GEN_VXFORM_ENV(vaddsws, 0, 14);
-GEN_VXFORM_ENV(vsububs, 0, 24);
-GEN_VXFORM_ENV(vsubuhs, 0, 25);
-GEN_VXFORM_ENV(vsubuws, 0, 26);
-GEN_VXFORM_ENV(vsubsbs, 0, 28);
-GEN_VXFORM_ENV(vsubshs, 0, 29);
-GEN_VXFORM_ENV(vsubsws, 0, 30);
+GEN_VXFORM_SAT(vadduws, MO_32, add, usadd, 0, 10);
+GEN_VXFORM_SAT(vaddsbs, MO_8, add, ssadd, 0, 12);
+GEN_VXFORM_SAT(vaddshs, MO_16, add, ssadd, 0, 13);
+GEN_VXFORM_SAT(vaddsws, MO_32, add, ssadd, 0, 14);
+GEN_VXFORM_SAT(vsububs, MO_8, sub, ussub, 0, 24);
+GEN_VXFORM_SAT(vsubuhs, MO_16, sub, ussub, 0, 25);
+GEN_VXFORM_SAT(vsubuws, MO_32, sub, ussub, 0, 26);
+GEN_VXFORM_SAT(vsubsbs, MO_8, sub, sssub, 0, 28);
+GEN_VXFORM_SAT(vsubshs, MO_16, sub, sssub, 0, 29);
+GEN_VXFORM_SAT(vsubsws, MO_32, sub, sssub, 0, 30);
 GEN_VXFORM(vadduqm, 0, 4);
 GEN_VXFORM(vaddcuq, 0, 5);
 GEN_VXFORM3(vaddeuqm, 30, 0);
-- 
2.17.2


