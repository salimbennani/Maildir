Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 21:10:19 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id EB43258055F;
	Tue, 18 Dec 2018 03:51:45 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga005-1.jf.intel.com with ESMTP; 18 Dec 2018 03:51:45 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A21l43BPX3KHyRQHrHN8l6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPj+psbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRshfWSxfDI2h?=
 =?us-ascii?q?bIUPAeUOMvpFoIb/qVQOtgO+CAu3CePz1jNFnGP60bEg3ug/FwzNwQwuH8gJsH?=
 =?us-ascii?q?TRtNj7MKASUeCvw6nO0D7NbfRW2Sn66IjMbx8qvPaBXbB3ccrR00YvERjIjlaO?=
 =?us-ascii?q?poz/OTOayOANv3Kc7+p6WuKikmgqoBxyrDi33soglJXFi4YPxlzZ+yh13pw5Kc?=
 =?us-ascii?q?C7RUJne9KpEZlduzmZOoZ2WM8uXW9ltDogxrEbvZO3YDIGxIk6yxPebfGMbpKG?=
 =?us-ascii?q?7Qj5VOmLJDd1nHJld6y7hxa16UWg1OL8Wdeu0FpQrSpKjMPMtnYT2BzX8MSHTe?=
 =?us-ascii?q?F9/ki51TaO0QDc9P1ELFgqmabHL5Mt2KM8m5QNvUjZAyP7m1n6gLWXe0gm4uSo?=
 =?us-ascii?q?7v7oYrTipp+SLY90jQT+P7wqmsy+B+Q4LwcPU3GY+euizr3j+1P2QLFTgv0xnK?=
 =?us-ascii?q?jZto7VJd4Aq66nDA9azJwj5wy8Dzi4ytQYm2cILFZfdBKAlYjpNEnCIOrkAven?=
 =?us-ascii?q?n1SsjDBryujCPr3gAZXCMGLPkbj8fbtm705cyQwzzc1Q5p5OC7EBJu7zVVH1tN?=
 =?us-ascii?q?DCEhA5NAm0yf79CNphzoMeRX6PAqiBPaPSq1CI5/4vLPOLZIMPuDb9NuIq5/jh?=
 =?us-ascii?q?jXIinV8dfK+p3YYYaXyiH/RmJVmZbmTogtsbDWgKuQ8+RvTwiFKeST5Te2qyX6?=
 =?us-ascii?q?Uk6zE5D4KpE53PRoOqgLyH2ie7GYZbZmRHClCKDHfpeJ+IW/YKaCKOPMBhliYI?=
 =?us-ascii?q?WqSmS48kzRuurhP1y6J7LurI/S0VrYjs1MN15+3UlhE+7yZ0AN6f02yWS2F0n2?=
 =?us-ascii?q?UIRyI53axloEx9zEuD3rZ8g/BCCdNT4PZJWB8gNZHA1+x6F8zyWgXZc9eKUlmm?=
 =?us-ascii?q?RM+qATUwTt0rxd8ObF1wG9GjjhDFwiqrDKUZl72NBJwo7K3c22L9KNp6y3bDzK?=
 =?us-ascii?q?MhlUUpQtNTNW26ga5y7xXcCJTXk0qHjaqqdb4T3CjW9Gidy2qCu0VYUA11UaXB?=
 =?us-ascii?q?Rn0fYkrWrdLk5kLNVbOuCLInMhdfxs6GMKdFdtrpjVBeTvf5JNvee36xm3u3BR?=
 =?us-ascii?q?uQ27yDdpTqdHsH0CXdEkcElRsT8miANQUlAiehomTeDCFhFF71YkPs9/V+p22/?=
 =?us-ascii?q?TkMu0w6KaEhh3aKv+hEJnfycV+8T3rUctSc9qjV0GVG9387WC9uAvQZhYL9QYd?=
 =?us-ascii?q?Qn4FdD1GLZsQN9M4ekL6BjgF4ebgt2s1nv1xVxFoVPj8wqoGk2wwp1LKKSyElB?=
 =?us-ascii?q?eC+A3ZDsJr3XLXH/8wqra6HI1VDRztaX9r0U5/QltlrspgepFkkl83V5yNRV13?=
 =?us-ascii?q?qc5pPXDAsdS57xU0A39wRkqLHeeCUy+4TU1Xh0O6murjDCw84pBPciyhu4f9Zf?=
 =?us-ascii?q?LbmIGxPoH8wbB8ihMuoqm1eyYxIAPeBS8rM0Psy8e/uH3q6rIPhvnDa8gWtb54?=
 =?us-ascii?q?B911qG9zBgRe7Qw5YF3/aY0xOdVzf9kFiuqNr3lp1DZT0IGGqw1zLkBI9IaqJu?=
 =?us-ascii?q?Z4kLDXqhLNOtxtV5gZ7gQHpY9F+lB1Mb186lYxuSb1rh3QJO0UQbu2ComSy9zz?=
 =?us-ascii?q?ZsiTEmsrKf3DDSw+TlbBcGOm9LSHNijFv2Ooi0ktYaUVOsbwgokhul+En7y7Ja?=
 =?us-ascii?q?pKR5M2ncX0NIczLqIGFlV6u6rqCCbNJX6JM0rSVXV/yxYVKARb7noBsa0CTjE3?=
 =?us-ascii?q?FFxD8hdDGquZT5nxpkh2KbN3tzqHvZecdtxRbQ/tDcRPhR3iYYSyl8kzXYGl+8?=
 =?us-ascii?q?P9yx99WOi5jDqvy+V36mVpBLcSjk14SAuDG55W1rBx2yhPSzmtzhEQgn3i73zd?=
 =?us-ascii?q?hqVSPUrBniZonnzbi1MeVifkNwHl/z99J6Gp1ikos3nJwQ2mIVhpSP8XoHjGf8?=
 =?us-ascii?q?K9Nb2a3lYXoJRD4LxcPV4Qf/1E1iKHKJ25z2VnGHzsR9YNm6Z3sc2jgh4MBSFK?=
 =?us-ascii?q?eU8LtEkDNwolq5rgLee+JxnzkDxvs19H4VnfsJtxEzwSWHDbAfBk1YPS3qlxSV?=
 =?us-ascii?q?4NGytqRXZGCzcbeu0Epyh8yuDLaHogtEQnb2Zo8iHTNs7sV4KF/MzHrz6oT+dN?=
 =?us-ascii?q?jRd90TsACUkwzbj+hUM58xkvsKhSx6OWPyp3Elyug7jQBw0pG+poSIN2Jt/Keh?=
 =?us-ascii?q?CB5CKjL1f98T+i3qjatGhcmZxYevHpF8GjkRWJvoUOmlEDYTtfThKgaPHycwqn?=
 =?us-ascii?q?adGbrDAwCf7F1qoG7IE5CuL3uXPmUWzc1+RBmBI0xSmAIUUy8/npEnDQCm3tDh?=
 =?us-ascii?q?fF165jAM5V74tx1MxfhzNxTkVmffpQGoaio7SZSFLRpW6B1C6FnRMcCE8u1zGC?=
 =?us-ascii?q?RY9IW7rAORMmybexhIDWYRV02EAFDjI6Cu5cTa/OieHOa+NPzOYbOBqeFFU/eI?=
 =?us-ascii?q?xJSv0pZp/jqWN8WPOGViAOM/2kZZQX95HMHZkS0VSyMLjyLNc9KbpBCk9y13sM?=
 =?us-ascii?q?+/8ffrWAHu5YeVCLtSK9Jv+x+ojqeZKu6Qnz10KTJZ1pMK2H/Jx6IT3F8UiyFy?=
 =?us-ascii?q?aTatFa4MujLKTKLVgqVXFQIUaztvNMtU6KIxxhNCOdPAhdPvyLF5juQ5C1NEVV?=
 =?us-ascii?q?H6nsGpZMoKI3yyNV/dBUaLMqiGKiPPw83tfay8TrhQhv1OtxKsoTabD1PjPjOb?=
 =?us-ascii?q?mjn1VhCvNPtAgz2BMBNCuIGybBBtBHPnTNLnbB27LdB2gSc3wb0ymnPFK2ocPS?=
 =?us-ascii?q?JgfENKq72a9TlYjelnG2xd8nplKvGJmiaD4OneL5YWsP1rDTx1luJa+ns6zbRV?=
 =?us-ascii?q?4TpARPx0nivSs9Fvr0unkumJ1jpoTh5OpixXi4KMuEUxcZneo79BQnbN8Fou5G?=
 =?us-ascii?q?CcAg5C891kEd3mt6NZz9TGjor8LT5D95Tf+s5KVObOL8fSEn0hOByhODnKCw8J?=
 =?us-ascii?q?BWqpMmHWgWReneuU+3nTqYI1/Mu/0KESQ6NWAQRmXsgRDV5oSZlbeM96?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A4AAA43hhch0O0hNFkGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBVAMBAQELAQGBWYIRJ4x0ixqCDRSJAY5ZgV8TAQEYEwGHXyI3Bg0BAwE?=
 =?us-ascii?q?BAQEBAQIBEwEBAQoLCQgpIwxCAQ4BBgGBXSQBgmEBAQEBAgEBAiQTBgE4AQMBA?=
 =?us-ascii?q?QkBAQUFGAkTEgMMBQ0TAQUBASETBYJSS4FpAw0IBAGbeDyMFTOCdwWFFQ2CFQI?=
 =?us-ascii?q?GEosRgRwXgX+BEYMSgleCE4V2Aok8CodbhG2KZjAJgimMBoMlJApWfYUfgno3h?=
 =?us-ascii?q?XyBLo9NiX8CBAIEBQIFDyGBO4F4MxoIKAiDJ4IbDBcSgziKVD8ygQQBAQGBUIc?=
 =?us-ascii?q?LhRgBAQ?=
X-IPAS-Result: =?us-ascii?q?A0A4AAA43hhch0O0hNFkGwEBAQEDAQEBBwMBAQGBVAMBAQE?=
 =?us-ascii?q?LAQGBWYIRJ4x0ixqCDRSJAY5ZgV8TAQEYEwGHXyI3Bg0BAwEBAQEBAQIBEwEBA?=
 =?us-ascii?q?QoLCQgpIwxCAQ4BBgGBXSQBgmEBAQEBAgEBAiQTBgE4AQMBAQkBAQUFGAkTEgM?=
 =?us-ascii?q?MBQ0TAQUBASETBYJSS4FpAw0IBAGbeDyMFTOCdwWFFQ2CFQIGEosRgRwXgX+BE?=
 =?us-ascii?q?YMSgleCE4V2Aok8CodbhG2KZjAJgimMBoMlJApWfYUfgno3hXyBLo9NiX8CBAI?=
 =?us-ascii?q?EBQIFDyGBO4F4MxoIKAiDJ4IbDBcSgziKVD8ygQQBAQGBUIcLhRgBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,367,1539673200"; 
   d="scan'208";a="57927493"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 18 Dec 2018 03:51:00 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726610AbeLRLu6 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 18 Dec 2018 06:50:58 -0500
Received: from mail-lj1-f193.google.com ([209.85.208.193]:40968 "EHLO
        mail-lj1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726421AbeLRLu5 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 18 Dec 2018 06:50:57 -0500
Received: by mail-lj1-f193.google.com with SMTP id k15-v6so13929409ljc.8
        for <linux-kernel@vger.kernel.org>; Tue, 18 Dec 2018 03:50:55 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=sender:date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=8Awg+7zbzPKI/G6OgGkKHeXqJugO2brKL/TL5CGifPg=;
        b=sKRaKByHdPKPsV9Ng2mQkY39Ck/ruWIyt8KAQo6fVgrYhpxas5EXeuSQvNrRqP0PN8
         nIhchzJstnt9g+SjjtpkT7LsUQCmqLABU2r690xoDek949yA04dDSEcwqV/TiV5Ay1Mr
         W0UUjWJbsAF306pptEcqwuZB8bkbn5h4CaXyUxuieJ7adqEqYjv2IHU02okTLb4c52vw
         oPM/bvxjf2GlLzr8uOwGGGq4TJNshIG7PDKt1AWMRMWR84gsViUTkcF+ekR/tA7abtvu
         B5w1D11deJprhDIHEc9TbhwRyZI47QHF1H+BRVhsCxHr5YqNUJGUxyhgu70SggjhQkeq
         nl+Q==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:sender:date:from:to:cc:subject:message-id
         :references:mime-version:content-disposition:in-reply-to:user-agent;
        bh=8Awg+7zbzPKI/G6OgGkKHeXqJugO2brKL/TL5CGifPg=;
        b=r4UeoM+NDPSbajXOjv7+UDGClmB22VX7eu88Xm1RHYfwmn/s2SeelZw2lDT0IUnz3r
         LR+/mvhs4PM+gU6TIgrIZMMXmjy2nCKSDjGEaYE8rlCQbsL25GddAeYkTPhNN4iTdXz2
         nPmVNyMZAIkkd+RGc2YuhJ7pcl1m5msiPWm60uU3zu58afpzElHg5T2tNJtCtod9Pke2
         v9n6sG+uQc+/NtXxIotKhNm7O7ln7lDdPlZEHSJWip3+mxzfDJyhSSajATePhg9tJUsR
         aGodXlSZ9F2tkp/IqISnkUTuQG0Rvbfbgs/HceW7WIbDcC6gr170qMInBkE/utsNHdoO
         ppKQ==
X-Gm-Message-State: AA+aEWboCads8lKWTFIb47bui4qZPHk8dKXwDoJi2oyYGjcRWifUf3Lt
        y7IeCFemGLMCgFa2DaM50Es=
X-Google-Smtp-Source: AFSGD/UFfPX5cyW88UbZ9s9QT6PnURQv5cxm/zj+HfhduicJT3XbsySQvaQLuSWpBzrhl7yyH4W5Tw==
X-Received: by 2002:a2e:6a13:: with SMTP id f19-v6mr10881878ljc.41.1545133854478;
        Tue, 18 Dec 2018 03:50:54 -0800 (PST)
Received: from xi.terra (c-74bee655.07-184-6d6c6d4.bbcust.telenor.se. [85.230.190.116])
        by smtp.gmail.com with ESMTPSA id q21-v6sm2953196ljc.5.2018.12.18.03.50.53
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 18 Dec 2018 03:50:53 -0800 (PST)
Received: from johan by xi.terra with local (Exim 4.91)
        (envelope-from <johan@kernel.org>)
        id 1gZDto-0005FG-QV; Tue, 18 Dec 2018 12:50:56 +0100
Date: Tue, 18 Dec 2018 12:50:56 +0100
From: Johan Hovold <johan@kernel.org>
To: Nishad Kamdar <nishadkamdar@gmail.com>
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Johan Hovold <johan@kernel.org>, Alex Elder <elder@kernel.org>,
        Rui Miguel Silva <rmfrfs@gmail.com>,
        greybus-dev@lists.linaro.org, devel@driverdev.osuosl.org,
        linux-kernel@vger.kernel.org
Subject: Re: [PATCH v3 3/3] staging: greybus: arche-platform: Switch to the
 gpio descriptor interface
Message-ID: <20181218115056.GO20658@localhost>
References: <cover.1542898267.git.nishadkamdar@gmail.com>
 <2200db633d8e723b881ef355527afaef0d5ccf24.1542898267.git.nishadkamdar@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <2200db633d8e723b881ef355527afaef0d5ccf24.1542898267.git.nishadkamdar@gmail.com>
User-Agent: Mutt/1.11.1 (2018-12-01)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, Nov 22, 2018 at 10:39:24PM +0530, Nishad Kamdar wrote:
> Use the gpiod interface instead of the deprecated
> old non-descriptor interface.
> 
> Signed-off-by: Nishad Kamdar <nishadkamdar@gmail.com>
> ---
> Changes in v2:
>  - Move comment to the same line as to what it applies to.
> ---
>  drivers/staging/greybus/arche-platform.c | 119 ++++++++---------------
>  1 file changed, 41 insertions(+), 78 deletions(-)
> 
> diff --git a/drivers/staging/greybus/arche-platform.c b/drivers/staging/greybus/arche-platform.c
> index 4c36e88766e7..a5cea79d8e32 100644
> --- a/drivers/staging/greybus/arche-platform.c
> +++ b/drivers/staging/greybus/arche-platform.c
> @@ -8,10 +8,9 @@
>  
>  #include <linux/clk.h>
>  #include <linux/delay.h>
> -#include <linux/gpio.h>
> +#include <linux/gpio/consumer.h>
>  #include <linux/init.h>
>  #include <linux/module.h>
> -#include <linux/of_gpio.h>
>  #include <linux/of_platform.h>
>  #include <linux/pinctrl/consumer.h>
>  #include <linux/platform_device.h>
> @@ -45,14 +44,14 @@ enum svc_wakedetect_state {
>  
>  struct arche_platform_drvdata {
>  	/* Control GPIO signals to and from AP <=> SVC */
> -	int svc_reset_gpio;
> +	struct gpio_desc *svc_reset;
> +	struct gpio_desc *svc_sysboot;

Why move sysboot? The flag below is about reset (but should eventually
go away).

>  	bool is_reset_act_hi;
> -	int svc_sysboot_gpio;
> -	int wake_detect_gpio; /* bi-dir,maps to WAKE_MOD & WAKE_FRAME signals */
> +	struct gpio_desc *wake_detect; /* bi-dir,maps to WAKE_MOD & WAKE_FRAME signals */
>  
>  	enum arche_platform_state state;
>  
> -	int svc_refclk_req;
> +	struct gpio_desc *svc_refclk_req;
>  	struct clk *svc_ref_clk;
>  
>  	struct pinctrl *pinctrl;
> @@ -85,9 +84,9 @@ static void arche_platform_set_wake_detect_state(
>  	arche_pdata->wake_detect_state = state;
>  }
>  
> -static inline void svc_reset_onoff(unsigned int gpio, bool onoff)
> +static inline void svc_reset_onoff(struct gpio_desc *gpio, bool onoff)
>  {
> -	gpio_set_value(gpio, onoff);
> +	gpiod_set_value(gpio, onoff);
>  }
>  
>  static int apb_cold_boot(struct device *dev, void *data)
> @@ -116,7 +115,6 @@ static int apb_poweroff(struct device *dev, void *data)
>  static void arche_platform_wd_irq_en(struct arche_platform_drvdata *arche_pdata)
>  {
>  	/* Enable interrupt here, to read event back from SVC */
> -	gpio_direction_input(arche_pdata->wake_detect_gpio);
>  	enable_irq(arche_pdata->wake_detect_irq);
>  }
>  
> @@ -160,7 +158,7 @@ static irqreturn_t arche_platform_wd_irq(int irq, void *devid)
>  
>  	spin_lock_irqsave(&arche_pdata->wake_lock, flags);
>  
> -	if (gpio_get_value(arche_pdata->wake_detect_gpio)) {
> +	if (gpiod_get_value(arche_pdata->wake_detect)) {
>  		/* wake/detect rising */
>  
>  		/*
> @@ -224,10 +222,10 @@ arche_platform_coldboot_seq(struct arche_platform_drvdata *arche_pdata)
>  
>  	dev_info(arche_pdata->dev, "Booting from cold boot state\n");
>  
> -	svc_reset_onoff(arche_pdata->svc_reset_gpio,
> +	svc_reset_onoff(arche_pdata->svc_reset,

No need to break line here.

>  			arche_pdata->is_reset_act_hi);
>  
> -	gpio_set_value(arche_pdata->svc_sysboot_gpio, 0);
> +	gpiod_set_value(arche_pdata->svc_sysboot, 0);
>  	usleep_range(100, 200);
>  
>  	ret = clk_prepare_enable(arche_pdata->svc_ref_clk);
> @@ -238,7 +236,7 @@ arche_platform_coldboot_seq(struct arche_platform_drvdata *arche_pdata)
>  	}
>  
>  	/* bring SVC out of reset */
> -	svc_reset_onoff(arche_pdata->svc_reset_gpio,
> +	svc_reset_onoff(arche_pdata->svc_reset,

Same here. Please check throughout.

>  			!arche_pdata->is_reset_act_hi);
>  
>  	arche_platform_set_state(arche_pdata, ARCHE_PLATFORM_STATE_ACTIVE);
> @@ -259,10 +257,10 @@ arche_platform_fw_flashing_seq(struct arche_platform_drvdata *arche_pdata)
>  
>  	dev_info(arche_pdata->dev, "Switching to FW flashing state\n");
>  
> -	svc_reset_onoff(arche_pdata->svc_reset_gpio,
> +	svc_reset_onoff(arche_pdata->svc_reset,
>  			arche_pdata->is_reset_act_hi);
>  
> -	gpio_set_value(arche_pdata->svc_sysboot_gpio, 1);
> +	gpiod_set_value(arche_pdata->svc_sysboot, 1);
>  
>  	usleep_range(100, 200);
>  
> @@ -273,7 +271,7 @@ arche_platform_fw_flashing_seq(struct arche_platform_drvdata *arche_pdata)
>  		return ret;
>  	}
>  
> -	svc_reset_onoff(arche_pdata->svc_reset_gpio,
> +	svc_reset_onoff(arche_pdata->svc_reset,
>  			!arche_pdata->is_reset_act_hi);
>  
>  	arche_platform_set_state(arche_pdata, ARCHE_PLATFORM_STATE_FW_FLASHING);
> @@ -305,7 +303,7 @@ arche_platform_poweroff_seq(struct arche_platform_drvdata *arche_pdata)
>  	clk_disable_unprepare(arche_pdata->svc_ref_clk);
>  
>  	/* As part of exit, put APB back in reset state */
> -	svc_reset_onoff(arche_pdata->svc_reset_gpio,
> +	svc_reset_onoff(arche_pdata->svc_reset,
>  			arche_pdata->is_reset_act_hi);
>  
>  	arche_platform_set_state(arche_pdata, ARCHE_PLATFORM_STATE_OFF);
> @@ -435,6 +433,7 @@ static int arche_platform_probe(struct platform_device *pdev)
>  	struct device *dev = &pdev->dev;
>  	struct device_node *np = dev->of_node;
>  	int ret;
> +	unsigned int flags;
>  
>  	arche_pdata = devm_kzalloc(&pdev->dev, sizeof(*arche_pdata),
>  				   GFP_KERNEL);
> @@ -444,61 +443,33 @@ static int arche_platform_probe(struct platform_device *pdev)
>  	/* setup svc reset gpio */
>  	arche_pdata->is_reset_act_hi = of_property_read_bool(np,
>  							     "svc,reset-active-high");

This should also go away eventually in favour of gpio flags in
devicetree. Fine to keep for now, though.

> -	arche_pdata->svc_reset_gpio = of_get_named_gpio(np,
> -							"svc,reset-gpio",
> -							0);
> -	if (!gpio_is_valid(arche_pdata->svc_reset_gpio)) {
> -		dev_err(dev, "failed to get reset-gpio\n");
> -		return arche_pdata->svc_reset_gpio;
> -	}
> -	ret = devm_gpio_request(dev, arche_pdata->svc_reset_gpio, "svc-reset");
> -	if (ret) {
> -		dev_err(dev, "failed to request svc-reset gpio:%d\n", ret);
> -		return ret;
> -	}
> -	ret = gpio_direction_output(arche_pdata->svc_reset_gpio,
> -				    arche_pdata->is_reset_act_hi);
> -	if (ret) {
> -		dev_err(dev, "failed to set svc-reset gpio dir:%d\n", ret);
> +	if (arche_pdata->is_reset_act_hi)
> +		flags = GPIOD_OUT_HIGH;
> +	else
> +		flags = GPIOD_OUT_LOW;
> +
> +	arche_pdata->svc_reset = devm_gpiod_get(dev, "svc,reset-gpio", flags);
> +	if (IS_ERR(arche_pdata->svc_reset)) {
> +		ret = PTR_ERR(arche_pdata->svc_reset);
> +		dev_err(dev, "failed to request svc-reset GPIO:%d\n", ret);
>  		return ret;
>  	}

Thanks,
Johan
