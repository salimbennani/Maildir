Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:47:44 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 368915805F0;
	Fri, 21 Dec 2018 00:58:44 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 21 Dec 2018 00:58:44 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AftAgGhPISmtvE+zelbgl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPj7psbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRsleVyJDDY28?=
 =?us-ascii?q?YYUBDPcPM/hEoInmv1sDrwCzBRWwCO711jNEmmP60K883u88EQ/GxgsgH9cWvX?=
 =?us-ascii?q?jasNv6LqkSXvqrw6nM0D7Na+la0ir954nIaRAhpu2DXbFxccbf1EIiEBnFgU+e?=
 =?us-ascii?q?qYP/ITyV0v8As2uF4Op6U+KglWonpxt2oji1ycchk4/EjZ8WxFDc7Sh13po5KN?=
 =?us-ascii?q?miREJmb9OoDoFcuzyZOodqWM8vQmNltD4kxrEavZO3ZisHxZQ9yxLBdvCLb5KE?=
 =?us-ascii?q?7xPiWeuXPDx2nmhqeKiliBa36UWgyvPzVs2z0FtSsCpFncfDtmoX2xzQ9MeHUP?=
 =?us-ascii?q?198Vml2TqV0ADT8O5ELVg1lardNZEh3qY9moQPvUnHBCP6hUv7gLGMekk5+eWk?=
 =?us-ascii?q?9/7rb7Tkq5OEMo97kAD+MqAgmsylBuQ4NxADX2ya+eS6yb3i8lT1QLZUgf0slK?=
 =?us-ascii?q?nWrpTaKd0cpq+3BQ9azJwj5g2hDzepztsYh2MLLFFbdxKdiYjmJVXOLOr/Dfel?=
 =?us-ascii?q?jFSgiC1ryOzePr39HpXNKWDOkLPgfbZ+9UFQ0gUyzc1E6pJQC7EBJu/zW0DruN?=
 =?us-ascii?q?zZCB85LxK7w+L9BNph0YMeXHqFArWFP6PKrV+I+uUvLvGMZIAPuTb9N+Iq5/n0?=
 =?us-ascii?q?gX85hF8SZ6+p3ZQMZXC8H/RmJViZYHX2jtcAF2cKohQxTOjwhFKeVj5TYm64X7?=
 =?us-ascii?q?gg6TEjFIKmEYDDS5i3j7ya3Ce7GZ5WanpcCl+WE3flbIGEW/YKaCKPLc5tiD0E?=
 =?us-ascii?q?Vb69S4A/0RGirhP1y71iLuDM4C0XqYrj1MRp5+3UjRwy9iZ7D8KH32GJTmF7hG?=
 =?us-ascii?q?UIRzAt0aB7oEx9zEqD0Kdij/xZE9xT++1GUgMgOZHAyOx6Dsj4WhjdcdeRVFam?=
 =?us-ascii?q?XtKmDCksQd0r3d8BfVxxG9W4gRDFxCqlHbkVm7uPBJw396Lc22P8J8J8y3bAya?=
 =?us-ascii?q?kggEMqQspJNW26mKF/8xLfCJLOk0Wcj6yqb7gT3DbR9GefymqDpFxXXxRuUarb?=
 =?us-ascii?q?R3wfZlHZrdLi5kzcSb+jErAnMgpHyc6fJapGcNzpjVNaRPj9PNTSeX6+m2C1BR?=
 =?us-ascii?q?yQ3LODcJLqe3kB3CXaEEUEjwET/XOBNQgiBiego3jSDCB0GVLoeUPs9eh+qHW0?=
 =?us-ascii?q?TkIvywGKbkth16e6+xIPhPycTe8T0awAuCs7tzp0G1O91crMC9WcvwphYLlcYd?=
 =?us-ascii?q?Ql7Vhd0WLWqQN8MYKgLqx4nVEebhl4sFno1xV0DYVAj9MnrHcrzAp0NKKZ30lN?=
 =?us-ascii?q?dzKe3ZDsJLLXLnP+8wyoa67TwlveysqZ+r8T6PQkrFXupAGoFlc4/3p7ydVU0n?=
 =?us-ascii?q?uc6Y/MDAodSp/xVkc39x5np7DVeCU95oXU1WFyPqmwqDPNx9UpBO49wBa6Y9hf?=
 =?us-ascii?q?KL+EFBP1E8ACHciuKfAllEKzbh0ZO+Be7qg0MN28d/uHwaKkIPxvnDa7gmtZ+o?=
 =?us-ascii?q?B91USM+jF4Su7J2ZYF3v6Z0hGGVzf6kFeurMT3lZpYajEVG2q10TLkC5JJZq1u?=
 =?us-ascii?q?YYYLDn+jIs22xtlkh5/hQWVY9EOlB14d3M+peBySb0Hy3AFK1EQXp2CnljW8zz?=
 =?us-ascii?q?Bujz4pqa+f1jTUw+v+bBoHJnJLRG56gFfuO4e0ldMaXEuvbwQzjxuq/0X6x6ta?=
 =?us-ascii?q?pKR5MWbTR1xFfyz3L2FkT6uxuaCOY89J6JM0rypXVP6wbkydSr74uxEayT/sH3?=
 =?us-ascii?q?NCxDAncDGnopX4kAZ9iG6HLnZzrXzZdNp0xRfe4tzcWPFQ0iAHRCl+lTnYGFy8?=
 =?us-ascii?q?M8O18tWTkpfJqvq+WH65Vp1PbSnrypuNtCih6m1rGxG/n+2zlcfhEQg1yiL709?=
 =?us-ascii?q?hqVSPVrBfzeIXr1qK6Mf55cUlsHlPz9816GoRmmIsqmJ4QwWQahomS/XcflGfz?=
 =?us-ascii?q?MNZb1rjkYHsDWzEL2MLV7xb/2EJ4MH2J3Y35W26ZwstgYdm6f2wX1jg878BMFK?=
 =?us-ascii?q?eb8rhEkTFprVq/qALbeeJ9kSsFyfsy9H4ahPkEuBYqziWYGLwTHFNXPSrxlxST?=
 =?us-ascii?q?9NC+rb5aZGKucbi2yUp/ksqtDLCEogFARnn5fo0uEjN37sV6KFjMymH86pn4eN?=
 =?us-ascii?q?nMatIergabnA3Hj+hRNZI9jP4KhTd8NGL5vH0lzfM7jBN00ZG7uoiHN3ti/Kaj?=
 =?us-ascii?q?DhFEMT31YtsZ+ivxgqZGgsaWw4evE41jGjoRWZvnU+moHCgOtfj9NAaODT48qm?=
 =?us-ascii?q?qdGbXFBg+S80Nmr3PJE5C2OHCbPngZzdN+RBaDIExTmhwbXDI/npQhDACl2NTh?=
 =?us-ascii?q?cFtl5jAW/lP5qhxMyv9xNxniSGjfoh2kaiwzSJiZIxpb9QVC50bTMcyD4eN/BS?=
 =?us-ascii?q?BY/pu9rAOTLmyXfRhHDWYMWkacHVDsIqGu5cXc8+ifHue+L+XBYbSNqexdVveE?=
 =?us-ascii?q?35Gv0pFh/zaDKMqPJGRiD+Yg10pHXHB5HdnZmjoVRywWkSLNc9CUpBOm9iJrqc?=
 =?us-ascii?q?C/9ezhWBjz6ouXF7tSLdJv9gisjqeeLOGQnjh2KDZC2pMIxH/F07wf3F8UiyFz?=
 =?us-ascii?q?eDihC7UAtSjRTK3Onq9bFQIUayR2NMFQ9aIzwhFNOdLHitPyzrN4kv81C1JfWV?=
 =?us-ascii?q?P9gM2mecwKLH+7NF7cAEaLNbKGJSDEws3tYKO8T6FQg/tQtxGqpTmbFErjNCyZ?=
 =?us-ascii?q?lzb1TxCvLf1MjCaDMR1eoo69dBNtCWnlTN3+axy7MMV4jTs5wbAvgnPKNGgcMS?=
 =?us-ascii?q?Vzck9Xr72Q6z9Yjet7G2Bb8nVlKuyEyG6l6LzlLphekfJtGT9zkaoO/XA0jbtc?=
 =?us-ascii?q?6jpfQ/pdnCrUp8Rp5Va8nb/c5CBgVU8EkD9FjY+P9WckcZrI7Z5LWneOtEYX5G?=
 =?us-ascii?q?uZBhAipNZ/DNDr/adKxY6cx+rIND5e/oeMroMnDM/OJZfCaSJ5PA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AMAQADqhxch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBZYNsJ4N9lBWCDRSZPi0TAYcuIjgSAQMBAQEBAQECARMBAQEIDQkIKS+COik?=
 =?us-ascii?q?BgmYBAQEBAwECIARSBgkBAQoLCgMCAiYCAgMfEgEFARwGEwWDHYICBZpqPIsZf?=
 =?us-ascii?q?DOKNhJ5izQRBoF/gRGDEoRlgySCVwKLQopdix8HAgKRZBiRX5oEMIE8gXd9CGw?=
 =?us-ascii?q?GgjWCJxcSjgw+M4EFAQGLSymCJAEB?=
X-IPAS-Result: =?us-ascii?q?A0AMAQADqhxch0O0hNFkHAEBAQQBAQcEAQGBZYNsJ4N9lBW?=
 =?us-ascii?q?CDRSZPi0TAYcuIjgSAQMBAQEBAQECARMBAQEIDQkIKS+COikBgmYBAQEBAwECI?=
 =?us-ascii?q?ARSBgkBAQoLCgMCAiYCAgMfEgEFARwGEwWDHYICBZpqPIsZfDOKNhJ5izQRBoF?=
 =?us-ascii?q?/gRGDEoRlgySCVwKLQopdix8HAgKRZBiRX5oEMIE8gXd9CGwGgjWCJxcSjgw+M?=
 =?us-ascii?q?4EFAQGLSymCJAEB?=
X-IronPort-AV: E=Sophos;i="5.56,380,1539673200"; 
   d="scan'208";a="56092914"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 21 Dec 2018 00:58:42 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1733203AbeLUI6c (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Fri, 21 Dec 2018 03:58:32 -0500
Received: from mail-ot1-f66.google.com ([209.85.210.66]:44821 "EHLO
        mail-ot1-f66.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725838AbeLUI6b (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 21 Dec 2018 03:58:31 -0500
Received: by mail-ot1-f66.google.com with SMTP id f18so4458136otl.11;
        Fri, 21 Dec 2018 00:58:30 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=hxp37XsPBprIwPTDNqXiT9gyPfRsLk1dntwC8kVxdZw=;
        b=Dc4z9LMcThKvx9wkXkYATL7aCUgICOwcIoFLtZoP4si3B5HCtxoMtBj3GiU8vFjisr
         HWhifUtjbW+mXnWgNYjuJPldm4YaIOs1n0hARy/m4D9mSPW6TFVMU541IuvPBmjA+WLm
         wpNRysnRdlBv5g2oT6MjHnvjUwsEq6LWawS51qBe8dbdpZKHs4EiMDHGf4BBCtUWm3Gh
         zGkuCcZjBVUPjbANm4DOrIBWGjPCcLBMoAi3EwVXK0v3Gvc7TO5GjeuRm7aAl0YvsCes
         eba9zFyMhdDITk8UcvckJIthSkdxAK3mrjrFfCWmSxg3gsZPxUHidXchfdMQkXZjb9rK
         /Xkw==
X-Gm-Message-State: AJcUukdDwYfdT7XoA0vQEnPIZQ3zCJsJ6/TSpkvuulyODt6o9AUcRSMx
        JOTKEWA/nXDJzh9U9kAfVUW0QV+vyecT9l3W1+E=
X-Google-Smtp-Source: ALg8bN4C/7p9UlnJPcjrwfrh0QMGoG/5lIks3mR8+50uf2WcILwscu3y/ZaHz56rm1ccddw5aIKZ8qBvK/HR/Y6mycM=
X-Received: by 2002:a9d:4c84:: with SMTP id m4mr982652otf.124.1545382710109;
 Fri, 21 Dec 2018 00:58:30 -0800 (PST)
MIME-Version: 1.0
References: <1545315426-14545-1-git-send-email-vincent.guittot@linaro.org> <CAPDyKFqPf3RzUG+YjSQmMPESjDhmgQmQXpbQdp5j7zk7b9hVNA@mail.gmail.com>
In-Reply-To: <CAPDyKFqPf3RzUG+YjSQmMPESjDhmgQmQXpbQdp5j7zk7b9hVNA@mail.gmail.com>
From: "Rafael J. Wysocki" <rafael@kernel.org>
Date: Fri, 21 Dec 2018 09:58:18 +0100
Message-ID: <CAJZ5v0jp-+rG2usiumWmORTvqCYDJJbFUB+ey3wLyQUrimdTLw@mail.gmail.com>
Subject: Re: [PATCH v4 3/3] PM/runtime:Replace jiffies based accounting with
 ktime based accounting
To: Ulf Hansson <ulf.hansson@linaro.org>
Cc: Vincent Guittot <vincent.guittot@linaro.org>,
        Linux PM <linux-pm@vger.kernel.org>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        "Rafael J. Wysocki" <rjw@rjwysocki.net>,
        Thara Gopinath <thara.gopinath@linaro.org>,
        Jani Nikula <jani.nikula@linux.intel.com>,
        Joonas Lahtinen <joonas.lahtinen@linux.intel.com>,
        rodrigo.vivi@intel.com, David Airlie <airlied@linux.ie>,
        intel-gfx <intel-gfx@lists.freedesktop.org>,
        dri-devel <dri-devel@lists.freedesktop.org>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, Dec 20, 2018 at 11:03 PM Ulf Hansson <ulf.hansson@linaro.org> wrote:
>
> On Thu, 20 Dec 2018 at 15:17, Vincent Guittot
> <vincent.guittot@linaro.org> wrote:
> >
> > From: Thara Gopinath <thara.gopinath@linaro.org>
> >
> > This patch replaces jiffies based accounting for runtime_active_time
> > and runtime_suspended_time with ktime base accounting. This makes the
> > runtime debug counters inline with genpd and other pm subsytems which
> > uses ktime based accounting.
> >
> > Signed-off-by: Thara Gopinath <thara.gopinath@linaro.org>
> > [move from ktime to raw nsec]
> > Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org>
> > ---
> >  drivers/base/power/runtime.c | 17 +++++++++--------
> >  drivers/base/power/sysfs.c   | 11 ++++++++---
> >  include/linux/pm.h           |  6 +++---
> >  3 files changed, 20 insertions(+), 14 deletions(-)
> >
> > diff --git a/drivers/base/power/runtime.c b/drivers/base/power/runtime.c
> > index e695544..f700524 100644
> > --- a/drivers/base/power/runtime.c
> > +++ b/drivers/base/power/runtime.c
> > @@ -64,8 +64,8 @@ static int rpm_suspend(struct device *dev, int rpmflags);
> >   */
> >  void update_pm_runtime_accounting(struct device *dev)
> >  {
> > -       unsigned long now = jiffies;
> > -       unsigned long delta;
> > +       u64 now = ktime_to_ns(ktime_get());
> > +       u64 delta;
> >
> >         delta = now - dev->power.accounting_timestamp;
> >
> > @@ -75,9 +75,9 @@ void update_pm_runtime_accounting(struct device *dev)
> >                 return;
> >
> >         if (dev->power.runtime_status == RPM_SUSPENDED)
> > -               dev->power.suspended_jiffies += delta;
> > +               dev->power.suspended_time += delta;
> >         else
> > -               dev->power.active_jiffies += delta;
> > +               dev->power.active_time += delta;
> >  }
> >
> >  static void __update_runtime_status(struct device *dev, enum rpm_status status)
> > @@ -88,17 +88,18 @@ static void __update_runtime_status(struct device *dev, enum rpm_status status)
> >
> >  u64 pm_runtime_suspended_time(struct device *dev)
> >  {
> > -       unsigned long flags, time;
> > +       u64 time;
> > +       unsigned long flags;
> >
> >         spin_lock_irqsave(&dev->power.lock, flags);
> >
> >         update_pm_runtime_accounting(dev);
> >
> > -       time = dev->power.suspended_jiffies;
> > +       time = dev->power.suspended_time;
> >
> >         spin_unlock_irqrestore(&dev->power.lock, flags);
> >
> > -       return jiffies_to_nsecs(time);
> > +       return time;
> >  }
> >  EXPORT_SYMBOL_GPL(pm_runtime_suspended_time);
> >
> > @@ -1503,7 +1504,7 @@ void pm_runtime_init(struct device *dev)
> >         dev->power.request_pending = false;
> >         dev->power.request = RPM_REQ_NONE;
> >         dev->power.deferred_resume = false;
> > -       dev->power.accounting_timestamp = jiffies;
> > +       dev->power.accounting_timestamp = ktime_to_ns(ktime_get());
>
> This change worries me a bit, but it may not be a problem in practice.
>
> pm_runtime_init() is called when devices get initialized, via
> device_initialize(). If timekeeping has not been initialized prior a
> call to ktime_get() is done, it will fail and causing a NULL pointer
> deference or something along those lines.
>
> In other words, do we know that device_initialize() is always called
> after timekeeping has been initialized during boot?

We do.

timekeeping_init() is called early in start_kernel() which is way
before driver_init() (and that's when devices can start to be
initialized) called from rest_init() via kernel_init_freeable() and
do_basic_setup().
