Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:54:06 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 113BE580522;
	Fri, 21 Dec 2018 10:15:14 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 21 Dec 2018 10:15:12 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Ad/4uiRLiQ7+J5XfLatmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULPX4rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZXshfSTFPDI2/?=
 =?us-ascii?q?YYUIDeUBM/xYoIbyqVsVtRuzBxKhCP/sxzJSmnP7x7E23/gnHArb3AIgBdUOsH?=
 =?us-ascii?q?HModv2O6cSVvq1x7TVwzXfaPNWwS/955LVeR0moPGMUrVwcdDLxUk0CwPFiU2Q?=
 =?us-ascii?q?qZT/MD6O2eQNtnKU7+tkVe61l2EnrARxryGpy8wxiYfJnpoYxk7Y+Sh92oo5ON?=
 =?us-ascii?q?O1RFBhbdK5E5ZcqzuWOop0T886XW1kpDo2xqADtJKmcyUF048oyhvfZvCadoWH?=
 =?us-ascii?q?+B3uW/qSLDp9hH9qZKyzihm3/ES+xeDzS8u53VNWoSVfktTMuHUA2ALR58eaVP?=
 =?us-ascii?q?dw+Fqq1yyV2ADJ8O5EJFg5larFJJ4lxb49joQTsUvdES/sgkn2j7GZdl8i+ue2?=
 =?us-ascii?q?7+TreLLmpoWTN4NsiwH+NLohmtCnDOgmLgQDW3KX9fmy2bH950H1XbZHguEsnq?=
 =?us-ascii?q?TYsp3WPcEbqbS4Aw9R3IYj8RG/DzK+3dQcnHkHKk9FeR2eg4jqJV7OOvb4Aum7?=
 =?us-ascii?q?g1i1lzdqyfbGMaP7ApjWMHjDn6nufaxn505f1gUz19Zf6IxQCr0bJ/LzQEDxuM?=
 =?us-ascii?q?TCDhAlKwy03/rnCNJl24MaWGKPAbGWPLndsF+V/e8vJ+iMZIkIuDfyMfQl5vju?=
 =?us-ascii?q?jWMnll8ZZ6WmwZwXaHWgFPR8P0qZeWbsgssGEWoSvgoxVu3qiEGYXj5UfXqyX7?=
 =?us-ascii?q?886Ss9CIKpForDQoGtgLqc3Ca0BJFWZ2ZGCkySHnfsbYmLR/AMaCeKKM97jjME?=
 =?us-ascii?q?TaShS5Mm1Ry2rgD60LpnLu3X+iECr5Lsztp16vbXlREz8zx0Esuc33uMT2Fygm?=
 =?us-ascii?q?MHWTs20Lpjrkx6z1eJybJ4jOBAFdxP+/NJVR83NZ3GwOx8EdzyXgPBcc2PSFap?=
 =?us-ascii?q?WdimBTAxTtQsw94BeUp9GtOijgzd0CquGbMai7uLBJks+KLGw3fxP9p9y2rB1K?=
 =?us-ascii?q?Q5klYpWNVPOnO8iq5/7QfTAZXJnFufl6qtcaQc3yvN9GOYwGqKvUFYVhNwUKrf?=
 =?us-ascii?q?UXAeYEvWscr25kfYQ7CyDrQnNxNLydSeJatSdt3pkVJGSe/+N9vEfWK+hX28BR?=
 =?us-ascii?q?aSybOKd4rlZWMd0T7ZCEgFlQAT4HmHORI/Bienv2LREjhuGUjzbEPr9Ol0sGm7?=
 =?us-ascii?q?QVMszwGWc01h0KK4+gIUhfyZTPMTwrIEuSc7pzVoBlq92MjWC96Bpwpnc6VRet?=
 =?us-ascii?q?c94FZB1WLEuA1xJJ2gL6Z+hlEAdwR7pV/h1xJyCo9Yi8glsGsqzBZuKaKfyF5O?=
 =?us-ascii?q?bTeY0o7/O7LJKmj+5guga7PL1V7E1taW+aAP6OojplXnvQGpEFci8np939lU1X?=
 =?us-ascii?q?uc+ovFDA4IXZ3tVUY38gBwp6vGbSkl+4PUyXpsPLG0sz/fwd4mGPEpyxegf9hF?=
 =?us-ascii?q?NqOEGxT/E8kbB8ioNewrlEKlbhMCPOBO6qE0O9mqeOeB2K6uJOxghi6pjXxb4I?=
 =?us-ascii?q?Bh1UKB7zB8Su/U0Jkf2fGXwwyHWy36jFi/qMD3mJlIai0IEWq71CfrGpRRZqp0?=
 =?us-ascii?q?fYsQDWeuIsu3xshxhpL3Wn5Y8kKjCE0C2MOzZRWSaFn91xVK1UsLuXynhTe4zz?=
 =?us-ascii?q?tsnjApr6qTxizPz/75dBoaPG5GX21ijVbqIYipgNEWRkmobw41lBS74Ub23bRU?=
 =?us-ascii?q?pKN6L2PLW0dHYzD2L31+Uqu3rreCYdRA6IkrsSVUV+Swe0uaRaT+oxsZ0iPjGX?=
 =?us-ascii?q?VRxDYgejGuu5X5mQF6iW2HIHZyqnrZZd9/xRPF6NPAQv5R2yIMRDNkhjnPGli8?=
 =?us-ascii?q?I96p8M2UlpjZteCyTWChVpxVcSTwyYOAtS275XBlABGlnvCznMHnHhY+0SPhy9?=
 =?us-ascii?q?ZqUiDIpg7mYob3z6S6Lf5nfk5wCV//8cV6G5tykosthJ4K33gaiY6Y/X4GkWf1?=
 =?us-ascii?q?LNVa1rjybHsLRT4X3dHV5BLp11FkLnKM34j5TGmSwtN9Z9mmZWMbwic978FJCK?=
 =?us-ascii?q?iO9rBFkzV6okGkrQ3Pe/hyhSkSyeEh6HMBh+EJuQwtzjiSA7wIHElYOzDsmAqM?=
 =?us-ascii?q?79yksKpXY2Ove6Cq1EVihdChEK2CogZEVXblfZciGDV878RlP1LKzX3z8ZrkeN?=
 =?us-ascii?q?jLYNIXtx2UlQrAjudPJJIwkPoKmTRoOWbnsXI5zO47iARk3Yums4ifN2Vt4KW5?=
 =?us-ascii?q?DwZDOTLvYMMT/iztgbxansaLxI2vGpRhGjMWXJrnV/6oETQStej5OAaKCjEztn?=
 =?us-ascii?q?CbGb/HFw+F9Ehmt27PE4ysN3yPJnkW19BiSweGJEBFnAAYRjY6noM6FgC3wszu?=
 =?us-ascii?q?alx56ysV5l75rBtM1+1pOwP+UmfZuAendDM0RIKDIxpR6wFI/13VPtCG7uJvAy?=
 =?us-ascii?q?FY+YWsrQyKKmyGfgRIEHsGWkqeC1D4Obmu49bA/vOcBuq/KfvOfLqPpfZfV/eO?=
 =?us-ascii?q?2ZKgzI9m8yyQOcWIO3loF+c71VZbXXBlB8TZnC0CSywJmCLMbM6bpxa89jd0rs?=
 =?us-ascii?q?Cl9/TrVxzg5ZGSC7tJKthv/xG2gaGeN++fnip5KDBY1o8Syn/M0rQQwFkSiyR2?=
 =?us-ascii?q?fTm3DbsArTLNTL7XmqJPFREbdjh8NNFW4KM8xAVNPc/bh8jx1r55iP41FlhEWU?=
 =?us-ascii?q?bgmsGvecwFPWW9OEnbC0aMMbSMPSfLzN3vYaOgVb1Qi/1ZtwGxuTaeCUPsIi6P?=
 =?us-ascii?q?mCXpVx+xN+FBlyWbPB1YuIGgfRdhE2njTNT6ahKlNN97lyE5wboxhnnSL24TLS?=
 =?us-ascii?q?B8c19Rrr2X9S5Zgu9wG2pE7npkK+mLgyeY7+nCJZYQvvtmGSB0l+Nc4HQnxLpZ?=
 =?us-ascii?q?9iBERPppmCTMqt5iuU2pku6KymkvbB0bgzBHlcqvoFllPKTD7ZpBESLA4Q4KxW?=
 =?us-ascii?q?yVAh8Dv9p5A9mpva1MnJyHsavvNDdP7Jrr/M8XANicfN2GNH4wGRvvFiTdAAYM?=
 =?us-ascii?q?QXisL26JwwRlne2f7DWnr5o+sYT2kdJaUrJHWUYnPvIcBF5sENELLNFwRDxy1f?=
 =?us-ascii?q?a3hdAFrVq3qgLcQo0OspnZW7SSCPP0JTCxibhCegtOwLXkIIBVPYr+jQgqT1h/?=
 =?us-ascii?q?ncz4HErZR5gZsCphZxUcpERL7Wg4UGs+xwTkYAbr63gWQ7r8oh43gwR5KcYw8j?=
 =?us-ascii?q?ikyV4qK0DPrS022B07kMjomzWYdhb1LaGtTcdXAS+yvE80ZMDBTh5xfDG1yG1r?=
 =?us-ascii?q?My2MfK5Wl6NpPTRqhwjG/4BTHuZERIVLZRYRwbecYPB+gnpGrSDy5EBA/6P+FZ?=
 =?us-ascii?q?x6jAJiJZ+jqGgGwB5kdMY8DaPVLatNiFNXg/Td7WeTyuktzVpGdA42+2SIdXtN?=
 =?us-ascii?q?4RRQOw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAADOLB1ch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTCCOyeMFl+NP4kTjjiBcRUBARgTAYcwIjQJDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCA0JCCkjDII6KQGCZwMDAQIIIAcBDQEbHQEDAgkBAQUTOAMeAgUHAQQBB?=
 =?us-ascii?q?QEDARgGARIFgx2BaQEBAhUBBJpNPIwrBQEXDYJqBYEGAYEuggoKGQQKGQ1egTc?=
 =?us-ascii?q?CBhKHbIMlgRyBVz+GeogJAqESMwcCgiUEhCmGdHCDJwwYiXqBcgxRhRYshnqCL?=
 =?us-ascii?q?YYQihICBAIEBQIFDyE5bIIOMxojgh2BH4IbDBeDSoocATg+MgGBAwEBATuNcwE?=
 =?us-ascii?q?B?=
X-IPAS-Result: =?us-ascii?q?A0ANAADOLB1ch0O0hNFjHAEBAQQBAQcEAQGBUQcBAQsBgTC?=
 =?us-ascii?q?COyeMFl+NP4kTjjiBcRUBARgTAYcwIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjD?=
 =?us-ascii?q?II6KQGCZwMDAQIIIAcBDQEbHQEDAgkBAQUTOAMeAgUHAQQBBQEDARgGARIFgx2?=
 =?us-ascii?q?BaQEBAhUBBJpNPIwrBQEXDYJqBYEGAYEuggoKGQQKGQ1egTcCBhKHbIMlgRyBV?=
 =?us-ascii?q?z+GeogJAqESMwcCgiUEhCmGdHCDJwwYiXqBcgxRhRYshnqCLYYQihICBAIEBQI?=
 =?us-ascii?q?FDyE5bIIOMxojgh2BH4IbDBeDSoocATg+MgGBAwEBATuNcwEB?=
X-IronPort-AV: E=Sophos;i="5.56,382,1539673200"; 
   d="scan'208";a="45990865"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 21 Dec 2018 10:15:10 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2404403AbeLUSPJ (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Fri, 21 Dec 2018 13:15:09 -0500
Received: from mail-lf1-f68.google.com ([209.85.167.68]:32865 "EHLO
        mail-lf1-f68.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2404368AbeLUSPG (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 21 Dec 2018 13:15:06 -0500
Received: by mail-lf1-f68.google.com with SMTP id i26so4560225lfc.0;
        Fri, 21 Dec 2018 10:15:04 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references:reply-to
         :mime-version:content-transfer-encoding;
        bh=hKpBmvKhY62YcE+qk2JyFeoOHJdEVTVCpq3mJ7wKHeo=;
        b=P/5eitQzqF4I/oTbSibobHwdzXYLEAMNbcNPfzS3a+ykbj4p7coiugUW2F9rjhhWMm
         lsNPk+KqhR4DNi7n4YQ0kjs7Hs/SgxhRaox/StG8MhP71NOi8+e3TtzbjmB19jA/2erO
         D1y8WK3jRyhpp8TdwUQv12RC02VyzLYGSD3rsfMZvW7goTHwYSCO6SmBy4GXZ0BuOa11
         RbKHrcsnPGoXvCQgHf47Vp8mmIlUEp5jwiXap9+Z0uadOJtZti8Z/5aspb3g9vpmjCuE
         lKXA6AazVT+48O79fX+xuYZAoJVE5lK4GhgfGVWRtbwUwyRsRiB64G/B57fD3b0NkLNj
         8nDg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:reply-to:mime-version:content-transfer-encoding;
        bh=hKpBmvKhY62YcE+qk2JyFeoOHJdEVTVCpq3mJ7wKHeo=;
        b=pHbzbmREFwEmeGA8XtyVRxNqAqS0jjh699uw/fko8MsNGWQYkam0Qz5h5+OQb33EuF
         aNql2eA2gR9NS+6ewGr3G22fxPf9oF9IxKTGgKO3SJf7ToQ0DB6SMICxIN9Me8xD8UHL
         8T9ArCVZSUu6fQBs26hj0ULOe6z6uEXZLk35dsoqV6wvH+SvPrnFbO/V3YgBIXGInfKX
         27jqiuWM/F7wQ742L0Kq/eoIYZ1ykcUuSc4K0dfcgjpl+tW+1jYeB+C82R26lmtjJ7L6
         eQP/vXhVIpygsHlRXCf6G5c6UQ3Sy2yoABOyRcmCV2lKhWh9UTAGloxzckczpjxIJDbm
         8PDg==
X-Gm-Message-State: AA+aEWaz6Ql3KANU/wOuqSmuveGpOwuT1Xr7mmffWRyNhfvoyMi8SWg0
        oRveHYrgLh/TTaxd7Qj8mYA=
X-Google-Smtp-Source: AFSGD/W1G6Tq7n+hJWkNQlncfqgelqo0DV4gS71OAhO90oATObuU+4gfeMRLnUh0qrb9WRHlqlsVGQ==
X-Received: by 2002:a19:2106:: with SMTP id h6mr1979270lfh.29.1545416103579;
        Fri, 21 Dec 2018 10:15:03 -0800 (PST)
Received: from localhost.localdomain (dmhwpt3bffxn8z3-j6k-4.rev.dnainternet.fi. [2001:14bb:51:a4c8:5c24:24d7:ca5f:e7d2])
        by smtp.gmail.com with ESMTPSA id m63-v6sm5444564lje.81.2018.12.21.10.15.01
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Fri, 21 Dec 2018 10:15:02 -0800 (PST)
From: Igor Stoppa <igor.stoppa@gmail.com>
X-Google-Original-From: Igor Stoppa <igor.stoppa@huawei.com>
To: Andy Lutomirski <luto@amacapital.net>,
        Matthew Wilcox <willy@infradead.org>,
        Peter Zijlstra <peterz@infradead.org>,
        Dave Hansen <dave.hansen@linux.intel.com>,
        Mimi Zohar <zohar@linux.vnet.ibm.com>,
        Thiago Jung Bauermann <bauerman@linux.ibm.com>
Cc: igor.stoppa@huawei.com, Nadav Amit <nadav.amit@gmail.com>,
        Kees Cook <keescook@chromium.org>,
        Ahmed Soliman <ahmedsoliman@mena.vt.edu>,
        linux-integrity@vger.kernel.org,
        kernel-hardening@lists.openwall.com, linux-mm@kvack.org,
        linux-kernel@vger.kernel.org
Subject: [PATCH 09/12] rodata_test: add verification for __wr_after_init
Date: Fri, 21 Dec 2018 20:14:20 +0200
Message-Id: <20181221181423.20455-10-igor.stoppa@huawei.com>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181221181423.20455-1-igor.stoppa@huawei.com>
References: <20181221181423.20455-1-igor.stoppa@huawei.com>
Reply-To: Igor Stoppa <igor.stoppa@gmail.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

The write protection of the __wr_after_init data can be verified with the
same methodology used for const data.

Signed-off-by: Igor Stoppa <igor.stoppa@huawei.com>

CC: Andy Lutomirski <luto@amacapital.net>
CC: Nadav Amit <nadav.amit@gmail.com>
CC: Matthew Wilcox <willy@infradead.org>
CC: Peter Zijlstra <peterz@infradead.org>
CC: Kees Cook <keescook@chromium.org>
CC: Dave Hansen <dave.hansen@linux.intel.com>
CC: Mimi Zohar <zohar@linux.vnet.ibm.com>
CC: Thiago Jung Bauermann <bauerman@linux.ibm.com>
CC: Ahmed Soliman <ahmedsoliman@mena.vt.edu>
CC: linux-integrity@vger.kernel.org
CC: kernel-hardening@lists.openwall.com
CC: linux-mm@kvack.org
CC: linux-kernel@vger.kernel.org
---
 mm/rodata_test.c | 27 ++++++++++++++++++++++++---
 1 file changed, 24 insertions(+), 3 deletions(-)

diff --git a/mm/rodata_test.c b/mm/rodata_test.c
index e1349520b436..a669cf9f5a61 100644
--- a/mm/rodata_test.c
+++ b/mm/rodata_test.c
@@ -16,8 +16,23 @@
 
 #define INIT_TEST_VAL 0xC3
 
+/*
+ * Note: __ro_after_init data is, for every practical effect, equivalent to
+ * const data, since they are even write protected at the same time; there
+ * is no need for separate testing.
+ * __wr_after_init data, otoh, is altered also after the write protection
+ * takes place and it cannot be exploitable for altering more permanent
+ * data.
+ */
+
 static const int rodata_test_data = INIT_TEST_VAL;
 
+#ifdef CONFIG_PRMEM
+static int wr_after_init_test_data __wr_after_init = INIT_TEST_VAL;
+extern long __start_wr_after_init;
+extern long __end_wr_after_init;
+#endif
+
 static bool test_data(char *data_type, const int *data,
 		      unsigned long start, unsigned long end)
 {
@@ -59,7 +74,13 @@ static bool test_data(char *data_type, const int *data,
 
 void rodata_test(void)
 {
-	test_data("rodata", &rodata_test_data,
-		  (unsigned long)&__start_rodata,
-		  (unsigned long)&__end_rodata);
+	if (!test_data("rodata", &rodata_test_data,
+		       (unsigned long)&__start_rodata,
+		       (unsigned long)&__end_rodata))
+		return;
+#ifdef CONFIG_PRMEM
+	    test_data("wr after init data", &wr_after_init_test_data,
+		      (unsigned long)&__start_wr_after_init,
+		      (unsigned long)&__end_wr_after_init);
+#endif
 }
-- 
2.19.1

