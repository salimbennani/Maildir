Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  20 Dec 2018 08:43:23 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 823F958055F;
	Wed, 19 Dec 2018 13:37:15 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga008-1.jf.intel.com with ESMTP; 19 Dec 2018 13:37:16 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AmbDjIxeNcUEH/5yK68RQ9T82lGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc68YBGN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRBDI2i?=
 =?us-ascii?q?coUBAekPM+FaoInzvVsBohSwBRK0BO7t0TJEmnz70Lcm3+k7DQ3KwAotFM8Ovn?=
 =?us-ascii?q?TOq9X1Mb8fX+O6zKnP1zXIcu5Y2Sv66IjQahAuu+yHULVxccrezkkvDRnJjk6M?=
 =?us-ascii?q?qYziJzOVzv4CvnOU7+plT+2vimonpxttrTiow8chk4/EjZ8WxFDc7Sh13po5KN?=
 =?us-ascii?q?miREJmb9OoDoFcuzyZOodqWM8vQmNltD4kxrEapZK3YS0HxIkoyhHEcPOKdoiF?=
 =?us-ascii?q?7g/mWemLLjp3mHFodbe/ihmu70StxejxWte73VlXrCdIl8XDuWoN2hzd78WIVP?=
 =?us-ascii?q?lw8Vq/1TuJygvd8PtLIVoumqreM5MhwqA/lp4UsUnbAC/2l1v5jLWMekUn5Oeo?=
 =?us-ascii?q?8eLnbavippOGMI90kA7+Prwvmsy5H+s4LhADU3aH9em4zrHv4EP0TKtQgvErka?=
 =?us-ascii?q?TVrIrWKMUZq6KhBg9ayIcj6xKxDze819QYmGEKLFZEeBKBkojoNEjCIPPmAvel?=
 =?us-ascii?q?hVSjjjNry+nBPrzvBJXCMGLDnaz/fbZy9UFc0hA/zdNB6JJODLEOPvbzVlX2tN?=
 =?us-ascii?q?zCAR81Kxa0zPr/CNVhyoMeXnqCAquYMKPRr1CE/O0uI/SXaY8RuTb9LeUl5vH0?=
 =?us-ascii?q?gX84n18dYbem3Z8NZH+kGfRmJl2TYWDwjdcZDWcKog0+QfTqiFKYUD5Te2y9X6?=
 =?us-ascii?q?Um6jE7FYKpF4HDRo+2jbyF3Se7GIBWZ29cBlCNF3foa5uLW/MWZC2OJc9hlyQO?=
 =?us-ascii?q?VaK9RI85yRGuqAj6xqJ9IerP+i0YspHj2MJv5+LJlxE/7jh0D8Wb02GQQGB4hG?=
 =?us-ascii?q?IIRzkq3K9hpUxx0EuM0a99g/ZAD9xc++tJUhsmNZ7b1+F6CMr9WgTbcteNSVap?=
 =?us-ascii?q?WNOmAT4qQ9I1wt8OZVt9Gtq4ghDC2SqqH6Eal7iRCJMo9aLc2mD7J9xhxHbeyK?=
 =?us-ascii?q?khk14mT9NSOmK8mK5w6RLfB47TnEWfjKala6Ic0CnJ9GeAyGqOuFpVUApxUaXD?=
 =?us-ascii?q?QHAeaVHardX/5kPeUbCuDa4rPRdGyc6HMqFKcMHmjU1aRPf/P9TTe3++lH2uBR?=
 =?us-ascii?q?mW3L+MbJDle2MG3CrDDkgJiAQT/XeANQgjCSatuWPeDDpyFV3xZ0Pg6/VxqHS+?=
 =?us-ascii?q?TkUs1QGFc1Vh16ap+h4SnfGcV/IT3rcDuCc9qzV1HEyx387MB9qHvQpheKRcYd?=
 =?us-ascii?q?Uy4Fpc0WLZtgp9PoGvLqx4h14edRh3sF3q1xltFopAls0qpmswzAVuMaKYzE9B?=
 =?us-ascii?q?dzSA0J/qPr3YNGbz8w6vaqLMwV7ezcuZ9b0J6PQ7rFXjohqkFk4j83VhztlU3G?=
 =?us-ascii?q?GQ5pTMDAoOT53xVlw7+AR9p7HfeiM9/Z/b1WVwMamotT/Pw9IoBPY/xhm8Zdte?=
 =?us-ascii?q?MaOEGxX0E80VHMWuLO0qm160bhMLJuxS9ag0P9+4ePuCwqKkIOFgnDe+h2Rd/I?=
 =?us-ascii?q?99yl6M9zZ7SuPQxZYFwu2X0RGdVzjhi1etqMb3lp5eZTETB2aw1TLrBIpMaaJs?=
 =?us-ascii?q?Z4YLDmGuLtazxtV/gZ7tRnFZ+ESiB1MAxM+mZx6SY0bh0g1X0EQduWanljegzz?=
 =?us-ascii?q?xojzEpqbKS3SzPw+j4dBsLIHVLRHRkjVr3JYi0jtYaXFWnbgQzlRul41r6yLZf?=
 =?us-ascii?q?pKhlM2bTRkJIdTDsL25+SquwqqaCY8lX5ZMqqypXSue8YVOdSrLnuBsVySDjH2?=
 =?us-ascii?q?hfxDA9aT6qvI70nxh7iGKbMXZyo2DVecB2xRfD+tPcQeRd0SYBRCl9kTPXHESz?=
 =?us-ascii?q?P8G1/dWIkJfOquC/WHimVpFJcynrzIWAuTC/5W1rBx2/gv+ylsfmEQg8zS/0yd?=
 =?us-ascii?q?1qWT/Uoxb7Z4nhz766Pv5/fkl0GF/87NJ3GoJknYsxnp0Q2WUaiY+T/XoIimrz?=
 =?us-ascii?q?NdRb2aTjbHsCXzILwtjV4BT7101nNH6G24X5VnCFyMt7e9a6en8W2j46781SDa?=
 =?us-ascii?q?eU7b9EkjFvrlu2sw3ReuR9kSkHyfQ19nEame4JtREpziWcBLASAEZZMTbtlxSO?=
 =?us-ascii?q?89CxsqFXaHyzfri30Up0hcqhA62aogFARHb5fY8vHTN37sV6Kl7N0Wf86of5eN?=
 =?us-ascii?q?nLdtITtwaZkxPBj+hTNZIwmeAGhSthOWLho3Ilz/Q3ggBp3ZG/pIKHMXli/Lql?=
 =?us-ascii?q?Ah5EMT34f9gc9SvqjaZag8aaxYSvHoh6FzUPXZvoS++oET0IufTmMQaODCMzqn?=
 =?us-ascii?q?OBFbXDGg+f7V9sr2jTHJCzK3GXOH4ZwM1gRBaHIUxQnhsUUC8mnpIjFQCq2c/h?=
 =?us-ascii?q?cFp/5j8L/V71sR9MyuNuNxniXWbTvgaoajEoSJeBKBpa9B1N50DQMcaG9OJ8Az?=
 =?us-ascii?q?lY/oG9rAyKMmGaZwNIDXwQWkyZHV/jOKOi5cLH8+ieCeqzNP/OYbSIqexDWPaE?=
 =?us-ascii?q?35Ov0o16/zmSMsWDJGVtD/o+2kBbR3B2B9zZmykTSywQjy/Nb9CUpBa/+i10r8?=
 =?us-ascii?q?Cz6vfrWBjo5YuAFbRSK8hv+wutjKeHNu6Qgjt5KDlC2pMNw3/I1KYQ3FoIhy5y?=
 =?us-ascii?q?cDmtFKwKtTTRQ6LIhq9XExkbZjtpO8tV9K08xBdCOM7BhtPx1751lfo1C1ZDVV?=
 =?us-ascii?q?z8lcClf80KI2ehNFzZAEaHLqiJJTrOw8vve6OzVaVQjPlItx23oTubD07jPjGZ?=
 =?us-ascii?q?mzb1TRygLeFMgz+dPBFFvIG9cxBtCXXsTd78ax27NsN3giMywbEumnzKMmscOy?=
 =?us-ascii?q?Bmc0xRtr2Q8T9YgvJnFm1B9HVlK+yEmyef7+bAK5cWseFkAiJ7l+9B5HQ6yr1V?=
 =?us-ascii?q?7DxLRfBvmSvSqMJurE+ikuWV1jVnVx9O+X53g9eiu0lzcYHE6p5FWGzf/xNFuW?=
 =?us-ascii?q?GNFxMirt5sAdT3urxZzp7Jmb6lbH9n+s7I/cYDT/fVLMmAIDJ1LhvtHC/8DQ0L?=
 =?us-ascii?q?VzenOGjTwUtHn6fWvkWYspUg4qrtmp4VVqVSHAgtG+8XEFZNHdoMOp57Uzoo17?=
 =?us-ascii?q?mBg5hMrVa3shSZZMxcpZ3BHqaeCOvibjaQi6JJYTMMwLXlPcISMJH23wppbVws?=
 =?us-ascii?q?2MzvGk/RFeJKoiR7Jlsmp0VE6lB6T2suywT7bA6xpn4ZELi/mRtg2TFzeeA8yD?=
 =?us-ascii?q?C5wlgwPBLxuCwoiEB5zdTqhirXayL2NL+5dY5TAivw8UM2N8WobRxyaFiTkkt+?=
 =?us-ascii?q?fAzYQKpJhvM0dG9skknHpZxXAfd0QqhNYRtWzvaSMaZ7mW9AozmqkBcUrdDODo?=
 =?us-ascii?q?FvwU5zKcah?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAABjuRpch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTCCOyeMFl+NPokSjjeBcRUBARgTAYctIjQJDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCA0JCCkjDII2JAGCYgMDAQIIIAcBDQEbHQEDAgkBAQUTOAMeAgUHAQQBB?=
 =?us-ascii?q?QEDARgGARIFgx2BaQEBAhUBBJxEPIwrBQEXDYJqBYEGAYEuggsKGQQKGQ1egTc?=
 =?us-ascii?q?CBhKHbIMlgRyBVz+GeogJAqEBMwcCgiUEhCeGcXCDJQwYiXeBcQtRhRUsiRyGD?=
 =?us-ascii?q?IoHAgQCBAUCBQ8hOWyCDjMaI4IdgR+CGwwXg0qKHAE4PjIBgQMBAQE7jSUBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ANAABjuRpch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBgTC?=
 =?us-ascii?q?COyeMFl+NPokSjjeBcRUBARgTAYctIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjD?=
 =?us-ascii?q?II2JAGCYgMDAQIIIAcBDQEbHQEDAgkBAQUTOAMeAgUHAQQBBQEDARgGARIFgx2?=
 =?us-ascii?q?BaQEBAhUBBJxEPIwrBQEXDYJqBYEGAYEuggsKGQQKGQ1egTcCBhKHbIMlgRyBV?=
 =?us-ascii?q?z+GeogJAqEBMwcCgiUEhCeGcXCDJQwYiXeBcQtRhRUsiRyGDIoHAgQCBAUCBQ8?=
 =?us-ascii?q?hOWyCDjMaI4IdgR+CGwwXg0qKHAE4PjIBgQMBAQE7jSUBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,374,1539673200"; 
   d="scan'208";a="58204643"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 19 Dec 2018 13:37:13 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730516AbeLSVeK (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Wed, 19 Dec 2018 16:34:10 -0500
Received: from mail-lf1-f66.google.com ([209.85.167.66]:39594 "EHLO
        mail-lf1-f66.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727387AbeLSVeI (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 19 Dec 2018 16:34:08 -0500
Received: by mail-lf1-f66.google.com with SMTP id n18so16144069lfh.6;
        Wed, 19 Dec 2018 13:34:07 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references:reply-to
         :mime-version:content-transfer-encoding;
        bh=zzEjOKOluUUWksw+oXnin6HXgBufUkueAJaYjC1prj4=;
        b=CWCHozxtXPaF/R34zIBV9kgAuN1gg0PddkrPC5aWleCfLISFSDUnCKYlt1SLfa1Qdf
         AbBcVlgs7IbX/SocNOSs7TJQFHB47Mb19vHQatLapdRgx2CO4a1kc145mUHuA0wziXHH
         QzZ8yM8QB4lZEUShcVat6wzXvLInx64kvRel1qGAK2FWOTDIZ18UCt14KqSiQ4ShML9x
         rAO14BDpxcuPoIQYRNZAzrNtOpMAw7VGp3iOilzQ4tI6o+kS0TZkiyLu0KCkKArZ5UO2
         dPjUBiO0nyOIiEfyvkENuq9RLsdpeA4AjYW6bWLilccCTnnGGCpqqA/Quth/AjuruGh3
         tVQg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:reply-to:mime-version:content-transfer-encoding;
        bh=zzEjOKOluUUWksw+oXnin6HXgBufUkueAJaYjC1prj4=;
        b=VWFcHf4RsMUVltkbNBhNHcW9MnkRscPYXj6bUXP/ExmFzmA98FKiKxb90z4AxWRWGf
         FjxcFKUd7EV5RVkJaTal0VPQSvz+O5qwaOd71NrlzPSrKn700K7gXqXx0F/+tCAueuMY
         92B0tClBZ3+yZLtEGbkoOSIZezajWND/9HpTSPm1zzVmdUKa+dlAnsorEzvc9yebuYw4
         VA7R6Gssn9OhP89TqArC+PT6i6ajJVlB/zFfi4llB3nPhJ6BHRCjSaI+6th8CnIVVQqi
         45HngDizBY5UehcrSiTeSDHspGGldsn+lnZEjKxvd6X1Cg0shpF9CzIyyJVUdMIYmrqa
         AyiQ==
X-Gm-Message-State: AA+aEWaFqcJj2DNVDGRSqPxekW9ZIpmBnpL97kHg3Knns/I28h7FdKRm
        ObbXfdAZKqDh0/1fKDQrU/dLje6pQ1A=
X-Google-Smtp-Source: AFSGD/WxAkE6ImfOjvKiqC6CvFghm5iWxm8HjnpQw4GJB94Y1GY0BzHPXMXipEe8534UoMRhUUvpBw==
X-Received: by 2002:a19:6514:: with SMTP id z20mr6123044lfb.31.1545255246483;
        Wed, 19 Dec 2018 13:34:06 -0800 (PST)
Received: from localhost.localdomain (dmhwpt3bffxn8z3-j6k-4.rev.dnainternet.fi. [2001:14bb:51:a4c8:5c24:24d7:ca5f:e7d2])
        by smtp.gmail.com with ESMTPSA id v64sm3996867lfa.48.2018.12.19.13.34.04
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Wed, 19 Dec 2018 13:34:05 -0800 (PST)
From: Igor Stoppa <igor.stoppa@gmail.com>
X-Google-Original-From: Igor Stoppa <igor.stoppa@huawei.com>
To: Andy Lutomirski <luto@amacapital.net>,
        Matthew Wilcox <willy@infradead.org>,
        Peter Zijlstra <peterz@infradead.org>,
        Dave Hansen <dave.hansen@linux.intel.com>,
        Mimi Zohar <zohar@linux.vnet.ibm.com>
Cc: igor.stoppa@huawei.com, Nadav Amit <nadav.amit@gmail.com>,
        Kees Cook <keescook@chromium.org>,
        linux-integrity@vger.kernel.org,
        kernel-hardening@lists.openwall.com, linux-mm@kvack.org,
        linux-kernel@vger.kernel.org
Subject: [PATCH 01/12] x86_64: memset_user()
Date: Wed, 19 Dec 2018 23:33:27 +0200
Message-Id: <20181219213338.26619-2-igor.stoppa@huawei.com>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181219213338.26619-1-igor.stoppa@huawei.com>
References: <20181219213338.26619-1-igor.stoppa@huawei.com>
Reply-To: Igor Stoppa <igor.stoppa@gmail.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Create x86_64 specific version of memset for user space, based on
clear_user().
This will be used for implementing wr_memset() in the __wr_after_init
scenario, where write-rare variables have an alternate mapping for
writing.

Signed-off-by: Igor Stoppa <igor.stoppa@huawei.com>

CC: Andy Lutomirski <luto@amacapital.net>
CC: Nadav Amit <nadav.amit@gmail.com>
CC: Matthew Wilcox <willy@infradead.org>
CC: Peter Zijlstra <peterz@infradead.org>
CC: Kees Cook <keescook@chromium.org>
CC: Dave Hansen <dave.hansen@linux.intel.com>
CC: Mimi Zohar <zohar@linux.vnet.ibm.com>
CC: linux-integrity@vger.kernel.org
CC: kernel-hardening@lists.openwall.com
CC: linux-mm@kvack.org
CC: linux-kernel@vger.kernel.org
---
 arch/x86/include/asm/uaccess_64.h |  6 ++++
 arch/x86/lib/usercopy_64.c        | 54 +++++++++++++++++++++++++++++++
 2 files changed, 60 insertions(+)

diff --git a/arch/x86/include/asm/uaccess_64.h b/arch/x86/include/asm/uaccess_64.h
index a9d637bc301d..f194bfce4866 100644
--- a/arch/x86/include/asm/uaccess_64.h
+++ b/arch/x86/include/asm/uaccess_64.h
@@ -213,4 +213,10 @@ copy_user_handle_tail(char *to, char *from, unsigned len);
 unsigned long
 mcsafe_handle_tail(char *to, char *from, unsigned len);
 
+unsigned long __must_check
+memset_user(void __user *mem, int c, unsigned long len);
+
+unsigned long __must_check
+__memset_user(void __user *mem, int c, unsigned long len);
+
 #endif /* _ASM_X86_UACCESS_64_H */
diff --git a/arch/x86/lib/usercopy_64.c b/arch/x86/lib/usercopy_64.c
index 1bd837cdc4b1..84f8f8a20b30 100644
--- a/arch/x86/lib/usercopy_64.c
+++ b/arch/x86/lib/usercopy_64.c
@@ -9,6 +9,60 @@
 #include <linux/uaccess.h>
 #include <linux/highmem.h>
 
+/*
+ * Memset Userspace
+ */
+
+unsigned long __memset_user(void __user *addr, int c, unsigned long size)
+{
+	long __d0;
+	unsigned long  pattern = 0;
+	int i;
+
+	for (i = 0; i < 8; i++)
+		pattern = (pattern << 8) | (0xFF & c);
+	might_fault();
+	/* no memory constraint: gcc doesn't know about this memory */
+	stac();
+	asm volatile(
+		"       movq %[val], %%rdx\n"
+		"	testq  %[size8],%[size8]\n"
+		"	jz     4f\n"
+		"0:	mov %%rdx,(%[dst])\n"
+		"	addq   $8,%[dst]\n"
+		"	decl %%ecx ; jnz   0b\n"
+		"4:	movq  %[size1],%%rcx\n"
+		"	testl %%ecx,%%ecx\n"
+		"	jz     2f\n"
+		"1:	movb   %%dl,(%[dst])\n"
+		"	incq   %[dst]\n"
+		"	decl %%ecx ; jnz  1b\n"
+		"2:\n"
+		".section .fixup,\"ax\"\n"
+		"3:	lea 0(%[size1],%[size8],8),%[size8]\n"
+		"	jmp 2b\n"
+		".previous\n"
+		_ASM_EXTABLE_UA(0b, 3b)
+		_ASM_EXTABLE_UA(1b, 2b)
+		: [size8] "=&c"(size), [dst] "=&D" (__d0)
+		: [size1] "r"(size & 7), "[size8]" (size / 8), "[dst]"(addr),
+		  [val] "ri"(pattern)
+		: "rdx");
+
+	clac();
+	return size;
+}
+EXPORT_SYMBOL(__memset_user);
+
+unsigned long memset_user(void __user *to, int c, unsigned long n)
+{
+	if (access_ok(VERIFY_WRITE, to, n))
+		return __memset_user(to, c, n);
+	return n;
+}
+EXPORT_SYMBOL(memset_user);
+
+
 /*
  * Zero Userspace
  */
-- 
2.19.1

