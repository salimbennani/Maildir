Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 08:47:55 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 5FC295805CF;
	Mon, 17 Dec 2018 10:10:02 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 17 Dec 2018 10:10:01 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AfTt6uBZgtQKoAcGmvRcBiy7/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpcm4Yh7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyJPDIOi?=
 =?us-ascii?q?YYUSDOQBM+lXoJXgqFQMoxS+HhGsCeH0xz9UmnP7x7E23/g7HA3Y2gErAtIAsG?=
 =?us-ascii?q?7TrNXwLKocTP66w7POzT7ecf5W2S396InTchA9pvGMRbJwftTLyUk0EAPFiEib?=
 =?us-ascii?q?pIv+PzyLzOsNtXKX7+h6We2zi24nsQBxoiOzxscrkonJhpwaykrf9SV+xoY4Pt?=
 =?us-ascii?q?y4SEhnYdG6FJtcrT2VN4xzQs47RWxjpSU0yqUetJKlYCQHzI4rywPRZvCZaYSE?=
 =?us-ascii?q?/xHuWPqLLTp5hn9pYK+zihKs/US6yuDxVtO43VZUoiZfj9XBuHEA2hrO4cadUP?=
 =?us-ascii?q?R95F2u2TOX2gDT9O5EJUc0mLLFK54u3LEwjIAfsUfdES/snkX5kquWel8j+uiy?=
 =?us-ascii?q?5OTrerTmppmCOI9okgzyLLgil8ilDeglPAUCQXKX9fm/2bH/50H0QbdHguUzkq?=
 =?us-ascii?q?bDsZDaIcobprS+Aw9Qyosj7xe/DzG70NUXhHUHL0xKeAiBj4f3P1HCOff4DPm5?=
 =?us-ascii?q?g1uyijdm3O7GPrL/DZXXNHTDk6nufax760FCzAo/19df54hbCr0ZOvL8RlfxtM?=
 =?us-ascii?q?DEDh8+KwG0x+fnCNZj2Y8EVmOPH7SUMKfTsV+O++IuLPOAZI4TuDbhNfcl4+Ti?=
 =?us-ascii?q?gmM+mV8YZaOpx4cYaGikHvR6JEWUeXrsjc0AEWcWpAU+S/bmiF2fUTFJYXayUL?=
 =?us-ascii?q?kx5jU6CIKgEIfCSZqhgL2H3CenAJJWYnpKBUyLEXftb4+EQesDaDqOIs99lTwJ?=
 =?us-ascii?q?TbqhS4g/2h20tw/6zLxnLuzT+iADsZLj1d515/DclB0o9Dx0Cdid3H+JT21ugm?=
 =?us-ascii?q?wIQDo21rhloUNh0leDzbR4g/tAGNNJ/PNJUgA6NZ3Gw+xgEd/yWBnMftOISFag?=
 =?us-ascii?q?X9WnDis9TtM3w98SfUl9H8+ugQzE3yqvG7UVjaCEBIQo8qLA2Hj8P8V9xGzA1K?=
 =?us-ascii?q?U7i1kmQ9FANWuphqNk8wjTBojJk1iWlqqwdKQc2jLN+3mHzWaUoE5YVwtwW73f?=
 =?us-ascii?q?XX8DfkvWscj55kTaQrCzE7snLBVOxdSCKqRQbN3plktJRPHkNNTaYGKxnmOwCA?=
 =?us-ascii?q?2MxrONaorqZmoc0D/cCEgCjwAc43KGORIiCSempmLUFCZuGk73Y0Pw7el+r2u2?=
 =?us-ascii?q?QVIuwAGUcUJtzbq19QQThfyHVfwT2KkJuCMgqzVyAVa80MjaC9uGpwp9YqpcZc?=
 =?us-ascii?q?kx70tA1WLcrwZ9JICvL7h+hl4CdAR6p1/u1xRyCoVHjcgqrHMrwBBuKa6C11NB?=
 =?us-ascii?q?bTeY3ZH2Or3YMWTy+BGva6jL2lDRytqW+6EP6OgmpFXnpg2mCk0i83B/2dlPz3?=
 =?us-ascii?q?Sc/onKDBYVUZ/pSEk38wZ1pr7EbSg9/Y/bzmBsPrSuvT/E2NIpA/Ulxw2kf9de?=
 =?us-ascii?q?NqOECQDzH9cbB8ioNOwlhVypYggYM+BV8a4+J9mmeOee2K63IOZgmyqrjGRa4I?=
 =?us-ascii?q?xnzk2A7St9Su7S0JYDzPGVxQ+HVzb6jFe8vcH7g4FEZTcOHmWhzSjoHpJeZqp3?=
 =?us-ascii?q?fYwTE2ehP9W3xslih57qQ3NY7l+jCE8c18+zZBWSaEbx3QtO2kQNoHyrgDe3wC?=
 =?us-ascii?q?Zwkz40sKWfxivOw+L5eRoDO25LQnRijFj2LYi1idAaQFanbwwzmBS54kb6wrBR?=
 =?us-ascii?q?pL5jIGnLXUdIYy/2InliU6uxrLaDY9RD6Ig1sSVRS+m8ZVGaSrjgoxoVyS/jHm?=
 =?us-ascii?q?1exCwleDGuoJn2gxt6iGeFJnZpsHXZYd1wxQvY5NHER/5exCAGRCp7iTnQHFS8?=
 =?us-ascii?q?JMOm/daXl5fCtOCxSWShW4ZXcSnqy4OAqSS66XdrAR25g/C8hNnnHRIm3i/80t?=
 =?us-ascii?q?lgTT/IowrkYon3y6S6Nvpqf0lyC1/78cZ6GIB+ko0riZEU2HgagIiV/HUdnWfy?=
 =?us-ascii?q?N9VbxbzxbH4XSTEXxN7V5RDv2Fd/IXKR24L5SnKdz9NiZ9agY2MawCI9791QB6?=
 =?us-ascii?q?eS47xJhi91olu+rQLMbvlxhDYdyf0y6HEEh+EFohYiziKYAroKB0lXITTslwiU?=
 =?us-ascii?q?79C5tKhXYWevcbuq20Zkk9GuEqqCoh1CV3bjYZgtAzVw7spkPVLI0X3z7Jzked?=
 =?us-ascii?q?bKYdISsB2UjwnPj+xPJJ0tkfoKgDJtOXjhsn091+47kRtu0ImmvIiALmVh5qO4?=
 =?us-ascii?q?DQReNj3ofMMT4TDtgL1ansaX2YCvA5pgFi8KXJvuUfKnDjYSue77OAaJFT02sm?=
 =?us-ascii?q?2bFqbHHQ+D9EdmqGrCHIuxOHGQIHkZ0M9uRB2AJEFEhAAUXTM6noM2Fwywxczh?=
 =?us-ascii?q?dlt56S4V5lLithRMzedoPQHlUmjDvAeodis0SJ+HIRpU9A5C4lnaMdeE4uJvBS?=
 =?us-ascii?q?1Y/YChrA+QKmydfQtIFnoEWkiFB1DlI7mv6sPM8+meBuqiMfTOZa+CpvBZV/eN?=
 =?us-ascii?q?3ZivyJdp/y6QNsWTOXlvF/062k1eXXBgBsTWgTMPRzYMlyLKac6bqwyx+il2rs?=
 =?us-ascii?q?C57fTqVxjj5YqJC7tOL9pv/wq6jruEN+6VnCx5MypX1osQxX/Uz7gSxF4ShD9v?=
 =?us-ascii?q?dzmuErQAtDTBTKHKmq9QAB4UdTlzNNZT768n2glNOMjbis7617Jij/41DUtFWk?=
 =?us-ascii?q?Llms2zecMKJGS9PkvdBEmXLLSGOSHLw8bvbKymVL1fl/9UuAOwuDqBF0/jPy+O?=
 =?us-ascii?q?lz3oVxCpLOFNgzuXPB1YuIGhbBltDXLvQ87hah2+KNV3lyE5waUohnPWMm4RKS?=
 =?us-ascii?q?R8c0JIrrGK8SxUmOlwG2xf4XpjNuSEnyeZ7+/FKpcZq/drAyJ0l/5E73Q+0bda?=
 =?us-ascii?q?8CZERPltkivIstFuu02mkvWIyjd/UBtBsDBLhIeKvUVkIarY95lAVmzC/BIC9m?=
 =?us-ascii?q?iQDxUKp914CtzgoaxQy97PlL7tJzdG6d7b4cwcB82HYP6AZVgoKxnqH3bvBQgG?=
 =?us-ascii?q?TDimMymLhUVHk/KVsGacrZs7rJXqsJ4PTKJLEl0zCv4eTE9iGYpRDo1wW2YfnL?=
 =?us-ascii?q?edxOUI/3ulsB7JRMhApZfBHqaJDPzpbjTfhrleZgAUxqv4IJ4IMYvT2kp+Z108?=
 =?us-ascii?q?l4PPTRmDFetRqzFsO1dn6H5G92JzGyhqgxro?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AtAAAv5Rdch0O0hNFjGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBZYNsjRuLGCmBZBEDmUsrAYdWIjgSAQMBAQEBAQECARMBAQE?=
 =?us-ascii?q?KCwkIKS+CNiQBgmEBAQEBAgEBAjc/BgkBAQoYCSUDDAVJGIMdgXkIBaljiiKMP?=
 =?us-ascii?q?nqBHIERghR+iDqCJgKLNoUVkE4HApFPCxiRUplkgV2Bd3CDPZB7HgEBgTYBAY1?=
 =?us-ascii?q?vAQE?=
X-IPAS-Result: =?us-ascii?q?A0AtAAAv5Rdch0O0hNFjGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BZYNsjRuLGCmBZBEDmUsrAYdWIjgSAQMBAQEBAQECARMBAQEKCwkIKS+CNiQBg?=
 =?us-ascii?q?mEBAQEBAgEBAjc/BgkBAQoYCSUDDAVJGIMdgXkIBaljiiKMPnqBHIERghR+iDq?=
 =?us-ascii?q?CJgKLNoUVkE4HApFPCxiRUplkgV2Bd3CDPZB7HgEBgTYBAY1vAQE?=
X-IronPort-AV: E=Sophos;i="5.56,366,1539673200"; 
   d="scan'208";a="57228473"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 17 Dec 2018 10:09:59 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728112AbeLQSJ6 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 17 Dec 2018 13:09:58 -0500
Received: from mga12.intel.com ([192.55.52.136]:39979 "EHLO mga12.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726574AbeLQSJ6 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 17 Dec 2018 13:09:58 -0500
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from orsmga008.jf.intel.com ([10.7.209.65])
  by fmsmga106.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 17 Dec 2018 10:09:57 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,366,1539673200"; 
   d="scan'208";a="102212968"
Received: from sjchrist-coffee.jf.intel.com (HELO linux.intel.com) ([10.54.74.154])
  by orsmga008.jf.intel.com with ESMTP; 17 Dec 2018 10:09:57 -0800
Date: Mon, 17 Dec 2018 10:09:57 -0800
From: Sean Christopherson <sean.j.christopherson@intel.com>
To: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
Cc: "Dr. Greg" <greg@enjellic.com>,
        Andy Lutomirski <luto@amacapital.net>,
        Andy Lutomirski <luto@kernel.org>, X86 ML <x86@kernel.org>,
        Platform Driver <platform-driver-x86@vger.kernel.org>,
        linux-sgx@vger.kernel.org, Dave Hansen <dave.hansen@intel.com>,
        nhorman@redhat.com, npmccallum@redhat.com,
        "Ayoun, Serge" <serge.ayoun@intel.com>, shay.katz-zamir@intel.com,
        haitao.huang@linux.intel.com,
        Andy Shevchenko <andriy.shevchenko@linux.intel.com>,
        Thomas Gleixner <tglx@linutronix.de>,
        "Svahn, Kai" <kai.svahn@intel.com>, mark.shanahan@intel.com,
        Suresh Siddha <suresh.b.siddha@intel.com>,
        Ingo Molnar <mingo@redhat.com>, Borislav Petkov <bp@alien8.de>,
        "H. Peter Anvin" <hpa@zytor.com>,
        Darren Hart <dvhart@infradead.org>,
        Andy Shevchenko <andy@infradead.org>,
        LKML <linux-kernel@vger.kernel.org>, jethro@fortanix.com
Subject: Re: [PATCH v17 18/23] platform/x86: Intel SGX driver
Message-ID: <20181217180957.GC12491@linux.intel.com>
References: <20181128192228.GC9023@linux.intel.com>
 <20181210104908.GA23132@wind.enjellic.com>
 <20181212180036.GC6333@linux.intel.com>
 <20181214235917.GA14049@wind.enjellic.com>
 <20181215000627.GA5799@linux.intel.com>
 <20181217132859.GA31936@linux.intel.com>
 <20181217133928.GA32706@linux.intel.com>
 <20181217140811.GA4601@linux.intel.com>
 <20181217173106.GB12491@linux.intel.com>
 <20181217174935.GA12617@linux.intel.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181217174935.GA12617@linux.intel.com>
User-Agent: Mutt/1.5.24 (2015-08-30)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, Dec 17, 2018 at 07:49:35PM +0200, Jarkko Sakkinen wrote:
> On Mon, Dec 17, 2018 at 09:31:06AM -0800, Sean Christopherson wrote:
> > This doesn't work as-is.  sgx_encl_release() needs to use sgx_free_page()
> > and not __sgx_free_page() so that we get a WARN() if the page can't be
> > freed.  sgx_invalidate() needs to use __sgx_free_page() as freeing a page
> > can fail due to running concurrently with reclaim.  I'll play around with
> > the code a bit, there's probably a fairly clean way to share code between
> > the two flows.
> 
> Hmm... but why issue a warning in that case? It should be legit
> behaviour.

No, EREMOVE should never fail if the enclave is being released, i.e. all
references to the enclave are gone.  And failure during sgx_encl_release()
means we leaked an EPC page, which warrants a WARN.

The only legitimate reason __sgx_free_page() can fail in sgx_invalidate()
is because a page might be in the process of being reclaimed.  We could
theoretically WARN on EREMOVE failure in that case, but it'd make the code
a little fragile and it's not "fatal" in the sense that we get a second
chance to free the page during sgx_encl_release().

And unless I missed something, using sgx_invalidate() means were' leaking
all sgx_encl_page structs as well as the radix tree entries.
 
> > sgx_encl_release_worker() calls do_unmap() without checking the validity
> > of the page tables[1].  As is, the code doesn't even guarantee mm_struct
> > itself is valid.
> > 
> > The easiest fix I can think of is to add a SGX_ENCL_MM_RELEASED flag
> > that is set along with SGX_ENCL_DEAD in sgx_mmu_notifier_release(), and
> > only call do_unmap() if SGX_ENCL_MM_RELEASED is false.  Note that this
> > means we cant unregister the mmu_notifier until after do_unmap(), but
> > that's true no matter what since we're relying on the mmu_notifier to
> > hold a reference to mm_struct.  Patch attached.
> 
> OK, the fix change makes sense but I'm thinking that would it be a
> better idea just to set mm NULL and check that instead?

That makes sense.
