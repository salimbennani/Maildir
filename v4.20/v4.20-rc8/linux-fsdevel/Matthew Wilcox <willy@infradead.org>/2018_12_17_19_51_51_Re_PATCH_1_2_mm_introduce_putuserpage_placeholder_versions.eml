Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 08:49:15 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 2E9CC5805FC;
	Mon, 17 Dec 2018 11:55:16 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by fmsmga004-1.fm.intel.com with ESMTP; 17 Dec 2018 11:55:15 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Ar9cjIh9HvF8whf9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1+wSIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CS2RPXthfWTFCDIOy?=
 =?us-ascii?q?YIQAE/cOMuRWoInmv1sDrwCzBRWwCO/z1jNEmmX70bM83u88EQ/GxgsgH9cWvX?=
 =?us-ascii?q?rTttr1KLsSUeCrw6jG0D7Mb/JW2TPh54jPfREqvPaBXLxxccrVzUkuFxjIjlSW?=
 =?us-ascii?q?qYzrJTOazPkCvHaB4OV9T+6vjHQnqw5orzWp28wiiZHJi5oLxlzY8Sh12ps5KN?=
 =?us-ascii?q?OmREJhfNKpE4dcuzubOoZ0Ws8uXmVltSUgxrEbt5O2fjIGxIo7yxLBcfCLboaF?=
 =?us-ascii?q?7xzlWe2MOzl3nmhld6i6hxuq8Uiv1On8Vs6s3VZUoSpKjMPMumoO1xPN8MiHTO?=
 =?us-ascii?q?Vy/kO71TaIzQDT5flIIUEylaXFN54s2qA8moYXvEjZAyP7llv6gLWLekgn5uSk?=
 =?us-ascii?q?8eXqb7f+qp+ZLYB0iwX+Mqo0msy4BOQ1KgwOX2md+eSh27zv5E75T6tQjv0wjK?=
 =?us-ascii?q?bZtInWJcMVp66/HQBVyJ0u6wiwDzi4ytQUh3oHI0xfeBKBkYfpP0vCIPfiDfew?=
 =?us-ascii?q?m1isiitkx+jaPr39BZXANnzDkLbifblj8UJdxxczwMtb55JVDLEBPf3yVlXwtN?=
 =?us-ascii?q?zeEh82LQi0z/z7B9V604MUQXiPDbOBMKPOrV+I4foiI+mWa48UpDbyMf8l6+Tu?=
 =?us-ascii?q?jX8kg1Ade6ap0IATaHC5GPRmPkqYbWDtgtcHDWcFoA4+QPb2h12FVD5Zf2yyUL?=
 =?us-ascii?q?4k5jEnFIKmCp/ORoKqgLOfxiu7HZpWZmZAClCLCnroc4SEW/ERaCOdOMNhkzoE?=
 =?us-ascii?q?VaS/RI8lzx2hqAj6y79/JOrO5iIYrY7j1MRy5+DLjx4y7jx0D8Oe022XVWF7hG?=
 =?us-ascii?q?EISiQy3KB+p0x911iC3bJ5g/xeCdxc+fdJXh0mOp7byuxwE8ryVR7ZfteVVFam?=
 =?us-ascii?q?Rc2rATIrQdI32dMOZ0d9FM+kjhDMxCeqB74Vl7qWBJ076K7c3n7xJ9pjxHbCzq?=
 =?us-ascii?q?Uuk14mQs5XP228mqF/7xTTB5LOk0iBiqmlb7oc0zDX+GeD12WOulpYXxB2UanC?=
 =?us-ascii?q?WXAfZU7WrdDi60PGTr+uD6knMwRbxc6DLKtKdsPmjVFcSPj/P9TeZnq7m32sCh?=
 =?us-ascii?q?aQ2rOMcI3qdn0A0yrHFkgLjRof/XacOgg4HSeuvWTeASdqFVLuZUPs7OZ/pGm6?=
 =?us-ascii?q?Tk8y0wGFcUlh26Cp9R4SgPyWU+kT0a4cuCc9tzV0G06w387XC9qFoAphYKVcYN?=
 =?us-ascii?q?Mn7Fdbz27ZsBZ9PpihL6BkiV4TaAB3v0Lo1xVqBYRMi8kqrHU2zAVsLaKUyk9O?=
 =?us-ascii?q?dzSd3ZroIL3YNnHy/Ayza67RwlzRytKW9bkA6fsmq1TvphqmFlc//Hp91dlV0H?=
 =?us-ascii?q?yc5ovRAQoWUJLxVFs39hdgq7HbZCk9+53b1Xl2PaaotT/C3sojBPE5xRa4Y9df?=
 =?us-ascii?q?LKSEGRfyEs0HHcShNPYmmlmpbh0eOuBS+7U5P8end/uAxa6qM/xsnDOgjWRb/o?=
 =?us-ascii?q?991liA+DZ7Su7Nx5wF2e2X3hObVzfgi1esqtr3mYFYaj4IBGqw1C/kCJRXZqJs?=
 =?us-ascii?q?Z4YLCH6iLNGtydV6mpHiRWRY9FmlB14d3M+peBySb0Hy3AFK1EQXp2CnljW8zz?=
 =?us-ascii?q?Bujz4pqa+f1jTUw+v+bBoHJnJLRG56gFbsIIi4ldAbUFKzbwg0khuo/kL6x6ld?=
 =?us-ascii?q?pKRiIGjfW0ZIfy7qL258Vqu8rKaNY8lK6JkwqyVYTPy8YUyGSr76uxYa0TnsH3?=
 =?us-ascii?q?FdxDA4cDGmoI75kAZ5iGKeLXZzqmTWecdryBfb5dzcQ+NR3zUcSCl5jznXGkaz?=
 =?us-ascii?q?P92z8dqIkJfDt/i0V3i9WZ1LbSnr0YSAuTO75GJwBh2zhfKzmtzhEQUh1S/71t?=
 =?us-ascii?q?9qVTjHrRrmY4nr0bi6PvxjfkVyGFD87M96EJlkkoQsnJEQxWQahpKN8HoEi2jz?=
 =?us-ascii?q?MM9X2aLjbHUXQz4LzMXY4Azk2E1lM3KIyJj1VnSbwst9eda6Znka1T4678BPEK?=
 =?us-ascii?q?2U9qBLnTNpolqkqgLcef19njYeyfQ08nIbjf8GuBExziqDGLAdBldXPTbjlxmT?=
 =?us-ascii?q?69C+raNXZHugcLSq1Up+m8yhA6+Gog1GRHn5fZIiFzdq7spjKFLMzGHz6ob8dd?=
 =?us-ascii?q?nMatITsweYkhbagOhTNZIxjeEKhSt8NGL5vH0lzfM7jBN00ZG7uoiHN3ti/Kaj?=
 =?us-ascii?q?DhFEMT31YtsZ+ivxgqZGgsaWw4evE416FToRW5voSe+oHCgWtfT6LAuOFDw8qn?=
 =?us-ascii?q?GGGbvQBwOf6UFmr27RHJCvLX2YOH4ZzdB6ThmHOENfmBwUXCk9npMhFACl3snh?=
 =?us-ascii?q?f1li5jwL+l70sBhMyv9rNxniVGfQvhyoZywwSJieKhpW8w5D613UMcyY8uJ8AS?=
 =?us-ascii?q?VY8oe9owyKL2yRfx5IAn0RWkyYG1DjOaGj5NnH8+iFH+q+MuHBYbOUpexFUPeI?=
 =?us-ascii?q?w52v35Bi/zaNMMWPI3ZjA+c62kpFQXB2BcDZly8TRCwQkiLHd9Sbqwuk+i1rss?=
 =?us-ascii?q?C/9+zmWALx6ouOCLtSMtRv9wq1gaeZMO6Qizh2KSxF1pMX3nLIzLkf3FgPiyBh?=
 =?us-ascii?q?bTWtELIAtTLTQ6LUgKNYExkbayZrPstS8608xhVNOdLcit7tzLF4k+U6C01bWl?=
 =?us-ascii?q?3hgM2pYc0KLnq5NFPGAkaLKbuHKSfKw8HxfaOzV7lQgP9IuB23vDaRC1XjMSib?=
 =?us-ascii?q?lzn1SxCvNvlBjD2aPBxboo2ybgxhBnTjTN34bB22K9t3jTwwwb0piXLGL28cMT?=
 =?us-ascii?q?5gc0xTqr2c9z9XgvJ6G2ZZ9HpqMfGEmzqF7+nfMpsXseFkAiJxl+Jb5nQ107pU?=
 =?us-ascii?q?7CFeS/xzlyvftdpuo1CgkumSxTtrShtOqjBXhI2VuUVuI7nW9p5FWSWMwBVYz2?=
 =?us-ascii?q?iKDBEH7/RhC8b0tugEyNfLlbnoJR9Y/t7U9NdaDM/RfpGpKn0kZD/gBCLUARRN?=
 =?us-ascii?q?cj+vPmbPzxhCkfWW51WUqJYgo5ThkZZITaVUAg9mXsgGA1hoSYRRaKx8WSkpxP?=
 =?us-ascii?q?vC1JYF?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AdAADm/hdch0O0hNFjGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBVAMBAQELAQGBWYIRJ5gNUAEBBoE1FIkPkGcBh1YiNwYNAQMBAQEBAQE?=
 =?us-ascii?q?CARMBAQEKCwkIKSMMQgEOAYFkJAGCYQEBAQECAQECNwYBATcBBQkBAQoOCgkTE?=
 =?us-ascii?q?gMMBSghGBaCPEuBdAUIBac7gh+CdgEBBYckCIw+F3iBB4QjhG2Fc4s4hRWQTgm?=
 =?us-ascii?q?IFok5I4Fdj3UsmxSBeDMaCCgIO4JsghsMF4hehWAeM4EFAQGFRYVegkwBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AdAADm/hdch0O0hNFjGwEBAQEDAQEBBwMBAQGBVAMBAQE?=
 =?us-ascii?q?LAQGBWYIRJ5gNUAEBBoE1FIkPkGcBh1YiNwYNAQMBAQEBAQECARMBAQEKCwkIK?=
 =?us-ascii?q?SMMQgEOAYFkJAGCYQEBAQECAQECNwYBATcBBQkBAQoOCgkTEgMMBSghGBaCPEu?=
 =?us-ascii?q?BdAUIBac7gh+CdgEBBYckCIw+F3iBB4QjhG2Fc4s4hRWQTgmIFok5I4Fdj3Usm?=
 =?us-ascii?q?xSBeDMaCCgIO4JsghsMF4hehWAeM4EFAQGFRYVegkwBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,366,1539673200"; 
   d="scan'208";a="57839170"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 17 Dec 2018 11:55:01 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726574AbeLQTv6 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 17 Dec 2018 14:51:58 -0500
Received: from bombadil.infradead.org ([198.137.202.133]:34528 "EHLO
        bombadil.infradead.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726753AbeLQTv6 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 17 Dec 2018 14:51:58 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
        d=infradead.org; s=bombadil.20170209; h=In-Reply-To:Content-Type:MIME-Version
        :References:Message-ID:Subject:Cc:To:From:Date:Sender:Reply-To:
        Content-Transfer-Encoding:Content-ID:Content-Description:Resent-Date:
        Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:
        List-Help:List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
         bh=ubZF0Vz7S/rPDOpsIn/lA8pWsOPWyZA0UspKdV4JvUw=; b=ZCHjl8ahFTgyM52RcTBTBpy9+
        6YzfU5E89mjJKiQP9rUVNUqwY6kKss7oLF/EEUs01jKS9IGOjujCLIDD8jICkkba8pSBFEM7AAg9D
        8cO0GqM7pbqgFFGvUStAEd3QYqfJPzIEgRoW6BMQ3myHeTsSRLnjijWbodwmi+Itpio/+wK0KAPnc
        XMYVGjKQi6D9lF3ck2LrfL/oAhrOUR3rA70BMcE2COohd0OpvK5MNb/VRV7KEQQWwgUFnnHkCUZ+n
        DkBghkUunoFtRAa3wBX0ASTvIgFdk38k16HgAueBfWRL5BhL/AILobu5sf8MDCMOZPKnE8pgymGCi
        xqKJnJXsw==;
Received: from willy by bombadil.infradead.org with local (Exim 4.90_1 #2 (Red Hat Linux))
        id 1gYyvf-0003iI-7b; Mon, 17 Dec 2018 19:51:51 +0000
Date: Mon, 17 Dec 2018 11:51:51 -0800
From: Matthew Wilcox <willy@infradead.org>
To: Jerome Glisse <jglisse@redhat.com>
Cc: Dave Chinner <david@fromorbit.com>, Jan Kara <jack@suse.cz>,
        John Hubbard <jhubbard@nvidia.com>,
        Dan Williams <dan.j.williams@intel.com>,
        John Hubbard <john.hubbard@gmail.com>,
        Andrew Morton <akpm@linux-foundation.org>,
        Linux MM <linux-mm@kvack.org>, tom@talpey.com,
        Al Viro <viro@zeniv.linux.org.uk>, benve@cisco.com,
        Christoph Hellwig <hch@infradead.org>,
        Christopher Lameter <cl@linux.com>,
        "Dalessandro, Dennis" <dennis.dalessandro@intel.com>,
        Doug Ledford <dledford@redhat.com>,
        Jason Gunthorpe <jgg@ziepe.ca>,
        Michal Hocko <mhocko@kernel.org>, mike.marciniszyn@intel.com,
        rcampbell@nvidia.com,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        linux-fsdevel <linux-fsdevel@vger.kernel.org>
Subject: Re: [PATCH 1/2] mm: introduce put_user_page*(), placeholder versions
Message-ID: <20181217195150.GP10600@bombadil.infradead.org>
References: <3c4d46c0-aced-f96f-1bf3-725d02f11b60@nvidia.com>
 <20181208022445.GA7024@redhat.com>
 <20181210102846.GC29289@quack2.suse.cz>
 <20181212150319.GA3432@redhat.com>
 <20181212214641.GB29416@dastard>
 <20181214154321.GF8896@quack2.suse.cz>
 <20181216215819.GC10644@dastard>
 <20181217181148.GA3341@redhat.com>
 <20181217183443.GO10600@bombadil.infradead.org>
 <20181217194759.GB3341@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181217194759.GB3341@redhat.com>
User-Agent: Mutt/1.9.2 (2017-12-15)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, Dec 17, 2018 at 02:48:00PM -0500, Jerome Glisse wrote:
> On Mon, Dec 17, 2018 at 10:34:43AM -0800, Matthew Wilcox wrote:
> > On Mon, Dec 17, 2018 at 01:11:50PM -0500, Jerome Glisse wrote:
> > > On Mon, Dec 17, 2018 at 08:58:19AM +1100, Dave Chinner wrote:
> > > > Sure, that's a possibility, but that doesn't close off any race
> > > > conditions because there can be DMA into the page in progress while
> > > > the page is being bounced, right? AFAICT this ext3+DIF/DIX case is
> > > > different in that there is no 3rd-party access to the page while it
> > > > is under IO (ext3 arbitrates all access to it's metadata), and so
> > > > nothing can actually race for modification of the page between
> > > > submission and bouncing at the block layer.
> > > > 
> > > > In this case, the moment the page is unlocked, anyone else can map
> > > > it and start (R)DMA on it, and that can happen before the bio is
> > > > bounced by the block layer. So AFAICT, block layer bouncing doesn't
> > > > solve the problem of racing writeback and DMA direct to the page we
> > > > are doing IO on. Yes, it reduces the race window substantially, but
> > > > it doesn't get rid of it.
> > > 
> > > So the event flow is:
> > >     - userspace create object that match a range of virtual address
> > >       against a given kernel sub-system (let's say infiniband) and
> > >       let's assume that the range is an mmap() of a regular file
> > >     - device driver do GUP on the range (let's assume it is a write
> > >       GUP) so if the page is not already map with write permission
> > >       in the page table than a page fault is trigger and page_mkwrite
> > >       happens
> > >     - Once GUP return the page to the device driver and once the
> > >       device driver as updated the hardware states to allow access
> > >       to this page then from that point on hardware can write to the
> > >       page at _any_ time, it is fully disconnected from any fs event
> > >       like write back, it fully ignore things like page_mkclean
> > > 
> > > This is how it is to day, we allowed people to push upstream such
> > > users of GUP. This is a fact we have to live with, we can not stop
> > > hardware access to the page, we can not force the hardware to follow
> > > page_mkclean and force a page_mkwrite once write back ends. This is
> > > the situation we are inheriting (and i am personnaly not happy with
> > > that).
> > > 
> > > >From my point of view we are left with 2 choices:
> > >     [C1] break all drivers that do not abide by the page_mkclean and
> > >          page_mkwrite
> > >     [C2] mitigate as much as possible the issue
> > > 
> > > For [C2] the idea is to keep track of GUP per page so we know if we
> > > can expect the page to be written to at any time. Here is the event
> > > flow:
> > >     - driver GUP the page and program the hardware, page is mark as
> > >       GUPed
> > >     ...
> > >     - write back kicks in on the dirty page, lock the page and every
> > >       thing as usual , sees it is GUPed and inform the block layer to
> > >       use a bounce page
> > 
> > No.  The solution John, Dan & I have been looking at is to take the
> > dirty page off the LRU while it is pinned by GUP.  It will never be
> > found for writeback.
> > 
> > That's not the end of the story though.  Other parts of the kernel (eg
> > msync) also need to be taught to stay away from pages which are pinned
> > by GUP.  But the idea is that no page gets written back to storage while
> > it's pinned by GUP.  Only when the last GUP ends is the page returned
> > to the list of dirty pages.
> > 
> > >     - block layer copy the page to a bounce page effectively creating
> > >       a snapshot of what is the content of the real page. This allows
> > >       everything in block layer that need stable content to work on
> > >       the bounce page (raid, stripping, encryption, ...)
> > >     - once write back is done the page is not marked clean but stays
> > >       dirty, this effectively disable things like COW for filesystem
> > >       and other feature that expect page_mkwrite between write back.
> > >       AFAIK it is believe that it is something acceptable
> > 
> > So none of this is necessary.
> 
> With the solution you are proposing we loose GUP fast and we have to
> allocate a structure for each page that is under GUP, and the LRU
> changes too. Moreover by not writing back there is a greater chance
> of data loss.

Why can't you store the hmm_data in a side data structure?  Why does it
have to be in struct page?
