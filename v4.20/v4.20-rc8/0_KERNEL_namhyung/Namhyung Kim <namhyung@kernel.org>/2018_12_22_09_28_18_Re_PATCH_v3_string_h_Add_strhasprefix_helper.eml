Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:58:33 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 92DF2580522;
	Sat, 22 Dec 2018 10:14:35 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Dec 2018 10:14:35 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AkYNs8hJmsWoZt6yw8tmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgUKfX/rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZUMhfVzJPDJ6/?=
 =?us-ascii?q?YYsBAOUOIftXoIvzqFsVtRuzBxKhBP/zxjJSmnP6wbc33uYnHArb3AIgBdUOsH?=
 =?us-ascii?q?HModvtLqgSVOC1zanVzTXFYPNdxDLz6InNchs8pvyMW6h/cc/RyUgvCgPFiFqQ?=
 =?us-ascii?q?pJfmPzyLzOQNtXaU7+56WeKokW4npBh8rz6yzckvkonEnpwZxkzA+Clj3Yo4K8?=
 =?us-ascii?q?O0RFRmbdOnDJdcrSCXOoluTs8/QGxkpjw2xqMbtZKnZiQG1Ygryh/FZ/Cad4WF?=
 =?us-ascii?q?4xTuX/uLLzhinnJqYre/ig6y8Ue+zu38UdG50EhFriVbiNnArHMN2ALJ6siBVP?=
 =?us-ascii?q?R9+l2t2TGV1wDc8u1EIEY0mrTHK5M53LI8ip4evV7eEiL4hkn6lrKae0Y49uSy?=
 =?us-ascii?q?6unqYK3qppqGOI91jgH+PL4umsu6AekgNggOXm6b+fmz1bH6/k32Xq9Kjvsona?=
 =?us-ascii?q?ndqZzaIsoapqinDA9PyYsj9Rm/ACm80NgCnnkIMkhFeBSZgIjtIV3OJ+r4Dfin?=
 =?us-ascii?q?j1S2jDhr3+zGPqHmApjVKnjDkbThcqhn509T1Qo+1tRf55NSCrEcL/P/QE7xtN?=
 =?us-ascii?q?rEDhAnNwy42froCNJ41okGQ2KAHreZML/OsV+P/u8vI/ODZI4JuDnnLPgp/f7u?=
 =?us-ascii?q?jWIjll8bcqmkxp8XaHG+HvR7LESVe3vsgtEdEWgUugoyVvDliFqHUTRLfXa9Q7?=
 =?us-ascii?q?o85i0nCIKhFYrMXJutgLyG3Ce4BJFWfHpJClKXHHfsdoWEXeoMaS2ILs9glDwE?=
 =?us-ascii?q?SaauS4s72R6ysw/6zqJtLvDI9S0AqZLjyN916vXQlR4o8zx4FcCd02CXQGFykW?=
 =?us-ascii?q?MFXDs23KF5oUxgxVaPy6l4g/pEFdNN4/NFSBs1NZnZz+ZiEdD9RhrBfsuVSFah?=
 =?us-ascii?q?WtipHCs+TswvzNMUY0ZyAdOijgvd0CqsBLMVk7+LBJkw8q/H23jxJsB9y2vJ1a?=
 =?us-ascii?q?U7jlkmRNdPOnOihqJl6wfTAIvJmV2Dl6m2baQcwDLN9GCbwGWTpk5YThB/Xb/F?=
 =?us-ascii?q?XX8FYEvWtsr25kXZQr+qCLQnNBZByMGYJqtLbN3pkUtJRPP5NNvCZGKxnn+6BQ?=
 =?us-ascii?q?yUybOUcIrqZ2Id0T3BCEgFlgAT+mqGNQg+Byu7v2LSFjtuFUjrY0Pt9+l+p2i2?=
 =?us-ascii?q?Tks1zwGMck1g2KC5+h8ThfyAVfwT2qgItzsmqzVxBFy9xc7ZC8Kcpwp9e6VRec?=
 =?us-ascii?q?ky4FNZ2mPWqQN8PoasILt/hlEDaQt3uUDu1xJpCohblcgqrXUqzBd9KK6C0VNB?=
 =?us-ascii?q?cS+Y0o70OrHNNmby+xWvYbbM2l7CyNaW5rsP6PMgplTjoQGlDFYt/29m0tlVyX?=
 =?us-ascii?q?Sc4JrKAREWUZLwVEY36hd7q6vbYik7+4Pby3lsPbOovT/F3tIjHPElxQq4f9dD?=
 =?us-ascii?q?LKOEExf/E9cbB8eyMuMqgUWmbhUeMOBU6qE0JcKme+Ka16GxOOZvgSypjX5A4I?=
 =?us-ascii?q?B7yU+M8yt8SujV35cK2f2Y3w2HVyvig1elqMz4hYdEZTQKFGql1SfkHJJRZrF1?=
 =?us-ascii?q?fYsTCWauIte7x9Vki572Rn5Y8kWuB1cH2M+vZBqTYEbx3QxW1UQLv3OnnTG0wC?=
 =?us-ascii?q?BzkzEstqCfxjDBw/z+dBobPW5GXGtigk32IYi3jNAaW1KkbxMzmxum5kb6xq5b?=
 =?us-ascii?q?q7p5L2TIRUdIfi72L3xtU6eqt7qCZdJP540ssSlNTOu8ZlWaQKbnoxQGyyPjA3?=
 =?us-ascii?q?dexDcjejCqoJr5mAZ2iGCcLHZ1t3fZfcBwxRHC5N3TX/JR3zwGRDVmhjnTHFSz?=
 =?us-ascii?q?I96p/dCMnZfZru++T36hVoFUcSTzzoOPriq76XdqAR2ihf+znNLnHBM+0S/60d?=
 =?us-ascii?q?lqSCrJoAz9Yonty6S1L+ZnclN0C1/77spwApt+nZcohJEMxXgagY2Y/X8GkWfw?=
 =?us-ascii?q?K9pXw6z/Y2QWRT4X3dHV+hPq11N5LnKG3I/5UnSdws18Z9i1eG8W2yQ979xUB6?=
 =?us-ascii?q?eQ9rBLgSx1ol+gpwLLffd9hisdyecp6HMCn+EJvw8twj+cA78IG0lYIDfslw+J?=
 =?us-ascii?q?792lqKVXZWCvcaW/1UZknNChCq2CrR9YWHrjZpgiGipw5N1lMF3QyH3z9p3keN?=
 =?us-ascii?q?7IYN0IrBKUlBPAj/VPJJI1i/oHni5nOWP7vX04xO83lx1u3ZemvIeZL2Vh5r62?=
 =?us-ascii?q?AhldNjftfcMc5intjbpCnsaRx42vHI9uGjAVU5vzV/6oDCgetff6NwaNDT08rG?=
 =?us-ascii?q?2UGaHEEA+b6UdmqW/PEp+xO3GWInkZ0cttRB2HKENDhwAUWS0wnoQlGQCy2Mzh?=
 =?us-ascii?q?bEB56ygR517/txtM0/9oOAP5UmvFvweobTE0SJeEIRpS7wFC4VrVMMOE4uJyGS?=
 =?us-ascii?q?FY4oOurAiXJmOHYARICHkDWlaYCFD7Irmu+d7A/vCYBuWgLvvOYraOqe1EW/eL?=
 =?us-ascii?q?35Kv1YRm8CiWNsWSJXlvFPk72ktFXXBkFMXVgTQPSyoLly3Ta86Xvguz+ipyrs?=
 =?us-ascii?q?qn6vTkRBrv5ZeTC7tVKdhg4Q22jryZN+GOhCd1MzJY1pIXyH/Mybgf2kMSii50?=
 =?us-ascii?q?ezmsF7QAqTDCTKbKlqBLCB4bbjt5NNFU4KIkwglNJcnbh8vp1r55i/45EUtKWU?=
 =?us-ascii?q?b9lcGpe8MKJXqwNFfGBEaNKbSHKifHw8DxYaOgV7JQiP9YuAG3uTaeC0XjJCiM?=
 =?us-ascii?q?lyH1VxCzNuFBlCGaMwZYuIG4cxZtD3DsTdPmahKhNt93giY7wbk1hnPMKG4dPi?=
 =?us-ascii?q?Jwc0JLrr2M8yxYhu9zFHBG7npgfqG4nHOi8+TGJ5Bei/xwHil4i6oO+nMh17ZZ?=
 =?us-ascii?q?8AlLQ/t5nSrJ6Nl0rAf1vPOIz29BWR9OuytNi8qovEAqbaPQ85lRRHDL1BEA92?=
 =?us-ascii?q?OdD1INvdQzWY6ngLxZ1tWazPG7EzxF6d+BuJJEX8U=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ACAABSfh5ch0O0hNFkGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUgMBAQEBAQsBAYNqJ4N+liIUaJZngXEVAQEYEwGHMCI1CA0?=
 =?us-ascii?q?BAwEBAQEBAQIBEwEBAQoLCQgpIwxCARABgWYpAYJmAQEBAQIBAQIgBBkBOAEDA?=
 =?us-ascii?q?gkBAQUFGAICBRMOAgIDDAUgAQUBIhMFgx2BagMNBwEFmi88ixl8M4J3BYUADYI?=
 =?us-ascii?q?VAgYSeYoYgRwXgX+BEYJdNYgJMYImAotFhR2QaQmCKY80DBiJe4drLZlVBgIJB?=
 =?us-ascii?q?w8hgScCggozGggoCIMnghuDbYpiMTKBBQEBh3aFegEB?=
X-IPAS-Result: =?us-ascii?q?A0ACAABSfh5ch0O0hNFkGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUgMBAQEBAQsBAYNqJ4N+liIUaJZngXEVAQEYEwGHMCI1CA0BAwEBAQEBAQIBE?=
 =?us-ascii?q?wEBAQoLCQgpIwxCARABgWYpAYJmAQEBAQIBAQIgBBkBOAEDAgkBAQUFGAICBRM?=
 =?us-ascii?q?OAgIDDAUgAQUBIhMFgx2BagMNBwEFmi88ixl8M4J3BYUADYIVAgYSeYoYgRwXg?=
 =?us-ascii?q?X+BEYJdNYgJMYImAotFhR2QaQmCKY80DBiJe4drLZlVBgIJBw8hgScCggozGgg?=
 =?us-ascii?q?oCIMnghuDbYpiMTKBBQEBh3aFegEB?=
X-IronPort-AV: E=Sophos;i="5.56,385,1539673200"; 
   d="scan'208";a="68004163"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 22 Dec 2018 10:14:33 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2390740AbeLVSOb (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Sat, 22 Dec 2018 13:14:31 -0500
Received: from mail-pl1-f196.google.com ([209.85.214.196]:37780 "EHLO
        mail-pl1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1731181AbeLVSOa (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 22 Dec 2018 13:14:30 -0500
Received: by mail-pl1-f196.google.com with SMTP id b5so3946869plr.4
        for <linux-kernel@vger.kernel.org>; Sat, 22 Dec 2018 10:14:30 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=sender:date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=p8wijyBRq2p+xnfMxdAbjzvJMsJ1ju2zFr2YZuH91HM=;
        b=bFO4/c80T39m7A9SO3ZrxnYxidIuP4xdGzWpr3b3wWvRW3S8On3i6LcolxKl6hoKNv
         7ibjqYkGnFd2hJq+kcbf54e6NEpkCfPRabSttzhuMxxtrizdLLK05RHtXiuZSsLYzpwh
         N9S1O2eoJr9Uh4beihzZbAUp/fm22F5PTRCmeZCsDbHyzXpji4divqxXZSTpNwqCuv/K
         XAPFxjY0QZlrxhlXtO+704TcnWoWQNWJB1vQc6UBSfuXeNZgqlN7Df05zvK38yp397i7
         YRiqAtRPdt6wNRvNZ5lCmI+LeXTVqh44S+BZRznUUOnhGek2iIlURrNWcP2AHbMPtbKJ
         u2VQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:sender:date:from:to:cc:subject:message-id
         :references:mime-version:content-disposition:in-reply-to:user-agent;
        bh=p8wijyBRq2p+xnfMxdAbjzvJMsJ1ju2zFr2YZuH91HM=;
        b=tdkiFvrwlRkrnCa3Atq3TMRWgxpOe+40bxc65my6M9bY4nJxFAOYR9IhvMWqa0DJlV
         URKHqDsbCF/rfyLEhESzzbOzTs96GW8hrTGURPHupzZkMcDWfb29pIuC9jOeM2Pebhbf
         T87L2ztfTSTMcoBLU7G6/9oEg+DS/pKwyLzmZrhuEDa1PIkWQ61O+bY+Aiz2iUX0s/b3
         N9oaUb+HUnYiDpZ1mAZIJHKn5D9iDbvn7HAPt6dC99Y+fbrfRjKXxIN5VEUcEO2Dcbkb
         a/68D4eYJKqG3t9Dtk2jPDJkRxoSYLYNtWmhKYLcaL+pIuOUlBHGPQwhUNKZts7HT5rF
         fyLQ==
X-Gm-Message-State: AJcUukc4FgwtNZpx5lNi0KmwqQJbmXZrknt1lnnY1eqdlzRqXHpDIRqo
        8lmgNVM5wqUXgY2LWoyFXfxGgz+5
X-Google-Smtp-Source: ALg8bN7QISYwMn7Sd/rNKmnFK2z7LAZbtkjLT4GczUsp0vsfPehJ4JSKOFgw95fRHBKfhJGJH8k2gQ==
X-Received: by 2002:a17:902:6bc9:: with SMTP id m9mr5747484plt.173.1545470905080;
        Sat, 22 Dec 2018 01:28:25 -0800 (PST)
Received: from danjae.aot.lge.com ([182.210.106.196])
        by smtp.gmail.com with ESMTPSA id l70sm28901632pgd.20.2018.12.22.01.28.21
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Sat, 22 Dec 2018 01:28:23 -0800 (PST)
Date: Sat, 22 Dec 2018 18:28:18 +0900
From: Namhyung Kim <namhyung@kernel.org>
To: Steven Rostedt <rostedt@goodmis.org>
Cc: Joe Perches <joe@perches.com>, LKML <linux-kernel@vger.kernel.org>,
        Linus Torvalds <torvalds@linux-foundation.org>,
        Ingo Molnar <mingo@kernel.org>,
        Andrew Morton <akpm@linux-foundation.org>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Masami Hiramatsu <mhiramat@kernel.org>,
        Tom Zanussi <zanussi@kernel.org>, kernel-team@lge.com
Subject: Re: [PATCH v3] string.h: Add str_has_prefix() helper
Message-ID: <20181222092818.GA7610@danjae.aot.lge.com>
References: <20181221181316.6d32bdc8@gandalf.local.home>
 <b77cd7378434bf8ea804f2fd0caa662b9b7d07f0.camel@perches.com>
 <20181221182507.2fdc756f@gandalf.local.home>
 <20181221183817.5b3eecdd@gandalf.local.home>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
In-Reply-To: <20181221183817.5b3eecdd@gandalf.local.home>
User-Agent: Mutt/1.11.1 (2018-12-01)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Steve,

On Fri, Dec 21, 2018 at 06:38:17PM -0500, Steven Rostedt wrote:
> On Fri, 21 Dec 2018 18:25:07 -0500
> Steven Rostedt <rostedt@goodmis.org> wrote:
> 
> > On Fri, 21 Dec 2018 15:19:33 -0800
> > Joe Perches <joe@perches.com> wrote:
> > 
> > > I believe this should be bool.
> > > 
> > > I don't find a use for non-zero assigned len value in the kernel
> > > for strncmp and I believe the function should simply be:
> > > 
> > > static inline bool str_has_prefix(const char *str, const char prefix[])
> > > {
> > > 	return !strncmp(str, prefix, strlen(prefix));
> > > }  
> > 
> > diff --git a/drivers/scsi/sd.c b/drivers/scsi/sd.c
> > index 3bb2b3351e35..e4566b9c2553 100644
> > --- a/drivers/scsi/sd.c
> > +++ b/drivers/scsi/sd.c
> > @@ -172,8 +172,8 @@ cache_type_store(struct device *dev, struct device_attribute *attr,
> >  		 * it's not worth the risk */
> >  		return -EINVAL;
> >  
> > -	if (strncmp(buf, temp, sizeof(temp) - 1) == 0) {
> > -		buf += sizeof(temp) - 1;
> > +	if ((len = str_has_prefix(buf, temp))) {
> > +		buf += len;
> >  		sdkp->cache_override = 1;
> >  	} else {
> >  		sdkp->cache_override = 0;
> > 
> > And there's more places like this.
> >
> 
> Heck, even the tracing code would like this. From the code that started
> this entire discussion:
> 
> -- Steve
> 
> diff --git a/kernel/trace/trace_events_hist.c b/kernel/trace/trace_events_hist.c
> index 9d590138f870..632410c6e6c0 100644
> --- a/kernel/trace/trace_events_hist.c
> +++ b/kernel/trace/trace_events_hist.c
> @@ -4342,12 +4342,13 @@ static int parse_actions(struct hist_trigger_data *hist_data)
>  	unsigned int i;
>  	int ret = 0;
>  	char *str;
> +	int len;
>  
>  	for (i = 0; i < hist_data->attrs->n_actions; i++) {
>  		str = hist_data->attrs->action_str[i];
>  
> -		if (str_has_prefix(str, "onmatch(")) {
> -			char *action_str = str + sizeof("onmatch(") - 1;
> +		if ((len = str_has_prefix(str, "onmatch("))) {
> +			char *action_str = str + len;

IMHO, returning (match) length might confuse people that it might
support partial match and returns the length actually matched rather
than full match.  If I knew it always returns the length of prefix (or
0) why it matters?  Using strlen() in the next line will have same
effect of compiler optimization for the constant strings, no?

		if (str_has_prefix(str, "onmatch(")) {
			char *action_str = str + strlen("onmatch(");

Thanks,
Namhyung


>  
>  			data = onmatch_parse(tr, action_str);
>  			if (IS_ERR(data)) {
> @@ -4355,8 +4356,8 @@ static int parse_actions(struct hist_trigger_data *hist_data)
>  				break;
>  			}
>  			data->fn = action_trace;
> -		} else if (str_has_prefix(str, "onmax(")) {
> -			char *action_str = str + sizeof("onmax(") - 1;
> +		} else if ((len = str_has_prefix(str, "onmax("))) {
> +			char *action_str = str + len;
>  
>  			data = onmax_parse(action_str);
>  			if (IS_ERR(data)) {
