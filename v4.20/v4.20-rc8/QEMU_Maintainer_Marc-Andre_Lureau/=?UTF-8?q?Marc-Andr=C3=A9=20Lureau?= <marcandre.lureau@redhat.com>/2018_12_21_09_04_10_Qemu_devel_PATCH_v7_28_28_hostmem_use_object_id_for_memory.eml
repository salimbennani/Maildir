Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:48:27 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 9FC8C580261
	for <like.xu@linux.intel.com>; Fri, 21 Dec 2018 01:28:54 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 21 Dec 2018 01:28:54 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AsdI+TROvZXuBxYfXWo0l6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0I/n/rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0yRD+s7bpkSAXwhS?=
 =?us-ascii?q?kHKTA3/mLZhc5+jK1UvB2vqAFxw5bWbY+XO/dyY63Qcc8ESmpaRctRSzVBD5mg?=
 =?us-ascii?q?Y4cTE+YMP+BVpJT9qVsUqhu+ABGhCuT1xT9SmnD6xLE30+I8HgHcxgsrAtQAsG?=
 =?us-ascii?q?nOrNrrLqgSTP2+wa7NzTrZdfNZxS3y6I7VfRA7v/6AR7ZwcdfLyUYxDQzFk06d?=
 =?us-ascii?q?qZb7MDyI1uQCqXSb4/B8WuKojm4qsgd8qSWsyMc0koTFmJ4Zx1Pe+Slk3Yo4Js?=
 =?us-ascii?q?e0RFB1bNOkCpdcqiOXO5NoTs8+R2xkojs2x7MYtZKhYSQHy5oqywTBZ/GEdYWD?=
 =?us-ascii?q?/wjtW/yLIThigXJoYLK/iAi28Uin0uD8Usi00E1WripeiNXMuXYN1wHJ5siAUP?=
 =?us-ascii?q?t98V+t2TeJ1w/N9uFJOV44mbbYJpI737I8i5kevV7dEiL4mEj6lrKae0c89uit?=
 =?us-ascii?q?8evnY7HmppGGN49zjwHzKr0uldK6AeQlKwQBQnaU+fqi273n5EH2W7JKjuAwkq?=
 =?us-ascii?q?bFrp/aPsMXpqq4Aw9WzIkv8Rm+Dyq+3dQcnHkHKk9FeR2dg4joPVHOPO73DfOl?=
 =?us-ascii?q?j1uwlzdrwuvLPrvmApXLIXjDlqrhcax6605Gxwo/1cpf6I5MCrEdPPLzXVf8tN?=
 =?us-ascii?q?jZDh86LQO42enmCMhm24MaWGKPBLKZMazIvV+J4OIvP/eDZIsPtDnhLPgl4q2m?=
 =?us-ascii?q?sHkihFVIfbW1xYBFLze8H+96OAOfZnzjhMpHFn0F+Q83TejvgVvFViZPZnG0RO?=
 =?us-ascii?q?Ul6zQmTY6rE4rHFb2rm6GLiSKyH5lKYTJfB1WRVHvlaYiAHu0BcT+fOdNJlDsC?=
 =?us-ascii?q?Wr68DYg72ka1qQX4xrF7e/fS4TASrpn51dJ4tNHUwAg/8CExA8mD3mWlSWZykW?=
 =?us-ascii?q?UVATgs0/NRu0t4n3KKy6M9qvpUD10bw+5TXw4nfcrZxvZxAtb+QA+HesqTRV+7?=
 =?us-ascii?q?as+rDTE4UpQ6xNpYMBU1IMmrkh2Wh3niOLQSjbHeXJE=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AlAADRsBxchxHrdtBkHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGBMIJig32IGV+LHZlsgXMVGBSHLiI0CQ0BAwEBAQEBAQIBEwEBAQoLCQg?=
 =?us-ascii?q?bDi+COgUCAxgOgmEDAwECIAQfCikDAwECBgEBJAIiBAICAwFTGQWDHYICAQSmN?=
 =?us-ascii?q?XwzhUCDaYENgQuLNIIWgRGLG4JXAo9cfZBlBwKRWgwYiXqHZZZdgzaBRoIOMxo?=
 =?us-ascii?q?jgzyCJxcSjhA8MYEHHIwFgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AlAADRsBxchxHrdtBkHQEBBQEHBQGBUQgBCwGBMIJig32?=
 =?us-ascii?q?IGV+LHZlsgXMVGBSHLiI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgbDi+COgUCAxgOg?=
 =?us-ascii?q?mEDAwECIAQfCikDAwECBgEBJAIiBAICAwFTGQWDHYICAQSmNXwzhUCDaYENgQu?=
 =?us-ascii?q?LNIIWgRGLG4JXAo9cfZBlBwKRWgwYiXqHZZZdgzaBRoIOMxojgzyCJxcSjhA8M?=
 =?us-ascii?q?YEHHIwFgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,380,1539673200"; 
   d="scan'208";a="57825213"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 21 Dec 2018 01:28:53 -0800
Received: from localhost ([::1]:44492 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gaH6z-0005S6-4I
	for like.xu@linux.intel.com; Fri, 21 Dec 2018 04:28:53 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:38796)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <marcandre.lureau@redhat.com>) id 1gaGln-0004wb-E5
	for qemu-devel@nongnu.org; Fri, 21 Dec 2018 04:07:00 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <marcandre.lureau@redhat.com>) id 1gaGll-0002dc-5W
	for qemu-devel@nongnu.org; Fri, 21 Dec 2018 04:06:59 -0500
Received: from mx1.redhat.com ([209.132.183.28]:46946)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <marcandre.lureau@redhat.com>)
	id 1gaGlk-0002YV-QU
	for qemu-devel@nongnu.org; Fri, 21 Dec 2018 04:06:57 -0500
Received: from smtp.corp.redhat.com (int-mx04.intmail.prod.int.phx2.redhat.com
	[10.5.11.14])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 633A0A3403
	for <qemu-devel@nongnu.org>; Fri, 21 Dec 2018 09:06:49 +0000 (UTC)
Received: from localhost (ovpn-112-51.ams2.redhat.com [10.36.112.51])
	by smtp.corp.redhat.com (Postfix) with ESMTP id F3A2E17B49;
	Fri, 21 Dec 2018 09:06:47 +0000 (UTC)
From: =?UTF-8?q?Marc-Andr=C3=A9=20Lureau?= <marcandre.lureau@redhat.com>
To: qemu-devel@nongnu.org
Date: Fri, 21 Dec 2018 13:04:10 +0400
Message-Id: <20181221090410.27250-29-marcandre.lureau@redhat.com>
In-Reply-To: <20181221090410.27250-1-marcandre.lureau@redhat.com>
References: <20181221090410.27250-1-marcandre.lureau@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.14
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.39]);
	Fri, 21 Dec 2018 09:06:49 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [PATCH v7 28/28] hostmem: use object id for memory
 region name with >= 4.0
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: imammedo@redhat.com, ehabkost@redhat.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

hostmem-file and hostmem-memfd use the whole object path for the
memory region name, and hostname-ram uses only the path component (the
object id, or canonical path basename):

qemu -m 1024 -object memory-backend-file,id=3Dmem,size=3D1G,mem-path=3D/t=
mp/foo -numa node,memdev=3Dmem -monitor stdio
(qemu) info ramblock
              Block Name    PSize              Offset               Used =
             Total
            /objects/mem    4 KiB  0x0000000000000000 0x0000000040000000 =
0x0000000040000000

qemu -m 1024 -object memory-backend-memfd,id=3Dmem,size=3D1G -numa node,m=
emdev=3Dmem -monitor stdio
(qemu) info ramblock
              Block Name    PSize              Offset               Used =
             Total
            /objects/mem    4 KiB  0x0000000000000000 0x0000000040000000 =
0x0000000040000000

qemu -m 1024 -object memory-backend-ram,id=3Dmem,size=3D1G -numa node,mem=
dev=3Dmem -monitor stdio
(qemu) info ramblock
              Block Name    PSize              Offset               Used =
             Total
                     mem    4 KiB  0x0000000000000000 0x0000000040000000 =
0x0000000040000000

For consistency, change to use object id for -file and -memfd as well
with >=3D 4.0.

Having a consistent naming allows to migrate to different hostmem
backends.

Signed-off-by: Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com>
Reviewed-by: Igor Mammedov <imammedo@redhat.com>
---
 include/sysemu/hostmem.h |  3 ++-
 backends/hostmem-file.c  |  8 ++++----
 backends/hostmem-memfd.c |  2 +-
 backends/hostmem-ram.c   |  9 ++++-----
 backends/hostmem.c       | 36 ++++++++++++++++++++++++++++++++++++
 hw/core/machine.c        | 12 +++++++++++-
 6 files changed, 58 insertions(+), 12 deletions(-)

diff --git a/include/sysemu/hostmem.h b/include/sysemu/hostmem.h
index 6e6bd2c1cb..a023b372a4 100644
--- a/include/sysemu/hostmem.h
+++ b/include/sysemu/hostmem.h
@@ -53,7 +53,7 @@ struct HostMemoryBackend {
=20
     /* protected */
     uint64_t size;
-    bool merge, dump;
+    bool merge, dump, use_canonical_path;
     bool prealloc, force_prealloc, is_mapped, share;
     DECLARE_BITMAP(host_nodes, MAX_NODES + 1);
     HostMemPolicy policy;
@@ -67,5 +67,6 @@ MemoryRegion *host_memory_backend_get_memory(HostMemory=
Backend *backend);
 void host_memory_backend_set_mapped(HostMemoryBackend *backend, bool map=
ped);
 bool host_memory_backend_is_mapped(HostMemoryBackend *backend);
 size_t host_memory_backend_pagesize(HostMemoryBackend *memdev);
+char *host_memory_backend_get_name(HostMemoryBackend *backend);
=20
 #endif
diff --git a/backends/hostmem-file.c b/backends/hostmem-file.c
index 78f058dee2..7a34e25c43 100644
--- a/backends/hostmem-file.c
+++ b/backends/hostmem-file.c
@@ -43,7 +43,7 @@ file_backend_memory_alloc(HostMemoryBackend *backend, E=
rror **errp)
 {
     HostMemoryBackendFile *fb =3D MEMORY_BACKEND_FILE(backend);
 #ifdef CONFIG_POSIX
-    gchar *path;
+    gchar *name;
 #endif
=20
     if (!backend->size) {
@@ -58,14 +58,14 @@ file_backend_memory_alloc(HostMemoryBackend *backend,=
 Error **errp)
     error_setg(errp, "-mem-path not supported on this host");
 #else
     backend->force_prealloc =3D mem_prealloc;
-    path =3D object_get_canonical_path(OBJECT(backend));
+    name =3D host_memory_backend_get_name(backend);
     memory_region_init_ram_from_file(&backend->mr, OBJECT(backend),
-                                     path,
+                                     name,
                                      backend->size, fb->align,
                                      (backend->share ? RAM_SHARED : 0) |
                                      (fb->is_pmem ? RAM_PMEM : 0),
                                      fb->mem_path, errp);
-    g_free(path);
+    g_free(name);
 #endif
 }
=20
diff --git a/backends/hostmem-memfd.c b/backends/hostmem-memfd.c
index 2eb9c827a5..98c9bf3240 100644
--- a/backends/hostmem-memfd.c
+++ b/backends/hostmem-memfd.c
@@ -53,7 +53,7 @@ memfd_backend_memory_alloc(HostMemoryBackend *backend, =
Error **errp)
         return;
     }
=20
-    name =3D object_get_canonical_path(OBJECT(backend));
+    name =3D host_memory_backend_get_name(backend);
     memory_region_init_ram_from_fd(&backend->mr, OBJECT(backend),
                                    name, backend->size,
                                    backend->share, fd, errp);
diff --git a/backends/hostmem-ram.c b/backends/hostmem-ram.c
index 7ddd08d370..24b65d9ae3 100644
--- a/backends/hostmem-ram.c
+++ b/backends/hostmem-ram.c
@@ -16,21 +16,20 @@
=20
 #define TYPE_MEMORY_BACKEND_RAM "memory-backend-ram"
=20
-
 static void
 ram_backend_memory_alloc(HostMemoryBackend *backend, Error **errp)
 {
-    char *path;
+    char *name;
=20
     if (!backend->size) {
         error_setg(errp, "can't create backend with size 0");
         return;
     }
=20
-    path =3D object_get_canonical_path_component(OBJECT(backend));
-    memory_region_init_ram_shared_nomigrate(&backend->mr, OBJECT(backend=
), path,
+    name =3D host_memory_backend_get_name(backend);
+    memory_region_init_ram_shared_nomigrate(&backend->mr, OBJECT(backend=
), name,
                            backend->size, backend->share, errp);
-    g_free(path);
+    g_free(name);
 }
=20
 static void
diff --git a/backends/hostmem.c b/backends/hostmem.c
index af800284e0..0c8ef17653 100644
--- a/backends/hostmem.c
+++ b/backends/hostmem.c
@@ -28,6 +28,16 @@ QEMU_BUILD_BUG_ON(HOST_MEM_POLICY_BIND !=3D MPOL_BIND)=
;
 QEMU_BUILD_BUG_ON(HOST_MEM_POLICY_INTERLEAVE !=3D MPOL_INTERLEAVE);
 #endif
=20
+char *
+host_memory_backend_get_name(HostMemoryBackend *backend)
+{
+    if (!backend->use_canonical_path) {
+        return object_get_canonical_path_component(OBJECT(backend));
+    }
+
+    return object_get_canonical_path(OBJECT(backend));
+}
+
 static void
 host_memory_backend_get_size(Object *obj, Visitor *v, const char *name,
                              void *opaque, Error **errp)
@@ -247,6 +257,11 @@ static void host_memory_backend_init(Object *obj)
     backend->prealloc =3D mem_prealloc;
 }
=20
+static void host_memory_backend_post_init(Object *obj)
+{
+    object_apply_compat_props(obj);
+}
+
 bool host_memory_backend_mr_inited(HostMemoryBackend *backend)
 {
     /*
@@ -395,6 +410,23 @@ static void host_memory_backend_set_share(Object *o,=
 bool value, Error **errp)
     backend->share =3D value;
 }
=20
+static bool
+host_memory_backend_get_use_canonical_path(Object *obj, Error **errp)
+{
+    HostMemoryBackend *backend =3D MEMORY_BACKEND(obj);
+
+    return backend->use_canonical_path;
+}
+
+static void
+host_memory_backend_set_use_canonical_path(Object *obj, bool value,
+                                           Error **errp)
+{
+    HostMemoryBackend *backend =3D MEMORY_BACKEND(obj);
+
+    backend->use_canonical_path =3D value;
+}
+
 static void
 host_memory_backend_class_init(ObjectClass *oc, void *data)
 {
@@ -441,6 +473,9 @@ host_memory_backend_class_init(ObjectClass *oc, void =
*data)
         &error_abort);
     object_class_property_set_description(oc, "share",
         "Mark the memory as private to QEMU or shared", &error_abort);
+    object_class_property_add_bool(oc, "x-use-canonical-path-for-rambloc=
k-id",
+        host_memory_backend_get_use_canonical_path,
+        host_memory_backend_set_use_canonical_path, &error_abort);
 }
=20
 static const TypeInfo host_memory_backend_info =3D {
@@ -451,6 +486,7 @@ static const TypeInfo host_memory_backend_info =3D {
     .class_init =3D host_memory_backend_class_init,
     .instance_size =3D sizeof(HostMemoryBackend),
     .instance_init =3D host_memory_backend_init,
+    .instance_post_init =3D host_memory_backend_post_init,
     .interfaces =3D (InterfaceInfo[]) {
         { TYPE_USER_CREATABLE },
         { }
diff --git a/hw/core/machine.c b/hw/core/machine.c
index 7570408caa..cba79ef7ff 100644
--- a/hw/core/machine.c
+++ b/hw/core/machine.c
@@ -23,7 +23,17 @@
 #include "sysemu/qtest.h"
 #include "hw/pci/pci.h"
=20
-GlobalProperty hw_compat_3_1[] =3D {};
+GlobalProperty hw_compat_3_1[] =3D {
+    {
+        .driver   =3D "memory-backend-file",
+        .property =3D "x-use-canonical-path-for-ramblock-id",
+        .value    =3D "true",
+    },{
+        .driver   =3D "memory-backend-memfd",
+        .property =3D "x-use-canonical-path-for-ramblock-id",
+        .value    =3D "true",
+    },
+};
 const size_t hw_compat_3_1_len =3D G_N_ELEMENTS(hw_compat_3_1);
=20
 GlobalProperty hw_compat_3_0[] =3D {};
--=20
2.20.1.2.gb21ebb671b


