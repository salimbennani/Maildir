Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:47:59 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 9BFBF580522
	for <like.xu@linux.intel.com>; Fri, 21 Dec 2018 01:06:24 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 21 Dec 2018 01:06:24 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AefpZph0eY4EK4SQasmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?seMTLvad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7S60/Vza/4KdxUBLmiD?=
 =?us-ascii?q?kJOTA6/m7VhMx/g75Urh28qRxnwYPaYo6YOOdwc6/BY9waXnFMXtpIVyFbHo+w?=
 =?us-ascii?q?c5cDAugHMO1Fr4f9vVwOrR6mCAerHuzv0CNHimbq0K08zushCxvB1xEmEdITqn?=
 =?us-ascii?q?Tbss/6NLoPWu2yyanH1y/DYO9M1jf79YfIaA4ureuIXbJta8re11MgFx7eg1WK?=
 =?us-ascii?q?t4PqIjOV2f4Rs2SB8+VgUuevhnchpgpsoTav3t8hhpfVio8W0FzI6Dh1zYUvKd?=
 =?us-ascii?q?GmRkN2YcSoHIZSui2CKYd6XscvT3t1tCs01LEKo4O3cSsExZg92RLSaPqKeJWS?=
 =?us-ascii?q?7B35TuaeOzJ4iWpleL2hgxay9lCtyun9VsmvzFZKtTBJktbKtnAQzRDT7dKHSv?=
 =?us-ascii?q?Rl8keg3zaAyRzT5/laLUwolqfXMYMtzqMzm5YJr0jOEC/7lF/rgKKUbkkk//Kn?=
 =?us-ascii?q?6+XjYrXovJ+cMIp0hxnnMqswn8y/HP00PRUQUGiF5+u80KTv8lb+QLVXiP05jr?=
 =?us-ascii?q?fWsIvdKcQfp665ABFa3pws6haiFzqm1NUYnX8aLFNKYh6Hjo7pO03QL/D8F/uw?=
 =?us-ascii?q?n1OskDJwyvDAOb3hBJrNLn7ekLv7erZ98UFcxBIpzd9D/5JUFq0BIPXrV0/1td?=
 =?us-ascii?q?zYDQE2Pxa7wub6E9h90oIeWWSSAq6WKq/SsFmI5v4xLOmIfoMapDH9K/12r8Po?=
 =?us-ascii?q?lmIzzF8BYbGyj9xQbHGjAu8gJUKfbnzxxNAbHiAPtws6SeXsz1qaTT9UYW31Rq?=
 =?us-ascii?q?85+3Q3BZyrCdT+QJuwiumE1Sa/ApoEf21DFxWAHGnlc8CeVu4RZTmOCslmlDMC?=
 =?us-ascii?q?SP6mUYB2zgyktgLx1+96KPHJ8DYTr5Pp2YtJ4LjKmBQvsDB5EcmZ+2eKSW5ygy?=
 =?us-ascii?q?UPXTBl8rp4pBlYw02IlIF+j+bZXfhO/f5AT09uMJfGxOV8B8r/HAbcZNqAVX68?=
 =?us-ascii?q?T9mmCC13RdU0lYxdK31hEsmv20iQlxGhBKUYwuSG?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CuAABkrBxchxHrdtBkHQEBBQEHBQGBV?=
 =?us-ascii?q?AUBCwGBMIJig32IeIsdm18VGBSHLiI3Bg0BAwEBAQEBAQIBEwEBAQoLCQgbDi+?=
 =?us-ascii?q?COgUCAxgOgmEDAwECIAQfCikDAwECBgEBJAIiBAICAwFTGQWDHYICAQSmQnwzh?=
 =?us-ascii?q?UCDaYENgQuLNIIWgRGLG4JXAoknJIYRfZBlBwKRWgwYiXqHZZoTgVyBeDMaI1C?=
 =?us-ascii?q?CbIInFxKOEDwxgQccjAWBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0CuAABkrBxchxHrdtBkHQEBBQEHBQGBVAUBCwGBMIJig32?=
 =?us-ascii?q?IeIsdm18VGBSHLiI3Bg0BAwEBAQEBAQIBEwEBAQoLCQgbDi+COgUCAxgOgmEDA?=
 =?us-ascii?q?wECIAQfCikDAwECBgEBJAIiBAICAwFTGQWDHYICAQSmQnwzhUCDaYENgQuLNII?=
 =?us-ascii?q?WgRGLG4JXAoknJIYRfZBlBwKRWgwYiXqHZZoTgVyBeDMaI1CCbIInFxKOEDwxg?=
 =?us-ascii?q?QccjAWBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,380,1539673200"; 
   d="scan'208";a="56093570"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 21 Dec 2018 01:06:23 -0800
Received: from localhost ([::1]:44348 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gaGlC-0003vn-PX
	for like.xu@linux.intel.com; Fri, 21 Dec 2018 04:06:22 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:37977)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <marcandre.lureau@redhat.com>) id 1gaGjb-0002yM-PR
	for qemu-devel@nongnu.org; Fri, 21 Dec 2018 04:04:44 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <marcandre.lureau@redhat.com>) id 1gaGjV-0000Ym-HH
	for qemu-devel@nongnu.org; Fri, 21 Dec 2018 04:04:41 -0500
Received: from mx1.redhat.com ([209.132.183.28]:48412)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <marcandre.lureau@redhat.com>)
	id 1gaGjT-0000OC-L1
	for qemu-devel@nongnu.org; Fri, 21 Dec 2018 04:04:36 -0500
Received: from smtp.corp.redhat.com (int-mx07.intmail.prod.int.phx2.redhat.com
	[10.5.11.22])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id F0EEF796E8
	for <qemu-devel@nongnu.org>; Fri, 21 Dec 2018 09:04:19 +0000 (UTC)
Received: from localhost (ovpn-112-51.ams2.redhat.com [10.36.112.51])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 5540C10018F8;
	Fri, 21 Dec 2018 09:04:17 +0000 (UTC)
From: =?UTF-8?q?Marc-Andr=C3=A9=20Lureau?= <marcandre.lureau@redhat.com>
To: qemu-devel@nongnu.org
Date: Fri, 21 Dec 2018 13:03:43 +0400
Message-Id: <20181221090410.27250-2-marcandre.lureau@redhat.com>
In-Reply-To: <20181221090410.27250-1-marcandre.lureau@redhat.com>
References: <20181221090410.27250-1-marcandre.lureau@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.22
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.25]);
	Fri, 21 Dec 2018 09:04:20 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [PATCH v7 01/28] hw: apply accel compat properties
 without touching globals
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: imammedo@redhat.com, ehabkost@redhat.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Instead of registering compat properties as globals, let's keep them
in their own array, to avoid mixing with user globals.

Introduce object_apply_global_props() function, to apply compatibility
properties from a GPtrArray.

Signed-off-by: Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com>
Reviewed-by: Igor Mammedov <imammedo@redhat.com>
---
 include/hw/qdev-core.h | 10 ++++++++++
 include/qom/object.h   |  3 +++
 include/sysemu/accel.h |  4 +---
 accel/accel.c          | 12 ------------
 hw/core/qdev.c         |  9 +++++++++
 hw/xen/xen-common.c    |  9 ++++++---
 qom/object.c           | 25 +++++++++++++++++++++++++
 vl.c                   |  1 -
 8 files changed, 54 insertions(+), 19 deletions(-)

diff --git a/include/hw/qdev-core.h b/include/hw/qdev-core.h
index 92851e55df..84e612f473 100644
--- a/include/hw/qdev-core.h
+++ b/include/hw/qdev-core.h
@@ -267,6 +267,16 @@ typedef struct GlobalProperty {
     Error **errp;
 } GlobalProperty;
=20
+static inline void
+compat_props_add(GPtrArray *arr,
+                 GlobalProperty props[], size_t nelem)
+{
+    int i;
+    for (i =3D 0; i < nelem; i++) {
+        g_ptr_array_add(arr, (void *)&props[i]);
+    }
+}
+
 /*** Board API.  This should go away once we have a machine config file.=
  ***/
=20
 DeviceState *qdev_create(BusState *bus, const char *name);
diff --git a/include/qom/object.h b/include/qom/object.h
index bcae3f4951..e0262962b5 100644
--- a/include/qom/object.h
+++ b/include/qom/object.h
@@ -675,6 +675,9 @@ Object *object_new_with_propv(const char *typename,
                               Error **errp,
                               va_list vargs);
=20
+void object_apply_global_props(Object *obj, const GPtrArray *props,
+                               Error **errp);
+
 /**
  * object_set_props:
  * @obj: the object instance to set properties on
diff --git a/include/sysemu/accel.h b/include/sysemu/accel.h
index 637358f430..f331d128e9 100644
--- a/include/sysemu/accel.h
+++ b/include/sysemu/accel.h
@@ -49,7 +49,7 @@ typedef struct AccelClass {
      * global properties may be overridden by machine-type
      * compat_props or user-provided global properties.
      */
-    GlobalProperty *global_props;
+    GPtrArray *compat_props;
 } AccelClass;
=20
 #define TYPE_ACCEL "accel"
@@ -67,8 +67,6 @@ typedef struct AccelClass {
 extern unsigned long tcg_tb_size;
=20
 void configure_accelerator(MachineState *ms);
-/* Register accelerator specific global properties */
-void accel_register_compat_props(AccelState *accel);
 /* Called just before os_setup_post (ie just before drop OS privs) */
 void accel_setup_post(MachineState *ms);
=20
diff --git a/accel/accel.c b/accel/accel.c
index 3da26eb90f..6db5d8f4df 100644
--- a/accel/accel.c
+++ b/accel/accel.c
@@ -119,18 +119,6 @@ void configure_accelerator(MachineState *ms)
     }
 }
=20
-void accel_register_compat_props(AccelState *accel)
-{
-    AccelClass *class =3D ACCEL_GET_CLASS(accel);
-    GlobalProperty *prop =3D class->global_props;
-
-    for (; prop && prop->driver; prop++) {
-        /* Any compat_props must never cause error */
-        prop->errp =3D &error_abort;
-        qdev_prop_register_global(prop);
-    }
-}
-
 void accel_setup_post(MachineState *ms)
 {
     AccelState *accel =3D ms->accelerator;
diff --git a/hw/core/qdev.c b/hw/core/qdev.c
index 6b3cc55b27..53b507164f 100644
--- a/hw/core/qdev.c
+++ b/hw/core/qdev.c
@@ -972,6 +972,15 @@ static void device_initfn(Object *obj)
=20
 static void device_post_init(Object *obj)
 {
+    if (object_dynamic_cast(qdev_get_machine(), TYPE_MACHINE)) {
+        MachineState *m =3D MACHINE(qdev_get_machine());
+        AccelClass *ac =3D ACCEL_GET_CLASS(m->accelerator);
+
+        if (ac->compat_props) {
+            object_apply_global_props(obj, ac->compat_props, &error_abor=
t);
+        }
+    }
+
     qdev_prop_set_globals(DEVICE(obj));
 }
=20
diff --git a/hw/xen/xen-common.c b/hw/xen/xen-common.c
index 6ec14c73ca..4532aa8632 100644
--- a/hw/xen/xen-common.c
+++ b/hw/xen/xen-common.c
@@ -174,18 +174,21 @@ static GlobalProperty xen_compat_props[] =3D {
         .driver =3D "migration",
         .property =3D "send-section-footer",
         .value =3D "off",
-    },
-    { /* end of list */ },
+    }
 };
=20
 static void xen_accel_class_init(ObjectClass *oc, void *data)
 {
     AccelClass *ac =3D ACCEL_CLASS(oc);
+
     ac->name =3D "Xen";
     ac->init_machine =3D xen_init;
     ac->setup_post =3D xen_setup_post;
     ac->allowed =3D &xen_allowed;
-    ac->global_props =3D xen_compat_props;
+    ac->compat_props =3D g_ptr_array_new();
+
+    compat_props_add(ac->compat_props,
+                     xen_compat_props, G_N_ELEMENTS(xen_compat_props));
 }
=20
 #define TYPE_XEN_ACCEL ACCEL_CLASS_NAME("xen")
diff --git a/qom/object.c b/qom/object.c
index 17921c0a71..dbdab0aead 100644
--- a/qom/object.c
+++ b/qom/object.c
@@ -370,6 +370,31 @@ static void object_post_init_with_type(Object *obj, =
TypeImpl *ti)
     }
 }
=20
+void object_apply_global_props(Object *obj, const GPtrArray *props, Erro=
r **errp)
+{
+    Error *err =3D NULL;
+    int i;
+
+    if (!props) {
+        return;
+    }
+
+    for (i =3D 0; i < props->len; i++) {
+        GlobalProperty *p =3D g_ptr_array_index(props, i);
+
+        if (object_dynamic_cast(obj, p->driver) =3D=3D NULL) {
+            continue;
+        }
+        p->used =3D true;
+        object_property_parse(obj, p->value, p->property, &err);
+        if (err !=3D NULL) {
+            error_prepend(&err, "can't apply global %s.%s=3D%s: ",
+                          p->driver, p->property, p->value);
+            error_propagate(errp, err);
+        }
+    }
+}
+
 static void object_initialize_with_type(void *data, size_t size, TypeImp=
l *type)
 {
     Object *obj =3D data;
diff --git a/vl.c b/vl.c
index f5c8ef973c..7971470539 100644
--- a/vl.c
+++ b/vl.c
@@ -2984,7 +2984,6 @@ static void user_register_global_props(void)
  */
 static void register_global_properties(MachineState *ms)
 {
-    accel_register_compat_props(ms->accelerator);
     machine_register_compat_props(ms);
     user_register_global_props();
 }
--=20
2.20.1.2.gb21ebb671b


