Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:56:04 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 6FF0158050C
	for <like.xu@linux.intel.com>; Fri, 21 Dec 2018 15:48:38 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 21 Dec 2018 15:48:38 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AD6ABCBx0Q7cXppjXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?2ukfIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CRWRPQMhfWS9DDYOy?=
 =?us-ascii?q?YIQBAPcPPf5aoof/qFYCsBWzCRWyC+P00TJEmmb20Lcm3+g9DQ3KwAotFM8Ovn?=
 =?us-ascii?q?TOq9X1Mb8fX+evw6jH0D7Nc+1Z2Tbh6InJbxsspvSMXahufsrQ1UkuFhjIjk+O?=
 =?us-ascii?q?poP4PzOazPgNv3KH4OpnUOKikmgqoBxyrDi33soglJXFi4EPxlzZ6Cl0w5w5Kc?=
 =?us-ascii?q?O2RUN7e9KoDZlduzmEO4dqRs4uWXxktSgkxrEcpJK2fyYHxI45yxPcbfGMbpKG?=
 =?us-ascii?q?7Qj5VOmLJDd1nHJld6y7hxa16UWgzuz8VtKo0FZRtCZFnd/Mtm0X2xzU8MiHRe?=
 =?us-ascii?q?Nx/kan2TmRywDe8v9ILVw3mKbBNpIt3709moANvUnNHiL6glj6ga2OekUh4Oeo?=
 =?us-ascii?q?6uDnYrv8pp+bMo95khj+PbormsyiGOg3LxYBX3aF9uS4zbHs5kr5QKhMjvIqjK?=
 =?us-ascii?q?bZq5fWJcAapq66HQBZyIki6wunAjei0dQYm2QHLV1fdBKGiYjpJ0/BIPTiAfij?=
 =?us-ascii?q?hFSslSxmx/bBPr3nDZXNKGXDnK3mfbZn5E5Q0BAzwsxH55JIFrEBJ+r+WkvwtN?=
 =?us-ascii?q?zbEBA1KQO1w/v8BdV514MeX3+PA6CDPKPTt1+I+vwgI+2WaIAJvzb9Lqtt2vj1?=
 =?us-ascii?q?kHVsmUMBZbL7mtwTaWukBbJgJEOWZ2eqhc0OVmIDvw47Reqtj0WeUDlVfDGrUq?=
 =?us-ascii?q?choz02Fo+iXrrFXZ2n1bmI3SOnGc9Pa2VbT1yBD3rsMp+JQuoBcz66JMhnnToZ?=
 =?us-ascii?q?E7+7RNg6yBusuQTmnqdhNffe4SYCtJjuh+RysvTekAx3/zhzBMe11WaLQGdp2G?=
 =?us-ascii?q?QSSGwYxqd69Gl02h+53KlkkbQMEMZe5u9beh03OZ7V06pxDNWkCVGJRcuAVFvz?=
 =?us-ascii?q?GobuOjo2VN9khoZWO0s=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AkAAD6eh1chxHrdtBkHgEGBwaBUQkLA?=
 =?us-ascii?q?YEwgmKMdaUIgXMVGBSDP4NxIjQJDQEDAQEBAQEBAgETAQEBCgsJCBsOL4I6BQI?=
 =?us-ascii?q?DHwEGgmEDAwECQwopAwMBAgYBAUgIAwFTGQWDHYICAQSnSoVAhGaMPxeBQD+Db?=
 =?us-ascii?q?geFGYV1AolLhhWRZQmRXQwYiXqHZZocgUaCDk0jFYMnkFxAMYEHHIwbgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AkAAD6eh1chxHrdtBkHgEGBwaBUQkLAYEwgmKMdaUIgXM?=
 =?us-ascii?q?VGBSDP4NxIjQJDQEDAQEBAQEBAgETAQEBCgsJCBsOL4I6BQIDHwEGgmEDAwECQ?=
 =?us-ascii?q?wopAwMBAgYBAUgIAwFTGQWDHYICAQSnSoVAhGaMPxeBQD+DbgeFGYV1AolLhhW?=
 =?us-ascii?q?RZQmRXQwYiXqHZZocgUaCDk0jFYMnkFxAMYEHHIwbgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,383,1539673200"; 
   d="scan'208";a="57405957"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 21 Dec 2018 15:48:37 -0800
Received: from localhost ([::1]:48905 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gaUWy-0005Lh-SU
	for like.xu@linux.intel.com; Fri, 21 Dec 2018 18:48:36 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:47645)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <mreitz@redhat.com>) id 1gaUWQ-0005GE-O6
	for qemu-devel@nongnu.org; Fri, 21 Dec 2018 18:48:05 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <mreitz@redhat.com>) id 1gaUWP-0004t4-Vz
	for qemu-devel@nongnu.org; Fri, 21 Dec 2018 18:48:02 -0500
Received: from mx1.redhat.com ([209.132.183.28]:39446)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <mreitz@redhat.com>)
	id 1gaUWN-0004qa-QZ; Fri, 21 Dec 2018 18:47:59 -0500
Received: from smtp.corp.redhat.com (int-mx08.intmail.prod.int.phx2.redhat.com
	[10.5.11.23])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 2FD798E5A8;
	Fri, 21 Dec 2018 23:47:59 +0000 (UTC)
Received: from localhost (ovpn-116-185.ams2.redhat.com [10.36.116.185])
	by smtp.corp.redhat.com (Postfix) with ESMTPS id 981F719C7C;
	Fri, 21 Dec 2018 23:47:58 +0000 (UTC)
From: Max Reitz <mreitz@redhat.com>
To: qemu-block@nongnu.org
Date: Sat, 22 Dec 2018 00:47:50 +0100
Message-Id: <20181221234750.23577-4-mreitz@redhat.com>
In-Reply-To: <20181221234750.23577-1-mreitz@redhat.com>
References: <20181221234750.23577-1-mreitz@redhat.com>
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.23
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.28]);
	Fri, 21 Dec 2018 23:47:59 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [PATCH 3/3] iotests: Allow 147 to be run concurrently
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Kevin Wolf <kwolf@redhat.com>, qemu-devel@nongnu.org,
	Max Reitz <mreitz@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

To do this, we need to allow creating the NBD server on various ports
instead of a single one (which may not even work if you run just one
instance, because something entirely else might be using that port).

So we just pick a random port in [32768, 32768 + 1024) and try to create
a server there.  If that fails, we just retry until something sticks.

For the IPv6 test, we need a different range, though (just above that
one).  This is because "localhost" resolves to both 127.0.0.1 and ::1.
This means that if you bind to it, it will bind to both, if possible, or
just one if the other is already in use.  Therefore, if the IPv6 test
has already taken [::1]:some_port and we then try to take
localhost:some_port, that will work -- only the second server will be
bound to 127.0.0.1:some_port alone and not [::1]:some_port in addition.
So we have two different servers on the same port, one for IPv4 and one
for IPv6.

But when we then try to connect to the server through
localhost:some_port, we will always end up at the IPv6 one (as long as
it is up), and this may not be the one we want.

Thus, we must make sure not to create an IPv6-only NBD server on the
same port as a normal "dual-stack" NBD server -- which is done by using
distinct port ranges, as explained above.

Signed-off-by: Max Reitz <mreitz@redhat.com>
---
 tests/qemu-iotests/147 | 98 +++++++++++++++++++++++++++++-------------
 1 file changed, 68 insertions(+), 30 deletions(-)

diff --git a/tests/qemu-iotests/147 b/tests/qemu-iotests/147
index 3e10a9969e..82513279b0 100755
--- a/tests/qemu-iotests/147
+++ b/tests/qemu-iotests/147
@@ -19,13 +19,17 @@
 #
=20
 import os
+import random
 import socket
 import stat
 import time
 import iotests
-from iotests import cachemode, imgfmt, qemu_img, qemu_nbd
+from iotests import cachemode, imgfmt, qemu_img, qemu_nbd, qemu_nbd_pipe
=20
-NBD_PORT =3D 10811
+NBD_PORT_START      =3D 32768
+NBD_PORT_END        =3D NBD_PORT_START + 1024
+NBD_IPV6_PORT_START =3D NBD_PORT_END
+NBD_IPV6_PORT_END   =3D NBD_IPV6_PORT_START + 1024
=20
 test_img =3D os.path.join(iotests.test_dir, 'test.img')
 unix_socket =3D os.path.join(iotests.test_dir, 'nbd.socket')
@@ -88,17 +92,29 @@ class QemuNBD(NBDBlockdevAddBase):
         except OSError:
             pass
=20
+    def _try_server_up(self, *args):
+        status, msg =3D qemu_nbd_pipe('-f', imgfmt, test_img, *args)
+        if status =3D=3D 0:
+            return True
+        if 'Address already in use' in msg:
+            return False
+        self.fail(msg)
+
     def _server_up(self, *args):
-        self.assertEqual(qemu_nbd('-f', imgfmt, test_img, *args), 0)
+        self.assertTrue(self._try_server_up(*args))
=20
     def test_inet(self):
-        self._server_up('-b', 'localhost', '-p', str(NBD_PORT))
+        while True:
+            nbd_port =3D random.randrange(NBD_PORT_START, NBD_PORT_END)
+            if self._try_server_up('-b', 'localhost', '-p', str(nbd_port=
)):
+                break
+
         address =3D { 'type': 'inet',
                     'data': {
                         'host': 'localhost',
-                        'port': str(NBD_PORT)
+                        'port': str(nbd_port)
                     } }
-        self.client_test('nbd://localhost:%i' % NBD_PORT,
+        self.client_test('nbd://localhost:%i' % nbd_port,
                          flatten_sock_addr(address))
=20
     def test_unix(self):
@@ -130,8 +146,13 @@ class BuiltinNBD(NBDBlockdevAddBase):
         except OSError:
             pass
=20
-    def _server_up(self, address, export_name=3DNone, export_name2=3DNon=
e):
+    # Returns False on EADDRINUSE; fails an assertion on other errors.
+    # Returns True on success.
+    def _try_server_up(self, address, export_name=3DNone, export_name2=3D=
None):
         result =3D self.server.qmp('nbd-server-start', addr=3Daddress)
+        if 'error' in result and \
+           'Address already in use' in result['error']['desc']:
+            return False
         self.assert_qmp(result, 'return', {})
=20
         if export_name is None:
@@ -146,20 +167,28 @@ class BuiltinNBD(NBDBlockdevAddBase):
                                      name=3Dexport_name2)
             self.assert_qmp(result, 'return', {})
=20
+        return True
+
+    def _server_up(self, address, export_name=3DNone, export_name2=3DNon=
e):
+        self.assertTrue(self._try_server_up(address, export_name, export=
_name2))
=20
     def _server_down(self):
         result =3D self.server.qmp('nbd-server-stop')
         self.assert_qmp(result, 'return', {})
=20
     def do_test_inet(self, export_name=3DNone):
-        address =3D { 'type': 'inet',
-                    'data': {
-                        'host': 'localhost',
-                        'port': str(NBD_PORT)
-                    } }
-        self._server_up(address, export_name)
+        while True:
+            nbd_port =3D random.randrange(NBD_PORT_START, NBD_PORT_END)
+            address =3D { 'type': 'inet',
+                        'data': {
+                            'host': 'localhost',
+                            'port': str(nbd_port)
+                        } }
+            if self._try_server_up(address, export_name):
+                break
+
         export_name =3D export_name or 'nbd-export'
-        self.client_test('nbd://localhost:%i/%s' % (NBD_PORT, export_nam=
e),
+        self.client_test('nbd://localhost:%i/%s' % (nbd_port, export_nam=
e),
                          flatten_sock_addr(address), export_name)
         self._server_down()
=20
@@ -173,15 +202,19 @@ class BuiltinNBD(NBDBlockdevAddBase):
         self.do_test_inet('shadow')
=20
     def test_inet_two_exports(self):
-        address =3D { 'type': 'inet',
-                    'data': {
-                        'host': 'localhost',
-                        'port': str(NBD_PORT)
-                    } }
-        self._server_up(address, 'exp1', 'exp2')
-        self.client_test('nbd://localhost:%i/%s' % (NBD_PORT, 'exp1'),
+        while True:
+            nbd_port =3D random.randrange(NBD_PORT_START, NBD_PORT_END)
+            address =3D { 'type': 'inet',
+                        'data': {
+                            'host': 'localhost',
+                            'port': str(nbd_port)
+                        } }
+            if self._try_server_up(address, 'exp1', 'exp2'):
+                break
+
+        self.client_test('nbd://localhost:%i/%s' % (nbd_port, 'exp1'),
                          flatten_sock_addr(address), 'exp1', 'node1', Fa=
lse)
-        self.client_test('nbd://localhost:%i/%s' % (NBD_PORT, 'exp2'),
+        self.client_test('nbd://localhost:%i/%s' % (nbd_port, 'exp2'),
                          flatten_sock_addr(address), 'exp2', 'node2', Fa=
lse)
         result =3D self.vm.qmp('blockdev-del', node_name=3D'node1')
         self.assert_qmp(result, 'return', {})
@@ -197,20 +230,25 @@ class BuiltinNBD(NBDBlockdevAddBase):
         except socket.gaierror:
             # IPv6 not available, skip
             return
-        address =3D { 'type': 'inet',
-                    'data': {
-                        'host': '::1',
-                        'port': str(NBD_PORT),
-                        'ipv4': False,
-                        'ipv6': True
-                    } }
+
+        while True:
+            nbd_port =3D random.randrange(NBD_IPV6_PORT_START, NBD_IPV6_=
PORT_END)
+            address =3D { 'type': 'inet',
+                        'data': {
+                            'host': '::1',
+                            'port': str(nbd_port),
+                            'ipv4': False,
+                            'ipv6': True
+                        } }
+            if self._try_server_up(address):
+                break
+
         filename =3D { 'driver': 'raw',
                      'file': {
                          'driver': 'nbd',
                          'export': 'nbd-export',
                          'server': flatten_sock_addr(address)
                      } }
-        self._server_up(address)
         self.client_test(filename, flatten_sock_addr(address), 'nbd-expo=
rt')
         self._server_down()
=20
--=20
2.19.2


