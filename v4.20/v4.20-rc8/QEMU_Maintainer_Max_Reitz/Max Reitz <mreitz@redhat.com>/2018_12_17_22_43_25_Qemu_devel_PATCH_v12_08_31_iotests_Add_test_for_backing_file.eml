Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 08:50:52 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga007.fm.intel.com (fmsmga007.fm.intel.com [10.253.24.52])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 3FD895805CF
	for <like.xu@linux.intel.com>; Mon, 17 Dec 2018 14:51:37 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga007-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 17 Dec 2018 14:51:36 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AQOiHXxy/q7uRSfvXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?2u0XIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CRWRPQMhfWS9DDYOy?=
 =?us-ascii?q?YIQBAPcPPf5aoof/qFYCsBWzCRWyC+P00TJEmmb20Lcm3+g9DQ3KwAotFM8Ovn?=
 =?us-ascii?q?TOq9X1Mb8fX+evw6jH0D7Nc+1Z2Tbh6InJbxsspvSMXahufsrQ1UkuFhjIjk+O?=
 =?us-ascii?q?poP4PzOazPgNv3KH4OpnUOKikmgqoBx/rDiow8cjkIjJhoQNx1DL8yV53Zw5Jd?=
 =?us-ascii?q?qiSE50Z9OvDZhetzmCOodoXs8vQHtktDsnxrAFo5K3YiYHxZQ9yxLCafGLa5aE?=
 =?us-ascii?q?7g7nWeqLPDt1imxpdKiiixux/0Ws0PPwW8qy3V1XtCRKiMPMuWoI1xHL6siIVP?=
 =?us-ascii?q?99/kC51DaL1gDT8f1EIVsumarULZ4h36Q8lp0JsUTMBiP2mUP2g7GKdkg85OSk?=
 =?us-ascii?q?9+fqbq/7qpOBNIJ4kB/yP6oul8ClHOg1MBACX22B9uS90L3j81f5QLJPjvAui6?=
 =?us-ascii?q?nWrpXaJdkCqqGkHQBVzJgs6xKmAzi919QYgH8HI05bdxKciITpP1DOIPPmAvul?=
 =?us-ascii?q?jFWsjS9mx/THPr3nH5XMIWLPkLbnfbZh9UFczBA/wsxY55JREbwBJvXzWkn+tN?=
 =?us-ascii?q?zeEx81KQu0w/zoCNllzIMRRXqPArOFMKPVqVKI4uMvI+qSa4MPtzf9NuMo5/rv?=
 =?us-ascii?q?jX8/hF8ccrOl3ZoRaHCkAPtmJ1+VbmbrgtcEQi83uBEjRrnqlEGaSmwUIHKzRL?=
 =?us-ascii?q?4noDc8Do2gEMHEXI/qhbWA2CKyGNpRfnxHDVaXVm7lcpjBV/oSZSbBH8l6jzZR?=
 =?us-ascii?q?ULGgT5MmhwijsRK/x7d5I+6R4CABqJ/4yPBz4Ovckwx08iZ7WN+A2WOARH0hg2?=
 =?us-ascii?q?UTWjUt17p+q0Eu9lDWyKV9nrlSEdtY5NtPVQE1M4OayPZ1WP7oXQeUW96ZAGyr?=
 =?us-ascii?q?Q8m0SWU0VN8w380meUtxG9y+yBvE2nz5UPcui7WXCclsoern1H/rKpM4ki6e2Q?=
 =?us-ascii?q?=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BRAAAaKBhchxHrdtBlHQEBBQEHBQGBU?=
 =?us-ascii?q?wYBCwGBMCqBD4EphziFPIplmhoUgWISGAcNgUuGCyI2Bw0BAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQoLCQgbDiMMgjYFAgMaAQaCXAMDAQIkHwopAwMBAgYBAUgIAwFTGQUEgxkBg?=
 =?us-ascii?q?gABBKkbM4VAhGyMPheBQD+FboFIgTOFeCICiTCXIkcJkU8LGIlzh1+RKYg7gU0?=
 =?us-ascii?q?BggZNIxWDJwmCHhd/AQiHVoVAQDGBBxyLXIF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0BRAAAaKBhchxHrdtBlHQEBBQEHBQGBUwYBCwGBMCqBD4E?=
 =?us-ascii?q?phziFPIplmhoUgWISGAcNgUuGCyI2Bw0BAwEBAQEBAQIBEwEBAQoLCQgbDiMMg?=
 =?us-ascii?q?jYFAgMaAQaCXAMDAQIkHwopAwMBAgYBAUgIAwFTGQUEgxkBggABBKkbM4VAhGy?=
 =?us-ascii?q?MPheBQD+FboFIgTOFeCICiTCXIkcJkU8LGIlzh1+RKYg7gU0BggZNIxWDJwmCH?=
 =?us-ascii?q?hd/AQiHVoVAQDGBBxyLXIF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,366,1539673200"; 
   d="scan'208";a="142495345"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 17 Dec 2018 14:51:24 -0800
Received: from localhost ([::1]:50266 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gZ1jP-0003iG-RG
	for like.xu@linux.intel.com; Mon, 17 Dec 2018 17:51:23 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:33422)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <mreitz@redhat.com>) id 1gZ1cY-00071n-WB
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 17:44:23 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <mreitz@redhat.com>) id 1gZ1cW-00068c-Ta
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 17:44:18 -0500
Received: from mx1.redhat.com ([209.132.183.28]:53881)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <mreitz@redhat.com>)
	id 1gZ1cR-00064a-OB; Mon, 17 Dec 2018 17:44:11 -0500
Received: from smtp.corp.redhat.com (int-mx03.intmail.prod.int.phx2.redhat.com
	[10.5.11.13])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 07420432AF;
	Mon, 17 Dec 2018 22:44:11 +0000 (UTC)
Received: from localhost (ovpn-204-73.brq.redhat.com [10.40.204.73])
	by smtp.corp.redhat.com (Postfix) with ESMTPS id 56D122D344;
	Mon, 17 Dec 2018 22:44:10 +0000 (UTC)
From: Max Reitz <mreitz@redhat.com>
To: qemu-block@nongnu.org
Date: Mon, 17 Dec 2018 23:43:25 +0100
Message-Id: <20181217224348.14922-9-mreitz@redhat.com>
In-Reply-To: <20181217224348.14922-1-mreitz@redhat.com>
References: <20181217224348.14922-1-mreitz@redhat.com>
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.13
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.30]);
	Mon, 17 Dec 2018 22:44:11 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [PATCH v12 08/31] iotests: Add test for backing file
 overrides
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Kevin Wolf <kwolf@redhat.com>, Alberto Garcia <berto@igalia.com>,
	qemu-devel@nongnu.org, Max Reitz <mreitz@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Signed-off-by: Max Reitz <mreitz@redhat.com>
Reviewed-by: Alberto Garcia <berto@igalia.com>
---
 tests/qemu-iotests/228     | 235 +++++++++++++++++++++++++++++++++++++
 tests/qemu-iotests/228.out |  84 +++++++++++++
 tests/qemu-iotests/group   |   1 +
 3 files changed, 320 insertions(+)
 create mode 100755 tests/qemu-iotests/228
 create mode 100644 tests/qemu-iotests/228.out

diff --git a/tests/qemu-iotests/228 b/tests/qemu-iotests/228
new file mode 100755
index 0000000000..a2200efba5
--- /dev/null
+++ b/tests/qemu-iotests/228
@@ -0,0 +1,235 @@
+#!/usr/bin/env python
+#
+# Test for when a backing file is considered overridden (thus, a
+# json:{} filename is generated for the overlay) and when it is not
+#
+# Copyright (C) 2018 Red Hat, Inc.
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program.  If not, see <http://www.gnu.org/licenses/>.
+#
+# Creator/Owner: Max Reitz <mreitz@redhat.com>
+
+import iotests
+from iotests import log, qemu_img, filter_testfiles, filter_imgfmt
+
+# Need backing file and change-backing-file support
+iotests.verify_image_format(supported_fmts=3D['qcow2', 'qed'])
+iotests.verify_platform(['linux'])
+
+
+def log_node_info(node):
+    log('')
+
+    log('bs->filename: ' + node['image']['filename'],
+        filters=3D[filter_testfiles, filter_imgfmt])
+    log('bs->backing_file: ' + node['backing_file'],
+        filters=3D[filter_testfiles, filter_imgfmt])
+
+    if 'backing-image' in node['image']:
+        log('bs->backing->bs->filename: ' +
+            node['image']['backing-image']['filename'],
+            filters=3D[filter_testfiles, filter_imgfmt])
+    else:
+        log('bs->backing: (none)')
+
+    log('')
+
+
+with iotests.FilePath('base.img') as base_img_path, \
+     iotests.FilePath('top.img') as top_img_path, \
+     iotests.VM() as vm:
+
+    assert qemu_img('create', '-f', iotests.imgfmt, base_img_path, '64M'=
) =3D=3D 0
+    # Choose a funny way to describe the backing filename
+    assert qemu_img('create', '-f', iotests.imgfmt, '-b',
+                    'file:' + base_img_path, top_img_path) =3D=3D 0
+
+    vm.launch()
+
+    log('--- Implicit backing file ---')
+    log('')
+
+    vm.qmp_log('blockdev-add',
+                node_name=3D'node0',
+                driver=3Diotests.imgfmt,
+                file=3D{
+                    'driver': 'file',
+                    'filename': top_img_path
+                },
+                filters=3D[filter_testfiles, filter_imgfmt])
+
+    # Filename should be plain, and the backing filename should not
+    # contain the "file:" prefix
+    log_node_info(vm.node_info('node0'))
+
+    vm.qmp_log('blockdev-del', node_name=3D'node0')
+
+    log('')
+    log('--- change-backing-file ---')
+    log('')
+
+    vm.qmp_log('blockdev-add',
+               node_name=3D'node0',
+               driver=3Diotests.imgfmt,
+               file=3D{
+                   'driver': 'file',
+                   'filename': top_img_path
+               },
+               filters=3D[filter_testfiles, filter_imgfmt])
+
+    # Changing the backing file to a qemu-reported filename should
+    # result in qemu accepting the corresponding BDS as the implicit
+    # backing BDS (and thus not generate a json:{} filename).
+    # So, first, query the backing filename.
+
+    backing_filename =3D \
+        vm.node_info('node0')['image']['backing-image']['filename']
+
+    # Next, change the backing file to something different
+
+    vm.qmp_log('change-backing-file',
+               image_node_name=3D'node0',
+               device=3D'node0',
+               backing_file=3D'null-co://')
+
+    # Now, verify that we get a json:{} filename
+    # (Image header says "null-co://", actual backing file still is
+    # base_img_path)
+
+    log_node_info(vm.node_info('node0'))
+
+    # Change it back
+    # (To get header and backing file in sync)
+
+    vm.qmp_log('change-backing-file',
+               image_node_name=3D'node0',
+               device=3D'node0',
+               backing_file=3Dbacking_filename)
+
+    # And verify that we get our original results
+
+    log_node_info(vm.node_info('node0'))
+
+    # Finally, try a "file:" prefix.  While this is actually what we
+    # originally had in the image header, qemu will not reopen the
+    # backing file here, so it cannot verify that this filename
+    # "resolves" to the actual backing BDS's filename and will thus
+    # consider both to be different.
+    # (This may be fixed in the future.)
+
+    vm.qmp_log('change-backing-file',
+               image_node_name=3D'node0',
+               device=3D'node0',
+               backing_file=3D('file:' + backing_filename))
+
+    # So now we should get a json:{} filename
+
+    log_node_info(vm.node_info('node0'))
+
+    # Remove and re-attach so we can see that (as in our first try),
+    # opening the image anew helps qemu resolve the header backing
+    # filename.
+
+    vm.qmp_log('blockdev-del', node_name=3D'node0')
+
+    vm.qmp_log('blockdev-add',
+               node_name=3D'node0',
+               driver=3Diotests.imgfmt,
+               file=3D{
+                   'driver': 'file',
+                   'filename': top_img_path
+               },
+               filters=3D[filter_testfiles, filter_imgfmt])
+
+    log_node_info(vm.node_info('node0'))
+
+    vm.qmp_log('blockdev-del', node_name=3D'node0')
+
+    log('')
+    log('--- Override backing file ---')
+    log('')
+
+    # For this test, we need the plain filename in the image header
+    # (because qemu cannot "canonicalize"/"resolve" the backing
+    # filename unless the backing file is opened implicitly with the
+    # overlay)
+    assert qemu_img('create', '-f', iotests.imgfmt, '-b', base_img_path,
+                    top_img_path) =3D=3D 0
+
+    # You can only reliably override backing options by using a node
+    # reference (or by specifying file.filename, but, well...)
+    vm.qmp_log('blockdev-add', node_name=3D'null', driver=3D'null-co')
+
+    vm.qmp_log('blockdev-add',
+               node_name=3D'node0',
+               driver=3Diotests.imgfmt,
+               file=3D{
+                   'driver': 'file',
+                   'filename': top_img_path
+               },
+               backing=3D'null',
+               filters=3D[filter_testfiles, filter_imgfmt])
+
+    # Should get a json:{} filename (and bs->backing_file is
+    # null-co://, because that field actually has not much to do
+    # with the header backing filename (except that it is changed by
+    # change-backing-file))
+
+    log_node_info(vm.node_info('node0'))
+
+    # Detach the backing file by reopening the whole thing
+
+    vm.qmp_log('blockdev-del', node_name=3D'node0')
+    vm.qmp_log('blockdev-del', node_name=3D'null')
+
+    vm.qmp_log('blockdev-add',
+               node_name=3D'node0',
+               driver=3Diotests.imgfmt,
+               file=3D{
+                   'driver': 'file',
+                   'filename': top_img_path
+               },
+               backing=3DNone,
+               filters=3D[filter_testfiles, filter_imgfmt])
+
+    # Should get a json:{} filename (because we overrode the backing
+    # file to not be there)
+
+    log_node_info(vm.node_info('node0'))
+
+    # Open the original backing file
+
+    vm.qmp_log('blockdev-add',
+               node_name=3D'original-backing',
+               driver=3Diotests.imgfmt,
+               file=3D{
+                   'driver': 'file',
+                   'filename': base_img_path
+               },
+               filters=3D[filter_testfiles, filter_imgfmt])
+
+    # Attach the original backing file to its overlay
+
+    vm.qmp_log('blockdev-snapshot',
+               node=3D'original-backing',
+               overlay=3D'node0')
+
+    # This should give us the original plain result
+
+    log_node_info(vm.node_info('node0'))
+
+    vm.qmp_log('blockdev-del', node_name=3D'node0')
+    vm.qmp_log('blockdev-del', node_name=3D'original-backing')
+
+    vm.shutdown()
diff --git a/tests/qemu-iotests/228.out b/tests/qemu-iotests/228.out
new file mode 100644
index 0000000000..f406fa2a45
--- /dev/null
+++ b/tests/qemu-iotests/228.out
@@ -0,0 +1,84 @@
+--- Implicit backing file ---
+
+{"execute": "blockdev-add", "arguments": {"driver": "IMGFMT", "file": {"=
driver": "file", "filename": "TEST_DIR/PID-top.img"}, "node_name": "node0=
"}}
+{"return": {}}
+
+bs->filename: TEST_DIR/PID-top.img
+bs->backing_file: TEST_DIR/PID-base.img
+bs->backing->bs->filename: TEST_DIR/PID-base.img
+
+{"execute": "blockdev-del", "arguments": {"node_name": "node0"}}
+{"return": {}}
+
+--- change-backing-file ---
+
+{"execute": "blockdev-add", "arguments": {"driver": "IMGFMT", "file": {"=
driver": "file", "filename": "TEST_DIR/PID-top.img"}, "node_name": "node0=
"}}
+{"return": {}}
+{"execute": "change-backing-file", "arguments": {"backing_file": "null-c=
o://", "device": "node0", "image_node_name": "node0"}}
+{"return": {}}
+
+bs->filename: json:{"backing": {"driver": "IMGFMT", "file": {"driver": "=
file", "filename": "TEST_DIR/PID-base.img"}}, "driver": "IMGFMT", "file":=
 {"driver": "file", "filename": "TEST_DIR/PID-top.img"}}
+bs->backing_file: null-co://
+bs->backing->bs->filename: TEST_DIR/PID-base.img
+
+{"execute": "change-backing-file", "arguments": {"backing_file": "TEST_D=
IR/PID-base.img", "device": "node0", "image_node_name": "node0"}}
+{"return": {}}
+
+bs->filename: TEST_DIR/PID-top.img
+bs->backing_file: TEST_DIR/PID-base.img
+bs->backing->bs->filename: TEST_DIR/PID-base.img
+
+{"execute": "change-backing-file", "arguments": {"backing_file": "file:T=
EST_DIR/PID-base.img", "device": "node0", "image_node_name": "node0"}}
+{"return": {}}
+
+bs->filename: json:{"backing": {"driver": "IMGFMT", "file": {"driver": "=
file", "filename": "TEST_DIR/PID-base.img"}}, "driver": "IMGFMT", "file":=
 {"driver": "file", "filename": "TEST_DIR/PID-top.img"}}
+bs->backing_file: file:TEST_DIR/PID-base.img
+bs->backing->bs->filename: TEST_DIR/PID-base.img
+
+{"execute": "blockdev-del", "arguments": {"node_name": "node0"}}
+{"return": {}}
+{"execute": "blockdev-add", "arguments": {"driver": "IMGFMT", "file": {"=
driver": "file", "filename": "TEST_DIR/PID-top.img"}, "node_name": "node0=
"}}
+{"return": {}}
+
+bs->filename: TEST_DIR/PID-top.img
+bs->backing_file: TEST_DIR/PID-base.img
+bs->backing->bs->filename: TEST_DIR/PID-base.img
+
+{"execute": "blockdev-del", "arguments": {"node_name": "node0"}}
+{"return": {}}
+
+--- Override backing file ---
+
+{"execute": "blockdev-add", "arguments": {"driver": "null-co", "node_nam=
e": "null"}}
+{"return": {}}
+{"execute": "blockdev-add", "arguments": {"backing": "null", "driver": "=
IMGFMT", "file": {"driver": "file", "filename": "TEST_DIR/PID-top.img"}, =
"node_name": "node0"}}
+{"return": {}}
+
+bs->filename: json:{"backing": {"driver": "null-co"}, "driver": "IMGFMT"=
, "file": {"driver": "file", "filename": "TEST_DIR/PID-top.img"}}
+bs->backing_file: null-co://
+bs->backing->bs->filename: null-co://
+
+{"execute": "blockdev-del", "arguments": {"node_name": "node0"}}
+{"return": {}}
+{"execute": "blockdev-del", "arguments": {"node_name": "null"}}
+{"return": {}}
+{"execute": "blockdev-add", "arguments": {"backing": null, "driver": "IM=
GFMT", "file": {"driver": "file", "filename": "TEST_DIR/PID-top.img"}, "n=
ode_name": "node0"}}
+{"return": {}}
+
+bs->filename: json:{"backing": null, "driver": "IMGFMT", "file": {"drive=
r": "file", "filename": "TEST_DIR/PID-top.img"}}
+bs->backing_file: TEST_DIR/PID-base.img
+bs->backing: (none)
+
+{"execute": "blockdev-add", "arguments": {"driver": "IMGFMT", "file": {"=
driver": "file", "filename": "TEST_DIR/PID-base.img"}, "node_name": "orig=
inal-backing"}}
+{"return": {}}
+{"execute": "blockdev-snapshot", "arguments": {"node": "original-backing=
", "overlay": "node0"}}
+{"return": {}}
+
+bs->filename: TEST_DIR/PID-top.img
+bs->backing_file: TEST_DIR/PID-base.img
+bs->backing->bs->filename: TEST_DIR/PID-base.img
+
+{"execute": "blockdev-del", "arguments": {"node_name": "node0"}}
+{"return": {}}
+{"execute": "blockdev-del", "arguments": {"node_name": "original-backing=
"}}
+{"return": {}}
diff --git a/tests/qemu-iotests/group b/tests/qemu-iotests/group
index 61a6d98ebd..98a895e7e8 100644
--- a/tests/qemu-iotests/group
+++ b/tests/qemu-iotests/group
@@ -227,6 +227,7 @@
 225 rw auto quick
 226 auto quick
 227 auto quick
+228 rw auto quick
 229 auto quick
 231 auto quick
 232 auto quick
--=20
2.19.2


