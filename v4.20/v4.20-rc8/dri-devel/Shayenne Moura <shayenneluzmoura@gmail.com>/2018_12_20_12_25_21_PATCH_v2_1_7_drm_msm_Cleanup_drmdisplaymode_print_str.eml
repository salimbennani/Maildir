Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:35:51 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 1D09E580522;
	Thu, 20 Dec 2018 04:25:35 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 20 Dec 2018 04:25:34 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ArZtl3xe+U8BVgLi1pSXlCe1rlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc6zYBGN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRPDI28?=
 =?us-ascii?q?cYUBEukPPehXoIbhulQBrxWxBRK0BO7t0TJImmP60Lcm3+g9CwzKwgotFM8Ovn?=
 =?us-ascii?q?TOq9X1Mb8fX/21zKbSzTTMcfVW2THj54PVdR4hpuyMXahqfsHMzkQvDAPFgU+Q?=
 =?us-ascii?q?qIP7OTOV0PoCs2yG7+thUOKvjHMnqxtrrTW0yccsj5PGhoMRylze6Sp5x4M1KM?=
 =?us-ascii?q?S+RUVmYtCkCINduz+GO4ZyWM8uXm9ltDggxrEbupO3YDIGxZUlyhLHdvCKfIaF?=
 =?us-ascii?q?7gj+WOqNIzp0nn1odbKlixqv90Wr1/fyWdOu0FlQqypIitnMuW4J1xzU8sWHVP?=
 =?us-ascii?q?R98Vm72TqV1ADc9PtEIUYqmqrfMZIhxaQwlpULvUTCGC/5hln2gbeIekk4/uWk?=
 =?us-ascii?q?8fnrb7v4qpOGKoN5iR3yPr4vl8G9Geg4NxIBX2mf+eSyzr3j+kj5Ta1Ojv03lK?=
 =?us-ascii?q?nZrZ/bKd0YpqGnGQ9V1Jgs6xKmAzeh3tUYm2cILEhedRKZgIjmJUvOLOr7Dfih?=
 =?us-ascii?q?mVSslilkx/TcMr3mGJXNIWDPkK39crZl905c1A0zwMhb55JVCbEOPuj/W0DstN?=
 =?us-ascii?q?HDCh85Mgq0w/voCdln14MeX36PDbGdMK/IrVCI4ecvKfGWZIAJoDb9N+Ql5/n2?=
 =?us-ascii?q?gH85g1AdfLWp0oEQaHyiHvRmPl+WYXzjgtoaFWcKvww+TPHliVGYUD5TYWqyUL?=
 =?us-ascii?q?w45j0hFI2mCoLDTJi3gLOdxCe7AoFWZmdeB1+WCnfod4KEW/QWZCKIOMBhkCcJ?=
 =?us-ascii?q?VbygS48nyBGvuxX2y7thLurI5CIYsYjv28Ry5+3WjRsy7yB7D9yB02GRSGF5hm?=
 =?us-ascii?q?AISCUw3KxlpUx9y02M0a53g/FDEdxT5vVJUho1NJLGzux6DczyVRzFftuTVFmm?=
 =?us-ascii?q?RdCmCykrTt0t298Of1p9G9K6gx/exSWqHaEam6aLBJMu9KLcxGb+J8B6x3bC16?=
 =?us-ascii?q?khil0mT9BLNW2ngK5/6gfSC5TIk0Wfi6ala6Ac0DTR+2eEyGqEpFtYXxJoUaXZ?=
 =?us-ascii?q?QXAfYVPbosnj6UPcUbCiE7QnPRFHyc6ZNKRKbMbkjVFHRPflJdTfbHi9m2a2BR?=
 =?us-ascii?q?aU2LyMaJDmdHka3CXYEEIEiRwc/W6aNQgiASesu37eDD1rFVLof0Ps8el/pGmn?=
 =?us-ascii?q?TkMuyAGKdUlh17uz+h4anvGcT/IT3rQZuCYusTl0HVC9387IBNqEvQZuYKJcYd?=
 =?us-ascii?q?Yl6lddyW3ZrxB9PoCnL616nFEedxp4vkzw2BR3EIlPitUqo24wwwp0KqKY101B?=
 =?us-ascii?q?eiic3ZDxPL3XN2bz8Aqua67QxlHRztKW9r0T5/Q/rlXppBupGVY683V7z9lV1G?=
 =?us-ascii?q?OR55XXDAYITZ39SEc29xhgqLHcbSkw/IfU1XxqMampvT7OwdMpBO05yhm+e9dT?=
 =?us-ascii?q?Kr+LFAj3E8cCHcihNPQqm0S1bhIDJO1S7q80MN+8ePucxaGrO/xsnDS4gmRd4Y?=
 =?us-ascii?q?Bxy16D+DB4SuHVwZkF2faY3g2cWjf4jVehtN33mI9eaTETGGq/1TbrBIpLaqJu?=
 =?us-ascii?q?eoYLDH+kI9erydVmm57tR3lY+UajBlMHwsOoeQCeb0fg3Q1WzkkXpX2nmS2lzz?=
 =?us-ascii?q?17iT0pr6yf3DDQzOTmbhYIJmlLRGx6h1f2PYe0l8waXFSvbwUxlhuq/1z6x6tY?=
 =?us-ascii?q?pKR4NWXTWl1Hfyv1L2FjVKu/qLyCbtVL6JMptyVXTeu9bUqbSr77vxsVzSfjE3?=
 =?us-ascii?q?FCyzA8cjGgoo/5kABiiGKBMHZzq2LUeMFqyhfY/tDcR/9R3jwdSSl8iDnXAEW8?=
 =?us-ascii?q?Ptaz8dWVkZfDrv6xV2a7WpJPdinryJuKtDGn6m1yHR2/g/ezl8XkEQcg0C/3zd?=
 =?us-ascii?q?lqVTjSoxb6bYnmzKC6MeNhfkl1C17w8ct6GodikoQugJEcw2QVhpKQ/XAfi2f8?=
 =?us-ascii?q?Lc1b2b7ibHoKXTMLxt/V4Av/10F5IHOG2Zn5VmmDzct7fNa1fHkW2i0m4sBOCa?=
 =?us-ascii?q?eU6qFEnCRvrlq5qwLRfeZynjMHxfQy734ahvkDuBAxwSWFHrASAU5YMDTwlxSP?=
 =?us-ascii?q?6tCytqRWa3ypcbitz0p+htGhAaqGogFdXnb5Z5gjETVx7sV5LFLDznnz5pv4d9?=
 =?us-ascii?q?nXaNIZrgeUnAvYj+hJNJIxkeIHijF9NmL6uX0l1vQ3jRhz3ZyhuIiHKmNt/L+2?=
 =?us-ascii?q?AxJCNz31Yd8T9S/pjapEgsmW2IWvFI17GjoXRJvoUe6oEDUKuPTlLQmOFSMzqm?=
 =?us-ascii?q?yBFbrDBwOf61pmr3HSE5CtLX6XP2IUzdFjRBmbOUxejxoYXDQ8np4lCA+qwNbt?=
 =?us-ascii?q?f1t+5jAU/lT4sAdDyvp0NxnjVWfSvAepajApSJiGMRpZ9AdC613OMcyZ6OJzED?=
 =?us-ascii?q?pV/pmgrAyLN2yaaB5EDWAPWkyYGV/jOqOi6sXH8+idHuC+NefBYa2SqexCUPeF?=
 =?us-ascii?q?3ZKv3ZVn/zaPNcWPP2NuD/4h2kpEUnB2Bd7ZmygUSyEMkyLNbsibpAqz+yFtr8?=
 =?us-ascii?q?C/9ujrVxzr5YeVF7RSNtBv8QisgaifL+6QmDp5KTFA25wW2H/H06If00ASii10?=
 =?us-ascii?q?czmtEK8NtSrMTKLWh69WAAQXayJ1NMtU8a082hNBNtLcitPwzrR4lOI6C09ZVV?=
 =?us-ascii?q?z9ncGkfdAKI2C4NF/dGEmHLqiJJT3VzMHxeq68TbxQjONJtxy/ozqbEknjPiid?=
 =?us-ascii?q?mDntTRygLeZMjCSDNhxEpI69agptCXTkTN/+ahy0Ktl3jTg3wb0ynnzLNG4cPi?=
 =?us-ascii?q?J6c0NCtbCQ6SJYgvNiG21O9HZlLO+EmzqH4OncMJoZrfxrAiEn395dtVEzwqFJ?=
 =?us-ascii?q?4ScMYPVzmyvVtMVy6wWjm+CV1jdhFh5HrDVLg5iQoW1mOKPE5t9BX2rJ+FQG6m?=
 =?us-ascii?q?DGT1wvrstkD9CngaFIw8LD3Pb2ISdD9t+S58oEDtLYAMiAN2YlMByvEznRWk9N?=
 =?us-ascii?q?djOiMynnjlFZ2KWJ+3SThoA9rYLoidwUV7kNEBQZH+0bBgxMHcYGIZo/Cjoli7?=
 =?us-ascii?q?qagcIg4Xu4sQmXRcgM+tj9UfjaKvHmMjXR2aNDbRcDxbriLqwcM4T63wppbVws?=
 =?us-ascii?q?2MzgFkzSVNVMpGVOZw47pkxX/DAqRGA12UvgawXr73YSGvi9hBIejgp4aP4qsj?=
 =?us-ascii?q?D27AFzbmTLoiA9llV5sN//gDeMOGrvLaG7UIdKTSP+rUk2L7vgX0B+agjk2QRG?=
 =?us-ascii?q?PTHFD5RQjKZkfCg/igbauN1JGP1BSaRsZB4W2OHRZvM03FAaoSKikwsPx+zCD5?=
 =?us-ascii?q?J53C8jcYKtqX9Gk1Zha9kzLLeWIKNJ0llWi6Smui6uy/B3wQkCKkJL+2SXLmpA?=
 =?us-ascii?q?gksELLgpIGKW//JtoViYnDdZeWcLEeQrvPNC90UhNuDGxCXlhfoLFke0NqShJq?=
 =?us-ascii?q?eatmnGmMjAFk8300JOiUBB/rV318olW1aVEUsoye3VXzIENM6KABtQdNZI837c?=
 =?us-ascii?q?NXKIuP/I2o5vOIOyPurhXOuPvrwZxEmjGVBtV68F9MAGVrKl0UbeII+zJ7cfzR?=
 =?us-ascii?q?IF7w3qI1OISvNTd0TP2BQKvcC5hL922YxUIHlJAmV8NSC+4J7drx4ugfCZUZE9?=
 =?us-ascii?q?ZXJMDaUeMXdjY82ziiNfuXkIKT6qyOtRnBOC5i7xoCLdCCTuat1+fv68ahZlCd?=
 =?us-ascii?q?Xw8jI6pfvlwWXL+4nTcjmpfe9pvcXCvKZD/86K?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAABNiRtch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2snjBaLfIFoOZJMhH2BdhABARgTAYcuIjQJDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCA0JCCkjDII2JAGCYgMDAQIkEwYBGx0BAwIJAQEFECkSAx4CEQEFARwGA?=
 =?us-ascii?q?RIFgx2BaQEDFQWcEDyMFRYFAReCdwWBBgGDNQoZJw1egTcCBhKLEYEcF4F/gRE?=
 =?us-ascii?q?zhTaICQKPXJEuMwmCKYwKgzIYiXiHZSyJIYYNigwGAgkHDyGBJYIOMxojgQGCO?=
 =?us-ascii?q?4IbDBeDSoocAU4oMoEFAQGNYAEB?=
X-IPAS-Result: =?us-ascii?q?A0ANAABNiRtch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?njBaLfIFoOZJMhH2BdhABARgTAYcuIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjD?=
 =?us-ascii?q?II2JAGCYgMDAQIkEwYBGx0BAwIJAQEFECkSAx4CEQEFARwGARIFgx2BaQEDFQW?=
 =?us-ascii?q?cEDyMFRYFAReCdwWBBgGDNQoZJw1egTcCBhKLEYEcF4F/gREzhTaICQKPXJEuM?=
 =?us-ascii?q?wmCKYwKgzIYiXiHZSyJIYYNigwGAgkHDyGBJYIOMxojgQGCO4IbDBeDSoocAU4?=
 =?us-ascii?q?oMoEFAQGNYAEB?=
X-IronPort-AV: E=Sophos;i="5.56,376,1539673200"; 
   d="scan'208";a="55958235"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 20 Dec 2018 04:25:33 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1731991AbeLTMZ3 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Thu, 20 Dec 2018 07:25:29 -0500
Received: from mail-qt1-f194.google.com ([209.85.160.194]:37905 "EHLO
        mail-qt1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1730211AbeLTMZ3 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 20 Dec 2018 07:25:29 -0500
Received: by mail-qt1-f194.google.com with SMTP id p17so1530992qtl.5
        for <linux-kernel@vger.kernel.org>; Thu, 20 Dec 2018 04:25:28 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=wc+h2nJ2tmHyTnnvjthkajBu9k0dkenoaGPPG9SbMV8=;
        b=CVlRNE2CsIsC+UTWRH8q6FtDg1YZeSqWjftVIGzuWOeHnZ3NuD3FLrYQM55iQMiqIW
         p3i6slbqKWQ601t8YS4/GWSii35dgh/ySHMcHQuFzeqoK6E/W0Lya5/uec8FWG284uTI
         /li+t63QipIfele5sNXFW72runIOLV5eH5zmsqzimWOCOc8kJcRG8GIReJQdouMNtGNi
         RKE+1QcSdTOT+KiVGaPYQyDwJP9uhWmws1+brnDlRwQXIp8vECW2onMfaHi3lWs9/j+R
         Ibxzwy0ZBRUA5ptzsEi85w/a0wCLPiIgh1jBMMEmGDF0/XVewfcPtqkCA0jstrCZmBnK
         v+GQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:cc:subject:message-id:references
         :mime-version:content-disposition:in-reply-to:user-agent;
        bh=wc+h2nJ2tmHyTnnvjthkajBu9k0dkenoaGPPG9SbMV8=;
        b=NW9fmxk8j4Y97OJTErkBDJy8n1983mYm0SPztXVHmYfwdQPLB6FhWpUbbgncv8pU7J
         VWK46y4+v/76/1N/qPeIavEq5ii5+rMO5MznA0zUg0ahdEN5VioswkwtMAzza4F0M2X5
         2hpBmiRT1r5uMb75ahvcKI4Ed3Oe93OdeXHT94BqsVpeg6ZevemyCq4qyyJb5rnGDcxt
         uTiR6JdxMaEiMYrRbPBodiCmiL3yDp3DmhqA1nMubAZ2mP5GmSnN3PY64ELpAShuiHhb
         MaNZq45gkHWK1xdbVrEi+rYl5+p9fiO+JiFbyzfhHdB2dk+NQZUdR10mxBJK/gYnVMeo
         VNWQ==
X-Gm-Message-State: AA+aEWabg5Y9M4P3e4GLT1Ozd+JepDWw1nBgGR9OM3U9pS5vAEoMepnf
        dFEQYvv0luy9zVMO7kJTSAA=
X-Google-Smtp-Source: AFSGD/U41CR/rUhaCg40jhOXkwa21cpWjpN02twsvykSdtygAWHjOWx9fTnbth4cSMITnRQzG0ET0Q==
X-Received: by 2002:a0c:aca7:: with SMTP id m36mr25079755qvc.237.1545308727467;
        Thu, 20 Dec 2018 04:25:27 -0800 (PST)
Received: from smtp.gmail.com ([143.107.45.1])
        by smtp.gmail.com with ESMTPSA id 20sm4471443qtp.54.2018.12.20.04.25.23
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Thu, 20 Dec 2018 04:25:27 -0800 (PST)
Date: Thu, 20 Dec 2018 10:25:21 -0200
From: Shayenne Moura <shayenneluzmoura@gmail.com>
To: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>,
        Maxime Ripard <maxime.ripard@bootlin.com>,
        Sean Paul <sean@poorly.run>, David Airlie <airlied@linux.ie>,
        Rob Clark <robdclark@gmail.com>,
        Benjamin Gaignard <benjamin.gaignard@linaro.org>,
        Vincent Abriou <vincent.abriou@st.com>,
        Jani Nikula <jani.nikula@linux.intel.com>,
        Joonas Lahtinen <joonas.lahtinen@linux.intel.com>,
        Rodrigo Vivi <rodrigo.vivi@intel.com>,
        Tomi Valkeinen <tomi.valkeinen@ti.com>,
        Neil Armstrong <narmstrong@baylibre.com>,
        Carlo Caione <carlo@caione.org>,
        Kevin Hilman <khilman@baylibre.com>
Cc: dri-devel@lists.freedesktop.org, linux-kernel@vger.kernel.org
Subject: [PATCH v2 1/7] drm: msm: Cleanup drm_display_mode print str
Message-ID: <8a801b11893c519b0b7ebcd7baa5d7de4390f467.1545308167.git.shayenneluzmoura@gmail.com>
References: <cover.1545308167.git.shayenneluzmoura@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <cover.1545308167.git.shayenneluzmoura@gmail.com>
User-Agent: NeoMutt/20171215
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

This patch adjust the print string of drm_display_mode object
to remove drm_mode_object dependency in msm files.

Signed-off-by: Shayenne Moura <shayenneluzmoura@gmail.com>

---
Changes in v2:
  - Use DRM_MODE_FMT/ARG macros (Daniel).
  - Make the commit message more clear

 drivers/gpu/drm/msm/disp/mdp4/mdp4_crtc.c         | 10 ++--------
 drivers/gpu/drm/msm/disp/mdp4/mdp4_dsi_encoder.c  |  9 +--------
 drivers/gpu/drm/msm/disp/mdp4/mdp4_dtv_encoder.c  |  9 +--------
 drivers/gpu/drm/msm/disp/mdp4/mdp4_lcdc_encoder.c |  9 +--------
 drivers/gpu/drm/msm/disp/mdp5/mdp5_cmd_encoder.c  |  9 +--------
 drivers/gpu/drm/msm/disp/mdp5/mdp5_crtc.c         |  9 +--------
 drivers/gpu/drm/msm/disp/mdp5/mdp5_encoder.c      |  9 +--------
 drivers/gpu/drm/msm/dsi/dsi_manager.c             |  9 +--------
 drivers/gpu/drm/msm/edp/edp_bridge.c              |  9 +--------
 9 files changed, 10 insertions(+), 72 deletions(-)

diff --git a/drivers/gpu/drm/msm/disp/mdp4/mdp4_crtc.c b/drivers/gpu/drm/msm/disp/mdp4/mdp4_crtc.c
index 457c29dba4a1..7b028f778960 100644
--- a/drivers/gpu/drm/msm/disp/mdp4/mdp4_crtc.c
+++ b/drivers/gpu/drm/msm/disp/mdp4/mdp4_crtc.c
@@ -244,14 +244,8 @@ static void mdp4_crtc_mode_set_nofb(struct drm_crtc *crtc)
 
 	mode = &crtc->state->adjusted_mode;
 
-	DBG("%s: set mode: %d:\"%s\" %d %d %d %d %d %d %d %d %d %d 0x%x 0x%x",
-			mdp4_crtc->name, mode->base.id, mode->name,
-			mode->vrefresh, mode->clock,
-			mode->hdisplay, mode->hsync_start,
-			mode->hsync_end, mode->htotal,
-			mode->vdisplay, mode->vsync_start,
-			mode->vsync_end, mode->vtotal,
-			mode->type, mode->flags);
+	DBG("%s: set mode: " DRM_MODE_FMT,
+			mdp4_crtc->name, DRM_MODE_ARG(mode));
 
 	mdp4_write(mdp4_kms, REG_MDP4_DMA_SRC_SIZE(dma),
 			MDP4_DMA_SRC_SIZE_WIDTH(mode->hdisplay) |
diff --git a/drivers/gpu/drm/msm/disp/mdp4/mdp4_dsi_encoder.c b/drivers/gpu/drm/msm/disp/mdp4/mdp4_dsi_encoder.c
index 6a1ebdace391..f2009e317820 100644
--- a/drivers/gpu/drm/msm/disp/mdp4/mdp4_dsi_encoder.c
+++ b/drivers/gpu/drm/msm/disp/mdp4/mdp4_dsi_encoder.c
@@ -58,14 +58,7 @@ static void mdp4_dsi_encoder_mode_set(struct drm_encoder *encoder,
 
 	mode = adjusted_mode;
 
-	DBG("set mode: %d:\"%s\" %d %d %d %d %d %d %d %d %d %d 0x%x 0x%x",
-			mode->base.id, mode->name,
-			mode->vrefresh, mode->clock,
-			mode->hdisplay, mode->hsync_start,
-			mode->hsync_end, mode->htotal,
-			mode->vdisplay, mode->vsync_start,
-			mode->vsync_end, mode->vtotal,
-			mode->type, mode->flags);
+	DBG("set mode: " DRM_MODE_FMT, DRM_MODE_ARG()):
 
 	ctrl_pol = 0;
 	if (mode->flags & DRM_MODE_FLAG_NHSYNC)
diff --git a/drivers/gpu/drm/msm/disp/mdp4/mdp4_dtv_encoder.c b/drivers/gpu/drm/msm/disp/mdp4/mdp4_dtv_encoder.c
index ba8e587f734b..f6bc86a35d8d 100644
--- a/drivers/gpu/drm/msm/disp/mdp4/mdp4_dtv_encoder.c
+++ b/drivers/gpu/drm/msm/disp/mdp4/mdp4_dtv_encoder.c
@@ -104,14 +104,7 @@ static void mdp4_dtv_encoder_mode_set(struct drm_encoder *encoder,
 
 	mode = adjusted_mode;
 
-	DBG("set mode: %d:\"%s\" %d %d %d %d %d %d %d %d %d %d 0x%x 0x%x",
-			mode->base.id, mode->name,
-			mode->vrefresh, mode->clock,
-			mode->hdisplay, mode->hsync_start,
-			mode->hsync_end, mode->htotal,
-			mode->vdisplay, mode->vsync_start,
-			mode->vsync_end, mode->vtotal,
-			mode->type, mode->flags);
+	DBG("set mode: " DRM_MODE_FMT, DRM_MODE_ARG(mode));
 
 	mdp4_dtv_encoder->pixclock = mode->clock * 1000;
 
diff --git a/drivers/gpu/drm/msm/disp/mdp4/mdp4_lcdc_encoder.c b/drivers/gpu/drm/msm/disp/mdp4/mdp4_lcdc_encoder.c
index 2bfb39082f54..d47b8f4af991 100644
--- a/drivers/gpu/drm/msm/disp/mdp4/mdp4_lcdc_encoder.c
+++ b/drivers/gpu/drm/msm/disp/mdp4/mdp4_lcdc_encoder.c
@@ -273,14 +273,7 @@ static void mdp4_lcdc_encoder_mode_set(struct drm_encoder *encoder,
 
 	mode = adjusted_mode;
 
-	DBG("set mode: %d:\"%s\" %d %d %d %d %d %d %d %d %d %d 0x%x 0x%x",
-			mode->base.id, mode->name,
-			mode->vrefresh, mode->clock,
-			mode->hdisplay, mode->hsync_start,
-			mode->hsync_end, mode->htotal,
-			mode->vdisplay, mode->vsync_start,
-			mode->vsync_end, mode->vtotal,
-			mode->type, mode->flags);
+	DBG("set mode: " DRM_MODE_FMT, DRM_MODE_ARG(mode));
 
 	mdp4_lcdc_encoder->pixclock = mode->clock * 1000;
 
diff --git a/drivers/gpu/drm/msm/disp/mdp5/mdp5_cmd_encoder.c b/drivers/gpu/drm/msm/disp/mdp5/mdp5_cmd_encoder.c
index d6f79dc755b4..33972c1816ed 100644
--- a/drivers/gpu/drm/msm/disp/mdp5/mdp5_cmd_encoder.c
+++ b/drivers/gpu/drm/msm/disp/mdp5/mdp5_cmd_encoder.c
@@ -134,14 +134,7 @@ void mdp5_cmd_encoder_mode_set(struct drm_encoder *encoder,
 {
 	mode = adjusted_mode;
 
-	DBG("set mode: %d:\"%s\" %d %d %d %d %d %d %d %d %d %d 0x%x 0x%x",
-			mode->base.id, mode->name,
-			mode->vrefresh, mode->clock,
-			mode->hdisplay, mode->hsync_start,
-			mode->hsync_end, mode->htotal,
-			mode->vdisplay, mode->vsync_start,
-			mode->vsync_end, mode->vtotal,
-			mode->type, mode->flags);
+	DBG("set mode: " DRM_MODE_FMT, DRM_MODE_ARG(mode));
 	pingpong_tearcheck_setup(encoder, mode);
 	mdp5_crtc_set_pipeline(encoder->crtc);
 }
diff --git a/drivers/gpu/drm/msm/disp/mdp5/mdp5_crtc.c b/drivers/gpu/drm/msm/disp/mdp5/mdp5_crtc.c
index b1da9ce54379..66f5402484d4 100644
--- a/drivers/gpu/drm/msm/disp/mdp5/mdp5_crtc.c
+++ b/drivers/gpu/drm/msm/disp/mdp5/mdp5_crtc.c
@@ -384,14 +384,7 @@ static void mdp5_crtc_mode_set_nofb(struct drm_crtc *crtc)
 
 	mode = &crtc->state->adjusted_mode;
 
-	DBG("%s: set mode: %d:\"%s\" %d %d %d %d %d %d %d %d %d %d 0x%x 0x%x",
-			crtc->name, mode->base.id, mode->name,
-			mode->vrefresh, mode->clock,
-			mode->hdisplay, mode->hsync_start,
-			mode->hsync_end, mode->htotal,
-			mode->vdisplay, mode->vsync_start,
-			mode->vsync_end, mode->vtotal,
-			mode->type, mode->flags);
+	DBG("%s: set mode: " DMR_MODE_FMT, crtc->name, DRM_MODE_ARG(mode));
 
 	mixer_width = mode->hdisplay;
 	if (r_mixer)
diff --git a/drivers/gpu/drm/msm/disp/mdp5/mdp5_encoder.c b/drivers/gpu/drm/msm/disp/mdp5/mdp5_encoder.c
index fcd44d1d1068..d2a56e55e53d 100644
--- a/drivers/gpu/drm/msm/disp/mdp5/mdp5_encoder.c
+++ b/drivers/gpu/drm/msm/disp/mdp5/mdp5_encoder.c
@@ -118,14 +118,7 @@ static void mdp5_vid_encoder_mode_set(struct drm_encoder *encoder,
 
 	mode = adjusted_mode;
 
-	DBG("set mode: %d:\"%s\" %d %d %d %d %d %d %d %d %d %d 0x%x 0x%x",
-			mode->base.id, mode->name,
-			mode->vrefresh, mode->clock,
-			mode->hdisplay, mode->hsync_start,
-			mode->hsync_end, mode->htotal,
-			mode->vdisplay, mode->vsync_start,
-			mode->vsync_end, mode->vtotal,
-			mode->type, mode->flags);
+	DBG("set mode: " DRM_MODE_FMT, DRM_MODE_ARG(mode));
 
 	ctrl_pol = 0;
 
diff --git a/drivers/gpu/drm/msm/dsi/dsi_manager.c b/drivers/gpu/drm/msm/dsi/dsi_manager.c
index 80aa6344185e..7c8352a8ea97 100644
--- a/drivers/gpu/drm/msm/dsi/dsi_manager.c
+++ b/drivers/gpu/drm/msm/dsi/dsi_manager.c
@@ -536,14 +536,7 @@ static void dsi_mgr_bridge_mode_set(struct drm_bridge *bridge,
 	struct mipi_dsi_host *host = msm_dsi->host;
 	bool is_dual_dsi = IS_DUAL_DSI();
 
-	DBG("set mode: %d:\"%s\" %d %d %d %d %d %d %d %d %d %d 0x%x 0x%x",
-			mode->base.id, mode->name,
-			mode->vrefresh, mode->clock,
-			mode->hdisplay, mode->hsync_start,
-			mode->hsync_end, mode->htotal,
-			mode->vdisplay, mode->vsync_start,
-			mode->vsync_end, mode->vtotal,
-			mode->type, mode->flags);
+	DBG("set mode: " DRM_MODE_FMT, DRM_MODE_ARG(mode));
 
 	if (is_dual_dsi && !IS_MASTER_DSI_LINK(id))
 		return;
diff --git a/drivers/gpu/drm/msm/edp/edp_bridge.c b/drivers/gpu/drm/msm/edp/edp_bridge.c
index 931a5c97cccf..153f350ce017 100644
--- a/drivers/gpu/drm/msm/edp/edp_bridge.c
+++ b/drivers/gpu/drm/msm/edp/edp_bridge.c
@@ -60,14 +60,7 @@ static void edp_bridge_mode_set(struct drm_bridge *bridge,
 	struct edp_bridge *edp_bridge = to_edp_bridge(bridge);
 	struct msm_edp *edp = edp_bridge->edp;
 
-	DBG("set mode: %d:\"%s\" %d %d %d %d %d %d %d %d %d %d 0x%x 0x%x",
-			mode->base.id, mode->name,
-			mode->vrefresh, mode->clock,
-			mode->hdisplay, mode->hsync_start,
-			mode->hsync_end, mode->htotal,
-			mode->vdisplay, mode->vsync_start,
-			mode->vsync_end, mode->vtotal,
-			mode->type, mode->flags);
+	DBG("set mode: " DRM_MODE_FMT, DRM_MODE_ARG(mode));
 
 	list_for_each_entry(connector, &dev->mode_config.connector_list, head) {
 		if ((connector->encoder != NULL) &&
-- 
2.17.1

