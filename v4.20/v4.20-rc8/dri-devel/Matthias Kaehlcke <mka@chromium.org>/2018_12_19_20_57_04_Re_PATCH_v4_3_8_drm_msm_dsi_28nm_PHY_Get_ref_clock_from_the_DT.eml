Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  20 Dec 2018 08:42:55 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 0B274580522;
	Wed, 19 Dec 2018 13:00:11 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 19 Dec 2018 13:00:10 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AuZlqLB1eW1ywp+nDsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segSKfTxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJPUMhRSSJPH4Cy?=
 =?us-ascii?q?b4UAAOUdIOlXrYfyp0AWrRa8HgSsGP/jxyVUinPqx6A30eIsGhzG0gw6GNIOtW?=
 =?us-ascii?q?zZotLvO6cOTeC1zKjIwi/Yb/hL3Dny8pbHchAlof6QXrJ/b9faxE4qFwPGlFqd?=
 =?us-ascii?q?spDqPzOP1uQKtmib7vdgVee1h24gsQFxrSGiy8ExgYfKnoIY0k7I+Tl9zYovON?=
 =?us-ascii?q?G1RlB3bcS5HJZTqy2WLYp7T8E6T212uSs21KEKtJumcCUK1JsqwgDTZ+CZf4WN?=
 =?us-ascii?q?/x7uUeScLDdii39gdr+/iRe//lalx+HiS8W7zVNHoy5Ln9TOuX0A0QHY5NKdRf?=
 =?us-ascii?q?tn5Eih3C6C1wDN5eFAJkA5jbTbK5E/zb4qjJYTslrMHjXwmEroiK+abEIk+vKn?=
 =?us-ascii?q?6+j/Y7XmoIGTN5Nshw3gLqgjntazDfk2PwQQRWSX5Oex2KH58UD4QrhGlvg2nb?=
 =?us-ascii?q?PYsJDeK8QbvKm5AwpN34Yn6ha/CSqm0dsBkXkEMl1FYhSHgJbtO13XJ/D5A/G/?=
 =?us-ascii?q?jEq2kDpw2fDGMaPuAo/XInjAjrjhZ7B95FBYyAYpytBf/Z1UBqkbIP3vQk/xqM?=
 =?us-ascii?q?DYDhghPgywwubnC8ty2pkRWGKSGaKZNKLSsVmV5uMgOeWMZYkVuCrjJPgh/fLh?=
 =?us-ascii?q?kXg5mVoFd6mzwZQXcGy4HuhhI0iBYXrjmNYBEXsQsQo5VuDqiECCXiRVZ3a9RK?=
 =?us-ascii?q?884jA7CIS7DYbMXIytgbqB3DulEZ1SfGxJFleMEXLwfYWeR/gMcD6SItNmkjEc?=
 =?us-ascii?q?T7ehUI8h1RattAPg0bpoNOjU9zYctZLi0th1+uLSmQsz9TxyE8SSzWWNQ3tokW?=
 =?us-ascii?q?MPQj88xLp/rlBlylefzah4hORVFd9J6PNPSAs6MZ/cwPZ8C9D9QQ/BetaJSFC7?=
 =?us-ascii?q?QtSpGz0xT9Qxw8MQbEZ5AdmtkhfD3y+yCb8Pi7OLHIA08r7b33XpOsly0WjG27?=
 =?us-ascii?q?c7g1kmWMRPM3amibB59wTUA47JkECZl6KxeKQY3S7N8nqDzGWUsEFZVg5wTbvK?=
 =?us-ascii?q?XXQFakTKqtT541vIT6WyBrQ/LgtB1cmCJ7NXZdLzk1VJWu3vONTEbGK3gGe/Gx?=
 =?us-ascii?q?CIy6iIbIrrfWUdwSrcBFIFkwAV4XaJKww+Cj29rGLZCTxkDUjvbF/08elitHO7?=
 =?us-ascii?q?SVc5zx2Lb01k0Lq15h4VhPyGR/MPxL4Evz0hqzF1HFa70NLbEN6ApwtnfKVBbt?=
 =?us-ascii?q?Ix+lZH1WTFtwNjOpysNbxthlkbcw5vpUPhyw13CplckcgttH4l1g5yJryX0Vxf?=
 =?us-ascii?q?dzKUx4v/OqDKJWbo+hCvaKnW2k/F3daS+6cP7uk4qlr5sAGoEEoi72to091P33?=
 =?us-ascii?q?SA4ZXKCRIYUYjtXUYv6xh6u7babzE95oPJz3FjLbO4sz7C290zAuslxQ2tf9Ne?=
 =?us-ascii?q?MKOCCQ/zHNcWB8moKOw2hVepaggIM/xV9K4xJ8mmbeeJ2La3POZ8mzKrlX5H4I?=
 =?us-ascii?q?Fh3U2W7SpzV+nI04wDw/6GxAuHVi7wg0u7vcDzhI9LeysSHm25ySX/AI5RZ6ty?=
 =?us-ascii?q?fZsECGu0Is23wMl+iIDpW3JC6FGjAFYG0tezeRWOd1z9wRFQ1UMPrH2nmCu01T?=
 =?us-ascii?q?x1nysyrqqC2izD2ODidBsBOm5WS2hul1bsIY6oj98EWEikdRQmlByg5Uzi3ahU?=
 =?us-ascii?q?uLx/L3XPQUdPZyX2LXttUrGztrqBZM5D8ogovj9UUOS/YFCaTKDyox0B3iPnHm?=
 =?us-ascii?q?tewi07dj6wtpX4mRx6lHySLHJpoHXFfsFwwA/V5MbASv5JwjoGWC54hCHXB1em?=
 =?us-ascii?q?ONml59eUl5bFsu2lU2KhV5tTcTTkzI+atSu743FqDgO7n/yphtLnFg062zfh19?=
 =?us-ascii?q?Z2TSXIsAr8Yo7z2qS5K+1nf1NkBF/h68VgHIF+nZA9hJUR2Xgcm5WU8mALkWb1?=
 =?us-ascii?q?MdVHx63+aGABSiIMw97Q+ALlwlFsLmqVx4LlUXWQ2s5hZ9i5YmwMwC484d5FCL?=
 =?us-ascii?q?yI7LNahyt6uUS3rRjeYfVmmjcdyP0u6GMVgu0TuQotyDmdDa4WHUVCISPskBGI?=
 =?us-ascii?q?5cikrKpLfGavbaSw1E1mkNC9C7GCpxtQWXfjdZckAC9w9d5/MFPX3X3364Hkfs?=
 =?us-ascii?q?TQbN0Juh2VlRfAk/ZaKJYrmvUWgipnPHr3vWc5xO4jkRxuwZa6sZCcJGp3+6K5?=
 =?us-ascii?q?BgNYOifxZ8MO4TztiadensCL34GgBJlhGzMLXIf2QvKsCj4dqfPnNwOWGj0mtn?=
 =?us-ascii?q?ibAabfHROY6Ep+rXLACZWrOG+MJHUD0dVuXhqdJFFcgAAJWjU1hIU5GxuuxMzg?=
 =?us-ascii?q?dkd5+z8Q6kT5qhtK1uJnKR3/Xn3Dqwevbzc+UIKfIwZO7gFe+0fVNtST7+J0Hy?=
 =?us-ascii?q?FF552hsRaCKmqBawRTCmEJXEOECkvnPrmv49nA7ueZCvC/L/vIfbWBt+heW+2U?=
 =?us-ascii?q?ypKo14ts5yyMOdmXPnl+E/073VJOXXBnFMTYmDUPSC0XmzjOb86Boxe89TN4rt?=
 =?us-ascii?q?qi8PTwQw/v4YqPC71PMdRg4Ry2gKGDN/KOiyZ9MzpXypQMxXrQwrgFwFESkz1u?=
 =?us-ascii?q?dyWqEbkYryHNUbnfmrVJAB8bcS9zMMpI4rk43glMP87bl9z02qR5jv4zF1dKS1?=
 =?us-ascii?q?jhltu1aswNJmG3LEnHC1qTNLSaOT3LxNn6Yb+9Sb1Vlulbqwe8tiqbE0D9ODSO?=
 =?us-ascii?q?jD3pVxGpMeFRgyCXJh1euIehchlzDWjvVs7pahq+MNVvlz053aU0hm/WNW4bKT?=
 =?us-ascii?q?V9c1lCrruV7SNZhPVwA21A7np/IumClCaU9O3YKpcQsft2DSV4jeNa4HImy7RL?=
 =?us-ascii?q?6CFIXuB6mCzXro0mn1bztOiMzjN8GDFHsS1GgMrfu0RhPazCsJJJQm3J+DoJ7G?=
 =?us-ascii?q?OZERNMoMFqXI7BoadVn/3GiL7zKT5Zu/Hd8MsYDMvZYJaCM3MJOhrzHzvVEQ5D?=
 =?us-ascii?q?SiSkYzKMz3dBme2foyXG5qMxrYLhzd9XEudW?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ADAAD7rxpch0O0hNFkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwEBgS+COyeDfYgZjgkUiQ+OOoFzEwEBGBMBhy0iNAk?=
 =?us-ascii?q?NAQMBAQEBAQECARMBAQEIDQkIKSMMQgEOAYFkJAGCYgECAwECIAQZAQE3AQUJA?=
 =?us-ascii?q?QEKGAICBSECAgMMBSABBQEiEwWDHYF1DQEEnDs8iilwfDOCdgEBBYcsCBJ5ihi?=
 =?us-ascii?q?BHBeBQD+BEYJkLogJMYImi0GEGX6QXgmRVgwYiXeHYplbBgIJBw8hgSWCDk0wC?=
 =?us-ascii?q?IMnghsMF4hehWAfMoECAwEBIROFA4gpAQE?=
X-IPAS-Result: =?us-ascii?q?A0ADAAD7rxpch0O0hNFkGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwEBgS+COyeDfYgZjgkUiQ+OOoFzEwEBGBMBhy0iNAkNAQMBAQEBAQECA?=
 =?us-ascii?q?RMBAQEIDQkIKSMMQgEOAYFkJAGCYgECAwECIAQZAQE3AQUJAQEKGAICBSECAgM?=
 =?us-ascii?q?MBSABBQEiEwWDHYF1DQEEnDs8iilwfDOCdgEBBYcsCBJ5ihiBHBeBQD+BEYJkL?=
 =?us-ascii?q?ogJMYImi0GEGX6QXgmRVgwYiXeHYplbBgIJBw8hgSWCDk0wCIMnghsMF4hehWA?=
 =?us-ascii?q?fMoECAwEBIROFA4gpAQE?=
X-IronPort-AV: E=Sophos;i="5.56,374,1539673200"; 
   d="scan'208";a="142836141"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 19 Dec 2018 13:00:08 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730214AbeLSU5H (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Wed, 19 Dec 2018 15:57:07 -0500
Received: from mail-pl1-f193.google.com ([209.85.214.193]:47011 "EHLO
        mail-pl1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727991AbeLSU5G (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 19 Dec 2018 15:57:06 -0500
Received: by mail-pl1-f193.google.com with SMTP id t13so9986323ply.13
        for <linux-kernel@vger.kernel.org>; Wed, 19 Dec 2018 12:57:05 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=chromium.org; s=google;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=DzTS9QYO2r69hs/bAQE3QHKmKsyi7lPyBvuylOVKON4=;
        b=HJs4IbLLaGIjkZZvJQ/v5+00Y4B3sY2be8h1/ymYiGHJCDaqBOM4r3xMRDfZBLEjL+
         f1CcWbkMAFSx88pdENVMIXG+rOjMbFpQcNDbtLOFIXmUENTmykauLPzARduAxzopHQJk
         kta8zwcMCn2DO5K6lkoI3YDnJsbMpuMGdZU8o=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:cc:subject:message-id:references
         :mime-version:content-disposition:in-reply-to:user-agent;
        bh=DzTS9QYO2r69hs/bAQE3QHKmKsyi7lPyBvuylOVKON4=;
        b=IEfvpFplYVFXBy5LGpuf7zT6rESZ7Tfu0/n8lMmmbwqxspqGBfCULeo3GZmq7JvMT2
         5c6lRg3t3luJDWDBTn6VYN/qEE4EEs3q/sSb6ZoYIGnceTFJR8fKqC2sZBJEqL6cHqB4
         6+zK7MLdidDpkC/MmOemNNrVWy/oGfwDE/D5zm/peei4+dYvNCyIV/BYZ3H4+kqTw5jS
         zq90A87cgpHFM35fiVWnLua/JSj/wDfcAiKxDV2NUt3H4g2LKlyqD861OL8tEAby1vDl
         0DqUka5bI8xPEjLdQ+NWashFRYs1imBgYz/DKc3ng+Cj6iPMokWaHEhRMamw2LNpX6hS
         rHXw==
X-Gm-Message-State: AA+aEWawnpHG3P6XXC3Y0G81Nlu3mriRUu6rSQBb2CnIXX6hfTLFi+zT
        INdq14h5qjHFSyyJYOUdQQgx6r7lDqM=
X-Google-Smtp-Source: AFSGD/XRLmvMlQFZE6ZhBi0SUiuQp79qC668S2wqoQm+hPefEfqeiwnkz6UlSd8gfc4Wqd65idfKgw==
X-Received: by 2002:a17:902:720c:: with SMTP id ba12mr21735371plb.79.1545253025525;
        Wed, 19 Dec 2018 12:57:05 -0800 (PST)
Received: from localhost ([2620:15c:202:1:75a:3f6e:21d:9374])
        by smtp.gmail.com with ESMTPSA id s9sm26864111pgl.88.2018.12.19.12.57.04
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Wed, 19 Dec 2018 12:57:04 -0800 (PST)
Date: Wed, 19 Dec 2018 12:57:04 -0800
From: Matthias Kaehlcke <mka@chromium.org>
To: Niklas Cassel <niklas.cassel@linaro.org>
Cc: Rob Clark <robdclark@gmail.com>, David Airlie <airlied@linux.ie>,
        Rob Herring <robh+dt@kernel.org>,
        Mark Rutland <mark.rutland@arm.com>,
        Andy Gross <andy.gross@linaro.org>,
        David Brown <david.brown@linaro.org>,
        Archit Taneja <architt@codeaurora.org>,
        Sean Paul <seanpaul@chromium.org>,
        Rajesh Yadav <ryadav@codeaurora.org>,
        Douglas Anderson <dianders@chromium.org>,
        Stephen Boyd <swboyd@chromium.org>,
        Jeykumar Sankaran <jsanka@codeaurora.org>,
        linux-arm-msm@vger.kernel.org, dri-devel@lists.freedesktop.org,
        freedreno@lists.freedesktop.org, devicetree@vger.kernel.org,
        linux-kernel@vger.kernel.org
Subject: Re: [PATCH v4 3/8] drm/msm/dsi: 28nm PHY: Get ref clock from the DT
Message-ID: <20181219205704.GE109358@google.com>
References: <20181204224234.62619-1-mka@chromium.org>
 <20181204224234.62619-4-mka@chromium.org>
 <20181212220717.GA16710@centauri.lan>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
In-Reply-To: <20181212220717.GA16710@centauri.lan>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Niklas,

On Wed, Dec 12, 2018 at 11:07:17PM +0100, Niklas Cassel wrote:
> On Tue, Dec 04, 2018 at 02:42:29PM -0800, Matthias Kaehlcke wrote:
> > Get the ref clock of the PHY from the device tree instead of
> > hardcoding its name and rate.
> > 
> > Signed-off-by: Matthias Kaehlcke <mka@chromium.org>
> > ---
> > Changes in v4:
> > - always use parent rate in dsi_pll_28nm_clk_set_rate() and
> >    dsi_pll_28nm_clk_recalc_rate()
> > - pass name of VCO ref clock to pll_28nm_register() instead of
> >   storing it in a struct field
> > - updated commit message
> > 
> > Changes in v3:
> > - use default name and rate if the ref clock is not specified
> >   in the DT
> > - store vco_ref_clk_name instead of vco_ref_clk
> > - dsi_pll_28nm_clk_set_rate: changed data type of ref_clk_rate to
> >   unsigned long
> > - fixed check for EPROBE_DEFER
> > - renamed VCO_REF_CLK_RATE to VCO_REF_CLK_DEFAULT_RATE
> > 
> > Changes in v2:
> > - patch added to the series
> > ---
> >  drivers/gpu/drm/msm/dsi/pll/dsi_pll_28nm.c | 36 +++++++++++++++-------
> >  1 file changed, 25 insertions(+), 11 deletions(-)
> > 
> > diff --git a/drivers/gpu/drm/msm/dsi/pll/dsi_pll_28nm.c b/drivers/gpu/drm/msm/dsi/pll/dsi_pll_28nm.c
> > index 26e3a01a99c2b..7777340b03e8d 100644
> > --- a/drivers/gpu/drm/msm/dsi/pll/dsi_pll_28nm.c
> > +++ b/drivers/gpu/drm/msm/dsi/pll/dsi_pll_28nm.c
> > @@ -40,7 +40,6 @@
> >  
> >  #define NUM_PROVIDED_CLKS		2
> >  
> > -#define VCO_REF_CLK_RATE		19200000
> >  #define VCO_MIN_RATE			350000000
> >  #define VCO_MAX_RATE			750000000
> >  
> > @@ -166,17 +165,17 @@ static int dsi_pll_28nm_clk_set_rate(struct clk_hw *hw, unsigned long rate,
> >  	pll_write(base + REG_DSI_28nm_PHY_PLL_LPFC1_CFG, 0x70);
> >  	pll_write(base + REG_DSI_28nm_PHY_PLL_LPFC2_CFG, 0x15);
> >  
> > -	rem = rate % VCO_REF_CLK_RATE;
> > +	rem = rate % parent_rate;
> >  	if (rem) {
> >  		refclk_cfg = DSI_28nm_PHY_PLL_REFCLK_CFG_DBLR;
> >  		frac_n_mode = 1;
> > -		div_fbx1000 = rate / (VCO_REF_CLK_RATE / 500);
> > -		gen_vco_clk = div_fbx1000 * (VCO_REF_CLK_RATE / 500);
> > +		div_fbx1000 = rate / (parent_rate / 500);
> > +		gen_vco_clk = div_fbx1000 * (parent_rate / 500);
> >  	} else {
> >  		refclk_cfg = 0x0;
> >  		frac_n_mode = 0;
> > -		div_fbx1000 = rate / (VCO_REF_CLK_RATE / 1000);
> > -		gen_vco_clk = div_fbx1000 * (VCO_REF_CLK_RATE / 1000);
> > +		div_fbx1000 = rate / (parent_rate / 1000);
> > +		gen_vco_clk = div_fbx1000 * (parent_rate / 1000);
> >  	}
> >  
> >  	DBG("refclk_cfg = %d", refclk_cfg);
> > @@ -265,7 +264,7 @@ static unsigned long dsi_pll_28nm_clk_recalc_rate(struct clk_hw *hw,
> >  	void __iomem *base = pll_28nm->mmio;
> >  	u32 sdm0, doubler, sdm_byp_div;
> >  	u32 sdm_dc_off, sdm_freq_seed, sdm2, sdm3;
> > -	u32 ref_clk = VCO_REF_CLK_RATE;
> > +	u32 ref_clk = parent_rate;
> >  	unsigned long vco_rate;
> >  
> >  	VERB("parent_rate=%lu", parent_rate);
> > @@ -273,7 +272,7 @@ static unsigned long dsi_pll_28nm_clk_recalc_rate(struct clk_hw *hw,
> >  	/* Check to see if the ref clk doubler is enabled */
> >  	doubler = pll_read(base + REG_DSI_28nm_PHY_PLL_REFCLK_CFG) &
> >  			DSI_28nm_PHY_PLL_REFCLK_CFG_DBLR;
> > -	ref_clk += (doubler * VCO_REF_CLK_RATE);
> > +	ref_clk += (doubler * ref_clk);
> >  
> >  	/* see if it is integer mode or sdm mode */
> >  	sdm0 = pll_read(base + REG_DSI_28nm_PHY_PLL_SDM_CFG0);
> > @@ -514,11 +513,12 @@ static void dsi_pll_28nm_destroy(struct msm_dsi_pll *pll)
> >  	pll_28nm->clk_data.clk_num = 0;
> >  }
> >  
> > -static int pll_28nm_register(struct dsi_pll_28nm *pll_28nm)
> > +static int pll_28nm_register(struct dsi_pll_28nm *pll_28nm,
> > +			     const char *ref_clk_name)
> >  {
> >  	char clk_name[32], parent1[32], parent2[32], vco_name[32];
> >  	struct clk_init_data vco_init = {
> > -		.parent_names = (const char *[]){ "xo" },
> > +		.parent_names = &ref_clk_name,
> >  		.num_parents = 1,
> >  		.name = vco_name,
> >  		.flags = CLK_IGNORE_UNUSED,
> > @@ -593,6 +593,8 @@ struct msm_dsi_pll *msm_dsi_pll_28nm_init(struct platform_device *pdev,
> >  {
> >  	struct dsi_pll_28nm *pll_28nm;
> >  	struct msm_dsi_pll *pll;
> > +	struct clk *vco_ref_clk;
> > +	const char *vco_ref_clk_name;
> >  	int ret;
> >  
> >  	if (!pdev)
> > @@ -605,6 +607,18 @@ struct msm_dsi_pll *msm_dsi_pll_28nm_init(struct platform_device *pdev,
> >  	pll_28nm->pdev = pdev;
> >  	pll_28nm->id = id;
> >  
> > +	vco_ref_clk = devm_clk_get(&pdev->dev, "ref");
> > +	if (!IS_ERR(vco_ref_clk)) {
> > +		vco_ref_clk_name = __clk_get_name(vco_ref_clk);
> > +	} else {
> > +		ret = PTR_ERR(vco_ref_clk);
> > +		if (ret == -EPROBE_DEFER)
> > +			ERR_PTR(ret);
> 
> It looks like you are missing the return keyword here.

Indeed, thanks for pointing that out!

Cheers

Matthias
