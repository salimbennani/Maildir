Return-Path: <virtualization-bounces@lists.linux-foundation.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 08:46:31 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id BF9A65805CF
	for <like.xu@linux.intel.com>; Mon, 17 Dec 2018 08:10:58 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 17 Dec 2018 08:10:58 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3Al8y+QhGQA/6f54CQXzhpfp1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ76pcm4bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJVyJPHJ6y?=
 =?us-ascii?q?YYUMAeQGP+lYoZH9qlkMoxaxGAWhCv/jxTBUiXH5xq01zf8sER3E0QE6A94Dqm?=
 =?us-ascii?q?jYoMvzOawPUe611q7IzTDbYv1Rwzj985LHchAgofGWWrJ7bMjexlMqFwzfk1qf?=
 =?us-ascii?q?s5HuMjSV1+sXtmiU9fdvWvi1h24isQ5xuSKgxsctionTgYIY0UvE9SJlz4Y0It?=
 =?us-ascii?q?24TlB0YNG4EJdKqy6aMI52T9okTmp1tig6zbgGtoS6fCgM0JknwgTQZOCdc4iP?=
 =?us-ascii?q?+RLvTv2RLixgiHJhebK/gQuy8Eeuyu37S8m01ktFoTBZktnNsXAN0Qbf6s+dSv?=
 =?us-ascii?q?ty+EqqxDWB1xjL5+1ZLk04ibDXJ4A8zrItjJYfrEXOEyvslEnrkqOablso9vWr?=
 =?us-ascii?q?5uj9fLnquIOQO5Vqhg3gMKkigNGzDfg4PwUIQmOV4/6z1Kf58k38WLhKjuM5kq?=
 =?us-ascii?q?3esJ3CIMQUvK+5AwtP3oYn6ha/CSqm0dsWnXkAMVJFfg+IgJL1O1HPJ/D4C+2z?=
 =?us-ascii?q?g1O2kDdk3/zGP7vhDYvRLnXbjbvscqpx51RCxAYu0NxT/Y9YB7AFLf7pR0P9qs?=
 =?us-ascii?q?TUDhojPAy1x+bnBs991oQbWW+XHK+ZMbnSsUOV5u01J+mMZY4UtyzhK/gk4P7u?=
 =?us-ascii?q?i2Y1lkQafam025sYdG63Hu99LkWdYHrsmcsBEXwQsgo6TezqjkCCUDFKa3a8WK?=
 =?us-ascii?q?I8+zc7B5+8AoffR4Cth7qB0D28Hp1MaWBKEkqMHmvwd4WYR/cMbzqfIstgkjwH?=
 =?us-ascii?q?S7etUYAg1Qy1uQ/+yrpnKPfU+yICuZLi0th1+/PclRUo+TNoCMSd1jLFcmdvg2?=
 =?us-ascii?q?ldRyMqxLst5gt5y0yfyu58gvpFBdJU+vVFWxs7MpiayPZ1TNX7WwbEd9HOT066?=
 =?us-ascii?q?Q9KgGnYvT8gt3tYKYlR0B9SliEP+2TG3CeoQnr2PGJtm7KPGw2X4I8dvwmrH06?=
 =?us-ascii?q?9klVQ/X8ZUKUWih7Vj7E7XBojUgwCXkLusea0A3SnLsmCZwj2VoUtaXQVsBLjD?=
 =?us-ascii?q?Rm0VfUDMrN70tX/FGq/+V5wkPxFHxMrELbFFLpXVjVJDTeyrF9DTYnK3ln34UQ?=
 =?us-ascii?q?qHwqOkaIvsZnkH2yPcGA4InlZXtVeAOg92IyClpWvERGhrFFTgZGv2/OV+oW/9?=
 =?us-ascii?q?RUgxmUXCRUp71qGx8wBdvfGASPQNluYOoA8orzR5Ggb709+AT5LKh0InNJ1Rfd?=
 =?us-ascii?q?4nqH5By2Pf/UQpPoSpB7JzmlkENQ9wuhW9+Q9wD9BlmNMjrHIwy0JDIKeR3FoJ?=
 =?us-ascii?q?IyKR2Jn8M/vSI3L7/BG1bIbN3Vrf19Cb6rtJ4/M9/Qaw9Dq1H1Yvpi00m+Je1G?=
 =?us-ascii?q?GRs9CTVFIf?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AUAAAkyhdchwyp04xkGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBVAMBAQELAYJpgSmMdIsYgy6YKhQYC4QDg1wiNwYNAQMBAQEBAQECARM?=
 =?us-ascii?q?BAQEKCwkIKSMMgjYFAgMaAQaCXAECAwEBATcGAQEECh4LAQIDAQIGAQFABAQIA?=
 =?us-ascii?q?wEjAS8GARIFgx0BgX8BBQqnA4IfgnYBAQWHGwMFh32DJYEcghaHQQEEhz2JRIF?=
 =?us-ascii?q?0hF42kAhHBwKHDYYthCIWX4kSh2GJPIR2izKBXIF4MxojUIJsghsMFxKDOIUUh?=
 =?us-ascii?q?U4xATGMf4F3AQE?=
X-IPAS-Result: =?us-ascii?q?A0AUAAAkyhdchwyp04xkGwEBAQEDAQEBBwMBAQGBVAMBAQE?=
 =?us-ascii?q?LAYJpgSmMdIsYgy6YKhQYC4QDg1wiNwYNAQMBAQEBAQECARMBAQEKCwkIKSMMg?=
 =?us-ascii?q?jYFAgMaAQaCXAECAwEBATcGAQEECh4LAQIDAQIGAQFABAQIAwEjAS8GARIFgx0?=
 =?us-ascii?q?BgX8BBQqnA4IfgnYBAQWHGwMFh32DJYEcghaHQQEEhz2JRIF0hF42kAhHBwKHD?=
 =?us-ascii?q?YYthCIWX4kSh2GJPIR2izKBXIF4MxojUIJsghsMFxKDOIUUhU4xATGMf4F3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,365,1539673200"; 
   d="scan'208";a="67169003"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from mail.linuxfoundation.org ([140.211.169.12])
  by mga01b.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 17 Dec 2018 08:10:57 -0800
Received: from mail.linux-foundation.org (localhost [127.0.0.1])
	by mail.linuxfoundation.org (Postfix) with ESMTP id 7206BF32;
	Mon, 17 Dec 2018 16:10:55 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@mail.linuxfoundation.org
Received: from smtp1.linuxfoundation.org (smtp1.linux-foundation.org
	[172.17.192.35])
	by mail.linuxfoundation.org (Postfix) with ESMTPS id EA20DF2D
	for <virtualization@lists.linux-foundation.org>;
	Mon, 17 Dec 2018 16:10:53 +0000 (UTC)
X-Greylist: delayed 13:15:41 by SQLgrey-1.7.6
Received: from conuserg-07.nifty.com (conuserg-07.nifty.com [210.131.2.74])
	by smtp1.linuxfoundation.org (Postfix) with ESMTPS id 38C66837
	for <virtualization@lists.linux-foundation.org>;
	Mon, 17 Dec 2018 16:10:53 +0000 (UTC)
Received: from grover.tkatk1.zaq.ne.jp (zaqdadce369.zaq.ne.jp
	[218.220.227.105]) (authenticated)
	by conuserg-07.nifty.com with ESMTP id wBHG3bRh008119;
	Tue, 18 Dec 2018 01:03:45 +0900
DKIM-Filter: OpenDKIM Filter v2.10.3 conuserg-07.nifty.com wBHG3bRh008119
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=nifty.com;
	s=dec2015msa; t=1545062626;
	bh=4SKjXoI2Jxb7F0Ixp5LIs9imyh9UsRJoHsSQtzSTnpI=;
	h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
	b=Ob0D0mxV+BsEDq6V+1LAf0RhGlCEM1YU31zLHp3MSmuJpGmgessOc4JqsfHqmIRjy
	en0clOvcCoQLoQ1A8LHb9/MHkNZbg3iOmvogaWc1wZWPBHH+xXtiLpoB63U0a+qymH
	7CBQFGfP9IiOOytKQNiXoKyTMMONZvypdX1TjswZx8VCg/Qdsj6t9Pw12PVUqQFEtM
	jdhzDyR+IJaDskeKs6Y6xs7I2nXm6mNzMOGs3a6eP6hi+w5+FOVxPHPv6PmNZJeK0O
	/np0CI0VSaaqALy7qf4Exg/OeLcoMyuIHPxXTXuGI4oeuOjdF6gLIGxF/MuQCBO9+h
	+oG/9cmWVEgHA==
X-Nifty-SrcIP: [218.220.227.105]
From: Masahiro Yamada <yamada.masahiro@socionext.com>
To: x86@kernel.org, Thomas Gleixner <tglx@linutronix.de>,
	Ingo Molnar <mingo@redhat.com>, Borislav Petkov <bp@alien8.de>,
	"H . Peter Anvin" <hpa@zytor.com>
Subject: [PATCH v3 04/12] Revert "x86/paravirt: Work around GCC inlining bugs
	when compiling paravirt ops"
Date: Tue, 18 Dec 2018 01:03:19 +0900
Message-Id: <1545062607-8599-5-git-send-email-yamada.masahiro@socionext.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1545062607-8599-1-git-send-email-yamada.masahiro@socionext.com>
References: <1545062607-8599-1-git-send-email-yamada.masahiro@socionext.com>
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,RCVD_IN_DNSWL_NONE,T_FILL_THIS_FORM_SHORT autolearn=ham
	version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	smtp1.linux-foundation.org
Cc: Juergen Gross <jgross@suse.com>, Richard Biener <rguenther@suse.de>,
	Kees Cook <keescook@chromium.org>,
	Segher Boessenkool <segher@kernel.crashing.org>,
	Peter Zijlstra <peterz@infradead.org>, linux-kernel@vger.kernel.org,
	virtualization@lists.linux-foundation.org,
	Masahiro Yamada <yamada.masahiro@socionext.com>,
	Nadav Amit <namit@vmware.com>, Josh Poimboeuf <jpoimboe@redhat.com>,
	Alok Kataria <akataria@vmware.com>,
	Linus Torvalds <torvalds@linux-foundation.org>
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.12
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>,
	<mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>,
	<mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
MIME-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: virtualization-bounces@lists.linux-foundation.org
Errors-To: virtualization-bounces@lists.linux-foundation.org

This reverts commit 494b5168f2de009eb80f198f668da374295098dd.

The in-kernel workarounds will be replaced with GCC's new
"asm inline" syntax.

Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
---

 arch/x86/include/asm/paravirt_types.h | 56 ++++++++++++++++++-----------------
 arch/x86/kernel/macros.S              |  1 -
 2 files changed, 29 insertions(+), 28 deletions(-)

diff --git a/arch/x86/include/asm/paravirt_types.h b/arch/x86/include/asm/paravirt_types.h
index 26942ad..488c596 100644
--- a/arch/x86/include/asm/paravirt_types.h
+++ b/arch/x86/include/asm/paravirt_types.h
@@ -348,11 +348,23 @@ extern struct paravirt_patch_template pv_ops;
 #define paravirt_clobber(clobber)		\
 	[paravirt_clobber] "i" (clobber)
 
+/*
+ * Generate some code, and mark it as patchable by the
+ * apply_paravirt() alternate instruction patcher.
+ */
+#define _paravirt_alt(insn_string, type, clobber)	\
+	"771:\n\t" insn_string "\n" "772:\n"		\
+	".pushsection .parainstructions,\"a\"\n"	\
+	_ASM_ALIGN "\n"					\
+	_ASM_PTR " 771b\n"				\
+	"  .byte " type "\n"				\
+	"  .byte 772b-771b\n"				\
+	"  .short " clobber "\n"			\
+	".popsection\n"
+
 /* Generate patchable code, with the default asm parameters. */
-#define paravirt_call							\
-	"PARAVIRT_CALL type=\"%c[paravirt_typenum]\""			\
-	" clobber=\"%c[paravirt_clobber]\""				\
-	" pv_opptr=\"%c[paravirt_opptr]\";"
+#define paravirt_alt(insn_string)					\
+	_paravirt_alt(insn_string, "%c[paravirt_typenum]", "%c[paravirt_clobber]")
 
 /* Simple instruction patching code. */
 #define NATIVE_LABEL(a,x,b) "\n\t.globl " a #x "_" #b "\n" a #x "_" #b ":\n\t"
@@ -373,6 +385,16 @@ unsigned native_patch(u8 type, void *ibuf, unsigned long addr, unsigned len);
 int paravirt_disable_iospace(void);
 
 /*
+ * This generates an indirect call based on the operation type number.
+ * The type number, computed in PARAVIRT_PATCH, is derived from the
+ * offset into the paravirt_patch_template structure, and can therefore be
+ * freely converted back into a structure offset.
+ */
+#define PARAVIRT_CALL					\
+	ANNOTATE_RETPOLINE_SAFE				\
+	"call *%c[paravirt_opptr];"
+
+/*
  * These macros are intended to wrap calls through one of the paravirt
  * ops structs, so that they can be later identified and patched at
  * runtime.
@@ -509,7 +531,7 @@ int paravirt_disable_iospace(void);
 		/* since this condition will never hold */		\
 		if (sizeof(rettype) > sizeof(unsigned long)) {		\
 			asm volatile(pre				\
-				     paravirt_call			\
+				     paravirt_alt(PARAVIRT_CALL)	\
 				     post				\
 				     : call_clbr, ASM_CALL_CONSTRAINT	\
 				     : paravirt_type(op),		\
@@ -519,7 +541,7 @@ int paravirt_disable_iospace(void);
 			__ret = (rettype)((((u64)__edx) << 32) | __eax); \
 		} else {						\
 			asm volatile(pre				\
-				     paravirt_call			\
+				     paravirt_alt(PARAVIRT_CALL)	\
 				     post				\
 				     : call_clbr, ASM_CALL_CONSTRAINT	\
 				     : paravirt_type(op),		\
@@ -546,7 +568,7 @@ int paravirt_disable_iospace(void);
 		PVOP_VCALL_ARGS;					\
 		PVOP_TEST_NULL(op);					\
 		asm volatile(pre					\
-			     paravirt_call				\
+			     paravirt_alt(PARAVIRT_CALL)		\
 			     post					\
 			     : call_clbr, ASM_CALL_CONSTRAINT		\
 			     : paravirt_type(op),			\
@@ -664,26 +686,6 @@ struct paravirt_patch_site {
 extern struct paravirt_patch_site __parainstructions[],
 	__parainstructions_end[];
 
-#else	/* __ASSEMBLY__ */
-
-/*
- * This generates an indirect call based on the operation type number.
- * The type number, computed in PARAVIRT_PATCH, is derived from the
- * offset into the paravirt_patch_template structure, and can therefore be
- * freely converted back into a structure offset.
- */
-.macro PARAVIRT_CALL type:req clobber:req pv_opptr:req
-771:	ANNOTATE_RETPOLINE_SAFE
-	call *\pv_opptr
-772:	.pushsection .parainstructions,"a"
-	_ASM_ALIGN
-	_ASM_PTR 771b
-	.byte \type
-	.byte 772b-771b
-	.short \clobber
-	.popsection
-.endm
-
 #endif	/* __ASSEMBLY__ */
 
 #endif	/* _ASM_X86_PARAVIRT_TYPES_H */
diff --git a/arch/x86/kernel/macros.S b/arch/x86/kernel/macros.S
index 71d8b71..66ccb8e 100644
--- a/arch/x86/kernel/macros.S
+++ b/arch/x86/kernel/macros.S
@@ -10,4 +10,3 @@
 #include <asm/refcount.h>
 #include <asm/alternative-asm.h>
 #include <asm/bug.h>
-#include <asm/paravirt.h>
-- 
2.7.4

_______________________________________________
Virtualization mailing list
Virtualization@lists.linux-foundation.org
https://lists.linuxfoundation.org/mailman/listinfo/virtualization
