Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 08:46:45 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 0D7515805FC;
	Mon, 17 Dec 2018 08:22:30 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 17 Dec 2018 08:22:29 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ASRYUhRwtCf5nfwTXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0eweKPad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWpPUNhMWSJPAY2y?=
 =?us-ascii?q?aIkAD+QaPeZArYTwvEcCoQekCAWwHu7j1iNEi3nr1qM6yeQhFgTG0RQnEd0Uq3?=
 =?us-ascii?q?TbttX1NKYIUeCy0aLHzy/Mb/ZM1jjg8ofDbxcsoPGWUrJ1a8Xe1FMgGxnAjlqK?=
 =?us-ascii?q?sozqJTOV1uUXs2ic9OdgTuWvhHImqwF2pDig2MgtipXTio0JzVDE8Dx0zYAoLt?=
 =?us-ascii?q?O2T057ZMSrEJpWtyyCM4t2QcYiQ2VytCY90L0Gtoa3fC0Qx5s73R7fbOeHf5KT?=
 =?us-ascii?q?4h34TOqRJC13hGh5d76lhhay90agyur6W8Kp01hKtjJInsfQun0JzRDf98aKRu?=
 =?us-ascii?q?Vn8ku82juDyxrf5+BGLEwsi6bXNp0szqQumpYNrUjPBDH6lFv0gaOMa0ko5uil?=
 =?us-ascii?q?5uL6abv8vJCcLZV7igTmP6QuhMO/BeM4PxAQX2iU5+u8zqfv/U7nT7VQiP05jK?=
 =?us-ascii?q?3ZvIrdJcQBqa61Gw5V0oA95BajFzqqzsgUkH0dIF5Ydh+LkZLlN0zNLfzkF/uy?=
 =?us-ascii?q?glahnC9ux//cP73hBpvNLmLEkLfkZbt9709cyAwuzdFQ/p5UCa8OIOj1WkDvsN?=
 =?us-ascii?q?zUFxg5MgKyw+n5EtVwzZ0eWW2RDa+DKq/SskGH5vgpI+aSYI8ZojH9K+Iq5/L2?=
 =?us-ascii?q?l382hUcdfbW13ZsQcH24GvVmI0aHbnb2jdYBDHwHvg4/TOzslV2DXiRfZ3e0X6?=
 =?us-ascii?q?Ig+D47DJiqApvERoComLaBxju0HoVKZmBaDVCBCXfoeJ+FW/cQci2SJdVtkjwZ?=
 =?us-ascii?q?Vbe7TY8h2gqjtAv7y7phM+rV9TcUtZPl1Nhp+eLTkQs++iBzD8SYy2uNVX17nn?=
 =?us-ascii?q?sURz8q26ByuU59ylCd3qRigPxYEtpT5/VOUgohMZ7czup6C839Ww7bf9eJTkqm?=
 =?us-ascii?q?TcuiAT0rUt0xxNoOaV5nG9q+lhDDwzaqA7gNmrORH5w08qXc33vrK8Zn0XnG1r?=
 =?us-ascii?q?Isj10nQstJKG2nibRz9wnVB47VjUqZk7ymergb3C7I7G2D13aBvFlEUA5sVqXI?=
 =?us-ascii?q?RXMfaVHQrdjj4kPCTqWhCbIoMgZazc6CK61KasDmjFlcRffjPsjebHy1m2uqGR?=
 =?us-ascii?q?mIwbaMZpLwe2oBxCXdFFQEkwcL8HmbLwc+GDmur3jeDDN0E1LveF3j8e95pHO/?=
 =?us-ascii?q?TU80ygWKYlZl17q0/B4VmPOdR+kS3rICpCcutTF0EEyh0NLRDtqKvxBhc7lEYd?=
 =?us-ascii?q?Mh/FdH0nrUuBFnMZy+Ma9unF4efB5xv0P1yRp3DJ5NkcwrrHMs0QpzJriU0FJH?=
 =?us-ascii?q?dzOEw5/wPqfbJXX1/BCqc6TWwE3R0M6K+qcT7/Q1s0njvACsFkol73Vn09lU32?=
 =?us-ascii?q?GA5pnQCwoSS5bxUkcx9xh1vLzaZig954XJ1XxjK6W0sznC2843C+sh0BqvY9Bf?=
 =?us-ascii?q?MKacHg/oD8IaH9SuKPAtm1WxdB0EOP5d9aEqMMKmbfeJw7OrM/t6kzKgjmRH55?=
 =?us-ascii?q?5931mI9yp9TO7IwpkEz+uZ3guBSzfzklOhvtrrloBDYDEYBnC/xjT8BI5Neq1y?=
 =?us-ascii?q?ep4GCGezI8Gt2tpynZ/sW35C+16lCFMLw8upeRuUb1zg0gxcz0UXoXq7mSSmyz?=
 =?us-ascii?q?x4iS0mrq2a3CbW2eTtaAIHOnJXRGlllVrsO4m0gMwAU0iycgcpkwGp5UDkyKhB?=
 =?us-ascii?q?paRzNnXcTl1MfyfrMW5iSKywtryZbs5L6ZMotzhXUeumbVCbTL79vwUV0yf5E2?=
 =?us-ascii?q?RCwzA7cimguo/lkBxilGKdMHFzoWLZeMFx3xve5MbQReVM3joAXyR4jTjXBl6h?=
 =?us-ascii?q?P9im59mUlpHDsvygWGKlTJFcbS7rzYaYviuh+WJqGQG/n+y0mtD/Ewg1yzX719?=
 =?us-ascii?q?ppVSXPthr8eZPk16e5MeJmeElnGln85tF+GoF/lIswmZ4R1WIbhpWT4XoIj2Pz?=
 =?us-ascii?q?Pc9H1qL5aXoHXSQLzMLN4Aj5xE1jKWqExoLjWXWa2MdhZdi6YmUN1yI57sBKDr?=
 =?us-ascii?q?qU7bNekSt0pFq4sRzeYfxnkjgBzvsu7WYQg/sVtwo10iWdHrcSEFFbPSP2lhSE?=
 =?us-ascii?q?9dC+rLhNa2apfri9z05+ndGnDLGfrQBQQnf5epE+HSBu6sVzKk7D0Hr26ov8Yt?=
 =?us-ascii?q?nfccoTtgGIkxfHl+VVLZMxlvkQiiZ9N2Pyo2Yly/Ilghx0xp61opKHK2p28aK9?=
 =?us-ascii?q?Ax5YMCD1ZswJ9jHsi6ZegtiZ34S1Epp9HTULWYPiTei0HzIKqfTnKwGOHSUgqn?=
 =?us-ascii?q?ecHLrTBw6e511gr3LSCJCrLHCXKWIdzdVjQhmdOUNejBoVXDU8gp42CASqyNb9?=
 =?us-ascii?q?f0d+4zAb/kT4pQdUyuJ0Kxn/VX/SqxyyZTczTJifMQBa7gVf50rONcye7+RzHz?=
 =?us-ascii?q?xX/5G7rQyNLHCbaBpMDW0TRkOEAFXjNKG05dbc6+iYGva+L/zWbLWMs+NeUumH?=
 =?us-ascii?q?xYm13ot65TqMNdiPPnp/D/09wEVDRmt0G8DYmzUJViwWmDjBb8+dpBeg5CJ3qt?=
 =?us-ascii?q?qz/+jsWALq/YGPEaddMc1z+xCqhqeOL+6RhCFkKTZBy5MD33nIxKIE3F4VjSFu?=
 =?us-ascii?q?eCKgEbABtS7LUaLRlbVbDx8dayNvKsRI67gw0RVKOc7ektn1zKJ3juYpC1dZUl?=
 =?us-ascii?q?zsgsGpatILI2G+N1PHBVyHNLecJT3MzMH4f7m8SaBLjOhPsx2wuDCbE1LsPziZ?=
 =?us-ascii?q?ljnpUQyvPv9IjC2BIBNev4S9eA53CWf/VNLmdgG7MNhvgDIs3L07nWnKOnAcMD?=
 =?us-ascii?q?Rmd0NNr6ad7SdZgvV5BmxA4WBpLeiCmyaF8ebYLowavudsAiRxj+ha+mg1y6NJ?=
 =?us-ascii?q?7CFYQ/x4gDfSrt9ro128juaD0CZoUBpQpTZNn4+LuURiOaPE9phPQ3rE/RQN7X?=
 =?us-ascii?q?mOBBQOvddqFtrvu6VIwNjViK3zMCtC887T/cYEB8nbMsSHMH8gMRrvADHVDQsF?=
 =?us-ascii?q?QiStNWHQnEFdlPCS9nuIrpk1sJTsmZwOSqNFW1wxDP8VFkNlHNlRaKtwCyN0z5?=
 =?us-ascii?q?aYgdQO6H74qwPeAI1mvpfCX+naLvHiKSafgKMMMwcHxaPQKYUVK5Hh3Epjeh92?=
 =?us-ascii?q?kdKOU2vWUtcFhyplaAYu6BFI8X5xSUUp1k7lYx/r63gWQ7r8tBksixB6aPplzD?=
 =?us-ascii?q?rw4FApbg7AvAM5lEg8n4WjjT3HNHa7DO/2FblbFyfu/2E3LJL9CU4hbRW7tV51?=
 =?us-ascii?q?KDDeAblWiu0zW3psjVr5sIBGGf9GSuV1aRoZyfjfM+Qh1F1Qo2OizFRO5erfDr?=
 =?us-ascii?q?N5kwArdpihv24G0AVmOo1mbZfMLbZEmwADzpmFuTWlg6VomFcT?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0B2AQB7zBdch0O0hNFkH4F4gmqBAieMd?=
 =?us-ascii?q?IsYgiGJAY5DFIFfLAsIAYdWIjUIDQEDAQEBAQEBAgETAQEBCgsJCCkjDII2JAG?=
 =?us-ascii?q?CYgMDAQI9AQE3AQUJAQFFCwMeNgYBEgWDHQGBaAMUAQUKpwmCH4J2AQEFgTABg?=
 =?us-ascii?q?0kNghQDBYd9gyWBHIIWgRGCZIMFLhkBAxiBL4VVIos4hRSQIC8HAocNg0CDXYM?=
 =?us-ascii?q?yFl+Qc4k8hHaBEotoAYILMxojgzwTDIFhUIM4glmCO4VOMTKBBQEBjW8BAQ?=
X-IPAS-Result: =?us-ascii?q?A0B2AQB7zBdch0O0hNFkH4F4gmqBAieMdIsYgiGJAY5DFIF?=
 =?us-ascii?q?fLAsIAYdWIjUIDQEDAQEBAQEBAgETAQEBCgsJCCkjDII2JAGCYgMDAQI9AQE3A?=
 =?us-ascii?q?QUJAQFFCwMeNgYBEgWDHQGBaAMUAQUKpwmCH4J2AQEFgTABg0kNghQDBYd9gyW?=
 =?us-ascii?q?BHIIWgRGCZIMFLhkBAxiBL4VVIos4hRSQIC8HAocNg0CDXYMyFl+Qc4k8hHaBE?=
 =?us-ascii?q?otoAYILMxojgzwTDIFhUIM4glmCO4VOMTKBBQEBjW8BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,366,1539673200"; 
   d="scan'208";a="57210017"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 17 Dec 2018 08:22:27 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2388152AbeLQQWY (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 17 Dec 2018 11:22:24 -0500
Received: from conuserg-07.nifty.com ([210.131.2.74]:28169 "EHLO
        conuserg-07.nifty.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726657AbeLQQWX (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 17 Dec 2018 11:22:23 -0500
Received: from grover.tkatk1.zaq.ne.jp (zaqdadce369.zaq.ne.jp [218.220.227.105]) (authenticated)
        by conuserg-07.nifty.com with ESMTP id wBHG3bRm008119;
        Tue, 18 Dec 2018 01:03:52 +0900
DKIM-Filter: OpenDKIM Filter v2.10.3 conuserg-07.nifty.com wBHG3bRm008119
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=nifty.com;
        s=dec2015msa; t=1545062633;
        bh=aE8w1NqgjkmgVSBM/qyCPbbjO7TRIj12O6ZaY8+0nvk=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=FVMM3bvablEfwC9sMJh0fK94pVwA5UoONl7LYqmkjBBy6mBnYx4klFaiV7vgKjIw5
         H7QP+rNCMFJmeTQlyhy1irDQ223b0QdzkxusGECKA3izCOAvT9eXo4M4wioFAzeG5L
         HUh3fDSf1PJ+FBkiYBEDWIEjSFFNiMH+y32WUiSmx2nx/pJqGJMNUCsVduWRMUBOmr
         72tr/dNyUEycSwFFBJKPqijE0dd0c83ofWnv89dJ1E2N4p4Fi1/5NBTHusapt0OBX0
         Cn8jS010tzWT4wBiF8pVMbtQ6zLXS/21m1XMYOCLtMLg3ZeBnzYgUyCwmGma0eeKPZ
         f4zPjvk9n8O3Q==
X-Nifty-SrcIP: [218.220.227.105]
From: Masahiro Yamada <yamada.masahiro@socionext.com>
To: x86@kernel.org, Thomas Gleixner <tglx@linutronix.de>,
        Ingo Molnar <mingo@redhat.com>, Borislav Petkov <bp@alien8.de>,
        "H . Peter Anvin" <hpa@zytor.com>
Cc: Richard Biener <rguenther@suse.de>,
        Segher Boessenkool <segher@kernel.crashing.org>,
        Peter Zijlstra <peterz@infradead.org>,
        Juergen Gross <jgross@suse.com>,
        Josh Poimboeuf <jpoimboe@redhat.com>,
        Kees Cook <keescook@chromium.org>,
        Linus Torvalds <torvalds@linux-foundation.org>,
        Masahiro Yamada <yamada.masahiro@socionext.com>,
        Logan Gunthorpe <logang@deltatee.com>,
        Nadav Amit <namit@vmware.com>, linux-kbuild@vger.kernel.org,
        linux-kernel@vger.kernel.org,
        Michal Marek <michal.lkml@markovi.net>
Subject: [PATCH v3 09/12] Revert "kbuild/Makefile: Prepare for using macros in inline assembly code to work around asm() related GCC inlining bugs"
Date: Tue, 18 Dec 2018 01:03:24 +0900
Message-Id: <1545062607-8599-10-git-send-email-yamada.masahiro@socionext.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1545062607-8599-1-git-send-email-yamada.masahiro@socionext.com>
References: <1545062607-8599-1-git-send-email-yamada.masahiro@socionext.com>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

This reverts commit 77b0bf55bc675233d22cd5df97605d516d64525e.

A few days after the patch set applied, discussion started to solve
the issue more elegantly with the help of compiler:

  https://lkml.org/lkml/2018/10/7/92

The new syntax "asm inline" was implemented by Segher Boessenkool, and
now queued up for GCC 9. (People were positive even for back-porting it
to older compilers).

Since the in-kernel workarounds merged, some issues have been reported.
The current urgent issue is distro packages for module building. More
fundamentally, we cannot build external modules after 'make clean'
because *.s files are globally removed.

We could fix those in Makefiles, but I do not want to mess up the build
system any more.

Given that this issue will be solved in a cleaner way sooner or later,
let's revert the in-kernel workarounds, and wait for GCC 9.

Link: https://lkml.org/lkml/2018/11/15/467
Link: https://marc.info/?t=154212770600037&r=1&w=2
Reported-by: Sedat Dilek <sedat.dilek@gmail.com> # deb/rpm package
Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
Cc: Logan Gunthorpe <logang@deltatee.com>
Cc: Nadav Amit <namit@vmware.com>
Cc: Segher Boessenkool <segher@kernel.crashing.org>
---


 Makefile                 | 9 ++-------
 arch/x86/Makefile        | 7 -------
 arch/x86/kernel/macros.S | 7 -------
 scripts/Kbuild.include   | 4 +---
 scripts/mod/Makefile     | 2 --
 5 files changed, 3 insertions(+), 26 deletions(-)
 delete mode 100644 arch/x86/kernel/macros.S

diff --git a/Makefile b/Makefile
index 56d5270..885c74b 100644
--- a/Makefile
+++ b/Makefile
@@ -1081,7 +1081,7 @@ scripts: scripts_basic scripts_dtc asm-generic gcc-plugins $(autoksyms_h)
 # version.h and scripts_basic is processed / created.
 
 # Listed in dependency order
-PHONY += prepare archprepare macroprepare prepare0 prepare1 prepare2 prepare3
+PHONY += prepare archprepare prepare0 prepare1 prepare2 prepare3
 
 # prepare3 is used to check if we are building in a separate output directory,
 # and if so do:
@@ -1104,9 +1104,7 @@ prepare2: prepare3 outputmakefile asm-generic
 prepare1: prepare2 $(version_h) $(autoksyms_h) include/generated/utsrelease.h
 	$(cmd_crmodverdir)
 
-macroprepare: prepare1 archmacros
-
-archprepare: archheaders archscripts macroprepare scripts_basic
+archprepare: archheaders archscripts prepare1 scripts_basic
 
 prepare0: archprepare gcc-plugins
 	$(Q)$(MAKE) $(build)=.
@@ -1174,9 +1172,6 @@ archheaders:
 PHONY += archscripts
 archscripts:
 
-PHONY += archmacros
-archmacros:
-
 PHONY += __headers
 __headers: $(version_h) scripts_basic uapi-asm-generic archheaders archscripts
 	$(Q)$(MAKE) $(build)=scripts build_unifdef
diff --git a/arch/x86/Makefile b/arch/x86/Makefile
index 75ef499..85a66c4 100644
--- a/arch/x86/Makefile
+++ b/arch/x86/Makefile
@@ -232,13 +232,6 @@ archscripts: scripts_basic
 archheaders:
 	$(Q)$(MAKE) $(build)=arch/x86/entry/syscalls all
 
-archmacros:
-	$(Q)$(MAKE) $(build)=arch/x86/kernel arch/x86/kernel/macros.s
-
-ASM_MACRO_FLAGS = -Wa,arch/x86/kernel/macros.s
-export ASM_MACRO_FLAGS
-KBUILD_CFLAGS += $(ASM_MACRO_FLAGS)
-
 ###
 # Kernel objects
 
diff --git a/arch/x86/kernel/macros.S b/arch/x86/kernel/macros.S
deleted file mode 100644
index cfc1c7d..0000000
--- a/arch/x86/kernel/macros.S
+++ /dev/null
@@ -1,7 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0 */
-
-/*
- * This file includes headers whose assembly part includes macros which are
- * commonly used. The macros are precompiled into assmebly file which is later
- * assembled together with each compiled file.
- */
diff --git a/scripts/Kbuild.include b/scripts/Kbuild.include
index bb01555..3d09844 100644
--- a/scripts/Kbuild.include
+++ b/scripts/Kbuild.include
@@ -115,9 +115,7 @@ __cc-option = $(call try-run,\
 
 # Do not attempt to build with gcc plugins during cc-option tests.
 # (And this uses delayed resolution so the flags will be up to date.)
-# In addition, do not include the asm macros which are built later.
-CC_OPTION_FILTERED = $(GCC_PLUGINS_CFLAGS) $(ASM_MACRO_FLAGS)
-CC_OPTION_CFLAGS = $(filter-out $(CC_OPTION_FILTERED),$(KBUILD_CFLAGS))
+CC_OPTION_CFLAGS = $(filter-out $(GCC_PLUGINS_CFLAGS),$(KBUILD_CFLAGS))
 
 # cc-option
 # Usage: cflags-y += $(call cc-option,-march=winchip-c6,-march=i586)
diff --git a/scripts/mod/Makefile b/scripts/mod/Makefile
index a5b4af4..42c5d50 100644
--- a/scripts/mod/Makefile
+++ b/scripts/mod/Makefile
@@ -4,8 +4,6 @@ OBJECT_FILES_NON_STANDARD := y
 hostprogs-y	:= modpost mk_elfconfig
 always		:= $(hostprogs-y) empty.o
 
-CFLAGS_REMOVE_empty.o := $(ASM_MACRO_FLAGS)
-
 modpost-objs	:= modpost.o file2alias.o sumversion.o
 
 devicetable-offsets-file := devicetable-offsets.h
-- 
2.7.4

