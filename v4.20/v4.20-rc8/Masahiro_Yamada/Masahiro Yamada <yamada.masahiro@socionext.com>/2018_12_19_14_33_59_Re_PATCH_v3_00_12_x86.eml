Return-Path: <virtualization-bounces@lists.linux-foundation.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  20 Dec 2018 16:21:27 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E2C285805F0
	for <like.xu@linux.intel.com>; Wed, 19 Dec 2018 18:08:25 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 19 Dec 2018 18:08:25 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A/VWkbhVlYnhjyz9dpFN4utMyb03V8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZRWCuKdThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGoyz?=
 =?us-ascii?q?b4UNAOQBM+hWrJTzqUUWrRa8BwehC/7jxzFUinDq0qM6yPouHBra3AEiBd8CrG?=
 =?us-ascii?q?jYoMnrOKoUTOu7zLPIzTLGb/5O3jny8pPIfQohofGNR7Jwdtfaxks1GAPAlFqf?=
 =?us-ascii?q?tJbqNC6S2+UNqWeb6vBvWv+1hGI9rgF+uCOvyd0sionInIIVzUvJ9T5+wIkpJN?=
 =?us-ascii?q?24T0h7bsCrEZtMrS2VK4x2QsY7TmxupS00xLoGuZuhcygLzpQq3x3fZOKdc4iO?=
 =?us-ascii?q?/B3jUPydITBihHJqYL6/gxey8U69yuzzWMm010tKrixYndbWqnAN1hvT6s6dRv?=
 =?us-ascii?q?t65Eeh1i6D2x7P5u1eOkA0krLXK5Enwr4tjJYTtl7DHiDwlU7rj6GWbl0p9vWn?=
 =?us-ascii?q?5uj7eLnquIKQO5Juhg3jM6kjntazDfkmPgQWQWSX5eCx2Kfg8ED5WrlGkOA6n6?=
 =?us-ascii?q?vDvJ3aK8kWoLOyDRVP3YY58Rm/Ci+r0NQGknkDK1JIYBeHgJLoO1HKOvz4Cfa/?=
 =?us-ascii?q?g1KxkDZkyfDGOaDhApPQIXfZjLfhfLF960hGxAo019Bf6IpYCrAHIP3tRk/8rM?=
 =?us-ascii?q?HUAxAlPwCu3errFchx2pkDVW+OBqKVKr7evUGQ6uIqOeaMZYsVuDjnK/gi4v7j?=
 =?us-ascii?q?lWE5mV4Hfam1wJsYcnS4HvVnIkqDfXrsg9ABEWETsgUlS+zqlVuCXiJNaHapRK?=
 =?us-ascii?q?884jA7CJm6DYfYXIythL2B3CGmHpxZf2xGBFeMEWrud4qZQfgMdCOSIshnkjAe?=
 =?us-ascii?q?UrihUYAh2Qm0tADm07pnMvbU+ioAuJLn1dh15PPcmQs99DxpFMmd12CNT2dpnm?=
 =?us-ascii?q?IHXTM23aZ/oVBjxVeHy6R3n/tYFdkAr85PSRowYJ7A0/RhWZe1XgPaYszPTFeg?=
 =?us-ascii?q?X8WoBiw3QtstwtgIJUFnFJKnhxHH2iOsRLgNi72MAodz7KPGw2X4I8dvwmrH06?=
 =?us-ascii?q?9ysl89X8EaMGSngrJ4pRbSHZLUmkGYha+2dKMamTTA7XqO1namuEBDTBU2VaTD?=
 =?us-ascii?q?QGBaaEzLq9jw+kLFSfmpE7twKRZLy8OJNv5XbMb0h05NXvbpNYfiZDeQnWi3TT?=
 =?us-ascii?q?OPwrWFdsK+fmQb0yL1C0UelQ0Xu3GcOl5tKD2mpjf7BSdnFVP1ZAvd+Ox3pHrz?=
 =?us-ascii?q?Gl49ygiGZgtk3qG8+h8PgtSHTPgS2bQJqDtnoDJxSgXul+nKAsaN8lIyNJ5XZs?=
 =?us-ascii?q?kwtRIejTrU?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AUAABp+Rpchwyp04xkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUgYBAQsBgmmBKYx1jSp8JZY8gXMVGAuEA4MzIjUIDQEDAQEBAQEBAgETAQE?=
 =?us-ascii?q?BCgsJCCkjDII2BQIDGgEGglsBAQEBAgEBAQEkEwYBAQQKHgsBAgIBAQIGAQEKC?=
 =?us-ascii?q?wMKHgQECAMBHgUBDAEFARwGEwUDE4MHAYF5BwEFCpwUPIopgWwzgnYBAQWBMAG?=
 =?us-ascii?q?FeAMFiyOBHIIWgRGCFEk1gwUZAQIChz2JMRuBdoRhNoVDilJLBwKHEIYxhCEYY?=
 =?us-ascii?q?H6FH4J4h2SKdINOizMPIYEnAYILMxojUDEGggEBM4IbDBeDSoUUhU4xATEBjG+?=
 =?us-ascii?q?BdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AUAABp+Rpchwyp04xkHAEBAQQBAQcEAQGBUgYBAQsBgmm?=
 =?us-ascii?q?BKYx1jSp8JZY8gXMVGAuEA4MzIjUIDQEDAQEBAQEBAgETAQEBCgsJCCkjDII2B?=
 =?us-ascii?q?QIDGgEGglsBAQEBAgEBAQEkEwYBAQQKHgsBAgIBAQIGAQEKCwMKHgQECAMBHgU?=
 =?us-ascii?q?BDAEFARwGEwUDE4MHAYF5BwEFCpwUPIopgWwzgnYBAQWBMAGFeAMFiyOBHIIWg?=
 =?us-ascii?q?RGCFEk1gwUZAQIChz2JMRuBdoRhNoVDilJLBwKHEIYxhCEYYH6FH4J4h2SKdIN?=
 =?us-ascii?q?OizMPIYEnAYILMxojUDEGggEBM4IbDBeDSoUUhU4xATEBjG+BdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,375,1539673200"; 
   d="scan'208";a="56635862"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from mail.linuxfoundation.org ([140.211.169.12])
  by mtab.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 19 Dec 2018 18:08:19 -0800
Received: from mail.linux-foundation.org (localhost [127.0.0.1])
	by mail.linuxfoundation.org (Postfix) with ESMTP id 020E410C7;
	Wed, 19 Dec 2018 14:34:45 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@mail.linuxfoundation.org
Received: from smtp1.linuxfoundation.org (smtp1.linux-foundation.org
	[172.17.192.35])
	by mail.linuxfoundation.org (Postfix) with ESMTPS id AEDEA415
	for <virtualization@lists.linux-foundation.org>;
	Wed, 19 Dec 2018 14:34:40 +0000 (UTC)
X-Greylist: from auto-whitelisted by SQLgrey-1.7.6
Received: from conssluserg-04.nifty.com (conssluserg-04.nifty.com
	[210.131.2.83])
	by smtp1.linuxfoundation.org (Postfix) with ESMTPS id 80F3AA8
	for <virtualization@lists.linux-foundation.org>;
	Wed, 19 Dec 2018 14:34:39 +0000 (UTC)
Received: from mail-vs1-f53.google.com (mail-vs1-f53.google.com
	[209.85.217.53]) (authenticated)
	by conssluserg-04.nifty.com with ESMTP id wBJEYa0q008500
	for <virtualization@lists.linux-foundation.org>;
	Wed, 19 Dec 2018 23:34:36 +0900
DKIM-Filter: OpenDKIM Filter v2.10.3 conssluserg-04.nifty.com wBJEYa0q008500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=nifty.com;
	s=dec2015msa; t=1545230077;
	bh=UeoJeP+KrOhnGZv5MdxTs/f/kZ4bRafHorW8k5oxO+M=;
	h=References:In-Reply-To:From:Date:Subject:To:Cc:From;
	b=t4Yuctods5jrCsUpLIdTpOvPunOjJD3CmSyCeCVYDn7IVrbFle1aT9Ioa6XISteq2
	dtekbN2Jn/veyRqhMyZDZ2JZMVDS61LWEgh6JXMDJXsYdlT1pzTjjQO2RUsEj+C3bD
	YPcfLhOQzK+al3dGdVLbxSVqo87X8vR3OIV8kwA3Tf7enusqshiTw7V5TT8vCrsA1d
	OfMtbuV/xEJ5eo+crDu+ns5uBU2E0kuI+TLjhuVl51eFfJKc18LQ+iHevbzCM34enH
	+lGK9VN2xNWWNMrc3q2x+1XMd3GlcaO/DXWnmLSvEuSE1f/xc2THhWXYplLY0LfCOF
	pR9SWyjC6bz7w==
X-Nifty-SrcIP: [209.85.217.53]
Received: by mail-vs1-f53.google.com with SMTP id h78so12352967vsi.6
	for <virtualization@lists.linux-foundation.org>;
	Wed, 19 Dec 2018 06:34:36 -0800 (PST)
X-Gm-Message-State: AA+aEWY1n0nHqLHAYGlGgAj21XIt76RkvY5oeq8qDNFQKL3iw16IsIv/
	t/XXt3jquvFf2CFgbcA/c4Jj71SY4ZhI0/K3xY0=
X-Google-Smtp-Source: AFSGD/UOGiSkiDli2zyySXzQ+AGY3MTja/MRKAIv7O3w4B63EL2TVlygZU+jPS5j7PhUqNeuQKn+G5eZlpHRk0CIFkY=
X-Received: by 2002:a67:a858:: with SMTP id r85mr10030304vse.215.1545230075286;
	Wed, 19 Dec 2018 06:34:35 -0800 (PST)
MIME-Version: 1.0
References: <1545062607-8599-1-git-send-email-yamada.masahiro@socionext.com>
	<20181219112028.GA38175@gmail.com>
In-Reply-To: <20181219112028.GA38175@gmail.com>
From: Masahiro Yamada <yamada.masahiro@socionext.com>
Date: Wed, 19 Dec 2018 23:33:59 +0900
X-Gmail-Original-Message-ID: <CAK7LNAQjZP8mYD02+=uvzO135fTB5GyU7_snV7ymFAjMBsep8w@mail.gmail.com>
Message-ID: <CAK7LNAQjZP8mYD02+=uvzO135fTB5GyU7_snV7ymFAjMBsep8w@mail.gmail.com>
Subject: Re: [PATCH v3 00/12] x86,
	kbuild: revert macrofying inline assembly code
To: Ingo Molnar <mingo@kernel.org>
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,RCVD_IN_DNSWL_NONE autolearn=ham version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	smtp1.linux-foundation.org
Cc: Peter Zijlstra <peterz@infradead.org>, Yonghong Song <yhs@fb.com>,
	Alexei Starovoitov <ast@kernel.org>,
	virtualization@lists.linux-foundation.org,
	Nadav Amit <namit@vmware.com>, Jan Beulich <JBeulich@suse.com>,
	"H . Peter Anvin" <hpa@zytor.com>, Alok Kataria <akataria@vmware.com>,
	linux-arch <linux-arch@vger.kernel.org>,
	Arnd Bergmann <arnd@arndb.de>, X86 ML <x86@kernel.org>,
	linux-sparse@vger.kernel.org, Ingo Molnar <mingo@redhat.com>,
	Andrey Ryabinin <aryabinin@virtuozzo.com>,
	Alexey Dobriyan <adobriyan@gmail.com>, Kees Cook <keescook@chromium.org>,
	Segher Boessenkool <segher@kernel.crashing.org>,
	Jann Horn <jannh@google.com>, Arnaldo Carvalho de Melo <acme@redhat.com>,
	Borislav Petkov <bp@alien8.de>, Josh Poimboeuf <jpoimboe@redhat.com>,
	Thomas Gleixner <tglx@linutronix.de>,
	Linux Kbuild mailing list <linux-kbuild@vger.kernel.org>,
	Juergen Gross <jgross@suse.com>, Michal Marek <michal.lkml@markovi.net>,
	Richard Biener <rguenther@suse.de>,
	Ard Biesheuvel <ard.biesheuvel@linaro.org>,
	Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
	David Woodhouse <dwmw@amazon.co.uk>,
	Andrew Morton <akpm@linux-foundation.org>,
	Linus Torvalds <torvalds@linux-foundation.org>,
	Luc Van Oostenryck <luc.vanoostenryck@gmail.com>
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.12
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>,
	<mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>,
	<mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: virtualization-bounces@lists.linux-foundation.org
Errors-To: virtualization-bounces@lists.linux-foundation.org

On Wed, Dec 19, 2018 at 9:44 PM Ingo Molnar <mingo@kernel.org> wrote:
>
>
> * Masahiro Yamada <yamada.masahiro@socionext.com> wrote:
>
> > This series reverts the in-kernel workarounds for inlining issues.
> >
> > The commit description of 77b0bf55bc67 mentioned
> > "We also hope that GCC will eventually get fixed,..."
> >
> > Now, GCC provides a solution.
> >
> > https://gcc.gnu.org/onlinedocs/gcc/Extended-Asm.html
> > explains the new "asm inline" syntax.
> >
> > The performance issue will be eventually solved.
> >
> > [About Code cleanups]
> >
> > I know Nadam Amit is opposed to the full revert.
> > He also claims his motivation for macrofying was not only
> > performance, but also cleanups.
> >
> > IIUC, the criticism addresses the code duplication between C and ASM.
> >
> > If so, I'd like to suggest a different approach for cleanups.
> > Please see the last 3 patches.
> > IMHO, preprocessor approach is more straight-forward, and readable.
> > Basically, this idea should work because it is what we already do for
> > __ASM_FORM() etc.
> >
> > [Quick Test of "asm inline" of GCC 9]
> >
> > If you want to try "asm inline" feature, the patch is available:
> > https://lore.kernel.org/patchwork/patch/1024590/
> >
> > The number of symbols for arch/x86/configs/x86_64_defconfig:
> >
> >                             nr_symbols
> >   [1]    v4.20-rc7       :   96502
> >   [2]    [1]+full revert :   96705   (+203)
> >   [3]    [2]+"asm inline":   96568   (-137)
> >
> > [3]: apply my patch, then replace "asm" -> "asm_inline"
> >     for _BUG_FLAGS(), refcount_add(), refcount_inc(), refcount_dec(),
> >         annotate_reachable(), annotate_unreachable()
> >
> >
> > Changes in v3:
> >   - Split into per-commit revert (per Nadav Amit)
> >   - Add some cleanups with preprocessor approach
> >
> > Changes in v2:
> >   - Revive clean-ups made by 5bdcd510c2ac (per Peter Zijlstra)
> >   - Fix commit quoting style (per Peter Zijlstra)
> >
> > Masahiro Yamada (12):
> >   Revert "x86/jump-labels: Macrofy inline assembly code to work around
> >     GCC inlining bugs"
> >   Revert "x86/cpufeature: Macrofy inline assembly code to work around
> >     GCC inlining bugs"
> >   Revert "x86/extable: Macrofy inline assembly code to work around GCC
> >     inlining bugs"
> >   Revert "x86/paravirt: Work around GCC inlining bugs when compiling
> >     paravirt ops"
> >   Revert "x86/bug: Macrofy the BUG table section handling, to work
> >     around GCC inlining bugs"
> >   Revert "x86/alternatives: Macrofy lock prefixes to work around GCC
> >     inlining bugs"
> >   Revert "x86/refcount: Work around GCC inlining bug"
> >   Revert "x86/objtool: Use asm macros to work around GCC inlining bugs"
> >   Revert "kbuild/Makefile: Prepare for using macros in inline assembly
> >     code to work around asm() related GCC inlining bugs"
> >   linux/linkage: add ASM() macro to reduce duplication between C/ASM
> >     code
> >   x86/alternatives: consolidate LOCK_PREFIX macro
> >   x86/asm: consolidate ASM_EXTABLE_* macros
> >
> >  Makefile                                  |  9 +--
> >  arch/x86/Makefile                         |  7 ---
> >  arch/x86/include/asm/alternative-asm.h    | 22 +------
> >  arch/x86/include/asm/alternative-common.h | 47 +++++++++++++++
> >  arch/x86/include/asm/alternative.h        | 30 +---------
> >  arch/x86/include/asm/asm.h                | 46 +++++----------
> >  arch/x86/include/asm/bug.h                | 98 +++++++++++++------------------
> >  arch/x86/include/asm/cpufeature.h         | 82 +++++++++++---------------
> >  arch/x86/include/asm/jump_label.h         | 22 +++++--
> >  arch/x86/include/asm/paravirt_types.h     | 56 +++++++++---------
> >  arch/x86/include/asm/refcount.h           | 81 +++++++++++--------------
> >  arch/x86/kernel/macros.S                  | 16 -----
> >  include/asm-generic/bug.h                 |  8 +--
> >  include/linux/compiler.h                  | 56 ++++--------------
> >  include/linux/linkage.h                   |  8 +++
> >  scripts/Kbuild.include                    |  4 +-
> >  scripts/mod/Makefile                      |  2 -
> >  17 files changed, 249 insertions(+), 345 deletions(-)
> >  create mode 100644 arch/x86/include/asm/alternative-common.h
> >  delete mode 100644 arch/x86/kernel/macros.S
>
> I absolutely agree that this needs to be resolved in v4.20.
>
> So I did the 1-9 reverts manually myself as well, because I think the
> first commit should be reverted fully to get as close to the starting
> point as possible (we are late in the cycle) - and came to the attached
> interdiff between your series and mine.
>
> Does this approach look OK to you, or did I miss something?


It looks OK to me.

I thought the diff was a good cleanup part,
but we can deal with it later on,
so I do not mind it.

Thanks!



> Thanks,
>
>         Ingo
>
> =============>
>
>  entry/calling.h          |    2 -
>  include/asm/jump_label.h |   50 ++++++++++++++++++++++++++++++++++-------------
>  2 files changed, 38 insertions(+), 14 deletions(-)
>
> diff --git a/arch/x86/entry/calling.h b/arch/x86/entry/calling.h
> index 25e5a6bda8c3..20d0885b00fb 100644
> --- a/arch/x86/entry/calling.h
> +++ b/arch/x86/entry/calling.h
> @@ -352,7 +352,7 @@ For 32-bit we have the following conventions - kernel is built with
>  .macro CALL_enter_from_user_mode
>  #ifdef CONFIG_CONTEXT_TRACKING
>  #ifdef HAVE_JUMP_LABEL
> -       STATIC_BRANCH_JMP l_yes=.Lafter_call_\@, key=context_tracking_enabled, branch=1
> +       STATIC_JUMP_IF_FALSE .Lafter_call_\@, context_tracking_enabled, def=0
>  #endif
>         call enter_from_user_mode
>  .Lafter_call_\@:
> diff --git a/arch/x86/include/asm/jump_label.h b/arch/x86/include/asm/jump_label.h
> index cf88ebf9a4ca..21efc9d07ed9 100644
> --- a/arch/x86/include/asm/jump_label.h
> +++ b/arch/x86/include/asm/jump_label.h
> @@ -2,6 +2,19 @@
>  #ifndef _ASM_X86_JUMP_LABEL_H
>  #define _ASM_X86_JUMP_LABEL_H
>
> +#ifndef HAVE_JUMP_LABEL
> +/*
> + * For better or for worse, if jump labels (the gcc extension) are missing,
> + * then the entire static branch patching infrastructure is compiled out.
> + * If that happens, the code in here will malfunction.  Raise a compiler
> + * error instead.
> + *
> + * In theory, jump labels and the static branch patching infrastructure
> + * could be decoupled to fix this.
> + */
> +#error asm/jump_label.h included on a non-jump-label kernel
> +#endif
> +
>  #define JUMP_LABEL_NOP_SIZE 5
>
>  #ifdef CONFIG_X86_64
> @@ -53,26 +66,37 @@ static __always_inline bool arch_static_branch_jump(struct static_key *key, bool
>
>  #else  /* __ASSEMBLY__ */
>
> -.macro STATIC_BRANCH_NOP l_yes:req key:req branch:req
> -.Lstatic_branch_nop_\@:
> -       .byte STATIC_KEY_INIT_NOP
> -.Lstatic_branch_no_after_\@:
> +.macro STATIC_JUMP_IF_TRUE target, key, def
> +.Lstatic_jump_\@:
> +       .if \def
> +       /* Equivalent to "jmp.d32 \target" */
> +       .byte           0xe9
> +       .long           \target - .Lstatic_jump_after_\@
> +.Lstatic_jump_after_\@:
> +       .else
> +       .byte           STATIC_KEY_INIT_NOP
> +       .endif
>         .pushsection __jump_table, "aw"
>         _ASM_ALIGN
> -       .long           .Lstatic_branch_nop_\@ - ., \l_yes - .
> -       _ASM_PTR        \key + \branch - .
> +       .long           .Lstatic_jump_\@ - ., \target - .
> +       _ASM_PTR        \key - .
>         .popsection
>  .endm
>
> -.macro STATIC_BRANCH_JMP l_yes:req key:req branch:req
> -.Lstatic_branch_jmp_\@:
> -       .byte 0xe9
> -       .long \l_yes - .Lstatic_branch_jmp_after_\@
> -.Lstatic_branch_jmp_after_\@:
> +.macro STATIC_JUMP_IF_FALSE target, key, def
> +.Lstatic_jump_\@:
> +       .if \def
> +       .byte           STATIC_KEY_INIT_NOP
> +       .else
> +       /* Equivalent to "jmp.d32 \target" */
> +       .byte           0xe9
> +       .long           \target - .Lstatic_jump_after_\@
> +.Lstatic_jump_after_\@:
> +       .endif
>         .pushsection __jump_table, "aw"
>         _ASM_ALIGN
> -       .long           .Lstatic_branch_jmp_\@ - ., \l_yes - .
> -       _ASM_PTR        \key + \branch - .
> +       .long           .Lstatic_jump_\@ - ., \target - .
> +       _ASM_PTR        \key + 1 - .
>         .popsection
>  .endm
>
>


-- 
Best Regards
Masahiro Yamada
_______________________________________________
Virtualization mailing list
Virtualization@lists.linux-foundation.org
https://lists.linuxfoundation.org/mailman/listinfo/virtualization
