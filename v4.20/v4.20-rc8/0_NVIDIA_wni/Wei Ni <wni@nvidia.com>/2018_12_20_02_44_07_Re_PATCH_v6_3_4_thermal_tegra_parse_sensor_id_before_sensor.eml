Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  20 Dec 2018 16:21:41 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 3DE29580522;
	Wed, 19 Dec 2018 18:47:46 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga007-1.jf.intel.com with ESMTP; 19 Dec 2018 18:47:46 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A2yKIsxUUPzyoYkx2qPgxqgOqxefV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZheDtadThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmTgLjhi?=
 =?us-ascii?q?UaOD4j6GzZl9J+jKxbrhyiqRJwzYHbb4OUNPVica3dZssaSGhaU8ZNVSFMGJ+w?=
 =?us-ascii?q?Y5cBAucDO+tTsonzp0EJrRu7HQSjBP3gyj5VjXHu3K0xzuMsEA/A3AwhBN8Otm?=
 =?us-ascii?q?rUrNToO6cTS++51rXHzTLGb/5P3zr29YvGcgg5rP2SQb59ddDdxVQhGg/blFmc?=
 =?us-ascii?q?tI/oMy+P2ukMsWWX9/dsWOCxh2I9tQ19viKjytoih4XTiI8YzkjI+TtkzIs0P9?=
 =?us-ascii?q?G0VlB3bN2+HJdNqS2WKpF6T8ItTmxupS000KcJuYShcygP0JknxwDQa/iAc4WQ?=
 =?us-ascii?q?/BLjW/ieIS1iiHJmZr2/nRCy/lakyuHmUcm0yllKojJEktnKqH8NywTe5tabRv?=
 =?us-ascii?q?Z55EutxDiC2x7J5u1ZIk04ibDXJp8jz7Iok5ocq0XDHiv4mEXsi6+Wc10p+uyp?=
 =?us-ascii?q?6+Thf7XnqYaQN4xqhQHkNKQhhMi/Df0/MgkAWWiU5/682ab9/U32XrpKlOc6kq?=
 =?us-ascii?q?rHv5DAI8QUuKq5DxVS0oY55BazFy2m38gAnXkbMFJFfwqKj4zoO1HNPv/0F/i+?=
 =?us-ascii?q?g0m3nTdvxvDGOKDhA5rXInjClrfhYahy60pGxAUvytBf4opeCqsdL/LrRk/xqN?=
 =?us-ascii?q?vYAwc5MwOuwubnFM9y1oQEVWKPH6+WKqXSsVCT6+IrIumMYpIVuTnnJ/gk4f7u?=
 =?us-ascii?q?kWE2mVsHcaa12psXbWiyHu56LEWBfXrsntABHH8QsQolTOzqj16CXSRJZ3moXa?=
 =?us-ascii?q?Ix/TU7CIOgDYfeSYGhmr2B3CGnHpJIYmBKEEyDEXDtd4+cQfcDdDqSItN9kjwD?=
 =?us-ascii?q?TbWhSJUu1Re0uA/+yrpoNOzU+iIDuJLn1dh14fDTlB4o+Tx1CcSdz3+CT2Vukm?=
 =?us-ascii?q?wUQD822bh1oVZhxVebzah4n/tYGMRO6PxTTAc1K4TQz+xgBND0QQLOYNGJRFGi?=
 =?us-ascii?q?QtWlBDExSsk8w9sPY0Z7BtWjgQrP3yusA78JibOLAIY4/b7b33j0P8x90WrJ1L?=
 =?us-ascii?q?E9j1k6RctCLXCpibRh9wfNHYLJk1+Wl6CxdasC2i7A72ODzWuIvEFFXw98S6TF?=
 =?us-ascii?q?XXYDZkTIqdT1/F/NT7irCb4/KAtO1daCKrdWat3ulVhGWPbjONHZY2Ktm2exBQ?=
 =?us-ascii?q?yExq+WYIrtYWUd2CTdCE4Lkw0I+XaGNA4+Bjquom7EDTxuE07vbF3o8eVktHy7?=
 =?us-ascii?q?SUo0xRmQb0J9z7q15gIVhfuERvwJ2rILpiggpCt0HVqnxN3WFsePqBBnfKVfZt?=
 =?us-ascii?q?M9/kxK1WbYtwx7I5yhILpuhl8YcwRroUzu0w97BZlHkcgvtHkq1hZ9KbqE0FNd?=
 =?us-ascii?q?cDOVxZDxOqDNJmbu5hyuaq7W1UvY0NaZ4aoP7PU4q1P+vACmDEYi8nNn08VL3H?=
 =?us-ascii?q?uY/JnFEA0SUZfpWEYt6xd6v63aYjU6547Mz31sMLW7vSXY2900A+sp0BCgcMlF?=
 =?us-ascii?q?MKOFDQP9D9cVB8yzJ+M0gVipaRQEMftW9K41OcOmavSH1LSqPOZmgDKpk2BH7J?=
 =?us-ascii?q?ph3UKL8ip2UvTI0Iodw/GEwguHUC/xjVegssztmYFIfyoSHne5ySX/AI5RZ6ty?=
 =?us-ascii?q?fZsECGu0Is23wMl+iIDpW3JC6FGjAFYG0tezeRWOd1z9wRFQ1UMPrHylgyS41T?=
 =?us-ascii?q?90kzIurqaFxyzB2efidBkGOm5NWmZii0zhIYy1j9AcQUipYBIllBqj5Ubm2adb?=
 =?us-ascii?q?oL5zIHXUQUdNZyL2NX1tUrOstrqeZM5C8JMpvj9QUOimY1CaS7j9rgAe0yPiGW?=
 =?us-ascii?q?te2T86eyurupX/gxx1lmadIGxvo3refMF63Q3f68DERf5NwjoGQzF1iTrNCVi9?=
 =?us-ascii?q?JdWp/ciUmI3FsuCxTG+hUpxTcS/2zYKPrie75GtqAQGhkPC3gNHoDQ860Srj3d?=
 =?us-ascii?q?lwSSrItAr8YpXs16miNOJnf0poC0Xm58t0BI5+iZcwi48K2XcBmJqV53UHnHz3?=
 =?us-ascii?q?MdVa36L+cXUMSSQKw97T/AjqxkljImiVyIL+U3WX2tFhaMWiYmMKxiI96NhHCL?=
 =?us-ascii?q?uT7LxBhyd0o0C3rQTMYfhmhTcdyOAj6Hobg+EPpQoswT+RArEUHUlEIyPskw6E?=
 =?us-ascii?q?4My5rKVSfGyva6S/1FJindC9C7GPuhpTV2z+epcmAC989MF/ME/X3X3364Hkfs?=
 =?us-ascii?q?TQbN0Juh2VlRfAk/ZaKJYrmvUWgipnPHr3vWc5xO4jkRxuwZa6sZCFK2p3+aK2?=
 =?us-ascii?q?HAVYOifpZ88J+THtkKVentuQ34+1BZVsATELXJruTfK1HzMer/XnNwCSEDIirn?=
 =?us-ascii?q?eXA6bQHQia6E1+tXLAD4irN22LJHke1dhjRB6dJFFGgAAJRjo6mIQ1FhutxMzn?=
 =?us-ascii?q?f0d0/TQR5l/+qhtRxeNkLRj/UmHDpAi2bjc4UoSQLB1T7gta/UfaLdSe7v5vHy?=
 =?us-ascii?q?Ff5pChrBKCKm2YZwRLDGEFQE+EB0rkPrmh+9bA6fWYBvGlIvvKYLWOr/FeVviS?=
 =?us-ascii?q?yZKu1Itm4yiDNsGVMnZ+CP0731JJXWplFMTBhzUPVysXmjrXYM6Gvxi84DN4r8?=
 =?us-ascii?q?Cl/PTvWQLi/o+PC7pUMdVy9BG6m6aDN+iMhClnLTZUzI8DxXjNyLIHxl4dlzlu?=
 =?us-ascii?q?dyWxEbQHrSPNUKPQmqpNAxEHcS98KMtI4Lw63gRWPc7bi9X11qN3j/IvCldFU0?=
 =?us-ascii?q?Dhld+tZcAQP269M1bHDl6RNLuaPT3L3933YaSkRLxQlupUsRiwuTedE0D7PzWD?=
 =?us-ascii?q?lyPmVxagMexXiCGbPRpeuJyycxp3CGjjSs7mZQO/MNNtkTI2xrg01Tv2MjsxPS?=
 =?us-ascii?q?V1aU9K5oOZ6S5envR5UzhM4mdvIPuakiKx4OzRK5JQuvxuVHdajeVftUs3yvNz?=
 =?us-ascii?q?7WkQW/p0sC3Mr9JvqhetlezZmWkvawZHtjse3NHDhk5lI6iMrpQ=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ATAABcAhtch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2snCoNziBmNXC0UgzGUGIFzFRgTAYctIjQJDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCA0JCCkjDII2IoJkAQEBAQIBAQIgBBkBATcBBQkBAQoOCgICJgICA0QQB?=
 =?us-ascii?q?g0BBQIBAQGDHYF6CAWma3B8M4J2AQEFgkOEZgiBC4oYgRwXgUA/gREngmuICYJ?=
 =?us-ascii?q?XiUKCAIQaRzZTkA0JDZFPBhiBXoUfgwuHUZoEgUaCDnAVgyeCGwwXg0qKYDMBM?=
 =?us-ascii?q?YEFAQGMQYEfAQE?=
X-IPAS-Result: =?us-ascii?q?A0ATAABcAhtch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?nCoNziBmNXC0UgzGUGIFzFRgTAYctIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjD?=
 =?us-ascii?q?II2IoJkAQEBAQIBAQIgBBkBATcBBQkBAQoOCgICJgICA0QQBg0BBQIBAQGDHYF?=
 =?us-ascii?q?6CAWma3B8M4J2AQEFgkOEZgiBC4oYgRwXgUA/gREngmuICYJXiUKCAIQaRzZTk?=
 =?us-ascii?q?A0JDZFPBhiBXoUfgwuHUZoEgUaCDnAVgyeCGwwXg0qKYDMBMYEFAQGMQYEfAQE?=
X-IronPort-AV: E=Sophos;i="5.56,375,1539673200"; 
   d="scan'208";a="58234351"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 19 Dec 2018 18:47:17 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729391AbeLTCoO (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Wed, 19 Dec 2018 21:44:14 -0500
Received: from hqemgate15.nvidia.com ([216.228.121.64]:15603 "EHLO
        hqemgate15.nvidia.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726604AbeLTCoO (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 19 Dec 2018 21:44:14 -0500
Received: from hqpgpgate101.nvidia.com (Not Verified[216.228.121.13]) by hqemgate15.nvidia.com (using TLS: TLSv1.2, DES-CBC3-SHA)
        id <B5c1b01f60000>; Wed, 19 Dec 2018 18:44:06 -0800
Received: from hqmail.nvidia.com ([172.20.161.6])
  by hqpgpgate101.nvidia.com (PGP Universal service);
  Wed, 19 Dec 2018 18:44:12 -0800
X-PGP-Universal: processed;
        by hqpgpgate101.nvidia.com on Wed, 19 Dec 2018 18:44:12 -0800
Received: from [10.19.225.182] (172.20.13.39) by HQMAIL101.nvidia.com
 (172.20.187.10) with Microsoft SMTP Server (TLS) id 15.0.1395.4; Thu, 20 Dec
 2018 02:44:10 +0000
Subject: Re: [PATCH v6 3/4] thermal: tegra: parse sensor id before sensor
 register
To: Eduardo Valentin <edubezval@gmail.com>
CC: <rui.zhang@intel.com>, <thierry.reding@gmail.com>,
        <daniel.lezcano@linaro.org>, <linux-tegra@vger.kernel.org>,
        <srikars@nvidia.com>, <linux-kernel@vger.kernel.org>,
        <linux-pm@vger.kernel.org>
References: <1544780993-20744-1-git-send-email-wni@nvidia.com>
 <1544780993-20744-4-git-send-email-wni@nvidia.com>
 <20181219012450.GA2842@localhost.localdomain>
 <5c48701f-aafc-2db0-2191-41f169c8f33f@nvidia.com>
 <20181219145732.GA3516@localhost.localdomain>
From: Wei Ni <wni@nvidia.com>
Message-ID: <6f511eb9-e3f6-0a23-c0d0-5a866a6ec547@nvidia.com>
Date: Thu, 20 Dec 2018 10:44:07 +0800
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <20181219145732.GA3516@localhost.localdomain>
X-Originating-IP: [172.20.13.39]
X-ClientProxiedBy: HQMAIL106.nvidia.com (172.18.146.12) To
 HQMAIL101.nvidia.com (172.20.187.10)
Content-Type: text/plain; charset="utf-8"
Content-Language: en-US
Content-Transfer-Encoding: 7bit
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=nvidia.com; s=n1;
        t=1545273846; bh=fBpdunb7+Pkxevv0qprZ9SzqwX+Bm6DovKGUvRDgxoE=;
        h=X-PGP-Universal:Subject:To:CC:References:From:Message-ID:Date:
         User-Agent:MIME-Version:In-Reply-To:X-Originating-IP:
         X-ClientProxiedBy:Content-Type:Content-Language:
         Content-Transfer-Encoding;
        b=RSfR7/MU+bruMISrxd3V9NBMOLKXwrvdJ5L+CGjm8bPNK8p9yHJM2rzrdPBAfEwHW
         4hZzDG3JSIR/96//xQZPfAplU26F41XNHUL+PilP8Vi4ebPfrRB24ww3pkqQ+j+DL8
         3QPW0iYZue2Sk6VxhQlPjkPYX0dxhMV9Gkh51pGTQsostDdigWdRDRXSypplWS5tWX
         LB20f0ETZnrvQ6Ey8UAt/RshFRIcC/gUgnYOUVkDqZx9Vt3445GdTJFuhRPOyVeV5M
         hqS3XT1XBll2/5YBWjkBkmhYq1kSxZwZaQ2hqKTMRA4I07K+LGg/UWYuchch++vLmr
         4UO9k5SV1WxsQ==
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org



On 19/12/2018 10:57 PM, Eduardo Valentin wrote:
> On Wed, Dec 19, 2018 at 11:00:10AM +0800, Wei Ni wrote:
>>
>>
>> On 19/12/2018 9:24 AM, Eduardo Valentin wrote:
>>> On Fri, Dec 14, 2018 at 05:49:52PM +0800, Wei Ni wrote:
>>>> Since different platforms may not support all 4
>>>> sensors, so the sensor registration may be failed.
>>>> Add codes to parse dt to find sensor id which
>>>> need to be registered. So that the registration
>>>> can be successful on all platform.
>>>>
>>>> Signed-off-by: Wei Ni <wni@nvidia.com>
>>>> ---
>>>>  drivers/thermal/tegra/soctherm.c | 45 ++++++++++++++++++++++++++++++++++++++--
>>>>  1 file changed, 43 insertions(+), 2 deletions(-)
>>>>
>>>> diff --git a/drivers/thermal/tegra/soctherm.c b/drivers/thermal/tegra/soctherm.c
>>>> index fd2703c0cfc5..6bee31cd4621 100644
>>>> --- a/drivers/thermal/tegra/soctherm.c
>>>> +++ b/drivers/thermal/tegra/soctherm.c
>>>> @@ -1224,6 +1224,41 @@ static void soctherm_init(struct platform_device *pdev)
>>>>  	tegra_soctherm_throttle(&pdev->dev);
>>>>  }
>>>>  
>>>> +static bool tegra_soctherm_find_sensor_id(unsigned int sensor_id)
>>>> +{
>>>> +	bool ret = false;
>>>> +	struct of_phandle_args sensor_specs;
>>>> +	struct device_node *np, *sensor_np;
>>>> +
>>>> +	np = of_find_node_by_name(NULL, "thermal-zones");
>>>> +	if (!np)
>>>> +		return ret;
>>>> +
>>>> +	for_each_available_child_of_node(np, sensor_np) {
>>>> +		if (of_parse_phandle_with_args(sensor_np, "thermal-sensors",
>>>> +						 "#thermal-sensor-cells",
>>>> +						 0, &sensor_specs))
>>>> +			continue;
>>>> +
>>>> +		if (sensor_specs.args_count != 1) {
>>>> +			WARN(sensor_specs.args_count != 1,
>>>> +			     "%s: wrong cells in sensor specifier %d\n",
>>>> +			     sensor_specs.np->name, sensor_specs.args_count);
>>>> +			continue;
>>>> +		}
>>>> +
>>>> +		if (sensor_specs.args[0] == sensor_id) {
>>>> +			of_node_put(sensor_np);
>>>> +			ret = true;
>>>> +			break;
>>>> +		}
>>>> +	}
>>>> +
>>>> +	of_node_put(np);
>>>> +
>>>> +	return ret;
>>>> +}
>>>
>>> So, I am still failing to see why this is really needed. 
>>>
>>> Why can't you simply resolve this with different compatibles?
>>> If the sensor is not present or disabled, the compatible is not, well,
>>> compatible anymore.
>>
>> This driver can support three Tegra chip t124, t132 and t210. And we
>> also support some platforms for every chips. As the description in the
>> commit, different platforms may not support all 4 sensors, so I
>> upstreamed this patch.
> 
> ok.. Which means, all platforms need to have a proper DT that describes
> the correct amount of sensors.

Thanks for your comments.
I thought about it carefully again, and found we doesn't need to change
any codes for this issue.
In the DT, actually the node "thermal-zones{} already describes the
correct sensors, so we doesn't need to add more changes in DT.

> 
>> If we use different compatibles, I think we can't resolve it simply,
>> because we also need to add codes to configure which platform support
>> which sensors, and may add more in the future. If use this patch, we
> 
> There is a very common way of solving this, you can pass .data and grab
> after calling of_node_match(), just like the tegra soc thermal driver
> already does.

Yes, for the driver, we just need to add a new file, something like
tegra210-soctherm.c, to configure a new platform, which can remove the
configuration for the disabled sensor, so that the soctherm driver will
not try to register that sensors anymore.

> 
>> doesn't need to do any more in the future.
> 
> Well, if the patch is needed to add support for different versions of
> your sensor block, then there is no reason why not patching.

Since in current released platforms, they support all 4 sensors, so I
will not send new patches by now.

So please ignore this change.
And will you take other 3 changes?


Thanks.
Wei.

> 
>> Actually in my original change, I just ignore the registration failure
>> to fix this issue, it will not affect loading driver, but as Daniel's
>> comment, it's not better to ignore, so I followed his comment to refer
> 
> It is not good to ignore. The correct thing to do here is for tegra to
> have correct DT entries for each sensor block version, to correctly
> represent the amount of sensors present in the RTL, then you reflect
> that in device driver using compatible. This way you wont need to ignore
> failures, and you will support the correct amount of sensors for each
> block version.
> 
>> the QORIQ thermal driver to get the sensor id.
>>
> 
> I am not sure that is a good example to follow.
> 
>> Thanks.
>> Wei.
>>
>>>
>>>> +
>>>>  static const struct of_device_id tegra_soctherm_of_match[] = {
>>>>  #ifdef CONFIG_ARCH_TEGRA_124_SOC
>>>>  	{
>>>> @@ -1365,13 +1400,16 @@ static int tegra_soctherm_probe(struct platform_device *pdev)
>>>>  		zone->sg = soc->ttgs[i];
>>>>  		zone->ts = tegra;
>>>>  
>>>> +		if (!tegra_soctherm_find_sensor_id(soc->ttgs[i]->id))
>>>> +			continue;
>>>> +
>>>>  		z = devm_thermal_zone_of_sensor_register(&pdev->dev,
>>>>  							 soc->ttgs[i]->id, zone,
>>>>  							 &tegra_of_thermal_ops);
>>>>  		if (IS_ERR(z)) {
>>>>  			err = PTR_ERR(z);
>>>> -			dev_err(&pdev->dev, "failed to register sensor: %d\n",
>>>> -				err);
>>>> +			dev_err(&pdev->dev, "failed to register sensor %s: %d\n",
>>>> +				soc->ttgs[i]->name, err);
>>>>  			goto disable_clocks;
>>>>  		}
>>>>  
>>>> @@ -1434,6 +1472,9 @@ static int __maybe_unused soctherm_resume(struct device *dev)
>>>>  		struct thermal_zone_device *tz;
>>>>  
>>>>  		tz = tegra->thermctl_tzs[soc->ttgs[i]->id];
>>>> +		if (!tz)
>>>> +			continue;
>>>> +
>>>>  		err = tegra_soctherm_set_hwtrips(dev, soc->ttgs[i], tz);
>>>>  		if (err) {
>>>>  			dev_err(&pdev->dev,
>>>> -- 
>>>> 2.7.4
>>>>
