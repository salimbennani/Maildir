Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:49:28 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 86E145805F0
	for <like.xu@linux.intel.com>; Fri, 21 Dec 2018 02:57:36 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 21 Dec 2018 02:57:36 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3ACD0/yBMjo12Qfq+Pgeol6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0K/3+pcbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Xymp4aV2Rx/ykC?=
 =?us-ascii?q?oJOT43/n/UhMx+g61UvA+uqB5xzIDJeIGYNvhwc6zAcd4UWWZBRNheVzdaD4Og?=
 =?us-ascii?q?c4cCFfYNMfpCooT/oVYFsBuwBROrBOPq0jJGiGX53as70+s/FQHNwRYuE8gTu3?=
 =?us-ascii?q?nJstr1Lr0SXvqzzKnH1zLIcvRb1izj54jSaBAuu/eMXb1ufsfK00kgCR7KjlWK?=
 =?us-ascii?q?poz5JT+ayuMNs22C4udmSOmhhWknqwRrrTiuwMchkpLGiZwPylDe7yp5xok1Ks?=
 =?us-ascii?q?OiREFnZt6kFYNcty+eN4t3XswiQHtotDwmxb0BvJ63ZCwKyJU8yB7BavyHaZSI?=
 =?us-ascii?q?7gjkVOaLLjd0nGxqeLSjhxmo90igxen8Wdet3FZSripFlcXMtncX2xzU8MiHRe?=
 =?us-ascii?q?Nx/kan2TaUywDc8O5EIVoumqreMZIu3rkwlp8VvE/eHSH2gF37gLGKekgn4OSk?=
 =?us-ascii?q?9vnrb7b8qpOCOYJ5ihvyPrksl8CnH+g0LgwDU3KG9emyyrHv51D1TbZEg/EsjK?=
 =?us-ascii?q?XUs5bXLtkBqKGjGQ9ayIMj5g6/Dzi41NQYmmEKLFZEeBKck4jpIEvCIP/+Dfei?=
 =?us-ascii?q?mVisly1rx//eMr3gBJXCMGTDna//cbph6ENQ0hc/wc1c6p5OFL0MLvL+VlXsuN?=
 =?us-ascii?q?HaFhM5Nha7w+fjCNVzzIMeXmePD7eAMKzMtF+I+/sjLPSSa48Lpjn9L+Ep6OXp?=
 =?us-ascii?q?jX8kn18SYbem3YAQZHC8H/RmIFuWbWDjg9ccCWoKugs+TOr3iFyNSzJTZnCyX7?=
 =?us-ascii?q?4i6TE/Eo6pEYDDRoW2jbyH2ye7GJJWZmZbClyWFnfobYqEV+8WaC2OOs9hjiAE?=
 =?us-ascii?q?Vb+5Ro8l1BGutxH1x6BoL+rJ4SAYsZPj1N5o5+zcjx0y9Dp0D9iD3GGJVW17gm?=
 =?us-ascii?q?QIRzpllJ15ulF3n1efzbBj0bsfEd1I++gPVAA8OpjBietgBJf3UwPFe96PD1G+?=
 =?us-ascii?q?XtShByp2V9803poCblhwH4afiAve1X+vCr4Ri7vZHZEx7+fQ0mb8I4Nnxm/b2b?=
 =?us-ascii?q?I9p18hRMRJKCuhnKEo7BXZBYPCjxCEkb23f78Xxi/H+TS/yj+hsVtUGC53X6vA?=
 =?us-ascii?q?VHYZLh/Vt93p60fqVbKiCb07dABGzJjREKZSbszVigBqTfHiNdCWWyT5sWqqHx?=
 =?us-ascii?q?+OyTLEOIDnYX8U2irQIFIJnwAa4TCNMg1oVQm7pGeLIDVoFF/rK3uqucNzsmmy?=
 =?us-ascii?q?SEC1h1WAYld73ry69zYPiPCcQu9V1bUB7nRy4w5oFUqwioqFQ+GLoBBsKf1R?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ADAADbxRxchxHrdtBkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGBMIE5gRYTg32IGV+LHYINig2NUoFxFxgHDYcvIjQ?=
 =?us-ascii?q?JDQEDAQEBAQEBAgETAQEBCgsJCBsOIwyCOgUCAxgOgmEBAgMBAiAjCikDAwECB?=
 =?us-ascii?q?gEBCg4KAgIFHQQCAgMBCwUpIBMFgx0BggEBBAqmDoEvhTEPg2iBCQWBC4s0EQa?=
 =?us-ascii?q?Bf4ERgxKCEIEOAoEqgz8xgiYCoT4HAocRikkMGIl6h2WaE4FGgg5wFYIIgR+CJ?=
 =?us-ascii?q?xeDSoUUhT9BMYEHHIsvVoF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0ADAADbxRxchxHrdtBkGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGBMIE5gRYTg32IGV+LHYINig2NUoFxFxgHDYcvIjQJDQEDAQEBAQEBA?=
 =?us-ascii?q?gETAQEBCgsJCBsOIwyCOgUCAxgOgmEBAgMBAiAjCikDAwECBgEBCg4KAgIFHQQ?=
 =?us-ascii?q?CAgMBCwUpIBMFgx0BggEBBAqmDoEvhTEPg2iBCQWBC4s0EQaBf4ERgxKCEIEOA?=
 =?us-ascii?q?oEqgz8xgiYCoT4HAocRikkMGIl6h2WaE4FGgg5wFYIIgR+CJxeDSoUUhT9BMYE?=
 =?us-ascii?q?HHIsvVoF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,381,1539673200"; 
   d="scan'208";a="57319362"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 21 Dec 2018 02:57:11 -0800
Received: from localhost ([::1]:44884 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gaIUQ-000331-DH
	for like.xu@linux.intel.com; Fri, 21 Dec 2018 05:57:10 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:43586)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <berrange@redhat.com>) id 1gaIU1-00032o-Qu
	for qemu-devel@nongnu.org; Fri, 21 Dec 2018 05:56:46 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <berrange@redhat.com>) id 1gaITx-0000AI-Cl
	for qemu-devel@nongnu.org; Fri, 21 Dec 2018 05:56:45 -0500
Received: from mx1.redhat.com ([209.132.183.28]:51756)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <berrange@redhat.com>) id 1gaITx-00008B-4r
	for qemu-devel@nongnu.org; Fri, 21 Dec 2018 05:56:41 -0500
Received: from smtp.corp.redhat.com (int-mx05.intmail.prod.int.phx2.redhat.com
	[10.5.11.15])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 0116673A8F
	for <qemu-devel@nongnu.org>; Fri, 21 Dec 2018 10:56:39 +0000 (UTC)
Received: from redhat.com (ovpn-112-61.ams2.redhat.com [10.36.112.61])
	by smtp.corp.redhat.com (Postfix) with ESMTPS id DFC425D739;
	Fri, 21 Dec 2018 10:56:35 +0000 (UTC)
Date: Fri, 21 Dec 2018 10:56:31 +0000
From: Daniel =?utf-8?B?UC4gQmVycmFuZ8Op?= <berrange@redhat.com>
To: Gerd Hoffmann <kraxel@redhat.com>
Message-ID: <20181221105631.GE7439@redhat.com>
References: <20181219120904.17643-1-kraxel@redhat.com>
	<20181219120904.17643-2-kraxel@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
In-Reply-To: <20181219120904.17643-2-kraxel@redhat.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.15
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.26]);
	Fri, 21 Dec 2018 10:56:39 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [RFC PATCH v2 1/7] kbd-state: add keyboard state
 tracker
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Reply-To: Daniel =?utf-8?B?UC4gQmVycmFuZ8Op?= <berrange@redhat.com>
Cc: qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Wed, Dec 19, 2018 at 01:08:58PM +0100, Gerd Hoffmann wrote:
> Now that most user interfaces are using QKeyCodes it is easier to have
> common keyboard code useable by all user interfaces.
> 
> This patch adds helper code to track the state of all keyboard keys,
> using a bitmap indexed by QKeyCode.  Modifier state is tracked too,
> as separate bitmap.  That makes checking modifier state easier.
> Likewise we can easily apply special handling for capslock & numlock
> (toggles on keypress) and ctrl + shift (we have two keys for that).
> 
> Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
> ---
>  include/ui/kbd-state.h |  32 +++++++++++++
>  ui/kbd-state.c         | 125 +++++++++++++++++++++++++++++++++++++++++++++++++
>  ui/Makefile.objs       |   2 +-
>  3 files changed, 158 insertions(+), 1 deletion(-)
>  create mode 100644 include/ui/kbd-state.h
>  create mode 100644 ui/kbd-state.c
> 
> diff --git a/include/ui/kbd-state.h b/include/ui/kbd-state.h
> new file mode 100644
> index 0000000000..0bef75a5d5
> --- /dev/null
> +++ b/include/ui/kbd-state.h
> @@ -0,0 +1,32 @@
> +#ifndef QEMU_UI_KBD_STATE_H
> +#define QEMU_UI_KBD_STATE_H 1
> +
> +#include "qapi/qapi-types-ui.h"
> +
> +typedef enum KbdModifier KbdModifier;
> +
> +enum KbdModifier {
> +    KBD_MOD_NONE = 0,
> +
> +    KBD_MOD_SHIFT,
> +    KBD_MOD_CTRL,
> +    KBD_MOD_ALT,
> +    KBD_MOD_ALTGR,
> +
> +    KBD_MOD_NUMLOCK,
> +    KBD_MOD_CAPSLOCK,
> +
> +    KBD_MOD__MAX
> +};
> +
> +typedef struct KbdState KbdState;
> +
> +bool kbd_state_modifier_get(KbdState *kbd, KbdModifier mod);
> +bool kbd_state_key_get(KbdState *kbd, QKeyCode qcode);
> +void kbd_state_key_event(KbdState *kbd, QKeyCode qcode, bool down);
> +void kbd_state_lift_all_keys(KbdState *kbd);
> +void kbd_state_set_delay(KbdState *kbd, int delay_ms);
> +void kbd_state_free(KbdState *kbd);
> +KbdState *kbd_state_init(QemuConsole *con);

I would suggest using a slightly more QEMU specific namespace "qkbd_"
methods, m"QKBD_" constants, & "QKbd" struct, as 'kbd' is very generic,
but upto you if you want to, or ignore it.

I would, however, like to see API docs written in the header file for
each of these methods.

Regards,
Daniel
-- 
|: https://berrange.com      -o-    https://www.flickr.com/photos/dberrange :|
|: https://libvirt.org         -o-            https://fstop138.berrange.com :|
|: https://entangle-photo.org    -o-    https://www.instagram.com/dberrange :|

