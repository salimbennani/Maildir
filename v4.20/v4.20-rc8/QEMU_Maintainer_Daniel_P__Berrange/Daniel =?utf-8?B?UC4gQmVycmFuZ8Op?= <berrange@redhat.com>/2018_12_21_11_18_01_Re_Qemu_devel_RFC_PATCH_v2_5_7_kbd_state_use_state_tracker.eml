Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:49:41 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 66B1E580261
	for <like.xu@linux.intel.com>; Fri, 21 Dec 2018 03:18:41 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga001-1.jf.intel.com with ESMTP; 21 Dec 2018 03:18:41 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A+wdM5R8qX7rEGv9uRHKM819IXTAuvvDOBiVQ1KB+?=
 =?us-ascii?q?0u8UIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDwULs6Wymt771zRRHmiC?=
 =?us-ascii?q?kJKT038G/YhcNska1UohyuqQFnw4PWYo+YO+dyc63BcdMAW2VBRd1cVzBdDo6m?=
 =?us-ascii?q?c4cDE/AMMOReooLgp1UOtxy+BQy0Ce3h0DBIgH720rM+0+88Cw/KxhErEs8Qv3?=
 =?us-ascii?q?TOttX6LqESUe+vy6LVyjjMdO1Z2S3n6IfSdBAhru+DUKlqccXP1EYvFxnKjkmK?=
 =?us-ascii?q?pYP5ODOV0/0Avm6G5ORuUuKvjnQoqwB3ojW33cgjlJPJhpgPxVDC+iV23pw5Ks?=
 =?us-ascii?q?G/SE5+edKkHp9QtyCGOIt1WMMuWX1nuCE/yrEevZ67fTMFyIomxx7Fd/yLaY+I?=
 =?us-ascii?q?4gjsVOqJPzh4gm5ld6i5hxa99Uiv1PTwVtG00FZNsipFlcPAtncX1xzc8sSHS/?=
 =?us-ascii?q?19/ly92TmV2ADT8PtLIUUumaXHLJ4hx7g9nYcQv0TbBiL6hln6gayMekk55+Sl?=
 =?us-ascii?q?6P7rbqvoq5KcLYN4lwPzPrwwlsCjBek0KBUCUmaF9eimybHu/kP0TK9UgvA1lK?=
 =?us-ascii?q?TSrYrUKt4BpqGjBg9YyoYj5Ai7DzehyNkYmXgHLElZeBKclYTpNFfOIO3iAfe4?=
 =?us-ascii?q?mVSsny9nx/HAPrL/HpXANmbPnKvicLpn9kJQ1Qk+wcpB659aCrwNOu//V03puN?=
 =?us-ascii?q?zdFBA5Mgi0w+j9CNV604MTQXuPDbGcMKPPqFOH+/wgI/eSa48RoTryMP8l5+Po?=
 =?us-ascii?q?jXAlh1AdZq6l3Z8WaHC7APtqOUqYYWf0j9cFEGcKuBc+TePwhF2DVz5Te2i9X6?=
 =?us-ascii?q?Ym6j4nD4KmCJzORoaqgLyH0ye7GIBWanpBClCWHnfkb5+EVOsUaCKOPs9hlSQJ?=
 =?us-ascii?q?VbygS48iyx6irgD7y6d8I+rQ+y0Ys4/j1ddv6+3SkxEy6SJ7D8CH326RSGF0mz?=
 =?us-ascii?q?BAejktwaoqoVBh0kzRlu98gudEDppV4PVGVBp8MoTTiOlzCtT3UwSGec+VSVGg?=
 =?us-ascii?q?WZK/DDQsC9483dIKMHt7AMio2xXK3i62BO0MmrmWQZA57K/YmmL8Pttw0Gru0q?=
 =?us-ascii?q?4ngF87BMxVOjq9m6R9+gPPUpPPiFiTjK2wdK4RjxLKoUiO12bGnEZWXgt5V6ON?=
 =?us-ascii?q?CXMFb1vbqfzj60/CRqPoArMiZFh7xNaGO5dNP/Hgi1RLQL/bfpz0bnirkmG/hF?=
 =?us-ascii?q?7czL6WdoPsdGg1xijRCEEY1QsU+CDVGxI5A3KNqmTfATgmLRSnSU726+B4p/Lz?=
 =?us-ascii?q?GkU51RuDaUJs/6C49h4cmbqXTPZFjeFMgzsotzghRAX15NnREdfV/wc=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AFAAD/yhxchxHrdtBkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUgQBAQEBCwGBMIE5gRYTg32IeIsdgg2KDY1SgXMVGAcNhy8iNQg?=
 =?us-ascii?q?NAQMBAQEBAQECARMBAQEKCwkIGw4jDII6BQIDGA6CYAEBAQECAQECIAQfCikDA?=
 =?us-ascii?q?gEBAgYBAQoOCgICBR0EAgIDAQsFKSATBYMdAYF5CAEECqYIfDOFMQ+DaIEJBYE?=
 =?us-ascii?q?LizQRBoF/gRGDEoIQgQ4ChGmCVwKJS5dzBwKHEYpJDBiJeodlmhOBRwGCDHAVg?=
 =?us-ascii?q?giBH4InF4NKhRSFP0ExgQccjAWBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AFAAD/yhxchxHrdtBkGgEBAQEBAgEBAQEHAgEBAQGBUgQ?=
 =?us-ascii?q?BAQEBCwGBMIE5gRYTg32IeIsdgg2KDY1SgXMVGAcNhy8iNQgNAQMBAQEBAQECA?=
 =?us-ascii?q?RMBAQEKCwkIGw4jDII6BQIDGA6CYAEBAQECAQECIAQfCikDAgEBAgYBAQoOCgI?=
 =?us-ascii?q?CBR0EAgIDAQsFKSATBYMdAYF5CAEECqYIfDOFMQ+DaIEJBYELizQRBoF/gRGDE?=
 =?us-ascii?q?oIQgQ4ChGmCVwKJS5dzBwKHEYpJDBiJeodlmhOBRwGCDHAVggiBH4InF4NKhRS?=
 =?us-ascii?q?FP0ExgQccjAWBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,381,1539673200"; 
   d="scan'208";a="58437671"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 21 Dec 2018 03:18:40 -0800
Received: from localhost ([::1]:44967 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gaIpE-0000v0-1E
	for like.xu@linux.intel.com; Fri, 21 Dec 2018 06:18:40 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:49134)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <berrange@redhat.com>) id 1gaIor-0000us-IS
	for qemu-devel@nongnu.org; Fri, 21 Dec 2018 06:18:18 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <berrange@redhat.com>) id 1gaIol-0005sV-7Z
	for qemu-devel@nongnu.org; Fri, 21 Dec 2018 06:18:17 -0500
Received: from mx1.redhat.com ([209.132.183.28]:33216)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <berrange@redhat.com>) id 1gaIok-0005rP-U3
	for qemu-devel@nongnu.org; Fri, 21 Dec 2018 06:18:11 -0500
Received: from smtp.corp.redhat.com (int-mx06.intmail.prod.int.phx2.redhat.com
	[10.5.11.16])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id A1B3440F0D
	for <qemu-devel@nongnu.org>; Fri, 21 Dec 2018 11:18:09 +0000 (UTC)
Received: from redhat.com (ovpn-112-61.ams2.redhat.com [10.36.112.61])
	by smtp.corp.redhat.com (Postfix) with ESMTPS id 6C05079D40;
	Fri, 21 Dec 2018 11:18:05 +0000 (UTC)
Date: Fri, 21 Dec 2018 11:18:01 +0000
From: Daniel =?utf-8?B?UC4gQmVycmFuZ8Op?= <berrange@redhat.com>
To: Gerd Hoffmann <kraxel@redhat.com>
Message-ID: <20181221111801.GI7439@redhat.com>
References: <20181219120904.17643-1-kraxel@redhat.com>
	<20181219120904.17643-6-kraxel@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
In-Reply-To: <20181219120904.17643-6-kraxel@redhat.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.16
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.30]);
	Fri, 21 Dec 2018 11:18:09 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [RFC PATCH v2 5/7] kbd-state: use state tracker
 for vnc
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Reply-To: Daniel =?utf-8?B?UC4gQmVycmFuZ8Op?= <berrange@redhat.com>
Cc: qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Wed, Dec 19, 2018 at 01:09:02PM +0100, Gerd Hoffmann wrote:
> Use the new keyboard state tracked for vnc.  Allows to drop the
> vnc-specific modifier state tracking code.
> 
> Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
> ---
>  ui/vnc.h |   5 ++-
>  ui/vnc.c | 120 ++++++++++++++++++---------------------------------------------
>  2 files changed, 35 insertions(+), 90 deletions(-)
> 
> diff --git a/ui/vnc.h b/ui/vnc.h
> index a86e0610e8..56111908ce 100644
> --- a/ui/vnc.h
> +++ b/ui/vnc.h
> @@ -44,6 +44,7 @@
>  #include "keymaps.h"
>  #include "vnc-palette.h"
>  #include "vnc-enc-zrle.h"
> +#include "ui/kbd-state.h"
>  
>  // #define _VNC_DEBUG 1
>  
> @@ -155,7 +156,7 @@ struct VncDisplay
>      int lock_key_sync;
>      QEMUPutLEDEntry *led;
>      int ledstate;
> -    int key_delay_ms;
> +    KbdState *kbd;
>      QemuMutex mutex;
>  
>      QEMUCursor *cursor;
> @@ -326,8 +327,6 @@ struct VncState
>  
>      VncReadEvent *read_handler;
>      size_t read_handler_expect;
> -    /* input */
> -    uint8_t modifiers_state[256];
>  
>      bool abort;
>      QemuMutex output_mutex;
> diff --git a/ui/vnc.c b/ui/vnc.c
> index 0c1b477425..b56431ce3b 100644
> --- a/ui/vnc.c
> +++ b/ui/vnc.c


> @@ -1797,32 +1780,20 @@ static void kbd_leds(void *opaque, int ledstate)
>  
>  static void do_key_event(VncState *vs, int down, int keycode, int sym)
>  {
> +    QKeyCode qcode = qemu_input_key_number_to_qcode(keycode);
> +
>      /* QEMU console switch */
> -    switch(keycode) {
> -    case 0x2a:                          /* Left Shift */
> -    case 0x36:                          /* Right Shift */
> -    case 0x1d:                          /* Left CTRL */
> -    case 0x9d:                          /* Right CTRL */
> -    case 0x38:                          /* Left ALT */
> -    case 0xb8:                          /* Right ALT */
> -        if (down)
> -            vs->modifiers_state[keycode] = 1;
> -        else
> -            vs->modifiers_state[keycode] = 0;
> -        break;


This code updated modifier state as the first thing in do_key_event


[snip]

> @@ -1859,30 +1828,25 @@ static void do_key_event(VncState *vs, int down, int keycode, int sym)
>             toggles capslock away from the VNC window.
>          */
>          int uppercase = !!(sym >= 'A' && sym <= 'Z');
> -        int shift = !!(vs->modifiers_state[0x2a] | vs->modifiers_state[0x36]);
> -        int capslock = !!(vs->modifiers_state[0x3a]);
> +        bool shift = kbd_state_modifier_get(vs->vd->kbd, KBD_MOD_SHIFT);
> +        bool capslock = kbd_state_modifier_get(vs->vd->kbd, KBD_MOD_CAPSLOCK);

This uses the modifier state

In old code it would use the newly updated modifier state

In new code it now uses the old modifier state.

>          if (capslock) {
>              if (uppercase == shift) {
>                  trace_vnc_key_sync_capslock(false);
> -                vs->modifiers_state[0x3a] = 0;
> -                press_key(vs, 0xffe5);
> +                press_key(vs, Q_KEY_CODE_CAPS_LOCK);
>              }
>          } else {
>              if (uppercase != shift) {
>                  trace_vnc_key_sync_capslock(true);
> -                vs->modifiers_state[0x3a] = 1;
> -                press_key(vs, 0xffe5);
> +                press_key(vs, Q_KEY_CODE_CAPS_LOCK);
>              }
>          }
>      }
>  
> -    if (qemu_console_is_graphic(NULL)) {
> -        qemu_input_event_send_key_number(vs->vd->dcl.con, keycode, down);
> -        qemu_input_event_send_key_delay(vs->vd->key_delay_ms);
> -    } else {
> -        bool numlock = vs->modifiers_state[0x45];
> -        bool control = (vs->modifiers_state[0x1d] ||
> -                        vs->modifiers_state[0x9d]);
> +    kbd_state_key_event(vs->vd->kbd, qcode, down);

This updates modifier state in the new code, after the code above that
uses modifier state.

Is this ordering change intentional ?


> +    if (!qemu_console_is_graphic(NULL)) {
> +        bool numlock = kbd_state_modifier_get(vs->vd->kbd, KBD_MOD_NUMLOCK);
> +        bool control = kbd_state_modifier_get(vs->vd->kbd, KBD_MOD_CTRL);
>          /* QEMU console emulation */
>          if (down) {
>              switch (keycode) {
> @@ -1983,27 +1947,6 @@ static void do_key_event(VncState *vs, int down, int keycode, int sym)
>      }
>  }

Regards,
Daniel
-- 
|: https://berrange.com      -o-    https://www.flickr.com/photos/dberrange :|
|: https://libvirt.org         -o-            https://fstop138.berrange.com :|
|: https://entangle-photo.org    -o-    https://www.instagram.com/dberrange :|

