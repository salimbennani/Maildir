Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:52:02 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from FMSMGA003.fm.intel.com (fmsmga003.fm.intel.com [10.253.24.29])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 12098580522;
	Fri, 21 Dec 2018 07:22:55 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by FMSMGA003-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 21 Dec 2018 07:22:54 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ASLvu+xWo4rxeRANYZ3uT/2vV9OfV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZheDu6dThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmTgLjhi?=
 =?us-ascii?q?UaOD4j6GzZitJ+gr9VrhyioBJwwYDUb46aOvplZqPQf8gXSXZCU8tLSyBMGJ+w?=
 =?us-ascii?q?Y5cJAuEcPehYtY79p14WoBSiAgmjGf3gyjxJhn/uxa01zf4hHBrJ3AwlBd0OsX?=
 =?us-ascii?q?DUoM/pO6cVVOC4yrTDwzbbb/5Oxzvx9IzFfgo8rfyCQ758a9fdxEozGw/fj1id?=
 =?us-ascii?q?q5TpMjeJ2ugXrmSW4PRsWfighmMpsQ19vzaiy8Qqh4LUnIwa0ErE+j98wIstJd?=
 =?us-ascii?q?23Vkp7Ydm8HZtOuCGVKZF2TtkhQ252oiY6zKMJuZqhcCgN0pQnyAbTa/2Bc4eW?=
 =?us-ascii?q?/hLuTPidLSt8iX5/Zb6yiQi+/VK9xuD/SsW4yldHoyhdntnJrH8N1hjT6sadSv?=
 =?us-ascii?q?t6+0eswTKP1wHV6uFZLkE4jKnbJIA7wr42iJUTtV3PHij4mUXwkqCWbF4p+van?=
 =?us-ascii?q?6+v5eLXqvJycOJFuigH4LKsuntazAeMiMggBR2Sb4/iz1KX//U3lR7VHlvk2kq?=
 =?us-ascii?q?jasJ/EP8gaqbO5DhRR0oYi7Ra/Ejin3M4ZnXkBMFJKZhaHg5L1NFHJJfDyFe2/?=
 =?us-ascii?q?jEi0kDd32/DGOaXsApXXIXjCjLfuZ7F951RcyAou199f4Z1UB6oFIPLyXE/xqd?=
 =?us-ascii?q?PZAgU4Mwyy3+boFtF92pkCVmKIB6+TKLnSvkOQ5uIzP+mMY5cYtyzmK/gl4P7u?=
 =?us-ascii?q?jmU1mUUHcqmrxpYXbHG4HvJ7I0SWe3bsg9EBEXsUsQo6VuDllFqCUTtLbXaoQ6?=
 =?us-ascii?q?08/i07CJ6hDYrbRYCimrqB0D2/Hp1XfG9GDF+MHGzsd4WFXfcMdS2TLtVgkjwC?=
 =?us-ascii?q?SbiuVYsh2Quyuw/9zrptNvDU9TEAtZL/yNh14PXemgwo+jxqEcuRyWGNQHtynm?=
 =?us-ascii?q?MTWTA22qdzoUh+yleG1ah1mPhYFd1V5/NUXQY2L5/cz+pmC9/sXgLNZMuGSFGj?=
 =?us-ascii?q?Qt++GzE+Usoxw8MSY0Z6A9itkwrM3zS0DLMPl7yEHpo08rnC0Hj3PMt9z3fG1K?=
 =?us-ascii?q?88j1gpWMdPNGumhrJh+AjXHYLGj0KZl6Oyf6QGwCHN7HuDzXaJvExATA5wUKDF?=
 =?us-ascii?q?XXcDZkvWrdX1/F/CQ6WpCbQ9NgtByMiCKqRRZ93tjFVGQurjOdvEb2KwnWewGQ?=
 =?us-ascii?q?iHxreWYIX2fGUd2T3XCFIYnAAL4XaGKQ8+Cz+7rGLaEjNvGkzgYkP2/eZltXO0?=
 =?us-ascii?q?U1U7zweJb01mybq44RoVhf2aS/MO0bMIoiYhqzNoHFmj29LaEcaPpw1kfK9Ee9?=
 =?us-ascii?q?My/E9H1X7Ftwx6JpGhL71iikQCfAhtvkLu1w94CoNPkcUxqHMqzQxyKb+X0V9b?=
 =?us-ascii?q?djOY24zwNaPTKmXo4B+vbKvW0EnE0NmK4qcP9Og4q1L7sQGzF0ot729o08NI3H?=
 =?us-ascii?q?ub/JnKChQdUYjwUkou6xd1vbXabTQj6IPO0n1sN7K5sjvD29IvGeskxQysf9ZZ?=
 =?us-ascii?q?MKOYCgDyF9cWCNSpKOwvg1KpdA4LPPhO9K4oOMOrb/uH2K+xMOdghj6mlnlH4I?=
 =?us-ascii?q?Zm30KI9ip8TPPI3pkfz/GZ2AuHSynzjFO7vs/rnoBEYCkYHnCjxij8GI5Reqpy?=
 =?us-ascii?q?cJ4JCWi0Oc23xdZ+h5n3V35D7lGjBFAG2M6veRWMaVzwxglQ1UURoXy6liq01T?=
 =?us-ascii?q?10kzc1rqWB2CzC2fjtdB0COmRTXmltkU/sIZSoj9AdREWpbxImlBy/6Ub4xqhb?=
 =?us-ascii?q?or9yL23SQUdOYij3IHtuUqq2trqefcFP7IkkvjlQUOS5eVqaUKLyowMG0yP/GG?=
 =?us-ascii?q?tT3DM7eCurupnjnxx6lXiSLHB8rHfCfcFwxBHf5MHTRPJL3zoGQjV4hifTBlSm?=
 =?us-ascii?q?I9ap+tCUnY/Zsu+iT2KhSoFTcS7zwIOFtSu75ndlDQexnv+tgd3nDRY10TXg2N?=
 =?us-ascii?q?Z0TyXIow3xYo3q16S8LOJmcVNkBF7668pmBI5+lpE8i40X2Xgfnp+V52YIkX/v?=
 =?us-ascii?q?MdVH3qLzdGYNRTkOw9LP4QnqwktjLm+Sx4LiV3WQ2c9hZ9i8YmML1SMx9cFKCK?=
 =?us-ascii?q?GI7LNamSt5uEa3rQXUYfJlhDcS1eMu6GIGg+EOoAci1T+SArcWHUlFJyDskwmI?=
 =?us-ascii?q?4su6rKVWYmavbLex2FB/ndCnELGNvAVcVGzldZclGC969t9/P07U0H3v9oHkf8?=
 =?us-ascii?q?HdbdAJuR2RjRjAlPJZKI4rmvoJmCpnOn/9vXs/xO4glhFu2ZC6vI6aK2Ri5q65?=
 =?us-ascii?q?AxhYNiHraMMX4D3ikaFensOO1YC1ApphAikLXIfvTf+wEDMSsunnNx+TEDImrH?=
 =?us-ascii?q?eXA6HfHQiZ6EdptH/PF5GrN3eKJHgW19liRR+dJFBBjwAQRjk1gpk5FgWyzsz7?=
 =?us-ascii?q?bEh5/iwR5kL/qhZUyuJnKRj/UmTcpAepcDs0S4KfLB1Z7g5c/UfVLNee4/l3Hy?=
 =?us-ascii?q?FZ+J2hsQOMJnaaZwROEWEGREiEC0r/Mbmp4NnK6/KYCfamL/vSfbWOrvRTWO2V?=
 =?us-ascii?q?xZ20yItp4TaNOt+LPnljFPA73ktDXXZkG8XWgTkPSioXlz7TYM6fvhuz5ip3rs?=
 =?us-ascii?q?Wn+vTxRA3v/ZePC6dVMdh35xC2gKKDO/SMiypjNTlY1o0DxXnTxbgb3V4SjTxu?=
 =?us-ascii?q?dja3HbQBsy7NULzfmqtNAxEHbCNzMdNC77gg0QlVJc7bltT126Z4j/EvDVdFUF?=
 =?us-ascii?q?3hmsexas0LI2GyLlXHBEmQObSCJD3Lxdz3YKymRb1RiuVUqwO/uTKBH0D/OTSD?=
 =?us-ascii?q?kmqhaxf6NOhcjSSWegZfoIinfj5jE2XuCd/iZxanKthxlns9xrhwzmzHM3U0Oi?=
 =?us-ascii?q?N9fgVKtLLUpSdZhOhvXndc6GpkBeaDnCmd4ubCLYsOqr1gBSEnufhd5SExzLdY?=
 =?us-ascii?q?7yBcXPFvsCTXp99q5Vqhl7rcggF7WQZD/24YzLmAul9vbP3U?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BvAABXBB1ch0O0hNFjGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBZYNsJ4x1ix2CDRSJE5ArEwEBGBMBhzAiOBIBAwEBAQEBAQIBEwEBAQg?=
 =?us-ascii?q?NCQgpIwyCOiKCbwMDAQIkCwENARsdAQMCCQEBBRAKMQMeAhEBBQEcBxIFgx2Ba?=
 =?us-ascii?q?QEDFQQBmiU8jBUWBQEXgncFgQGDPwoZJw1eE4EkAgYSh2yBfYEogRwXgX+BEYJ?=
 =?us-ascii?q?kgwWICQKJS5dHMwmGUodkgycMGIl6h2WJU4YQihICBAIEBQIFDyGBPIF3cIEBg?=
 =?us-ascii?q?juCG4NtilQ/MoEEAQEBO41UAQE?=
X-IPAS-Result: =?us-ascii?q?A0BvAABXBB1ch0O0hNFjGwEBAQEDAQEBBwMBAQGBZYNsJ4x?=
 =?us-ascii?q?1ix2CDRSJE5ArEwEBGBMBhzAiOBIBAwEBAQEBAQIBEwEBAQgNCQgpIwyCOiKCb?=
 =?us-ascii?q?wMDAQIkCwENARsdAQMCCQEBBRAKMQMeAhEBBQEcBxIFgx2BaQEDFQQBmiU8jBU?=
 =?us-ascii?q?WBQEXgncFgQGDPwoZJw1eE4EkAgYSh2yBfYEogRwXgX+BEYJkgwWICQKJS5dHM?=
 =?us-ascii?q?wmGUodkgycMGIl6h2WJU4YQihICBAIEBQIFDyGBPIF3cIEBgjuCG4NtilQ/MoE?=
 =?us-ascii?q?EAQEBO41UAQE?=
X-IronPort-AV: E=Sophos;i="5.56,381,1539673200"; 
   d="scan'208";a="57856067"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 21 Dec 2018 07:22:53 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2404270AbeLUPWl (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Fri, 21 Dec 2018 10:22:41 -0500
Received: from mail-lj1-f195.google.com ([209.85.208.195]:42342 "EHLO
        mail-lj1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2390972AbeLUPVY (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 21 Dec 2018 10:21:24 -0500
Received: by mail-lj1-f195.google.com with SMTP id l15-v6so5048468lja.9
        for <linux-kernel@vger.kernel.org>; Fri, 21 Dec 2018 07:21:22 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=acjXl/ZaoeTwfrYah/bbezD4My/k31GlnJiqaMNlHlk=;
        b=j3bQLKptvBG25yLOrZld8QsSMRYiG0HezMk6GEg6QuqD73AjutLPIIIFtF3iby341Q
         BIFVBSENNEgv58RfIOrlm3EBfJ5PuuBPWMleSeI+T0EBoBHnKlg+Tj6XH7W76rm6ZgML
         Tfs7ibGwRkiF1h07s1j9Q4lNErt87SNTQbuTl0na7CVVxGpIsd+cCImfREkjxS8xJsug
         7yXtBhw/FY0/7F1vl25b5MGE+MNLOR9rtNWFcv9qP2fqX+a6ZlxzFgeXx1P6bMlfaaFY
         Sz2pH2jxu9MWfdDjZ8fT9gtU7P6A9a7wRYlv0R2pt5xxcIYdmVnO0D2rdBsabptNGKh0
         M8gA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=acjXl/ZaoeTwfrYah/bbezD4My/k31GlnJiqaMNlHlk=;
        b=ipf0qKuMgBs7esD1fgxLApqk2Td8YjvTA1UvRN8pVZFhOLi53BTNEscnYhba9KFdL6
         jYYhPEzH8i7hfe/nlvrfV5qsSE1XInWSVgjwykHPlVeZ8Fp5QhZrjqIKijk7Dl8puxAh
         wyodEE2/6LB12dBVMOZsd4+2vGfAOexIXqCEd8/gsrQqelT3m/EHd9OKpg2pcdEckZR4
         iEQFFQDyKVm9gdGyQA+7w3W0G89TlCsxVg002ckgD0OK32qsiKCxKOnXxsUC5NgaMnaE
         zUfKRXbncNUKEwAzxC+mxRRrsj7FVEXiE+SeSYC5KxVOViKhzL0cJlGjLPILHQTM3dlo
         VYnA==
X-Gm-Message-State: AJcUuke2S8IMqtdh07mGGb8YEJm+A10KyfnkO7/fm2CXYkf/qm9X2WsB
        UOXjtAAKXaEvpD4XELNELMQ=
X-Google-Smtp-Source: ALg8bN5xk+PRAyX8yZO52dbiqAbR0E0+wcBxwo7o2+mSWowWEM08LJjg2K9tiZ0Xy5rLrOxgDnCfig==
X-Received: by 2002:a2e:9e16:: with SMTP id e22-v6mr1922750ljk.4.1545405681551;
        Fri, 21 Dec 2018 07:21:21 -0800 (PST)
Received: from localhost.localdomain (c90-142-43-138.bredband.comhem.se. [90.142.43.138])
        by smtp.gmail.com with ESMTPSA id q30sm5005601lfi.94.2018.12.21.07.21.20
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Fri, 21 Dec 2018 07:21:20 -0800 (PST)
From: codekipper@gmail.com
To: maxime.ripard@free-electrons.com, wens@csie.org,
        linux-sunxi@googlegroups.com
Cc: linux-arm-kernel@lists.infradead.org, lgirdwood@gmail.com,
        broonie@kernel.org, linux-kernel@vger.kernel.org,
        alsa-devel@alsa-project.org, be17068@iperbole.bo.it,
        Marcus Cooper <codekipper@gmail.com>
Subject: [PATCH v3 7/9] ASoC: sun4i-i2s: Do not divide clocks when slave
Date: Fri, 21 Dec 2018 16:21:08 +0100
Message-Id: <20181221152110.17982-8-codekipper@gmail.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20181221152110.17982-1-codekipper@gmail.com>
References: <20181221152110.17982-1-codekipper@gmail.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Marcus Cooper <codekipper@gmail.com>

There is no need to set the clock and calculate the division of
the audio pll for the bclk and sync signals when they are not
required.

Signed-off-by: Marcus Cooper <codekipper@gmail.com>
---
 sound/soc/sunxi/sun4i-i2s.c | 144 +++++++++++++++++++-----------------
 1 file changed, 77 insertions(+), 67 deletions(-)

diff --git a/sound/soc/sunxi/sun4i-i2s.c b/sound/soc/sunxi/sun4i-i2s.c
index e85789d84c0c..8cec2f42c94e 100644
--- a/sound/soc/sunxi/sun4i-i2s.c
+++ b/sound/soc/sunxi/sun4i-i2s.c
@@ -194,6 +194,8 @@ struct sun4i_i2s {
 	struct regmap_field	*field_rxchansel;
 
 	const struct sun4i_i2s_quirks	*variant;
+
+	bool bit_clk_master;
 };
 
 struct sun4i_i2s_clk_div {
@@ -298,82 +300,86 @@ static int sun4i_i2s_set_clk_rate(struct snd_soc_dai *dai,
 	int bclk_div, mclk_div;
 	int ret;
 
-	switch (rate) {
-	case 176400:
-	case 88200:
-	case 44100:
-	case 22050:
-	case 11025:
-		clk_rate = 22579200;
-		break;
+	if (i2s->bit_clk_master) {
+		switch (rate) {
+		case 176400:
+		case 88200:
+		case 44100:
+		case 22050:
+		case 11025:
+			clk_rate = 22579200;
+			break;
 
-	case 192000:
-	case 128000:
-	case 96000:
-	case 64000:
-	case 48000:
-	case 32000:
-	case 24000:
-	case 16000:
-	case 12000:
-	case 8000:
-		clk_rate = 24576000;
-		break;
+		case 192000:
+		case 128000:
+		case 96000:
+		case 64000:
+		case 48000:
+		case 32000:
+		case 24000:
+		case 16000:
+		case 12000:
+		case 8000:
+			clk_rate = 24576000;
+			break;
 
-	default:
-		dev_err(dai->dev, "Unsupported sample rate: %u\n", rate);
-		return -EINVAL;
-	}
+		default:
+			dev_err(dai->dev, "Unsupported sample rate: %u\n", rate);
+			return -EINVAL;
+		}
 
-	ret = clk_set_rate(i2s->mod_clk, clk_rate);
-	if (ret)
-		return ret;
+		ret = clk_set_rate(i2s->mod_clk, clk_rate);
+		if (ret) {
+			dev_err(dai->dev, "Unable to set clock\n");
+			return ret;
+		}
 
-	oversample_rate = i2s->mclk_freq / rate;
-	if (!sun4i_i2s_oversample_is_valid(oversample_rate)) {
-		dev_err(dai->dev, "Unsupported oversample rate: %d\n",
-			oversample_rate);
-		return -EINVAL;
-	}
+		oversample_rate = i2s->mclk_freq / rate;
+		if (!sun4i_i2s_oversample_is_valid(oversample_rate)) {
+			dev_err(dai->dev, "Unsupported oversample rate: %d\n",
+				oversample_rate);
+			return -EINVAL;
+		}
 
-	if (i2s->variant->has_fmt_set_lrck_period)
-		bclk_div = sun4i_i2s_get_bclk_div(i2s, clk_rate / rate,
-						  word_size,
-						  sun8i_i2s_clk_div,
-						  ARRAY_SIZE(sun8i_i2s_clk_div));
-	else
-		bclk_div = sun4i_i2s_get_bclk_div(i2s, oversample_rate,
-						  word_size,
-						  sun4i_i2s_bclk_div,
-						  ARRAY_SIZE(sun4i_i2s_bclk_div));
-	if (bclk_div < 0) {
-		dev_err(dai->dev, "Unsupported BCLK divider: %d\n",
-			bclk_div);
-		return -EINVAL;
-	}
+		if (i2s->variant->has_fmt_set_lrck_period)
+			bclk_div = sun4i_i2s_get_bclk_div(i2s, clk_rate / rate,
+							  word_size,
+							  sun8i_i2s_clk_div,
+							  ARRAY_SIZE(sun8i_i2s_clk_div));
+		else
+			bclk_div = sun4i_i2s_get_bclk_div(i2s, oversample_rate,
+							  word_size,
+							  sun4i_i2s_bclk_div,
+							  ARRAY_SIZE(sun4i_i2s_bclk_div));
+		if (bclk_div < 0) {
+			dev_err(dai->dev, "Unsupported BCLK divider: %d\n",
+				bclk_div);
+			return -EINVAL;
+		}
 
 
-	if (i2s->variant->has_fmt_set_lrck_period)
-		mclk_div = sun4i_i2s_get_mclk_div(i2s, oversample_rate,
-						  clk_rate, rate,
-						  sun8i_i2s_clk_div,
-						  ARRAY_SIZE(sun8i_i2s_clk_div));
-	else
-		mclk_div = sun4i_i2s_get_mclk_div(i2s, oversample_rate,
-						  clk_rate, rate,
-						  sun4i_i2s_mclk_div,
-						  ARRAY_SIZE(sun4i_i2s_mclk_div));
-	if (mclk_div < 0) {
-		dev_err(dai->dev, "Unsupported MCLK divider: %d\n",
-			mclk_div);
-		return -EINVAL;
-	}
+		if (i2s->variant->has_fmt_set_lrck_period)
+			mclk_div = sun4i_i2s_get_mclk_div(i2s, oversample_rate,
+							  clk_rate, rate,
+							  sun8i_i2s_clk_div,
+							  ARRAY_SIZE(sun8i_i2s_clk_div));
+		else
+			mclk_div = sun4i_i2s_get_mclk_div(i2s, oversample_rate,
+							  clk_rate, rate,
+							  sun4i_i2s_mclk_div,
+							  ARRAY_SIZE(sun4i_i2s_mclk_div));
+		if (mclk_div < 0) {
+			dev_err(dai->dev, "Unsupported MCLK divider: %d\n",
+				mclk_div);
+			return -EINVAL;
+		}
 
-	regmap_write(i2s->regmap, SUN4I_I2S_CLK_DIV_REG,
-		     SUN4I_I2S_CLK_DIV_BCLK(bclk_div) |
-		     SUN4I_I2S_CLK_DIV_MCLK(mclk_div));
+		regmap_write(i2s->regmap, SUN4I_I2S_CLK_DIV_REG,
+			     SUN4I_I2S_CLK_DIV_BCLK(bclk_div) |
+			     SUN4I_I2S_CLK_DIV_MCLK(mclk_div));
 
-	regmap_field_write(i2s->field_clkdiv_mclk_en, 1);
+		regmap_field_write(i2s->field_clkdiv_mclk_en, 1);
+	}
 
 	/* Set sync period */
 	if (i2s->variant->has_fmt_set_lrck_period)
@@ -574,10 +580,12 @@ static int sun4i_i2s_set_fmt(struct snd_soc_dai *dai, unsigned int fmt)
 		case SND_SOC_DAIFMT_CBS_CFS:
 			/* BCLK and LRCLK master */
 			val = SUN4I_I2S_CTRL_MODE_MASTER;
+			i2s->bit_clk_master = true;
 			break;
 		case SND_SOC_DAIFMT_CBM_CFM:
 			/* BCLK and LRCLK slave */
 			val = SUN4I_I2S_CTRL_MODE_SLAVE;
+			i2s->bit_clk_master = false;
 			break;
 		default:
 			dev_err(dai->dev, "Unsupported slave setting: %d\n",
@@ -598,10 +606,12 @@ static int sun4i_i2s_set_fmt(struct snd_soc_dai *dai, unsigned int fmt)
 			/* BCLK and LRCLK master */
 			val = SUN8I_I2S_CTRL_BCLK_OUT |
 				SUN8I_I2S_CTRL_LRCK_OUT;
+			i2s->bit_clk_master = true;
 			break;
 		case SND_SOC_DAIFMT_CBM_CFM:
 			/* BCLK and LRCLK slave */
 			val = 0;
+			i2s->bit_clk_master = false;
 			break;
 		default:
 			dev_err(dai->dev, "Unsupported slave setting: %d\n",
-- 
2.20.1

