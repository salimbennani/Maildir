Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 21:09:00 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 76C265805AD;
	Tue, 18 Dec 2018 02:11:47 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga002-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 18 Dec 2018 02:11:47 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ASb4mJhB1nVO0191NzEWhUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP7+pM2wAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95RWSJfH42y?=
 =?us-ascii?q?YYgBAe0DMuZWoIbzqEAOrQO8CAS3GO/iySVFimPs0KEmz+gsFxzN0gw6H9IJtX?=
 =?us-ascii?q?TZtNX6NKYWUeCxzanH1zDDZO5L1Dfn9ofHaAwhofGNXbJsbcra1EghFxnfgVSQ?=
 =?us-ascii?q?tIfoOC2V1uUJs2ib8eVgUeevh3QoqwFruDeuxtwhiobMho0Py1DE8T91z5oyJd?=
 =?us-ascii?q?29UUN2Z8OvHphItyyCKYd6XscvT3t1tCs01LEKo4O3cSsWxJg9xhPSaeSLf5aU?=
 =?us-ascii?q?7h7/SeqcJCl0iXNmdb+6mxm+7VKvx+35W8av0FtFsC5In9zCu38R1RHe7s2KRe?=
 =?us-ascii?q?Vj8kqgxzmC0hvc6u9LLE00kKfUMJosz74+m5cVrE/NBDX5mF/sg6+Tbkgk+van?=
 =?us-ascii?q?6+DgYrj+uJ+cOJF7ihvkPqQthMO/G+I4PRYKX2SB/uS8zrLj8VX4QLVMkPI2jr?=
 =?us-ascii?q?HUvI7GKckfvKK1HgFY3pg55xqiDDqqzM4UkHgFIV5dfRKIlYnpO1XAIPDiCve/?=
 =?us-ascii?q?hkyhkDNqx/DAI73gDYzBLnvdn7f7e7Zy9UpcxBM0zdFR4ZJbFKsBLentWk/+qt?=
 =?us-ascii?q?PYFAU1Mw+qzOb9DtVyyIceVXiIAq+DP6PeqUWI6f43I+mQeI8Vvy7wK/wk5/7t?=
 =?us-ascii?q?k3A1g1AcfbSy0JsTaXC4GOlmIkqDbXrthNcBDXkFvg4kQOP2j12CVCZZZ2yuUK?=
 =?us-ascii?q?Ik+jE7FIWmAJ/DRo+3gbyBwD20HppMamBGF1CDC3Hod4qfVvcIaSKSJNJhkzMe?=
 =?us-ascii?q?WbigTY8hyQ+htAvgx7V7KerU/zUStYj/29ht++3TiRYy+CR2D8SazW6BVWJ0nm?=
 =?us-ascii?q?QORz8w26Byukh9ylaF0ahljP1UD91T5/VVUggkMZ7Q1fB1C9f3WgjZZNeGVE6m?=
 =?us-ascii?q?Qsm6ATE2Vt8+2cQOY0Z6G9WhlBzDxTClA70OmryPBZw09L/c3nfrK8Z8zXbGyL?=
 =?us-ascii?q?cuj108TsRTMm2mg7Z19xLPCI7Rj0WZi6GqeLwf3CHX8meP126OvEBCXw52XqXI?=
 =?us-ascii?q?RnQfZkrQrdTk6ULOVb6uCbI7MgRfzc6OMLdFatrsjV9eXvfsJMzeY36tm2e3HR?=
 =?us-ascii?q?uH26mDbJT0dGkH3CXSEk4EkxsN8naAMgQ+AiSho2faDDF1EVLvYkXs8fRxqX+h?=
 =?us-ascii?q?T080yR2KYFNl17av5hEVgvmcQesJ3r0YoCchtyl0HFGl0t3LEdWAuRRucL9cYd?=
 =?us-ascii?q?wn5ldHznzWtwpmM5ykLqBigEMecgtts0Pv0RV3FptPkcwwoHw2ywpyLLqS0Eld?=
 =?us-ascii?q?eDOAwZDwJrrXJ3Hu/BCubq7W3U3e0NaW+6sV9PQ0sVLjvButFkoj9XVn3MJY03?=
 =?us-ascii?q?+d5pXMEQoTXoj9Ukcx9xhmub7aZjMx6J/T1X1pKaO0qCPN28o1BOs5zRatZ81Q?=
 =?us-ascii?q?MKeaGw79DcIbB9KiJ/c3m1e0dB0EOuNS9KkqP869c/uG2airPPtvnT68jGRH5p?=
 =?us-ascii?q?x93VyI9yZmVuHI2JMFyemC3gSbTzf8kEuhssfvlIFEeDEeBHawxTLlBY5RfKJy?=
 =?us-ascii?q?e4kLBHyqI822wNV+mpHsV2RZ9F6lG1MJxsupdQCOYFz62A1azV4XrmC/mSuk0z?=
 =?us-ascii?q?x0lCkkrrCe3CPS2evibgcIOmlRSGlkk1jsO4m0g8kGU0eyawgmiQWq5Vz9x6hd?=
 =?us-ascii?q?v6l/K2jTQUFVfyn5NW1iU62wtqacbM5L8p8nrSJXUOGka1CAVrH9uwca0z/kH2?=
 =?us-ascii?q?ZGxDE7diumu5XjkxxhlWKdKm1+rH7YecF22Bfe68bQRf9X3joaWiZ4jSPbCUS7?=
 =?us-ascii?q?P9ms5d+UjYvMsviiV2K9UZ1eaSvrwpmatCu45m1qBgezn+upld3kEgg60Cn72M?=
 =?us-ascii?q?dsVSjTqBb8Y4/r17m1MO59f0loAkP85NR+Go1kjoQwg5QQ02AAhpqJ5XoHjXvz?=
 =?us-ascii?q?MdJD1KP+dnUNQiQHw9zU4Ajjw0BjKnOJx4TkVnSS2MdhZt+6Yn8I1SI59cxFFK?=
 =?us-ascii?q?CU7LlclytvvlW4tR7RYeR6njoFyvsh8n8aj/sJuAow1CqdBL8SEFJcPSztkRSI?=
 =?us-ascii?q?8t+/oL9WZGapbbi/yk5+kcq9A7GFpwFWQGz5dYs6HS9s8sV/N0rB0Hjy6oHnYt?=
 =?us-ascii?q?bcd9wSuQOPkxfckedVMok+meQQhSpoIm/9uXwly+gmjR1hx526vY6HK3lz86K9?=
 =?us-ascii?q?GBJXKjr1Z8YL8DH3kalehtqW35yoHph5BjULW57oQeipET0Is/TnKh2OECY9qn?=
 =?us-ascii?q?qAHbrfHAmf6Fpprn7VEpCrMW2XK2cdzdl4WBadI0lfihgOXDomhp45ChyqxMv5?=
 =?us-ascii?q?fUhi/D8R4Vr4qgZWxuJsKhnySWPfpAauajcpR5mTNhtW7gde50jLNcyS9P58Hy?=
 =?us-ascii?q?Zd/pe5tgyCNnSbZxhUDWEOQkGEBUrsPryw6tnb6eSYGvCyL/jTYbWNtOxeUe2H?=
 =?us-ascii?q?xYm034ti/jaMMNiPP3Z4A/063EpDQW52G8DDlzoTTCwXkjrHb9SHqxek5i13ss?=
 =?us-ascii?q?e//ezrWQLo+IuPEqZSPs9p+xysmqeDMOiQhCliJDZc15MMw2LIybcF0F4TjSFu?=
 =?us-ascii?q?ayeiEbAauSHRS6LQn7ddDwQHZCNrKMtI86U80xFNOcHFi9P11b14jv8vB1dGT1?=
 =?us-ascii?q?zhnc6patIQI2GgL1PKH0KLNLWAJT3WzMD7e6K8SbtMjOpKsx28oyqUE0jmPj6b?=
 =?us-ascii?q?jTnmSwivMf1QjCGcJBFRopy9fQ13CWf9TNPqcBm7MN5sgD0ywL00gG7KNGEGPT?=
 =?us-ascii?q?h9dUNNsqOf7SdCjvpjHGxB62JvLfOYlCaB8+nYNpEWvON3AiR1kuJW+mg1x6FJ?=
 =?us-ascii?q?4yFEWvN1njDfrtpvo1Ggj+mOxSBrUBtIqjZXmo2LuV9uNrne9plFQXzE5g4C7X?=
 =?us-ascii?q?2MCxQWoNtoEt3utLpWytjKlaLzLi9N8tPU/cQGAcjUJ9mKMH4gMRrvBT7VAxEJ?=
 =?us-ascii?q?TT+tNWHDmUNdlOue+WGSrpg/+dDQn88KS7lGTxoqH/ceB0VnNNgDJp5tWXUji7?=
 =?us-ascii?q?HIotQP4C+BrR3VRcxf9rrdW/uOAfTzNH62l7BVL08WwLf4IIAWcILh0l1KZVxz?=
 =?us-ascii?q?nYCMEE3VC4Me6hZ9ZxM59R0euEN1SXc+jge8Mlug?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AvAAASxxhch0O0hNFkHQEBBQEHBQGBU?=
 =?us-ascii?q?wYBCwGBMII7J5gOgWg5iRKJN4R9gXMTAQEYEwGHXyI2Bw0BAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQoLCQgpIwyCNiQBgmIDAwECLwENARsdAQMCCQEBBRA7Ax4CEQEFARwZBYMdg?=
 =?us-ascii?q?WgBAxUBBJwVPIwrBQEXgncFhEsKGScNXoE3AgYSh2xVglCBHIIWgUSCKoMMiAk?=
 =?us-ascii?q?CkE6QCxgwBwKGT4QCg12DMRiJdRKHTSyPHYl+AgQCBAUCBQ8hgSwBggZNI4EBg?=
 =?us-ascii?q?juCGwwXg0qKYjEygQQBAQE7jT0BAQ?=
X-IPAS-Result: =?us-ascii?q?A0AvAAASxxhch0O0hNFkHQEBBQEHBQGBUwYBCwGBMII7J5g?=
 =?us-ascii?q?OgWg5iRKJN4R9gXMTAQEYEwGHXyI2Bw0BAwEBAQEBAQIBEwEBAQoLCQgpIwyCN?=
 =?us-ascii?q?iQBgmIDAwECLwENARsdAQMCCQEBBRA7Ax4CEQEFARwZBYMdgWgBAxUBBJwVPIw?=
 =?us-ascii?q?rBQEXgncFhEsKGScNXoE3AgYSh2xVglCBHIIWgUSCKoMMiAkCkE6QCxgwBwKGT?=
 =?us-ascii?q?4QCg12DMRiJdRKHTSyPHYl+AgQCBAUCBQ8hgSwBggZNI4EBgjuCGwwXg0qKYjE?=
 =?us-ascii?q?ygQQBAQE7jT0BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,367,1539673200"; 
   d="scan'208";a="56333602"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 18 Dec 2018 02:11:45 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726547AbeLRKLm (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 18 Dec 2018 05:11:42 -0500
Received: from mail-pf1-f196.google.com ([209.85.210.196]:39704 "EHLO
        mail-pf1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726364AbeLRKLm (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 18 Dec 2018 05:11:42 -0500
Received: by mail-pf1-f196.google.com with SMTP id r136so855562pfc.6;
        Tue, 18 Dec 2018 02:11:41 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=CxXXUv+EgkVrU6KdE+cFR4qqon7JP0P+l/dMlMJYIp0=;
        b=oWyavLmbkSMk/CnwrLC4jXM8RdYEz51OStmyxaKPcgo8p9DiaJL9ehfOJUAWKfCLcr
         OTd/nvoSICO7oAqxv1AqnZmSCCN0rKG1cq/o6saBP4CqmmlmgJhRQsSzEALLOcwEaSpa
         9lD4UMpxXU0u6nmzIwn90CsQjK2n7FlJI4c2F4wBZqc9WSjAa62yhTOn1UFqVuPkJQws
         sdwepQ4EBDrEYkbJp1EZjpho1zGb5apWJW3D+FaJTRw0XYK6S9eTJE4FxU93ihVteNWY
         MIUaauJXiGEHkfoRpwR1DlSjKIywvij9PXdqAZGIjypzR7+b3rW43Ncdg4d3ymQ0Q4rb
         bOFg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=CxXXUv+EgkVrU6KdE+cFR4qqon7JP0P+l/dMlMJYIp0=;
        b=DFCiBrLB6lvr2OYf2P8hx4MSfo8kYAQq1Gnimyld93YqK97cMbmwXapu9OGkZB/7V4
         tVmVym+WIb9K/EFLSL2dH+tmpq3alTrtZZsePm4ajTqb60yeaW5fbicyYwFMD5BPjpWU
         ymMQWUkh3C0GckBanfTeui/sF1xS4FAzcudbgdlf+pdeJhLUAL8vEOIaqTp4C/Iz6VUr
         l6ReSJAYfdKFO4gblkl7Cz0C3zZe7ZiABYE4X2Toor7tUdzWMjqaRtnfzsYK9ObXFSHN
         h9E0CeeH78m5ikz6veY7dCBbfECA/U62gDr/Ll7zwFLkpkbwH0E1wzIjwbt3xupDCmds
         eWjQ==
X-Gm-Message-State: AA+aEWZVjjgWGABjw+SfFLbLEHbxLBz3V0fRZRL++9Uh76tdEkStAaZx
        G4yvuv+3wKyeAAVESS6zEU4=
X-Google-Smtp-Source: AFSGD/XVG0PcT9XaYdiaeCLgoJ6xtsBtgEpQCgZZXDGzdt3KPoscEvt4hqQT+61plkybrKOEkjWTHQ==
X-Received: by 2002:a63:f515:: with SMTP id w21mr15176931pgh.220.1545127900916;
        Tue, 18 Dec 2018 02:11:40 -0800 (PST)
Received: from localhost.localdomain ([2001:268:c0a5:b5e9:3c79:e26e:bf45:b953])
        by smtp.gmail.com with ESMTPSA id m19sm38420743pgn.35.2018.12.18.02.11.37
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 18 Dec 2018 02:11:40 -0800 (PST)
From: William Breathitt Gray <vilhelm.gray@gmail.com>
To: linus.walleij@linaro.org
Cc: akpm@linux-foundation.org, linux-gpio@vger.kernel.org,
        linux-arch@vger.kernel.org, linux-kernel@vger.kernel.org,
        andriy.shevchenko@linux.intel.com, linux@rasmusvillemoes.dk,
        William Breathitt Gray <vilhelm.gray@gmail.com>,
        Andy Shevchenko <andy.shevchenko@gmail.com>,
        Arnd Bergmann <arnd@arndb.de>
Subject: [PATCH v5 1/8] bitops: Introduce the for_each_set_clump8 macro
Date: Tue, 18 Dec 2018 19:12:09 +0900
Message-Id: <40f8a86600f6c741b8c577dc821042d5a250f95f.1545126272.git.vilhelm.gray@gmail.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <cover.1545126272.git.vilhelm.gray@gmail.com>
References: <cover.1545126272.git.vilhelm.gray@gmail.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

This macro iterates for each 8-bit group of bits (clump) with set bits,
within a bitmap memory region. For each iteration, "start" is set to the
bit offset of the found clump, while the respective clump value is
stored to the location pointed by "clump". Additionally, the
bitmap_get_value8 and bitmap_set_value8 functions are introduced to
respectively get and set an 8-bit value in a bitmap memory region.

Suggested-by: Andy Shevchenko <andy.shevchenko@gmail.com>
Suggested-by: Rasmus Villemoes <linux@rasmusvillemoes.dk>
Cc: Arnd Bergmann <arnd@arndb.de>
Cc: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: William Breathitt Gray <vilhelm.gray@gmail.com>
---
 include/asm-generic/bitops/find.h | 14 +++++++
 include/linux/bitops.h            |  5 +++
 lib/find_bit.c                    | 63 +++++++++++++++++++++++++++++++
 3 files changed, 82 insertions(+)

diff --git a/include/asm-generic/bitops/find.h b/include/asm-generic/bitops/find.h
index 8a1ee10014de..457b93e6f5c9 100644
--- a/include/asm-generic/bitops/find.h
+++ b/include/asm-generic/bitops/find.h
@@ -80,4 +80,18 @@ extern unsigned long find_first_zero_bit(const unsigned long *addr,
 
 #endif /* CONFIG_GENERIC_FIND_FIRST_BIT */
 
+unsigned int bitmap_get_value8(const unsigned long *const bitmap,
+			       const unsigned int start);
+
+void bitmap_set_value8(unsigned long *const bitmap,
+		       const unsigned long *const value,
+		       const unsigned int start);
+
+unsigned int find_next_clump8(unsigned long *const clump,
+			      const unsigned long *const addr,
+			      unsigned int offset, const unsigned int size);
+
+#define find_first_clump8(clump, bits, size) \
+	find_next_clump8((clump), (bits), 0, (size))
+
 #endif /*_ASM_GENERIC_BITOPS_FIND_H_ */
diff --git a/include/linux/bitops.h b/include/linux/bitops.h
index 705f7c442691..850af60d36b9 100644
--- a/include/linux/bitops.h
+++ b/include/linux/bitops.h
@@ -40,6 +40,11 @@ extern unsigned long __sw_hweight64(__u64 w);
 	     (bit) < (size);					\
 	     (bit) = find_next_zero_bit((addr), (size), (bit) + 1))
 
+#define for_each_set_clump8(start, clump, bits, size) \
+	for ((start) = find_first_clump8(&(clump), (bits), (size)); \
+	     (start) < (size); \
+	     (start) = find_next_clump8(&(clump), (bits), (offset) + 1, (size)))
+
 static inline int get_bitmask_order(unsigned int count)
 {
 	int order;
diff --git a/lib/find_bit.c b/lib/find_bit.c
index ee3df93ba69a..2e56d2b907bc 100644
--- a/lib/find_bit.c
+++ b/lib/find_bit.c
@@ -218,3 +218,66 @@ EXPORT_SYMBOL(find_next_bit_le);
 #endif
 
 #endif /* __BIG_ENDIAN */
+
+/**
+ * bitmap_get_value8 - get an 8-bit value within a memory region
+ * @bitmap: address to the bitmap memory region
+ * @start: bit offset of the 8-bit value
+ *
+ * Returns the 8-bit value located at the @start bit offset within the @bitmap
+ * memory region.
+ */
+unsigned int bitmap_get_value8(const unsigned long *const bitmap,
+			       const unsigned int start)
+{
+	const size_t index = BIT_WORD(start);
+	const unsigned int offset = start % BITS_PER_LONG;
+
+	return (bitmap[index] >> offset) & 0xFF;
+}
+EXPORT_SYMBOL(bitmap_get_value8);
+
+/**
+ * bitmap_set_value8 - set an 8-bit value within a memory region
+ * @bitmap: address to the bitmap memory region
+ * @value: the 8-bit value
+ * @start: bit offset of the 8-bit value
+ */
+void bitmap_set_value8(unsigned long *const bitmap,
+		       const unsigned long *const value,
+		       const unsigned int start)
+{
+	const size_t index = BIT_WORD(start);
+	const unsigned int offset = start % BITS_PER_LONG;
+	const unsigned long mask = GENMASK(7, offset);
+
+	bitmap[index] &= ~mask;
+	bitmap[index] |= (*value << offset) & mask;
+}
+EXPORT_SYMBOL(bitmap_set_value8);
+
+/**
+ * find_next_clump8 - find next 8-bit clump with set bits in a memory region
+ * @clump: location to store copy of found clump
+ * @addr: address to base the search on
+ * @offset: bit offset at which to start searching
+ * @size: bitmap size in number of bits
+ *
+ * Returns the bit offset for the next set clump; the found clump value is
+ * copied to the location pointed by @clump. If no bits are set, returns @size.
+ */
+unsigned int find_next_clump8(unsigned long *const clump,
+			      const unsigned long *const addr,
+			      unsigned int offset, const unsigned int size)
+{
+	for (; offset < size; offset += 8) {
+		*clump = bitmap_get_value8(addr, offset);
+		if (!*clump)
+			continue;
+
+		return offset;
+	}
+
+	return size;
+}
+EXPORT_SYMBOL(find_next_clump8);
-- 
2.20.1

