Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  19 Dec 2018 21:30:46 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 953995805F0;
	Tue, 18 Dec 2018 22:00:17 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 18 Dec 2018 22:00:16 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AaxehThO8w9KOIu89BPQl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPn4psbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRsZfWTJcDI2y?=
 =?us-ascii?q?bIUBCOgOPehXoIfyvFsOtRmzCBKwCO7s0DJEmmX70bEm3+knDArI3BYgH9ULsH?=
 =?us-ascii?q?nMrNr1NaMSUeS0zKbSyDXIcu5b2S3j54fSbhAhofCMXa5sccHMyEcvDRnKj1WN?=
 =?us-ascii?q?ooHiITOV1+ANs2iF4OpkUOKjkWEnqxtrrTmv3coshYzJiZgUylDA7yl23IE1Jd?=
 =?us-ascii?q?ihRUN9fNWqE4NQujmEO4dqRs4uWXxktSgkxrEcpJK2fzQGxI4myhPdc/CLbZSE?=
 =?us-ascii?q?7g7+WOuUPzt1hXFodbejiBqu60es1OjxWdev31tKsyZIl9jBumwQ2xHQ78WKRf?=
 =?us-ascii?q?tw8Vqu1DuK1w3e6vtLLV4xmKXFL5MszaU/m5wOukrZBCD2gl/5jKqOe0Uk5Oeo?=
 =?us-ascii?q?7+Pnb634pp+TKYB0kBvyMqcwlcylB+Q3LAwOU3Kc+eSm273v5Uz5QLNUgf0qiq?=
 =?us-ascii?q?TVrozWKMABqqKkDQJZzJwv5wu8Aju6ytgVnHsKIEpAeB2djojpP1/OIOr/Dfe6?=
 =?us-ascii?q?m1mslDZrx/bbPrzuG5nNLWbMkK3nfblj705Q0Q0zzN5Z551KELEMO+zzWkDvu9?=
 =?us-ascii?q?zCFBM5MBK7w/zhCNpj0oMSQ2WPArWWMK/Kq1+H+vovI/WQZI8SoDv9L/kl5/3w?=
 =?us-ascii?q?gnMjll4dYLKk3Z8WaHC+A/RnLF+VYXvqgtcdD2gKuhAyQ/DtiF2HSTRTfWq9X7?=
 =?us-ascii?q?og5jEnD4KrFYfDSZqsgLydxii7GYdaZmBbCl+WF3foeJ6JW/MNaCKUP89gnSYI?=
 =?us-ascii?q?VbmnS489yx6usBX2xKZgLurR4icYr47s1MBp5+3PkhE/7T50D8OD3G2XTGF0mW?=
 =?us-ascii?q?UIRzkx3K1kpUx9y1GD0bV3gvBCFNxT4e9JXRk+NZLG0+N6DNXyUBrbftiVUFam?=
 =?us-ascii?q?XsmmATYpQ90r2N8OY0F9G9a4ghDZxSWqAaQYl7iKBJwy76Ld0GL9J8d7y3bayq?=
 =?us-ascii?q?Yhi0MqTddINW2jnqR/7RTcB5bVk0WFkKanbacc0zTL9GuZyWqOvVtXUAh/Uaje?=
 =?us-ascii?q?WXAfZ03Wrcn250/YTr+uD6gnPRVFycKYNqRKbdjph01cRPj/INTef36xm2CoCB?=
 =?us-ascii?q?mV3LyMcpTld38d3CrHDkgEiB4c/XCBOQg6BSehpmbeASdqFVLuZUPs7OZ/pGm6?=
 =?us-ascii?q?Tk8y0wGFcUlh26Cp9R4SgPyWU+kT0a4cuCc9tzV0G06w0M/MBNqeuQVtZqVcbs?=
 =?us-ascii?q?k74Fdcy23ZsRdwPpihL6Bkm14ffB57v0Lo1xVrFIpAldImo28tzAp3MaiYyk9O?=
 =?us-ascii?q?dyuE3ZDsPb3aMnXy/BGqa67RxlHe0NaX9r0T6PgirFXjpgWpFksk83VoyNRV13?=
 =?us-ascii?q?qc5pPXDAsdS57xU0A39wRkqLHeeCUy+4TU1Xh0O6murjDCw84pBPciyhu4Zdhf?=
 =?us-ascii?q?NL2LFQDsHMwaHcShM/EqlEWzYRICP+BS87A0Mtiid/uH3q6rIelhkCinjWRB/I?=
 =?us-ascii?q?ByzEaM+zBgRe7P2pYP2+uY0RefVzfgkFehtdj6mIBZZT0IAmWz0ynlBI5Laa10?=
 =?us-ascii?q?coYGEmOuI8yxxtVjiJ/hQX9Y9Fi/B1wY3M+lYwadb1v43QdIz0QYvWSnmTekzz?=
 =?us-ascii?q?xzizwptKuf0zDUzOT4aRUHPXRHRG98glf2IIi4lswVU1Ksbwc0ihSl/0H6x65A?=
 =?us-ascii?q?qaR7LmnTR1pIfifsI2FjVKuwqqSNY8pV5Jw0tiVXVfy2YUqGRb7lvxsazyTjEn?=
 =?us-ascii?q?NexTA6bT2ruo/1nwdniGKbN3tzqHvZecdtxRbQ/tDcRPhR3iYYSyl8kzXYGl+8?=
 =?us-ascii?q?P9yx99WOi5jDqvy+V36mVpBLcynk15mAtCi45W1tGxG/hOq8mt7kEQg71y/0yd?=
 =?us-ascii?q?9qWD7MrBb9ZInryqu7PfhmfkluGF/z9c56FptinYs3gZEawWIaiYmN/XobjWfz?=
 =?us-ascii?q?Ns1W2KLkY3oKXzILwd/V4A7+1U1nL3KJwZ/5V3qHzstgYdm6fn0Z2iYn489WD6?=
 =?us-ascii?q?eU6aROnTFprVqgsQLRff99ky8eyfQ06X4WmeEJuBc3wSWbDbAfBk1YPS3qlxSV?=
 =?us-ascii?q?4NGytqRXZGCzcbeu0Epyh8yuDLaHogtEQnb2Zo8iHTNs7sV4KF/M1Xzz6oL+d9?=
 =?us-ascii?q?XKY9McqAaUkwvegOhPM50+iOAKhSV8NGL5vH0lzfM7jBN00ZG7uoiHN3ti/Kaj?=
 =?us-ascii?q?DhFEMT31YtsZ+ivxgqZGgsaWw4evE419GjUMWZvkV/OpHygUtfT6LAaOCzw8p2?=
 =?us-ascii?q?yfGbreGw+f9Uhno2jOE5CtK3GYOn0Zwc9+SxmaIUxVmBoUUykinp4lCgCqw9Ts?=
 =?us-ascii?q?f1xj6TAW4l74twFAyuZ1NxTkVmffpQGoaio7SZSFLRpW6B1C6FnRMcCE8u1zGC?=
 =?us-ascii?q?RY9IW7rAORMmybexhIDWYRV0yGHV/jO6eh5cLa/+iEHOa+LObOYbaTqexYTfiI?=
 =?us-ascii?q?3omi0o9n/zaKK8WOMWNuD/w92kpfQ395H97VlCkISywSjyjNddKUpA+g+i1rqc?=
 =?us-ascii?q?Cy6PTqWAXy5YuWFrtdK9Nv9wqtgaeEMe6Qiz10KTJZ1pMK2H/Jx6IT3F8UiyFy?=
 =?us-ascii?q?aTatFa4MujLKTKLVgqVXFQIUaztvNMtU6KIxxglNNtDaitP21b54j+Q5C1RfVV?=
 =?us-ascii?q?zmlcGme9YKI3ymNF7cAEaLNbKGJSDEws3tYKO8T6FQg/tQtxGqpTmbFErjNCyZ?=
 =?us-ascii?q?lzb1TxCvLf1MjCaDMRNEpYGyaQxtBnbjTd78bh27McR6jTk3wb0ym3PLOnQQMT?=
 =?us-ascii?q?l6c0NRsLKQ6TlUjel4G2xE9nBlN/WLmz6F7+nELZYbqedrAiVxl+5A/Hs20ada?=
 =?us-ascii?q?7CFaS/xzgybSqt9uo1e7kuiA0DZnURxOqipVi4KPp0ltJaLZ9pxYU3be4B0N9X?=
 =?us-ascii?q?mQCwgNp9Z9CtzgoaZQyt3OlKL1MDhD8tLU8tEaB8jbM8+HNHshMRz0GD/bFgcF?=
 =?us-ascii?q?TDirNX3BiExZiv2d6nqVrp1p4qTrzZ4PTKJAEkM8EvcXC0ZNGN0EKY1wGDQ+nu?=
 =?us-ascii?q?21lskNsEW/qB3QTcASlIrKX+6SAOnzYBmDhKgMMwUJxbP1KYFVOZfyymRtb1B7?=
 =?us-ascii?q?mMLBHE+GDoMFmTFocgJh+BYFy3N5VGBmnhu9Mg4=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AfAAC+3Rlch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUwUBAQsBgTCCOyeZejmJEok5hH2BcxMBARgTAYclIjYHDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCgsJCCkjDII2JAGCYgMDAQIvAQ0BGx0BAwIJAQEFEDsDHgIRAQUBHBkFg?=
 =?us-ascii?q?x2BaQEDFQEEmls8jCsFAReCdwWEQQoZJw1egTcCBhKHbFWCUIEcghaBRIIqgwy?=
 =?us-ascii?q?ICQKQT5APGDAHAoZPhAODXYMxGIl2h2AsjySJfwIEAgQFAgUPIYEsAYIGTSOBA?=
 =?us-ascii?q?YI7ghsMF4NKimIxMoEEAQEBO40lAQE?=
X-IPAS-Result: =?us-ascii?q?A0AfAAC+3Rlch0O0hNFkHAEBAQQBAQcEAQGBUwUBAQsBgTC?=
 =?us-ascii?q?COyeZejmJEok5hH2BcxMBARgTAYclIjYHDQEDAQEBAQEBAgETAQEBCgsJCCkjD?=
 =?us-ascii?q?II2JAGCYgMDAQIvAQ0BGx0BAwIJAQEFEDsDHgIRAQUBHBkFgx2BaQEDFQEEmls?=
 =?us-ascii?q?8jCsFAReCdwWEQQoZJw1egTcCBhKHbFWCUIEcghaBRIIqgwyICQKQT5APGDAHA?=
 =?us-ascii?q?oZPhAODXYMxGIl2h2AsjySJfwIEAgQFAgUPIYEsAYIGTSOBAYI7ghsMF4NKimI?=
 =?us-ascii?q?xMoEEAQEBO40lAQE?=
X-IronPort-AV: E=Sophos;i="5.56,371,1539673200"; 
   d="scan'208";a="56947198"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 18 Dec 2018 22:00:14 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727756AbeLSGAM (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 19 Dec 2018 01:00:12 -0500
Received: from mail-pg1-f194.google.com ([209.85.215.194]:46937 "EHLO
        mail-pg1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726920AbeLSGAM (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 19 Dec 2018 01:00:12 -0500
Received: by mail-pg1-f194.google.com with SMTP id w7so8945479pgp.13;
        Tue, 18 Dec 2018 22:00:11 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=u1oZXhPLBwf6ld/Ap5bG26cpxbbDtyrh+8dpvM7Fc0E=;
        b=TqubCjyIfIJJbFdMSsP5578TCHQFawBB5j28IM913BWu5NKWtsn34/uCMSTVNW+dXK
         W+CieSYpmmOY2V6v52Oi7HfZKhlNUs6J5tiRvUGOlR++7Eq9PCAKNH+YSk6e4IfFCx5w
         HmiqWVM/DB7pini343cGVPIo3a2Z0nfnDurTiJjWjX650ibEs6c5MYNzx0XDsf20BvW1
         Ch/hmOWNJ8ojH5CV0WP87ghMiqRquCy26aSFS8F0oOGppddcf4bS/6mOfh9MnuSce7eb
         8wQBx/MoD4nUEymCKinPHg/z8/uRhxCqohJGo7yfdUQbR2jyB0v/6ahsho2RCNxG49yu
         6P0Q==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=u1oZXhPLBwf6ld/Ap5bG26cpxbbDtyrh+8dpvM7Fc0E=;
        b=HNda6cRBeShPP3OCVtuHWLmdCbAL5AbzwN98rfWxopxuvDAOH9D7NydpLlRfbr6S2L
         9jPEw11MZf7j/o1arIUi6NNnCrlrMwc4YC3CKUxSo7EFFJD0/Tu+Cd5YWITHZNQJSSc7
         fXaNXGaAzA3lrKa4TraMHBv/GJQT/lupimbRIdyKr40U1cqzbM5Ad0flgosm6C9OhK51
         z7nXhWYiC7nV6f2wOS61HOMfMP+d4Vfrm1LYygLi5S879/LxjYyk3B7MF6+qdLAAOdh6
         lEmM4i+WwRQQmCps9zULSutM8eYu6qXMLJkqWxY0G2fXf9XlAMw/HRxPmS1Hh7/navRF
         /GpQ==
X-Gm-Message-State: AA+aEWaH6RZBaL/bNMUG85MVM+JQhy6uBCJWpEmfdXd76PD8JZa4GSJG
        3o/LZR9haND+bx+FQpGL4WmwJPst
X-Google-Smtp-Source: AFSGD/WdnZ2lJ9Y2Xvo7N21mpAuZKWH8m/p5IqXc3iIbpashwifPPehbLDpY6fIZ2XKZcB8unP1i/g==
X-Received: by 2002:a63:ac46:: with SMTP id z6mr1850033pgn.162.1545199211433;
        Tue, 18 Dec 2018 22:00:11 -0800 (PST)
Received: from localhost.localdomain ([2001:268:c0a2:eb51:6018:45d4:55a2:e94b])
        by smtp.gmail.com with ESMTPSA id h15sm20600853pgl.43.2018.12.18.22.00.07
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 18 Dec 2018 22:00:10 -0800 (PST)
From: William Breathitt Gray <vilhelm.gray@gmail.com>
To: linus.walleij@linaro.org
Cc: akpm@linux-foundation.org, linux-gpio@vger.kernel.org,
        linux-arch@vger.kernel.org, linux-kernel@vger.kernel.org,
        andriy.shevchenko@linux.intel.com, linux@rasmusvillemoes.dk,
        William Breathitt Gray <vilhelm.gray@gmail.com>,
        Andy Shevchenko <andy.shevchenko@gmail.com>,
        Arnd Bergmann <arnd@arndb.de>
Subject: [PATCH v6 1/8] bitops: Introduce the for_each_set_clump8 macro
Date: Wed, 19 Dec 2018 15:00:39 +0900
Message-Id: <9fb3981cbcfbce3fb8b42bf419d734c0e5a44d0e.1545198260.git.vilhelm.gray@gmail.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <cover.1545198260.git.vilhelm.gray@gmail.com>
References: <cover.1545198260.git.vilhelm.gray@gmail.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

This macro iterates for each 8-bit group of bits (clump) with set bits,
within a bitmap memory region. For each iteration, "start" is set to the
bit offset of the found clump, while the respective clump value is
stored to the location pointed by "clump". Additionally, the
bitmap_get_value8 and bitmap_set_value8 functions are introduced to
respectively get and set an 8-bit value in a bitmap memory region.

Suggested-by: Andy Shevchenko <andy.shevchenko@gmail.com>
Suggested-by: Rasmus Villemoes <linux@rasmusvillemoes.dk>
Cc: Arnd Bergmann <arnd@arndb.de>
Cc: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: William Breathitt Gray <vilhelm.gray@gmail.com>
---
 include/asm-generic/bitops/find.h | 14 +++++++
 include/linux/bitops.h            |  5 +++
 lib/find_bit.c                    | 63 +++++++++++++++++++++++++++++++
 3 files changed, 82 insertions(+)

diff --git a/include/asm-generic/bitops/find.h b/include/asm-generic/bitops/find.h
index 8a1ee10014de..457b93e6f5c9 100644
--- a/include/asm-generic/bitops/find.h
+++ b/include/asm-generic/bitops/find.h
@@ -80,4 +80,18 @@ extern unsigned long find_first_zero_bit(const unsigned long *addr,
 
 #endif /* CONFIG_GENERIC_FIND_FIRST_BIT */
 
+unsigned int bitmap_get_value8(const unsigned long *const bitmap,
+			       const unsigned int start);
+
+void bitmap_set_value8(unsigned long *const bitmap,
+		       const unsigned long *const value,
+		       const unsigned int start);
+
+unsigned int find_next_clump8(unsigned long *const clump,
+			      const unsigned long *const addr,
+			      unsigned int offset, const unsigned int size);
+
+#define find_first_clump8(clump, bits, size) \
+	find_next_clump8((clump), (bits), 0, (size))
+
 #endif /*_ASM_GENERIC_BITOPS_FIND_H_ */
diff --git a/include/linux/bitops.h b/include/linux/bitops.h
index 705f7c442691..61c10f20079e 100644
--- a/include/linux/bitops.h
+++ b/include/linux/bitops.h
@@ -40,6 +40,11 @@ extern unsigned long __sw_hweight64(__u64 w);
 	     (bit) < (size);					\
 	     (bit) = find_next_zero_bit((addr), (size), (bit) + 1))
 
+#define for_each_set_clump8(start, clump, bits, size) \
+	for ((start) = find_first_clump8(&(clump), (bits), (size)); \
+	     (start) < (size); \
+	     (start) = find_next_clump8(&(clump), (bits), (start) + 8, (size)))
+
 static inline int get_bitmask_order(unsigned int count)
 {
 	int order;
diff --git a/lib/find_bit.c b/lib/find_bit.c
index ee3df93ba69a..2e56d2b907bc 100644
--- a/lib/find_bit.c
+++ b/lib/find_bit.c
@@ -218,3 +218,66 @@ EXPORT_SYMBOL(find_next_bit_le);
 #endif
 
 #endif /* __BIG_ENDIAN */
+
+/**
+ * bitmap_get_value8 - get an 8-bit value within a memory region
+ * @bitmap: address to the bitmap memory region
+ * @start: bit offset of the 8-bit value
+ *
+ * Returns the 8-bit value located at the @start bit offset within the @bitmap
+ * memory region.
+ */
+unsigned int bitmap_get_value8(const unsigned long *const bitmap,
+			       const unsigned int start)
+{
+	const size_t index = BIT_WORD(start);
+	const unsigned int offset = start % BITS_PER_LONG;
+
+	return (bitmap[index] >> offset) & 0xFF;
+}
+EXPORT_SYMBOL(bitmap_get_value8);
+
+/**
+ * bitmap_set_value8 - set an 8-bit value within a memory region
+ * @bitmap: address to the bitmap memory region
+ * @value: the 8-bit value
+ * @start: bit offset of the 8-bit value
+ */
+void bitmap_set_value8(unsigned long *const bitmap,
+		       const unsigned long *const value,
+		       const unsigned int start)
+{
+	const size_t index = BIT_WORD(start);
+	const unsigned int offset = start % BITS_PER_LONG;
+	const unsigned long mask = GENMASK(7, offset);
+
+	bitmap[index] &= ~mask;
+	bitmap[index] |= (*value << offset) & mask;
+}
+EXPORT_SYMBOL(bitmap_set_value8);
+
+/**
+ * find_next_clump8 - find next 8-bit clump with set bits in a memory region
+ * @clump: location to store copy of found clump
+ * @addr: address to base the search on
+ * @offset: bit offset at which to start searching
+ * @size: bitmap size in number of bits
+ *
+ * Returns the bit offset for the next set clump; the found clump value is
+ * copied to the location pointed by @clump. If no bits are set, returns @size.
+ */
+unsigned int find_next_clump8(unsigned long *const clump,
+			      const unsigned long *const addr,
+			      unsigned int offset, const unsigned int size)
+{
+	for (; offset < size; offset += 8) {
+		*clump = bitmap_get_value8(addr, offset);
+		if (!*clump)
+			continue;
+
+		return offset;
+	}
+
+	return size;
+}
+EXPORT_SYMBOL(find_next_clump8);
-- 
2.20.1

