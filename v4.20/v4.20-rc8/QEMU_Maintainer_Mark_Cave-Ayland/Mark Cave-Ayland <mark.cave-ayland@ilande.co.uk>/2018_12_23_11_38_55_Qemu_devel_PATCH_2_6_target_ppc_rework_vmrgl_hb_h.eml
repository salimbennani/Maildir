Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 16:00:42 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from FMSMGA003.fm.intel.com (fmsmga003.fm.intel.com [10.253.24.29])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id ED16758049E
	for <like.xu@linux.intel.com>; Sun, 23 Dec 2018 03:40:30 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by FMSMGA003-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 23 Dec 2018 03:40:30 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A+ro0Jh3tbJTFmo7FsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?sesWKf/xwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QLYpUjqg8qhrUgflhi?=
 =?us-ascii?q?cZOTA382/Zjc5/jKxGrhK5pRFxwYHZbJybOfZiYKzdZsgXSXZdUstLSyBMGJ+w?=
 =?us-ascii?q?Y5cJAuEcPehYtY79p14WoBW5HwasHuDvwSJWi3Dsw601zf0tHB3G3QwkBd0Otm?=
 =?us-ascii?q?nbp8jyOacXS++11qrIwS/fYPxMxzfy9pHEfQohoPGIR71wd9fexFIuFwPBlFqQ?=
 =?us-ascii?q?r5HqMC2P2usRtGiX9fdgVeG2hmMhtgp/oSCvy98yhoXVhY8Z0E3I+Th6zYovO9?=
 =?us-ascii?q?G1Rk52bcS5HJZSry2XNIp7Ttk/T2xquis20KAKtJy4cSQQ1Zgr2hHSZvqaeIaS?=
 =?us-ascii?q?+B3jTvyeITJgiXJlZr2/gxGy/FCkyu39Tcm0zE1KojBKktnKq3ABzRvT6tKISv?=
 =?us-ascii?q?dl/0eh3yiA1xzL5+1aPUw5lrDXJ4M8zrMzjJYfr0rOEy/slEnrjqKabkAk9fKp?=
 =?us-ascii?q?6+TjbLXmvJicN4pshwHnLKsun9G/Df0lPQcQQWiU5+C82KT48k3+XbVKiOE5nb?=
 =?us-ascii?q?fCsJzdIcQbp625DBFP3ocs9hayFzOm0NUenXkaI1NJYhOHj471O17QJPD0F+uw?=
 =?us-ascii?q?g1OpkDpwwfDGObvhAprLLnjeirvheqx960FExAop0d9f/45UCq0GIP/rXk/xtd?=
 =?us-ascii?q?/YAQEjPw273ubqE9F91oIYWWKSDa6VKqLSsVmU5u0xJ+mAfpMauDH4K6tt2vj1?=
 =?us-ascii?q?kHVsmUMBZbL7mtwTaWukBbJgJEOWZ2eqhc0OVmIDvw47Reqtj0WeUDlVfDGrUq?=
 =?us-ascii?q?choz02Fo+iXrrFXZ2n1bmI3SOnGc9Pa2VbT1yBD3rsMp+JQuoBcz66JMhnnToZ?=
 =?us-ascii?q?E7+7RNg6yBusuQTmnqdhNffe4SYCtJjuh+RysvTekAx3+TFqAsC11WaLQGdp2G?=
 =?us-ascii?q?QSSHt+xa16vAll0lyr169+jPpFU9tJ6LcBSAYxNZfGw6p6Btb+VxjaedGhTFeg?=
 =?us-ascii?q?S8+hRzYrQZZ5z9YQYkpVFNSolRfFmSawBKcfmrWRQp04tKvBjFbrIMMo7n/c1+?=
 =?us-ascii?q?EKhkcrB+JeMWSgiuYr8gHJBMjCmluU0q+7ca0a0AbM8G6FwWfIt0YeTQ0mAvaN?=
 =?us-ascii?q?ZmwWekaD9Yex3UjFVbL7Ubk=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ArAgAXcx9chxHrdtBjgheBMYJijHaLG?=
 =?us-ascii?q?oMJlmcUgV0XGBSHMCI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgbDi+COgUCAxgOgmE?=
 =?us-ascii?q?DAwECJB8KLAMBAgYBAT4KCAMBUwcSBYMdggIBAwGnGDOKHYd+hEGCFoERgl2FH?=
 =?us-ascii?q?oV3AolNhhaRaAcCkV0MGIl+h2iJWZBQgUaCDjMaNIMrgicXEo4LcoEEAyCLMIF?=
 =?us-ascii?q?3AQE?=
X-IPAS-Result: =?us-ascii?q?A0ArAgAXcx9chxHrdtBjgheBMYJijHaLGoMJlmcUgV0XGBS?=
 =?us-ascii?q?HMCI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgbDi+COgUCAxgOgmEDAwECJB8KLAMBA?=
 =?us-ascii?q?gYBAT4KCAMBUwcSBYMdggIBAwGnGDOKHYd+hEGCFoERgl2FHoV3AolNhhaRaAc?=
 =?us-ascii?q?CkV0MGIl+h2iJWZBQgUaCDjMaNIMrgicXEo4LcoEEAyCLMIF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,386,1539673200"; 
   d="scan'208";a="57023923"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 23 Dec 2018 03:40:29 -0800
Received: from localhost ([::1]:44222 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gb27Q-0001AQ-HQ
	for like.xu@linux.intel.com; Sun, 23 Dec 2018 06:40:28 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:50542)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <mark.cave-ayland@ilande.co.uk>) id 1gb26Q-0000mS-0R
	for qemu-devel@nongnu.org; Sun, 23 Dec 2018 06:39:30 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <mark.cave-ayland@ilande.co.uk>) id 1gb26J-0008Vc-Ij
	for qemu-devel@nongnu.org; Sun, 23 Dec 2018 06:39:25 -0500
Received: from chuckie.co.uk ([82.165.15.123]:48724
	helo=s16892447.onlinehome-server.info)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <mark.cave-ayland@ilande.co.uk>)
	id 1gb26H-0008PU-MD; Sun, 23 Dec 2018 06:39:17 -0500
Received: from host86-177-178-114.range86-177.btcentralplus.com
	([86.177.178.114] helo=kentang.home)
	by s16892447.onlinehome-server.info with esmtpsa
	(TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.76)
	(envelope-from <mark.cave-ayland@ilande.co.uk>)
	id 1gb26S-0000Xw-9n; Sun, 23 Dec 2018 11:39:29 +0000
From: Mark Cave-Ayland <mark.cave-ayland@ilande.co.uk>
To: qemu-devel@nongnu.org, qemu-ppc@nongnu.org, richard.henderson@linaro.org,
	david@gibson.dropbear.id.au
Date: Sun, 23 Dec 2018 11:38:55 +0000
Message-Id: <20181223113859.3675-3-mark.cave-ayland@ilande.co.uk>
X-Mailer: git-send-email 2.11.0
In-Reply-To: <20181223113859.3675-1-mark.cave-ayland@ilande.co.uk>
References: <20181223113859.3675-1-mark.cave-ayland@ilande.co.uk>
X-SA-Exim-Connect-IP: 86.177.178.114
X-SA-Exim-Mail-From: mark.cave-ayland@ilande.co.uk
X-SA-Exim-Version: 4.2.1 (built Sun, 08 Jan 2012 02:45:44 +0000)
X-SA-Exim-Scanned: Yes (on s16892447.onlinehome-server.info)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 3.x
X-Received-From: 82.165.15.123
Subject: [Qemu-devel] [PATCH 2/6] target/ppc: rework vmrg{l, h}{b, h,
 w} instructions to use Vsr* macros
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

The current implementations make use of the endian-specific macros MRGLO/MRGHI
and also reference HI_IDX and LO_IDX directly to calculate array offsets.

Rework the implementation to use the Vsr* macros so that these per-endian
references can be removed.

Signed-off-by: Mark Cave-Ayland <mark.cave-ayland@ilande.co.uk>
---
 target/ppc/int_helper.c | 52 ++++++++++++++++++++++++-------------------------
 1 file changed, 25 insertions(+), 27 deletions(-)

diff --git a/target/ppc/int_helper.c b/target/ppc/int_helper.c
index 598731d47a..f084a706ee 100644
--- a/target/ppc/int_helper.c
+++ b/target/ppc/int_helper.c
@@ -976,43 +976,41 @@ void helper_vmladduhm(ppc_avr_t *r, ppc_avr_t *a, ppc_avr_t *b, ppc_avr_t *c)
     }
 }
 
-#define VMRG_DO(name, element, highp)                                   \
+#define VMRG_DOLO(name, element, access)                                \
     void helper_v##name(ppc_avr_t *r, ppc_avr_t *a, ppc_avr_t *b)       \
     {                                                                   \
         ppc_avr_t result;                                               \
         int i;                                                          \
-        size_t n_elems = ARRAY_SIZE(r->element);                        \
+        int m = ARRAY_SIZE(r->element) - 1;                             \
                                                                         \
-        for (i = 0; i < n_elems / 2; i++) {                             \
-            if (highp) {                                                \
-                result.element[i*2+HI_IDX] = a->element[i];             \
-                result.element[i*2+LO_IDX] = b->element[i];             \
-            } else {                                                    \
-                result.element[n_elems - i * 2 - (1 + HI_IDX)] =        \
-                    b->element[n_elems - i - 1];                        \
-                result.element[n_elems - i * 2 - (1 + LO_IDX)] =        \
-                    a->element[n_elems - i - 1];                        \
-            }                                                           \
+        for (i = 0; i < ARRAY_SIZE(r->element); i++) {                  \
+            result.access(m - i) = (i & 1) ? a->access(m - (i >> 1))    \
+                                           : b->access(m - (i >> 1));   \
         }                                                               \
         *r = result;                                                    \
     }
-#if defined(HOST_WORDS_BIGENDIAN)
-#define MRGHI 0
-#define MRGLO 1
-#else
-#define MRGHI 1
-#define MRGLO 0
-#endif
-#define VMRG(suffix, element)                   \
-    VMRG_DO(mrgl##suffix, element, MRGHI)       \
-    VMRG_DO(mrgh##suffix, element, MRGLO)
-VMRG(b, u8)
-VMRG(h, u16)
-VMRG(w, u32)
+
+#define VMRG_DOHI(name, element, access)                                \
+    void helper_v##name(ppc_avr_t *r, ppc_avr_t *a, ppc_avr_t *b)       \
+    {                                                                   \
+        ppc_avr_t result;                                               \
+        int i;                                                          \
+                                                                        \
+        for (i = 0; i < ARRAY_SIZE(r->element); i++) {                  \
+            result.access(i) = (i & 1) ? b->access(i >> 1)              \
+                                       : a->access(i >> 1);             \
+        }                                                               \
+        *r = result;                                                    \
+    }
+
+#define VMRG(suffix, element, access)                  \
+    VMRG_DOLO(mrgl##suffix, element, access)           \
+    VMRG_DOHI(mrgh##suffix, element, access)
+VMRG(b, u8, VsrB)
+VMRG(h, u16, VsrH)
+VMRG(w, u32, VsrW)
 #undef VMRG_DO
 #undef VMRG
-#undef MRGHI
-#undef MRGLO
 
 void helper_vmsummbm(CPUPPCState *env, ppc_avr_t *r, ppc_avr_t *a,
                      ppc_avr_t *b, ppc_avr_t *c)
-- 
2.11.0


