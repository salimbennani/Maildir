Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  19 Dec 2018 08:40:11 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 889EA5805CF;
	Tue, 18 Dec 2018 08:23:21 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 18 Dec 2018 08:23:20 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A5oK0qhO9yvZWf4UMxhIl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPj8rsbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRttfWTJPAo28?=
 =?us-ascii?q?bIUBAeQOMulaoIbhqFUOtgO+CAu3CePzyDJFnGP60bE03ukjFwzNwQwuH8gJsH?=
 =?us-ascii?q?TRtNj4KKMSXv66zabWzTTIcu5Y2TT86IfVaB8hp/aMXaxtesfW00YvEx3Kj1qO?=
 =?us-ascii?q?po3lJT+VzecNs2mG4OV6U+KvjHAnphpwojip2scjlI3JipgJxVDD8CV02YA4Ls?=
 =?us-ascii?q?C7Rk5jedOoDodcuiWAO4drTM4uXXtktDs5x7Eao5K2fSoHxIw6yxPbdfCLaYiF?=
 =?us-ascii?q?7xL5WOuRPzt0nm9pdK+/ihu07EOu0PfzVtOu31ZPtidFksfDtnQK1xHL9MiHRe?=
 =?us-ascii?q?Vy/l271TaMyQ/T8OdELl4wlabBLJ4h2LEwmoISsUTFACD2hF37gLGKekgg4OSk?=
 =?us-ascii?q?9urqbqv8qpOBNIJ4lhvyP6Usl8CnBOQ3KAkOX2yV+eSm073j+FX0QLFLjv0wj6?=
 =?us-ascii?q?nYv4nWJccFqa6jBQ9azIIj5w+4Dzao1tQXg2MHIUlbeBKIkYfpIUvCIPPmAvel?=
 =?us-ascii?q?hVSjjjNry+rBPr37DZXBNmLDn6v5fbZh905czxI+zdRe55JXFL4NOv3yWlLqud?=
 =?us-ascii?q?zcDx85NRG0wun9BNV80IMeRXyAAquDPKzOtl+I4/olI/OQa48NpDb9N/8l6ubu?=
 =?us-ascii?q?jXAjmF8dYbOm3ZwNZHC4A/RpOUOZYXX3j9cFEGcKuBc+TePwhF2DVz5Te2i9X6?=
 =?us-ascii?q?Ym6j4nD4KmCJ/JRpqxj7yZwCe7AppWa3hEClCLD3jkbYaEW/AKaCKUJc9siTgE?=
 =?us-ascii?q?VbmnS4882hCirg76y7x7LuXK/i0Ur47s1N9w5+fLjxE96SR0D9iB02GKV2x7hH?=
 =?us-ascii?q?gIRz8x3KB8u0B90E2M0apjjvxcFNxT4e5JUwggOZ7dyex6F879WgbbctiVT1am?=
 =?us-ascii?q?R82sASstQdIp398Of0F9Fs2hjh/Z2SqmGbsVl72RC5wy/aLRxHzxJ8d7y3bb26?=
 =?us-ascii?q?gtlVgmQs1TNWK4gq5z7RTcB4nMk0+Bjaalabwc3DLR9GeE1WeBoVtXUBBuXqnf?=
 =?us-ascii?q?XXAQfE3Wrc/n6UPESLOuDbcnMg5FycOZLqtKa9vpjUhJRfv5OdTeZX6xlHm0BR?=
 =?us-ascii?q?qS2ryMa4/qcX0H3CrBEEgEjxwT/XGeOAcjHCihvXzRACZuFV31ZUPs6vdxqHWg?=
 =?us-ascii?q?Q08wzgGKaVBh1rWv9h4Ug/ycV+0c3rYetCg9rDV0GU6338jKBNqYuwphYKJcbM?=
 =?us-ascii?q?sh4FdG0GLZsBB9PpygLqx4ml4SaQN3v1nq1xV2DIVAntMnrHcrzAp0NKKZ30lN?=
 =?us-ascii?q?dzKe3ZDsJLLXLnP+8wyoa67TwlveysqZ+r8T6PQkrFXupBumFk48/HRozdZU02?=
 =?us-ascii?q?GQ6Y7XDAUPS53xVEU39x9kp7zBZik95oXU1WBjMKWusz/C3c4pC/Uhyhq6Y9hf?=
 =?us-ascii?q?N6aEHhfoE8IGH8iuNPAqm1+xYxMEIeBe7rI7M9mndvuGwqGrOulgkSmijWRG5o?=
 =?us-ascii?q?B9z02N+zB9Su7Ow5YK3fWY0hGbWDf7iVerqtr3lpxcZTEOAmq/zjDpBJRQZqJu?=
 =?us-ascii?q?Z4kLE3qhI8qtytV4mZHtQX9Y+Ee/CFwc3M+mZASdb0b63Q1WzkkXpX2nmS2lzz?=
 =?us-ascii?q?17iT0pr6yf3DDQzOTmbhYIJmlLRGx6h1f2PYe0l8waXFSvbwUxlBql5Fz2xqhB?=
 =?us-ascii?q?qKRkMmnTR1xFfyz3L2FkT6uxuaCOY89J6JM0rypXVP6wbkydSr74uxEayT/sH3?=
 =?us-ascii?q?NCxDAncDGnopf5kAZgiGKeL3Zzq2DVedpqyhfc59zcRPhR0SQARCRjjTnXB168?=
 =?us-ascii?q?P8Sm/NmOlpfDtPy+WHylVpFJbSbryoaAvjOh5WJ2GR2/g+yzmtr/HAk6yyD70M?=
 =?us-ascii?q?NmVSfJrBb6eYTr06W6MeR6fkhnHlP86sx6Gp1gnYs0np0fxX8ahpCN93odjWjz?=
 =?us-ascii?q?Kclb2b75bHcVRj4E2d/V7BLl2E1+NH2JwY35W26ZwstgYdm6f2wX1jg878BMFK?=
 =?us-ascii?q?eb8rhEkTFprVq/qALbeeJ9kSsFyfsy9H4ahPkEuA8sziWeGL8eB0dZMjL3lxSU?=
 =?us-ascii?q?8d++tr5Ya3i1cbi/z0d+mdGhDLefogBTQnr5e5EiHTNu4cV7Kl7DzHrz6oT8ct?=
 =?us-ascii?q?nKcd0TrgGUkwvHj+VNNJIxkf8KiTBmOG3nu30l1vU7jQdv3ZyhuIiHKmNt/L+2?=
 =?us-ascii?q?AxJCNz31Yd8T9S/pjapEgsmW2IWvFI17GjoXRJvoUe6oEDUKuPv8LQmOFzk8qm?=
 =?us-ascii?q?qBFbrbAA+S80Nmr3PJE5C2OHCbPngZzdN+RBaDIExTmhwbXDI/npQhDACl2NTh?=
 =?us-ascii?q?cFtl5jAW/lP4qAFDyud2OBnkSGvfuB2kajQpSJicMRpW6BtN51zOPMya7+JzGT?=
 =?us-ascii?q?xY/5K7oAyMLGybexpHDWUTVkOYAFDjO6Gk5cPc/OiAGuq+M/zObK2OqOxZSveI?=
 =?us-ascii?q?3I+v3ZFg/zqWLcWPOX9iD/Ig10pHXHB5HdnZmjoVRywWkSLNc9CUpBOm9iJrqc?=
 =?us-ascii?q?C/9ezhWBjz6ouXF7tSLdJv9gi2gaidNu6QhyV5KTdC2pMP33/Iz7cf00AIiyFz?=
 =?us-ascii?q?bDmgCrAAtS/LTKLNla5bFR8bayVvNMRW66IwxBVCOcneitntzL53kuY1C0tZVV?=
 =?us-ascii?q?zmgsymf9EKLHqnNFzZBEeHLrCGJTzQzsHzYKO8T6BQjepOux2xvzabD1HsPjCZ?=
 =?us-ascii?q?mzb1UBCvNPlGjDuHMxxGpIG9bhFtBHD/TNLnbx23KsN4gScqzr00mHzKM3URMT?=
 =?us-ascii?q?x9c0NLs72R4jlUgvR5G2xd8HVlKfOIlDqe7+ndMpwWq+dkAjxol+JG53Q307tU?=
 =?us-ascii?q?4ztCRPxwmSvSqMZholCmkuaVzDpnXwFDqjJKhIKNoEVjNr/V9phGWXbY4h0N6X?=
 =?us-ascii?q?+cBAgNp9tgWZXTvPV0y9HK3If6MjQKp9bR9NEfL8PTJM+OLWAmKxOvHyTbWlgr?=
 =?us-ascii?q?VzmuYEjbilxQgbmp9XyZp549tNC4kZ4DWrJKEkc2F/8TDEN7NN0EPJpzGDgjlO?=
 =?us-ascii?q?jI34Yz+XOioUyJF41htZfdW6fXWK23JQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AQAACiHhlch0O0hNFkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBVAIBAQEBCwEBg1gSJ4N8iHiLHIFgLRSZORUYEwGHHSI3Bg0BAwE?=
 =?us-ascii?q?BAQEBAQIBEwEBAQoLCQgpL0IBEAGBYiQBgmIBAgMBAiBWBgkBAQoOCgICJgICA?=
 =?us-ascii?q?1QGDQYCAQEBgx2CAQWnVIEvhUCEcoELiyUPNAGBIj+BESeCa4gJglcCiTuGXpB?=
 =?us-ascii?q?DSAcCgiUEjzEGGJFXLJlHgVyBeE0jUIJsglCODT0BATGBBQEBgRuMRQEB?=
X-IPAS-Result: =?us-ascii?q?A0AQAACiHhlch0O0hNFkGgEBAQEBAgEBAQEHAgEBAQGBVAI?=
 =?us-ascii?q?BAQEBCwEBg1gSJ4N8iHiLHIFgLRSZORUYEwGHHSI3Bg0BAwEBAQEBAQIBEwEBA?=
 =?us-ascii?q?QoLCQgpL0IBEAGBYiQBgmIBAgMBAiBWBgkBAQoOCgICJgICA1QGDQYCAQEBgx2?=
 =?us-ascii?q?CAQWnVIEvhUCEcoELiyUPNAGBIj+BESeCa4gJglcCiTuGXpBDSAcCgiUEjzEGG?=
 =?us-ascii?q?JFXLJlHgVyBeE0jUIJsglCODT0BATGBBQEBgRuMRQEB?=
X-IronPort-AV: E=Sophos;i="5.56,368,1539673200"; 
   d="scan'208";a="142602897"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 18 Dec 2018 08:23:03 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727181AbeLRQW7 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 18 Dec 2018 11:22:59 -0500
Received: from mga14.intel.com ([192.55.52.115]:31017 "EHLO mga14.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726611AbeLRQW7 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 18 Dec 2018 11:22:59 -0500
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga008.jf.intel.com ([10.7.209.65])
  by fmsmga103.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 18 Dec 2018 08:22:58 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,368,1539673200"; 
   d="scan'208";a="102477418"
Received: from kohsamui.iil.intel.com (HELO [10.236.193.12]) ([10.236.193.12])
  by orsmga008.jf.intel.com with ESMTP; 18 Dec 2018 08:22:55 -0800
Subject: Re: [PATCH v3] staging: android: ion: Add implementation of
 dma_buf_vmap and dma_buf_vunmap
To: Liam Mark <lmark@codeaurora.org>
Cc: Laura Abbott <labbott@redhat.com>,
        Greg KH <gregkh@linuxfoundation.org>,
        devel@driverdev.osuosl.org, tkjos@android.com, rve@android.com,
        linux-kernel@vger.kernel.org, maco@android.com,
        sumit.semwal@linaro.org
References: <1517400222-2854-1-git-send-email-alexey.skidanov@intel.com>
 <20180131130047.GA22917@kroah.com>
 <89be45dd-ac0e-4efb-2b21-e6c07b0cd66e@intel.com>
 <bf909d75-21a4-9d6d-2f72-887492821252@redhat.com>
 <7d836085-cd8d-300b-56be-e8db4ff37afc@intel.com>
 <alpine.DEB.2.10.1812152119130.2951@lmark-linux.qualcomm.com>
 <67f288db-d9ea-2d45-ddcf-a15dbff316f5@intel.com>
 <alpine.DEB.2.10.1812171036080.23226@lmark-linux.qualcomm.com>
From: Alexey Skidanov <alexey.skidanov@intel.com>
Message-ID: <3740948f-02be-cf7a-bc41-54b4fd195103@intel.com>
Date: Tue, 18 Dec 2018 18:24:39 +0200
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <alpine.DEB.2.10.1812171036080.23226@lmark-linux.qualcomm.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org



On 12/17/18 20:42, Liam Mark wrote:
> On Sun, 16 Dec 2018, Alexey Skidanov wrote:
> 
>>
>>
>> On 12/16/18 7:20 AM, Liam Mark wrote:
>>> On Tue, 6 Feb 2018, Alexey Skidanov wrote:
>>>
>>>>
>>>>
>>>> On 02/07/2018 01:56 AM, Laura Abbott wrote:
>>>>> On 01/31/2018 10:10 PM, Alexey Skidanov wrote:
>>>>>>
>>>>>> On 01/31/2018 03:00 PM, Greg KH wrote:
>>>>>>> On Wed, Jan 31, 2018 at 02:03:42PM +0200, Alexey Skidanov wrote:
>>>>>>>> Any driver may access shared buffers, created by ion, using
>>>>>>>> dma_buf_vmap and
>>>>>>>> dma_buf_vunmap dma-buf API that maps/unmaps previosuly allocated
>>>>>>>> buffers into
>>>>>>>> the kernel virtual address space. The implementation of these API is
>>>>>>>> missing in
>>>>>>>> the current ion implementation.
>>>>>>>>
>>>>>>>> Signed-off-by: Alexey Skidanov <alexey.skidanov@intel.com>
>>>>>>>> ---
>>>>>>>
>>>>>>> No review from any other Intel developers? :(
>>>>>> Will add.
>>>>>>>
>>>>>>> Anyway, what in-tree driver needs access to these functions?
>>>>>> I'm not sure that there are the in-tree drivers using these functions
>>>>>> and ion as> buffer exporter because they are not implemented in ion :)
>>>>>> But there are some in-tre> drivers using these APIs (gpu drivers) with
>>>>>> other buffer exporters.
>>>>>
>>>>> It's still not clear why you need to implement these APIs.
>>>> How the importing kernel module may access the content of the buffer? :)
>>>> With the current ion implementation it's only possible by dma_buf_kmap,
>>>> mapping one page at a time. For pretty large buffers, it might have some
>>>> performance impact.
>>>> (Probably, the page by page mapping is the only way to access large
>>>> buffers on 32 bit systems, where the vmalloc range is very small. By the
>>>> way, the current ion dma_map_kmap doesn't really map only 1 page at a
>>>> time - it uses the result of vmap() that might fail on 32 bit systems.)
>>>>
>>>>> Are you planning to use Ion with GPU drivers? I'm especially
>>>>> interested in this if you have a non-Android use case.
>>>> Yes, my use case is the non-Android one. But not with GPU drivers.
>>>>>
>>>>> Thanks,
>>>>> Laura
>>>>
>>>> Thanks,
>>>> Alexey
>>>
>>> I was wondering if we could re-open the discussion on adding support to 
>>> ION for dma_buf_vmap.
>>> It seems like the patch was not taken as the reviewers wanted more 
>>> evidence of an upstream use case.
>>>
>>> Here would be my upstream usage argument for including dma_buf_vmap 
>>> support in ION.
>>>
>>> Currently all calls to ion_dma_buf_begin_cpu_access result in the creation 
>>> of a kernel mapping for the buffer, unfortunately the resulting call to 
>>> alloc_vmap_area can be quite expensive and this has caused a performance 
>>> regression for certain clients when they have moved to the new version of 
>>> ION.
>>>
>>> The kernel mapping is not actually needed in ion_dma_buf_begin_cpu_access, 
>>> and generally isn't needed by clients. So if we remove the creation of the 
>>> kernel mapping in ion_dma_buf_begin_cpu_access and only create it when 
>>> needed we can speed up the calls to ion_dma_buf_begin_cpu_access.
>>>
>>> An additional benefit of removing the creation of kernel mappings from 
>>> ion_dma_buf_begin_cpu_access is that it makes the ION code more secure.
>>> Currently a malicious client could call the DMA_BUF_IOCTL_SYNC IOCTL with 
>>> flags DMA_BUF_SYNC_END multiple times to cause the ION buffer kmap_cnt to 
>>> go negative which could lead to undesired behavior.
>>>
>>> One disadvantage of the above change is that a kernel mapping is not 
>>> already created when a client calls dma_buf_kmap. So the following 
>>> dma_buf_kmap contract can't be satisfied.
>>>
>>> /**
>>> * dma_buf_kmap - Map a page of the buffer object into kernel address 
>>> space. The
>>> * same restrictions as for kmap and friends apply.
>>> * @dmabuf:	[in]	buffer to map page from.
>>> * @page_num:	[in]	page in PAGE_SIZE units to map.
>>> *
>>> * This call must always succeed, any necessary preparations that might 
>>> fail
>>> * need to be done in begin_cpu_access.
>>> */
>>>
>>> But hopefully we can work around this by moving clients to dma_buf_vmap.
>> I think the problem is with the contract. We can't ensure that the call
>> is always succeeds regardless the implementation - any mapping might
>> fail. Probably this is why  *all* clients of dma_buf_kmap() check the
>> return value (so it's safe to return NULL in case of failure).
>>
> 
> I think currently the call to dma_buf_kmap will always succeed since the 
> DMA-Buf contract requires that the client first successfully call 
> dma_buf_begin_cpu_access(), and if dma_buf_begin_cpu_access() succeeds 
> then dma_buf_kmap will succeed.
> 
>> I would suggest to fix the contract and to keep the dma_buf_kmap()
>> support in ION.
> 
> I will leave it to the DMA-Buf maintainers as to whether they want to 
> change their contract.
> 
> Liam
> 
> Qualcomm Innovation Center, Inc. is a member of Code Aurora Forum,
> a Linux Foundation Collaborative Project
> 

Ok. We need the list of the clients using the ION in the mainline tree.

Alexey
