Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  20 Dec 2018 08:40:50 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 71388580522
	for <like.xu@linux.intel.com>; Wed, 19 Dec 2018 08:51:25 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 19 Dec 2018 08:51:25 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AjkrzmB1TfNi4f1ERsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?seMSIvad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWRPUMZPWSJCAIy8?=
 =?us-ascii?q?YYwBAOUdMuhXsof9v1kDoxmxCAWxCu7j1iFHhmTt0K0m0eksCx3K0RY8E94Qtn?=
 =?us-ascii?q?nfsdX7NL0VUeCw1KTGzC/DYO1Z2Tzg7YbIbwohoPCRVr93fsrR004vFx7KjliL?=
 =?us-ascii?q?qozqJTSV2fkXv2ic9epgWvuihmg6oA9yujii3tkghpXKi44P11zI6CZ0zJwrKd?=
 =?us-ascii?q?C2SEN3e8OoHZlIuyyZKYd6WN0uTmFmtSog1LEKpZ22cDIUxJkoxBPSbeGMfZKS?=
 =?us-ascii?q?7RL5TumRJC91hHJ7d7K7gBa/6UygyuznVsmoy1ZGtCVFkt/RtnwX0BzT8MeHRu?=
 =?us-ascii?q?N8/kenxzmPyxje5v9YLU03j6bXNoMtz70qmpYNv0nOHjX6lFj0gaOOc0Ur4Omo?=
 =?us-ascii?q?6+DpYrX8oZ+cMpd5ihjgPaQrh8yzGPk3PRYQX2eF/eSwzabs/UrkQLVMkvI5jL?=
 =?us-ascii?q?LZvJfeJcQapa62HRVZ04k+6xunCzem0dIYnWQILV5feRKHiZTpNE/KIPziEfi/?=
 =?us-ascii?q?hFGsnSxtx/DBOL3hDZPNLmXZnLfmZ7Z95FZQyBAvwtBH+5JUFrYBLer3Wk/wt9?=
 =?us-ascii?q?zXEAU1MgOpw+v8DNV914UeWX+AA6ODMaPSt0OI6fwrI+WWeIAVvzP9eLAY4eXz?=
 =?us-ascii?q?hyo5hUMFZvvump8Wc2yjWPJhJUqffDzrmNhGFG4Lug83SqvtkEGDVjhIIG+/Wr?=
 =?us-ascii?q?956jwlBYb1MIHYW4r4hbWA2Du8TIRbY30DBl2SHHOtbYidRvoXdAqUJclulCFC?=
 =?us-ascii?q?UqKuHJQ83xOjvxOv1rx8M+DP8TcZv5+w6N8gw+TOjxw06XRKDtqc3nvFG2Vqn3?=
 =?us-ascii?q?0JSiUexq1zoUVhjFyE1P4rreZfEIl8/f5GGiQnL4yUm+NgDM39cgHIedvPT0yp?=
 =?us-ascii?q?FIb1SQotR848loddK312HM+v21Wah3Kn?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AqAABidhpchxHrdtBkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTCCYowWX4sdUAEBBoE1fINuhDmJPYR9gXMVGBSHLSI0CQ0BAwE?=
 =?us-ascii?q?BAQEBAQIBEwEBAQoLCQgbDi+CNgUCAxoBBoJbAQEBAQIBAQIkEwwKKQMCAQECB?=
 =?us-ascii?q?gEBCg4KCRMKCAMBCy4aBhMFgx2BdQUIAQMBqTAzijCMPxd4gQeBEYJdNYRbhQE?=
 =?us-ascii?q?jYQKQH4V4ix0JilSHAgwYgV6PeyyKIY81gUaCDjMaCCgIO4JsgicXjh5xgQQDi?=
 =?us-ascii?q?xRVgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AqAABidhpchxHrdtBkHAEBAQQBAQcEAQGBUQcBAQsBgTC?=
 =?us-ascii?q?CYowWX4sdUAEBBoE1fINuhDmJPYR9gXMVGBSHLSI0CQ0BAwEBAQEBAQIBEwEBA?=
 =?us-ascii?q?QoLCQgbDi+CNgUCAxoBBoJbAQEBAQIBAQIkEwwKKQMCAQECBgEBCg4KCRMKCAM?=
 =?us-ascii?q?BCy4aBhMFgx2BdQUIAQMBqTAzijCMPxd4gQeBEYJdNYRbhQEjYQKQH4V4ix0Ji?=
 =?us-ascii?q?lSHAgwYgV6PeyyKIY81gUaCDjMaCCgIO4JsgicXjh5xgQQDixRVgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,373,1539673200"; 
   d="scan'208";a="67556039"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mga01b.intel.com with ESMTP/TLS/AES256-SHA; 19 Dec 2018 08:51:24 -0800
Received: from localhost ([::1]:33014 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gZf47-0007go-CX
	for like.xu@linux.intel.com; Wed, 19 Dec 2018 11:51:23 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:34045)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <groug@kaod.org>) id 1gZf3j-0007gZ-8p
	for qemu-devel@nongnu.org; Wed, 19 Dec 2018 11:51:00 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <groug@kaod.org>) id 1gZf3e-0002Ie-0y
	for qemu-devel@nongnu.org; Wed, 19 Dec 2018 11:50:59 -0500
Received: from 8.mo177.mail-out.ovh.net ([46.105.61.98]:58990)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <groug@kaod.org>) id 1gZf3X-00021K-MM
	for qemu-devel@nongnu.org; Wed, 19 Dec 2018 11:50:50 -0500
Received: from player786.ha.ovh.net (unknown [10.109.159.140])
	by mo177.mail-out.ovh.net (Postfix) with ESMTP id 77A71D5467
	for <qemu-devel@nongnu.org>; Wed, 19 Dec 2018 17:50:36 +0100 (CET)
Received: from kaod.org (lns-bzn-46-82-253-208-248.adsl.proxad.net
	[82.253.208.248]) (Authenticated sender: groug@kaod.org)
	by player786.ha.ovh.net (Postfix) with ESMTPSA id 2359111B895E;
	Wed, 19 Dec 2018 16:50:32 +0000 (UTC)
Date: Wed, 19 Dec 2018 17:50:31 +0100
From: Greg Kurz <groug@kaod.org>
To: Laurent Vivier <lvivier@redhat.com>
Message-ID: <20181219175031.44e1a9f5@bahia.lan>
In-Reply-To: <28b963d3-a42e-1f6c-a8b5-34445f4af698@redhat.com>
References: <20181218131829.5135-1-lvivier@redhat.com>
	<20181218171032.308026c5@bahia.lan>
	<28b963d3-a42e-1f6c-a8b5-34445f4af698@redhat.com>
X-Mailer: Claws Mail 3.16.0 (GTK+ 2.24.32; x86_64-redhat-linux-gnu)
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Ovh-Tracer-Id: 8564720592130251046
X-VR-SPAMSTATE: OK
X-VR-SPAMSCORE: -100
X-VR-SPAMCAUSE: gggruggvucftvghtrhhoucdtuddrgedtkedrudejtddgleegucetufdoteggodetrfdotffvucfrrhhofhhilhgvmecuqfggjfdpvefjgfevmfevgfenuceurghilhhouhhtmecuhedttdenucesvcftvggtihhpihgvnhhtshculddquddttddm
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 46.105.61.98
Subject: Re: [Qemu-devel] [PATCH v2] spapr: Add H-Call
 H_HOME_NODE_ASSOCIATIVITY
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-ppc@nongnu.org, qemu-devel@nongnu.org,
	David Gibson <david@gibson.dropbear.id.au>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Wed, 19 Dec 2018 17:25:04 +0100
Laurent Vivier <lvivier@redhat.com> wrote:

> On 18/12/2018 17:10, Greg Kurz wrote:
> > On Tue, 18 Dec 2018 14:18:29 +0100
> > Laurent Vivier <lvivier@redhat.com> wrote:
> >   
> >> H_HOME_NODE_ASSOCIATIVITY H-Call returns the associativity domain
> >> designation associated with the identifier input parameter
> >>
> >> This fixes a crash when we try to hotplug a CPU in memory-less and
> >> CPU-less numa node. In this case, the kernel tries to online the
> >> node, but without the information provided by this h-call, the node id,
> >> it cannot and the CPU is started while the node is not onlined.
> >>
> >> It also removes the warning message from the kernel:
> >>   VPHN is not supported. Disabling polling..
> >>
> >> Signed-off-by: Laurent Vivier <lvivier@redhat.com>
> >> ---
> >>
> >> Notes:
> >>     v2:
> >>       add hcall-vphn to ibm,hypertas-functions
> >>       correctly check flags
> >>       return H_FUNCTION rather than H_PARAMETER
> >>       update description
> >>
> >>  hw/ppc/spapr.c         |  1 +
> >>  hw/ppc/spapr_hcall.c   | 39 +++++++++++++++++++++++++++++++++++++++
> >>  include/hw/ppc/spapr.h |  1 +
> >>  3 files changed, 41 insertions(+)
> >>
> >> diff --git a/hw/ppc/spapr.c b/hw/ppc/spapr.c
> >> index 7a0ab2da54..d961272c8a 100644
> >> --- a/hw/ppc/spapr.c
> >> +++ b/hw/ppc/spapr.c
> >> @@ -1049,6 +1049,7 @@ static void spapr_dt_rtas(sPAPRMachineState *spapr, void *fdt)
> >>      add_str(hypertas, "hcall-sprg0");
> >>      add_str(hypertas, "hcall-copy");
> >>      add_str(hypertas, "hcall-debug");
> >> +    add_str(hypertas, "hcall-vphn");
> >>      add_str(qemu_hypertas, "hcall-memop1");
> >>  
> >>      if (!kvm_enabled() || kvmppc_spapr_use_multitce()) {
> >> diff --git a/hw/ppc/spapr_hcall.c b/hw/ppc/spapr_hcall.c
> >> index 78fecc8fe9..a48adb3cfb 100644
> >> --- a/hw/ppc/spapr_hcall.c
> >> +++ b/hw/ppc/spapr_hcall.c
> >> @@ -1663,6 +1663,41 @@ static target_ulong h_client_architecture_support(PowerPCCPU *cpu,
> >>      return H_SUCCESS;
> >>  }
> >>  
> >> +static target_ulong h_home_node_associativity(PowerPCCPU *cpu,
> >> +                                              sPAPRMachineState *spapr,
> >> +                                              target_ulong opcode,
> >> +                                              target_ulong *args)
> >> +{
> >> +    target_ulong flags = args[0];
> >> +    target_ulong procno = args[1];
> >> +    PowerPCCPU *tcpu;
> >> +    int idx;
> >> +
> >> +    /* only support procno from H_REGISTER_VPA */
> >> +    if (flags != 0x1) {
> >> +        return H_FUNCTION;
> >> +    }
> >> +
> >> +    tcpu = spapr_find_cpu(procno);
> >> +    if (tcpu == NULL) {
> >> +        return H_P2;
> >> +    }
> >> +
> >> +    /* sequence is the same as in the "ibm,associativity" property */
> >> +
> >> +    idx = 0;
> >> +#define ASSOCIATIVITY(a, b) (((uint64_t)a << 32) | ((uint64_t)b & 0xffffffff))  
> > 
> > It would be safer to have parens around a and b.  
> 
> I agree
> 
> >> +    args[idx++] = ASSOCIATIVITY(0, 0);
> >> +    args[idx++] = ASSOCIATIVITY(0, tcpu->node_id);
> >> +    args[idx++] = ASSOCIATIVITY(procno, -1);  
> > 
> > The returned values are supposed to be a stream of mixed 16-bit and 32-bit
> > values, _insanely_ encoded as follows:
> > 
> > The high order bit of each 2 byte field is a length specifier:
> >  1: The associativity domain number is contained in the low order 15 bits of the
> >     field,
> >  0: The associativity domain number is contained in the low order 15 bits of the
> >     current field concatenated with the 16 bits of the next sequential field)
> > 
> > ie, usable values are either 31-bit, either 15-bit.
> > 
> > I don't see such an encoding taking place in the code... this may cause
> > problems if node_id >= 0x80000000: the guest will only get bits 30:16,
> > and consider bits 15:0 to belong to the next field, which may in turn
> > be considered as a 15-bit value or combined with the top 16-bits of
> > procno to form a bogus 31-bit value... :-\  
> 
> > I guess it is okay to go with the "long" variant for everyone since you
> > only have 5 of them, but you could also use the "short" variant when
> > values are < 0x10000.
> > 
> > And in any case, it seems we have to limit node ids and vcpu ids to be
> > 31 bits if we're to support this interface.  
> 
> From PowerPCCPU, node_id is an int32_t, vcpu_id is an "int", and node id
>  and cpu id cannot be negative, so the value encoded are already 31bit
> values. Moreover, in NumaNodeOptions (see qapi/misc.json) nodeid and
> cpus are uint16.
> 
> So I think we don't have to check the bit 31 of these values.
> 

Indeed, it seems you're right.

> I don't want to manage the 15bit encoding because the list is hard coded
> and I want to keep it simple.
> 

Fair enough.


> Thanks,
> Laurent


