Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  20 Dec 2018 16:21:57 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 98629580522
	for <like.xu@linux.intel.com>; Wed, 19 Dec 2018 19:27:32 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 19 Dec 2018 19:27:32 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3Alnbbyhx2XkM8ae3XCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?2ukRIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CW2RBUMZfWS9PDIyy?=
 =?us-ascii?q?YIQADfYOM+lFoYnlpVYArxSzCRSiCe/z1DBInWT73bE43uk7DQ3KwAItEtAIvX?=
 =?us-ascii?q?/JrNv1LqASUeWtwafI0zrDbu5d1zH86IPVdR0hr/WMXbNrfMrK1EkvDB3Kgk+M?=
 =?us-ascii?q?poziOjOYz+IAuHWY4ep4Te+jlXIrpgJrrjSy28shiZPFipwbx13E7yl13YQ4Kc?=
 =?us-ascii?q?WlREN/YdOoCoZcui+aOodsXM8uXX1ktDwkxrAGtpO2ejUBxo49yB7FcfOHdpCF?=
 =?us-ascii?q?4hL9W+aVJjd1nHZleLOkhxau6kis0OL8Vs+p0FpQqSpFiNbMumgM1xzV9MeHVu?=
 =?us-ascii?q?Nw8lm91TuMzQzf9/xILEMumabFJZMswqQ8mocRvEjbGy/5gkT2jKuYdkU+/eio?=
 =?us-ascii?q?7vzqYqz4qZ+ZKo94kxzxPbowmsOhBeQ0KxMBX2+G+eS6yLLs41b5TLJOjv03ka?=
 =?us-ascii?q?nWrorWJMsGpqOhBw9V04Aj6wuwDju80dQYm2UHI0xBeB6dk4fpPFTOLev+Dfe4?=
 =?us-ascii?q?hVSsnzFrx+3cMr3mGJXNIWDPkK39crZl905c1A0zwMhb55JVCbEOPuj/W0DstN?=
 =?us-ascii?q?HDCh85Mgq0w/voCdln14MeX36PDbGdMK/IrVCI4ecvcKGxYpQIsmP9N+Q9/Kyp?=
 =?us-ascii?q?yns4gkMGO6+u25QRdTa/BPshJkyYZX/lhJAGCXsLuQwlC/XnjUDHXTNNanLhYq?=
 =?us-ascii?q?Qn+ztuDYunCZvEFJmghaHE0CqlE5kTfG1fF12XDV/ucIOLXepKbzidddR8mD4J?=
 =?us-ascii?q?XqT0Vok6yBu1vxX7wbc0Eu2B3yQCto/4nPFv4ufJiAou+CY8W82H1muXUkluk2?=
 =?us-ascii?q?8ITiNw16d69x9T0FCGhIZ1grR8FJQH6fdIehwnLpOaxOt/XYOhEjndd8uEHQ71?=
 =?us-ascii?q?Cu6tBis8G5dom4cD?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AVAABCCxtchxHrdtBkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTCCYoN9iBlfjH0tfJZhgXMVGBSEQIJtIjQJDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCgsJCBsOL4I2BQIDGgEGglwBAgMBAiAEEQ4KKQMDAQIGAQEKDgoCAhgHA?=
 =?us-ascii?q?wQCAgMBUwYNBgIBAQGDHYICAQMBp0x8M4VAhG6BC4s0F4FAP4ERJ4I2NYUBgwi?=
 =?us-ascii?q?CVwKJQIYaRzZTkA0JDZFPBhiBXoUfgwaHVopNjzeBRoIOcBWDJ4InFxKOGGWBB?=
 =?us-ascii?q?4tpgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AVAABCCxtchxHrdtBkHAEBAQQBAQcEAQGBUQcBAQsBgTC?=
 =?us-ascii?q?CYoN9iBlfjH0tfJZhgXMVGBSEQIJtIjQJDQEDAQEBAQEBAgETAQEBCgsJCBsOL?=
 =?us-ascii?q?4I2BQIDGgEGglwBAgMBAiAEEQ4KKQMDAQIGAQEKDgoCAhgHAwQCAgMBUwYNBgI?=
 =?us-ascii?q?BAQGDHYICAQMBp0x8M4VAhG6BC4s0F4FAP4ERJ4I2NYUBgwiCVwKJQIYaRzZTk?=
 =?us-ascii?q?A0JDZFPBhiBXoUfgwaHVopNjzeBRoIOcBWDJ4InFxKOGGWBB4tpgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,375,1539673200"; 
   d="scan'208";a="57113970"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 19 Dec 2018 19:27:31 -0800
Received: from localhost ([::1]:35173 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gZozj-0007vp-7G
	for like.xu@linux.intel.com; Wed, 19 Dec 2018 22:27:31 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:34197)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <fli@suse.com>) id 1gZozR-0007vX-RJ
	for qemu-devel@nongnu.org; Wed, 19 Dec 2018 22:27:14 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <fli@suse.com>) id 1gZozO-0005Ea-JE
	for qemu-devel@nongnu.org; Wed, 19 Dec 2018 22:27:13 -0500
Received: from mx2.suse.de ([195.135.220.15]:52648 helo=mx1.suse.de)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <fli@suse.com>) id 1gZozO-0005D4-4v
	for qemu-devel@nongnu.org; Wed, 19 Dec 2018 22:27:10 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay1.suse.de (unknown [195.135.220.254])
	by mx1.suse.de (Postfix) with ESMTP id 9A6B7B646;
	Thu, 20 Dec 2018 03:27:08 +0000 (UTC)
To: Markus Armbruster <armbru@redhat.com>
References: <20181211095057.14623-1-fli@suse.com>
	<20181211095057.14623-4-fli@suse.com>
	<87wooec5md.fsf@dusky.pond.sub.org>
	<67eb7e9e-b128-a6ec-2063-24faf2ffe4aa@suse.com>
	<874lb9hahz.fsf@dusky.pond.sub.org>
From: Fei Li <fli@suse.com>
Message-ID: <40f29c08-60b4-bff0-4e85-c80a6421aa35@suse.com>
Date: Thu, 20 Dec 2018 11:27:04 +0800
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101
	Thunderbird/52.9.1
MIME-Version: 1.0
In-Reply-To: <874lb9hahz.fsf@dusky.pond.sub.org>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Transfer-Encoding: 7bit
Content-Language: en-US
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x (no
	timestamps) [generic] [fuzzy]
X-Received-From: 195.135.220.15
Subject: Re: [Qemu-devel] [PATCH for-4.0 v8 3/7] migration: fix the multifd
 code when receiving less channels
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-devel@nongnu.org, "Dr . David Alan Gilbert" <dgilbert@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>



On 12/19/2018 10:11 PM, Markus Armbruster wrote:
> Fei Li <fli@suse.com> writes:
>
>> On 12/13/2018 02:17 PM, Markus Armbruster wrote:
>>> Fei Li <fli@suse.com> writes:
>>>
>>>> In our current code, when multifd is used during migration, if there
>>>> is an error before the destination receives all new channels, the
>>>> source keeps running, however the destination does not exit but keeps
>>>> waiting until the source is killed deliberately.
>>>>
>>>> Fix this by dumping the specific error and let users decide whether
>>>> to quit from the destination side when failing to receive packet via
>>>> some channel.
>>>>
>>>> Cc: Dr. David Alan Gilbert <dgilbert@redhat.com>
>>>> Signed-off-by: Fei Li <fli@suse.com>
>>>> Reviewed-by: Peter Xu <peterx@redhat.com>
> [...]
>>>> diff --git a/migration/migration.h b/migration/migration.h
>>>> index e413d4d8b6..02b7304610 100644
>>>> --- a/migration/migration.h
>>>> +++ b/migration/migration.h
>>>> @@ -229,7 +229,7 @@ struct MigrationState
>>>>    void migrate_set_state(int *state, int old_state, int new_state);
>>>>      void migration_fd_process_incoming(QEMUFile *f);
>>>> -void migration_ioc_process_incoming(QIOChannel *ioc);
>>>> +void migration_ioc_process_incoming(QIOChannel *ioc, Error **errp);
>>>>    void migration_incoming_process(void);
>>>>      bool  migration_has_all_channels(void);
>>>> diff --git a/migration/ram.c b/migration/ram.c
>>>> index 7e7deec4d8..c7e3d6b0fd 100644
>>>> --- a/migration/ram.c
>>>> +++ b/migration/ram.c
>>>> @@ -1323,7 +1323,7 @@ bool multifd_recv_all_channels_created(void)
>>>>    }
>>>>      /* Return true if multifd is ready for the migration, otherwise
>>>> false */
>>>> -bool multifd_recv_new_channel(QIOChannel *ioc)
>>>> +bool multifd_recv_new_channel(QIOChannel *ioc, Error **errp)
>>>>    {
>>>>        MultiFDRecvParams *p;
>>>>        Error *local_err = NULL;
>>>> @@ -1331,6 +1331,10 @@ bool multifd_recv_new_channel(QIOChannel *ioc)
>>>>          id = multifd_recv_initial_packet(ioc, &local_err);
>>>>        if (id < 0) {
>>>> +        error_propagate_prepend(errp, local_err,
>>>> +                                "failed to receive packet"
>>>> +                                " via multifd channel %d: ",
>>>> +                                atomic_read(&multifd_recv_state->count));
>>>>            multifd_recv_terminate_threads(local_err);
>>>>            return false;
>>> Here, we return false without setting an error.
>> I am not sure whether I understand correctly, but here I think the above
>> error_propagate_prepend() set the error to errp.
> You're right, I got confused.
>
> However, you shouldn't access @local_err after error_propagate() or
> similar.  Please insert error_propagate_prepend() after
> multifd_recv_terminate_threads(), lik you do in the next hunk.
Right, thanks for the reminder.

Have a nice day :)
Fei
>
>>>>        }
>>>> @@ -1340,6 +1344,7 @@ bool multifd_recv_new_channel(QIOChannel *ioc)
>>>>            error_setg(&local_err, "multifd: received id '%d' already setup'",
>>>>                       id);
>>>>            multifd_recv_terminate_threads(local_err);
>>>> +        error_propagate(errp, local_err);
>>>>            return false;
>>> Here, we return false with setting an error.
>>>
>>>>        }
>>>>        p->c = ioc;
>>>> @@ -1351,7 +1356,8 @@ bool multifd_recv_new_channel(QIOChannel *ioc)
>>>>        qemu_thread_create(&p->thread, p->name, multifd_recv_thread, p,
>>>>                           QEMU_THREAD_JOINABLE);
>>>>        atomic_inc(&multifd_recv_state->count);
>>>> -    return multifd_recv_state->count == migrate_multifd_channels();
>>>> +    return atomic_read(&multifd_recv_state->count) ==
>>>> +           migrate_multifd_channels();
>>> Here, we return either true of false without setting an error.
>> yes.
>>> Taken together, there are three cases:
>>>
>>> 1. Succeed and return true
>> Yes, when all multifd channels are correctly received.
>>> 2. Succeed and return false
>> Yes, when the current multifd channel is received correctly, but
>> have not received all the channels.
> Aha.
>
>>> 3. Fail (set an error) and return false.
>> Yes. And with the propagated error, the code just returns and
>> report the error in migration_channel_process_incoming().
>>> Assuming that's what we want: please update the function comment to
>>> spell them out.
>> Ok, I will update the three cases in the comment to clarify in detail.
>>
>> Have a nice day, thanks :)
> You're welcome!
>
>


