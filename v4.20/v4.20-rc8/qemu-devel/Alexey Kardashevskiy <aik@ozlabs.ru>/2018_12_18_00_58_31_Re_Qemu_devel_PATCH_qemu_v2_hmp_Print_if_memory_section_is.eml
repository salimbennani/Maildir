Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 18:06:05 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 6579D5805CF
	for <like.xu@linux.intel.com>; Mon, 17 Dec 2018 16:59:19 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 17 Dec 2018 16:59:19 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AKM95UBzanFqBQTPXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0uoWLvad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXXRPXshRWSJCDI2z?=
 =?us-ascii?q?YYQAAOgdMuhXsof9v1kDoxmxCAWxCu7j1iFHhmTt0K0m0OksCx3K0BAuEt8Mtn?=
 =?us-ascii?q?nfsdX7NL0VUeCw1KTF0THDYO1Z2Djj6InDbxUvruuWXb1ta8XR0kkvGB3bjlWL?=
 =?us-ascii?q?qozlPjOU3fkKvmeB7upgVvmii2kmqgF1uDeg3dwshpPThoII013J8zhyzoUtJd?=
 =?us-ascii?q?CgVkJ3fd2pHIFNuy2HNIZ6WN0uTm9otSog17ELu4a3cDUUxJg53RLSb/iKf5KL?=
 =?us-ascii?q?7x79TuqdPCt0iXR4c7ylnRmy61KvyujkW8m0zllKqi1Fn8HItnAMzBzT9tOHRu?=
 =?us-ascii?q?Fy/kenxDaDzQfT6vtLIUwslKrbLYAuwqIom5YNrUjOHTX6lFjrgKKVbEko5Oal?=
 =?us-ascii?q?5uT9brn7pJKQL4p0hRv/MqQqlMy/G+M4Mg0WUmiC5+u80aDj8VTkT7pUkP05jK?=
 =?us-ascii?q?3ZvInBKsQcu665BRNa3Zg46xq4Czem0dcYkmcdIFNKZRKKl4zpO1DIIPDlAvaz?=
 =?us-ascii?q?mVWskDF3x//YOr3tGInCLn/GkLr6e7Z97EhcyAU1zdBC/Z5UDasBIP3rVk/rqN?=
 =?us-ascii?q?PYFgM5MxCzw+v/DNV914AeVnyVDq6WLaPfqluI5uMpI+mRa44Zojf9K/455/Hw?=
 =?us-ascii?q?iX81g0MSfa6s3chfVXajA/4zI1mFeWG+xZAFEHwWpUw4S+rljkDEViRcIHO7Xq?=
 =?us-ascii?q?Y57zd8D5q6DIDFXce0jbmcmSu2AJBSNV1AEU2GRHLhdoGYXKUVZSePZ8NsjDEA?=
 =?us-ascii?q?EKKsUpIszg2Gsgj8xLx6aO3O9XoDqJjh2dNpsvDVjgw47jduDs6QgF2KGll0n2?=
 =?us-ascii?q?cJXyc764V2vUx8x0rG/aFlj30QQcRT5vdMXi8gOJLcxvA8ANf3DEaJZ9qMVROq?=
 =?us-ascii?q?T8urBRk3SdQ+xcJIZFxySPu4iRWW9i6nE7IE35+CHpA96aLRwWPyJtc1n3/H14?=
 =?us-ascii?q?EmnV0vSNAJL3Dw1f03zBTaG4OcyxbRrK2tb6lJmXeVrGo=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BSIACDRRhchxHrdtBkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBZQKBL4E5gSmDfIh4imWBBQEBBoEICCV8iCeJA4ZWA0wHDAEBGAMRhECDFiI?=
 =?us-ascii?q?4EgEDAQEBAQEBAgETAQEBCgsJCBsOIwxCAQ4BgWQFAgMaAQaCXAECAwECIAQLA?=
 =?us-ascii?q?Q0BAQQKKQECAwECBgEBChgCAiIEAgIDATABBQEcBgEMBgIBAQGDHQGBcwwBAQS?=
 =?us-ascii?q?cKTyJaz5wfDOCdgEBBYcqCBJ5iheBHBcdW4EHgREnDIIqNYUtglyCV4kghi+RT?=
 =?us-ascii?q?AmHDYpHBhiJcxFchnKJPJABAgQCBAUCBQ8hgTyBd38GgycJghIMFxKBKYIPimd?=
 =?us-ascii?q?eAYEGhUWGM4F3AQE?=
X-IPAS-Result: =?us-ascii?q?A0BSIACDRRhchxHrdtBkHAEBAQQBAQcEAQGBZQKBL4E5gSm?=
 =?us-ascii?q?DfIh4imWBBQEBBoEICCV8iCeJA4ZWA0wHDAEBGAMRhECDFiI4EgEDAQEBAQEBA?=
 =?us-ascii?q?gETAQEBCgsJCBsOIwxCAQ4BgWQFAgMaAQaCXAECAwECIAQLAQ0BAQQKKQECAwE?=
 =?us-ascii?q?CBgEBChgCAiIEAgIDATABBQEcBgEMBgIBAQGDHQGBcwwBAQScKTyJaz5wfDOCd?=
 =?us-ascii?q?gEBBYcqCBJ5iheBHBcdW4EHgREnDIIqNYUtglyCV4kghi+RTAmHDYpHBhiJcxF?=
 =?us-ascii?q?chnKJPJABAgQCBAUCBQ8hgTyBd38GgycJghIMFxKBKYIPimdeAYEGhUWGM4F3A?=
 =?us-ascii?q?QE?=
X-IronPort-AV: E=Sophos;i="5.56,367,1539673200"; 
   d="scan'208";a="57275966"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 17 Dec 2018 16:59:17 -0800
Received: from localhost ([::1]:50837 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gZ3jB-0002r7-Hf
	for like.xu@linux.intel.com; Mon, 17 Dec 2018 19:59:17 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:35428)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <aik@ozlabs.ru>) id 1gZ3if-0002qp-7u
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 19:58:46 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <aik@ozlabs.ru>) id 1gZ3ib-0005Cw-RW
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 19:58:44 -0500
Received: from mail-pg1-x544.google.com ([2607:f8b0:4864:20::544]:40808)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <aik@ozlabs.ru>) id 1gZ3ib-0005Bl-Fg
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 19:58:41 -0500
Received: by mail-pg1-x544.google.com with SMTP id z10so6946311pgp.7
	for <qemu-devel@nongnu.org>; Mon, 17 Dec 2018 16:58:41 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=ozlabs-ru.20150623.gappssmtp.com; s=20150623;
	h=subject:to:cc:references:from:openpgp:autocrypt:message-id:date
	:user-agent:mime-version:in-reply-to:content-language
	:content-transfer-encoding;
	bh=TY1sCGOLAbce88eBkgp7xjHSxdOgH/xkzSP/EneT6KM=;
	b=B3wjT+0u2yM/HgT9xVqlOV/gIOMf7wJxQVqiBkNaRihVao25GjNIAHc99NbQBIosnV
	V0ph0fwhNsrM2Pz1OrgU67+c/aoHtOpZpVFWKMco5/MbYp6LrdmJKn8erGvWivcNEgso
	HYLE7bpewtr4Qit7SNDlADBpj6b+bnnkOlIU0Sg0HUFJYUqIVzdPVMkgnR/N4EQ9bGx6
	Cob813beeUgxWFZRUzneWb0vS6WcEbWT9YSt6QtsU1lpAzn2KS5gey1Xs0dR1G5u0HCB
	UV5yQlu05LTq5U3zvTesi3VislNMBymiLoYPrXMiLcPUNh//UwoqrXWsYz0wj2kmkOLC
	US+g==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:subject:to:cc:references:from:openpgp:autocrypt
	:message-id:date:user-agent:mime-version:in-reply-to
	:content-language:content-transfer-encoding;
	bh=TY1sCGOLAbce88eBkgp7xjHSxdOgH/xkzSP/EneT6KM=;
	b=sGPqd4M8VyoiTjNYW6zbQMxgGYN5NqjY4/pjHuMypTjkukpjNG7MNmyFEpfziI/yCX
	pcz9X7LMjM5XL+GmrN0QpDAer7qfP6nERc8lUfUg+h5izlPMozgFyI8kjgvPkM+77iCH
	gbVNc/5F0p/MWtp88FiBD/4pz/djhMeoACyAP1rTr2B+rI60URL+18DtNA6yxCNR2uYF
	EL6lY7WRriRY0RZSOspUauouoG/1WimP3PQ1DWx5OLITTnVnq3Ljb4niJlj0BslZBlI2
	6t5r07rZaVoi+LGTdXcHSwzbpxsBfmiKAfH7TicMpxTnoKxQvd2q035//bOuSDYzqKEY
	3+0w==
X-Gm-Message-State: AA+aEWaRvKZAUofH4dKdlmoRXHOf/YMZYQ1J2fRPLrbIxmGsOX1Bzmy6
	Uz3JlBvL0jmoNWTo5Yjp6++NxQ==
X-Google-Smtp-Source: AFSGD/VQuB7ulOJwka8QAzn28g1+8bM06xsV1/RItGLWKu4p3ocyLAT2vcYbsyxsMDZcSKHPOKqZ4A==
X-Received: by 2002:a65:64c8:: with SMTP id t8mr13810576pgv.31.1545094719796; 
	Mon, 17 Dec 2018 16:58:39 -0800 (PST)
Received: from [10.61.2.175] ([122.99.82.10]) by smtp.gmail.com with ESMTPSA id
	d129sm22301225pfc.31.2018.12.17.16.58.35
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Mon, 17 Dec 2018 16:58:38 -0800 (PST)
To: =?UTF-8?Q?Philippe_Mathieu-Daud=c3=a9?= <philmd@redhat.com>,
	qemu-devel@nongnu.org
References: <20181214025849.84274-1-aik@ozlabs.ru>
	<8727c6e5-006c-20e5-cb6b-be525154e184@redhat.com>
	<bda42f7c-9068-3c4d-d839-7f6c52561cc9@ozlabs.ru>
	<69a29694-b777-721a-eafd-4ff38c457f6d@redhat.com>
From: Alexey Kardashevskiy <aik@ozlabs.ru>
Openpgp: preference=signencrypt
Autocrypt: addr=aik@ozlabs.ru; keydata=
	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
Message-ID: <db36d006-3bdc-47fe-9987-519440446c4e@ozlabs.ru>
Date: Tue, 18 Dec 2018 11:58:31 +1100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.3
MIME-Version: 1.0
In-Reply-To: <69a29694-b777-721a-eafd-4ff38c457f6d@redhat.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 8bit
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2607:f8b0:4864:20::544
Subject: Re: [Qemu-devel] [PATCH qemu v2] hmp: Print if memory section is
 registered with an accelerator
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Paolo Bonzini <pbonzini@redhat.com>,
	Daniel Henrique Barboza <danielhb413@gmail.com>,
	"Dr . David Alan Gilbert" <dgilbert@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>



On 17/12/2018 23:47, Philippe Mathieu-Daudé wrote:
> On 12/17/18 2:27 AM, Alexey Kardashevskiy wrote:
>> On 14/12/2018 22:07, Philippe Mathieu-Daudé wrote:
>>> Hi Alexey,
>>>
>>> On 12/14/18 3:58 AM, Alexey Kardashevskiy wrote:
>>>> This adds an accelerator name to the "into mtree -f" to tell the user if
>>>> a particular memory section is registered with the accelerator;
>>>> the primary user for this is KVM and such information is useful
>>>> for debugging purposes.
>>>>
>>>> This adds a has_memory() callback to the accelerator class allowing any
>>>> accelerator to have a label in that memory tree dump.
>>>>
>>>> Since memory sections are passed to memory listeners and get registered
>>>> in accelerators (rather than memory regions), this only prints new labels
>>>> for flatviews attached to the system address space.
>>>>
>>>> An example:
>>>>  Root memory region: system
>>>>   0000000000000000-0000002fffffffff (prio 0, ram): /objects/mem0 kvm
>>>>   0000003000000000-0000005fffffffff (prio 0, ram): /objects/mem1 kvm
>>>>   0000200000000020-000020000000003f (prio 1, i/o): virtio-pci
>>>>   0000200080000000-000020008000003f (prio 0, i/o): capabilities
>>>>
>>>> Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>
>>>> ---
>>>>
>>>> This supercedes "[PATCH qemu] hmp: Print if memory section is registered in KVM"
>>>>
>>>> ---
>>>> Changes:
>>>> v2:
>>>> * added an accelerator callback instead of hardcoding it to kvm only
>>>> ---
>>>>  include/sysemu/accel.h |  2 ++
>>>>  accel/kvm/kvm-all.c    | 10 ++++++++++
>>>>  memory.c               | 22 ++++++++++++++++++++++
>>>>  3 files changed, 34 insertions(+)
>>>>
>>>> diff --git a/include/sysemu/accel.h b/include/sysemu/accel.h
>>>> index 637358f..30b456d 100644
>>>> --- a/include/sysemu/accel.h
>>>> +++ b/include/sysemu/accel.h
>>>> @@ -25,6 +25,7 @@
>>>>  
>>>>  #include "qom/object.h"
>>>>  #include "hw/qdev-properties.h"
>>>> +#include "exec/hwaddr.h"
>>>>  
>>>>  typedef struct AccelState {
>>>>      /*< private >*/
>>>> @@ -41,6 +42,7 @@ typedef struct AccelClass {
>>>>      int (*available)(void);
>>>>      int (*init_machine)(MachineState *ms);
>>>>      void (*setup_post)(MachineState *ms, AccelState *accel);
>>>> +    bool (*has_memory)(MachineState *ms, hwaddr start_addr, hwaddr size);
>>>>      bool *allowed;
>>>>      /*
>>>>       * Array of global properties that would be applied when specific
>>>> diff --git a/accel/kvm/kvm-all.c b/accel/kvm/kvm-all.c
>>>> index 4880a05..634f386 100644
>>>> --- a/accel/kvm/kvm-all.c
>>>> +++ b/accel/kvm/kvm-all.c
>>>> @@ -2589,11 +2589,21 @@ int kvm_get_one_reg(CPUState *cs, uint64_t id, void *target)
>>>>      return r;
>>>>  }
>>>>  
>>>> +static bool kvm_accel_has_memory(MachineState *ms, hwaddr start_addr,
>>>> +                                 hwaddr size)
>>>> +{
>>>> +    KVMState *kvm = KVM_STATE(ms->accelerator);
>>>> +    KVMMemoryListener *kml = &kvm->memory_listener;
>>>> +
>>>> +    return NULL != kvm_lookup_matching_slot(kml, start_addr, size);
>>>> +}
>>>> +
>>>>  static void kvm_accel_class_init(ObjectClass *oc, void *data)
>>>>  {
>>>>      AccelClass *ac = ACCEL_CLASS(oc);
>>>>      ac->name = "KVM";
>>>>      ac->init_machine = kvm_init;
>>>> +    ac->has_memory = kvm_accel_has_memory;
>>>>      ac->allowed = &kvm_allowed;
>>>>  }
>>>>  
>>>> diff --git a/memory.c b/memory.c
>>>> index d14c6de..61e758a 100644
>>>> --- a/memory.c
>>>> +++ b/memory.c
>>>> @@ -29,7 +29,9 @@
>>>>  #include "exec/ram_addr.h"
>>>>  #include "sysemu/kvm.h"
>>>>  #include "sysemu/sysemu.h"
>>>> +#include "sysemu/accel.h"
>>>>  #include "hw/qdev-properties.h"
>>>> +#include "hw/boards.h"
>>>>  #include "migration/vmstate.h"
>>>>  
>>>>  //#define DEBUG_UNASSIGNED
>>>> @@ -2924,6 +2926,8 @@ struct FlatViewInfo {
>>>>      int counter;
>>>>      bool dispatch_tree;
>>>>      bool owner;
>>>> +    AccelClass *ac;
>>>> +    const char *ac_name;
>>>>  };
>>>>  
>>>>  static void mtree_print_flatview(gpointer key, gpointer value,
>>>> @@ -2939,6 +2943,7 @@ static void mtree_print_flatview(gpointer key, gpointer value,
>>>>      int n = view->nr;
>>>>      int i;
>>>>      AddressSpace *as;
>>>> +    bool system_as = false;
>>>>  
>>>>      p(f, "FlatView #%d\n", fvi->counter);
>>>>      ++fvi->counter;
>>>> @@ -2950,6 +2955,9 @@ static void mtree_print_flatview(gpointer key, gpointer value,
>>>>              p(f, ", alias %s", memory_region_name(as->root->alias));
>>>>          }
>>>>          p(f, "\n");
>>>> +        if (as == &address_space_memory) {
>>>> +            system_as = true;
>>>> +        }
>>>>      }
>>>>  
>>>>      p(f, " Root memory region: %s\n",
>>>> @@ -2985,6 +2993,13 @@ static void mtree_print_flatview(gpointer key, gpointer value,
>>>>          if (fvi->owner) {
>>>>              mtree_print_mr_owner(p, f, mr);
>>>>          }
>>>> +
>>>> +        if (system_as && fvi->ac &&
>>>> +            fvi->ac->has_memory(current_machine,
>>>> +                                int128_get64(range->addr.start),
>>>> +                                MR_SIZE(range->addr.size) + 1)) {
>>>> +            p(f, " %s", fvi->ac_name);
>>>
>>> Why not simply display fvi->ac->name?
>>> You could avoid to add the ac_name field.
>>
>>
>> Well, I thought I better print whatever the user passed via the command
>> line (which is current_machine->accel and equals to "kvm" in my case)
>> rather than robotic, dry and excessive "kvm-accel".
> 
> I have no hit for 'kvm-accel':
> 
> $ git grep kvm-accel
> $
> 
> Names looks human friendly:


Ah, I confused with object_class_get_name(). Anyway, I'd still show the
user provided accelerator name than some internal name.


> 
> $ git grep 'ac->name ='
> accel/kvm/kvm-all.c:2595:    ac->name = "KVM";
> accel/tcg/tcg-all.c:74:    ac->name = "tcg";
> hw/xen/xen-common.c:184:    ac->name = "Xen";
> target/i386/hax-all.c:1088:    ac->name = "HAX";
> target/i386/hvf/hvf.c:959:    ac->name = "HVF";
> target/i386/whpx-all.c:1477:    ac->name = "WHPX";
> qtest.c:755:    ac->name = "QTest";
> 
>>>
>>>> +        }
>>>>          p(f, "\n");
>>>>          range++;
>>>>      }
>>>> @@ -3028,6 +3043,13 @@ void mtree_info(fprintf_function mon_printf, void *f, bool flatview,
>>>>          };
>>>>          GArray *fv_address_spaces;
>>>>          GHashTable *views = g_hash_table_new(g_direct_hash, g_direct_equal);
>>>> +        AccelClass *ac = ACCEL_GET_CLASS(current_machine->accelerator);
>>>> +
>>>> +        if (ac->has_memory) {
>>>> +            fvi.ac = ac;
>>>> +            fvi.ac_name = current_machine->accel ? current_machine->accel :
>>>> +                object_class_get_name(OBJECT_CLASS(ac));
>>>> +        }
>>>>  
>>>>          /* Gather all FVs in one table */
>>>>          QTAILQ_FOREACH(as, &address_spaces, address_spaces_link) {
>>>>

-- 
Alexey

