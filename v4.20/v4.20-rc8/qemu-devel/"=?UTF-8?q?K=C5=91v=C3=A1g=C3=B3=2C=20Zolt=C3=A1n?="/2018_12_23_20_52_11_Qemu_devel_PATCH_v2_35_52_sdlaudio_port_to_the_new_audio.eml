Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 16:01:53 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 915AA58049E
	for <like.xu@linux.intel.com>; Sun, 23 Dec 2018 13:21:54 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga002-1.fm.intel.com with ESMTP; 23 Dec 2018 13:21:54 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AN4NxnROxinamreQnowUl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0I/n7rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0yRD+s7bpkSAXwhS?=
 =?us-ascii?q?kHKTA3/mLZhMtyg6JVrx2uuxNxzZPMYIyXNvRzcb7RcN0GSWVfRcZcTDBBD4Cm?=
 =?us-ascii?q?YocTFecNIeRVoo/grFUOtxu+AgysCfvhxjFNgXn2w6890+siCQ3ewQcvHNUOsH?=
 =?us-ascii?q?DIrNL3MqceX/2+wa7VwjXCdfNWxTf85JLJch89v/6AR7JwcdfKxEkgEgPKlFSQ?=
 =?us-ascii?q?qYj/MzyJ0eQNtnGW4ux9Xuysk24qsx99riSsy8s2l4XFm4EYxkra+Sh3wIs5P8?=
 =?us-ascii?q?C0RUxjbdK6CpRcqzyWOo54T84jX25lvTs2xqAItJO+YiQHx44oyhDaZvGCc4WF?=
 =?us-ascii?q?5A/oWvyLLjdinn1lfaqyhxas/kikze3xTs200FdRripZidnArH8N1xrO6sSdTf?=
 =?us-ascii?q?t95Eih1S6O1wDV9O5EPVg5mbTHJ5Mi2LI8i4cfvEfZEiPolkj7jLWaelgm9+Sw?=
 =?us-ascii?q?7uToeLTmppuSN49ujQH+N7wjmtWhDuQ9LwgCRnWU9vqi1LL9+U31Wa5Fjvorkq?=
 =?us-ascii?q?nfrJ/VO98bqqm9Aw9U0YYs9QyzDji70NkAmXkHLVRFeA+IjoTzOlHOJuz4Aum7?=
 =?us-ascii?q?g1i2jDhrwPXGM6bnApXKKHjDn7Hhfatn505b0gozwshT54hIBbEZPPLzRkjxuc?=
 =?us-ascii?q?TcDh84MAy73fzrCdpg1o4FXWKPA6mZML7dsFOS5+IvJfWMa5ERuDrnN/cl4Pvu?=
 =?us-ascii?q?3jcEn0QAd/ypwYcPcyL/WfBnOFmCJ3zrhNgHDCENpAV5SeXrjFiLV3lUf2qzWK?=
 =?us-ascii?q?QnoSg2DZ/jAYrdS4T+vbqawS3uG5RXYnxBWEmBFGqte4iaVvNJci+LP8J6jhQC?=
 =?us-ascii?q?Ur6uTZJn0guh4xTnwbhqJfaB5ysDqJj438J07eCAqRZn7DFxEoGR3n+AS0lymW?=
 =?us-ascii?q?UHQSJw27pw8mJnzVLWm4vFnXVXjpgb1fRNTo48f9aIw+1gF8G0WwnMONeUYFmj?=
 =?us-ascii?q?S9SiRzo2S4RikJc1f09hFoD63Vj41C2wDupNmg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0D8BAAh/B9chxHrdtBjH4F4gTGCYoM/P?=
 =?us-ascii?q?4h4ixopgT+JT4FJjHCBcxMBARgUhzAiNAkNAQMBAQEBAQECARMBAQEKCwkIGw4?=
 =?us-ascii?q?jDII6BQIDGA6CYQMDAQIJFwQLAQ0BBQoMHQECAQIBAgYBAQUDDQ8CIgQCAgMBH?=
 =?us-ascii?q?QIRAQUBHBkFgx2BaQEDFQEEiiOQCDyLGXwWBQEXgncFgkSBaQoZJw1eMoEFAgY?=
 =?us-ascii?q?SeYZzgyWBHHqBHIERM4U2hTKCVwKJTSiFboVbi1ozBwICgxqLGoMzGIl7h2uPb?=
 =?us-ascii?q?IoWAgQCBAUCBQ8hgSWCDnCBAYI7gicXg0qCQogSQDEBgQaLL4F3AQE?=
X-IPAS-Result: =?us-ascii?q?A0D8BAAh/B9chxHrdtBjH4F4gTGCYoM/P4h4ixopgT+JT4F?=
 =?us-ascii?q?JjHCBcxMBARgUhzAiNAkNAQMBAQEBAQECARMBAQEKCwkIGw4jDII6BQIDGA6CY?=
 =?us-ascii?q?QMDAQIJFwQLAQ0BBQoMHQECAQIBAgYBAQUDDQ8CIgQCAgMBHQIRAQUBHBkFgx2?=
 =?us-ascii?q?BaQEDFQEEiiOQCDyLGXwWBQEXgncFgkSBaQoZJw1eMoEFAgYSeYZzgyWBHHqBH?=
 =?us-ascii?q?IERM4U2hTKCVwKJTSiFboVbi1ozBwICgxqLGoMzGIl7h2uPbIoWAgQCBAUCBQ8?=
 =?us-ascii?q?hgSWCDnCBAYI7gicXg0qCQogSQDEBgQaLL4F3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,389,1539673200"; 
   d="scan'208";a="45172961"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 23 Dec 2018 13:21:53 -0800
Received: from localhost ([127.0.0.1]:59909 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gbBC4-000251-FQ
	for like.xu@linux.intel.com; Sun, 23 Dec 2018 16:21:52 -0500
Received: from eggs.gnu.org ([208.118.235.92]:52523)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <dirty.ice.hu@gmail.com>) id 1gbAkA-0008B0-8K
	for qemu-devel@nongnu.org; Sun, 23 Dec 2018 15:53:04 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <dirty.ice.hu@gmail.com>) id 1gbAk9-0003Ei-3M
	for qemu-devel@nongnu.org; Sun, 23 Dec 2018 15:53:02 -0500
Received: from mail-wm1-x342.google.com ([2a00:1450:4864:20::342]:54758)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <dirty.ice.hu@gmail.com>)
	id 1gbAk8-000376-Sz
	for qemu-devel@nongnu.org; Sun, 23 Dec 2018 15:53:01 -0500
Received: by mail-wm1-x342.google.com with SMTP id a62so9861848wmh.4
	for <qemu-devel@nongnu.org>; Sun, 23 Dec 2018 12:52:59 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
	h=from:to:cc:subject:date:message-id:in-reply-to:references
	:mime-version:content-transfer-encoding;
	bh=ft3EHNJylWfz7qh/YSL81ihyTJc8DQwGj3ZZ2/uBCGQ=;
	b=eU1uiGAvj0igtY0s9qqPRHnigD87DafQ5y3i19ioZa4YNgNrzIJKecVgOo4eMs9Nwt
	w6/d1Mm9dXCffmA+xtBo54wAB8pTVZowrjAgoliy8NXL9ircFu4wphmLj46wb9aCsVXN
	/wQvab490VKUzGQ0YFRlBnHteMTRodzZq3OBQyzQ644aptfBpEu10x4i2sX0Jc0zCJ5H
	eQ/n/a4o7tlYTjRPJOG56dhT0NV/799zk6L1vKzLVxYXxGZ36QrKfa+so5tWDo+dqtLU
	ViM0lCEtq4w4ZOdKB07/XEdbFU2Mn6Ifd96fNDnCpOjNqGZt+4XqD2FiCe7GTt+lMzgx
	t8dw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references:mime-version:content-transfer-encoding;
	bh=ft3EHNJylWfz7qh/YSL81ihyTJc8DQwGj3ZZ2/uBCGQ=;
	b=GQhJeI5ae2eChNGRGqzohAO3gg07C8GyjAQAM4L5+3yqKtBGgAdp2ZSEzW0t9SmM0E
	D/9S7prvYYg/Cl3p6uH3KXEXTTLiepTQh9p43iKqhYSy6ZIJc1GgJkYmA43W2REyOVrA
	F1ftfHB0LYFxNbz0G7CGvoAlxXxjLHQ74f2Oc+sPkxmoj/6pcaXcPvbHVafrXck2gtPH
	j4Orm3NAVuW7LS4SbSyDrm0Q2G6ANBuAyoWaxVxDfKwnf/TmXdMh6LQjQUGZTEnDs8qr
	V/C3WXuUJeRVbUGC3sySxitI4wbIZPSq/7B1V0+21pdhgsLFwDG0GxV40ITCwXLIcVUs
	T0Tw==
X-Gm-Message-State: AA+aEWYy9v3GIASrFeGlw8F912GF7XNIZFNaVi+9ehywylWO1CzpATJk
	2Fk+HTDvuJmtIPNCYkGOz1iOKiy1ekc=
X-Google-Smtp-Source: ALg8bN7fcNZj+tRyzPXpFBpwWSmsXrb55YzgA+GzsMkHeVhsdTrRZSYIFLpijF+yLkVADwr6eTi30g==
X-Received: by 2002:a1c:b456:: with SMTP id d83mr10563643wmf.115.1545598378631;
	Sun, 23 Dec 2018 12:52:58 -0800 (PST)
Received: from nullptr.home.dirty-ice.org
	(2a01-036c-0113-24a3-0000-0000-0000-0005.pool6.digikabel.hu.
	[2a01:36c:113:24a3::5]) by smtp.gmail.com with ESMTPSA id
	g198sm25456920wmd.23.2018.12.23.12.52.58
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Sun, 23 Dec 2018 12:52:58 -0800 (PST)
From: "=?UTF-8?q?K=C5=91v=C3=A1g=C3=B3=2C=20Zolt=C3=A1n?="
	<dirty.ice.hu@gmail.com>
X-Google-Original-From: =?UTF-8?q?K=C5=91v=C3=A1g=C3=B3=2C=20Zolt=C3=A1n?=
	<DirtY.iCE.hu@gmail.com>
To: qemu-devel@nongnu.org
Date: Sun, 23 Dec 2018 21:52:11 +0100
Message-Id: <8b28b74150934d42fef0b2e4b9d19b60700a686e.1545598229.git.DirtY.iCE.hu@gmail.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <cover.1545598229.git.DirtY.iCE.hu@gmail.com>
References: <cover.1545598229.git.DirtY.iCE.hu@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2a00:1450:4864:20::342
Subject: [Qemu-devel] [PATCH v2 35/52] sdlaudio: port to the new audio
 backend api
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Gerd Hoffmann <kraxel@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

SDL2 is still a big mess, but it's probably not worse than the current
version.

Signed-off-by: Kővágó, Zoltán <DirtY.iCE.hu@gmail.com>
---
 audio/sdlaudio.c | 136 +++++++++++++++++------------------------------
 1 file changed, 50 insertions(+), 86 deletions(-)

diff --git a/audio/sdlaudio.c b/audio/sdlaudio.c
index 92da4804c6..685cbc83b8 100644
--- a/audio/sdlaudio.c
+++ b/audio/sdlaudio.c
@@ -42,11 +42,6 @@
 
 typedef struct SDLVoiceOut {
     HWVoiceOut hw;
-    int live;
-#if USE_SEMAPHORE
-    int rpos;
-#endif
-    int decr;
 } SDLVoiceOut;
 
 static struct SDLAudioState {
@@ -252,17 +247,13 @@ static void sdl_callback (void *opaque, Uint8 *buf, int len)
     SDLVoiceOut *sdl = opaque;
     SDLAudioState *s = &glob_sdl;
     HWVoiceOut *hw = &sdl->hw;
-    int samples = len >> hw->info.shift;
 
     if (s->exit) {
         return;
     }
 
-    while (samples) {
-        int to_mix, decr;
-
-        /* dolog ("in callback samples=%d\n", samples); */
 #if USE_SEMAPHORE
+    while (len) {
         sdl_wait (s, "sdl_callback");
         if (s->exit) {
             return;
@@ -271,95 +262,66 @@ static void sdl_callback (void *opaque, Uint8 *buf, int len)
         if (sdl_lock (s, "sdl_callback")) {
             return;
         }
-
-        if (audio_bug(__func__, sdl->live < 0 || sdl->live > hw->samples)) {
-            dolog("sdl->live=%d hw->samples=%zu\n", sdl->live, hw->samples);
-            return;
-        }
-
-        if (!sdl->live) {
-            goto again;
-        }
-#else
-        if (s->exit || !sdl->live) {
-            break;
-        }
 #endif
 
-        /* dolog ("in callback live=%d\n", live); */
-        to_mix = MIN (samples, sdl->live);
-        decr = to_mix;
-        while (to_mix) {
-            int chunk = MIN (to_mix, hw->samples - hw->rpos);
-            struct st_sample *src = hw->mix_buf + hw->rpos;
+        while (hw->pending_emul && len) {
+            size_t write_len;
+            ssize_t start = ((ssize_t) hw->pos_emul) - hw->pending_emul;
+            if (start < 0) {
+                start += hw->size_emul;
+            }
+            assert(start >= 0 && start < hw->size_emul);
 
-            /* dolog ("in callback to_mix %d, chunk %d\n", to_mix, chunk); */
-            hw->clip (buf, src, chunk);
-#if USE_SEMAPHORE
-            sdl->rpos = (sdl->rpos + chunk) % hw->samples;
-#else
-            hw->rpos = (hw->rpos + chunk) % hw->samples;
-#endif
-            to_mix -= chunk;
-            buf += chunk << hw->info.shift;
+            write_len = MIN(MIN(hw->pending_emul, len),
+                            hw->size_emul - start);
+
+            memcpy(buf, hw->buf_emul + start, write_len);
+            hw->pending_emul -= write_len;
+            len -= write_len;
+            buf += write_len;
         }
-        samples -= decr;
-        sdl->live -= decr;
-        sdl->decr += decr;
 
 #if USE_SEMAPHORE
-    again:
         if (sdl_unlock (s, "sdl_callback")) {
             return;
         }
-#endif
     }
-    /* dolog ("done len=%d\n", len); */
-
-#if (SDL_MAJOR_VERSION >= 2)
-    /* SDL2 does not clear the remaining buffer for us, so do it on our own */
-    if (samples) {
-        memset(buf, 0, samples << hw->info.shift);
-    }
-#endif
-}
-
-static int sdl_run_out (HWVoiceOut *hw, int live)
-{
-    int decr;
-    SDLVoiceOut *sdl = (SDLVoiceOut *) hw;
-    SDLAudioState *s = &glob_sdl;
-
-    if (sdl_lock (s, "sdl_run_out")) {
-        return 0;
-    }
-
-    if (sdl->decr > live) {
-        ldebug ("sdl->decr %d live %d sdl->live %d\n",
-                sdl->decr,
-                live,
-                sdl->live);
-    }
-
-    decr = MIN (sdl->decr, live);
-    sdl->decr -= decr;
-
-#if USE_SEMAPHORE
-    sdl->live = live - decr;
-    hw->rpos = sdl->rpos;
 #else
-    sdl->live = live;
+    /* clear remaining buffer that we couldn't fill with data */
+    if (len) {
+        memset(buf, 0, len);
+    }
 #endif
-
-    if (sdl->live > 0) {
-        sdl_unlock_and_post (s, "sdl_run_out");
-    }
-    else {
-        sdl_unlock (s, "sdl_run_out");
-    }
-    return decr;
 }
 
+#define SDL_WRAPPER_FUNC(name, ret_type, args_decl, args, fail, unlock) \
+    static ret_type glue(sdl_, name)args_decl                           \
+    {                                                                   \
+        SDLAudioState *s = &glob_sdl;                                   \
+        ret_type ret;                                                   \
+                                                                        \
+        if (sdl_lock(s, "sdl_" #name)) {                                \
+            fail;                                                       \
+            return 0; /* implicitly casts to NULL */                    \
+        }                                                               \
+                                                                        \
+        ret = glue(audio_generic_, name)args;                           \
+                                                                        \
+        unlock(s, "sdl_" #name);                                        \
+        return ret;                                                     \
+    }
+
+SDL_WRAPPER_FUNC(get_buffer_out, void *, (HWVoiceOut *hw, size_t *size),
+                 (hw, size), *size = 0, sdl_unlock)
+SDL_WRAPPER_FUNC(put_buffer_out_nowrite, size_t,
+                 (HWVoiceOut *hw, void *buf, size_t size), (hw, buf, size),
+                 /*nothing*/, sdl_unlock_and_post)
+SDL_WRAPPER_FUNC(write, size_t,
+                 (HWVoiceOut *hw, void *buf, size_t size), (hw, buf, size),
+                 /* nothing */, sdl_unlock_and_post)
+
+#undef SDL_WRAPPER_FUNC
+
 static void sdl_fini_out (HWVoiceOut *hw)
 {
     (void) hw;
@@ -476,7 +438,9 @@ static void sdl_audio_fini (void *opaque)
 static struct audio_pcm_ops sdl_pcm_ops = {
     .init_out = sdl_init_out,
     .fini_out = sdl_fini_out,
-    .run_out  = sdl_run_out,
+    .write    = sdl_write,
+    .get_buffer_out = sdl_get_buffer_out,
+    .put_buffer_out = sdl_put_buffer_out_nowrite,
     .ctl_out  = sdl_ctl_out,
 };
 
-- 
2.20.1


