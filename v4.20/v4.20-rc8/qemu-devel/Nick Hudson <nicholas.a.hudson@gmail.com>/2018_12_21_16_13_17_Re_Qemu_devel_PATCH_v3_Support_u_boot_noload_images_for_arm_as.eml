Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:52:43 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B57B3580522
	for <like.xu@linux.intel.com>; Fri, 21 Dec 2018 08:21:58 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 21 Dec 2018 08:21:58 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A1rAThBbxENkzmf/nWkOMPdj/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpsy+YR7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTzJPAo28?=
 =?us-ascii?q?YYUMAeQOM+lXoIvhqFUBsBW+HQuhCuHgxzNViHL6wbM10/86HAHa3wEtBc4CvG?=
 =?us-ascii?q?jaodj3MqoZTOC7zLPPzTXGd/5YwTb955TLchs8o/+MQK9/cdHWyUkpCgjIiVOQ?=
 =?us-ascii?q?qY35MDOV0eQNt3KU7/F6We21kWInqxxxrSW0xscrjInEnY0VylXe+iV4xIY5P8?=
 =?us-ascii?q?G3SEl+YdO9FpZbqiKUN5NuT888X21luzw2xqAbtZO4ZiQG1poqyh7FZ/CacYWE?=
 =?us-ascii?q?+gzvW/yNLTtmgX9qZLCyiAu3/EWjy+DwSte73VNKoydLjtXAq3UA2wLO5cWGV/?=
 =?us-ascii?q?dw+1qt1DKA2g3X7+xJIF07mrTAJJMk3LI8i4Ecvl/FEyTrgkv5lrWWeV8h+uWw?=
 =?us-ascii?q?6+TofLHmppiEOo9wiwH+KbgumtelDeQ3NAgOQnKX+eOm1L3s5UH5QbNKgeMqkq?=
 =?us-ascii?q?TBrpzWOccWqrSkDwNI0Ysv8QizAjmm3dgCgHUKLkpJeBedgIjoP1HOLur4DfC6?=
 =?us-ascii?q?g1m0iTdk2fXGPqD4DprQMHfDjqnufbJk50FHzwoz0NZf6I5KBbEaJ/7zXk7xtN?=
 =?us-ascii?q?/GARMjPA203v7qCNF81oMYRGKODbWVMKLUsV+U+O0vJ/OAa5MSuDb4MPUl4fnu?=
 =?us-ascii?q?jXk2mV8bYKmlx5wXaGq3Hvh+OUWWfWLsgssdEWcNpgc+SO3qiF6cXjJJaHeyQr?=
 =?us-ascii?q?kx5jU6CIKgEIfCSZqhgL2H3CenAJJWYnpKBUyLEXftJM25XewRYneSPtN5iW5D?=
 =?us-ascii?q?ErygUJM6kxepsgD81vxgNOWT/yQZsZfq0p9y//HSkhcpsiV5CtnY32yTQmUno2?=
 =?us-ascii?q?UTWjVj2al+pVB6mE6O1LU9j/FGGNgW/f5QTwohKbbayOp1Dc20XRjOKcyUQlSr?=
 =?us-ascii?q?ScnzHDcqU9gqyMUPaUsuJ9L3tz3m4mKGDqEYk7uTCYYvuvbF0n3sYspw1XvC/K?=
 =?us-ascii?q?8miVYgX41IL2Lw1YBl8A2GIY/CkA25iqqxcqJUiCjM/2eEyWOV+kgeUBN8SqLD?=
 =?us-ascii?q?dX8ab0rS69/+4xWRHPeVFb07P14Zmoa5IaxQZ4is1A0eSQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A/AABDEh1chxHrdtBjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTCCYoN9iBlfi0aBNy2KFo1JgXYQAQEYFIcwIjQJDQEDAQEBAQE?=
 =?us-ascii?q?BAgETAQEBCgsJCBsOIwyCOgUCAx8BBoJhAQIDAQIgBAsBBQgBBQoMHQECAQIBA?=
 =?us-ascii?q?gYBAQUDAgsNAgIfAwQCAgMBHxEBBQEcBg0GAgEBAYMdgWkBAxUBBIo0kAg8ixl?=
 =?us-ascii?q?8FgUBF4J3BYJEgXwKGScNXoE3AgYSeYoYgRx6gRyBESeCPS6ICYI1IgKVO4wKB?=
 =?us-ascii?q?wKRYwYYiXqHZZl1AgQCBAUCBQ8hgSWCDjMaI4EBgjuCGwwXEoM4ilNygQchjBa?=
 =?us-ascii?q?BdwEB?=
X-IPAS-Result: =?us-ascii?q?A0A/AABDEh1chxHrdtBjHAEBAQQBAQcEAQGBUQcBAQsBgTC?=
 =?us-ascii?q?CYoN9iBlfi0aBNy2KFo1JgXYQAQEYFIcwIjQJDQEDAQEBAQEBAgETAQEBCgsJC?=
 =?us-ascii?q?BsOIwyCOgUCAx8BBoJhAQIDAQIgBAsBBQgBBQoMHQECAQIBAgYBAQUDAgsNAgI?=
 =?us-ascii?q?fAwQCAgMBHxEBBQEcBg0GAgEBAYMdgWkBAxUBBIo0kAg8ixl8FgUBF4J3BYJEg?=
 =?us-ascii?q?XwKGScNXoE3AgYSeYoYgRx6gRyBESeCPS6ICYI1IgKVO4wKBwKRYwYYiXqHZZl?=
 =?us-ascii?q?1AgQCBAUCBQ8hgSWCDjMaI4EBgjuCGwwXEoM4ilNygQchjBaBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,382,1539673200"; 
   d="scan'208";a="67887439"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mga01b.intel.com with ESMTP/TLS/AES256-SHA; 21 Dec 2018 08:21:57 -0800
Received: from localhost ([::1]:46529 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gaNYi-0000zy-Bg
	for like.xu@linux.intel.com; Fri, 21 Dec 2018 11:21:56 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:56378)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <nicholas.a.hudson@gmail.com>) id 1gaNQU-0002BZ-AC
	for qemu-devel@nongnu.org; Fri, 21 Dec 2018 11:13:28 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <nicholas.a.hudson@gmail.com>) id 1gaNQT-00029I-En
	for qemu-devel@nongnu.org; Fri, 21 Dec 2018 11:13:26 -0500
Received: from mail-wm1-x344.google.com ([2a00:1450:4864:20::344]:35220)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <nicholas.a.hudson@gmail.com>)
	id 1gaNQR-00025a-2o; Fri, 21 Dec 2018 11:13:23 -0500
Received: by mail-wm1-x344.google.com with SMTP id c126so6234462wmh.0;
	Fri, 21 Dec 2018 08:13:21 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
	h=subject:to:cc:references:from:message-id:date:user-agent
	:mime-version:in-reply-to:content-transfer-encoding:content-language;
	bh=FspBopJR7lqvSDCfUJcWRrkdA81H7Si4LNUY8h4wZUQ=;
	b=C52DUzGluJsUYzo73xSbJ+c2xhGD+7Ck7HDExhgZquOZR80a39Rr18KO8iYtzm+oyz
	NcYG4Q2cWnNSGo99iHp/DJ17olu6SL1oHizTqZexP191soe0JnnSoCU7KT1S8uNEPgOt
	FI56UNy+igQgZNZ6DZ1jKJIPEn5/T2Cp5zslu9GI+A5SDh3ICmJ4zUKQhifS8lojFqwS
	2BqUbwz4mtB6giD344xq08ItITjK4rZZJpZDx7n/8oy0Wf7ieqMOeXkITjcKQ2+Q4iLm
	SibRXJp/glSH9SHdFP3NkN6K8XyN/VXwkuEMeZ7XZ+WvP5O1C+/uvWiV4xuUoqh4wlGx
	NRow==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:subject:to:cc:references:from:message-id:date
	:user-agent:mime-version:in-reply-to:content-transfer-encoding
	:content-language;
	bh=FspBopJR7lqvSDCfUJcWRrkdA81H7Si4LNUY8h4wZUQ=;
	b=DlPm/3+Rw1NMyA65mnIVG/UyRxTgEhd20MjipSGYFa9dNTZjun1w7om1zwLL1LwFxs
	MsIrghI/Ao2YdWqvk1+Z0gnc+r9uMjLaMKoGgMJnn9DZb83umiwjKHBW6pt2a77yzC88
	UzY+hG+i2VDAK5Rb47mQ7TNhkr7mx2k4x5HUsA0vo1bO1N3zwbl5Oz2skt7NHyjIz03i
	uvjPPai/IVKrlulOyCb54dk6nL8QsV9gUtfNKyGG4PKkwD43o4HCExCeaxqNwTk6Eq53
	M02q8VtrzXoXIH0YLZm1O379OnYuE7a+qewpW3Kpp54dKofYcQejl8CuG8/mHj0vqtao
	U0yg==
X-Gm-Message-State: AA+aEWZSKljot7Kg1VnZtTpVJTaRrHUE1bbnIvHFy4lccihDRy1tkSq3
	d/mZCfeCMYFWU0YdVOlFXQR+UZqe9P4=
X-Google-Smtp-Source: AFSGD/WjRevL9CdboBXjIYD5izSbIPgcA/C/h5cQv8Yp73dnSq3tPbqdGARVNAopFH5dSyzl+XxkTw==
X-Received: by 2002:a1c:b53:: with SMTP id 80mr3222892wml.121.1545408800287;
	Fri, 21 Dec 2018 08:13:20 -0800 (PST)
Received: from ?IPv6:2a02:c7d:860e:5301:2d61:1949:6deb:21bb?
	([2a02:c7d:860e:5301:2d61:1949:6deb:21bb])
	by smtp.gmail.com with ESMTPSA id
	g188sm9264067wmf.32.2018.12.21.08.13.18
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Fri, 21 Dec 2018 08:13:19 -0800 (PST)
To: QEMU Developers <qemu-devel@nongnu.org>
References: <975b9131-9937-cfea-3b5d-ef36d0c2b761@gmail.com>
From: Nick Hudson <nicholas.a.hudson@gmail.com>
Message-ID: <963b728a-2ed3-bcc9-0ed3-df2d47f70621@gmail.com>
Date: Fri, 21 Dec 2018 16:13:17 +0000
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <975b9131-9937-cfea-3b5d-ef36d0c2b761@gmail.com>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Transfer-Encoding: 8bit
Content-Language: en-US
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2a00:1450:4864:20::344
Subject: Re: [Qemu-devel] [PATCH v3] Support u-boot noload images for arm as
 used by, NetBSD/evbarm GENERIC kernel.
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Peter Maydell <peter.maydell@linaro.org>, qemu-arm <qemu-arm@nongnu.org>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

ping

On 11/12/2018 12:27, Nick Hudson wrote:
>
> noload kernels are loaded with the u-boot image header and as a result
> the header size needs adding to the entry point.  Fake up a hdr so the
> kernel image is loaded at the right address and the entry point is
> adjusted appropriately.
>
> The bootloader fits in the space that the uboot header would have 
> occupied.
>
> Clarify the load_uimage API to state the passing of a load address 
> when an
> image doesn't specify one, or when loading a ramdisk is expected.
>
> Adjust callers of load_uimage, etc.
>
> Signed-off-by: Nick Hudson<skrll@netbsd.org>
>
> ---
>  hw/arm/boot.c          |  8 +++++---
>  hw/core/loader.c       | 19 ++++++++++++++++---
>  hw/core/uboot_image.h  |  1 +
>  hw/microblaze/boot.c   |  2 +-
>  hw/nios2/boot.c        |  2 +-
>  hw/ppc/e500.c          |  1 +
>  hw/ppc/ppc440_bamboo.c |  2 +-
>  hw/ppc/sam460ex.c      |  2 +-
>  include/hw/loader.h    |  7 ++++++-
>  9 files changed, 33 insertions(+), 11 deletions(-)
>
> diff --git a/hw/arm/boot.c b/hw/arm/boot.c
> index 586baa9b64..450267566a 100644
> --- a/hw/arm/boot.c
> +++ b/hw/arm/boot.c
> @@ -30,8 +30,9 @@
>   * Documentation/arm/Booting and Documentation/arm64/booting.txt
>   * They have different preferred image load offsets from system RAM 
> base.
>   */
> -#define KERNEL_ARGS_ADDR 0x100
> -#define KERNEL_LOAD_ADDR 0x00010000
> +#define KERNEL_ARGS_ADDR   0x100
> +#define KERNEL_NOLOAD_ADDR 0x00000000
> +#define KERNEL_LOAD_ADDR   0x00010000
>  #define KERNEL64_LOAD_ADDR 0x00080000
>
>  #define ARM64_TEXT_OFFSET_OFFSET    8
> @@ -1078,7 +1079,8 @@ void arm_load_kernel(ARMCPU *cpu, struct 
> arm_boot_info *info)
>      }
>      entry = elf_entry;
>      if (kernel_size < 0) {
> -        kernel_size = load_uimage_as(info->kernel_filename, &entry, 
> NULL,
> +        uint64_t loadaddr = info->loader_start + KERNEL_NOLOAD_ADDR;
> +        kernel_size = load_uimage_as(info->kernel_filename, &entry, 
> &loadaddr,
>                                       &is_linux, NULL, NULL, as);
>      }
>      if (arm_feature(&cpu->env, ARM_FEATURE_AARCH64) && kernel_size < 
> 0) {
> diff --git a/hw/core/loader.c b/hw/core/loader.c
> index aa0b3fc867..7362197162 100644
> --- a/hw/core/loader.c
> +++ b/hw/core/loader.c
> @@ -638,13 +638,26 @@ static int load_uboot_image(const char 
> *filename, hwaddr *ep, hwaddr *loadaddr,
>          goto out;
>
>      if (hdr->ih_type != image_type) {
> -        fprintf(stderr, "Wrong image type %d, expected %d\n", 
> hdr->ih_type,
> -                image_type);
> -        goto out;
> +        if (image_type != IH_TYPE_KERNEL &&
> +            hdr->ih_type != IH_TYPE_KERNEL_NOLOAD) {
> +            fprintf(stderr, "Wrong image type %d, expected %d\n", 
> hdr->ih_type,
> +                    image_type);
> +            goto out;
> +        }
>      }
>
>      /* TODO: Implement other image types.  */
>      switch (hdr->ih_type) {
> +    case IH_TYPE_KERNEL_NOLOAD:
> +        if (!loadaddr || *loadaddr == LOAD_UIMAGE_LOADADDR_INVALID) {
> +            fprintf(stderr, "this image format (kernel_noload) cannot 
> be "
> +                    "loaded on this machine type");
> +            goto out;
> +        }
> +
> +        hdr->ih_load = *loadaddr + sizeof(*hdr);
> +        hdr->ih_ep += hdr->ih_load;
> +        /* fall through */
>      case IH_TYPE_KERNEL:
>          address = hdr->ih_load;
>          if (translate_fn) {
> diff --git a/hw/core/uboot_image.h b/hw/core/uboot_image.h
> index 34c11a70a6..608022de6e 100644
> --- a/hw/core/uboot_image.h
> +++ b/hw/core/uboot_image.h
> @@ -124,6 +124,7 @@
>  #define IH_TYPE_SCRIPT        6    /* Script file     */
>  #define IH_TYPE_FILESYSTEM    7    /* Filesystem Image (any type)    */
>  #define IH_TYPE_FLATDT        8    /* Binary Flat Device Tree Blob    */
> +#define IH_TYPE_KERNEL_NOLOAD  14    /* OS Kernel Image (noload)    */
>
>  /*
>   * Compression Types
> diff --git a/hw/microblaze/boot.c b/hw/microblaze/boot.c
> index 35bfeda7aa..489ab839b7 100644
> --- a/hw/microblaze/boot.c
> +++ b/hw/microblaze/boot.c
> @@ -156,7 +156,7 @@ void microblaze_load_kernel(MicroBlazeCPU *cpu, 
> hwaddr ddr_base,
>
>          /* If it wasn't an ELF image, try an u-boot image.  */
>          if (kernel_size < 0) {
> -            hwaddr uentry, loadaddr;
> +            hwaddr uentry, loadaddr = LOAD_UIMAGE_LOADADDR_INVALID;
>
>              kernel_size = load_uimage(kernel_filename, &uentry, 
> &loadaddr, 0,
>                                        NULL, NULL);
> diff --git a/hw/nios2/boot.c b/hw/nios2/boot.c
> index 4bb5b601d3..ed5cb28e94 100644
> --- a/hw/nios2/boot.c
> +++ b/hw/nios2/boot.c
> @@ -161,7 +161,7 @@ void nios2_load_kernel(Nios2CPU *cpu, hwaddr 
> ddr_base,
>
>          /* If it wasn't an ELF image, try an u-boot image. */
>          if (kernel_size < 0) {
> -            hwaddr uentry, loadaddr;
> +            hwaddr uentry, loadaddr = LOAD_UIMAGE_LOADADDR_INVALID;
>
>              kernel_size = load_uimage(kernel_filename, &uentry, 
> &loadaddr, 0,
>                                        NULL, NULL);
> diff --git a/hw/ppc/e500.c b/hw/ppc/e500.c
> index e6747fce28..e275178951 100644
> --- a/hw/ppc/e500.c
> +++ b/hw/ppc/e500.c
> @@ -997,6 +997,7 @@ void ppce500_init(MachineState *machine)
>           * Hrm. No ELF image? Try a uImage, maybe someone is giving 
> us an
>           * ePAPR compliant kernel
>           */
> +        loadaddr = LOAD_UIMAGE_LOADADDR_INVALID;
>          payload_size = load_uimage(filename, &bios_entry, &loadaddr, 
> NULL,
>                                     NULL, NULL);
>          if (payload_size < 0) {
> diff --git a/hw/ppc/ppc440_bamboo.c b/hw/ppc/ppc440_bamboo.c
> index f5720f979e..70428b1865 100644
> --- a/hw/ppc/ppc440_bamboo.c
> +++ b/hw/ppc/ppc440_bamboo.c
> @@ -180,7 +180,7 @@ static void bamboo_init(MachineState *machine)
>      CPUPPCState *env;
>      uint64_t elf_entry;
>      uint64_t elf_lowaddr;
> -    hwaddr loadaddr = 0;
> +    hwaddr loadaddr = LOAD_UIMAGE_LOADADDR_INVALID;
>      target_long initrd_size = 0;
>      DeviceState *dev;
>      int success;
> diff --git a/hw/ppc/sam460ex.c b/hw/ppc/sam460ex.c
> index 5aac58f36e..2d6d5c4402 100644
> --- a/hw/ppc/sam460ex.c
> +++ b/hw/ppc/sam460ex.c
> @@ -402,7 +402,7 @@ static void sam460ex_init(MachineState *machine)
>      CPUPPCState *env;
>      PPC4xxI2CState *i2c[2];
>      hwaddr entry = UBOOT_ENTRY;
> -    hwaddr loadaddr = 0;
> +    hwaddr loadaddr = LOAD_UIMAGE_LOADADDR_INVALID;
>      target_long initrd_size = 0;
>      DeviceState *dev;
>      SysBusDevice *sbdev;
> diff --git a/include/hw/loader.h b/include/hw/loader.h
> index 67a0af84ac..a7254bc5c4 100644
> --- a/include/hw/loader.h
> +++ b/include/hw/loader.h
> @@ -160,10 +160,15 @@ void load_elf_hdr(const char *filename, void 
> *hdr, bool *is64, Error **errp);
>  int load_aout(const char *filename, hwaddr addr, int max_sz,
>                int bswap_needed, hwaddr target_page_size);
>
> +#define LOAD_UIMAGE_LOADADDR_INVALID (-1)
> +
>  /** load_uimage_as:
>   * @filename: Path of uimage file
>   * @ep: Populated with program entry point. Ignored if NULL.
> - * @loadaddr: Populated with the load address. Ignored if NULL.
> + * @loadaddr: load address if none specified in the image or when 
> loading a ramdisk.
> + *            Populated with the the load address. Ignored if NULL or
> + *            LOAD_UIMAGE_LOADADDR_INVALID (images which do not 
> specify a load address
> + *            will not be loadable).
>   * @is_linux: Is set to true if the image loaded is Linux. Ignored if 
> NULL.
>   * @translate_fn: optional function to translate load addresses
>   * @translate_opaque: opaque data passed to @translate_fn

