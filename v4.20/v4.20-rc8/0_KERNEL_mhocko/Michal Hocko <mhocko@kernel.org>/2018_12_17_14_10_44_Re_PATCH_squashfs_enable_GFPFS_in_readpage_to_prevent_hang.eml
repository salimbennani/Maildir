Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 08:44:39 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id A38A75805AD;
	Mon, 17 Dec 2018 06:11:42 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by fmsmga001-1.fm.intel.com with ESMTP; 17 Dec 2018 06:11:42 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Ar8lmTB1L3a8lYvnLsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segSI/7xwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJPUMhRSSJPH4Cy?=
 =?us-ascii?q?b4UAAOUdIOlXrYfyp0AWrRa8HgSsGP/jxyVUinPqx6A2zeIsGhzG0gw6GNIOtW?=
 =?us-ascii?q?zZotL0NKgOUeC61q3IxijBYfNRxTj964/IeQ0mrPGJXbJwdtbeyUooFw7ejVWf?=
 =?us-ascii?q?t5blPzWL2eQJqWSb6PBgVe22hmMhtgp/rD+vxsI2hYnIgIIY0lPE+jtjwIYzO9?=
 =?us-ascii?q?K4TFR3Ydm+EJtfsSyRKoh4Qts6Tm12pCo3zqcKtYO1cSQU0pgr2h3SZ+Cdf4WJ?=
 =?us-ascii?q?4B/vTPudLDN4iX5/Zb6yiRa//VK+xuHiSsW4ykhGoypKn9TKq3sDzQbc6tKdRf?=
 =?us-ascii?q?t45kqh2SiA1wTU6uxcP0A0mrTUK4Q7zr4ziJUTq0LDETHymEnsi6+WbEok9vCp?=
 =?us-ascii?q?6+ThfLrmuoeRO5Fohgz6KKgih8KyDfoiPgQTXGWX5f6w2bzh8EHhRbVFlPw2kq?=
 =?us-ascii?q?3XsJDAIsQbo7a0AwtU0oYl9ha+AC6q0NcGknkdKlJKZhaHg5HuO1DAJvD3E+2/?=
 =?us-ascii?q?jk+ykDdk2f/GJKftApbTIXjZlrfuY7J951RbyAopwtBT/4hUBa0ZIPLvRk/xs8?=
 =?us-ascii?q?TVDhs4Mwy33enrEtp81p4FVGKLA6+ZNr7SsFCS6uIuJemMeJEauDLnJ/c54P7u?=
 =?us-ascii?q?iGczmUUBcqmxwZsXdHe4E+xmI0qDYHrsns0OEWAQsgo+UezlkluCUTFIana2Xq?=
 =?us-ascii?q?I84Cw7CY28AYfCQICtnKKO3COhEpJKYWBGD0iGEW30eIWcR/cMdCWSL9djkjwD?=
 =?us-ascii?q?S7etUYwh1RaotA/8zLpqNe7U+iwetZL+29l5/ezTlRcu9TNqC8SRyX2CT2Zxnm?=
 =?us-ascii?q?kQXT85wLh/oVBhyleEyaV3medYFdxU5/NKSAs6L4TTz+5hBtD2WwLBeMqJSVm8?=
 =?us-ascii?q?TtWnBzExUsw+w9sUb0lhHNWiiwjJ3zC2DL8Ni7yLGJs0/7rf33frIcZx0XLG1K?=
 =?us-ascii?q?g7gFkgTctCLmmmhq959wjOCI/FiUSZl6C2dasC2C7B7nuMzW2LvEtASg5/Tb3F?=
 =?us-ascii?q?XWwDZkvRtdn2+1nNT6GwBrg9MgtO08iCKrBUZd3villGQPTjONHaY2+qn2ewBB?=
 =?us-ascii?q?CIxq6DbYbwemUd2jndB1YAkwwJ4XmGMg0+DD+7o23CFDxuCU7vY0T0/OZjsny7?=
 =?us-ascii?q?UFE7wxuKb0J70bq14QAahfqHRvMX37IEvjohqjpuEFa82dLWF8SPpw57cKpAZt?=
 =?us-ascii?q?M95U9N1XjFuAxlIpygM6dii0YCcwR2ukPu0Al3CoVAkMQwsHMm1g1yKbic0FNA?=
 =?us-ascii?q?cTOY0ov9OrnWKmn04RCuZLTa2lDY0NaK5KgP7O40pEnkvAGsDkAi6Wlo08FJ03?=
 =?us-ascii?q?uA4ZXHFBAdUZbvXUc46Rd7p6vWbTIg54zJz3JsN6q0sjjc298yAOslyxCgf8pQ?=
 =?us-ascii?q?Ma+eFQ/yFdEaCNaqKOAwh1epaRcENvhI9KEoJ8Oma+eG2KmzMedggTKql3hI7J?=
 =?us-ascii?q?p800KM7SV8TOHI0o0Bw/GZ2AuHSjj9gE2gssDxhYBLezUSEnCjxijjAY5bfrdy?=
 =?us-ascii?q?cpoTCWeyP823wc1zh4TsW3FE7lGjHU4J2MizdRqUcVP9xwxQ2V0LrnO9nSu30i?=
 =?us-ascii?q?J7kysurqqZxyHOx+XidBwaOm9EXmVijFHsIZSqgNAeRkSncw8plB6970bg26db?=
 =?us-ascii?q?vLh/L3XUQUpQfyn2LntuU6uqurqZfs5P7oglsSFWUOS6fFCbRaTxoxoc0yP/AW?=
 =?us-ascii?q?RewCo3eC2tupX8hxZ6kn6SLG5vrHrFfsF93RXf68bGRf5S3ToGQzN0iSLNCVi/?=
 =?us-ascii?q?PNmp/NOUmInFsu2lU2KhV5tTcTTkzI+atSu743FqDgO7n/yphtLnFg062zfh19?=
 =?us-ascii?q?Z2TSXIsAr8Yo7z2qW6K+1neVNkBF3968p8AYx+loowhJcN2XkVnJmV/HwHkXvt?=
 =?us-ascii?q?PtVfw67xcH0NRTsTyd7P/AflwFFjLm6Ox4/hVXWS2Mpha8O6YmMLwC096c9KBb?=
 =?us-ascii?q?yQ7LxFmyt1v1W5oRjQYfh7gjcS1/8u5GQGjOEOvQon1j+dDawKHUlEISzskAyF?=
 =?us-ascii?q?79W/rKVUfmmja7ax21RlndC9Er6CuBpTV2jjepctBiJw6sR/MFTR0Hz88I3ked?=
 =?us-ascii?q?/Qbc4NuR2QiRvPk+9VKJcpnPoQmSVnIX79vWEiy+MjkRxu2pS6sJKGKmp3+qK5?=
 =?us-ascii?q?HwVYNib0Z84I/jHtjKBentuZ3oy1H5VhHCkLU4XsTf6yDD0SsvHnPR6UEDIgsn?=
 =?us-ascii?q?ebBabfHQiH5Uh9tX3PFJSrN2yNKHkd0NVvXx2dJE1ZgAAJUzQ2hJ85Fga2xMP/?=
 =?us-ascii?q?dEd1/Cwe5ln9qhFU0OJnKwH/UnvDpAevcjo0SoKQLB9I4QFZ/UvVLdaS7uFuHy?=
 =?us-ascii?q?Fb452hqhaCKneAagRMDGEJXFGEBl/5Mrmv49nA7/aXBu6kI/TSZrWOrPRUV+2U?=
 =?us-ascii?q?ypK3zotm4zGMO92PP3llEv07w1dDUmp/G8jDgDUPTCoXly3WYs6fpRe8/DB3r8?=
 =?us-ascii?q?+l/PTqXgLv+ZWAC79IPdpz/BC2hL+JN/SMiyZhNTZYypQMyGfIyLcB3V4SiCJu?=
 =?us-ascii?q?dzi3HbQDry7NS63QlbFNDx4GcCN+L89I76M63glQNs/XkNL11rhkjvErD1dJT0?=
 =?us-ascii?q?DumsasZcYSOWGyKEvHBFqXNLSBPTDE2dz3brimSbJOjORYrRmwuTeAHk/nPzSD?=
 =?us-ascii?q?kSTpVh+1PeFNiiGbIAJRuIWnfhlxDmjjScrsagenP99vkT023bo0i2vWNW4dND?=
 =?us-ascii?q?hwaV9CoqeM4iNYnPp/HXdM7n5kLemChiaY4PPUKpcQsft3HCt0k/hW72g9y7tQ?=
 =?us-ascii?q?9CtEXuB6mDPOrt5ypFGriumOxSBhUBpLqzZLgpqEvERiOarD8JlAVm3J/BYM7W?=
 =?us-ascii?q?WWFhQLqMFpCtzpu6BM1NfPkLj/JytF89LRroMgAJ3xId6bMHc+eSXoHDXTHENR?=
 =?us-ascii?q?Uj+vMXD3hkpTivie+3SZ6J8gpc6/toAJT+p+VVc1H/dSKkNuH9tKdJJ3WTgnlp?=
 =?us-ascii?q?aYgdQO6H74qwPeEpYJ9qvbX+6fVK28YA2SiqNJMl5Rmev1?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ACAADfrRdch0O0hNFcCBoBAQEBAQIBA?=
 =?us-ascii?q?QEBBwIBAQEBgVIEAQEBAQsBgVWBFIECJ5gLgg0Ul0SBcywLCAGHVSI1CA0BAwE?=
 =?us-ascii?q?BAQEBAQIBEwEBAQoLCQgpIwyCNiQBgmIBAgMBAiQTPwYJAQEKDgoJExIDDAVJE?=
 =?us-ascii?q?wWDHQGCAAQBCqkGM4QtAYVwjD4XgUA/gRGCFH6EXBGFcwKhGQmHDYpCCxiBXU2?=
 =?us-ascii?q?HVSuHKCyLA4MDjHoBggszGggoCIMnCQqCFBcSiEyFQD8yAQGBAwEBiyOCTAEB?=
X-IPAS-Result: =?us-ascii?q?A0ACAADfrRdch0O0hNFcCBoBAQEBAQIBAQEBBwIBAQEBgVI?=
 =?us-ascii?q?EAQEBAQsBgVWBFIECJ5gLgg0Ul0SBcywLCAGHVSI1CA0BAwEBAQEBAQIBEwEBA?=
 =?us-ascii?q?QoLCQgpIwyCNiQBgmIBAgMBAiQTPwYJAQEKDgoJExIDDAVJEwWDHQGCAAQBCqk?=
 =?us-ascii?q?GM4QtAYVwjD4XgUA/gRGCFH6EXBGFcwKhGQmHDYpCCxiBXU2HVSuHKCyLA4MDj?=
 =?us-ascii?q?HoBggszGggoCIMnCQqCFBcSiEyFQD8yAQGBAwEBiyOCTAEB?=
X-IronPort-AV: E=Sophos;i="5.56,365,1539673200"; 
   d="scan'208";a="57780761"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 17 Dec 2018 06:10:51 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1733204AbeLQOKs (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 17 Dec 2018 09:10:48 -0500
Received: from mx2.suse.de ([195.135.220.15]:48654 "EHLO mx1.suse.de"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1727193AbeLQOKs (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 17 Dec 2018 09:10:48 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
        by mx1.suse.de (Postfix) with ESMTP id B7912AD72;
        Mon, 17 Dec 2018 14:10:45 +0000 (UTC)
Date: Mon, 17 Dec 2018 15:10:44 +0100
From: Michal Hocko <mhocko@kernel.org>
To: Matthew Wilcox <willy@infradead.org>
Cc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>,
        Hou Tao <houtao1@huawei.com>, phillip@squashfs.org.uk,
        linux-fsdevel@vger.kernel.org, linux-kernel@vger.kernel.org,
        linux-mm@kvack.org
Subject: Re: [PATCH] squashfs: enable __GFP_FS in ->readpage to prevent hang
 in mem alloc
Message-ID: <20181217141044.GP30879@dhcp22.suse.cz>
References: <20181204020840.49576-1-houtao1@huawei.com>
 <20181215143824.GJ10600@bombadil.infradead.org>
 <69457a5a-79c9-4950-37ae-eff7fa4f949a@huawei.com>
 <20181217035157.GK10600@bombadil.infradead.org>
 <20181217093337.GC30879@dhcp22.suse.cz>
 <00ff5d2d-a50f-4730-db8a-cea3d7a3eef7@I-love.SAKURA.ne.jp>
 <20181217122546.GL10600@bombadil.infradead.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181217122546.GL10600@bombadil.infradead.org>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon 17-12-18 04:25:46, Matthew Wilcox wrote:
> On Mon, Dec 17, 2018 at 07:51:27PM +0900, Tetsuo Handa wrote:
> > On 2018/12/17 18:33, Michal Hocko wrote:
> > > On Sun 16-12-18 19:51:57, Matthew Wilcox wrote:
> > > [...]
> > >> Ah, yes, that makes perfect sense.  Thank you for the explanation.
> > >>
> > >> I wonder if the correct fix, however, is not to move the check for
> > >> GFP_NOFS in out_of_memory() down to below the check whether to kill
> > >> the current task.  That would solve your problem, and I don't _think_
> > >> it would cause any new ones.  Michal, you touched this code last, what
> > >> do you think?
> > > 
> > > What do you mean exactly? Whether we kill a current task or something
> > > else doesn't change much on the fact that NOFS is a reclaim restricted
> > > context and we might kill too early. If the fs can do GFP_FS then it is
> > > obviously a better thing to do because FS metadata can be reclaimed as
> > > well and therefore there is potentially less memory pressure on
> > > application data.
> > > 
> > 
> > I interpreted "to move the check for GFP_NOFS in out_of_memory() down to
> > below the check whether to kill the current task" as
> 
> Too far; I meant one line earlier, before we try to select a different
> process.

We could still panic the system on pre-mature OOM. So it doesn't really
seem good.

> > @@ -1104,6 +1095,19 @@ bool out_of_memory(struct oom_control *oc)
> >  	}
> >  
> >  	select_bad_process(oc);
> > +
> > +	/*
> > +	 * The OOM killer does not compensate for IO-less reclaim.
> > +	 * pagefault_out_of_memory lost its gfp context so we have to
> > +	 * make sure exclude 0 mask - all other users should have at least
> > +	 * ___GFP_DIRECT_RECLAIM to get here.
> > +	 */
> > +	if ((oc->gfp_mask && !(oc->gfp_mask & __GFP_FS)) && oc->chosen &&
> > +	    oc->chosen != (void *)-1UL && oc->chosen != current) {
> > +		put_task_struct(oc->chosen);
> > +		return true;
> > +	}
> > +
> >  	/* Found nothing?!?! */
> >  	if (!oc->chosen) {
> >  		dump_header(oc, NULL);
> > 
> > which is prefixed by "the correct fix is not".
> > 
> > Behaving like sysctl_oom_kill_allocating_task == 1 if __GFP_FS is not used
> > will not be the correct fix. But ...
> > 
> > Hou Tao wrote:
> > > There is no need to disable __GFP_FS in ->readpage:
> > > * It's a read-only fs, so there will be no dirty/writeback page and
> > >   there will be no deadlock against the caller's locked page
> > 
> > is read-only filesystem sufficient for safe to use __GFP_FS?
> > 
> > Isn't "whether it is safe to use __GFP_FS" depends on "whether fs locks
> > are held or not" rather than "whether fs has dirty/writeback page or not" ?
> 
> It's worth noticing that squashfs _is_ in fact holding a page locked in
> squashfs_copy_cache() when it calls grab_cache_page_nowait().  I'm not
> sure if this will lead to trouble or not because I'm insufficiently
> familiar with the reclaim path.

Hmm, this is more interesting then. If there is any memcg accounted
allocation down that path _and_ the squashfs writeout can lock more
pages and mark them writeback before they are really sent to the storage
then we have a problem. See [1]

[1] http://lkml.kernel.org/r/20181213092221.27270-1-mhocko@kernel.org

-- 
Michal Hocko
SUSE Labs
