Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  20 Dec 2018 19:15:25 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 105725805FC;
	Thu, 20 Dec 2018 01:44:30 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga001-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 20 Dec 2018 01:44:30 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AeFYOmxXp9PbPD+OIdgqjVFmefi7V8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZheEv6dThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmTgLjhi?=
 =?us-ascii?q?UaOD4j6GzZhMx+grxGrhyiqRxwzJLbb5yXO/VwZaPdZdEXSHFdXspNTSFNHp+w?=
 =?us-ascii?q?YpERA+cHIO1Wr5P9p1wLrRamAgesBf/gyj9SiX/ywKY00eMhHh3F3AwnAtkDt3?=
 =?us-ascii?q?HUrNXyNKgOUuC1y7LFzTbdYPNM3zfy9ozIfgomofGWUrJ9aMzcwlQsGQPdllic?=
 =?us-ascii?q?t5DpMjeP2ugQvWWX8fBsWf+shmI7sQ18ozqiyt8xhoTNho8Z0E3I+Ct5zYovO9?=
 =?us-ascii?q?G0VlJ3bcS6HJZQuCyXMZZ9TNk4TGFyoik6z6ULuZ6lcygOz5Qq3wDfa/OZfIiS?=
 =?us-ascii?q?+B7jV/ieIS1+hH17fLKznRGy8VKvyuHkV8m01khFrjZdn9XSqnwA0wbf5tWJR/?=
 =?us-ascii?q?dj5EutxDWC2xzJ5uxFI004ja/bJIQgwr40mJoTq0PDHirulUXyja+WcFgk++ex?=
 =?us-ascii?q?5+TkfLrmvJmcOJFwig3nNaQvlMq/DvoiMgUVQWib9vqz1Kf58U36XrpKlPs2nb?=
 =?us-ascii?q?fdsJzAIsQbvKG5DxdP0ok/8xa/Eyum0NMAkHkDLVJFewyIg5LmOlHTO/34Cfa/?=
 =?us-ascii?q?g1KxkDZk3fzGP7vhAonTIXjHirvuYbF960tEwgop0d9f/45UCq0GIP/rWk/+rt?=
 =?us-ascii?q?3YDgMjPAyz2ernCMh92ZkYWWKAGaKZNKLSsVmV5uMgOeWMZYkVuCrjJPgh/fLh?=
 =?us-ascii?q?kXg5mVoFd6mzwZQXcGy4HuhhI0iBe3XsmdcBEWAJvgYkVuzlkl+CXCVXZ3azWa?=
 =?us-ascii?q?I8+z46BJinDYfFWoCinriB0D2nEZ1RY2BMEkqMHmvwd4WYR/cMbzqfIsx7nTwC?=
 =?us-ascii?q?T7ShT44h2guotA/10LdnKuvU+isFtZPsztR15uvTlQ0s+jxwFciSz2aNT2RslG?=
 =?us-ascii?q?MSWzA2xLx/oVB6ylqbzKd3meJYGsJJ6/NJSAg6M4XcwPJ8C9z1XgLBfdKJSFK9?=
 =?us-ascii?q?T9WiADExSM8xwtAUb0Z8HdWikg7M3y6wD7AJkLyLAYQ+8rjA0HjpO8Z913HG2b?=
 =?us-ascii?q?E8gFY8XMtAK3eqhq5l+AjVHI7GjUOZmr2udaQd2i7N6WiCwXCPvEFeTA5/T6HF?=
 =?us-ascii?q?UWoDaUvRqNTz/lnCQKO2CbQ7LgtBztaPKrdLat3silVGWPfjOdTEb2KtgWuwAg?=
 =?us-ascii?q?yIxreNbIrsdGUQxyHdCEkCkwAO8neKLwk+BiG9o23ACDxiD07gY0Tp8eNmsnO0?=
 =?us-ascii?q?Ulc0zx2Wb01mz7e64BoViuKTSvwN3rMIojwuqyhpE1mn2dLWCN2ApxR6caVYYN?=
 =?us-ascii?q?M95kpH1G3Duwx8OJygM75thloEfwtruEPu0g19Cp9cnsgysHMq0A1yJLqY0VNc?=
 =?us-ascii?q?bT+XwYr8O7zXKmbo+hCvZLXb2lXf0NaQ56cO5+40q1TlvAG1CEUi929r3MVS03?=
 =?us-ascii?q?uZ/p/KFhYdUYrtUkYr8Bh3v6vaYigh6IzOz31jLK60viXE2903Huslyw+scMtF?=
 =?us-ascii?q?P6OACQD9DdcaB8+oKOExn1ipbxQEPP1d9aIuPsOmceeG17CvPOp6gD2mimFH6p?=
 =?us-ascii?q?hn0k2Q7yp8VvLI35EdzvCY3wuLTTf9gE26ssDqn4BJfjUSHmu5ySj5C49dfKxy?=
 =?us-ascii?q?fYAXCWiwJ8273Mlxh5noW3RA7l6sG0sG2NO1eRqVd1H93xdf1V4UoXykniu01S?=
 =?us-ascii?q?d0nCsqrqqc3SzOxfrtdBwcN25PRWlii0rsIIeug9AbWkiocxYmlB+/6UnmwKhb?=
 =?us-ascii?q?obx1L3PPTkdQYyj2M2ZiX7Owt7WYZM5D8pEosSRRUOmnZVCaS7j9owYV0i/5Hm?=
 =?us-ascii?q?tewiw7eC+uupnjgxN6j2edJm5prHXFYcFw2Qvf5NvESP5SxDUGRTN0iTnKBlem?=
 =?us-ascii?q?Odmp8s6Zl5PCsuC4SmKgWYdfcSjtzYOcqiS74XdmDgG4n/C2gtfnCxQ10Tfn19?=
 =?us-ascii?q?l2UiXFtBP8Yojo16ugK+5mcFdnBETg68VkAIFxiZU/hIsf2XUBgpWV/HwHkXr8?=
 =?us-ascii?q?MNlB2KL+amYNSiAPw9LP/Afl30hjJGqTx43lTnWd3tdhZ96ib2MK3SI96tpGCa?=
 =?us-ascii?q?aO47xCgCt1uUG4rQPKbPh5nzcdz+Yu6XEAj+EIvgot0juSArQIEUZEOizskgyC?=
 =?us-ascii?q?78qio6VPeGavbb+w2VJlkt+7C7GCphxcVGz9epc/BiJw6sR/MFTR0Hz88I3ked?=
 =?us-ascii?q?/Qbc4NuR2QiRvPk+9VKJcpnPoQmSVnIX79vWEiy+Mjjxxhx5S6s5acK2l34KK1?=
 =?us-ascii?q?GB1YNiD2Z8MO/DHil71ek92S34CuGJVhBzoKUIHpTfKuDDIdq/DnOxySHz07r3?=
 =?us-ascii?q?eRAaDfEhOH6Ed6s3LPFIimNnGQJHkE1NViWQOSJEpFjAAPWzU6mJE5GxuuxMzg?=
 =?us-ascii?q?dkd5+z8Q6kT5qhtK1uJnKR3/Xn3Dqwevbzc+UIKfIwZO7gFe+0fVNtST7uJtEC?=
 =?us-ascii?q?FZ/Z2hrw2NJnaYZwRSCmEJVVKLB0r+Prm1/tTA9+mYBuyjL/rBe7mOqOpeV+uW?=
 =?us-ascii?q?ypKryIdp4zGMNsCXNHl4E/I7wlZDXWx+G8nBgToPVjcYlzjTYM+bvhu8/ix3o9?=
 =?us-ascii?q?u78PTqXgLv+ISOB6FTMdVp5xC5n6ODO/SMiyZ+LDZSzokMymPQyLgDwF4SjDlj?=
 =?us-ascii?q?dyWsEbQFryLCULjclbNXDxEFbSN+L89I76M63glQNs/XkNL11rhkjvErD1dJT0?=
 =?us-ascii?q?DumsasZcYSOWGyKEvHBFqXNLSBPTDKw9v4YaW5Sb1RiuVbrxyxuTaBHE/lMTSO?=
 =?us-ascii?q?jD3pVxGpMeFRgyCXJh1euIehchlzDWjvVs7pahq+MIw/sTpj+Lw9gDvhPG9UZT?=
 =?us-ascii?q?N1cmtJpbTW9TwO0dtlHGkUy3tuLeCA0wae5OrfYsITsfxgASNclO9A5nk+jbxP?=
 =?us-ascii?q?43cXF7ROhCLOo4s28Bmdme6Vx28/XQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAACYYxtch0O0hNFjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGDa4w9i3yCDRSXSYIzAYctIjQJDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCA0JCCkvgjYigmUBAgMBAjc/BgkBAQoYCRMSAwwFSRiDHYICBAGpE4osj?=
 =?us-ascii?q?D8XgUA/gRGDEog6giYCoT0JkVkMGIoEh1gsmyWCDjMaCCgIgyiCJheOHj+BNwE?=
 =?us-ascii?q?BjV0DAQE?=
X-IPAS-Result: =?us-ascii?q?A0ABAACYYxtch0O0hNFjGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGDa4w9i3yCDRSXSYIzAYctIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkvg?=
 =?us-ascii?q?jYigmUBAgMBAjc/BgkBAQoYCRMSAwwFSRiDHYICBAGpE4osjD8XgUA/gRGDEog?=
 =?us-ascii?q?6giYCoT0JkVkMGIoEh1gsmyWCDjMaCCgIgyiCJheOHj+BNwEBjV0DAQE?=
X-IronPort-AV: E=Sophos;i="5.56,376,1539673200"; 
   d="scan'208";a="57151871"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 20 Dec 2018 01:44:28 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1731263AbeLTJWH (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Thu, 20 Dec 2018 04:22:07 -0500
Received: from mx2.suse.de ([195.135.220.15]:52556 "EHLO mx1.suse.de"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1731250AbeLTJWE (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 20 Dec 2018 04:22:04 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
        by mx1.suse.de (Postfix) with ESMTP id D949AB005;
        Thu, 20 Dec 2018 09:22:02 +0000 (UTC)
Date: Thu, 20 Dec 2018 10:22:02 +0100
From: Michal Hocko <mhocko@kernel.org>
To: Qian Cai <cai@lca.pw>
Cc: akpm@linux-foundation.org, Pavel.Tatashin@microsoft.com,
        mingo@kernel.org, hpa@zytor.com, mgorman@techsingularity.net,
        tglx@linutronix.de, linux-mm@kvack.org,
        linux-kernel@vger.kernel.org
Subject: Re: [PATCH] mm/page_owner: fix for deferred struct page init
Message-ID: <20181220092202.GD14234@dhcp22.suse.cz>
References: <cbfacb4b-dbfd-f68f-3d1e-05e137feca18@lca.pw>
 <20181220060303.38686-1-cai@lca.pw>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181220060303.38686-1-cai@lca.pw>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu 20-12-18 01:03:03, Qian Cai wrote:
> When booting a system with "page_owner=on",
> 
> start_kernel
>   page_ext_init
>     invoke_init_callbacks
>       init_section_page_ext
>         init_page_owner
>           init_early_allocated_pages
>             init_zones_in_node
>               init_pages_in_zone
>                 lookup_page_ext
>                   page_to_nid
> 
> The issue here is that page_to_nid() will not work since some page
> flags have no node information until later in page_alloc_init_late() due
> to DEFERRED_STRUCT_PAGE_INIT. Hence, it could trigger an out-of-bounds
> access with an invalid nid.
> 
> [    8.666047] UBSAN: Undefined behaviour in ./include/linux/mm.h:1104:50
> [    8.672603] index 7 is out of range for type 'zone [5]'
> 
> Also, kernel will panic since flags were poisoned earlier with,
> 
> CONFIG_DEBUG_VM_PGFLAGS=y
> CONFIG_NODE_NOT_IN_PAGE_FLAGS=n
> 
> start_kernel
>   setup_arch
>     pagetable_init
>       paging_init
>         sparse_init
>           sparse_init_nid
>             memblock_alloc_try_nid_raw
> 
> Although later it tries to set page flags for pages in reserved bootmem
> regions,
> 
> mm_init
>   mem_init
>     memblock_free_all
>       free_low_memory_core_early
>         reserve_bootmem_region
> 
> there could still have some freed pages from the page allocator but yet
> to be initialized due to DEFERRED_STRUCT_PAGE_INIT. It have already been
> dealt with a bit in page_ext_init().

Is there any reason why we cannot postpone page_ext initialization to
after all the memory is initialized?
-- 
Michal Hocko
SUSE Labs
