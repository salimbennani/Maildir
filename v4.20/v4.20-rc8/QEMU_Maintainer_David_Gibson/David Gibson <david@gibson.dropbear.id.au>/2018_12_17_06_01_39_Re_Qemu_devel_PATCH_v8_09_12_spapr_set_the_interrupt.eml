Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  17 Dec 2018 16:14:48 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id DD54F5805E2
	for <like.xu@linux.intel.com>; Sun, 16 Dec 2018 22:11:07 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 16 Dec 2018 22:11:05 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A4gP2zBF8p59+cvNq6wvXcJ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ76p829bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjmk8qxlSgLniD?=
 =?us-ascii?q?0fOjA38G/ZlM9+jKxUrx29uhNwwYDbbpyNNPd8fK3Qcs4WSGRdUslPTCxMGYy8?=
 =?us-ascii?q?Y5cVAucbIepVtZTxql0TphW+HwmsA+bvxydGiHDsw6060vkuGhzH0gwhBN0Oq3?=
 =?us-ascii?q?PUrNPoP6oVTO+61rfIzTTeYP5N1jf96ZPHcgsmofGKR75/bNDRyU43FwzekFqf?=
 =?us-ascii?q?s5blMymU1usQqWSU9fdgWPuphmU6pQ9xpT2vyd0tionPno8VzVHF9SFjz4kuPt?=
 =?us-ascii?q?20Ukl7YcSrEJdIqi6aLYx2Qts5TG52oik60KcKuZ+mcyUM1Z8pxAbfZuSZf4SU?=
 =?us-ascii?q?4R/vTvudLSp7iX5/Zr6yiRa//VK9xuD+TsW4zllHojZYntTJuH0A0wDf5tSCR/?=
 =?us-ascii?q?dj+0qtxDOC2gXN5uxCPEs6j7DUK4Q7zb41jpcTsVrMHivxmEjuiK+Wd14k+vSz?=
 =?us-ascii?q?6+j9bbXmoIKcO5VzigHkPaQigs2/AeImPQgSR2WX5/iw2b758UHkXblHjec6nr?=
 =?us-ascii?q?fXvZ3aP8gXu6y0DxdQ0ok56ha/Czmm0M4fnXkCNF9FYQyIj430O13XPf/3E+m/?=
 =?us-ascii?q?jEqokDty3P/GOaDhApPRIXfdi7fterJ9609fyAUt19xe6I9UB6kFIPLyXE/xqd?=
 =?us-ascii?q?PZAgU4Mwyy3+boFtF92pkCVmKIB6+UK6XSsViO5uIgJemMeZUZuDHnK/gq//Lu?=
 =?us-ascii?q?l2M2mUcBfam12psacHS4HvVlI0qHe3btjcoBHHwOvgo/SuzqlVKDXSRSZ3a0Q6?=
 =?us-ascii?q?Iz+DU7BJi6AofEQ4D+yIGHxzqxS51KenhdWBfLFXbza57CXfAKZySPZMh7nXsB?=
 =?us-ascii?q?XLmlToYnkha2qA79zaEgN+fR52gUuIzu0ItI4fbOn0Q3/D1wE8PPymyIUiR4k3?=
 =?us-ascii?q?0FQ3os0blirFdh4lGE16d+nrpfD9ME/O5DUAoxKcvByfdnAcv5QAPLc4S1TwON?=
 =?us-ascii?q?w9m8ADp5at957NgHf0tnU4Gpih/r3COtD/kSjbPdV7Iu9aeJ83HvJso15HfMz6?=
 =?us-ascii?q?4nxw0qS9VOOUWph6Rk8A6VC5TOi0+UnrzsdKha1TObpzTL9naHoEwNCF04aq7C?=
 =?us-ascii?q?R31KPkY=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AIAABGPRdchxHrdtBkFgUBAQEBAwEBA?=
 =?us-ascii?q?QcDAQEBgVEGAQEBCwGBMIE5gSmMFV+LFoINl1gUgV8CDQUYBw2HTiI0CQ0BAwE?=
 =?us-ascii?q?BAQEBAQIBEwEBAQoLCQgbDiMMgjYFAgMYCYJbAQEBAQIBAQIkGQEBBAopAQIDA?=
 =?us-ascii?q?QIGAQEKGAkdCAMBCwUYMRMFBIMZAYF4CAEEpkmBbDOCdgEBBYcRBwiCbYg1gRw?=
 =?us-ascii?q?XgX+BEYMShGqFdqEbCYIohGWKQgsYYIFKjyiRKYg7gUaCDjMaCBcZgycJghIMF?=
 =?us-ascii?q?4IEhlqFUy0xgQQDi3iBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AIAABGPRdchxHrdtBkFgUBAQEBAwEBAQcDAQEBgVEGAQE?=
 =?us-ascii?q?BCwGBMIE5gSmMFV+LFoINl1gUgV8CDQUYBw2HTiI0CQ0BAwEBAQEBAQIBEwEBA?=
 =?us-ascii?q?QoLCQgbDiMMgjYFAgMYCYJbAQEBAQIBAQIkGQEBBAopAQIDAQIGAQEKGAkdCAM?=
 =?us-ascii?q?BCwUYMRMFBIMZAYF4CAEEpkmBbDOCdgEBBYcRBwiCbYg1gRwXgX+BEYMShGqFd?=
 =?us-ascii?q?qEbCYIohGWKQgsYYIFKjyiRKYg7gUaCDjMaCBcZgycJghIMF4IEhlqFUy0xgQQ?=
 =?us-ascii?q?Di3iBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,364,1539673200"; 
   d="asc'?scan'208";a="45232121"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 16 Dec 2018 22:11:04 -0800
Received: from localhost ([::1]:45042 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gYm7M-0006tT-3M
	for like.xu@linux.intel.com; Mon, 17 Dec 2018 01:11:04 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:48973)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <dgibson@ozlabs.org>) id 1gYm4R-0004y6-GM
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 01:08:04 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <dgibson@ozlabs.org>) id 1gYm4Q-0008UF-1q
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 01:08:03 -0500
Received: from ozlabs.org ([2401:3900:2:1::2]:60471)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <dgibson@ozlabs.org>)
	id 1gYm4P-0008Q5-68; Mon, 17 Dec 2018 01:08:01 -0500
Received: by ozlabs.org (Postfix, from userid 1007)
	id 43J9gJ4zqkz9sD9; Mon, 17 Dec 2018 17:07:56 +1100 (AEDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
	d=gibson.dropbear.id.au; s=201602; t=1545026876;
	bh=P5jOFWieLqn2q/S2E64+7PafOiulVWlpnGzKT3cP1IM=;
	h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
	b=PXCqmEv4Auc86YKGFY44RgBhW9YrEDuDp9+Dc39F5616EFe5M0hFWsASgxj0Ig5gD
	Sk/uhIhXZjyqADti1T/nEhe4hElG84EiGDK2eRT2aRLOi2jLXOdaIkVPdWNGb9+Btv
	C9DTqDbu7bsHOQQ6wRtgogzFXABg0uUKnXM0mX8E=
Date: Mon, 17 Dec 2018 17:01:39 +1100
From: David Gibson <david@gibson.dropbear.id.au>
To: =?iso-8859-1?Q?C=E9dric?= Le Goater <clg@kaod.org>
Message-ID: <20181217060139.GG5597@umbus.fritz.box>
References: <20181211223823.13770-1-clg@kaod.org>
	<20181211223823.13770-10-clg@kaod.org>
	<4a9ab4ce-c7d7-9744-e5ea-10df38806e9a@kaod.org>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
	protocol="application/pgp-signature"; boundary="HB4mHL4PVvkpZAgW"
Content-Disposition: inline
In-Reply-To: <4a9ab4ce-c7d7-9744-e5ea-10df38806e9a@kaod.org>
User-Agent: Mutt/1.10.1 (2018-07-13)
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2401:3900:2:1::2
Subject: Re: [Qemu-devel] [PATCH v8 09/12] spapr: set the interrupt
 presenter at reset
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-ppc@nongnu.org, qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>


--HB4mHL4PVvkpZAgW
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

On Thu, Dec 13, 2018 at 01:52:14PM +0100, C=E9dric Le Goater wrote:
> On 12/11/18 11:38 PM, C=E9dric Le Goater wrote:
> > Currently, the interrupt presenter of the vCPU is set at realize
> > time. Setting it at reset will become necessary when the new machine
> > supporting both interrupt modes is introduced. In this machine, the
> > interrupt mode is chosen at CAS time and activated after a reset.
>=20
> I think we need a second '->intc' pointer specific to XIVE instead.=20
> How about ->intc_xive ?

Ah, interesting.  If we're going to need that, we might as well go
to specific ->icp and ->tctx pointers with the right types.

I don't particularly like having those machine specific pointers
within the cpu structure, but we can look at fixing that later by
reviving my patches to move various machine specific stuff within the
cpu into a separate sub-allocation.

>=20
> We could just drop this patch and easly get rid of the XiveTCTX object=20
> leak in spapr_unrealize_vcpu().
>=20
> C.=20
>=20
> > Signed-off-by: C=E9dric Le Goater <clg@kaod.org>
> > ---
> >=20
> >  Changes since v7:
> >=20
> >  - introduced spapr_irq_reset_xics().=20
> >=20
> >  include/hw/ppc/spapr_cpu_core.h |  2 ++
> >  hw/ppc/spapr_cpu_core.c         | 26 ++++++++++++++++++++++++++
> >  hw/ppc/spapr_irq.c              | 13 +++++++++++++
> >  3 files changed, 41 insertions(+)
> >=20
> > diff --git a/include/hw/ppc/spapr_cpu_core.h b/include/hw/ppc/spapr_cpu=
_core.h
> > index 9e2821e4b31f..fc8ea9021656 100644
> > --- a/include/hw/ppc/spapr_cpu_core.h
> > +++ b/include/hw/ppc/spapr_cpu_core.h
> > @@ -53,4 +53,6 @@ static inline sPAPRCPUState *spapr_cpu_state(PowerPCC=
PU *cpu)
> >      return (sPAPRCPUState *)cpu->machine_data;
> >  }
> > =20
> > +void spapr_cpu_core_set_intc(PowerPCCPU *cpu, const char *intc_type);
> > +
> >  #endif
> > diff --git a/hw/ppc/spapr_cpu_core.c b/hw/ppc/spapr_cpu_core.c
> > index 82666436e9b4..afc5d4f4e739 100644
> > --- a/hw/ppc/spapr_cpu_core.c
> > +++ b/hw/ppc/spapr_cpu_core.c
> > @@ -397,3 +397,29 @@ static const TypeInfo spapr_cpu_core_type_infos[] =
=3D {
> >  };
> > =20
> >  DEFINE_TYPES(spapr_cpu_core_type_infos)
> > +
> > +typedef struct ForeachFindIntCArgs {
> > +    const char *intc_type;
> > +    Object *intc;
> > +} ForeachFindIntCArgs;
> > +
> > +static int spapr_cpu_core_find_intc(Object *child, void *opaque)
> > +{
> > +    ForeachFindIntCArgs *args =3D opaque;
> > +
> > +    if (object_dynamic_cast(child, args->intc_type)) {
> > +        args->intc =3D child;
> > +    }
> > +
> > +    return args->intc !=3D NULL;
> > +}
> > +
> > +void spapr_cpu_core_set_intc(PowerPCCPU *cpu, const char *intc_type)
> > +{
> > +    ForeachFindIntCArgs args =3D { intc_type, NULL };
> > +
> > +    object_child_foreach(OBJECT(cpu), spapr_cpu_core_find_intc, &args);
> > +    g_assert(args.intc);
> > +
> > +    cpu->intc =3D args.intc;
> > +}
> > diff --git a/hw/ppc/spapr_irq.c b/hw/ppc/spapr_irq.c
> > index 0999a2b2d69c..814500f22d34 100644
> > --- a/hw/ppc/spapr_irq.c
> > +++ b/hw/ppc/spapr_irq.c
> > @@ -12,6 +12,7 @@
> >  #include "qemu/error-report.h"
> >  #include "qapi/error.h"
> >  #include "hw/ppc/spapr.h"
> > +#include "hw/ppc/spapr_cpu_core.h"
> >  #include "hw/ppc/spapr_xive.h"
> >  #include "hw/ppc/xics.h"
> >  #include "sysemu/kvm.h"
> > @@ -208,6 +209,15 @@ static int spapr_irq_post_load_xics(sPAPRMachineSt=
ate *spapr, int version_id)
> >      return 0;
> >  }
> > =20
> > +static void spapr_irq_reset_xics(sPAPRMachineState *spapr, Error **err=
p)
> > +{
> > +   CPUState *cs;
> > +
> > +    CPU_FOREACH(cs) {
> > +        spapr_cpu_core_set_intc(POWERPC_CPU(cs), spapr->icp_type);
> > +    }
> > +}
> > +
> >  #define SPAPR_IRQ_XICS_NR_IRQS     0x1000
> >  #define SPAPR_IRQ_XICS_NR_MSIS     \
> >      (XICS_IRQ_BASE + SPAPR_IRQ_XICS_NR_IRQS - SPAPR_IRQ_MSI)
> > @@ -225,6 +235,7 @@ sPAPRIrq spapr_irq_xics =3D {
> >      .dt_populate =3D spapr_dt_xics,
> >      .cpu_intc_create =3D spapr_irq_cpu_intc_create_xics,
> >      .post_load   =3D spapr_irq_post_load_xics,
> > +    .reset       =3D spapr_irq_reset_xics,
> >  };
> > =20
> >  /*
> > @@ -325,6 +336,8 @@ static void spapr_irq_reset_xive(sPAPRMachineState =
*spapr, Error **errp)
> >      CPU_FOREACH(cs) {
> >          PowerPCCPU *cpu =3D POWERPC_CPU(cs);
> > =20
> > +        spapr_cpu_core_set_intc(cpu, TYPE_XIVE_TCTX);
> > +
> >          /* (TCG) Set the OS CAM line of the thread interrupt context. =
*/
> >          spapr_xive_set_tctx_os_cam(XIVE_TCTX(cpu->intc));
> >      }
> >=20
>=20

--=20
David Gibson			| I'll have my music baroque, and my code
david AT gibson.dropbear.id.au	| minimalist, thank you.  NOT _the_ _other_
				| _way_ _around_!
http://www.ozlabs.org/~dgibson

--HB4mHL4PVvkpZAgW
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEEdfRlhq5hpmzETofcbDjKyiDZs5IFAlwXO8AACgkQbDjKyiDZ
s5JcvA//aUiwrVbAn5C650WKBcKAhc5ATu95rMfDQVUo0HOLFpN1+V3CJdLodop6
A0/IXEsMjAGh7FhCA1JVhUooLaUUS4SsekiwpcQ2vQR+NurqvIU+3NIkux8urYD4
AP7UiFDpS59tIlLqp9K2/53a9OTWiJIOw1m+87QVT0B1y1h5xVqxGr2I8uvvyi3V
RpeZDPxq9pmFQEgv7EUR3KFGpDMod/JswpUoALIhCfGmr05NK9k4wFyZLuuTgIdv
J1DYuVuKU0TieXHWl2n+KkdWV9ZXuNnHVojVgKMeCUbz1P1N8W0zjzB/7zIde2IP
/rNai/hFITD/Ic8F4GfB76rwGrVol4S7t0tYcbq+Z12eWGbOMQJlMK5jrECgtbTp
Cwb/vZ8jHiiPgpCmde7XNLIMi8awex3w3qfmZNMBhsyUiQm8VtORoPuNnfXxMVcg
csff1FrPhHVwJmhsl8SxKCepnkChhzufncnY7At6eTTmDWV9HTUa/JAbnFi7/yyM
q0IiJlP00F+cDGCuvHz3PZ34qos28t505uHFRG8aNf7oeNI5mLvSPheAdaGM7AYB
XlUjM/NixI9T3gZuHMCxODdLSZLcr9hW7iE0XlTsZdeMsaKkc5sICO7rwyVJHa72
uMQWgH+IuBYPIW5Z1HXnZRQRqu5ELl4v5AemhTXUMCsF3ZW6T/s=
=7/nq
-----END PGP SIGNATURE-----

--HB4mHL4PVvkpZAgW--

