Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:45:15 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 974B8580522
	for <like.xu@linux.intel.com>; Thu, 20 Dec 2018 21:57:10 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 20 Dec 2018 21:57:10 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A7LxWHRwdNOCya3rXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?2u4QIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDwULs6Wymt771zRRHoli?=
 =?us-ascii?q?kJOT03/mbVhcx+g61Vrw+vpwR9zoDWb4yZKfRzcr/DctMBXmdNQt9RWjZdDo6m?=
 =?us-ascii?q?c4cDE+wMNvtYoYnnoFsOqAOzCwe2C+Pxyz9Hm2L906w70+s6CgHG2wogFM8JvX?=
 =?us-ascii?q?vJttr1KqYSXv2uwanHzDXMdOhW2TD76ITSbx8hu/aMXaprfsXP00YvDRnJjlSN?=
 =?us-ascii?q?poD/JTyVy/0Avm6G5ORjTeKik3Arpx1yrzS128sgl4rEipgLxl3K9Sh12ps5KN?=
 =?us-ascii?q?+gREJlbtOoDIZcuiSUOoZyXs8uX2RltDg/x7EbvJO2eTYGxZI6zBDFcfOHaZKH?=
 =?us-ascii?q?4hf7WeaRPzh4gHVldaq7hxaz6kig1vb8WtO70FZMsypJiN7MtmoC1xDL68iHTO?=
 =?us-ascii?q?Vy/lu51DqRywze6ftILV0pmafYMZIt3LA9m5oJvUjeHCL6gED2g7WXdkUg9Oio?=
 =?us-ascii?q?8ePnYrD+q5+FKYB0jxz+Pr0zlcOhH+Q3LAwOU3GA9uS7yb3j+1H2T6tRjvExlq?=
 =?us-ascii?q?nZsZPaKtoBqq+2Hg9YyoIj6xe5Dze739UUh3gHLFRZeB2Zi4jlIU3BIPf9Dfqk?=
 =?us-ascii?q?hVSslzFrx//APr38GJnNKWLDkLj5cbZn90Fc0BYzzcxY559MDrEBIfHzVVHruN?=
 =?us-ascii?q?3XEx80KAi0w+fhCNVg2YISQ2OPAqmFMKzMtV+E/P4gI+6JZNxdhTDmNvJw5+Ly?=
 =?us-ascii?q?lWRr3hgZfLK1xt0Rb3a3GOkgJF+WJn/lg9MEGGFNuRIiTevskxqbXDtOInq/Qa?=
 =?us-ascii?q?84tQw9E5+sWILKR4Sxh+6Y0SKmW5FbeG1CT0qBCGrlbJmsXfAKZySPZMh7nWsf?=
 =?us-ascii?q?SLKjRoQ9gAyorxLw0LF9L+DZqREf4IruyNVvoejahB0/8ThcC8Wb2nuKCWZukT?=
 =?us-ascii?q?AmXTgziYx2v01xgniC27N/hbQMGdVN5v9hXQYwLpnaieBgDMj4VwvbONaFDl+7?=
 =?us-ascii?q?FIb1SQotR848loddK312HM+v20jO?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A6AACufxxchxHrdtBkHQEBBQEHBQGBU?=
 =?us-ascii?q?gcBCwGBMIJijHWLHYINl16BcxUYFIcuIjUIDQEDAQEBAQEBAgETAQEBCgsJCBs?=
 =?us-ascii?q?OIwyCNgUCAxgJglwDAwECJBkBAQQKKQECAwECBgEBHykIAwEoKxkFgx2CAgEEp?=
 =?us-ascii?q?XaBbDOCdgEBBYJDhG4Ih36DJYEcF4F/gRGNcolNB5dqCYIpjzAMGGKQe5oNgUc?=
 =?us-ascii?q?BggwzGggXGYMnghsMF4IEjC0tMYEEA4wigXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0A6AACufxxchxHrdtBkHQEBBQEHBQGBUgcBCwGBMIJijHW?=
 =?us-ascii?q?LHYINl16BcxUYFIcuIjUIDQEDAQEBAQEBAgETAQEBCgsJCBsOIwyCNgUCAxgJg?=
 =?us-ascii?q?lwDAwECJBkBAQQKKQECAwECBgEBHykIAwEoKxkFgx2CAgEEpXaBbDOCdgEBBYJ?=
 =?us-ascii?q?DhG4Ih36DJYEcF4F/gRGNcolNB5dqCYIpjzAMGGKQe5oNgUcBggwzGggXGYMng?=
 =?us-ascii?q?hsMF4IEjC0tMYEEA4wigXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,380,1539673200"; 
   d="scan'208";a="56078224"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 20 Dec 2018 21:57:09 -0800
Received: from localhost ([::1]:42430 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gaDo5-0008Tb-4S
	for like.xu@linux.intel.com; Fri, 21 Dec 2018 00:57:09 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:60158)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <dgibson@ozlabs.org>) id 1gaDdm-0000ZL-T6
	for qemu-devel@nongnu.org; Fri, 21 Dec 2018 00:46:32 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <dgibson@ozlabs.org>) id 1gaDdl-0007Fm-S5
	for qemu-devel@nongnu.org; Fri, 21 Dec 2018 00:46:30 -0500
Received: from ozlabs.org ([2401:3900:2:1::2]:52515)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <dgibson@ozlabs.org>)
	id 1gaDdl-00072V-28; Fri, 21 Dec 2018 00:46:29 -0500
Received: by ozlabs.org (Postfix, from userid 1007)
	id 43Ld0P3kPrz9sNM; Fri, 21 Dec 2018 16:46:12 +1100 (AEDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
	d=gibson.dropbear.id.au; s=201602; t=1545371173;
	bh=UATCNSwf0zRf4k4EaLrgA33ptccGmYW2IiQwrNBHcRU=;
	h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
	b=jrInkE79SiD07WM8Kl+vfhd6JdOU6Tbg1cKh2lVJU4roUgFb2LRL4eX3HxXZ/bcgW
	CIuTJk4DDvrnzh44vWNqPnBHRrOGil6Zfg0IpNkDmJ6COr92cDmKGy3McEh+YIouFh
	FBK2s7JHw2MXzBFpaeGQgrN6xmbjTpPZQDQB73Kw=
From: David Gibson <david@gibson.dropbear.id.au>
To: peter.maydell@linaro.org
Date: Fri, 21 Dec 2018 16:45:40 +1100
Message-Id: <20181221054606.22007-15-david@gibson.dropbear.id.au>
X-Mailer: git-send-email 2.19.2
In-Reply-To: <20181221054606.22007-1-david@gibson.dropbear.id.au>
References: <20181221054606.22007-1-david@gibson.dropbear.id.au>
MIME-Version: 1.0
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2401:3900:2:1::2
Subject: [Qemu-devel] [PULL 14/40] e500: simplify IRQ wiring
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: gkurz@redhat.com, lvivier@redhat.com, Greg Kurz <groug@kaod.org>,
	qemu-devel@nongnu.org, qemu-ppc@nongnu.org, clg@kaod.org,
	David Gibson <david@gibson.dropbear.id.au>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

From: Greg Kurz <groug@kaod.org>

The OpenPIC have 5 outputs per connected CPU. The machine init code hence
needs a bi-dimensional array (smp_cpu lines, 5 columns) to wire up the ir=
qs
between the PIC and the CPUs.

The current code first allocates an array of smp_cpus pointers to qemu_ir=
q
type, then it allocates another array of smp_cpus * 5 qemu_irq and fills =
the
first array with pointers to each line of the second array. This is rathe=
r
convoluted.

Simplify the logic by introducing a structured type that describes all th=
e
OpenPIC outputs for a single CPU, ie, fixed size of 5 qemu_irq, and only
allocate a smp_cpu sized array of those.

This also allows to use g_new(T, n) instead of g_malloc(sizeof(T) * n)
as recommended in HACKING.

Signed-off-by: Greg Kurz <groug@kaod.org>
Signed-off-by: David Gibson <david@gibson.dropbear.id.au>
---
 hw/ppc/e500.c | 18 ++++++++----------
 1 file changed, 8 insertions(+), 10 deletions(-)

diff --git a/hw/ppc/e500.c b/hw/ppc/e500.c
index e6747fce28..b20fea0dfc 100644
--- a/hw/ppc/e500.c
+++ b/hw/ppc/e500.c
@@ -685,7 +685,7 @@ static void ppce500_cpu_reset(void *opaque)
 }
=20
 static DeviceState *ppce500_init_mpic_qemu(PPCE500MachineState *pms,
-                                           qemu_irq **irqs)
+                                           IrqLines  *irqs)
 {
     DeviceState *dev;
     SysBusDevice *s;
@@ -705,7 +705,7 @@ static DeviceState *ppce500_init_mpic_qemu(PPCE500Mac=
hineState *pms,
     k =3D 0;
     for (i =3D 0; i < smp_cpus; i++) {
         for (j =3D 0; j < OPENPIC_OUTPUT_NB; j++) {
-            sysbus_connect_irq(s, k++, irqs[i][j]);
+            sysbus_connect_irq(s, k++, irqs[i].irq[j]);
         }
     }
=20
@@ -713,7 +713,7 @@ static DeviceState *ppce500_init_mpic_qemu(PPCE500Mac=
hineState *pms,
 }
=20
 static DeviceState *ppce500_init_mpic_kvm(const PPCE500MachineClass *pmc=
,
-                                          qemu_irq **irqs, Error **errp)
+                                          IrqLines *irqs, Error **errp)
 {
     Error *err =3D NULL;
     DeviceState *dev;
@@ -742,7 +742,7 @@ static DeviceState *ppce500_init_mpic_kvm(const PPCE5=
00MachineClass *pmc,
=20
 static DeviceState *ppce500_init_mpic(PPCE500MachineState *pms,
                                       MemoryRegion *ccsr,
-                                      qemu_irq **irqs)
+                                      IrqLines *irqs)
 {
     MachineState *machine =3D MACHINE(pms);
     const PPCE500MachineClass *pmc =3D PPCE500_MACHINE_GET_CLASS(pms);
@@ -806,15 +806,14 @@ void ppce500_init(MachineState *machine)
     /* irq num for pin INTA, INTB, INTC and INTD is 1, 2, 3 and
      * 4 respectively */
     unsigned int pci_irq_nrs[PCI_NUM_PINS] =3D {1, 2, 3, 4};
-    qemu_irq **irqs;
+    IrqLines *irqs;
     DeviceState *dev, *mpicdev;
     CPUPPCState *firstenv =3D NULL;
     MemoryRegion *ccsr_addr_space;
     SysBusDevice *s;
     PPCE500CCSRState *ccsr;
=20
-    irqs =3D g_malloc0(smp_cpus * sizeof(qemu_irq *));
-    irqs[0] =3D g_malloc0(smp_cpus * sizeof(qemu_irq) * OPENPIC_OUTPUT_N=
B);
+    irqs =3D g_new0(IrqLines, smp_cpus);
     for (i =3D 0; i < smp_cpus; i++) {
         PowerPCCPU *cpu;
         CPUState *cs;
@@ -834,10 +833,9 @@ void ppce500_init(MachineState *machine)
             firstenv =3D env;
         }
=20
-        irqs[i] =3D irqs[0] + (i * OPENPIC_OUTPUT_NB);
         input =3D (qemu_irq *)env->irq_inputs;
-        irqs[i][OPENPIC_OUTPUT_INT] =3D input[PPCE500_INPUT_INT];
-        irqs[i][OPENPIC_OUTPUT_CINT] =3D input[PPCE500_INPUT_CINT];
+        irqs[i].irq[OPENPIC_OUTPUT_INT] =3D input[PPCE500_INPUT_INT];
+        irqs[i].irq[OPENPIC_OUTPUT_CINT] =3D input[PPCE500_INPUT_CINT];
         env->spr_cb[SPR_BOOKE_PIR].default_value =3D cs->cpu_index =3D i=
;
         env->mpic_iack =3D pmc->ccsrbar_base + MPC8544_MPIC_REGS_OFFSET =
+ 0xa0;
=20
--=20
2.19.2


