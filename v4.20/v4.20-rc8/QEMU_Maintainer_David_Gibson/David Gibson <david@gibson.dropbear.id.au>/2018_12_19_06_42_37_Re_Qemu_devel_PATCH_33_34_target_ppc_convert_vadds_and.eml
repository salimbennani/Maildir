Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  19 Dec 2018 21:31:40 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 70FCE580039
	for <like.xu@linux.intel.com>; Wed, 19 Dec 2018 00:14:22 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 19 Dec 2018 00:14:22 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AVqd06x+PjbiLk/9uRHKM819IXTAuvvDOBiVQ1KB+?=
 =?us-ascii?q?0+wTIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CS2RPXthfWS9PAoyz?=
 =?us-ascii?q?c4QAEugOMuhFoYnlpVYArxSzCRSiCe/z1DBInWT73aIm3+k7CwzKwBYtE8wIvX?=
 =?us-ascii?q?/JrNv1LqASUeWtwafG1zrDcfJW1irg44bJcxAuuuqMXbV2ccHMzkQgChnKjkuR?=
 =?us-ascii?q?qYP4JD6V2eUNvHOA7+pnU+KjkXMoqxt2oji33cgjlJPGhpgPxlDF6Cp12pw6Jc?=
 =?us-ascii?q?ChRUN9fNWqHpxQtySAOIt3RMMvW2ZouSc+yrIcopG7ZzIGyJM9xx7Qc/CIbpKI?=
 =?us-ascii?q?4hX7VOmKPzh3nmhldKi+hxmv90Wr1+7yVtGs3VpUsiZIkcPAum0Q2xHQ8MSLVP?=
 =?us-ascii?q?Vw80e71TqS1Q3f8v9ILVw6mKbBNpIt36Q8m5gOvUjZAyP7nlj9grWMeUU+4Oeo?=
 =?us-ascii?q?7vzqYrX4qZ+YMI95kgX+MqU1msyjGuQ0KAcOX26G+eim073j50L5TK1Ljv0wjK?=
 =?us-ascii?q?bZrIjXKdoHqqO6GQNZz5sv5hWlAzu43tkVnWMLIE9HdR6fiojmIVDOIPT2Dfel?=
 =?us-ascii?q?hFSslS9mx+nYMb3kH5XBN2XMn6n/fblj705Q0RE8zddC55JSFr4OPunzVkj1tN?=
 =?us-ascii?q?zZDR82LRa4wun6CNhl0oMeWGSPArKWMa/IsF+I4P4vLPeIZIMPpDn9LP0l6uXo?=
 =?us-ascii?q?jX8+n18dcq+p3YYNZHC/BPRmLF2VYWDwjdcZDWcKog0+QfTuiF2DUj5ceWy+Xq?=
 =?us-ascii?q?0h5jwgDIKmDIHDRp2igbCb3Se7GIFWaX5CClyWDXjocICECL8xbjmPKJphjiAc?=
 =?us-ascii?q?TurmDIsgzg218gn9zbVhM6zT4CJfsJvi0N184arUjQ0z8jpvSN2Q1nzIQ2xqk2?=
 =?us-ascii?q?dbejktwaoqpEV8zkuEg7F1huEdGdFN6vcMSAojKJPH08R8DNb9XB+Hec2GH027?=
 =?us-ascii?q?SNerCi1kU9Qq3tUVaFx8EdjxsheW5SuhA7YPm/SrCZo4/7jH2H65c9x8wHbPzq?=
 =?us-ascii?q?Vnj1QgTsZVLmqgrqp+8QHJAMjOiUrPxIiwcqFJ8CfT9WvL4muEp0ZeGFp8WLvE?=
 =?us-ascii?q?UVgQZ0HNqtK/6lnFV7WjAK5hMwcHwNPUefgCUcHgkVgTHKSrA9/ZeW/k3j7oXR?=
 =?us-ascii?q?s=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ACAACd/BlchxHrdtBjFgQBAQEBAQIBA?=
 =?us-ascii?q?QEBBwIBAQEBgVEFAQEBAQsBgTCBOYEpjBZfix2CDXyWYIFzAg4FGAcNhykiNAk?=
 =?us-ascii?q?NAQMBAQEBAQECARMBAQEKCwkIGw4jDII2BQIDGgEGglwBAgMBAiQZAQEECikBA?=
 =?us-ascii?q?gMBAgYBAQoYCR0IAwELBRgxEwUEgxkBggABAQSlW4FsM4J2AQEFhyQHCIJtiDa?=
 =?us-ascii?q?BHBeBf4ERgl01iDqCJo9YkVkJgimEZopGDBhggUqPLJE6iEKBRoIOMxoIFxmDJ?=
 =?us-ascii?q?wmCEgwXEoFyhlqFUy0xgQQDi2mBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0ACAACd/BlchxHrdtBjFgQBAQEBAQIBAQEBBwIBAQEBgVE?=
 =?us-ascii?q?FAQEBAQsBgTCBOYEpjBZfix2CDXyWYIFzAg4FGAcNhykiNAkNAQMBAQEBAQECA?=
 =?us-ascii?q?RMBAQEKCwkIGw4jDII2BQIDGgEGglwBAgMBAiQZAQEECikBAgMBAgYBAQoYCR0?=
 =?us-ascii?q?IAwELBRgxEwUEgxkBggABAQSlW4FsM4J2AQEFhyQHCIJtiDaBHBeBf4ERgl01i?=
 =?us-ascii?q?DqCJo9YkVkJgimEZopGDBhggUqPLJE6iEKBRoIOMxoIFxmDJwmCEgwXEoFyhlq?=
 =?us-ascii?q?FUy0xgQQDi2mBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,372,1539673200"; 
   d="asc'?scan'208";a="142717780"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 19 Dec 2018 00:14:21 -0800
Received: from localhost ([::1]:58199 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gZWzk-0004I2-GH
	for like.xu@linux.intel.com; Wed, 19 Dec 2018 03:14:20 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:42026)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <dgibson@ozlabs.org>) id 1gZWbx-00028z-67
	for qemu-devel@nongnu.org; Wed, 19 Dec 2018 02:49:48 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <dgibson@ozlabs.org>) id 1gZWbn-0005zv-VL
	for qemu-devel@nongnu.org; Wed, 19 Dec 2018 02:49:42 -0500
Received: from ozlabs.org ([203.11.71.1]:40319)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <dgibson@ozlabs.org>)
	id 1gZWbn-0005vV-4C; Wed, 19 Dec 2018 02:49:35 -0500
Received: by ozlabs.org (Postfix, from userid 1007)
	id 43KRqQ23VHz9sNf; Wed, 19 Dec 2018 18:49:21 +1100 (AEDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
	d=gibson.dropbear.id.au; s=201602; t=1545205762;
	bh=cwJpNdf1Mm1k9Z1Xkxj0uMYPXgTSx3EnMIHNpmXpnpM=;
	h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
	b=OsGpaAZKDs7fVEzJbQ/G8nJBcsLC8gyX8UAr4+FkUY4X0Q7MJoZ8UhV4+NX5p62Hr
	9SiZNHsBUy+yNrtQPm17oEtyPdVE0QaBc9MX7HsP5kAztStXF+LQhT/kqtYMR2ZjhZ
	4xxMjGW24ZLDjRSWliTHlUsmZ6ehUE9O6u4gtJ8E=
Date: Wed, 19 Dec 2018 17:42:37 +1100
From: David Gibson <david@gibson.dropbear.id.au>
To: Richard Henderson <richard.henderson@linaro.org>
Message-ID: <20181219064236.GC30570@umbus.fritz.box>
References: <20181218063911.2112-1-richard.henderson@linaro.org>
	<20181218063911.2112-34-richard.henderson@linaro.org>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
	protocol="application/pgp-signature"; boundary="fo/b2PYVqg2cQvBK"
Content-Disposition: inline
In-Reply-To: <20181218063911.2112-34-richard.henderson@linaro.org>
User-Agent: Mutt/1.10.1 (2018-07-13)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 203.11.71.1
Subject: Re: [Qemu-devel] [PATCH 33/34] target/ppc: convert vadd*s and
 vsub*s to vector operations
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-ppc@nongnu.org, mark.cave-ayland@ilande.co.uk, qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>


--fo/b2PYVqg2cQvBK
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

On Mon, Dec 17, 2018 at 10:39:10PM -0800, Richard Henderson wrote:
> Signed-off-by: Richard Henderson <richard.henderson@linaro.org>

Acked-by: David Gibson <david@gibson.dropbear.id.au>

> ---
>  target/ppc/helper.h                 | 24 ++++++------
>  target/ppc/int_helper.c             | 18 ++-------
>  target/ppc/translate/vmx-impl.inc.c | 57 +++++++++++++++++++++++------
>  3 files changed, 61 insertions(+), 38 deletions(-)
>=20
> diff --git a/target/ppc/helper.h b/target/ppc/helper.h
> index 7dbb08b9dd..3daf6bf863 100644
> --- a/target/ppc/helper.h
> +++ b/target/ppc/helper.h
> @@ -219,18 +219,18 @@ DEF_HELPER_2(vprtybq, void, avr, avr)
>  DEF_HELPER_3(vsubcuw, void, avr, avr, avr)
>  DEF_HELPER_2(lvsl, void, avr, tl)
>  DEF_HELPER_2(lvsr, void, avr, tl)
> -DEF_HELPER_4(vaddsbs, void, env, avr, avr, avr)
> -DEF_HELPER_4(vaddshs, void, env, avr, avr, avr)
> -DEF_HELPER_4(vaddsws, void, env, avr, avr, avr)
> -DEF_HELPER_4(vsubsbs, void, env, avr, avr, avr)
> -DEF_HELPER_4(vsubshs, void, env, avr, avr, avr)
> -DEF_HELPER_4(vsubsws, void, env, avr, avr, avr)
> -DEF_HELPER_4(vaddubs, void, env, avr, avr, avr)
> -DEF_HELPER_4(vadduhs, void, env, avr, avr, avr)
> -DEF_HELPER_4(vadduws, void, env, avr, avr, avr)
> -DEF_HELPER_4(vsububs, void, env, avr, avr, avr)
> -DEF_HELPER_4(vsubuhs, void, env, avr, avr, avr)
> -DEF_HELPER_4(vsubuws, void, env, avr, avr, avr)
> +DEF_HELPER_FLAGS_5(vaddsbs, TCG_CALL_NO_RWG, void, avr, avr, avr, avr, i=
32)
> +DEF_HELPER_FLAGS_5(vaddshs, TCG_CALL_NO_RWG, void, avr, avr, avr, avr, i=
32)
> +DEF_HELPER_FLAGS_5(vaddsws, TCG_CALL_NO_RWG, void, avr, avr, avr, avr, i=
32)
> +DEF_HELPER_FLAGS_5(vsubsbs, TCG_CALL_NO_RWG, void, avr, avr, avr, avr, i=
32)
> +DEF_HELPER_FLAGS_5(vsubshs, TCG_CALL_NO_RWG, void, avr, avr, avr, avr, i=
32)
> +DEF_HELPER_FLAGS_5(vsubsws, TCG_CALL_NO_RWG, void, avr, avr, avr, avr, i=
32)
> +DEF_HELPER_FLAGS_5(vaddubs, TCG_CALL_NO_RWG, void, avr, avr, avr, avr, i=
32)
> +DEF_HELPER_FLAGS_5(vadduhs, TCG_CALL_NO_RWG, void, avr, avr, avr, avr, i=
32)
> +DEF_HELPER_FLAGS_5(vadduws, TCG_CALL_NO_RWG, void, avr, avr, avr, avr, i=
32)
> +DEF_HELPER_FLAGS_5(vsububs, TCG_CALL_NO_RWG, void, avr, avr, avr, avr, i=
32)
> +DEF_HELPER_FLAGS_5(vsubuhs, TCG_CALL_NO_RWG, void, avr, avr, avr, avr, i=
32)
> +DEF_HELPER_FLAGS_5(vsubuws, TCG_CALL_NO_RWG, void, avr, avr, avr, avr, i=
32)
>  DEF_HELPER_3(vadduqm, void, avr, avr, avr)
>  DEF_HELPER_4(vaddecuq, void, avr, avr, avr, avr)
>  DEF_HELPER_4(vaddeuqm, void, avr, avr, avr, avr)
> diff --git a/target/ppc/int_helper.c b/target/ppc/int_helper.c
> index 9dbcbcd87a..22671c71e5 100644
> --- a/target/ppc/int_helper.c
> +++ b/target/ppc/int_helper.c
> @@ -583,27 +583,17 @@ VARITHFPFMA(nmsubfp, float_muladd_negate_result | f=
loat_muladd_negate_c);
>      }
> =20
>  #define VARITHSAT_DO(name, op, optype, cvt, element)                    \
> -    void helper_v##name(CPUPPCState *env, ppc_avr_t *r, ppc_avr_t *a,   \
> -                        ppc_avr_t *b)                                   \
> +    void helper_v##name(ppc_avr_t *r, ppc_avr_t *vscr_sat,              \
> +                        ppc_avr_t *a, ppc_avr_t *b, uint32_t desc)      \
>      {                                                                   \
>          int sat =3D 0;                                                  =
  \
>          int i;                                                          \
>                                                                          \
>          for (i =3D 0; i < ARRAY_SIZE(r->element); i++) {                =
  \
> -            switch (sizeof(r->element[0])) {                            \
> -            case 1:                                                     \
> -                VARITHSAT_CASE(optype, op, cvt, element);               \
> -                break;                                                  \
> -            case 2:                                                     \
> -                VARITHSAT_CASE(optype, op, cvt, element);               \
> -                break;                                                  \
> -            case 4:                                                     \
> -                VARITHSAT_CASE(optype, op, cvt, element);               \
> -                break;                                                  \
> -            }                                                           \
> +            VARITHSAT_CASE(optype, op, cvt, element);                   \
>          }                                                               \
>          if (sat) {                                                      \
> -            set_vscr_sat(env);                                          \
> +            vscr_sat->u32[0] =3D 1;                                     =
  \
>          }                                                               \
>      }
>  #define VARITHSAT_SIGNED(suffix, element, optype, cvt)          \
> diff --git a/target/ppc/translate/vmx-impl.inc.c b/target/ppc/translate/v=
mx-impl.inc.c
> index 1c0c461241..c6a53a9f63 100644
> --- a/target/ppc/translate/vmx-impl.inc.c
> +++ b/target/ppc/translate/vmx-impl.inc.c
> @@ -548,22 +548,55 @@ GEN_VXFORM(vslo, 6, 16);
>  GEN_VXFORM(vsro, 6, 17);
>  GEN_VXFORM(vaddcuw, 0, 6);
>  GEN_VXFORM(vsubcuw, 0, 22);
> -GEN_VXFORM_ENV(vaddubs, 0, 8);
> +
> +#define GEN_VXFORM_SAT(NAME, VECE, NORM, SAT, OPC2, OPC3)               \
> +static void glue(glue(gen_, NAME), _vec)(unsigned vece, TCGv_vec t,     \
> +                                         TCGv_vec sat, TCGv_vec a,      \
> +                                         TCGv_vec b)                    \
> +{                                                                       \
> +    TCGv_vec x =3D tcg_temp_new_vec_matching(t);                        =
  \
> +    glue(glue(tcg_gen_, NORM), _vec)(VECE, x, a, b);                    \
> +    glue(glue(tcg_gen_, SAT), _vec)(VECE, t, a, b);                     \
> +    tcg_gen_cmp_vec(TCG_COND_NE, VECE, x, x, t);                        \
> +    tcg_gen_or_vec(VECE, sat, sat, x);                                  \
> +    tcg_temp_free_vec(x);                                               \
> +}                                                                       \
> +static void glue(gen_, NAME)(DisasContext *ctx)                         \
> +{                                                                       \
> +    static const GVecGen4 g =3D {                                       =
  \
> +        .fniv =3D glue(glue(gen_, NAME), _vec),                         =
  \
> +        .fno =3D glue(gen_helper_, NAME),                               =
  \
> +        .opc =3D glue(glue(INDEX_op_, NORM), _vec),                     =
  \
> +        .write_aofs =3D true,                                           =
  \
> +        .vece =3D VECE,                                                 =
  \
> +    };                                                                  \
> +    if (unlikely(!ctx->altivec_enabled)) {                              \
> +        gen_exception(ctx, POWERPC_EXCP_VPU);                           \
> +        return;                                                         \
> +    }                                                                   \
> +    tcg_gen_gvec_4(avr64_offset(rD(ctx->opcode), true),                 \
> +                   offsetof(CPUPPCState, vscr_sat),                     \
> +                   avr64_offset(rA(ctx->opcode), true),                 \
> +                   avr64_offset(rB(ctx->opcode), true),                 \
> +                   16, 16, &g);                                         \
> +}
> +
> +GEN_VXFORM_SAT(vaddubs, MO_8, add, usadd, 0, 8);
>  GEN_VXFORM_DUAL_EXT(vaddubs, PPC_ALTIVEC, PPC_NONE, 0,       \
>                      vmul10uq, PPC_NONE, PPC2_ISA300, 0x0000F800)
> -GEN_VXFORM_ENV(vadduhs, 0, 9);
> +GEN_VXFORM_SAT(vadduhs, MO_16, add, usadd, 0, 9);
>  GEN_VXFORM_DUAL(vadduhs, PPC_ALTIVEC, PPC_NONE, \
>                  vmul10euq, PPC_NONE, PPC2_ISA300)
> -GEN_VXFORM_ENV(vadduws, 0, 10);
> -GEN_VXFORM_ENV(vaddsbs, 0, 12);
> -GEN_VXFORM_ENV(vaddshs, 0, 13);
> -GEN_VXFORM_ENV(vaddsws, 0, 14);
> -GEN_VXFORM_ENV(vsububs, 0, 24);
> -GEN_VXFORM_ENV(vsubuhs, 0, 25);
> -GEN_VXFORM_ENV(vsubuws, 0, 26);
> -GEN_VXFORM_ENV(vsubsbs, 0, 28);
> -GEN_VXFORM_ENV(vsubshs, 0, 29);
> -GEN_VXFORM_ENV(vsubsws, 0, 30);
> +GEN_VXFORM_SAT(vadduws, MO_32, add, usadd, 0, 10);
> +GEN_VXFORM_SAT(vaddsbs, MO_8, add, ssadd, 0, 12);
> +GEN_VXFORM_SAT(vaddshs, MO_16, add, ssadd, 0, 13);
> +GEN_VXFORM_SAT(vaddsws, MO_32, add, ssadd, 0, 14);
> +GEN_VXFORM_SAT(vsububs, MO_8, sub, ussub, 0, 24);
> +GEN_VXFORM_SAT(vsubuhs, MO_16, sub, ussub, 0, 25);
> +GEN_VXFORM_SAT(vsubuws, MO_32, sub, ussub, 0, 26);
> +GEN_VXFORM_SAT(vsubsbs, MO_8, sub, sssub, 0, 28);
> +GEN_VXFORM_SAT(vsubshs, MO_16, sub, sssub, 0, 29);
> +GEN_VXFORM_SAT(vsubsws, MO_32, sub, sssub, 0, 30);
>  GEN_VXFORM(vadduqm, 0, 4);
>  GEN_VXFORM(vaddcuq, 0, 5);
>  GEN_VXFORM3(vaddeuqm, 30, 0);

--=20
David Gibson			| I'll have my music baroque, and my code
david AT gibson.dropbear.id.au	| minimalist, thank you.  NOT _the_ _other_
				| _way_ _around_!
http://www.ozlabs.org/~dgibson

--fo/b2PYVqg2cQvBK
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEEdfRlhq5hpmzETofcbDjKyiDZs5IFAlwZ6FwACgkQbDjKyiDZ
s5LtBxAAykg39gK93WHx+PQhJnOyF7WnOAs9JrtxuuQVxSQz6kqFuyHSA4eiI0N+
mK/AX+0qc0LhUoiNEJPRE382C8sX50IcDVtcS2vbYwhBFZhV9JOT3K1ok7B9WIhE
YzYMAcdOmYB9jV7MAF9d7Kr7SH6u29HXJBY5oVd+r1IobXmpTdzlw+d6yjVDK1QZ
7vVLnhHuXCmej8hkMsAJo+K9qvTKZQtBpwXvV1WlcI+129LfE/jRxFSKuzXquWyz
zo/6r4+0mGP34Rgti/6UkLIUywKa+WKmpUzpbDrK5Iqk/d3vORXe8LwxskHaRNX8
LSKd/i24q5QqBECP6re6yho1DWZPbgPRlzhB5EgPLMP/HdlLTf9kMM+XdJoYcMno
oRur9SdCX+1dKoh9aMnq6b+kuIs0xyvvhonI9bmJMCT3H0/bqvVZyMmfjx1ihjcz
eNogshd/btWjGL1SJ9B4RUkgCg6+c+NS/fB+OpR0AfHfsybaKVfrGyqykt23rSf7
07ognbi5JjF+JflG80ZZMdoU6T5WCNN/Ht5MhyBUGXA8l0a24S/1LpEliOrMhG7D
/KdoL2l4+qaDJjYPKJ1lYBVveQSnjwrr1UUsuVeXizjx2FaS+4pefzRJCn0AaSUs
IYqSYOpUxkCS+iEM0ty2FxrIXaokCwsZbaNmfvbWA8euyDSRRUU=
=4lWW
-----END PGP SIGNATURE-----

--fo/b2PYVqg2cQvBK--

