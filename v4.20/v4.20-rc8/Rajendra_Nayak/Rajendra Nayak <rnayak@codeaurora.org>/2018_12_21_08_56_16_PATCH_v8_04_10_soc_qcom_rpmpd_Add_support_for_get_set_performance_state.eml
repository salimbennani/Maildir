Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:47:34 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 8C30C580522;
	Fri, 21 Dec 2018 00:56:55 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga004-1.fm.intel.com with ESMTP; 21 Dec 2018 00:56:54 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AjX2s7xdbAduAeBpsROSl7xgSlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc6+YxWN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4qF2QxHqlS?=
 =?us-ascii?q?gHLSY0/mHJhMJtgqxVoxWvqB5xw4Hbb4+VL+J+c6HGcN8GRmdMRNpdWjZdDo+g?=
 =?us-ascii?q?aYYEEuoPPfxfr4n4v1YAsQGxBQuyC+Pp1zBInGX51rAi3es7EQDJxg8gFM8JvX?=
 =?us-ascii?q?TOqtX6LqcTXvq2zKTT0TrDaO5Z1inn54jVaBAhpuuMUqhqfcrW00kvGBrIg1ON?=
 =?us-ascii?q?ooLmJzOYzvoBv3Sf4uZ6SO6ihXArpxtsrjWs2ssgkIjEi4ANxlzZ6Sl0zpw5Kc?=
 =?us-ascii?q?OmREN/e9KoDZhduzuHO4ZyRM4pXntmtzwgyrIcvJ62ZCgKx4ojxx7Yc/GHbYeI?=
 =?us-ascii?q?7Qz5VOqLIjd3mmhleLShiBa260Sgzff8Vsas3FZLqCpKjMXMu2gT2xDP7sWLUO?=
 =?us-ascii?q?Zx80m/1TqVygze6f1ILVo1mKfZM5Ihx6Q/lpsXsUTNBC/2n0D2gbeSdkUl/Oio?=
 =?us-ascii?q?9uvmbqzlppCCLY90jB/xMqA3lsy4D+U4NBYBX3KA9OSi273s41f5TK9JjvIoiK?=
 =?us-ascii?q?nZto7VJcABqq6+GQ9V3Z4v6wyjADe+zNQYgX4HIUpBeBKGjIjmJUvCIf/lDfqk?=
 =?us-ascii?q?h1SskTFrx+3JP7H7A5XNKGTDn6nlfbpn90Fczw8zx8hF551IErEBPO7zWkjpud?=
 =?us-ascii?q?zYFBA5MhC0zPzgCNln1oMeRHiAAqmWMK7JtV+I5+QvI/SDZYMPuTb9LeQl6ODq?=
 =?us-ascii?q?jXMjhVAdeqyp14MNaH+kBvRmP1mZYX30j9gbCmcKvg0+TO/whF2YSzFTZW2/X6?=
 =?us-ascii?q?Y95jE9FYKnAp3PRoGrgLydwii7GodaaXxBClCJCX3obZmLW+8QaCKOJc9sij8E?=
 =?us-ascii?q?WqKnS4M70RGutRX1y7xoLufP/i0YtJTj1MV65uHJlBEy8yB0ANqZ022XU250mW?=
 =?us-ascii?q?YITScs3K9juUx91kuD0a9gjvNFD9NT+e1GXh06NZHGyex6EM79WgTGcteNS1am?=
 =?us-ascii?q?R9GmDCo1TtIwxd8Ofkl8F8+jjhDFwyqlHbsVm6aXC5wz96LWx2LxKNply3bayK?=
 =?us-ascii?q?khiEErTdZVOm24mKFz7QjTCJTPk0WCiamqc78R3CrM9GeF0GqPs1tUUA92UaXZ?=
 =?us-ascii?q?Q38fYlHaosj+5kPHV7WuE6goMhNdyc6eLatHcsHpjVRDRPfkJNTeY2Kwl32sBR?=
 =?us-ascii?q?qSwbOMdo7qe2Qb3CXSE0UElwET/XCbNQkxHCuhomTeDCBwGlLreU/j7e5+qHaj?=
 =?us-ascii?q?RE8u0w6Kd1Fh16ay+hMNn/OcT+0c370atyYhsTl7B0u90M/MBNqGpAphe7tcbM?=
 =?us-ascii?q?g54FdG02LZqgN8MoahL6Bkml4RbQB3s1ny2BVwD4VKidIqo28yzApuNaKY10tM?=
 =?us-ascii?q?djOF3ZzqJrLbMGjz/BC1ZK7Q1VHTy9KW+qYJ6PQlpFTvpgCpFkw+83p519lZyW?=
 =?us-ascii?q?eT5pLPDAAKS5L+Tl439wRmp7HdeiQ9/YLU2mF2PqmurzDC3MglBO07xRa6ftdT?=
 =?us-ascii?q?Kb+LGxX2E8IHGceuMusqm16yYxIAPeBS8rM0Psy8e/uH3q6rIPhvnDa8gWtb54?=
 =?us-ascii?q?B911qG9zBgRe7Qw5YF3/aY0xOHVjf9llugstr7mZtZZTEUBWe/zSnkBIhMZqx9?=
 =?us-ascii?q?Z4oLCGGuI9GpydV6nZLiR3lY9Fu7DVMcxMCpYQaSb0D63QBI10QYu2anmSi7zz?=
 =?us-ascii?q?xziT0ptbCQ3C/Nw+TjchoIJGhLSXJmjVftJ4i0kt8bUFKpbwgviBuq+0L6y7JH?=
 =?us-ascii?q?q6R4KmnZWV1IcDTuL2F+TquwsaKPYs5V55MvqylXUuW8YVaBR775ohsa1T7jHm?=
 =?us-ascii?q?REyDA6cTGqpov2nxhghG2BK3ZzqWLTedtsyhfH+NzcWflR0yIFRCZiiDnbHFi8?=
 =?us-ascii?q?P8Sz8tWSmJfOqeS+V2OnVp1Ofijn14KAtC2n5WJ0BR2zhey8mtriEQIiyy/0y8?=
 =?us-ascii?q?FqVTnUrBb7eoTr0qW6MeF9cUVyCl7z9dF6Gp1gnYsqn54fx2IahpqO8HoDkGfz?=
 =?us-ascii?q?N8hb2K3kYHoMQz4L38Da4Az/1EJ/KXKJwprzVm+Bzct5e9m6fmQW1zoh78BNDa?=
 =?us-ascii?q?eY9r1FkjFzolqltgLRevl9kywZyfsv7n4anu4ItBAsziWbHrAdA01YMTbwmBSP?=
 =?us-ascii?q?6tC0tL9Xa3q3cbisyEp+msisA6qYrQFbXHb5Z40uHStt7shkNFLM0Xvz6pzred?=
 =?us-ascii?q?XKbNITsAGUnAnEj+RPNJ0xkf8KjzJ9OW3hpX0l1/I7jRt20JG4poeHLnti/Lmj?=
 =?us-ascii?q?Dh5ELDH1ZN4T+jLwjaZYhMmWxJuiHpFgGjUNQZvpQuikEDMUtfT7KQmOFCcwpW?=
 =?us-ascii?q?ucGbraBQWf8ltpr2rTE5C3MHGaPHkYzdJ/RBmEOUxQmgYUUC8hnp4+EACqy9fs?=
 =?us-ascii?q?cEN45jAX+175pQFAyuNuNxnjTGjfoB2kZSszSJiaNBBW9B1N51/JMcyC6eJ+By?=
 =?us-ascii?q?FY8YOgrAyOKWybZh5EDWITWkyDCFDsIKOu5cTb8+WDAuq+Lv3OYaiBqOBEVveI?=
 =?us-ascii?q?w46v3ZVi/zqWKsqPOXxiBeUh2kVfRXB5B9jZmzIXRiMNiiLCdNSbqwm8+yFtqs?=
 =?us-ascii?q?C/8e/mWAbu5YuJFrtTPs9j+xGwgaefKeGQgDx1Jipf1pMJ3XXI0qQQ3EYOiyFy?=
 =?us-ascii?q?cDmgCagAtS/ITK7KhqBbFQIUayNtO8tO9K882ghNOcjGitL6zLJ4j/g1C0tbWl?=
 =?us-ascii?q?zlgM2mecsKI2SlPlPdGEmLLKiGJSHMw8zvYaKzU7tQjOBVtx22oTmaEk/jMS6F?=
 =?us-ascii?q?lznmTB2vNeBMjCeGPB1Roo29cxBtCXT9Q9LicBG0LNh3jThliYEz03rMOX9aPi?=
 =?us-ascii?q?J7aFhlqryW5DlfxPJlFCgJ9H1vLcGHljyf4u2eLYwZ9bN1Az55jOIc42k/wqF9?=
 =?us-ascii?q?6CBCTeZy3izIoZomuFuhg+WnyTd9VhdK7DFRi8bDoEFsf6XQ8IJbXnDs+BML5H?=
 =?us-ascii?q?+XTRMQqJ8tAdrrv6FW0dTnn6X/JT5f6dXO9I0bHceQYMeEOVIqMQDuHT/JCU0C?=
 =?us-ascii?q?VzH4G3vYghlnmfOf8HGPp9Aco4nlm9JaULlSRVU2PvgdBklsAcYFOp4xWSkrx+?=
 =?us-ascii?q?3IxPUU7Gaz+UGCDP5RuYrKA6qf?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AvAAD4ohxch0O0hNFkHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwEBgX+BayeMFl+LHYIhl0uBcRcYEwGHLiI0CQ0BAwEBAQEBAQIBEwEBAQg?=
 =?us-ascii?q?NCQgpIwxCFgGBYSKCbwMDAQIkCwENAQE3AQUJAQFQAykrBwoIBYMdggEBBaVcg?=
 =?us-ascii?q?WwzgnYBAQWHMQiHfoMlgRwXgUA/gRGNcpBdkBhLCZFaJIl6h2WJUJBDgUaCDjM?=
 =?us-ascii?q?aCCgIgyeCG4kBhUc4MoEFAQGIKoVuAQE?=
X-IPAS-Result: =?us-ascii?q?A0AvAAD4ohxch0O0hNFkHQEBBQEHBQGBUQgBCwEBgX+Baye?=
 =?us-ascii?q?MFl+LHYIhl0uBcRcYEwGHLiI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpIwxCFgGBY?=
 =?us-ascii?q?SKCbwMDAQIkCwENAQE3AQUJAQFQAykrBwoIBYMdggEBBaVcgWwzgnYBAQWHMQi?=
 =?us-ascii?q?HfoMlgRwXgUA/gRGNcpBdkBhLCZFaJIl6h2WJUJBDgUaCDjMaCCgIgyeCG4kBh?=
 =?us-ascii?q?Uc4MoEFAQGIKoVuAQE?=
X-IronPort-AV: E=Sophos;i="5.56,380,1539673200"; 
   d="scan'208";a="44958871"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 21 Dec 2018 00:56:53 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2388538AbeLUI4u (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Fri, 21 Dec 2018 03:56:50 -0500
Received: from smtp.codeaurora.org ([198.145.29.96]:35706 "EHLO
        smtp.codeaurora.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2388486AbeLUI4t (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 21 Dec 2018 03:56:49 -0500
Received: by smtp.codeaurora.org (Postfix, from userid 1000)
        id E1092608CB; Fri, 21 Dec 2018 08:56:48 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
        s=default; t=1545382608;
        bh=fR6Rf2sFg62NX7SbCiacseBN81PNon3xVk+LaKrehW0=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=jUrCckvPlUL4A6LIRmcMLeeAfscawAwnRacl9RPXUvGybXKcVkbzysuIvwvnvLli/
         Hmh+vqHXmNLRiSAbohPjHG5dogYs2f0fJb/eCKND1YWsWJ71uvFHZD/XYVxVW/ugPk
         O0L0BLAYxiAvPU+RHkM9CtXXvWEajD3dV3X5Snao=
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
        pdx-caf-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-2.7 required=2.0 tests=ALL_TRUSTED,BAYES_00,
        DKIM_INVALID,DKIM_SIGNED autolearn=no autolearn_force=no version=3.4.0
Received: from blr-ubuntu-173.qualcomm.com (blr-bdr-fw-01_globalnat_allzones-outside.qualcomm.com [103.229.18.19])
        (using TLSv1.2 with cipher ECDHE-RSA-AES128-SHA256 (128/128 bits))
        (No client certificate requested)
        (Authenticated sender: rnayak@smtp.codeaurora.org)
        by smtp.codeaurora.org (Postfix) with ESMTPSA id 13CFE608CB;
        Fri, 21 Dec 2018 08:56:44 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
        s=default; t=1545382608;
        bh=fR6Rf2sFg62NX7SbCiacseBN81PNon3xVk+LaKrehW0=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=jUrCckvPlUL4A6LIRmcMLeeAfscawAwnRacl9RPXUvGybXKcVkbzysuIvwvnvLli/
         Hmh+vqHXmNLRiSAbohPjHG5dogYs2f0fJb/eCKND1YWsWJ71uvFHZD/XYVxVW/ugPk
         O0L0BLAYxiAvPU+RHkM9CtXXvWEajD3dV3X5Snao=
DMARC-Filter: OpenDMARC Filter v1.3.2 smtp.codeaurora.org 13CFE608CB
Authentication-Results: pdx-caf-mail.web.codeaurora.org; dmarc=none (p=none dis=none) header.from=codeaurora.org
Authentication-Results: pdx-caf-mail.web.codeaurora.org; spf=none smtp.mailfrom=rnayak@codeaurora.org
From: Rajendra Nayak <rnayak@codeaurora.org>
To: andy.gross@linaro.org, robh@kernel.org, viresh.kumar@linaro.org,
        sboyd@kernel.org, ulf.hansson@linaro.org, collinsd@codeaurora.org,
        mka@chromium.org
Cc: devicetree@vger.kernel.org, linux-arm-msm@vger.kernel.org,
        linux-kernel@vger.kernel.org,
        Rajendra Nayak <rnayak@codeaurora.org>
Subject: [PATCH v8 04/10] soc: qcom: rpmpd: Add support for get/set performance state
Date: Fri, 21 Dec 2018 14:26:16 +0530
Message-Id: <20181221085622.25573-5-rnayak@codeaurora.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181221085622.25573-1-rnayak@codeaurora.org>
References: <20181221085622.25573-1-rnayak@codeaurora.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Add support for the .set_performace_state() and .opp_to_performance_state()
callbacks in the rpmpd driver.

Signed-off-by: Rajendra Nayak <rnayak@codeaurora.org>
Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
Reviewed-by: Ulf Hansson <ulf.hansson@linaro.org>
Reviewed-by: Stephen Boyd <swboyd@chromium.org>
---
 drivers/soc/qcom/rpmpd.c | 44 ++++++++++++++++++++++++++++++++++++++++
 1 file changed, 44 insertions(+)

diff --git a/drivers/soc/qcom/rpmpd.c b/drivers/soc/qcom/rpmpd.c
index 7715ba7c9157..59e21c88a144 100644
--- a/drivers/soc/qcom/rpmpd.c
+++ b/drivers/soc/qcom/rpmpd.c
@@ -10,6 +10,7 @@
 #include <linux/of.h>
 #include <linux/of_device.h>
 #include <linux/platform_device.h>
+#include <linux/pm_opp.h>
 #include <linux/soc/qcom/smd-rpm.h>
 
 #include <dt-bindings/mfd/qcom-rpm.h>
@@ -26,6 +27,8 @@
 #define KEY_ENABLE		0x6e657773 /* swen */
 #define KEY_FLOOR_CORNER	0x636676   /* vfc */
 
+#define MAX_RPMPD_STATE		6
+
 #define DEFINE_RPMPD_CORNER_SMPA(_platform, _name, _active, r_id)		\
 	static struct rpmpd _platform##_##_active;			\
 	static struct rpmpd _platform##_##_name = {			\
@@ -218,6 +221,45 @@ static int rpmpd_power_off(struct generic_pm_domain *domain)
 	return ret;
 }
 
+static int rpmpd_set_performance(struct generic_pm_domain *domain,
+				 unsigned int state)
+{
+	int ret = 0;
+	struct rpmpd *pd = domain_to_rpmpd(domain);
+
+	if (state > MAX_RPMPD_STATE)
+		goto out;
+
+	mutex_lock(&rpmpd_lock);
+
+	pd->corner = state;
+
+	if (!pd->enabled && pd->key != KEY_FLOOR_CORNER)
+		goto out;
+
+	ret = rpmpd_aggregate_corner(pd);
+
+out:
+	mutex_unlock(&rpmpd_lock);
+
+	return ret;
+}
+
+static unsigned int rpmpd_get_performance(struct generic_pm_domain *genpd,
+					  struct dev_pm_opp *opp)
+{
+	struct device_node *np;
+	unsigned int corner = 0;
+
+	np = dev_pm_opp_get_of_node(opp);
+	if (of_property_read_u32(np, "qcom,level", &corner))
+		pr_err("%s: missing 'qcom,level' property\n", __func__);
+
+	of_node_put(np);
+
+	return corner;
+}
+
 static int rpmpd_probe(struct platform_device *pdev)
 {
 	int i;
@@ -258,6 +300,8 @@ static int rpmpd_probe(struct platform_device *pdev)
 		rpmpds[i]->rpm = rpm;
 		rpmpds[i]->pd.power_off = rpmpd_power_off;
 		rpmpds[i]->pd.power_on = rpmpd_power_on;
+		rpmpds[i]->pd.set_performance_state = rpmpd_set_performance;
+		rpmpds[i]->pd.opp_to_performance_state = rpmpd_get_performance;
 		pm_genpd_init(&rpmpds[i]->pd, NULL, true);
 
 		data->domains[i] = &rpmpds[i]->pd;
-- 
QUALCOMM INDIA, on behalf of Qualcomm Innovation Center, Inc. is a member
of Code Aurora Forum, hosted by The Linux Foundation

