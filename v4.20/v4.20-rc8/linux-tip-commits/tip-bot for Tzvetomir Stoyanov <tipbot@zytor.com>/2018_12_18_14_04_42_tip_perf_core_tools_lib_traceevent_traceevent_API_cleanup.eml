Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  19 Dec 2018 08:37:36 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga007.fm.intel.com (fmsmga007.fm.intel.com [10.253.24.52])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id D559558055F;
	Tue, 18 Dec 2018 06:04:56 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga007-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 18 Dec 2018 06:04:56 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AGdAmdRM90W6kLorFa8Il6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPv6rsbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Xymp4aV2Rx/ykC?=
 =?us-ascii?q?oJOT43/mLNisNygqJVvg+vqRtwzIDbfI6aKeF+frvfcN4BWWpMXdxcWzBbD4+g?=
 =?us-ascii?q?bYYCCfcKM+ZCr4n6olsDtQe+BQi0BO/20TBIgWP21rA00+QmCwHNwRIuHtMQsH?=
 =?us-ascii?q?vKsNX1M6ISUeGvzKLV0DvDc/RW2Dfn54jOdRAhv+yHULVsccrQ0UkgDATFjkmL?=
 =?us-ascii?q?pI3kPzKVyuMNs3KB4+V8UuKvjncqpgdsqTahwccsj5PGhoMTyl3c9iV23pw1Jd?=
 =?us-ascii?q?umR05/e9KkF4FQty6cOoBrQc0iW3lltDgmxrACo5K3YSYHxIo9yxLCaPGLb5KE?=
 =?us-ascii?q?7xPhWeqJPDt1gHFodKiiixu880Ws0PPwWtWq3FpQsyZInNjBu3YQ3BLJ8MeHUO?=
 =?us-ascii?q?Fy/kK51DaPyQ/T7uZELFgqlarUNZEh2KQ8lpkNvkTZGC/5hkH2gLWRdkU+9eik?=
 =?us-ascii?q?8+XnYrP4qZ+AL4J4lB3yP6A0lsCiD+k0LBICU3WY9OigzrHu/E/0TK1PjvIsk6?=
 =?us-ascii?q?nZtJ7aJd4cpq68GwJV1ocj6xCiDzapydgYnmcILEhDeB2Zi4jlIlbOIf7+Dfih?=
 =?us-ascii?q?mVShiylrx//YMb37GJnNLWbMkK3nfblj705Q0g0zzcpQ555MELEOPOrzWlPttN?=
 =?us-ascii?q?zfFhI5Nw20w+X5B9ln2YIeRHmCAquYMKPUrF+J6fgjI+iKZI8Jpjn9L+Ip6OLp?=
 =?us-ascii?q?jX88gVUdZ7Wm3YMLaHCkGfRrO0WZbmDtgtcdC2gKuRAyTOz3iFKYVz5TaG2/X6?=
 =?us-ascii?q?Y95jE9FYKnAp3PRoGrgLydwii7GodaaXxBClCJCX3obZmLW+8QaCKOJc9sij4E?=
 =?us-ascii?q?Vb+/RIM71hGuswn6y7xgLufP/i0YtJTj1MV65uHJlBEy8yB0ANqZ022XU250mW?=
 =?us-ascii?q?YITScs3K9juUx91kuD0a9gjvNCDtxT5/RJUgQgOZ7G1eN6Ccv/WgbAftePVVan?=
 =?us-ascii?q?Tc+qATA3TtIt3dAOZ1xxFMmljhDGxyCqGaMal6SXBJwo9aLRx3vxKNx7y3rc0K?=
 =?us-ascii?q?khjkMpQs1ANWC9gq5/9g7TB5PGkkmDlqaqc7gc0zDJ9GuZ0WWOu0RYWhZqUarZ?=
 =?us-ascii?q?RXAfelfWrdPh60zfVbCuF6ooPhFBycGYLKtKccPmjVNBSPfnO9TeZmaxlny0BR?=
 =?us-ascii?q?aJwLOMcYXrd38c3CXbFEgLjQQT8WyaOgg5Ayeru3jeAyB2FVLzf0Ps9vFzp26h?=
 =?us-ascii?q?QU8q0Q6GdU1h2KCz+h4Om/OcTege3rYFuCcntjV1E0yx39PQC9qcuQVheL9Qbs?=
 =?us-ascii?q?864FdCzWjZrRByPoS8L6B+gV4Taxh3v0Lr1xVwFoVAkcgroGk2zAZoLqKYyldB?=
 =?us-ascii?q?dzKe3ZD/IbDXLmjy/Baya6/ZwF3e0dCW+rsR5/Q8sVnsoAapFk86+XV9z9ZVy2?=
 =?us-ascii?q?ec5onNDAcKS53xVlg49hdkqLDaeCUy/J7U2mB2PqmysT/C3MwpCfAhyhaheddf?=
 =?us-ascii?q?LayFGBXzE80cG8ihNugql0K1YRIDOeBY7LQ0MN++d/uaxK6rO/5tnTK7jWhd/I?=
 =?us-ascii?q?9xyEON9ypmRe7O0JYI2PWY3gqBVzfhg1atqMH3mYZYZT4MGmqz0zTrBIlUZqdq?=
 =?us-ascii?q?Z4YEFX+uI9GrxtV5n5PtQX9Y+0K5CFMcxcCpfgCeb1rj0g1K1EQbuGColjG8zz?=
 =?us-ascii?q?NpjT4ptK2f3CrVzuTmdRoHPHNLRWZ4gVftJ4i0k84VXEyyYwc1kxul4F7wx7JH?=
 =?us-ascii?q?q6RnM2nTXUBIcjD2LmFjSKextqCOY9VS6JMuqihXVOW8YVaHSr/yuRca0iXjH3?=
 =?us-ascii?q?dAyzA/bT2lppL5nxligmKHMHlztGbZed13xRrH5tzTX+RR3jkFRCl/kzXXHUKz?=
 =?us-ascii?q?P9qq/dWVkZfMrOa+WnmlVp1Sdynr0IyBuDG65W1sHR2wgfSzlsf7Hgg91C/xz8?=
 =?us-ascii?q?NqWjnQrBbgfonr0Ly3MOJ9cUlvHlP86ct6Godln4s0hZEQ32Uah5qP8XoGl2fz?=
 =?us-ascii?q?LctU2abkYHURQj4Lxsbf4BL51017MnKJ24X5W22ewsR7Ztm2eGMW2j8n4MBMB6?=
 =?us-ascii?q?eZ97hEnSpzolqlogPde/l9njEByfQw7H4Wmf0GuA0ozi+FGLAdAVFYPTDwlxSP?=
 =?us-ascii?q?992+qaRXZGW1frSq2ktxg8uhDK2crQFGQ3n2ZI0iHSBr48V7MVLM1mDz647+dN?=
 =?us-ascii?q?nRa9ITqgObkxPag+dJL5Ixk+IAhTB7NmLloX0l1+k7gARy3ZG9uYiLMWRs87i/?=
 =?us-ascii?q?Ah5FLT31fMIT9yrpjaZfmMaWwo+uEo9gGjUNQJvnU/aoHCgOuvTgMgaECCc8pW?=
 =?us-ascii?q?uDGbrDAQ+f719roGnVHJCsM3GXOWMVzdF/RBSGIExfgQYUXCg1n5IjFwCqwtDh?=
 =?us-ascii?q?f1l95jwL+lH4rR5MwPpyNxbjSmffuBuoajAsRZidNhVW6x9N51zPPcyC9O5zHD?=
 =?us-ascii?q?xY/p68rAyLMGObfB9FDWUIWkyCGlDiMaOi5djG8+iEGOW+K+HCbqmJqexbT/2I?=
 =?us-ascii?q?346g0pN6/zaQMcWCJnljD/om2kpaQHB2AcLZly8USywQkSLNYNWWpBO9+i1xs8?=
 =?us-ascii?q?C+/+7nWAPp5YuTFbRSNc9j9AyxgaeGL+SQnjp2KS5E1pMQwn/F0Lgf00ATiyFt?=
 =?us-ascii?q?dDmtEK4MtS3XTKLXla9YEQQbaz5oNMZT66I83w9NOdPUi9/v1754iOI1BElBVV?=
 =?us-ascii?q?D7hs6pYskKKXmnNFzbHEaLKKiGJTrTzs7tfKOzUqdQg/tUthGqvTabElTuPjCC?=
 =?us-ascii?q?lznvShCuPvtAjCCdPBxCpo69dgxhBnTkTNLjche7KsN4jSUqwb0ogXPHLXIcMT?=
 =?us-ascii?q?l5c09XsrKc9z9XgvVhFGxH9XdlKeiEmyCE7+jXMJoWsP1rAjhqmOJe+ng117xV?=
 =?us-ascii?q?7CRcTvxvhCTStsJuo02hkuSXyjtoShxOqjNKhIKNpUpjOKXZ+YNGWXbL5x8N6W?=
 =?us-ascii?q?SQCxIXp9pqENHvuqZQysTRm6L3MjtN79XU/c5PT/TTfcaGNmcxdAboAHvfCw4A?=
 =?us-ascii?q?TCKwHX/QilYbk/yI8HCR6J8gpcvWlYIKW4NcAVU2DvYyDkVjAcxHLpBqWD8tjb?=
 =?us-ascii?q?+ciogP/3X65AXeQNVyupHBS+6IBvPuOHCVgP0MYhoOzrTQLokJMID/nUt4ZR0y?=
 =?us-ascii?q?mo3PG1vNW99loSB7aAIw5kJX/zw2TnU681D0dgS3pnQUELr8ggUqjRp3Z+Mz3C?=
 =?us-ascii?q?np/F4tKxzBoy502EA6nNjNmz2dcDftaqy3WMUeCS3wrEEZKJ73Qw9pKwa1mAgs?=
 =?us-ascii?q?MDbCWqIUjLZ6c21voBHTtIEJGvNGS6BAJhgKyrXfffIzzVlQtg2owkhL4OreT5?=
 =?us-ascii?q?x4m1gEa5mp+m5Bw0dpa8J9K6vKbJZb0FVMgaePpGeTyucgyQkZOQ5Z7GKKcikU?=
 =?us-ascii?q?kF4ZKr48YSGv+7o/ukS5hzJfdT1UBLIRqfVw+xZlNg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BcAADK/Rhch0O0hNFkHgEGBwaBUggLA?=
 =?us-ascii?q?QGBWYEPgQIng3yIeIsZAYIhjjGJFSCBUxMBARgLCAGHHSI1CA0BAwEBAQEBAQI?=
 =?us-ascii?q?BEwEBAQoLCQgpIwxCFgGBXSKCZQMDAQIgBAUGAUYGCQEBJAImAgIDVBkFA4JPS?=
 =?us-ascii?q?wGCAAUKp0p8Mx6EDwGBA4UDE3iLNBeBf4wsglcCiUaGDH6QDEgJhw+DQ4cmgiq?=
 =?us-ascii?q?PLYs3gwSLEQIEAgQFAhSBRwGCDE0jFYFvDgsBDIESCQqCFBeIXoVgHgEyAQEIe?=
 =?us-ascii?q?wEBiAqFaQEB?=
X-IPAS-Result: =?us-ascii?q?A0BcAADK/Rhch0O0hNFkHgEGBwaBUggLAQGBWYEPgQIng3y?=
 =?us-ascii?q?IeIsZAYIhjjGJFSCBUxMBARgLCAGHHSI1CA0BAwEBAQEBAQIBEwEBAQoLCQgpI?=
 =?us-ascii?q?wxCFgGBXSKCZQMDAQIgBAUGAUYGCQEBJAImAgIDVBkFA4JPSwGCAAUKp0p8Mx6?=
 =?us-ascii?q?EDwGBA4UDE3iLNBeBf4wsglcCiUaGDH6QDEgJhw+DQ4cmgiqPLYs3gwSLEQIEA?=
 =?us-ascii?q?gQFAhSBRwGCDE0jFYFvDgsBDIESCQqCFBeIXoVgHgEyAQEIewEBiAqFaQEB?=
X-IronPort-AV: E=Sophos;i="5.56,368,1539673200"; 
   d="scan'208";a="55630554"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 18 Dec 2018 06:04:55 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726859AbeLROEw (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 18 Dec 2018 09:04:52 -0500
Received: from terminus.zytor.com ([198.137.202.136]:58361 "EHLO
        terminus.zytor.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726593AbeLROEw (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 18 Dec 2018 09:04:52 -0500
Received: from terminus.zytor.com (localhost [127.0.0.1])
        by terminus.zytor.com (8.15.2/8.15.2) with ESMTPS id wBIE4gKk2853100
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NO);
        Tue, 18 Dec 2018 06:04:42 -0800
Received: (from tipbot@localhost)
        by terminus.zytor.com (8.15.2/8.15.2/Submit) id wBIE4gaG2853097;
        Tue, 18 Dec 2018 06:04:42 -0800
Date: Tue, 18 Dec 2018 06:04:42 -0800
X-Authentication-Warning: terminus.zytor.com: tipbot set sender to tipbot@zytor.com using -f
From: tip-bot for Tzvetomir Stoyanov <tipbot@zytor.com>
Message-ID: <tip-6cd99d21741dbffb40e28ab7d955b27d09c3352f@git.kernel.org>
Cc: rostedt@goodmis.org, linux-kernel@vger.kernel.org,
        jolsa@redhat.com, acme@redhat.com, tstoyanov@vmware.com,
        namhyung@kernel.org, hpa@zytor.com, mingo@kernel.org,
        tglx@linutronix.de, akpm@linux-foundation.org
Reply-To: akpm@linux-foundation.org, tglx@linutronix.de, mingo@kernel.org,
          namhyung@kernel.org, hpa@zytor.com, tstoyanov@vmware.com,
          acme@redhat.com, jolsa@redhat.com, linux-kernel@vger.kernel.org,
          rostedt@goodmis.org
In-Reply-To: <20181130154647.891651290@goodmis.org>
References: <20181130154647.891651290@goodmis.org>
To: linux-tip-commits@vger.kernel.org
Subject: [tip:perf/core] tools lib traceevent: traceevent API cleanup
Git-Commit-ID: 6cd99d21741dbffb40e28ab7d955b27d09c3352f
X-Mailer: tip-git-log-daemon
Robot-ID: <tip-bot.git.kernel.org>
Robot-Unsubscribe: Contact <mailto:hpa@kernel.org> to get blacklisted from
 these emails
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline
X-Spam-Status: No, score=-2.9 required=5.0 tests=ALL_TRUSTED,BAYES_00,
        T_DATE_IN_FUTURE_96_Q autolearn=ham autolearn_force=no version=3.4.2
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on terminus.zytor.com
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Commit-ID:  6cd99d21741dbffb40e28ab7d955b27d09c3352f
Gitweb:     https://git.kernel.org/tip/6cd99d21741dbffb40e28ab7d955b27d09c3352f
Author:     Tzvetomir Stoyanov <tstoyanov@vmware.com>
AuthorDate: Fri, 30 Nov 2018 10:44:10 -0500
Committer:  Arnaldo Carvalho de Melo <acme@redhat.com>
CommitDate: Mon, 17 Dec 2018 14:56:10 -0300

tools lib traceevent: traceevent API cleanup

In order to make libtraceevent into a proper library, its API should be
straightforward. This patch hides few API functions, intended for
internal usage only:

tep_free_event(), tep_free_format_field(), __tep_data2host2(),
__tep_data2host4() and __tep_data2host8().
The patch also alignes the libtraceevent summary man page with
these API changes.

Signed-off-by: Tzvetomir Stoyanov <tstoyanov@vmware.com>
Cc: Andrew Morton <akpm@linux-foundation.org>
Cc: Jiri Olsa <jolsa@redhat.com>
Cc: Namhyung Kim <namhyung@kernel.org>
Link: http://lkml.kernel.org/r/20181130154647.891651290@goodmis.org
Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
---
 tools/lib/traceevent/event-parse-api.c   |  6 +++---
 tools/lib/traceevent/event-parse-local.h |  7 +++++++
 tools/lib/traceevent/event-parse.c       | 13 ++++++++-----
 tools/lib/traceevent/event-parse.h       | 16 ----------------
 4 files changed, 18 insertions(+), 24 deletions(-)

diff --git a/tools/lib/traceevent/event-parse-api.c b/tools/lib/traceevent/event-parse-api.c
index 0dc011154ee9..8b31c0e00ba3 100644
--- a/tools/lib/traceevent/event-parse-api.c
+++ b/tools/lib/traceevent/event-parse-api.c
@@ -51,7 +51,7 @@ void tep_set_flag(struct tep_handle *tep, int flag)
 		tep->flags |= flag;
 }
 
-unsigned short __tep_data2host2(struct tep_handle *pevent, unsigned short data)
+unsigned short tep_data2host2(struct tep_handle *pevent, unsigned short data)
 {
 	unsigned short swap;
 
@@ -64,7 +64,7 @@ unsigned short __tep_data2host2(struct tep_handle *pevent, unsigned short data)
 	return swap;
 }
 
-unsigned int __tep_data2host4(struct tep_handle *pevent, unsigned int data)
+unsigned int tep_data2host4(struct tep_handle *pevent, unsigned int data)
 {
 	unsigned int swap;
 
@@ -80,7 +80,7 @@ unsigned int __tep_data2host4(struct tep_handle *pevent, unsigned int data)
 }
 
 unsigned long long
-__tep_data2host8(struct tep_handle *pevent, unsigned long long data)
+tep_data2host8(struct tep_handle *pevent, unsigned long long data)
 {
 	unsigned long long swap;
 
diff --git a/tools/lib/traceevent/event-parse-local.h b/tools/lib/traceevent/event-parse-local.h
index 94746efef433..9a092dd4a86d 100644
--- a/tools/lib/traceevent/event-parse-local.h
+++ b/tools/lib/traceevent/event-parse-local.h
@@ -89,4 +89,11 @@ struct tep_handle {
 	char *trace_clock;
 };
 
+void tep_free_event(struct tep_event *event);
+void tep_free_format_field(struct tep_format_field *field);
+
+unsigned short tep_data2host2(struct tep_handle *pevent, unsigned short data);
+unsigned int tep_data2host4(struct tep_handle *pevent, unsigned int data);
+unsigned long long tep_data2host8(struct tep_handle *pevent, unsigned long long data);
+
 #endif /* _PARSE_EVENTS_INT_H */
diff --git a/tools/lib/traceevent/event-parse.c b/tools/lib/traceevent/event-parse.c
index a3e7d0a75e11..ffa656b868a9 100644
--- a/tools/lib/traceevent/event-parse.c
+++ b/tools/lib/traceevent/event-parse.c
@@ -3328,15 +3328,18 @@ tep_find_any_field(struct tep_event *event, const char *name)
 unsigned long long tep_read_number(struct tep_handle *pevent,
 				   const void *ptr, int size)
 {
+	unsigned long long val;
+
 	switch (size) {
 	case 1:
 		return *(unsigned char *)ptr;
 	case 2:
-		return tep_data2host2(pevent, ptr);
+		return tep_data2host2(pevent, *(unsigned short *)ptr);
 	case 4:
-		return tep_data2host4(pevent, ptr);
+		return tep_data2host4(pevent, *(unsigned int *)ptr);
 	case 8:
-		return tep_data2host8(pevent, ptr);
+		memcpy(&val, (ptr), sizeof(unsigned long long));
+		return tep_data2host8(pevent, val);
 	default:
 		/* BUG! */
 		return 0;
@@ -4062,7 +4065,7 @@ static void print_str_arg(struct trace_seq *s, void *data, int size,
 			f = tep_find_any_field(event, arg->string.string);
 			arg->string.offset = f->offset;
 		}
-		str_offset = tep_data2host4(pevent, data + arg->string.offset);
+		str_offset = tep_data2host4(pevent, *(unsigned int *)(data + arg->string.offset));
 		str_offset &= 0xffff;
 		print_str_to_seq(s, format, len_arg, ((char *)data) + str_offset);
 		break;
@@ -4080,7 +4083,7 @@ static void print_str_arg(struct trace_seq *s, void *data, int size,
 			f = tep_find_any_field(event, arg->bitmask.bitmask);
 			arg->bitmask.offset = f->offset;
 		}
-		bitmask_offset = tep_data2host4(pevent, data + arg->bitmask.offset);
+		bitmask_offset = tep_data2host4(pevent, *(unsigned int *)(data + arg->bitmask.offset));
 		bitmask_size = bitmask_offset >> 16;
 		bitmask_offset &= 0xffff;
 		print_bitmask_to_seq(pevent, s, format, len_arg,
diff --git a/tools/lib/traceevent/event-parse.h b/tools/lib/traceevent/event-parse.h
index 950ad185a5c4..35d37087d3c5 100644
--- a/tools/lib/traceevent/event-parse.h
+++ b/tools/lib/traceevent/event-parse.h
@@ -409,20 +409,6 @@ void tep_print_plugins(struct trace_seq *s,
 typedef char *(tep_func_resolver_t)(void *priv,
 				    unsigned long long *addrp, char **modp);
 void tep_set_flag(struct tep_handle *tep, int flag);
-unsigned short __tep_data2host2(struct tep_handle *pevent, unsigned short data);
-unsigned int __tep_data2host4(struct tep_handle *pevent, unsigned int data);
-unsigned long long
-__tep_data2host8(struct tep_handle *pevent, unsigned long long data);
-
-#define tep_data2host2(pevent, ptr)	__tep_data2host2(pevent, *(unsigned short *)(ptr))
-#define tep_data2host4(pevent, ptr)	__tep_data2host4(pevent, *(unsigned int *)(ptr))
-#define tep_data2host8(pevent, ptr)	\
-({								\
-	unsigned long long __val;				\
-								\
-	memcpy(&__val, (ptr), sizeof(unsigned long long));	\
-	__tep_data2host8(pevent, __val);				\
-})
 
 static inline int tep_host_bigendian(void)
 {
@@ -475,8 +461,6 @@ enum tep_errno tep_parse_format(struct tep_handle *pevent,
 				struct tep_event **eventp,
 				const char *buf,
 				unsigned long size, const char *sys);
-void tep_free_event(struct tep_event *event);
-void tep_free_format_field(struct tep_format_field *field);
 
 void *tep_get_field_raw(struct trace_seq *s, struct tep_event *event,
 			const char *name, struct tep_record *record,
