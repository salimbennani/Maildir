Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  19 Dec 2018 08:37:22 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E49E35805F0;
	Tue, 18 Dec 2018 05:56:23 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga004-1.jf.intel.com with ESMTP; 18 Dec 2018 05:56:23 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AhwoXJBMFvuW0ivBv4qYl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPv+psbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Xymp4aV2Rx/ykC?=
 =?us-ascii?q?oJOT43/mLNisNygqJVvg+vqRtwzIDbfI6aKeF+frvfcN4BWWpMXdxcWzBbD4+g?=
 =?us-ascii?q?bYYCCfcKM+ZCr4n6olsDtQe+BQi0BO/20TBIgWP21rA00+QmCwHNwRAtH9YQv3?=
 =?us-ascii?q?Xbstr0NLoZXP2ozKbV1zrDafBW2TDj6IPVdR0hvfCMXaprfsrW1UkiDALEj1WM?=
 =?us-ascii?q?qYziJTOZzPgCs2+e7+d5U++klmApqwZ0oje1x8csjJHEhoELxVDe8yV23oI1Kc?=
 =?us-ascii?q?e/SE5hbt6pFoZbuSKCN4ZuXM8uX2VltDwnxrAIp5K3ZjUGxZc7yxLFavGKcZCE?=
 =?us-ascii?q?7g/nWeuSOzt0mXxodbClixqs7USs1PfwWtS63VtLqCdOj8PCuWoX1xPJ78iKUv?=
 =?us-ascii?q?t98Vml2TaIzw3T9O5ELl4ulabBKJ4u3KQwlpwNvkTHBCP2n1/2jKCOekUl/Oin?=
 =?us-ascii?q?9fjnb634qpOAM4J4kBzyP6owlsClHOg1MRQCU3Ka9Om+zLHj+Ff2QLROjv04iK?=
 =?us-ascii?q?nZt5XaKNwfpq64BQ9Vz4ki5w+8Dzi4ytQYm2cILFZcdBKAgYnpPU/BIOrjAPeh?=
 =?us-ascii?q?jFSjji1ry+rFPrL/GJXNKGbMkLP7cbZ68U5cxxI/zcpD6JJMFrEBPPXzV1f1tN?=
 =?us-ascii?q?zZDR82LRa4wun6CNhm0oMeWGSPArKWMa/IsF+I4P4vLPeIZIMPpDn9LP0l7eb0?=
 =?us-ascii?q?jXAlgV8dYbWp3ZwPZXC4BPtmIlmZbmDrgtsbEWcKoxAxTOrliFCZVT5TZnCyX7?=
 =?us-ascii?q?8z5z0hCYKmC5vDSZ6pgLCbwCi7GZhWbHhcCl+QCXfoa5mEW/AUZSKQJc9ujCYI?=
 =?us-ascii?q?VbumS48n0xGusxT3y75mLurS5y0Zuojv1Nlz5+3Pix4y8SZ4ANia02GIV2t0hH?=
 =?us-ascii?q?8HRycq3KBjpkxw0k2M0bN4g/xfFtxf/elJXR04NZPHy+x6CtbyWh/Of9uTSVam?=
 =?us-ascii?q?RMmmDi81Tt4r39AOZEN9Ec24jh/fxyqqH6MVl7uTCZw36K3c2WL9J8J8y3nc0q?=
 =?us-ascii?q?khgEIrQs9ONW2gm65++BLfB4/Pk0WFiamqcb4Q0zLK9GeG1WCOpl1XUBZsUaXZ?=
 =?us-ascii?q?WnASflbZos7n5kzcVbOuCa4oMg1aycGcLKtGbdnpjVZDRPfnI9neZ2Oxm2GtBR?=
 =?us-ascii?q?eH3L+MbYzqe3kD0yXZEkQLjwcT/XOePwgkGiihu37eDCBpFV/3fkzj6/d+p22h?=
 =?us-ascii?q?Qk801Q6KaVZh2KSz+hMOgfycSvUT3q8LuSs7qjV0Gkq90MzSC9aauwVhe6Bca8?=
 =?us-ascii?q?sn4FhbzWLZqxB9Ppu4IqB+h14edgN3v1/u1xR3EIlAjdImrHQwzAp2KKKY1lxB?=
 =?us-ascii?q?eiic3ZDxPL3XN2bz8Aqua67QxlHRztKW9r0T5/Q/rlXppBupGVY683V7z9lV1G?=
 =?us-ascii?q?OR6Y/ODAUMXpP+TEY2+wJhqLHHfyYy/YXU1X5rMamqqTLC39MpBO04yhevZdtf?=
 =?us-ascii?q?MaWEFBPsHM0eHcShNOsqm12xZBIeIO9S7LI0P9+hd/ae2K+rIfxsky68gWVG4I?=
 =?us-ascii?q?ByyESM9yVnR+7M3pYFxeyY3wSdWzf9ilehrt74mYReaT4OGWq/zDDuBJRNaa1q?=
 =?us-ascii?q?YYYLFWCuLtWtxtV/m5HiQWRY+0OkB18c3s+mZwCSb13k0QJMz0sXpWGoljWizz?=
 =?us-ascii?q?xzlTEkta6f3C3Iw+T/exsLIG9LRG9+jVjyJYi4lcwVXE+tbwIxjhuq+V76x7RH?=
 =?us-ascii?q?pKR4N2TSQUZIczL2Lm14Sauwq7yCbtVL6JMptyVXTeu9bUqbSr77vxsVzSfjE3?=
 =?us-ascii?q?FCyzA8cjGgoo/5kABiiGKBMHZzq2LUecNqyhfF59zcRvlR0iAdRCZiijnXBVm8?=
 =?us-ascii?q?P9+38tWSjJrDtuG+V2S8VpxcayXrzIWAtDel6m1uGxGwg/ezmtj/GwggzSD7z8?=
 =?us-ascii?q?VqVTnPrBvkYojkzaO6PfhlfklpAl/x8M56GoB4kosti5Acw3kahpOJ/XUZlWf/?=
 =?us-ascii?q?K8lU2aX7bHAVXz4E38bV4BT52E1kNn+JxJj2VnSHzsthetm1eGUW2i0m4sBOCa?=
 =?us-ascii?q?eU6qFEnCRvrlq5qwLRfeZynjMHxfQy734ahvkDuBAxwSWFHrASAU5YMDTplxSJ?=
 =?us-ascii?q?7NCxtr9bZWixfriryEpxg8qhA6qcrQFGV3b0YZMiHS527sViP1PAynzz6of4eN?=
 =?us-ascii?q?bOadIfrAGbkxDFj+JNMpI+iuIKhTZ7OWL6pXAl1+k7jRl00ZC7poeHLXht/Lmi?=
 =?us-ascii?q?Ah5ZLTD1Y8IT+jfwjadRhMqW3oavHol/FTUPRpfnUfWoEDcKv/T9KwmOCCE8qm?=
 =?us-ascii?q?ucGbfHBgCQ8kBmr3bSE5yxM3GXOWIUzdFjRBmbOUxejxoYXDQ8np4lCA+qwNbt?=
 =?us-ascii?q?f1t+5jAU/lT4sAdDyvp0NxnjVWfSvAWoZS0xSJeBNxpa9B1C613WMcyD7eJzAi?=
 =?us-ascii?q?dY8Ye6rAGWLmybZgJIDXwGW0CeBlDjOKWu6sfE8+SCGuW+KP7Oa62UqeNCT/eI?=
 =?us-ascii?q?2Y6v0ox+8jeMMcWPI2BiD+Ah1UpFR3x5AMPZmzMASyEMkyLNbsibpAqz+yFtr8?=
 =?us-ascii?q?C/9ujrVxzr5YeVF7RSNtBv8QisgaifL+6QmDp5KTFA25MM23DIybsf3F0Tiy10?=
 =?us-ascii?q?dDmtC7MAtSHTQ6LKh69XFAUWaydyNMtO8qI90RNBOc/ditPpyLF4iuQ5BEtCVV?=
 =?us-ascii?q?zkgsupf9AFI3mhNFPbA0aGLK6JJSDQzMHtf6y9SadcjOFVtxCrvTabEknjPimM?=
 =?us-ascii?q?ljXzVhCvN/1Mgz+fPBBEpI69dRNtA3D5TN36ch27LMN3jTouzL0oh3PKMHQQPi?=
 =?us-ascii?q?Rmf0xRrr2f8yVYj+57G2xA6HplMOaFlzyY7+neNpYZr/9rDj5omOJd5XQw06FV?=
 =?us-ascii?q?4z1cRPxphCvSqcZjolG8nemJzzpnURxOpS5KhYKLp0piP6rZ+4JEWXbF+hIN8G?=
 =?us-ascii?q?qRBw4Lp9tjFt3gpaRQxsLTm6L0LTcRu+7TqM8dAdXEbd6GKD8qNh/sGSLPJBUK?=
 =?us-ascii?q?QCTtNmzFgUFZ1vaI+S6vo4A+u6TrzYYBTq9zUF0zC+8ADUJkDJoOLdM/WzIinr?=
 =?us-ascii?q?mzj8MS43e66h7LS4ESuJnCVuOPB/rHKzuDi7RAIRwSzvewJI8WO6Xh1kBiY0U8?=
 =?us-ascii?q?l4PPXwLZWd1drzwnZBI4qUNO92ZWSmw1xlKjawWx7XtVHvmx2lY/iSN6YOIw5H?=
 =?us-ascii?q?Ht5Us6IhzBoy502FE8hdj/kxiQdjDrJau9VI0QDDD78wAzNZfgSi5vYAGylFAi?=
 =?us-ascii?q?PzDBA/pRl7JIZ3F3jxWaspxKXbZVSaBUaRkcyOvRfPUpylRfqyOPwU5B+PuDCJ?=
 =?us-ascii?q?1+mQ9sepmp6zpE2gR+fJs2KLbWKa5h0FddnOSNszWu2+R3xxURdGgX92bHZC8Q?=
 =?us-ascii?q?/UYPKvEoIDDg1+hh+QGT0xFedGEKVP006qZ291s3PPio3TP81KQFIUe0Yb/MZ5?=
 =?us-ascii?q?iFsnTNwJbbCmg70VkFwhFI?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BzAABv+xhch0O0hNFkHgEGBwaBUQkLA?=
 =?us-ascii?q?QGBWYEPgQIng3yIeIpaAT4BgiGXRiCBUxMBARgNBgGHHSI0CQ0BAwEBAQEBAQI?=
 =?us-ascii?q?BEwEBAQoLCQgpIwxCFgGBXSKCZQMDAQIgBAUGAUYGCQEBJAImAgIDVBkFA4JPS?=
 =?us-ascii?q?wGCAAUKp0d8Mx6EDwGBA4UCE3iLNBcdgWKBEYIbSYg3glcCiTyHFFGQAwmHD4p?=
 =?us-ascii?q?pgiqPLYs3gwSLEQIEAgQFAhSBRoIOTSMVgW8OCwEMgRIJgh4XfwEHh1eFYB4BM?=
 =?us-ascii?q?gEBCHsBAYgKhWkBAQ?=
X-IPAS-Result: =?us-ascii?q?A0BzAABv+xhch0O0hNFkHgEGBwaBUQkLAQGBWYEPgQIng3y?=
 =?us-ascii?q?IeIpaAT4BgiGXRiCBUxMBARgNBgGHHSI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgpI?=
 =?us-ascii?q?wxCFgGBXSKCZQMDAQIgBAUGAUYGCQEBJAImAgIDVBkFA4JPSwGCAAUKp0d8Mx6?=
 =?us-ascii?q?EDwGBA4UCE3iLNBcdgWKBEYIbSYg3glcCiTyHFFGQAwmHD4ppgiqPLYs3gwSLE?=
 =?us-ascii?q?QIEAgQFAhSBRoIOTSMVgW8OCwEMgRIJgh4XfwEHh1eFYB4BMgEBCHsBAYgKhWk?=
 =?us-ascii?q?BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,368,1539673200"; 
   d="scan'208";a="57940854"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 18 Dec 2018 05:56:22 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726744AbeLRN4T (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 18 Dec 2018 08:56:19 -0500
Received: from terminus.zytor.com ([198.137.202.136]:39243 "EHLO
        terminus.zytor.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726593AbeLRN4T (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 18 Dec 2018 08:56:19 -0500
Received: from terminus.zytor.com (localhost [127.0.0.1])
        by terminus.zytor.com (8.15.2/8.15.2) with ESMTPS id wBIDtvcl2851573
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NO);
        Tue, 18 Dec 2018 05:55:57 -0800
Received: (from tipbot@localhost)
        by terminus.zytor.com (8.15.2/8.15.2/Submit) id wBIDtvd12851570;
        Tue, 18 Dec 2018 05:55:57 -0800
Date: Tue, 18 Dec 2018 05:55:57 -0800
X-Authentication-Warning: terminus.zytor.com: tipbot set sender to tipbot@zytor.com using -f
From: tip-bot for Alexey Budankov <tipbot@zytor.com>
Message-ID: <tip-0b77383134f3dbb461189a9c4f3b46b20152045d@git.kernel.org>
Cc: ak@linux.intel.com, acme@redhat.com,
        alexey.budankov@linux.intel.com, namhyung@kernel.org,
        tglx@linutronix.de, mingo@kernel.org, linux-kernel@vger.kernel.org,
        hpa@zytor.com, alexander.shishkin@linux.intel.com,
        jolsa@redhat.com, peterz@infradead.org
Reply-To: tglx@linutronix.de, mingo@kernel.org, namhyung@kernel.org,
          acme@redhat.com, alexey.budankov@linux.intel.com,
          ak@linux.intel.com, peterz@infradead.org, jolsa@redhat.com,
          hpa@zytor.com, alexander.shishkin@linux.intel.com,
          linux-kernel@vger.kernel.org
In-Reply-To: <5fcda10c-6c63-68df-383a-c6d9e5d1f918@linux.intel.com>
References: <5fcda10c-6c63-68df-383a-c6d9e5d1f918@linux.intel.com>
To: linux-tip-commits@vger.kernel.org
Subject: [tip:perf/core] perf mmap: Map data buffer for preserving collected
 data
Git-Commit-ID: 0b77383134f3dbb461189a9c4f3b46b20152045d
X-Mailer: tip-git-log-daemon
Robot-ID: <tip-bot.git.kernel.org>
Robot-Unsubscribe: Contact <mailto:hpa@kernel.org> to get blacklisted from
 these emails
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline
X-Spam-Status: No, score=-2.9 required=5.0 tests=ALL_TRUSTED,BAYES_00,
        T_DATE_IN_FUTURE_96_Q autolearn=ham autolearn_force=no version=3.4.2
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on terminus.zytor.com
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Commit-ID:  0b77383134f3dbb461189a9c4f3b46b20152045d
Gitweb:     https://git.kernel.org/tip/0b77383134f3dbb461189a9c4f3b46b20152045d
Author:     Alexey Budankov <alexey.budankov@linux.intel.com>
AuthorDate: Tue, 6 Nov 2018 12:03:35 +0300
Committer:  Arnaldo Carvalho de Melo <acme@redhat.com>
CommitDate: Mon, 17 Dec 2018 14:55:01 -0300

perf mmap: Map data buffer for preserving collected data

The map->data buffer is used to preserve map->base profiling data for
writing to disk. AIO map->cblock is used to queue corresponding
map->data buffer for asynchronous writing.

Signed-off-by: Alexey Budankov <alexey.budankov@linux.intel.com>
Reviewed-by: Jiri Olsa <jolsa@redhat.com>
Acked-by: Namhyung Kim <namhyung@kernel.org>
Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
Cc: Andi Kleen <ak@linux.intel.com>
Cc: Peter Zijlstra <peterz@infradead.org>
Link: http://lkml.kernel.org/r/5fcda10c-6c63-68df-383a-c6d9e5d1f918@linux.intel.com
Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
---
 tools/perf/util/evlist.c |  2 +-
 tools/perf/util/mmap.c   | 49 +++++++++++++++++++++++++++++++++++++++++++++++-
 tools/perf/util/mmap.h   | 11 ++++++++++-
 3 files changed, 59 insertions(+), 3 deletions(-)

diff --git a/tools/perf/util/evlist.c b/tools/perf/util/evlist.c
index 36526d229315..6f010b9f0a81 100644
--- a/tools/perf/util/evlist.c
+++ b/tools/perf/util/evlist.c
@@ -1028,7 +1028,7 @@ int perf_evlist__mmap_ex(struct perf_evlist *evlist, unsigned int pages,
 	 * Its value is decided by evsel's write_backward.
 	 * So &mp should not be passed through const pointer.
 	 */
-	struct mmap_params mp;
+	struct mmap_params mp = { .nr_cblocks = 0 };
 
 	if (!evlist->mmap)
 		evlist->mmap = perf_evlist__alloc_mmap(evlist, false);
diff --git a/tools/perf/util/mmap.c b/tools/perf/util/mmap.c
index cdb95b3a1213..47cdc3ad6546 100644
--- a/tools/perf/util/mmap.c
+++ b/tools/perf/util/mmap.c
@@ -153,8 +153,55 @@ void __weak auxtrace_mmap_params__set_idx(struct auxtrace_mmap_params *mp __mayb
 {
 }
 
+#ifdef HAVE_AIO_SUPPORT
+static int perf_mmap__aio_mmap(struct perf_mmap *map, struct mmap_params *mp)
+{
+	int delta_max;
+
+	if (mp->nr_cblocks) {
+		map->aio.data = malloc(perf_mmap__mmap_len(map));
+		if (!map->aio.data) {
+			pr_debug2("failed to allocate data buffer, error %m\n");
+			return -1;
+		}
+		/*
+		 * Use cblock.aio_fildes value different from -1
+		 * to denote started aio write operation on the
+		 * cblock so it requires explicit record__aio_sync()
+		 * call prior the cblock may be reused again.
+		 */
+		map->aio.cblock.aio_fildes = -1;
+		/*
+		 * Allocate cblock with max priority delta to
+		 * have faster aio write system calls.
+		 */
+		delta_max = sysconf(_SC_AIO_PRIO_DELTA_MAX);
+		map->aio.cblock.aio_reqprio = delta_max;
+	}
+
+	return 0;
+}
+
+static void perf_mmap__aio_munmap(struct perf_mmap *map)
+{
+	if (map->aio.data)
+		zfree(&map->aio.data);
+}
+#else
+static int perf_mmap__aio_mmap(struct perf_mmap *map __maybe_unused,
+			       struct mmap_params *mp __maybe_unused)
+{
+	return 0;
+}
+
+static void perf_mmap__aio_munmap(struct perf_mmap *map __maybe_unused)
+{
+}
+#endif
+
 void perf_mmap__munmap(struct perf_mmap *map)
 {
+	perf_mmap__aio_munmap(map);
 	if (map->base != NULL) {
 		munmap(map->base, perf_mmap__mmap_len(map));
 		map->base = NULL;
@@ -197,7 +244,7 @@ int perf_mmap__mmap(struct perf_mmap *map, struct mmap_params *mp, int fd, int c
 				&mp->auxtrace_mp, map->base, fd))
 		return -1;
 
-	return 0;
+	return perf_mmap__aio_mmap(map, mp);
 }
 
 static int overwrite_rb_find_range(void *buf, int mask, u64 *start, u64 *end)
diff --git a/tools/perf/util/mmap.h b/tools/perf/util/mmap.h
index cc5e2d6d17a9..3f10ad030c5e 100644
--- a/tools/perf/util/mmap.h
+++ b/tools/perf/util/mmap.h
@@ -6,6 +6,9 @@
 #include <linux/types.h>
 #include <linux/ring_buffer.h>
 #include <stdbool.h>
+#ifdef HAVE_AIO_SUPPORT
+#include <aio.h>
+#endif
 #include "auxtrace.h"
 #include "event.h"
 
@@ -26,6 +29,12 @@ struct perf_mmap {
 	bool		 overwrite;
 	struct auxtrace_mmap auxtrace_mmap;
 	char		 event_copy[PERF_SAMPLE_MAX_SIZE] __aligned(8);
+#ifdef HAVE_AIO_SUPPORT
+	struct {
+		void 		 *data;
+		struct aiocb	 cblock;
+	} aio;
+#endif
 };
 
 /*
@@ -57,7 +66,7 @@ enum bkw_mmap_state {
 };
 
 struct mmap_params {
-	int			    prot, mask;
+	int			    prot, mask, nr_cblocks;
 	struct auxtrace_mmap_params auxtrace_mp;
 };
 
