Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:40:20 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C95585805F0;
	Thu, 20 Dec 2018 10:24:44 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 20 Dec 2018 10:24:43 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ALDqv0x3BuxiMysMcsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segQLPjxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QLYpUjqg8qhrUgflhi?=
 =?us-ascii?q?kHOTA66mHZlNF+gqVUrxyuuxNw3pXUYJmXOfdlYqPQfskXSXZbU8pNVSFMBJ63?=
 =?us-ascii?q?YYsVD+oGOOZVt5X9p1oWrRenHgasA//vwSJGhn/xx60xzvgsERvA3AM6G9IBrX?=
 =?us-ascii?q?PUp8jrOagIS+C10rPHzTHDb/NRxDzy9ZbHeQ0mr/6SWbJwdtfaxE4zFwPEllWf?=
 =?us-ascii?q?sovlPy+O2+UMs2mb8+1gVfi1h2E7rAFxpyGiy8ExgYfHgYIVz0rL9SR/wIstJt?=
 =?us-ascii?q?23VlR7Ydi6H5tUrS2aMJF2QswkTmp1uyg60qULtYCncCUO0pgr2hDSZ+Kdf4SV?=
 =?us-ascii?q?4R/vSPydLDZ6iX59Zb6ygxW//VK9xuDyVMS4ykhGojZbntXWq3wA2R3e586aQf?=
 =?us-ascii?q?Vn5EihwyyA1wXL5+FEP080ka3bJoY/wr4/iJUTq17PHizol0Xsiq+ZaEEk9vKv?=
 =?us-ascii?q?6+T9bbXqvp6cN4lqhQHiKqkihNCzDOAiPgQTUWWX5/6w2KDg8EHlWrlHj/87nr?=
 =?us-ascii?q?HcsJ/AJMQboqC5AxVS0oYm8xu/Czam0NIFnXgINV5FewyIj5LvO17QJPD0FPC/?=
 =?us-ascii?q?glqqkDh13fDLJaPhAprTIXjZirvhfqhy61RayAUtydBT/ZVUCqsOIP7rQE/+qM?=
 =?us-ascii?q?TYDgMlMwyz2+vnDNR91oAAVm6VDa6ZLbjfsVuJ5uIpPumNa5UZuDf7K/g5+fHu?=
 =?us-ascii?q?iWU1lkMafamsxZEXcmy3Hux6I0WFZnrhmtcBHn0LvgoiVuPqj0eOUT5OZ3moWa?=
 =?us-ascii?q?I86So2CIanDYfFW4Csj6aN3Ca9Hp1KeG9GDkqAHmvvd4WBQ/0Mcj6dItd9kjwY?=
 =?us-ascii?q?UrisU5Uu1QqutA/9yLprNPDU9TcatZ/40Nh15uvTlQw99DBuDsSd1X2NQH9wnm?=
 =?us-ascii?q?8SWzA226V/q1Rnylifyah4n+BYFdtL6vNKSAg6M4TQz+h7C9/oXALBccyESFKn?=
 =?us-ascii?q?QtWgHDEwQcg9w94IY0ZhBdqiigrP0DatA78Qj7aLHoA78rrA33jtIMZw02vJ27?=
 =?us-ascii?q?M/j1Y4WMdPNXephqhk9wfNAY7FlEGZl6WvdaQYxyPN8GaDzWyTvEBXSgJwUKPF?=
 =?us-ascii?q?XWwBaUvSt9j2+kTCT7q2A7Q9LgRB0dKCKrdNatDxkFpJXunjN8rEb2KxgWiwAw?=
 =?us-ascii?q?2Iya2KbIfxf2Ud3SPdCFULkgwJ/HaGMxQ+CTmlo27EEDNuElfvaVv28eZisHO7?=
 =?us-ascii?q?UlM0zwaSYk191rq1/xkVheCcS/ITxL4EpD0tqzJuHFa53tLWDdWAqhFlfKVdZ9?=
 =?us-ascii?q?M9/VhG2XjYtwx7IpyvMaRiikQCfARwukPkzw93BZlYkcg2sHMqyxJ/Jric0Fxf?=
 =?us-ascii?q?eDKXw5DxNqfMJWnv4R+gcajW2lLZ0NaI4aoP7PU4q1P+vACmDEYi8nNn08VL3H?=
 =?us-ascii?q?uY/JnFEA0SUZfpWEYt6xd6v63aYjU6547M1XxsLLO4vSPY19MoBOsq0BCgf9hE?=
 =?us-ascii?q?PaOAFQ/yFdAaBse0JOwrnVipcgwLPORI+KEoOMOmcuOM2LS3M+Z4gDKmkWNH7Z?=
 =?us-ascii?q?hn0kKN6yVzUPTI0IsCw/2C2AuISS38jFa4vs/rg49EYSwdEXSlySjjAo5cfaly?=
 =?us-ascii?q?fYcNCWezLMy73NR+h5jxW3FG8F6vHU8J2MiseRCKdVzywRVQ1VgLoXyggSa5zz?=
 =?us-ascii?q?10nyspr6aFxyzO3uLieQEDOm5KQmlikFjtLZK1j9AcQEincQwpmAG56kb9wqhR?=
 =?us-ascii?q?vL5/IHXLQUdUYyj2KHlvUqmqubqYYM5P65QovT9MUOumYlCaSb/9ox0E3CPlBG?=
 =?us-ascii?q?ZewDE7dze3upT2hRB6iWSdLGpto3rdY81/2RDf5NnET/5LwjUGXDV4iSXQBlWk?=
 =?us-ascii?q?P9im59KUm43BsuC/UWKsTZlTcSjtzYOduyq3/2xqARujn/+tnt3rCxQ10Sj+19?=
 =?us-ascii?q?NyTyXHsA78YpX316S9Ke9nfVNnBF7m58p6B4FxiI0whJ4L1Hgeh5WV+2cHkGjp?=
 =?us-ascii?q?PdVa36L+cGQCRToRz9HJ5wjl3VVpLmiVyILhSnWd3sxhasG/YmMX2SIy9dpGCa?=
 =?us-ascii?q?mK47xfgSt6vEC4ohnPbvhnkTcQ0v8u6H8cg+EUtwsh1CSdArYOHUZGOSzgjQiH?=
 =?us-ascii?q?79e7rK9PfmagbaCw1FZindCmFLyCvgZcWHPjdpYjByBw6Nh/MEnX0H3y8YzkfN?=
 =?us-ascii?q?jQbdQOthybiRvAju5VKI4vmfoOnyZoJWX9vXg9we4hkRNuxY26vJSAK2h15622?=
 =?us-ascii?q?GBlYNjnoZ88J/jHtkL1TnsKX34CpA5VgFS8HXJruTfK0Dj0Sse7rOBqJED05sn?=
 =?us-ascii?q?2bA6bQHReD6Ed6qHLCC5KrOGuSJHYH1tVuXgWdKFZcgAAJXzU6g5g5GRqxxMH6?=
 =?us-ascii?q?dEd55zYR5kP3qxdWy+JoMQX/XXnbpAuydjg0T52fJgJM7g5e/0fVLdCe7uVrEi?=
 =?us-ascii?q?BY+Z2hsRWNKnGBaAROF20JQUuEB1bsPrS14dnA8u6YBvexLvfUYLWOr/BeWOmM?=
 =?us-ascii?q?xZ61zoRm+DOMPN2VPnZ+F/07xlZDXXdhFsTZhToPSi8XlyHMb8KBpxe84Cp3rs?=
 =?us-ascii?q?+h//TxRQLv/pCCC79TMdVp5hC3jr2PN++WhCZlNzlY0okAymPPyLgaxFQSkT1h?=
 =?us-ascii?q?dyGxEbQcsi7AVLjfmrJMAB4BdSxyNNFE76Y93gRWPc7bi9X11qN3j/IvCldFU0?=
 =?us-ascii?q?Dhld+tZcAQP269M1bHDl6RNLuaPT3L3933YaSkRL1MjeVUsge8tiqBH0D/PjSM?=
 =?us-ascii?q?iT/pWgurMeFNiiGbIRNftJu8chZrFWjsUtbmZgenP99wiD082ac0iW/SNW4ALT?=
 =?us-ascii?q?h8dFtAr72K4iNeh/V/GmpB4WJkLOmEgSmZ6ebYJ40SsftqBCR0iu1b7G47y7tT?=
 =?us-ascii?q?8CFLWvh1lDHOod5pplH12tWInz5mVgde7ypKnMeAukBnOLnC3odPVGyC/x8X62?=
 =?us-ascii?q?iUTRMQqIhfB8XrqpxXn9rIkLn6ADRP6dTZ+Y0bHceQYMaGNmcxdBnkAjjZCCMb?=
 =?us-ascii?q?QjOxc2LSnUpQlLeV7HLR5p4zr5j9hZwBYrxWTlo4ErUdEEshVNUJJZpfRD4okb?=
 =?us-ascii?q?eHysUP4D72qRjXS8JyvZ3dUP+WR/L1J3LRibJAbgYEwLTQN4kfNoTnnUdlbx0y?=
 =?us-ascii?q?lYjQGkPWG9BQpDFsdCc1pllA9D51SWh3k13sbAyr6XlLPf6plwE7i011ZuFpvC?=
 =?us-ascii?q?vj50cfIlvMuTcql08wiZPpjHTZcCb4BLWhQYZMTSHzshsfKJT+Fhp0dUi4mlAs?=
 =?us-ascii?q?OjDeD5tLibJkeWcjowbGp5JLGfkUQaAMRRIUwrnDe/Qw21NAgje22Uhdo+DCDM?=
 =?us-ascii?q?0xx0MRbZewoicYiEpYZ9kvKPmIKQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AeAAAK3htch0O0hNFlHgEGBwaBUQkLA?=
 =?us-ascii?q?YJpgQIng32IeIsbAYIhl0kggVMTAQEYCwgBhy4iNAkNAQMBAQEBAQECARMBAQE?=
 =?us-ascii?q?IDQkIKSMMgjYigmwCIAQFBgFGBgkCJAImAgIDbQWDHQGCAQUKp1h8Mx6EDwGBA?=
 =?us-ascii?q?4RwBRN4izQXgX+DdYg3glcCkFuQYgmHEYpsi3WFaI5Iix4CBAIEBQIUgUaCDk0?=
 =?us-ascii?q?jFTuBNA4LAQyBEoInFxKITIVgHgEyAQEIewEBjWABAQ?=
X-IPAS-Result: =?us-ascii?q?A0AeAAAK3htch0O0hNFlHgEGBwaBUQkLAYJpgQIng32IeIs?=
 =?us-ascii?q?bAYIhl0kggVMTAQEYCwgBhy4iNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYig?=
 =?us-ascii?q?mwCIAQFBgFGBgkCJAImAgIDbQWDHQGCAQUKp1h8Mx6EDwGBA4RwBRN4izQXgX+?=
 =?us-ascii?q?DdYg3glcCkFuQYgmHEYpsi3WFaI5Iix4CBAIEBQIUgUaCDk0jFTuBNA4LAQyBE?=
 =?us-ascii?q?oInFxKITIVgHgEyAQEIewEBjWABAQ?=
X-IronPort-AV: E=Sophos;i="5.56,378,1539673200"; 
   d="scan'208";a="45848789"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 20 Dec 2018 10:24:42 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2388793AbeLTSVi (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Thu, 20 Dec 2018 13:21:38 -0500
Received: from terminus.zytor.com ([198.137.202.136]:54787 "EHLO
        terminus.zytor.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1730855AbeLTSVi (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 20 Dec 2018 13:21:38 -0500
Received: from terminus.zytor.com (localhost [127.0.0.1])
        by terminus.zytor.com (8.15.2/8.15.2) with ESMTPS id wBKILToM3683921
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NO);
        Thu, 20 Dec 2018 10:21:29 -0800
Received: (from tipbot@localhost)
        by terminus.zytor.com (8.15.2/8.15.2/Submit) id wBKILT3a3683917;
        Thu, 20 Dec 2018 10:21:29 -0800
Date: Thu, 20 Dec 2018 10:21:29 -0800
X-Authentication-Warning: terminus.zytor.com: tipbot set sender to tipbot@zytor.com using -f
From: tip-bot for Arnaldo Carvalho de Melo <tipbot@zytor.com>
Message-ID: <tip-r8cbhoz1lr5npq9tutpvoigr@git.kernel.org>
Cc: hpa@zytor.com, tglx@linutronix.de, wangnan0@huawei.com,
        adrian.hunter@intel.com, lclaudio@redhat.com, mingo@kernel.org,
        acme@redhat.com, namhyung@kernel.org, linux-kernel@vger.kernel.org,
        jolsa@kernel.org
Reply-To: jolsa@kernel.org, linux-kernel@vger.kernel.org,
          namhyung@kernel.org, acme@redhat.com, mingo@kernel.org,
          lclaudio@redhat.com, adrian.hunter@intel.com,
          wangnan0@huawei.com, tglx@linutronix.de, hpa@zytor.com
To: linux-tip-commits@vger.kernel.org
Subject: [tip:perf/core] perf trace: Make the alignment of the syscall args
 be configurable
Git-Commit-ID: 9ed45d59aeae2211933b032acc4e5b40a1a2fcd3
X-Mailer: tip-git-log-daemon
Robot-ID: <tip-bot.git.kernel.org>
Robot-Unsubscribe: Contact <mailto:hpa@kernel.org> to get blacklisted from
 these emails
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline
X-Spam-Status: No, score=-2.9 required=5.0 tests=ALL_TRUSTED,BAYES_00
        autolearn=ham autolearn_force=no version=3.4.2
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on terminus.zytor.com
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Commit-ID:  9ed45d59aeae2211933b032acc4e5b40a1a2fcd3
Gitweb:     https://git.kernel.org/tip/9ed45d59aeae2211933b032acc4e5b40a1a2fcd3
Author:     Arnaldo Carvalho de Melo <acme@redhat.com>
AuthorDate: Fri, 14 Dec 2018 13:40:49 -0300
Committer:  Arnaldo Carvalho de Melo <acme@redhat.com>
CommitDate: Tue, 18 Dec 2018 16:07:26 -0300

perf trace: Make the alignment of the syscall args be configurable

Since the start 'perf trace' aligns the parens enclosing the list of
syscall args to align the syscall results, allow this to be
configurable, keeping the default of 70. Using:

  # perf config
  llvm.dump-obj=true
  trace.add_events=/home/acme/git/perf/tools/perf/examples/bpf/augmented_raw_syscalls.o
  trace.show_zeros=yes
  trace.show_duration=no
  trace.no_inherit=yes
  trace.show_timestamp=no
  trace.show_arg_names=no
  trace.args_alignment=0
  # trace -e open*,close,*sleep sleep 1
  openat(CWD, /etc/ld.so.cache, CLOEXEC) = 3
  close(3) = 0
  openat(CWD, /lib64/libc.so.6, CLOEXEC) = 3
  close(3) = 0
  openat(CWD, /usr/lib/locale/locale-archive, CLOEXEC) = 3
  close(3) = 0
  nanosleep(0x7ffc00de66f0, 0) = 0
  close(1) = 0
  close(2) = 0
  #

Cc: Adrian Hunter <adrian.hunter@intel.com>
Cc: Jiri Olsa <jolsa@kernel.org>
Cc: Luis Cláudio Gonçalves <lclaudio@redhat.com>
Cc: Namhyung Kim <namhyung@kernel.org>
Cc: Wang Nan <wangnan0@huawei.com>
Link: https://lkml.kernel.org/n/tip-r8cbhoz1lr5npq9tutpvoigr@git.kernel.org
Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
---
 tools/perf/Documentation/perf-config.txt |  4 ++++
 tools/perf/builtin-trace.c               | 12 +++++++++---
 2 files changed, 13 insertions(+), 3 deletions(-)

diff --git a/tools/perf/Documentation/perf-config.txt b/tools/perf/Documentation/perf-config.txt
index 35108fd61fa6..0098eab8e5b1 100644
--- a/tools/perf/Documentation/perf-config.txt
+++ b/tools/perf/Documentation/perf-config.txt
@@ -529,6 +529,10 @@ trace.*::
 		activate the 'perf trace' logic that looks for syscall
 		pointer contents after the normal tracepoint payload.
 
+	trace.args_alignment::
+		Number of columns to align the argument list, default is 70,
+		use 40 for the strace default, zero to no alignment.
+
 	trace.no_inherit::
 		Do not follow children threads.
 
diff --git a/tools/perf/builtin-trace.c b/tools/perf/builtin-trace.c
index 95dfcb851604..2d8fd48a4727 100644
--- a/tools/perf/builtin-trace.c
+++ b/tools/perf/builtin-trace.c
@@ -127,6 +127,7 @@ struct trace {
 	bool			show_tool_stats;
 	bool			trace_syscalls;
 	bool			kernel_syscallchains;
+	s16			args_alignment;
 	bool			show_tstamp;
 	bool			show_duration;
 	bool			show_zeros;
@@ -1731,7 +1732,7 @@ static int trace__printf_interrupted_entry(struct trace *trace)
 		return 0;
 
 	printed  = trace__fprintf_entry_head(trace, trace->current, 0, false, ttrace->entry_time, trace->output);
-	printed += fprintf(trace->output, "%-70s) ...\n", ttrace->entry_str);
+	printed += fprintf(trace->output, "%-*s) ...\n", trace->args_alignment, ttrace->entry_str);
 	ttrace->entry_pending = false;
 
 	++trace->nr_events_printed;
@@ -1838,7 +1839,7 @@ static int trace__sys_enter(struct trace *trace, struct perf_evsel *evsel,
 	if (sc->is_exit) {
 		if (!(trace->duration_filter || trace->summary_only || trace->failure_only || trace->min_stack)) {
 			trace__fprintf_entry_head(trace, thread, 0, false, ttrace->entry_time, trace->output);
-			fprintf(trace->output, "%-70s)\n", ttrace->entry_str);
+			fprintf(trace->output, "%-*s)\n", trace->args_alignment, ttrace->entry_str);
 		}
 	} else {
 		ttrace->entry_pending = true;
@@ -1981,7 +1982,7 @@ static int trace__sys_exit(struct trace *trace, struct perf_evsel *evsel,
 	trace__fprintf_entry_head(trace, thread, duration, duration_calculated, ttrace->entry_time, trace->output);
 
 	if (ttrace->entry_pending) {
-		fprintf(trace->output, "%-70s", ttrace->entry_str);
+		fprintf(trace->output, "%-*s", trace->args_alignment, ttrace->entry_str);
 	} else {
 		fprintf(trace->output, " ... [");
 		color_fprintf(trace->output, PERF_COLOR_YELLOW, "continued");
@@ -3563,6 +3564,10 @@ static int trace__config(const char *var, const char *value, void *arg)
 		trace->show_zeros = new_show_zeros;
 	} else if (!strcmp(var, "trace.no_inherit")) {
 		trace->opts.no_inherit = perf_config_bool(var, value);
+	} else if (!strcmp(var, "trace.args_alignment")) {
+		int args_alignment = 0;
+		if (perf_config_int(&args_alignment, var, value) == 0)
+			trace->args_alignment = args_alignment;
 	}
 out:
 	return err;
@@ -3596,6 +3601,7 @@ int cmd_trace(int argc, const char **argv)
 		.show_tstamp = true,
 		.show_duration = true,
 		.show_arg_names = true,
+		.args_alignment = 70,
 		.trace_syscalls = false,
 		.kernel_syscallchains = false,
 		.max_stack = UINT_MAX,
