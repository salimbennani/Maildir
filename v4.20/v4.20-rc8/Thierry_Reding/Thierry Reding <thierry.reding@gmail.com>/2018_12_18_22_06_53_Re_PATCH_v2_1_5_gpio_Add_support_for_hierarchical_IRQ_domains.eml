Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  19 Dec 2018 08:44:13 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 1B92658055F;
	Tue, 18 Dec 2018 14:07:03 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 18 Dec 2018 14:07:02 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ACHgUzhL9zXndmaTSLtmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgUL/nyrarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZUMhfVzJPDJ6/?=
 =?us-ascii?q?YYsBAOUOIftXoIvzqFsVtRuzBxKhBOzzxjJSnHL6wbc33/onHArb3AIgBdUOsH?=
 =?us-ascii?q?HModvrNKcSUP66zLPSzTTDcvhYxSny55XJchAnrvGHQLV9cdbRyUkuCQzFlE+Q?=
 =?us-ascii?q?qIz/MzOPyOsCrmmb7+xvVe+0hG4nrht+ojmrxss2lobJgYcVx0nC+C5kzog1It?=
 =?us-ascii?q?i4R1R6Yd6iCJZQsy+bN41sTsMkXW5opCA3waAFt56jZCUG1ogryhrFZ/CafYWE?=
 =?us-ascii?q?/AjvWPuSLDtknn5oebCyiw6s/US81uHxWMy530hFoydAj9XMuG0B2wLW58WEVv?=
 =?us-ascii?q?Rx4lut1DOR2wzO5OFJJE45mrbVK54vx7MwmIQcvErBEyLzg0r7iLKaeV4i9+O1?=
 =?us-ascii?q?8eroeK/mqYWZN4JsigHxLKAumsunDOQmPQgBQXKb9f6/1LL95035RqtFjvksnq?=
 =?us-ascii?q?neqpDaKtwXpq+/AwBLzoYu8wizAyui3dgCgHUKIkxJdAiag4XqJ13COvH1APWn?=
 =?us-ascii?q?j1SpijhrxvTGPrP7ApXKK3jOiLPhfbd7605Bxws/1NNf6IxOCrEHPv3zXlb9tN?=
 =?us-ascii?q?vWDx8/LQO02f3qCMty1owAQ2KDGKyZP73IsV+O+O0vJ/OAZIgPuDbyM/Ql/eLh?=
 =?us-ascii?q?jWclmV8BeqmkxZ8XaHG7Hvt4OUmYbmfsj8wFEWcLuAo+UePrhEeDUT5Ve3a9Qa?=
 =?us-ascii?q?Y86isnB4KhCIfJXpqtj6CZ3CenAp1WYXhLClCWHnfpa4WLQfAMZDiSIs98iDME?=
 =?us-ascii?q?U7ehRpQl1RGvsg/61rVmIvDV+i0eqZLsytx16/fPmhE18Dx+F96d3H2VT2Fogm?=
 =?us-ascii?q?MIQCc73KJ4oUNj0FuD0q94g/peFdxU/P5JVgY6NZjBz+11EdzyWwTBfsuXR1ai?=
 =?us-ascii?q?WNmpHTYxTtcpyd8Uf0l9A8mijgzE3yeyGbAVjLyLBJs38q7GxXj+PcR9xm3C1K?=
 =?us-ascii?q?kgiVkmX8ROOXenhq556wjcGYrJn1+FmKatcKQWxDTN+3ubzWqSoEFYVxZ9Uabf?=
 =?us-ascii?q?UnAZfEfWqdX56VnET7+hErknNgpBycifKqpFcNHpjFNGROv9N9TaeW6+h2CwBR?=
 =?us-ascii?q?OQzLOWcIXqY3kd3DnaCEUcjg8c52iGOhYkCiehuW3eCiduGkzpY0/r9el+q3a7?=
 =?us-ascii?q?TksvwgGObk1h0ae1+xEPifydTfMTwqwLuCM7pzpoG1a92srcC8CcqAp5YKVcfd?=
 =?us-ascii?q?Q97U9a2m3DqQxyIIasL6B4iV4YaAR4oUXu2g5zCoVBl8gqsXwrwBBzKaKezFNO?=
 =?us-ascii?q?aTeY0YrsNb3QL2n45AqvZLLO2lHCzNaW/b8C6Og5q1XmuwGpCkoi8nV939lJyX?=
 =?us-ascii?q?ec4Y/KDA4TUZL3XUY67Bx6p7DcYikg6ILYz3xsMa+osjDc39IlHvcqyhGlf91H?=
 =?us-ascii?q?KqOLCBfyE9EGB8ipMOElgVypYQwLPe9M9K84Jdipd+ab16GxOuZgnzWmjXpc7Y?=
 =?us-ascii?q?B500KM8Td8S+HS05YExfGYwhWIVzPmgFi9tcD3nJhOZSsOEWqn1SjkGIlRa7Vy?=
 =?us-ascii?q?fIYWE2uhP9e7x9R+h5H3XX5Y+0WuB1cH2M+vZBqTYEbx3QxW1UQLv3OnnTG0wC?=
 =?us-ascii?q?BzkzEstqCfxjDBw/z+dBobPW5GXHNijVbwLoeuldAVQU+oYxIvlBS7/0b6xrFX?=
 =?us-ascii?q?q7hlIGnXXEhHYTL2L2ZkUqarsrqCYshP6I4nsClNUeS8Z0yaRaD5oxcAzyzjGG?=
 =?us-ascii?q?5ezighdz62opX5gwB6iGWFIXdzrXrVY8FxyQ3E5NzBQ/5cxT4GRCh+iTnKCVmw?=
 =?us-ascii?q?Jdip/dOIl5jdtuCyTX6uVppWcSPz14OPqDO75XF2AR24h/2zmMfoERI50S/40N?=
 =?us-ascii?q?lmTz7Iowz/Yono1qS6N/xofk9zCV/46sp6HJx+k4QqiJER33gamoua/X4dnWjv?=
 =?us-ascii?q?NtVb3Lr0bGARSj4T397V/A/l1VVjL32TwIL1THedwspnZ9ShZmMW2yQ9791FCa?=
 =?us-ascii?q?uO7bxEmzd1rUS8rQ7Lffd9mTIdw+M06HEGm+EJpBYtziKFD7ARB0ZYPDbglxSV?=
 =?us-ascii?q?79+kqqVXa32icbyx1Ep4gNCgA6uOogBaWHblZJgiGTV84dl4MFLJyHfz8J3reM?=
 =?us-ascii?q?HMbdIPsR2ZixLAj+lWKJ0rjPYLizRoOXnhvXI70e40lgJh3Yu1vIWcL2Vt/aS5?=
 =?us-ascii?q?AgNXNzHvZsMT/C3tgrhansqMw4+vGZBhEC0RXJT0VfKoDC4StfP/OgaSFz08r2?=
 =?us-ascii?q?2XGLvFEg+Z9UdmtGnPE5GwOnGTJXkZy8hiRRaHKExehgAUQCs1npojGg+2w8zh?=
 =?us-ascii?q?dV9z5ioN6V7gthtM1uVoOgHkXWjFoweobio0RIKbLBpL9QxC40bVMcqD7uN8BS?=
 =?us-ascii?q?1Y/5uhrBCTJWyffQhHEWYJWkmcDVD5Irau/cXA8/SfBuemLfvBe7COpvJFV/uS?=
 =?us-ascii?q?2ZKjyIhm/yuPNsWSOHltFeY711FHXXB4HcTZhjoORzYWlyLLc86UuhO89jdroc?=
 =?us-ascii?q?C49fThQBjv6peXC7tOLdVv/Ai7gKeEN+6NnSZ5NCxX1pUWyX/Tz7gf2lEShjpq?=
 =?us-ascii?q?dzmsF7QAqCHMQLjRmq9REx4UdSdzONFU4KI72wlHIdTbhc/t1r5kkv41DE9IVV?=
 =?us-ascii?q?z/lcGoZswKIGC9OEnEBEaRM7SGKiPEw9vqYaOnUrBQiORUtxutuTeUCUPjPzKD?=
 =?us-ascii?q?lyX3WBCrK+1DkCabPBlGsoGnbhltEXTjTM7hahCjKtB3kCY5wacqiXLKL2IcNT?=
 =?us-ascii?q?l8flhJrr2R6yNYn/p+F3ZA7npjMemLhSKZ4/PEJZYRtPthGj50mP5C4HQm17tV?=
 =?us-ascii?q?6zlJROB0mCvXtNJhv0uqnfWPyjV5VhpDsTJLhIONvUV/NqTV7JhAWXDY/B0T6W?=
 =?us-ascii?q?WcEQgFp9xgCtf3oaBf1sDPlL7vKDdF69/V/dETB87RKMKGNnouKRvoGD7OAwsD?=
 =?us-ascii?q?Qj6mLmXfh01bkPGP+XyZtJk6qp7wmJUQTr9XTkA6FvQfChctINtXBJZxQyhsrr?=
 =?us-ascii?q?efiMMJ5zLqqBjXWd4coZnDUv+TA93rKTCQl74CYAEHl+DWN4MWY7H72kF4cEgy?=
 =?us-ascii?q?ponGGkzfFYRRoixsdBUl5l9A/Hl4QUU83kvkbkWm53pFRq38pQI/lgYrObdlzz?=
 =?us-ascii?q?zr+VpiYwOS/CY=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AFAABUbxlch0O0hNFjGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBVAEBAQEBAQsBgTCBOYECJ4x1ixyCDRSNfYs8Ag4DAQEYBww?=
 =?us-ascii?q?Bhx0iNwYNAQMBAQEBAQECARMBAQEKCwkIKSMMgjYkAYJhAQEBAQIBAQIkGQEbH?=
 =?us-ascii?q?QEDAQEJAQEFBRgJJQMMBQ0CEQEFASITBYMdAYFnAQMNCAEEm0Q8jBUWBQEXgnc?=
 =?us-ascii?q?FgTEBCwGDAAoZJw1egTAHAgEFEoJbiDaBHIFXP4ERgmQugldHAQOFGIImAqBNJ?=
 =?us-ascii?q?zAHAoIlBIRmg0ODXYMlJAoCiWoMh1WOO4ESiX8GAgkHDyGBO4F4MxojgzwfgXy?=
 =?us-ascii?q?DbYRZhXs/MoECAwEBIROKXyqCIwEB?=
X-IPAS-Result: =?us-ascii?q?A0AFAABUbxlch0O0hNFjGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BVAEBAQEBAQsBgTCBOYECJ4x1ixyCDRSNfYs8Ag4DAQEYBwwBhx0iNwYNAQMBA?=
 =?us-ascii?q?QEBAQECARMBAQEKCwkIKSMMgjYkAYJhAQEBAQIBAQIkGQEbHQEDAQEJAQEFBRg?=
 =?us-ascii?q?JJQMMBQ0CEQEFASITBYMdAYFnAQMNCAEEm0Q8jBUWBQEXgncFgTEBCwGDAAoZJ?=
 =?us-ascii?q?w1egTAHAgEFEoJbiDaBHIFXP4ERgmQugldHAQOFGIImAqBNJzAHAoIlBIRmg0O?=
 =?us-ascii?q?DXYMlJAoCiWoMh1WOO4ESiX8GAgkHDyGBO4F4MxojgzwfgXyDbYRZhXs/MoECA?=
 =?us-ascii?q?wEBIROKXyqCIwEB?=
X-IronPort-AV: E=Sophos;i="5.56,370,1539673200"; 
   d="asc'?scan'208";a="56900398"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 18 Dec 2018 14:07:01 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727528AbeLRWG7 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 18 Dec 2018 17:06:59 -0500
Received: from mail-wr1-f68.google.com ([209.85.221.68]:34125 "EHLO
        mail-wr1-f68.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727145AbeLRWG6 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 18 Dec 2018 17:06:58 -0500
Received: by mail-wr1-f68.google.com with SMTP id j2so17530849wrw.1;
        Tue, 18 Dec 2018 14:06:56 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=M0CaZGmMi11t3WGKk5KI5fjTtmPwgLbdSQL+9aRpSI8=;
        b=kFcqpfLAh9kRX4ipbX2DI11gdHWUNKS7Mr5YSCZqInCfTbxUbePVVZnEWqi7Jbqhy1
         Syh9Nh9MtGP+/+56OsTKS591EfGVZYIwRbPrVAJR2ydVh8LX+22pHZy6/z4ZoYDNNdya
         4ndF8WmtlzwxHrGtRVgDp6M3DuxXkHCeWvQ+r7T79kdYZLQfFHy3XztNikf1Jp4TyeC5
         xrFEK1yTx/RJhQ5s1ENKgo8plKEnilk6YiXEEXXTx4Itnd2a79ubTxJcA2xZ8pouIrPg
         cBiZfdWUONhE/07BRy+XAUKntIF1ZsAe4VswBdTHm2U2QB2WSRebt2KSIPkknDsU0MUO
         FoYA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:cc:subject:message-id:references
         :mime-version:content-disposition:in-reply-to:user-agent;
        bh=M0CaZGmMi11t3WGKk5KI5fjTtmPwgLbdSQL+9aRpSI8=;
        b=hEuX57p6zBBM5j/ODJFbZdfYV3ZEHTW2LC+PW6OFa520Pw1yHUeIO70QtPHQnJKwtk
         PR2fKlEBoBNaD5540brmfD7TBaMwHhJnw4jDSAer1HqpwMcepE92iCRGKgiHZ2FE4b6C
         WH+YPRHDyjF+S6NxGRN2xCOMLaa9NZ6323De8qik4wQZeG+hJ2NnqY54pJu8Qkvx4JVg
         mkIYcHCUC6EIE4rRgft7N4jhJt6J6fA15zuS4sRwHz/glxx+sDnIKMMi8TrfgLAXlH9y
         AVDFyQ7WN/xgA/Imzy8FdZkOtEjEAcNLJLpUgiX5tJkx5tRexhWmkRXt4H5HU0sCUVkc
         kbcg==
X-Gm-Message-State: AA+aEWbyPgtmHdkmOsuPcKbIkXFxnBRILY6/fml7OC1/gGP6gCxndLAL
        u4ctpY9WRnFPKngGnsOhcSc=
X-Google-Smtp-Source: AFSGD/Xg+Laf0S0xrPSdiEYEoPueZ3Cl1fIwifRlw9tc8LR2aPnwK0UIbNYk6tO5Qe6G04abJ04uYg==
X-Received: by 2002:adf:f350:: with SMTP id e16mr15494391wrp.125.1545170815513;
        Tue, 18 Dec 2018 14:06:55 -0800 (PST)
Received: from localhost (p200300E41F128C00021F3CFFFE37B91B.dip0.t-ipconnect.de. [2003:e4:1f12:8c00:21f:3cff:fe37:b91b])
        by smtp.gmail.com with ESMTPSA id h16sm8304819wrb.62.2018.12.18.14.06.54
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Tue, 18 Dec 2018 14:06:54 -0800 (PST)
Date: Tue, 18 Dec 2018 23:06:53 +0100
From: Thierry Reding <thierry.reding@gmail.com>
To: Linus Walleij <linus.walleij@linaro.org>
Cc: Thomas Gleixner <tglx@linutronix.de>,
        "open list:GPIO SUBSYSTEM" <linux-gpio@vger.kernel.org>,
        linux-tegra@vger.kernel.org,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        Brian Masney <masneyb@onstation.org>
Subject: Re: [PATCH v2 1/5] gpio: Add support for hierarchical IRQ domains
Message-ID: <20181218220652.GB4227@mithrandir>
References: <20181129170312.23625-1-thierry.reding@gmail.com>
 <20181129170312.23625-2-thierry.reding@gmail.com>
 <CACRpkdYhgCsr2w-MgwdLDvcZXDhkvn2_sgvGW8VskK1=3kVASw@mail.gmail.com>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
        protocol="application/pgp-signature"; boundary="RASg3xLB4tUQ4RcS"
Content-Disposition: inline
In-Reply-To: <CACRpkdYhgCsr2w-MgwdLDvcZXDhkvn2_sgvGW8VskK1=3kVASw@mail.gmail.com>
User-Agent: Mutt/1.11.1 (2018-12-01)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org


--RASg3xLB4tUQ4RcS
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

On Fri, Dec 14, 2018 at 02:41:01PM +0100, Linus Walleij wrote:
> Hi Thierry!
>=20
> thanks a lot for the patch! This is really in the right direction
> of how I want things to go with hierarchical IRQs.
>=20
> Some comments:
>=20
> On Thu, Nov 29, 2018 at 6:03 PM Thierry Reding <thierry.reding@gmail.com>=
 wrote:
>=20
> >  config GPIOLIB_IRQCHIP
> > -       select IRQ_DOMAIN
> > +       select IRQ_DOMAIN_HIERARCHY
>=20
> I understand that IRQ_DOMAIN_HIERARCHY implies
> IRQ_DOMAIN but I kind of like if we anyway select both
> (unless Kconfig dislikes it).
>=20
> Otherwise it looks like we're just using hierarchies.

Okay, I can add that.

>=20
> >  static int gpiochip_to_irq(struct gpio_chip *chip, unsigned offset)
> >  {
> > +       struct irq_domain *domain =3D chip->irq.domain;
> > +
> >         if (!gpiochip_irqchip_irq_valid(chip, offset))
> >                 return -ENXIO;
> >
> > +       if (irq_domain_is_hierarchy(domain)) {
> > +               struct irq_fwspec spec;
> > +
> > +               spec.fwnode =3D domain->fwnode;
> > +               spec.param_count =3D 2;
> > +               spec.param[0] =3D offset;
> > +               spec.param[1] =3D 0;
> > +
> > +               return irq_domain_alloc_irqs(domain, 1, NUMA_NO_NODE, &=
spec);
> > +       }
> > +
> >         return irq_create_mapping(chip->irq.domain, offset);
> >  }
>=20
> This is really nice.
>=20
> > -       gpiochip->to_irq =3D gpiochip_to_irq;
> > +       /*
> > +        * Allow GPIO chips to override the ->to_irq() if they really n=
eed to.
> > +        * This should only be very rarely needed, the majority should =
be fine
> > +        * with gpiochip_to_irq().
> > +        */
> > +       if (!gpiochip->to_irq)
> > +               gpiochip->to_irq =3D gpiochip_to_irq;
>=20
> And I see this is what your driver does, which leaves the default
> domain hierarchy callback path unused.

Actually this is only temporary until the patch that uses a sparse
number space (with the valid masks). After the last patch in the series
the need to override this goes away, so I could follow-up with a patch
to revert this. Or alternatively we could squash the two Tegra patches.
I think keeping them separate is slightly nicer.

Of course, I would even prefer to not move to the sparse number space,
but you seemed to feel very strongly about it last time we discussed
this.

> It's better if you indirect the pointer like we do with some other
> irqchip stuff (see Hans Verkuils patches), i.e. if ->to_irq
> is defined, we save that function pointer and call that at the
> end of the gpiochip_to_irq() pointer, then we override it
> with our own.
>=20
> Since the Tegra186 clearly .to_irq() clearly is mostly the
> same plus some extra, this should work fine and give
> lesser lines of code in that driver.

That sounds an awful lot like a midlayer. I'm not a big fan of that at
all. There are various reasons for this, but others have described it in
much better detail than I could. See here for example:

	https://lwn.net/Articles/336262/

In this particular case one potential problem is that gpiochip_to_irq()
might not always do the right things for everyone, and that it turn may
incentivize people to work around it creatively. For example, one driver
may want to perform some operation before gpiochip_to_irq() is called,
while another driver may have to perform an operation after the call. If
you move towards a midlayer there's no way to satisfy both, unless you
go and add pre- and post-operations of some sort.

I'd like to propose that we instead provide gpiochip_to_irq() as a
helper that drivers can call into. In order to do that, we just need to
make sure that drivers have access to it. Then they can override the
->to_irq() like this:

	static int foo_gpio_to_irq(struct gpio_chip *chip, unsigned int offset)
	{
		/* do something before */
		...

		err =3D gpiochip_to_irq(chip, offset);
		if (err < 0)
			return err;

		/* do something after */
		...
	}

That way we get all the benefits of sharing the code and at the same
time we don't impose any artificial constraints on drivers. Typically in
the library pattern drivers that don't need anything extra would simply
set gpiochip_to_irq() as their implementation, so the default assignment
in the gpiolib core wouldn't be necessary, but that's just a minor
implementation detail.

What do you think?

Thierry

--RASg3xLB4tUQ4RcS
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAABCAAdFiEEiOrDCAFJzPfAjcif3SOs138+s6EFAlwZb3gACgkQ3SOs138+
s6FYFRAAstifgpcibGXEpdbs8id+FrL945YboMHIJ2FohiW/cefjmM/l8xKtTCSL
QsdqyfgAKUa53SroKOZZfU9wrmSXkpX3Q4Lme4VgHwMAOasplVdEtTs5i0hHKzCW
+yrdpsJEEopEgYyUgUL+ickd6vG8S4+u67LTprwYWgEj20PBog4FdeOMBQP/h4Q5
muHE/WtRR+H/wQZDE4a9t0FyO9Kiu0CSNM1E4CzMYyHV9+orExZyB36CLteHCRyd
KJleS3PfeUySxRhKWRVISMMRMpq4K1c1+JqYqumTamvBiwy9wgs1uvSZOWKaVcUU
HBRb9YXZs0pvX0a89vk2seGWUqAxigVAWN/hS6q1e8Y6j1Ybijc4787ByBBx4GAl
0lo1Cxaf6GOjfrESnaa6xexQK13MZ6DL7t5u/XvJBk9S/F4v2Y4GWUMt8tMCIvyG
v9QWMrr8UpzRp/+Ir4LHaS537obT/DhVFImYkZtTuUnPS2IYLbkItLP8pNP1imGh
FRQeotEZj/JZgwwUa0TWNEKSZXdIxA5xqqi7c9aeg8adiVl/R6Yf4Bkew5nPIziB
1Syr7mQwwEzjzECBi0tfnu3uD08Ecj6nVLWCvlI1rTAqzIV0BgrJbD7btzfo7VFo
UEwPB6J20ipMeOwoP1CDEYM8MWfU+7UvTzbBg60HopKem+NFGC4=
=BCPy
-----END PGP SIGNATURE-----

--RASg3xLB4tUQ4RcS--
