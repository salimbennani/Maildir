Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 18:09:55 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga008.fm.intel.com (fmsmga008.fm.intel.com [10.253.24.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C13B35805AD;
	Tue, 18 Dec 2018 01:32:56 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga008-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 18 Dec 2018 01:32:56 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A5boTjxUu/fbaI5hiJIN6MrwDcj/V8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhCOvqdThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGoyz?=
 =?us-ascii?q?b4UNAOQBM+hWrJTzqUUSohulHQmhBvjiyiNUinLswaE2z/gtHAPA0Qc9H9wOqn?=
 =?us-ascii?q?PUrNDtOagdUOC1yrXHwivFb/NKxDzz6ZXIchE9ofGQWrJwbdfaxE4xFwPEiFWf?=
 =?us-ascii?q?tZLqPzWJ1ugXvGib8utgVf6zi24gtwF8uTyvxsYqiobTnIIVzUrI9SJjwIY6PN?=
 =?us-ascii?q?C1TlNwb928EJZIqS2WK497Ttk/T2xmpio20KAKtJ2ncCQQyZkqxQbTZ+Kbf4WM?=
 =?us-ascii?q?+B7uV+acLS1liH9keb+znRe//Emmx+bhTMe7ykxKoTBAktTUtnACyRjT6s+fR/?=
 =?us-ascii?q?tj8UeuxyyP2xrQ6u5aO0A0k7TUK5o7zr43jJoTvlzPHi7wmErokK+bblso9vSs?=
 =?us-ascii?q?5uj9f7nrqIGQO5Vphgz9LqgigM2yDOYgPggLRWeb+OC81LP5/U3+RbVHlvk2kq?=
 =?us-ascii?q?jfsJDHKsUXv625DBFP0oYl9Rm/Cy6q0NMWnHkBMl1FYgmKj5bmO17QOvD0F/S/?=
 =?us-ascii?q?jEq2kDdt2f/GOqftApLXLnjMiLvhZ6py61ZAyAovytBS/5ZUCrACIP3tQEPwu8?=
 =?us-ascii?q?HYAwQ9Mwy1xebnFdp82pkfWWKJHq+WLqfSvUWU6eIoJumGfJUVtyrlK/g5+/7u?=
 =?us-ascii?q?imc0mV8HcqmowZsYcne4Eu5mI0WEe3XshNgBHHwOvgo/SuzqlVKDXSRSZ3a0Q6?=
 =?us-ascii?q?Iz+DU7BJi6AofEQ4CnmKaB0zujHp1KemBGDUiBEXXvd4qaQfsMayWSIslnkjwD?=
 =?us-ascii?q?TrWhT44h1ReztA710bZnL+zU+jEGupLnztR6++rTlRQq/zxuE8udy32NT31znm?=
 =?us-ascii?q?4QXTA2x6B/oUt+yluZy6h3mf5YGMdX5/NIVAc6KJHdw/Z7C9D0RgLOYNOJREy6?=
 =?us-ascii?q?TdWhBDE7VsgxzMMWY0ZhB9WiiQjO3ymwDL8TjbCLAJ00/bja33j+PMt9z3fG1K?=
 =?us-ascii?q?88j1gpWMdPNGumhrJh+AjXHYLGj0KZl6Oyf6QGwCHN7HuDzXaJvExATQF/S7vF?=
 =?us-ascii?q?Um4FakvWt9v54FjCQKGoCbggNgtBysuCKq9RZ93tjFVGQurjOdvEb2KwnWewGQ?=
 =?us-ascii?q?iHxreWYIX2fGUd2T3XCFIYnAAL4XaGKQ8+Cz+8rG3EEjxhC0jjY0P2/ul4s3O0?=
 =?us-ascii?q?UEk0whqOb01g0bq15xEUieadS/MVwrILpiMhpy9oE1a62tLcE8CAqBZ5fKVAfd?=
 =?us-ascii?q?M9509K1X7Ytwx4OZygM6Bih14EfwRrpU/u0A93CoFBkcgso3Mn1w5yKaOe0FNc?=
 =?us-ascii?q?eDKUx5HwOrvLKmbs+BCjcbLZ2lbb0NyO4KcA9Ow4q0n/vAGuDkct6XFn3Mda0n?=
 =?us-ascii?q?SC5pTGFhEdUY/sXUkt8Rh6pLbaYjcm6oPQ1H1sN7S0szDY19IoAusl1givf9NF?=
 =?us-ascii?q?PKyYEw/yFtUQB9KyJ+wyh1ipchUEMfhS9a4pJc+pa+GK2a+rPOl6mjKmgn9K4I?=
 =?us-ascii?q?R80kKK6ip9RfTE35cDw/GEwASHUy3wg0umssDygYpEfy0dHnKjySj4A45cfrdy?=
 =?us-ascii?q?fYcXBmi0Oc2429J+i4TrW3FG7l6jBkoK19OzdhqWclPywxdQ1UMRoXG8nSu4zj?=
 =?us-ascii?q?p0kywmr6aF3SzOxfjiewQDOmJRWGZiilLsK5Cuj98GREiocxQplBy96Ef6xqhX?=
 =?us-ascii?q?vqR+I3PIQUdVeSj7NGViUqq2trqfbM9D8pIosSNLUOuiZVCWUKLyoxwf0yn7BW?=
 =?us-ascii?q?tR2Cg7dy22upX+hxF6iniSLGxwrHrafsF83wzf68bfRf5S3zoGQjd3iT/MC1i4?=
 =?us-ascii?q?Ptmp+8iUlpjZvuC/UWKhSoNccS3xwYycsyu74HVgAQejkPCrht3nDQ863Df71t?=
 =?us-ascii?q?ZwUiXEthT8Yojt16mhNeJnf09oBELz6sZgG4F+lJcwi48U2XQAmpqV+n8Hm3/p?=
 =?us-ascii?q?MdpHwaL+cGYNRTkTzt7W+gfl2VdvLnKUx43jUHWdzdBsZ927YmMQxyI84NpGCK?=
 =?us-ascii?q?aS7LxYgyR1pkC0oh7WYfh4hj0d0+ch6GYGg+EVvwog1iCdArERHUZCJyDtmQqH?=
 =?us-ascii?q?78uirKpJfmagaqa/1FBxnd26CLGCowdcWGv2e5s4HC9w6Nl/P0zI0HHp9o7kf9?=
 =?us-ascii?q?zQZ8oJthKIixfAk/RVKJUpm/oWgipnPHjxvHw/xO49kBxuxoq6vImcJmVp/aK5?=
 =?us-ascii?q?BANYNzLva8MS/DHtkbhRnsKM04+zGZVhHy0BXIH0QvKwDDISqfPnOh6VHzImrX?=
 =?us-ascii?q?ebHaffERWb6Ed7tH/PF5GrN3eKJHgW19liRR+dJFBBjwAQRjk1gpk5FgWyzsz7?=
 =?us-ascii?q?bEh5/iwR5kL/qhZUyOJnLRz/XXnEpAuydjc4UpufLAdV7gFf4UfaK9ee4/l3Hy?=
 =?us-ascii?q?FZ+J2hsQOMJnaaZwROEWEGREiEC0r/Mbmp4NnK6/KYCfamL/vSfbWOrvRTVveP?=
 =?us-ascii?q?xZKyy4tm4iyDNsOVMnl5CP073EVDUGt9G8TYnTUPViMWmzjMb86duBez5Cl3ot?=
 =?us-ascii?q?qj//TsXQLl/ZGPBKdKMdVz5xC2hr+ON+6OiyZ4KjZY1ZIMyWXLyLgF214ShD9h?=
 =?us-ascii?q?dyOwEbQbriPNSKPQmqlKDx8UcS9zNc1I774i0QlJI8LUltT11rtghP4vF1hFTU?=
 =?us-ascii?q?Dhmt2uZcESOW69KUjIBFyVO7WGPzHLx8D3bLi4Sb1RiuVUqhKxtSyaE0/lIjSM?=
 =?us-ascii?q?iT3pWwqzPuFLiSGRJAZet52lchZxFWjjS8rragG6MN9ylzE53ac4iW/KNWECNz?=
 =?us-ascii?q?hxaEdNrryW7SNFjfRzAW1B7nx5LeaanyaV9fXXKpETsfFzGCR7i/pa4Ggmy7tS?=
 =?us-ascii?q?9CxFROZ6mC3Xrt5vpVGpiuiOyjp9XxpIpTZGn4aLvURkOaXE+ZhMQ3fE/BQR7W?=
 =?us-ascii?q?qODxQGvcdqCtrqu/MY9t+aqqv3JTFe8tScxsAcAcXVJM+deC4/OB7kHiLVCk0e?=
 =?us-ascii?q?Rj6tOGDTilZ1meuXsHaSq85phILrnc8wS7lQWVopXtwHC1h5G8BKdIl2WDgpl6?=
 =?us-ascii?q?Ldg9MJ+Wa5sDHVRcNTpJeBUeidV6a8YA2FhKVJMkNbiYjzKp4eY8iigxRv?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AkAABxvRhch0O0hNFkHgEGBwaBUggLA?=
 =?us-ascii?q?YFVgV83J4N8lBKCDRSXRhSBXy0TAYdfIjUIDQEDAQEBAQEBAgETAQEBCgsJCCk?=
 =?us-ascii?q?jDII2JAGCYQEBAQECAQECCxUEGQEBIxQBBQkBAQoLDQICJgICAx8SAQUBHAYTB?=
 =?us-ascii?q?YMdgXkIBZwiPIopcHwzgnYBAQWHNggSeYs0gVc/hCOEaoMfgleJSJdbBwKCJQS?=
 =?us-ascii?q?IKIcOGJFUmV8wgScCggozGjB0BoI1ghuJAYVAPjOBBQEBjXgBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AkAABxvRhch0O0hNFkHgEGBwaBUggLAYFVgV83J4N8lBK?=
 =?us-ascii?q?CDRSXRhSBXy0TAYdfIjUIDQEDAQEBAQEBAgETAQEBCgsJCCkjDII2JAGCYQEBA?=
 =?us-ascii?q?QECAQECCxUEGQEBIxQBBQkBAQoLDQICJgICAx8SAQUBHAYTBYMdgXkIBZwiPIo?=
 =?us-ascii?q?pcHwzgnYBAQWHNggSeYs0gVc/hCOEaoMfgleJSJdbBwKCJQSIKIcOGJFUmV8wg?=
 =?us-ascii?q?ScCggozGjB0BoI1ghuJAYVAPjOBBQEBjXgBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,367,1539673200"; 
   d="scan'208";a="56330578"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 18 Dec 2018 01:32:55 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726451AbeLRJcw (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 18 Dec 2018 04:32:52 -0500
Received: from mail-io1-f66.google.com ([209.85.166.66]:41729 "EHLO
        mail-io1-f66.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726358AbeLRJcv (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 18 Dec 2018 04:32:51 -0500
Received: by mail-io1-f66.google.com with SMTP id s22so12230810ioc.8
        for <linux-kernel@vger.kernel.org>; Tue, 18 Dec 2018 01:32:50 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=nnD/TVnVuhMz44DLAm141Uh0wL1dUKa0bfclTkZzLQo=;
        b=Y1Mtq29RfFUOBEApc9eBzYW49T2yVZZEtDlyl3+pNUDP7tIYnAGKF2ODP+SXPJrx6Q
         8t4tTL4elEYHQPdr/V7FldSTYBxhjoZVtith973V6VF0gmnXqBCqh1lbVSsKVxm64z5F
         bKOdb1N1fI8eesXxFR7epVaLppj94O5vWigYE=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=nnD/TVnVuhMz44DLAm141Uh0wL1dUKa0bfclTkZzLQo=;
        b=U4XeBIfJ2hLZn2aF685dBuER/0MxKgzpCyqr10cKPwAGVxXml09/wf8dkTVkNOx3A7
         M6AT6JutRtIjJpcspc8/gzZ9C9XIXrUgrbhdeij/51DUCX+SeoaW3FNY+fIkUjqFnnFC
         PBkj98GqPUfthPQnhg1hV19HjNv7kBUCWYkoXK/1dDxZPxA7PKS8GB12F3ucvzqp8mfV
         ZLRBApvnvPzS24wBQbLJM7zCKQKPHJ2QPkF2Ayh0RzBJbNgwWC3PuuuinVT2c1hkuwQt
         B5HB6uqzVWzVjjFyQdlo1Z5ruOC95byFwVnt1w1mdSXhui/qXb+YKwQgI+BEpCUL8ZzG
         9Tyg==
X-Gm-Message-State: AJcUukc1WTMG/IdLA8T6/DlhtAo1Z5G+t8rChHZdqptP7G2aLSsg9TN9
        ubnf4nf89zytRpWwBfz55MA3IDw3cHBM4zRisEw+Y85mWgM=
X-Google-Smtp-Source: ALg8bN6VJFGLqh3Toaloxzi4K3OEu0qIH4NsNI7IPQiYDiKmqhZd28PttCzK0UALOTjKwaqCOO3SKXeoPEjxX4EolB0=
X-Received: by 2002:a6b:6b0d:: with SMTP id g13mr758681ioc.18.1545125570205;
 Tue, 18 Dec 2018 01:32:50 -0800 (PST)
MIME-Version: 1.0
References: <1544803317-7610-1-git-send-email-vincent.guittot@linaro.org>
 <1544803317-7610-4-git-send-email-vincent.guittot@linaro.org> <f6443ca2-3e82-d4eb-deb8-2aff44c618e2@arm.com>
In-Reply-To: <f6443ca2-3e82-d4eb-deb8-2aff44c618e2@arm.com>
From: Vincent Guittot <vincent.guittot@linaro.org>
Date: Tue, 18 Dec 2018 10:32:38 +0100
Message-ID: <CAKfTPtCJBGtmx7pQJCwhcMaxyXWoh04o_C+pR6z+YVykXwvv5Q@mail.gmail.com>
Subject: Re: [PATCH v2 3/3] sched/fair: fix unnecessary increase of balance interval
To: Valentin Schneider <valentin.schneider@arm.com>
Cc: Peter Zijlstra <peterz@infradead.org>,
        Ingo Molnar <mingo@kernel.org>,
        linux-kernel <linux-kernel@vger.kernel.org>,
        Morten Rasmussen <Morten.Rasmussen@arm.com>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Valentin,

On Mon, 17 Dec 2018 at 17:56, Valentin Schneider
<valentin.schneider@arm.com> wrote:
>
> Hi Vincent,
>
> About time I had a look at this one...
>
> On 14/12/2018 16:01, Vincent Guittot wrote:
> > In case of active balance, we increase the balance interval to cover
> > pinned tasks cases not covered by all_pinned logic.
>
> AFAIUI the balance increase is there to have plenty of time to
> stop the task before going through another load_balance().
>
> Seeing as there is a cpus_allowed check that leads to
>
>     env.flags |= LBF_ALL_PINNED;
>     goto out_one_pinned;
>
> in the active balancing part of load_balance(), the condition you're
> changing should never be hit when we have pinned tasks. So you may want
> to rephrase that bit.

In this asym packing case, It has nothing to do with pinned tasks and
that's the root cause of the problem:
the active balance triggered by asym packing is wrongly assumed to be
an active balance due to pinned task(s) and the load balance interval
is increased without any reason

>
> > Neverthless, the active
> > migration triggered by asym packing should be treated as the normal
> > unbalanced case and reset the interval to default value otherwise active
> > migration for asym_packing can be easily delayed for hundreds of ms
> > because of this all_pinned detection mecanism.
>
> Mmm so it's not exactly clear why we need this change. If we double the
> interval because of a pinned task we wanted to active balance, well it's
> just regular pinned task issues and we can't do much about it.

As explained above, it's not a pinned task case

>
> The only scenario I can think of is if you had a workload where you wanted
> to do an active balance in several successive load_balance(), in which case
> you would keep increasing the interval even though you do migrate a task
> every time (which would harm every subsequent active_balance).
>
> In that case every active_balance "user" (pressured CPU, misfit) is
> affected, so maybe what we want is something like this:
>
> -----8<-----
> @@ -9136,13 +9149,11 @@ static int load_balance(int this_cpu, struct rq *this_rq,
>                 sd->balance_interval = sd->min_interval;
>         } else {
>                 /*
> -                * If we've begun active balancing, start to back off. This
> -                * case may not be covered by the all_pinned logic if there
> -                * is only 1 task on the busy runqueue (because we don't call
> -                * detach_tasks).
> +                * If we've begun active balancing, start to back off.
> +                * Don't increase too much in case we have more active balances
> +                * coming up.
>                  */
> -               if (sd->balance_interval < sd->max_interval)
> -                       sd->balance_interval *= 2;
> +               sd->balance_interval = 2 * sd->min_interval;
>         }
>
>         goto out;
> ----->8-----
>
> Maybe we want a larger threshold - truth be told, it all depends on how
> long the cpu stopper can take and if that delay increase is still relevant
> nowadays.

hmm the increase of balance interval is not linked to cpu stopper but
to increase the load balance interval when we know that there is no
possible load balance to perform

Regards,
Vincent
>
> >
> > Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org>
> > ---
> >  kernel/sched/fair.c | 27 +++++++++++++++------------
> >  1 file changed, 15 insertions(+), 12 deletions(-)
> >
> > diff --git a/kernel/sched/fair.c b/kernel/sched/fair.c
> > index 9591e7a..487287e 100644
> > --- a/kernel/sched/fair.c
> > +++ b/kernel/sched/fair.c
> > @@ -8857,21 +8857,24 @@ static struct rq *find_busiest_queue(struct lb_env *env,
> >   */
> >  #define MAX_PINNED_INTERVAL  512
> >
> > +static inline bool
> > +asym_active_balance(struct lb_env *env)
> > +{
> > +     /*
> > +      * ASYM_PACKING needs to force migrate tasks from busy but
> > +      * lower priority CPUs in order to pack all tasks in the
> > +      * highest priority CPUs.
> > +      */
> > +     return env->idle != CPU_NOT_IDLE && (env->sd->flags & SD_ASYM_PACKING) &&
> > +            sched_asym_prefer(env->dst_cpu, env->src_cpu);
> > +}
> > +
> >  static int need_active_balance(struct lb_env *env)
> >  {
> >       struct sched_domain *sd = env->sd;
> >
> > -     if (env->idle != CPU_NOT_IDLE) {
> > -
> > -             /*
> > -              * ASYM_PACKING needs to force migrate tasks from busy but
> > -              * lower priority CPUs in order to pack all tasks in the
> > -              * highest priority CPUs.
> > -              */
> > -             if ((sd->flags & SD_ASYM_PACKING) &&
> > -                 sched_asym_prefer(env->dst_cpu, env->src_cpu))
> > -                     return 1;
> > -     }
> > +     if (asym_active_balance(env))
> > +             return 1;
> >
> >       /*
> >        * The dst_cpu is idle and the src_cpu CPU has only 1 CFS task.
> > @@ -9150,7 +9153,7 @@ static int load_balance(int this_cpu, struct rq *this_rq,
> >       } else
> >               sd->nr_balance_failed = 0;
> >
> > -     if (likely(!active_balance)) {
> > +     if (likely(!active_balance) || asym_active_balance(&env)) {
>
> AFAICT this makes us reset the interval whenever we do an asym packing
> active balance (if the task is pinned we would goto out_one_pinned).
> This goes against the logic I had understood so far and that I explained
> higher up.
>
> >               /* We were unbalanced, so reset the balancing interval */
> >               sd->balance_interval = sd->min_interval;
> >       } else {
> >
