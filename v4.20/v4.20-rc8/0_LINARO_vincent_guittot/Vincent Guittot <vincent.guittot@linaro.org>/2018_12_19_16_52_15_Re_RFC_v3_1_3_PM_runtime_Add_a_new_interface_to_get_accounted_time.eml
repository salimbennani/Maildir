Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  20 Dec 2018 08:40:53 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C3624580522;
	Wed, 19 Dec 2018 08:52:33 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 19 Dec 2018 08:52:33 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AD8PDIBImRi88kaKnuNmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULvT/rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZUclRWS5ODIOy?=
 =?us-ascii?q?YYUMEuQPI/pXr5Llp1YMtha+GRWgCfnzxjNUmnP736s32PkhHwHc2wwgGsoDv3?=
 =?us-ascii?q?vVrNXzKKgdT+a1zLXVxjvCcvNW2Cv96JTPchA9vPqBWqxwccvXyUYzCQzFiEmQ?=
 =?us-ascii?q?pZbqPzOI1+QNr3Sb7+18Ve+0j24nqgdxrSK1xscrkIXJgZgVyl/d+Ch/3Y07Js?=
 =?us-ascii?q?W4RVZlbdK4FJZcrTyWOoVoTs84Xm1luzo2xqcHtJO5ZCQG1ogryhrFZ/GEc4WE?=
 =?us-ascii?q?+A/vWeeQLDtimX5ofLOyihCv+ka60OL8TNO70FNSoypFjNbMsncN2gTN6siIVP?=
 =?us-ascii?q?R95F2t2TWR2ADJ7OFLP0Q0mbDcK547zb48jpsTsULdES/qgEj6krOae0E+9uS1?=
 =?us-ascii?q?5enrfK/qqoKfOoNokA3zM6YjltS6AesiMwgOW2ab+f671L3m5UD5RLRKjvsrkq?=
 =?us-ascii?q?jWqZzaJtoUprS/AwBL1oYv8hG/Djmg0NsGh3kKN0xFeB2ZgIjzIV3OI+73De25?=
 =?us-ascii?q?g1uylDdn3ffGPqfuApnVNHjMjK/hfaph605b0AczydFf55FKBb0bL/PzR1T8tN?=
 =?us-ascii?q?jZDh8/Lgy1zPzrCNR71oMCR22PBrWVP7/VsV+N/ugvOfWDZJcJuDbhLPgo//7u?=
 =?us-ascii?q?gmU4mV8BZ6ap2oEbaHClHvt8JUWZbmHhgtMAEWcMowo/Q/bmiFyEUT5PeXmyW7?=
 =?us-ascii?q?gw6S08CIKjFY3DXJyigKSd3CenGZ1bfmJGCleSHnvydIWEXPEMaCSVIsJ6ljwE?=
 =?us-ascii?q?VL6hS5Iu1B20tQ/6zaZnIfTQ+iECqZ3j09117fXJlR4u7Tx0E9id02aVQm5uhW?=
 =?us-ascii?q?MIRzg23KNlrUxn0FiD07N1g/hZFdxV+vNIXR02NZ/az+xmFd/yXhjNccuOSFaj?=
 =?us-ascii?q?Wt+mGy0+Tsotw98SZEZwA9aigQrF3yawB78VlqaEBJo78q/H23jxJsB9y2vJ1a?=
 =?us-ascii?q?U7jlkmRNdPOnOihqJl6wfTAIvJmV2Dl6m2baQcwDLN9GCbwGWTpk5YThB/Xb/F?=
 =?us-ascii?q?XX8FYEvWtsr25kXFQ7+qCrQnNw9BxNWGKqtLbN3pkFpHSO3iONTYf2K+hWOwCQ?=
 =?us-ascii?q?yUybOLaYrgY38d0znFCEgYjwAT+m6LOhUkCSe/vW3SFjxuGkjpY0P37+Z+rmi2?=
 =?us-ascii?q?Tks1zwGMck1g2KC5+h8ThfyAVfwT2qgItzsmqzVxBFy9xc7ZC8Kcpwp9e6VRec?=
 =?us-ascii?q?894FZC1WLeqwx9PpyhI7p+hlIEdAR3pUfu1xRxCoVPisUqqHIqzAxvKaOXyl9B?=
 =?us-ascii?q?djWY3YzuNb3TMGX94Beva6vO0FHEzNmW4rsP6Og/q1j7pg6pElQt8np53NhVyX?=
 =?us-ascii?q?eT/YjKAxcIXpL3UUY38AZ6qqreYik84YPUyHJtPbO1sj/Ex9ImGu8lxgy8cNdY?=
 =?us-ascii?q?NaOODBXyHNECB8iyNOwqnECkbxIZPOxI6KE4JcKnd/uc166tM+ZthzamjWVB4I?=
 =?us-ascii?q?Bg3UOA7St8SujU35kbx/GUxBeIVzD5jF25qMD4hZhEZS0OHmq40SXkHo9RabFo?=
 =?us-ascii?q?coYRFGiuJNe7xtNgiJ73Wn5U7UKsCEkC2MC0ZxWSdVv93QtL2EQToHynnza4zj?=
 =?us-ascii?q?NunzEoqKqfwDLBw+D4eBUbPW5LQXFojU3wLoisk9AaQE+oYhAplRuk/0r7x7JX?=
 =?us-ascii?q?pL9iL2nVWkpIeyn2L2d/Uqq/rLaCYshP6I82viVTSuizfVeaSrvlqRsAzyzjB3?=
 =?us-ascii?q?dexCw8dzyyuJX2hQZ6iGGeLHZ0tnbZYtt/xRTc5NzdQ/5ewDwGSTJ8iTnWAFi8?=
 =?us-ascii?q?Itao8c+Vl5fFruCxSWahWodPfinsyIOKrDG76nFyAR2jg/CzncXqEAgg3i/8zd?=
 =?us-ascii?q?VqVyTIrBDnb4nv1qS6N/9nf0ZyCF/97cp6Bp9xko8qiJ4M3ngag42f/WAbnmfr?=
 =?us-ascii?q?LdVbxaX+YWIORTERwt7Z+gjl2FB5IXKPyIL0TXGdwspnZ9mnbWIawCM978ZWCK?=
 =?us-ascii?q?iK6LxIhzd6ol29rQjJe/hygi8dyecy6H4dm+wJvQstziaHDbwIE0hXIzfslwiW?=
 =?us-ascii?q?4NCkt6pYenyvcber2Up6nNChCqyCow5GVHb4fJciATF/7sFlPF3Q133z75nueM?=
 =?us-ascii?q?PMYtILqh2UjxDAgvBJKJI2k/oGnytmNnj7vX040O47lh1u0Iq+vIiGLWVt4a24?=
 =?us-ascii?q?DgRZNj3ze8Mc5DXtgbxCkcaR2oClBo9hFSkTXJv0UfKoFyofuu/9OAaJFD08t2?=
 =?us-ascii?q?2XGb7CHQKE7EdmrnTPE42kNn2NJXkZy8liSweZJEBFnA8UWzA6lIYjFg+23Mzh?=
 =?us-ascii?q?bFt55jcJ6176sBRMz/xnNwLlXmfDvguoaSo0SJuCLBpQ9A5C/FzYMcif7uJ1Ai?=
 =?us-ascii?q?FZ8YetrA2LKmyHeQtICXsFVVCDB1DmJrOu/8XP8/CEBuqiKPvDebWPqetDV/eR?=
 =?us-ascii?q?2JKgyI1m8yyXNsWIOHliAOY22k5CXXB/BsTYlC8DSy0RlyLRccGboA2w9TFwrs?=
 =?us-ascii?q?C66P7rQh7g5ZOTC7tONtVi4xC2jrmCN+6ThyZ5KCxU1pAWxX/Px7gQwkQSizx1?=
 =?us-ascii?q?dzS2FbQAtCjNTL/fm6NNDh4bbT9zO9VM764mwgZNPsvbgMvv1rFklv41F0tFVV?=
 =?us-ascii?q?v5l86zeMwFOHu9O03HBUqRMLSGJCbGw8X2YaO6VL1Rg/9Ytxy2uTaHDUDjOi6P?=
 =?us-ascii?q?mCXuVxCqKetMlj2UPARCuIGhdRZgEXTjTNPjahGhLNB7lyE5wb0qiXPMLmMcNT?=
 =?us-ascii?q?l8c0VQrryf9y9Yg/N/G3Bf4XphN+WLhyGZ7+zAIJYMrfRrGjh0l/5d4Hkiy7pa?=
 =?us-ascii?q?9idERPl0mCvUttFvolGmnfOJyjpoSxdOrjdLhISWvURtI6nZ959AWWra8xIJ92?=
 =?us-ascii?q?mfFxMKp942QuHo7p1UxJDvnaToMzBEu4bJ+cVaB8HSM9mANlIlMBzgAjmSCxEK?=
 =?us-ascii?q?G22FL2ba0nJclvqf8GHdgYU7toTrhNJaVL5dX1EzCrUVF0V5ANseCJN2WDo+lv?=
 =?us-ascii?q?iclsFetin2lwXYWMgP5sOPbfmVG/i6bW/B1bQ=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AgAABidhpch0O0hNFdAQYdAQEFAQcFA?=
 =?us-ascii?q?YFSBwELAYNrFBODfZQVgg0Ul0mBdioTAYctIjUIDQEDAQEBAQEBAgETAQEBCA0?=
 =?us-ascii?q?JCCkjDII2JAGCYQEBAQECAQECIAQZAQE3AQQBCQEBCgsNAgImAgIDHxIBBQEcB?=
 =?us-ascii?q?hMFgx2BeggFnF88iilwfDOCdgEBBYIuhH0IEnmLNIFXP4NuBy6EZQkFgxaCV4k?=
 =?us-ascii?q?nEkCBSJUbWgcCgiUEjzkYgV6Pe4pNjyYwgScBggszGjB0BoI1ghsMF4hehUA+M?=
 =?us-ascii?q?4EFAQGLEymCJAEB?=
X-IPAS-Result: =?us-ascii?q?A0AgAABidhpch0O0hNFdAQYdAQEFAQcFAYFSBwELAYNrFBO?=
 =?us-ascii?q?DfZQVgg0Ul0mBdioTAYctIjUIDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCY?=
 =?us-ascii?q?QEBAQECAQECIAQZAQE3AQQBCQEBCgsNAgImAgIDHxIBBQEcBhMFgx2BeggFnF8?=
 =?us-ascii?q?8iilwfDOCdgEBBYIuhH0IEnmLNIFXP4NuBy6EZQkFgxaCV4knEkCBSJUbWgcCg?=
 =?us-ascii?q?iUEjzkYgV6Pe4pNjyYwgScBggszGjB0BoI1ghsMF4hehUA+M4EFAQGLEymCJAE?=
 =?us-ascii?q?B?=
X-IronPort-AV: E=Sophos;i="5.56,373,1539673200"; 
   d="scan'208";a="57033009"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 19 Dec 2018 08:52:31 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729463AbeLSQw2 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 19 Dec 2018 11:52:28 -0500
Received: from mail-it1-f196.google.com ([209.85.166.196]:52897 "EHLO
        mail-it1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727818AbeLSQw2 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 19 Dec 2018 11:52:28 -0500
Received: by mail-it1-f196.google.com with SMTP id g76so10668133itg.2
        for <linux-kernel@vger.kernel.org>; Wed, 19 Dec 2018 08:52:27 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=G6OfRbtLwxomkkD2RXXvP3UG8hQuxK3yZxFWtpy8wXE=;
        b=ij7jhaJhMDxA5VGbyMQXTLE6I4FHwMIzDl57Wp4jVg8OG9eoH16B23Kse3xZ4eNLGf
         3ZbJG6mX0cTMPd+wI4AGn31G8pTw0bVxx/7semwEYeURtQJI1XK5W+I27FAIIJvGSjib
         126YfzMxtnaO71QCHh1oHrL29MgzxTrEOFUfM=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=G6OfRbtLwxomkkD2RXXvP3UG8hQuxK3yZxFWtpy8wXE=;
        b=BVc0hT1CovM3mjIeiEL8OCn28bsOWaruuogpS/094aw73XUW8IzjYjojICYMGzlLYI
         SJTNwHHn7aXXdE6o3v0XKJXiCGJOJh7pFUaJR7FBJdYVY7SAs+j8726sCc5V64wGifhy
         Ayr6cm33ydwxBi0VWMtnfJf88sBPJa3KmLTHmHUB5A0v0LcsFOqRMmLx2onZ8dFUICDM
         e4bn01Fs2zO6ls2AKwUkg3bLKTgL+shJEnBpDmdRFZ5vIta/n2OmdtC8XtaTIVmVASMi
         6hAVcFZlXpLDaIIsMhWlGaOsBMNBZuPxJAHQi9TEWPhahaEW2ihMmvk3YxQXpBugoRui
         GTpw==
X-Gm-Message-State: AA+aEWabSBY3LS+RZ0VohomUjo1uvU1d/8Xo1HU//lwVfHzCHfL+SuR9
        egtmK2BBCiAI9Zy7/TKlufDo8mYK8f7hfQbX12VYpA==
X-Google-Smtp-Source: AFSGD/UgfuvFDJmp7CyARUbrYJmc76u8INW1MVEH056M8z1gm3czj6oVBmixwleBAFaj4zbC/9NQIs7DyL7CVDshvpc=
X-Received: by 2002:a24:a20e:: with SMTP id j14mr7448865itf.14.1545238347264;
 Wed, 19 Dec 2018 08:52:27 -0800 (PST)
MIME-Version: 1.0
References: <1545144923-31546-1-git-send-email-vincent.guittot@linaro.org>
 <1545144923-31546-2-git-send-email-vincent.guittot@linaro.org>
 <CAPDyKFq6X8vJU=pK1fgirGkD2-GS=LryRP1No8bSgPNLbyvAEg@mail.gmail.com>
 <CAKfTPtCpv0MqF64JGTyR63bqKdAhXzL1fEsNbS6DHsD-jXYpKw@mail.gmail.com>
 <CAPDyKFrSxX-eBsTiEvbrbjVpqkSuBnhxruCgtihH6hSvWSFD1g@mail.gmail.com>
 <CAKfTPtB=TUAz=KpZzJsRUvK8ymiXnTgQ3BxcY0yu9YbJ1BW7QA@mail.gmail.com>
 <CAPDyKFoR7t=K65n0_+4yRqdpRMZ0BbA16cDhmxEvNhm0qEOXNQ@mail.gmail.com>
 <CAKfTPtA4Fr6Xk7+dUpzZqGvK6dJGtWAiz70Ho4noQk3gBdGFdg@mail.gmail.com> <CAPDyKFqpieqgh-0U_N1wwWdciotMAAJ2SRNXpGAb8D2voiaOJA@mail.gmail.com>
In-Reply-To: <CAPDyKFqpieqgh-0U_N1wwWdciotMAAJ2SRNXpGAb8D2voiaOJA@mail.gmail.com>
From: Vincent Guittot <vincent.guittot@linaro.org>
Date: Wed, 19 Dec 2018 17:52:15 +0100
Message-ID: <CAKfTPtBp+eCqyCWh27FWe8pkrFJiLQitPL_+kfL42r_BTq6DcQ@mail.gmail.com>
Subject: Re: [RFC v3 1/3] PM/runtime: Add a new interface to get accounted time
To: Ulf Hansson <ulf.hansson@linaro.org>
Cc: "open list:THERMAL" <linux-pm@vger.kernel.org>,
        linux-kernel <linux-kernel@vger.kernel.org>,
        "Rafael J. Wysocki" <rjw@rjwysocki.net>,
        Thara Gopinath <thara.gopinath@linaro.org>,
        jani.nikula@linux.intel.com,
        Joonas Lahtinen <joonas.lahtinen@linux.intel.com>,
        rodrigo.vivi@intel.com, David Airlie <airlied@linux.ie>,
        "Intel graphics driver community testing & development" 
        <intel-gfx@lists.freedesktop.org>,
        dri-devel <dri-devel@lists.freedesktop.org>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Wed, 19 Dec 2018 at 17:36, Ulf Hansson <ulf.hansson@linaro.org> wrote:
>
> On Wed, 19 Dec 2018 at 14:26, Vincent Guittot
> <vincent.guittot@linaro.org> wrote:
> >
> > On Wed, 19 Dec 2018 at 11:43, Ulf Hansson <ulf.hansson@linaro.org> wrote:
> > >
> > > On Wed, 19 Dec 2018 at 11:34, Vincent Guittot
> > > <vincent.guittot@linaro.org> wrote:
> > > >
> > > > On Wed, 19 Dec 2018 at 11:21, Ulf Hansson <ulf.hansson@linaro.org> wrote:
> > > > >
> >
> > > > > > > >
> > > > > > > > diff --git a/drivers/base/power/runtime.c b/drivers/base/power/runtime.c
> > > > > > > > index 7062469..6461469 100644
> > > > > > > > --- a/drivers/base/power/runtime.c
> > > > > > > > +++ b/drivers/base/power/runtime.c
> > > > > > > > @@ -88,6 +88,32 @@ static void __update_runtime_status(struct device *dev, enum rpm_status status)
> > > > > > > >         dev->power.runtime_status = status;
> > > > > > > >  }
> > > > > > > >
> > > > > > > > +u64 pm_runtime_accounted_time_get(struct device *dev, enum rpm_status status, bool update)
> > > > > > > > +{
> > > > > > > > +       u64 now = ktime_to_ns(ktime_get());
> > > > > > >
> > > > > > > I think you should stay on jiffies here - and then switch to ktime in patch 3.
> > > > > > >
> > > > > > > > +       u64 delta = 0, time = 0;
> > > > > > > > +       unsigned long flags;
> > > > > > > > +
> > > > > > > > +       spin_lock_irqsave(&dev->power.lock, flags);
> > > > > > > > +
> > > > > > > > +       if (dev->power.disable_depth > 0)
> > > > > > > > +               goto unlock;
> > > > > > > > +
> > > > > > > > +       /* Add ongoing state  if requested */
> > > > > > > > +       if (update && dev->power.runtime_status == status)
> > > > > > > > +               delta = now - dev->power.accounting_timestamp;
> > > > > > > > +
> > > > > > >
> > > > > > > Hmm. Do we really need to update the accounting timestamp? I would
> > > > > > > rather avoid it if possible.
> > > > > >
> > > > > > i915/drm uses this to track ongoing suspended state. In fact they are
> > > > > > mainly interested by this part
> > > > >
> > > > > Again, sorry I don't follow.
> > > >
> > > > In fact we don't update dev->power.accounting_timestamp but only use
> > > > it to get how much time has elapsed in the current state.
> > > >
> > > > >
> > > > > My suggested changes below, would do exactly that; track the ongoing
> > > > > suspended state.
> > > > >
> > > > > The user can call the function several times while the device remains
> > > > > RPM_SUSPENDED, and if needed the user could then compute the delta
> > > > > in-between the calls, for whatever reason that may be needed.
> > > >
> > > > So I'm not sure to catch your question:
> > > > Is your problem linked to status != RPM_SUSPENDED or the update
> > > > parameter that compute delta ?
> > >
> > > My intent was to keep things simple.
> > >
> > > 1. Only expose last suspended time, which means tracking the ongoing
> > > suspended state. In other words, you can also remove "enum rpm_status
> > > status" as the in-parameter to pm_runtime_accounted_time_get().
> >
> > Ok for this point if Rafael doesn't see any benefit of keeping the
> > generic interface
> >
> > > 2. Don't allow the user of pm_runtime_accounted_time_get() to update
> > > the current timestamp, in "dev->power.accounting_timestamp".
> >
> > But pm_runtime_accounted_time_get doesn't update
> > dev->power.accounting_timestamp, it only reads it to know when when
> > the last state transition happened
>
> I understand, sorry for not being clear enough.
>
> My point is, you must not update dev->power.suspended_time, without
> also setting a new value for dev->power.accounting_timestamp.
> Otherwise, the next time the core calls
> update_pm_runtime_accounting(), it will end up adding a wrong delta to
> dev->power.suspended_time.

I fully agree on that and that's why dev->power.accounting_timestamp
is not and has never been modified

>
> BTW, it seems like you have based this on top of some patch converting
> from jiffies to ktime, as I can't fine dev->power.suspended_time, but
> instead I have dev->power.suspended_jiffies.
>
> On Wed, 19 Dec 2018 at 14:26, Vincent Guittot
> <vincent.guittot@linaro.org> wrote:
> >
> > On Wed, 19 Dec 2018 at 11:43, Ulf Hansson <ulf.hansson@linaro.org> wrote:
> > >
> > > On Wed, 19 Dec 2018 at 11:34, Vincent Guittot
> > > <vincent.guittot@linaro.org> wrote:
> > > >
> > > > On Wed, 19 Dec 2018 at 11:21, Ulf Hansson <ulf.hansson@linaro.org> wrote:
> > > > >
> >
> > > > > > > >
> > > > > > > > diff --git a/drivers/base/power/runtime.c b/drivers/base/power/runtime.c
> > > > > > > > index 7062469..6461469 100644
> > > > > > > > --- a/drivers/base/power/runtime.c
> > > > > > > > +++ b/drivers/base/power/runtime.c
> > > > > > > > @@ -88,6 +88,32 @@ static void __update_runtime_status(struct device *dev, enum rpm_status status)
> > > > > > > >         dev->power.runtime_status = status;
> > > > > > > >  }
> > > > > > > >
> > > > > > > > +u64 pm_runtime_accounted_time_get(struct device *dev, enum rpm_status status, bool update)
> > > > > > > > +{
> > > > > > > > +       u64 now = ktime_to_ns(ktime_get());
> > > > > > >
> > > > > > > I think you should stay on jiffies here - and then switch to ktime in patch 3.
> > > > > > >
> > > > > > > > +       u64 delta = 0, time = 0;
> > > > > > > > +       unsigned long flags;
> > > > > > > > +
> > > > > > > > +       spin_lock_irqsave(&dev->power.lock, flags);
> > > > > > > > +
> > > > > > > > +       if (dev->power.disable_depth > 0)
> > > > > > > > +               goto unlock;
> > > > > > > > +
> > > > > > > > +       /* Add ongoing state  if requested */
> > > > > > > > +       if (update && dev->power.runtime_status == status)
> > > > > > > > +               delta = now - dev->power.accounting_timestamp;
> > > > > > > > +
> > > > > > >
> > > > > > > Hmm. Do we really need to update the accounting timestamp? I would
> > > > > > > rather avoid it if possible.
> > > > > >
> > > > > > i915/drm uses this to track ongoing suspended state. In fact they are
> > > > > > mainly interested by this part
> > > > >
> > > > > Again, sorry I don't follow.
> > > >
> > > > In fact we don't update dev->power.accounting_timestamp but only use
> > > > it to get how much time has elapsed in the current state.
> > > >
> > > > >
> > > > > My suggested changes below, would do exactly that; track the ongoing
> > > > > suspended state.
> > > > >
> > > > > The user can call the function several times while the device remains
> > > > > RPM_SUSPENDED, and if needed the user could then compute the delta
> > > > > in-between the calls, for whatever reason that may be needed.
> > > >
> > > > So I'm not sure to catch your question:
> > > > Is your problem linked to status != RPM_SUSPENDED or the update
> > > > parameter that compute delta ?
> > >
> > > My intent was to keep things simple.
> > >
> > > 1. Only expose last suspended time, which means tracking the ongoing
> > > suspended state. In other words, you can also remove "enum rpm_status
> > > status" as the in-parameter to pm_runtime_accounted_time_get().
> >
> > Ok for this point if Rafael doesn't see any benefit of keeping the
> > generic interface
> >
> > > 2. Don't allow the user of pm_runtime_accounted_time_get() to update
> > > the current timestamp, in "dev->power.accounting_timestamp".
> >
> > But pm_runtime_accounted_time_get doesn't update
> > dev->power.accounting_timestamp, it only reads it to know when when
> > the last state transition happened
> >
> > >
> > > Is that okay for the drm driver, to do what it does today?
> >
> > drm driver needs 2 things: the  accounted suspended time since the
> > last transition
>
> The core keeps tracks of the "total suspended time". Each time
> update_pm_runtime_accounting() is called, and the state is
> RPM_SUSPENDED it adds a delta to the total suspended time. Just to be
> clear, this may even happen when userspace reads the
> "runtime_suspended_time" sysfs node.
>
> My point is, the core doesn't track the "total suspended time since
> the last transition", which seems to be what the drm driver tries to
> figure out.
>
> Just to be clear, I don't think we should update the core to provide
> the data reflecting that time, as it would add overhead from
> additional time computations. I think it's better to push this down to

Which kind of overhead are you referring ? This is done only when
pm_runtime_accounted_time_get') is called and doesn't modify
pm core metrics

> those drivers that needs it, as it seems like a highly unusual thing.
>
> Instead, perhaps we should provide an API
> (pm_runtime_suspended_time()) that simply returns the value of
> dev->power.suspended_jiffies. The driver/subsystem could then call
> this API from its ->runtime_suspend|resume() callbacks, for example,
> to store values from it locally and later compute the deltas from it
> that it needs.

not sure that i915/drm has such call back

>
> Do note that, the core updates the status of the device to
> RPM_SUSPENDED, after the ->runtime_suspend() callback has returned a
> successful error code. Hence, calling the API from a
> ->runtime_suspend() callback would fetch the total suspended time, up
> until the last time the device became runtime resumed. That should be
> helpful, right?

TBH, I don't know if this would help or not. i915/drm driver developer
should have the answer

AFAICT, all this code is not driver in itself but some perf monitoring
stuff that estimate a events when it is not accessible anymore because
devices is suspended
>
> > and the time elapse in the current state when suspened
>
> Re-thinking this a bit from my earlier comments - and by following the
> above reasoning, it sounds like this better belongs in the
> driver/subsystem, without requiring any data from the core.
>
> The driver/subsystem could just store a timestamp in it's
> ->runtime_suspend() callback and whenever needed, it could compute a
> delta towards it. That should work, right?

I don't know i915/drm enough to know all that details

>
> [...]
>
> Kind regards
> Uffe
