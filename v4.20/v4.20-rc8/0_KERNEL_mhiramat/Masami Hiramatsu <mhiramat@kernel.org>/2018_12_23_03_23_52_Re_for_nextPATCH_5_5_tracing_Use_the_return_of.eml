Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:59:41 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 15D50580522;
	Sat, 22 Dec 2018 19:24:07 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by fmsmga006-1.fm.intel.com with ESMTP; 22 Dec 2018 19:24:06 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AP088uhXx5ghG1hOIOgeWtYAenIfV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhCHu6dThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGo2y?=
 =?us-ascii?q?YYsRAeQcPuhXrYf9qVwBohSiCgesH/vvxz1Ti3/q36A3yfgtHwPa0AA+Gd8FrX?=
 =?us-ascii?q?TarM/yNKcXSe27y7PHzS7ZYPNT2Df29YrGchE7of6WWLJ/a9bRyVIyFwjYiViQ?=
 =?us-ascii?q?rIzlPzKP1usXtmiU9fZgWPmsi2E5sQFxpCagxsM2honOnIIVxUnJ+CNky4g2Pd?=
 =?us-ascii?q?21UFB3bcKgHZdKqi2XOZV6Ttk/T2xrpCo20LwLtJyjcCQU1Zgr2wTTZ+GIfoSV?=
 =?us-ascii?q?+B7vSumcLDhiiH54fL+yiRC/+lW6xOLmTMm7ylNKozJFktbSsnAN0ATe6taISv?=
 =?us-ascii?q?Rj5EetwzWP2B7J6uFCP080kbDXK5k7wr4/jpYTsELDETHqmEjukqOaakEp9vK1?=
 =?us-ascii?q?5+npfLnqvIKQOoxohg3kM6kjmNSzAeEiPQgPW2ib9/681Lrm/UDhRLVKj/s2kr?=
 =?us-ascii?q?TWsZzDJsQUuLS5AwlL3YYn8hq/CDmn0NIGknkdN19FZh2HgJbzO13UI/D3E+2/?=
 =?us-ascii?q?g1Kynzdv3fzGOafhAprVInjZjLjhZap961JbyAcrydBf5pFUBa8bLPP8R0/8r9?=
 =?us-ascii?q?jYDh4/MwypzOfrEtR91oUCWW2RBq+VKr/dsViN5ug3OemDeJcVuCrhK/gi//Pu?=
 =?us-ascii?q?jWU2mV4Bfaaz2psbcnC4Hul8LEWfbnrhmdMBEWYMvgojQ+3mklyCUThPZ3msW6?=
 =?us-ascii?q?Iw/C00CIWjDY3bXICinKSB3DunHp1Rfm1JEEuMEXfvd4WHQfsMcjidIs16nzwA?=
 =?us-ascii?q?VLihTZIh1B60uA/7zbpnMvTb+ikCuZ3/09h14vXZlQsu+jxsE8Sdz2aNQnl3nm?=
 =?us-ascii?q?wSQT86xqR/oU1nxVeF3qh1mPhYFd1V5/NUXQY2L5/cz+pmC9/sXgLNZMuGSFGj?=
 =?us-ascii?q?Qt++GzE+Usoxw8MSY0Z6A9itkwrM3zS0DLMPl7yEHpo08rnC0Hj3IMp9z3XG1K?=
 =?us-ascii?q?wlj1Q9RstPNGumhrNw9gTJBo7JlVmZmLiudagGwCHN82KDx3KUvE5ESA5wTbnF?=
 =?us-ascii?q?XXcHa0TLt9v5+F3NQ6WuCbs9NAtB0tCNKq1RZ93tjFVGQurjOdvEb2KwnWewGQ?=
 =?us-ascii?q?iHxreWYIX2fGUd2T3XCFIYnAAL4XaGKQ8+Cz+9o2LfCTxuEk7vY0Ps8OVktHO3?=
 =?us-ascii?q?VEg0zxuOb01g0bq19QUYhfidS/MVw7IFtz0tqzRyHFahwd3WD8CMqBZmfKVZed?=
 =?us-ascii?q?k9+ktI1XrFtwxhOZytN7pthloAfAV4oUzv1w97BZ5dkcc3tnwqyglyKaWG0F5a?=
 =?us-ascii?q?czOY3JbwOqDYK2Xo/RCvbbLW1U/a0NqM5qgP7/E4oU35vA61Dkoi72ln095N3n?=
 =?us-ascii?q?qc+5XGFhYdXYjwU0Y37Rd6ob7abzI554PV031sLKa1viXD29IvGOsq1BKgc81D?=
 =?us-ascii?q?P6ODEQ/4C9caCNS2KOw2h1ipaQoJPPpT9KEoJcymbeaJ2KmxMOZmgj2ml2VH7J?=
 =?us-ascii?q?lh3U2W8ypzV/DH34wCw/GexQaHUzb8jFG8ssH4g4xEZDcSHnahxijgHoJeeqpy?=
 =?us-ascii?q?fYMTA2e0P8K33sl+h4LqW3NA9F+jBkkK2c+zdRqJclz92xZd1UAWoXyhhCu5wC?=
 =?us-ascii?q?Z4kzAvrqqDwiPOx/7uewYAOm5OXGNil0vjIZCoj9AGW0ildwopmwG/5Ub5xKhb?=
 =?us-ascii?q?o75zL3LJTkdLfCj2LmdiXbW2treZZ85P6ZUosThYUeimYFCaTKL9rAUe0y/5A2?=
 =?us-ascii?q?RewzU7fSmwuprlhxx6lH6dLHFroXvZY85wwg3T5N7dRf5XxTcGQCh4iT/KBlmz?=
 =?us-ascii?q?JdWp/NOUl4vdveC6TW6uSppTcSzzx4OaqCS7/XFqAQG4n/2rmd3oCwk63TX719?=
 =?us-ascii?q?l3TyrIqhn8b5Lv16S7N+JnY0ZpCEX968p8BoFxjI8wiIsM1ngdg5Wf5WAHnnvr?=
 =?us-ascii?q?MdVHxaL+a2IARTsKw97W+gfpwkNiIWySx4LlSHqd2NBuaMegYmMZwS8968FKCK?=
 =?us-ascii?q?GJ7L1Lhyd1o1y4rR7Pbvh5hDsS1fwu6HsCieETpAUt1jmdAqwVHURAISzskBGI?=
 =?us-ascii?q?48q/rapNYmavbKOw1FF/nd26CLGCowdcWGv2e5s4HC9w6Nl/P0zI0HHp9o7kf9?=
 =?us-ascii?q?zQZ8oJthKIixfAk/RVKJUpm/URnyVnPmb9vWA/x+4/kBxjxpW6vImBK2Vw86O1?=
 =?us-ascii?q?GB9YNjvpZ8wN/jHhl7pRnsGT34q3BJVuBi0LXIf0TfKvCD8St+7oNwOQHz0nsH?=
 =?us-ascii?q?ubBaDTHQyC6EdlsnLPFYqkN2qMKXkdzNViQgSdJUNFjAAVWjU6goA2FgSwyMP9?=
 =?us-ascii?q?d0d54ygb5kTkpRtU1uJoKx7/X3/fpQevdzc0UYWfIwBQ7g1Y/EfVNsqe7u1oEi?=
 =?us-ascii?q?Fc/52hqhGNK2OBawRJC2EJRlKLB1T5Mray4tnA9vCSBvCiIPvWfbWOteteWu+I?=
 =?us-ascii?q?xZ2x04tm/DWMNsSVMnlhFf073UVDUm5jG8TEgDUCUCgXlyPLb86Gqxaw4Cx3rs?=
 =?us-ascii?q?aj8Pv1XALj/5eAC7xXMd934RC5nb+DN/KMhCZ+MTtXzI4MymTSyLcB3F8ekSVu?=
 =?us-ascii?q?dzi2HLQEtC7NSr/Qm6BNAx4abSNzKNVH76Ym0gZRPs7bj8v/1qRkgf4tF1dFSV?=
 =?us-ascii?q?vhl9m1ZcwLJmGxLk/ICFyXO7SGOzLLxdr6Yae9Sb1WkeVVuAe8uTedE0//IDuD?=
 =?us-ascii?q?kyPlWAyoMeFJlCubJgBRuJmhchZxDmjuVNLnZQe9MN9yjD02x6U7h3LKNWEGNz?=
 =?us-ascii?q?h8fFhArrmR7SNen/V+FHZN7ntjLemYhSmZ6/PUJYoRsftuUWxIkLdh/Hkkxr0d?=
 =?us-ascii?q?1iZfWPF5hGOGtNl1v1yqjsGAzT1rVRtV7DFRi9TYk19lPPD8/4JJXHeM3BMX5G?=
 =?us-ascii?q?CZFw8X749gCtz1sqVZ1vDMmbj1JTME9Mjbq5hPT/PIId6KZSJyeSHiHyTZWU5c?=
 =?us-ascii?q?FWam?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AEAAB0/h5ch0O0hNFiGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUwMBAQEBCwEBg2onmh4UiROOPIFzFRgTAYRAgnAiNgcNAQMBAQE?=
 =?us-ascii?q?BAQECARMBAQEKCwkIKSMMQgEQAYFmKQGCZgEBAQECAQECJBMGAQE3AQQBCQEBC?=
 =?us-ascii?q?hUxAzkbBhMFgx2BdQUHAQWlMoFsM4J2AQEFhxsIIosBgRwXgUA/hCOFAYVfi0e?=
 =?us-ascii?q?EZzaFRosjCZFdDBiRZi2ZfIFNA4IETTAIgyeCGzWITIVOMTKBAgMBASETCwGHM?=
 =?us-ascii?q?YV6AQE?=
X-IPAS-Result: =?us-ascii?q?A0AEAAB0/h5ch0O0hNFiGgEBAQEBAgEBAQEHAgEBAQGBUwM?=
 =?us-ascii?q?BAQEBCwEBg2onmh4UiROOPIFzFRgTAYRAgnAiNgcNAQMBAQEBAQECARMBAQEKC?=
 =?us-ascii?q?wkIKSMMQgEQAYFmKQGCZgEBAQECAQECJBMGAQE3AQQBCQEBChUxAzkbBhMFgx2?=
 =?us-ascii?q?BdQUHAQWlMoFsM4J2AQEFhxsIIosBgRwXgUA/hCOFAYVfi0eEZzaFRosjCZFdD?=
 =?us-ascii?q?BiRZi2ZfIFNA4IETTAIgyeCGzWITIVOMTKBAgMBASETCwGHMYV6AQE?=
X-IronPort-AV: E=Sophos;i="5.56,386,1539673200"; 
   d="scan'208";a="58609893"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 22 Dec 2018 19:24:04 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2405167AbeLWDYA (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Sat, 22 Dec 2018 22:24:00 -0500
Received: from mail.kernel.org ([198.145.29.99]:51330 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1731060AbeLWDX7 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 22 Dec 2018 22:23:59 -0500
Received: from devbox (unknown [210.141.244.193])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 400F32171F;
        Sun, 23 Dec 2018 03:23:56 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1545535437;
        bh=3n369nWYZ8HdgrX8iixqClWPvKI3Eh2lTubEpB1cjFU=;
        h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
        b=VjOO+RnGqqB2x1Oqimux2xWnMkA6p8HqIUC/yH2GvF3WUsMEJOAJuIrfDIB9aIOl5
         QhH5Mgk8buG9WxB6uGFHCX5EjdKbXjfvfE5AOtCO3HUV1/CJ3cmqhHH3HfE2HdAdp5
         hBvhwiwZNCDyBPMnWp5pRyfQCJ+UOsedvJag+304=
Date: Sun, 23 Dec 2018 12:23:52 +0900
From: Masami Hiramatsu <mhiramat@kernel.org>
To: Steven Rostedt <rostedt@goodmis.org>
Cc: linux-kernel@vger.kernel.org, Ingo Molnar <mingo@kernel.org>,
        Andrew Morton <akpm@linux-foundation.org>,
        Joe Perches <joe@perches.com>,
        Namhyung Kim <namhyung@kernel.org>,
        Linus Torvalds <torvalds@linux-foundation.org>,
        Yoshinori Sato <ysato@users.sourceforge.jp>,
        Rich Felker <dalias@libc.org>, linux-sh@vger.kernel.org,
        Masami Hiramatsu <mhiramat@kernel.org>
Subject: Re: [for-next][PATCH 5/5] tracing: Use the return of
 str_has_prefix() to remove open coded numbers
Message-Id: <20181223122352.dd3c077443f0b6621a796039@kernel.org>
In-Reply-To: <20181222162857.116914355@goodmis.org>
References: <20181222162007.697862256@goodmis.org>
        <20181222162857.116914355@goodmis.org>
X-Mailer: Sylpheed 3.5.1 (GTK+ 2.24.31; x86_64-redhat-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Sat, 22 Dec 2018 11:20:12 -0500
Steven Rostedt <rostedt@goodmis.org> wrote:

> From: "Steven Rostedt (VMware)" <rostedt@goodmis.org>
> 
> There are several locations that compare constants to the beginning of
> string variables to determine what commands should be done, then the
> constant length is used to index into the string. This is error prone as the
> hard coded numbers have to match the size of the constants. Instead, use the
> len returned from str_has_prefix() and remove the open coded string length
> sizes.

Looks good to me.

Acked-by: Masami Hiramatsu <mhiramat@kernel.org>

for trace_probe part.

Thanks!

> 
> Cc: Joe Perches <joe@perches.com>
> Cc: Masami  Hiramatsu <mhiramat@kernel.org>
> Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
> ---
>  kernel/trace/trace.c       |  8 +++++---
>  kernel/trace/trace_probe.c | 17 +++++++++--------
>  kernel/trace/trace_stack.c |  6 ++++--
>  3 files changed, 18 insertions(+), 13 deletions(-)
> 
> diff --git a/kernel/trace/trace.c b/kernel/trace/trace.c
> index eac2824a18ab..18b86c3974e1 100644
> --- a/kernel/trace/trace.c
> +++ b/kernel/trace/trace.c
> @@ -4408,13 +4408,15 @@ static int trace_set_options(struct trace_array *tr, char *option)
>  	int neg = 0;
>  	int ret;
>  	size_t orig_len = strlen(option);
> +	int len;
>  
>  	cmp = strstrip(option);
>  
> -	if (str_has_prefix(cmp, "no")) {
> +	len = str_has_prefix(cmp, "no");
> +	if (len)
>  		neg = 1;
> -		cmp += 2;
> -	}
> +
> +	cmp += len;
>  
>  	mutex_lock(&trace_types_lock);
>  
> diff --git a/kernel/trace/trace_probe.c b/kernel/trace/trace_probe.c
> index 541375737403..9962cb5da8ac 100644
> --- a/kernel/trace/trace_probe.c
> +++ b/kernel/trace/trace_probe.c
> @@ -186,19 +186,20 @@ int traceprobe_parse_event_name(const char **pevent, const char **pgroup,
>  static int parse_probe_vars(char *arg, const struct fetch_type *t,
>  			    struct fetch_insn *code, unsigned int flags)
>  {
> -	int ret = 0;
>  	unsigned long param;
> +	int ret = 0;
> +	int len;
>  
>  	if (strcmp(arg, "retval") == 0) {
>  		if (flags & TPARG_FL_RETURN)
>  			code->op = FETCH_OP_RETVAL;
>  		else
>  			ret = -EINVAL;
> -	} else if (str_has_prefix(arg, "stack")) {
> -		if (arg[5] == '\0') {
> +	} else if ((len = str_has_prefix(arg, "stack"))) {
> +		if (arg[len] == '\0') {
>  			code->op = FETCH_OP_STACKP;
> -		} else if (isdigit(arg[5])) {
> -			ret = kstrtoul(arg + 5, 10, &param);
> +		} else if (isdigit(arg[len])) {
> +			ret = kstrtoul(arg + len, 10, &param);
>  			if (ret || ((flags & TPARG_FL_KERNEL) &&
>  				    param > PARAM_MAX_STACK))
>  				ret = -EINVAL;
> @@ -213,10 +214,10 @@ static int parse_probe_vars(char *arg, const struct fetch_type *t,
>  #ifdef CONFIG_HAVE_FUNCTION_ARG_ACCESS_API
>  	} else if (((flags & TPARG_FL_MASK) ==
>  		    (TPARG_FL_KERNEL | TPARG_FL_FENTRY)) &&
> -		   str_has_prefix(arg, "arg")) {
> -		if (!isdigit(arg[3]))
> +		   (len = str_has_prefix(arg, "arg"))) {
> +		if (!isdigit(arg[len]))
>  			return -EINVAL;
> -		ret = kstrtoul(arg + 3, 10, &param);
> +		ret = kstrtoul(arg + len, 10, &param);
>  		if (ret || !param || param > PARAM_MAX_STACK)
>  			return -EINVAL;
>  		code->op = FETCH_OP_ARG;
> diff --git a/kernel/trace/trace_stack.c b/kernel/trace/trace_stack.c
> index 3641f28c343f..eec648a0d673 100644
> --- a/kernel/trace/trace_stack.c
> +++ b/kernel/trace/trace_stack.c
> @@ -448,8 +448,10 @@ static char stack_trace_filter_buf[COMMAND_LINE_SIZE+1] __initdata;
>  
>  static __init int enable_stacktrace(char *str)
>  {
> -	if (str_has_prefix(str, "_filter="))
> -		strncpy(stack_trace_filter_buf, str+8, COMMAND_LINE_SIZE);
> +	int len;
> +
> +	if ((len = str_has_prefix(str, "_filter=")))
> +		strncpy(stack_trace_filter_buf, str + len, COMMAND_LINE_SIZE);
>  
>  	stack_tracer_enabled = 1;
>  	last_stack_tracer_enabled = 1;
> -- 
> 2.19.2
> 
> 


-- 
Masami Hiramatsu <mhiramat@kernel.org>
