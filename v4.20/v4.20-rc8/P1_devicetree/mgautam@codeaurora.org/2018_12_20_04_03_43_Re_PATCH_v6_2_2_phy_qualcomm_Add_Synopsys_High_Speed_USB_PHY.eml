Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  20 Dec 2018 16:21:59 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id BE23C580261;
	Wed, 19 Dec 2018 20:03:49 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 19 Dec 2018 20:03:48 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AZaw1RBJXIn1/XzYAkNmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgUKfn5rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZUcleSyNPDI28?=
 =?us-ascii?q?YYUREuQOP+hYoYryplQAthu+HQuhCfjzyjJKhH/6wbE23v4/HQzAwQcuH8gOsH?=
 =?us-ascii?q?PRrNjtMacSXvq6zLTUzTrZavNbwivy6I/VfR8/u/6MQKhwcc3LyUY1DQ/FiU+Q?=
 =?us-ascii?q?qYPjMjiI1eoNq3CW4/R8We+rkWIrtg98ria1yssxiYTFmpgZx1HG+Clh3Yo4Id?=
 =?us-ascii?q?61RFRmbdOrEJZcrT+WOo9sTs4mQmxlvjsxxKcctp6hZicKzYwqxx7BZPyDdIiF?=
 =?us-ascii?q?+gzjVOmPLjdinn5le6ywhwy08Ue+zu3wTM600ExFriZdk9nMsG4C1wDL58SZVv?=
 =?us-ascii?q?dw+l2t1SuB2gzN8O1IPEM5mbbBJ5MgwLM8jp8Tvl7CHi/ylkX2lqiWdkA89+is?=
 =?us-ascii?q?6uTnZKjmp5CFO493lA7+KKIuldK7AeghNQgPUW6b9vqm1LD44035T6tFjucsnq?=
 =?us-ascii?q?narp/aP8IbqbC9AwNP1YYj8Rm/Ay+80NsEhXkHME5FeBWfgojtOlHOI+73Ae2w?=
 =?us-ascii?q?glSxizprw/HGPrv8ApTCNHTDkbHhfapj5E5Y0gY80ddf55dMALEbPP3zQlPxtM?=
 =?us-ascii?q?DfDhIhMwy72efnCMln2YMZQ26PArKZP7nUsV+H/e8vJ+iMZIkIuDfyMfQl5vju?=
 =?us-ascii?q?jWMnll8ZZ6WmwZwXaHWgFPR8P0qZeWbsgssGEWoSpAU+V+zqiFqBUTJJfXa9Ra?=
 =?us-ascii?q?A86yo/CIKnC4fDW4+sjKaA3Ce9Ap1ZeGRGBkqQHnfvcoWOQ+0MZz6KIs99jjwE?=
 =?us-ascii?q?UqCsS4w72hGorgP6z7tnIfDS+i0Xrp/j0Nl15+vOlRA97zB0DsKd032TQGFwhG?=
 =?us-ascii?q?8HWzg23KVnq0xn1liDybR4g+BfFdFL+vxGSBk6OoDGw+x6Ed/yXBnBccmPSFqh?=
 =?us-ascii?q?RtWmAjQxTtYqzt8KYkZ9Hciijx/Z0yqrBb8Vi6KEBJgu/q3A2HjxIt53y2za26?=
 =?us-ascii?q?k5k1kmXsxPOHW7iaFl6QjcGZTFk0WDmKasbqQTwijN+XyHzWqPukFYTQFxXb/E?=
 =?us-ascii?q?XXAZekvZs9D56lneQL+pDLQtKhFBxtKaKqtWdt3pik1LROviONTbZGKxh2ewBB?=
 =?us-ascii?q?aSyrOQdobqfH8d3CHcCEgCnAAe5nKGNQk4Bie8rGPSFj1uFVTzY0zy9elysm+0?=
 =?us-ascii?q?TkgxzwuSdU1uy6K1+gIJhfybU/4cxLYEtzkuqjpqHFexxcnZC8edqAV7eqVcYt?=
 =?us-ascii?q?Q94Elc2GLdtgx9OIGgLq94il4fdQR3o13h1xFtBopclsgqqWsgzBBuJqKAzFNB?=
 =?us-ascii?q?azSY0IjwO73KMGX94Aqjaq/W2l7E1taW9bwC6PA5q1XloQGoGVAu83Rh09lJzX?=
 =?us-ascii?q?Sc4o/GAxYVUZL0Skw37QR1p6nGYikh4IPZzWdsMaiovTDYwdImGewlxgymf9hB?=
 =?us-ascii?q?KqOEFRb+HNEACMiqNeMlhUKpbhUCPO1J8K40PsWmd+aJ2aKxPeZgmi6mgnpD4I?=
 =?us-ascii?q?xnzk2M8C98QPbS35kZ2/GYwheHVzDkgVahs8D7g4BFaSsJHmqizyjpH4pRZqx0?=
 =?us-ascii?q?fYYWBmaiOcy3xtNih5HzX35U7kKsB1QD2MWxYxqdc0T93RFM1UQQuXGnmzG3zy?=
 =?us-ascii?q?Z3kzEqqaqTxjfOzP7hdBoEO25LQndtjVH3LIiwjtAaWlWobgczmBuk40b627ZU?=
 =?us-ascii?q?pKBlI2bPRkdIejD8L3t+XauoqrqCf8lP5YsosCpNV+Swe1KaSr/7oxYB1yPjHm?=
 =?us-ascii?q?1exC00dj2wu5X5mQB6h3yZLHppsHXZfsRwzw/F5NPAXf5RwiYGRC5ghDnUHFe8?=
 =?us-ascii?q?PsOl/dWJl5jZtOC+WHmsVplScSnt0IOBuzG35WxsAR2jgf+znsfrHhQ90S/+z9?=
 =?us-ascii?q?NqTznHrA7gYon30KS3KednfkhrBFDm8cZ7FJ9xkpAshJ4Ow3gVnYua/WAIkWro?=
 =?us-ascii?q?NdVb2KT+bGcCRDIRwt7V5hTl11NnLn6T2435UXCdyNN7Z9amemMWxj4978dSBa?=
 =?us-ascii?q?eI67xEmDF5o1uiogLXfPh9hSwdyfo15X4eguEJvhctzyqHDrATG0lYITLjlxCS?=
 =?us-ascii?q?49+iq6VXYX6lcaKs20pmgdChELaCrxlHV3njfZciGTJw4t97MFLRy3Dz7oDkeN?=
 =?us-ascii?q?/NbdMcrBGUkhHAj/RLJ5I1jPYFmS1nOWflt30/1+E7lQBu3Y29vIWfKWVi5qe5?=
 =?us-ascii?q?DQBDNjHve8Mf4DLtjbtdnsaL2YCgBI5hFy4PXJvpS/KoDT0Tue7mNwaIDD0ztH?=
 =?us-ascii?q?ObFaDDEg+Y7Udst2jPHIyzN3GLOHkZys1vRRmaJExCmQAUQS81npgjGgCxw8zh?=
 =?us-ascii?q?dkh56ysV5l75rBtM1+1pOwP+UmfZuAendDM0RIKDIxpR6wFI/13VPtCG7uJvAy?=
 =?us-ascii?q?FY+YWsrAyTJWyaZARIDmAJVlaHB1D5Obmu6sfP8/KFBuqlNPbOZbSOqepDV/aH?=
 =?us-ascii?q?356v041m/yqSOcWLJHVtE/o72k9bV3BjB8vZgykPSzAQly/VdcGbuQyz+jdpoc?=
 =?us-ascii?q?G/6vjrXAPv6JCLC7tTN9Vv5h+3jb2CN+6WmCZ2NzJY2okQyn/PzbgVxEQShD12?=
 =?us-ascii?q?dzmxDbQAsjbATL7Rmq9SFRIUdzl/O9dI760i2AlAIsrbitLz1r5lgf85EVZFVV?=
 =?us-ascii?q?r9ms63YcwGOX2yNFTCBEyTLrSJOSXLw93rYaO7UbBRjP9btxu1uTaaFU/sJjWC?=
 =?us-ascii?q?lznzWBCpPuFBlyWbPB1YuIGgfRdhE2njTNT6ahKlNN97lyE5wboxhiCCCWlJCj?=
 =?us-ascii?q?h1bEUFgaCXpXdDgvxgHSpO831NKeiCkjyeqe7CJcBFn+FsB3FxmOtH/H0/47BS?=
 =?us-ascii?q?4CxNWeZygiKUqcRh8ALuqfWG1jcyCEkGkT1Mno/e+Bw6Yag=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A6AgDHExtch0O0hNFkghcCgVmCESeMd?=
 =?us-ascii?q?Y0qFJk8LRMBhDYBgnYiNwYNAQMBAQEBAQECARMBAQEIDQkIKSMMQgEOAYFkJAG?=
 =?us-ascii?q?CYgECAwECJBECBgEBNwEFCQEBAwcYLgMpKwYLCAUDgk9LggIFpmCBbDOCdgEBB?=
 =?us-ascii?q?YYFgSQIiSVWgSiBHBeBf4ERgxKKYItChGE2kGAJkVogiXeHYptggXh9gy+CJxe?=
 =?us-ascii?q?IXoVHNwEygQUBAYZwhnABAQ?=
X-IPAS-Result: =?us-ascii?q?A0A6AgDHExtch0O0hNFkghcCgVmCESeMdY0qFJk8LRMBhDY?=
 =?us-ascii?q?BgnYiNwYNAQMBAQEBAQECARMBAQEIDQkIKSMMQgEOAYFkJAGCYgECAwECJBECB?=
 =?us-ascii?q?gEBNwEFCQEBAwcYLgMpKwYLCAUDgk9LggIFpmCBbDOCdgEBBYYFgSQIiSVWgSi?=
 =?us-ascii?q?BHBeBf4ERgxKKYItChGE2kGAJkVogiXeHYptggXh9gy+CJxeIXoVHNwEygQUBA?=
 =?us-ascii?q?YZwhnABAQ?=
X-IronPort-AV: E=Sophos;i="5.56,375,1539673200"; 
   d="scan'208";a="67642994"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 19 Dec 2018 20:03:47 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729800AbeLTEDp (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Wed, 19 Dec 2018 23:03:45 -0500
Received: from smtp.codeaurora.org ([198.145.29.96]:47730 "EHLO
        smtp.codeaurora.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727694AbeLTEDp (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 19 Dec 2018 23:03:45 -0500
Received: by smtp.codeaurora.org (Postfix, from userid 1000)
        id 488B6607CA; Thu, 20 Dec 2018 04:03:44 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
        s=default; t=1545278624;
        bh=6wy6dkCowRS5htXWl0qOm0vaFR1/mK46y9nAOy+y44Y=;
        h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
        b=UgusZdKESW8sgqlcuYKFLiEXoAfgIrN99kb0iG05G9+YdNCmm7DCVgpjT2bcDNQ7V
         5eay5zGvXe+yg6aOxjisKBb7QpOS/ziRV/X6hhtH8VyE/YTov3W2IGeLeFIwDDLbLa
         7PU1Sf9P2V2HkkTLCbfYzPaMtJ+/UEsfRyZwlIYQ=
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
        pdx-caf-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-2.7 required=2.0 tests=ALL_TRUSTED,BAYES_00,
        DKIM_INVALID,DKIM_SIGNED autolearn=no autolearn_force=no version=3.4.0
Received: from mail.codeaurora.org (localhost.localdomain [127.0.0.1])
        by smtp.codeaurora.org (Postfix) with ESMTP id 5958F6014B;
        Thu, 20 Dec 2018 04:03:43 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
        s=default; t=1545278623;
        bh=6wy6dkCowRS5htXWl0qOm0vaFR1/mK46y9nAOy+y44Y=;
        h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
        b=FH3IEsiNrhoVfJMB5CeojYVymHsh68+EBKZ5/52MZ1AbqSJKvr8KBPv2u04IhiFiY
         06I4TLf/hWk8iUHw0l1Zis8E7zUJgkZ9A9TRIZWeks7rFlzOcAkO6SbVe61V1OR4D1
         HAzcDn6SMc1iiZ7V9YMsiQbCK/xwjQYBU5S3itMg=
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII;
 format=flowed
Content-Transfer-Encoding: 7bit
Date: Thu, 20 Dec 2018 09:33:43 +0530
From: mgautam@codeaurora.org
To: Shawn Guo <shawn.guo@linaro.org>
Cc: Kishon Vijay Abraham I <kishon@ti.com>,
        Rob Herring <robh+dt@kernel.org>,
        Sriharsha Allenki <sallenki@codeaurora.org>,
        Anu Ramanathan <anur@codeaurora.org>,
        Bjorn Andersson <bjorn.andersson@linaro.org>,
        Vinod Koul <vkoul@kernel.org>,
        Jack Pham <jackp@codeaurora.org>,
        linux-arm-msm@vger.kernel.org, devicetree@vger.kernel.org,
        linux-kernel@vger.kernel.org, linux-arm-msm-owner@vger.kernel.org
Subject: Re: [PATCH v6 2/2] phy: qualcomm: Add Synopsys High-Speed USB PHY
 driver
In-Reply-To: <20181220010112.16824-3-shawn.guo@linaro.org>
References: <20181220010112.16824-1-shawn.guo@linaro.org>
 <20181220010112.16824-3-shawn.guo@linaro.org>
Message-ID: <f106782b6d8e26ebf851f00563c68948@codeaurora.org>
X-Sender: mgautam@codeaurora.org
User-Agent: Roundcube Webmail/1.2.5
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Shawn,

On 2018-12-20 06:31, Shawn Guo wrote:
> It adds Synopsys 28nm Femto High-Speed USB PHY driver support, which
> is usually paired with Synopsys DWC3 USB controllers on Qualcomm SoCs.
> 
> Signed-off-by: Shawn Guo <shawn.guo@linaro.org>
> ---
....

> +
> +/* PHY register and bit definitions */
> +#define PHY_CTRL_COMMON0		0x078
> +#define SIDDQ				BIT(2)
> +#define PHY_IRQ_CMD			0x0d0
> +#define PHY_INTR_MASK0			0x0d4
> +#define PHY_INTR_CLEAR0			0x0dc
> +#define DPDM_MASK			0x1e
> +#define DP_1_0				BIT(4)
> +#define DP_0_1				BIT(3)
> +#define DM_1_0				BIT(2)
> +#define DM_0_1				BIT(1)

Can we rename these to something more readable? e.g.:
#define DP_FALL_INT_EN    BIT(4)
#define DP_RISE_INT_EN    BIT(3)
...

> +
> +enum hsphy_voltage {
> +	VOL_NONE,
> +	VOL_MIN,
> +	VOL_MAX,
> +	VOL_NUM,
> +};
> +
> +enum hsphy_vreg {
> +	VDD,
> +	VDDA_1P8,
> +	VDDA_3P3,
> +	VREG_NUM,
> +};
> +
> +struct hsphy_init_seq {
> +	int offset;
> +	int val;
> +	int delay;
> +};
> +
> +struct hsphy_data {
> +	const struct hsphy_init_seq *init_seq;
> +	unsigned int init_seq_num;
> +};
> +
> +struct hsphy_priv {
nit-pick - indentation for following structure members?

> +	void __iomem *base;
> +	struct clk_bulk_data *clks;
> +	int num_clks;
> +	struct reset_control *phy_reset;
> +	struct reset_control *por_reset;
> +	struct regulator_bulk_data vregs[VREG_NUM];
> +	unsigned int voltages[VREG_NUM][VOL_NUM];
> +	const struct hsphy_data *data;
> +	bool cable_connected;

You can get cable-connected state from "enum phy_mode mode" which
is present in this driver.
E.g. cable_connected is false if mode is neither HOST nor DEVICE.


> +	struct extcon_dev *vbus_edev;
> +	struct notifier_block vbus_notify;

extcons not needed if you use "mode" for the same purpose.


> +	enum phy_mode mode;
> +};
> +


> +
> +static int qcom_snps_hsphy_vbus_notifier(struct notifier_block *nb,
> +					 unsigned long event, void *ptr)
> +{
> +	struct hsphy_priv *priv = container_of(nb, struct hsphy_priv,
> +						    vbus_notify);
> +	priv->cable_connected = !!event;
> +	return 0;
> +}
> +
> +static int qcom_snps_hsphy_power_on(struct phy *phy)

Can you instead merge this power_on function with phy_init?

> +{
> +	struct hsphy_priv *priv = phy_get_drvdata(phy);
> +	int ret;
> +
> +	if (priv->cable_connected) {

Why distinguish between cable connected vs not-connected?


> +		ret = clk_bulk_prepare_enable(priv->num_clks, priv->clks);
> +		if (ret)
> +			return ret;
> +		qcom_snps_hsphy_disable_hv_interrupts(priv);
> +	} else {
> +		ret = qcom_snps_hsphy_enable_regulators(priv);
> +		if (ret)
> +			return ret;
> +		ret = clk_bulk_prepare_enable(priv->num_clks, priv->clks);
> +		if (ret)
> +			return ret;
> +		qcom_snps_hsphy_exit_retention(priv);
> +	}
> +
> +	return 0;
> +}
> +
> +static int qcom_snps_hsphy_power_off(struct phy *phy)
> +{
> +	struct hsphy_priv *priv = phy_get_drvdata(phy);
> +
> +	if (priv->cable_connected) {
> +		qcom_snps_hsphy_enable_hv_interrupts(priv);
> +		clk_bulk_disable_unprepare(priv->num_clks, priv->clks);
> +	} else {
> +		qcom_snps_hsphy_enter_retention(priv);
> +		clk_bulk_disable_unprepare(priv->num_clks, priv->clks);
> +		qcom_snps_hsphy_disable_regulators(priv);
> +	}
> +
> +	return 0;
> +}
> +



..
> +static const struct phy_ops qcom_snps_hsphy_ops = {
> +	.init = qcom_snps_hsphy_init,
> +	.power_on = qcom_snps_hsphy_power_on,
> +	.power_off = qcom_snps_hsphy_power_off,
> +	.set_mode = qcom_snps_hsphy_set_mode,

.phy_exit()?
I believe that is needed as dwc3 core driver performs
phy_exit/phy_init across pm_suspend/resume.


> +	.owner = THIS_MODULE,
> +};
> +

