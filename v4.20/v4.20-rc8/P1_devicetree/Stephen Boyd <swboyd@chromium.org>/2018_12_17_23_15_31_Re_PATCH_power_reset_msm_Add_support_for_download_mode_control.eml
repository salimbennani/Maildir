Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 08:51:10 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 842C45805FC;
	Mon, 17 Dec 2018 15:15:41 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 17 Dec 2018 15:15:40 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A3wweIRDTUPi1pb2zG6ofUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP7+p8qwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95NWCNODY2z?=
 =?us-ascii?q?bZYBAfQPPehbr4fyqVUArQCmBQSuH+7v1iZIi2Xq0aEmyeksEwfL1xEgEdIUt3?=
 =?us-ascii?q?TUqc34OroOUe+r1KnIzSvMb/VL0jrg74jJcg0uquyLULJrf8ve0k4vFgPYgViL?=
 =?us-ascii?q?tYPlPymV1uMIs2ia8upgUPiji2k9qwF+uzWiwNonhIrRho8N1FzI6SF0zJwoKd?=
 =?us-ascii?q?C2VkJ3e8OoHZhMuy2ANoZ7QNsuT39ptSok1rELvIO3cSgWx5ki2RLTd+KLfo2V?=
 =?us-ascii?q?7h/mWuaeOzd1iXxgdb+9hRu/8Eitx+j8W8S3zlpFtS9In9rSun8W0xHe7NWMRO?=
 =?us-ascii?q?Fn8Ue7wzmP0hje6uFaLkAwkqrWM4AhwrEumZoJq0jDHTH5mF/wjKCIckUo4O+o?=
 =?us-ascii?q?6/7oYrn+p5+cMZF7ih3mP6gwhsCyBf40PhUAUmSF4+iwyb7u8VHjTLhLjPA6iq?=
 =?us-ascii?q?zZv4rbJcQfqK65GQhV0oM75ha7Djem1skYnHYeIFJGZh2HlY7pNE/KIPzhCve+?=
 =?us-ascii?q?jVKsnylxx/3dIL3hDYvCLmLZnLfiY7l98UhcxxQ3zdxF4JJUEL4BLOrpWkDtrN?=
 =?us-ascii?q?zYEgM5MwuszubjCdV91Z0RVXiAA6+EK67StV6I5uQyI+iDfoMVuTD9K+Q76P7q?=
 =?us-ascii?q?l3M2hVgdfayx15sNdH+4BuhmI1meYXf0gtcOC2YKvhYkQ+ztklGCUSNTaGy0X6?=
 =?us-ascii?q?Iz/Tw7DIOmDYHeRoGimrCB3SG7HoFIaWBCEFyDDXDod4CcUfcWdC2SOtNhkiAD?=
 =?us-ascii?q?VbW5SY8h0g+huBX5y7pgKOrU/CoYuInn1Nh04e3TiB4z+SZ1D8Sbz2GCUWV0kn?=
 =?us-ascii?q?kUSD8x2aB1uVZ9xUub0ahkn/xYEsRe6OlSUgc6Mp7czPZ2C8roVQLDZdqJTFem?=
 =?us-ascii?q?QtO7ATA+VN4xwtkOY1pjFNWmlBzMwy2qA7oNnbyRGJM06r7c32T2J8tlyHbJzq?=
 =?us-ascii?q?8hg0MiQstOL2KmgKF/+hPXB47IlUWZiqmreb4d3C7L6GeM026OsFtEXw53VKXP?=
 =?us-ascii?q?RWofaVfOrdTl+kPCSKejBqk9PQtf18GOMKtKZcfvjVVdWvjjPtPSY2aym2e1AR?=
 =?us-ascii?q?aF3beMbIvse2UA0yTREkkEkwYP/XmYMQgyHDuuo2XbDDZ2D1Lgf1vs8fViqHO8?=
 =?us-ascii?q?VkI70huFb1N/2Lav+h4an/qcS+gN0bICoyohrzR0HFCg39PZEdaApgxhfLlCbt?=
 =?us-ascii?q?M5+ltIyWXZtwllNJy6M69inkIecxhwv072yxV3C4BAkc82rHMqzAt+M76Y3ElG?=
 =?us-ascii?q?dzOC2ZDwO7vXKmbp8RCraq7W3Eze0dmM9qcO7vQ4t0vsvAWzGkU+9HVn1sFf02?=
 =?us-ascii?q?GA6ZXSEAoSTZXxX14t+Bh+ub7bbTcy5oPO2XJ3LKm7ryXN29QqBOsi1BatZNNf?=
 =?us-ascii?q?MKKCFA/vHMwWHcmuKOo2m1e3ahIIJvxd9KkxP8m+bfuJxLarPPp8nDKhlWlG4J?=
 =?us-ascii?q?193liQ+CZmS+/I34wKw/eX3gacUzf8jVGhst34mIxeZDESGHa/xjbgBIJLeqJy?=
 =?us-ascii?q?eoMLA3+0I8Kr3tV+m4LtW3lA+V65BlMJxNWmeQCPYFz6xwFQ01oYoWammSeh0z?=
 =?us-ascii?q?N7iTUpobeB0yzUxOTicgEKOmpKRGlkkFftLpK4j9EcXEi0cQcpkAGp6lr9x6he?=
 =?us-ascii?q?vK5/NXXcQV9UfyjqKGFvSquxtruYb89P8p8oqjhXUOKnbFCeS779pQYa0iz5E2?=
 =?us-ascii?q?tfwjA7ay+lupHjkxNmj2KdKW55rGDFdsFo2Rff+NvcSOZT3jUcXil4ijrXBl+m?=
 =?us-ascii?q?M9my59qUlJTDsuG4V22/UJ1eai3rzYKGtCum6mxmGxy/n/avmtL5FQg2yzP019?=
 =?us-ascii?q?5vVS/QthbzfpHr17imMeJgZkRpBEXz681gFoF8k4swgood2XwbhpWT4HoGnn3/?=
 =?us-ascii?q?MdRd2aLicnUNQSQHzMLS4AjgwEdjNG6Gx5rlVnWBxctsf9q6bXkX2i4n78BKFb?=
 =?us-ascii?q?2b7LpLnSZuplq4rATRYeVynzsHyPsu7mIajP8NuAY30iqdBbUSF1FCPSPwjxSI?=
 =?us-ascii?q?88y+rKJPaWaqcLiw11BxkcqvDb6cuQFcRGj2eo05EiBu9MV/P0nB0Hny6oHiZd?=
 =?us-ascii?q?nRYsgfthySkxfckedVLIg9meYNhSpiIWj9p2Eqy/YnjRxy2pG3pJSHK2Jo/K6j?=
 =?us-ascii?q?Ax9XLDv1Z94I+jH2jKZThcKW34GpHpV8FTQHRproTfS0ED0MsfTrLRqBEDo5qn?=
 =?us-ascii?q?2DA7rQARef6Ft6r3LIC52kLGuYJH4dzdV/XhWdIFFfjRsQXDU7mJ45Cw+ryNbg?=
 =?us-ascii?q?cEd/+jAe+Fr4pgFQxeJvMhn1Sn3fqxuwajcoVJifKwJb7gNY6EfQL8Oe9fh/Hz?=
 =?us-ascii?q?1C8p2isQyNKXGbZwJSAmESQUGEA1HjPr+z5djP6eSYB+y+L+fQbrWKs+BRS/CI?=
 =?us-ascii?q?xZe32It84zmMLtmPPmVlD/Aj2ktDWm15G93EmzoVTSwbjTnNb8mdpBez4SB3qs?=
 =?us-ascii?q?G/8PL2WAPg/4ePCr1SMclx9BCym6uMK+mQhCNhIzZCypwM3WPIyKQY3FMKiyFh?=
 =?us-ascii?q?aTitEbcDtS7MVq7QmbVXDxkUayxtLstI8rk80xJJOc7ajNP1y7F5guQ0C1dDSV?=
 =?us-ascii?q?zuhMWpadYWLGG6MVPNHFyLO6ieJT3X38H3ZruxRqdNjOpPrR2/pzaaH1XnPjSC?=
 =?us-ascii?q?jDTpUxGvMedRjCCUJhBeuYe9cgpzBmjnVt7pdhq7MNpvhz0s3bI0nm/KNXIbMT?=
 =?us-ascii?q?Vkb0NNr7iQ4TlEjfllB2NB7mRqLe+fliad7unYLIsWsPRxDiR1keJa/Go1y79P?=
 =?us-ascii?q?4C5YQ/x1nTPYrsRyrFG+jumP1j1nXQJOqzlRgoKLuERiOaPB+ZhBWXbL5hQN7W?=
 =?us-ascii?q?qLBhQOpttlDMDvuq9KxtjOkqLzNClN89bO8cQAAMjULZHPDH10GxjuAjicJQ0J?=
 =?us-ascii?q?QCSwLmbZzxhXkvaI8DucqJQ3sIP3n5wmTr5dXUYyUPQABRI2MsYFJcJMQj48kb?=
 =?us-ascii?q?OdxOQP9Hb2+ALOTsJLsrjMVuiVBPTyLXCel7YSNEhA+q/xMYlGbt6z4EdlcFQv?=
 =?us-ascii?q?2d2SQ0c=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAADuLRhch0O0hNFlHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTAlBYIRJ4N8iBmNYSUUl0QUgWYMAQErAYQ7AwKDFiI0CQ0BAwE?=
 =?us-ascii?q?BAQEBAQIBEwEBAQoLCQgpIwyCNiQBgmEBAQEBAgEBAiAdAQEwBwEFCQEBChIGA?=
 =?us-ascii?q?gImAgIDMQEFAQwCDgYYglJLgXkIAQScQTyJWhEJNXCBL4JMKgEBBYcnCBJ5izM?=
 =?us-ascii?q?XgX+BETOCX4ROARIBAwUXgwiCV4lAATSGWJBOCZFaGIFdiBY3hyiZPQYCCQcPI?=
 =?us-ascii?q?YElgR1xMxoIKAg7PQUGVoFOghuJAYVgHzKBAgMBASETin2CPgEB?=
X-IPAS-Result: =?us-ascii?q?A0ANAADuLRhch0O0hNFlHAEBAQQBAQcEAQGBUQcBAQsBgTA?=
 =?us-ascii?q?lBYIRJ4N8iBmNYSUUl0QUgWYMAQErAYQ7AwKDFiI0CQ0BAwEBAQEBAQIBEwEBA?=
 =?us-ascii?q?QoLCQgpIwyCNiQBgmEBAQEBAgEBAiAdAQEwBwEFCQEBChIGAgImAgIDMQEFAQw?=
 =?us-ascii?q?CDgYYglJLgXkIAQScQTyJWhEJNXCBL4JMKgEBBYcnCBJ5izMXgX+BETOCX4ROA?=
 =?us-ascii?q?RIBAwUXgwiCV4lAATSGWJBOCZFaGIFdiBY3hyiZPQYCCQcPIYElgR1xMxoIKAg?=
 =?us-ascii?q?7PQUGVoFOghuJAYVgHzKBAgMBASETin2CPgEB?=
X-IronPort-AV: E=Sophos;i="5.56,366,1539673200"; 
   d="scan'208";a="45359875"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 17 Dec 2018 15:15:36 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726821AbeLQXPf (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 17 Dec 2018 18:15:35 -0500
Received: from mail-pg1-f196.google.com ([209.85.215.196]:43919 "EHLO
        mail-pg1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726397AbeLQXPe (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 17 Dec 2018 18:15:34 -0500
Received: by mail-pg1-f196.google.com with SMTP id v28so6830693pgk.10
        for <linux-kernel@vger.kernel.org>; Mon, 17 Dec 2018 15:15:34 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=chromium.org; s=google;
        h=mime-version:content-transfer-encoding:in-reply-to:subject:to
         :references:message-id:from:user-agent:cc:date;
        bh=ermBk6HU5FiDTzcsG+Kwy9SMlLjeXTpKKltfvBGp/LM=;
        b=II3IEWADcyy9dOwf7fCJwJLVA9b8qtk7nxjtc3tfD4u3gbZyFgukPbDCRZPnXDDuLG
         0pJwIq6AG+frFwcnS5FhTDoxEs1QrC0XUZ6+yRCnEdpwYTAoymchkmxcmp57V43IrIlK
         t0MwGMMgEIJqDkj+eln5P8rcUMNYXjS6v0cUU=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:content-transfer-encoding
         :in-reply-to:subject:to:references:message-id:from:user-agent:cc
         :date;
        bh=ermBk6HU5FiDTzcsG+Kwy9SMlLjeXTpKKltfvBGp/LM=;
        b=K0pcNrNIULoiDePEno5qX+NIJuCebwp3VDqvYvWpPlUynKaBDW9dsxJO+eEeb9/u6f
         RMgJCwZ/0hKeqKHuD9CDyeotRg+LbmDVasbg9FcBhQGtuIISlx/DlT17cFDGwZhUr3/Z
         9kl/jAF77QuDRl4PL2s/MgYsAxyBzjYYxB2QrLFfDJfkYP7Yq/Y8vcu29l75vmrg5GXP
         RMY0hULYf97GbVslWCuMUlZqqaK/Xi5TxfgYUbOh5E68Hftg6TN41FmY+HTUQSnFZMMj
         Dp+l/l8tCYGbPq5PRsof9tH2WPILPAh7RWBifyNjdWhHtYRNC6oaawbT6yp/1MhLh7UP
         CnaA==
X-Gm-Message-State: AA+aEWYcJMJqVlQC4i2ROiLSkiSLgFKPZlE7x9MotuELdRTMZ9LPt3gm
        W3xGgzbFY7Jvt3a7jE5q0ocNjg==
X-Google-Smtp-Source: AFSGD/Wv0aSQjyujH1BN9eNEUfyepsSwhxiytE1uBMlySR9hXl4mgZIEbNr+Dfthd2N+m/lFWyD/4w==
X-Received: by 2002:a63:8742:: with SMTP id i63mr878417pge.298.1545088533555;
        Mon, 17 Dec 2018 15:15:33 -0800 (PST)
Received: from localhost ([2620:15c:202:1:fa53:7765:582b:82b9])
        by smtp.gmail.com with ESMTPSA id e188sm16737612pfg.130.2018.12.17.15.15.32
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Mon, 17 Dec 2018 15:15:32 -0800 (PST)
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: quoted-printable
In-Reply-To: <20181214053035.GK1578@tuxbook-pro>
Subject: Re: [PATCH] power: reset: msm: Add support for download-mode control
To: Bjorn Andersson <bjorn.andersson@linaro.org>
References: <1531977529-23304-1-git-send-email-rnayak@codeaurora.org> <20180719054200.GB30024@minitux> <ca74b7f4-3e60-2f3b-3d66-ac167c913c0e@codeaurora.org> <153210869376.48062.15842782379577271631@swboyd.mtv.corp.google.com> <154282479571.88331.5041132574563990889@swboyd.mtv.corp.google.com> <20181214053035.GK1578@tuxbook-pro>
Message-ID: <154508853143.19322.18196170541201508404@swboyd.mtv.corp.google.com>
From: Stephen Boyd <swboyd@chromium.org>
User-Agent: alot/0.8
Cc: Rajendra Nayak <rnayak@codeaurora.org>, sre@kernel.org,
        linux-kernel@vger.kernel.org, devicetree@vger.kernel.org,
        linux-arm-msm@vger.kernel.org, linux-arm-kernel@lists.infradead.org
Date: Mon, 17 Dec 2018 15:15:31 -0800
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Quoting Bjorn Andersson (2018-12-13 21:30:35)
> On Wed 21 Nov 10:26 PST 2018, Stephen Boyd wrote:
>=20
> > Quoting Stephen Boyd (2018-07-20 10:44:53)
> > > Quoting Rajendra Nayak (2018-07-18 23:59:20)
> > > > On 7/19/2018 11:12 AM, Bjorn Andersson wrote:
> > > > > On Wed 18 Jul 22:18 PDT 2018, Rajendra Nayak wrote:
> > > > >> diff --git a/Documentation/devicetree/bindings/power/reset/msm-p=
oweroff.txt b/Documentation/devicetree/bindings/power/reset/msm-poweroff.txt
> > > > >> index ce44ad3..9dd489f 100644
> > > > >> --- a/Documentation/devicetree/bindings/power/reset/msm-poweroff=
.txt
> > > > >> +++ b/Documentation/devicetree/bindings/power/reset/msm-poweroff=
.txt
> > > > >> @@ -8,6 +8,9 @@ settings.
> > > > >>   Required Properties:
> > > > >>   -compatible: "qcom,pshold"
> > > > >>   -reg: Specifies the physical address of the ps-hold register
> > > > >> +Optional Properties:
> > > > >> +-qcom,dload-mode: phandle to the TCSR hardware block and offset=
 of the
> > > > >> +             download mode control register
> > > > >>  =20
> > > > >>   Example:
> > > > >>  =20
> > > > >> diff --git a/drivers/power/reset/Kconfig b/drivers/power/reset/K=
config
> > > > >> index df58fc8..0c97e34 100644
> > > > >> --- a/drivers/power/reset/Kconfig
> > > > >> +++ b/drivers/power/reset/Kconfig
> > > > >> @@ -104,6 +104,17 @@ config POWER_RESET_MSM
> > > > >>      help
> > > > >>        Power off and restart support for Qualcomm boards.
> > > > >>  =20
> > > > >> +config POWER_RESET_MSM_DOWNLOAD_MODE
> > > > >=20
> > > > > How about moving QCOM_SCM_DOWNLOAD_MODE_DEFAULT to
> > > > > drivers/soc/qcom/Kconfig (and removing "SCM") and referencing thi=
s in
> > > > > both drivers?
> > > >=20
> > > > yes, thats possible, but I am not sure how to make the command line
> > > > option common for both. One other option I thought was if we could =
handle it
> > > > within the scm driver itself with an additional
> > > > binding to specify the non-secure download mode address.
> > > > something like qcom,dload-mode-ns?
> > >=20
> > > Is the SCM device and driver always going to be present though? It may
> > > be better to make a TCSR platform device driver on designs that would
> > > configure the cookie with direct read/writes from Linux to break the
> > > relationship with scm entirely. Then the different configurations cou=
ld
> > > flow from the DTS file either describing scm that has scm call, a
> > > special scm_writel address for TCSR, or a specific TCSR node with the
> > > address of the download mode cookie that triggers a TCSR driver to pr=
obe
> > > and register a reboot handler.
> > >=20
> >=20
> > Does my proposal work? I haven't seen anything new on the list since
> > this email.
> >=20
>=20
> Afaiu the SCM device is still there, even though we don't use all the
> usual functionality.

You mean the SCM device is always there even when TCSR is used to lay
down the download mode cookie?

>=20
> I tested on qcs404 and sdm845-mtp (LA boot chain), and they both return
> positive on:
>=20
>   __qcom_scm_is_call_available(dev, QCOM_SCM_SVC_IO, QCOM_SCM_IO_WRITE)
>=20
> So how about we change qcom_scm_set_download_mode() to do:
>=20
>   if (scm_call_avail(QCOM_SCM_SVC_BOOT, QCOM_SCM_SET_DLOAD_MODE))
>         __qcom_scm_set_dload_mode()
>   else if (scm_call_avail(QCOM_SCM_SVC_IO, QCOM_SCM_IO_WRITE) && dload_mo=
de_addr)
>         __qcom_scm_io_writel();
>   else if (dload_mode_addr)
>         writel()
>=20
> This would also mean that we can put the dload addr in the sdm845.dtsi
> and share that between LA and ATF.
>=20

I'd prefer that any ATF firmware put qcom's download mode behind a
vendor specific SYSTEM_RESET2 PSCI call so that ATF can do the magic to
clear the cookie on normal reboots and shutdowns. Abnormal resets where
we want to enter download mode from some panic or crash handler can be
handled by calling the vendor specific PSCI call. Then the only decision
that needs to be made is this one we're talking about now, where someone
wants a way to express that download mode should be entered when a
hardware event causes a reset (i.e. watchdog bite, thermal restart).

Even that decision could be made statically though, in which case I
don't see why SCM is a dependency. The bootloader or firmware can decide
to always put down the cookie early and clear it when the system is
normally rebooted so that bootloader bugs can be detected. I'll admit
that we lose the ability to disable download mode unless we implement
something to clear the cookie, so on firmwares without SCM I imagine the
cookie could be cleared with the direct writel() code. Long story short,
we need a more generic method than qcom_scm_set_download_mode() to do
that because it doesn't make sense to say there's SCM firmware there
when there isn't any.

So can there be some generic kernel piece of code that looks for the scm
firmware node and a tcsr node and then decides to set or clear the
cookie based on a commandline parameter? It can also look for a PSCI
node and if there's a compatible firmware with the vendor specific reset
call it can use that to know that it shouldn't do anything besides allow
the commandline parameter to clear or set the cookie. All of this
wouldn't actually require to be bound to any sort of device or device
node. It's just looking in DT/firmware tables for various pieces of
information and changing how reset, shutdown and the commandline
parameter is handled for the architecture.

Furthermore, the PSCI style reset handling would need to be plumbed into
the ARM/ARM64 reset hooks, so we would already need to add some panic
crash handler calls into the PSCI layer to handle the vendor specific
cases. Coming up with a more generic commandline parameter like
'panic_mode=3D<vendor>,type' would be good to express that we want to use
qcom download mode when the system panics and then one place for all the
different reboot logic can be contained to focus other SoC manufacturers
on implementing a PSCI call or flow in a similar way.

