Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  20 Dec 2018 08:39:39 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E3D24580522
	for <like.xu@linux.intel.com>; Wed, 19 Dec 2018 07:29:00 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga002-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 19 Dec 2018 07:29:00 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3Ai7DcIxTDfnEx0o0sAH8RIVknpdpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa6zZRKN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4qF2QxHqlS?=
 =?us-ascii?q?gHLSY0/mHJhMJ+j6xUohyhqBNwzYDJeIGYNvhwc6zAcd4UWWZOQN1RWjddDoOl?=
 =?us-ascii?q?dYYDE/YNMfpEo4T7ulAArQG+BQ6pBO730DFHnHj23ak90+88DAzG2wogHtMPsH?=
 =?us-ascii?q?TSrdX+KaAfUfiuw6nPyzXCbvJW2TH86IXTaBAuv+yDXbJqfsrN00UgCwTFjlCJ?=
 =?us-ascii?q?pIHjIjib1fwNvnCF4+Z8Vu+jkXMrpxxyrzS12MshhInEipgIxl3G7Sl13po5KN?=
 =?us-ascii?q?miREJmb9OoDoFcuzyZOoZ4WM8uXWJltSAnwbMco5G7ZjIFyJE/yh7fdfOHd4+I?=
 =?us-ascii?q?7wrnVOaQOjd4mGlldKiwhxa07Eis0Or8VtO70FpSrypFlMfDtmwV2hDN9sSKSe?=
 =?us-ascii?q?Fx8lq81TuMzQzf9O9JLEAumabGKZMt2rswmYASsUTHEC/2gkL2jKqOe0U95Oeo?=
 =?us-ascii?q?7vnnbqz7qZCCKY97lAX+Pr01lcy4HOQ4NBQBUHaA+ei70L3j/E75T6tQgvw5j6?=
 =?us-ascii?q?nUqJTaJcUdpq6kDA5ZyIcj6xCjDzi41NQUh2UILFVAeB+ciYjpPFfOIP/+Dfei?=
 =?us-ascii?q?mVisly1rx//eMr37HprNNmTDkKvmfbtl705cyQkzws5F65NbF7EMO/bzWk73tN?=
 =?us-ascii?q?zFAR41KQ20w+D7CNpj0oMSQ36AAqicMPCajFmT++h6I/WQfJRH/3H5KuM5/Ljo?=
 =?us-ascii?q?ink2n0JberOmmp4eaXS9F/IhJF2FYH3qmZAYHGIX+wYzUuHu22CESiNZMnO7Xq?=
 =?us-ascii?q?Yg4WMiBYe7SIvOWI2pxaaMxTq2BYF+YGdABVaRV3DyeNKfRv0OZSmOd9JniSEO?=
 =?us-ascii?q?TrO7SoUshi2p4Rb3zqciIufK9ykws5Xl295ooerJmkIc7ztxWvyU1GWKB0tzmH?=
 =?us-ascii?q?EJQT5+iLh1pkpvy1GC+bJ1j/xRCZpY4PYfAVRyDoLV0+EvU4O6YQnGZNrcEFs?=
 =?us-ascii?q?=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AYAABbYhpchxHrdtBkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTAqgjiMFl+LHYINl12BcxUYFIctIjQJDQEDAQEBAQEBAgETAQE?=
 =?us-ascii?q?BCgsJCBsOL4I2BQIDGAmCXAMDAQIkHwopAwMBAgYBAR8mAwgDAVMQCQWCUkuCA?=
 =?us-ascii?q?gEEqR8zhUCEbYw/F4FAP4ERjXICiT8GAYYSgU+QDQmRVgwYgV6IGTeHK5oCgUa?=
 =?us-ascii?q?CDjMaCBsVgyeCJxcSjgxAMYEHHItNgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AYAABbYhpchxHrdtBkHAEBAQQBAQcEAQGBUQcBAQsBgTA?=
 =?us-ascii?q?qgjiMFl+LHYINl12BcxUYFIctIjQJDQEDAQEBAQEBAgETAQEBCgsJCBsOL4I2B?=
 =?us-ascii?q?QIDGAmCXAMDAQIkHwopAwMBAgYBAR8mAwgDAVMQCQWCUkuCAgEEqR8zhUCEbYw?=
 =?us-ascii?q?/F4FAP4ERjXICiT8GAYYSgU+QDQmRVgwYgV6IGTeHK5oCgUaCDjMaCBsVgyeCJ?=
 =?us-ascii?q?xcSjgxAMYEHHItNgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,373,1539673200"; 
   d="scan'208";a="67536822"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mga01b.intel.com with ESMTP/TLS/AES256-SHA; 19 Dec 2018 07:28:59 -0800
Received: from localhost ([::1]:60774 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gZdmN-0005XP-8k
	for like.xu@linux.intel.com; Wed, 19 Dec 2018 10:28:59 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:55716)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <pbonzini@redhat.com>) id 1gZddf-00066U-A4
	for qemu-devel@nongnu.org; Wed, 19 Dec 2018 10:20:01 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <pbonzini@redhat.com>) id 1gZddd-0004CP-Bk
	for qemu-devel@nongnu.org; Wed, 19 Dec 2018 10:19:59 -0500
Received: from mx1.redhat.com ([209.132.183.28]:49044)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <pbonzini@redhat.com>) id 1gZddc-0004Be-VQ
	for qemu-devel@nongnu.org; Wed, 19 Dec 2018 10:19:57 -0500
Received: from smtp.corp.redhat.com (int-mx06.intmail.prod.int.phx2.redhat.com
	[10.5.11.16])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id B13039F74B;
	Wed, 19 Dec 2018 15:19:55 +0000 (UTC)
Received: from donizetti.redhat.com (ovpn-112-76.ams2.redhat.com
	[10.36.112.76])
	by smtp.corp.redhat.com (Postfix) with ESMTP id B228718215;
	Wed, 19 Dec 2018 15:19:54 +0000 (UTC)
From: Paolo Bonzini <pbonzini@redhat.com>
To: qemu-devel@nongnu.org
Date: Wed, 19 Dec 2018 16:18:59 +0100
Message-Id: <20181219151917.3874-18-pbonzini@redhat.com>
In-Reply-To: <20181219151917.3874-1-pbonzini@redhat.com>
References: <20181219151917.3874-1-pbonzini@redhat.com>
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.16
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.39]);
	Wed, 19 Dec 2018 15:19:55 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [PULL 17/35] scsi: esp: Defer command completion until
 previous interrupts have been handled
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Guenter Roeck <linux@roeck-us.net>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

From: Guenter Roeck <linux@roeck-us.net>

The guest OS reads RSTAT, RSEQ, and RINTR, and expects those registers
to reflect a consistent state. However, it is possible that the registers
can change after RSTAT was read, but before RINTR is read, when
esp_command_complete() is called.

Guest OS		qemu
--------		----
[handle interrupt]
Read RSTAT
			esp_command_complete()
			 RSTAT =3D STAT_ST
			 esp_dma_done()
			  RSTAT |=3D STAT_TC
			  RSEQ =3D 0
			  RINTR =3D INTR_BS

Read RSEQ
Read RINTR		RINTR =3D 0
			RSTAT &=3D ~STAT_TC
			RSEQ =3D SEQ_CD

The guest OS would then try to handle INTR_BS combined with an old
value of RSTAT. This sometimes resulted in lost events, spurious
interrupts, guest OS confusion, and stalled SCSI operations.
A typical guest error log (observed with various versions of Linux)
looks as follows.

scsi host1: Spurious irq, sreg=3D13.
...
scsi host1: Aborting command [84531f10:2a]
scsi host1: Current command [f882eea8:35]
scsi host1: Queued command [84531f10:2a]
scsi host1:  Active command [f882eea8:35]
scsi host1: Dumping command log
scsi host1: ent[15] CMD val[44] sreg[90] seqreg[00] sreg2[00] ireg[20] ss=
[00] event[0c]
scsi host1: ent[16] CMD val[01] sreg[90] seqreg[00] sreg2[00] ireg[20] ss=
[02] event[0c]
scsi host1: ent[17] CMD val[43] sreg[90] seqreg[00] sreg2[00] ireg[20] ss=
[02] event[0c]
scsi host1: ent[18] EVENT val[0d] sreg[92] seqreg[04] sreg2[00] ireg[18] =
ss[00] event[0c]
...

Defer handling command completion until previous interrupts have been
handled to fix the problem.

Signed-off-by: Guenter Roeck <linux@roeck-us.net>
---
 hw/scsi/esp-pci.c     |  4 ++--
 hw/scsi/esp.c         | 33 ++++++++++++++++++++++++++-------
 hw/scsi/trace-events  |  1 +
 include/hw/scsi/esp.h |  2 ++
 4 files changed, 31 insertions(+), 9 deletions(-)

diff --git a/hw/scsi/esp-pci.c b/hw/scsi/esp-pci.c
index d956909186..6b0bbb9b7f 100644
--- a/hw/scsi/esp-pci.c
+++ b/hw/scsi/esp-pci.c
@@ -313,8 +313,8 @@ static void esp_pci_hard_reset(DeviceState *dev)
=20
 static const VMStateDescription vmstate_esp_pci_scsi =3D {
     .name =3D "pciespscsi",
-    .version_id =3D 0,
-    .minimum_version_id =3D 0,
+    .version_id =3D 1,
+    .minimum_version_id =3D 1,
     .fields =3D (VMStateField[]) {
         VMSTATE_PCI_DEVICE(parent_obj, PCIESPState),
         VMSTATE_BUFFER_UNSAFE(dma_regs, PCIESPState, 0, 8 * sizeof(uint3=
2_t)),
diff --git a/hw/scsi/esp.c b/hw/scsi/esp.c
index 630d923623..ca8b36c0c5 100644
--- a/hw/scsi/esp.c
+++ b/hw/scsi/esp.c
@@ -286,11 +286,8 @@ static void esp_do_dma(ESPState *s)
     esp_dma_done(s);
 }
=20
-void esp_command_complete(SCSIRequest *req, uint32_t status,
-                                 size_t resid)
+static void esp_report_command_complete(ESPState *s, uint32_t status)
 {
-    ESPState *s =3D req->hba_private;
-
     trace_esp_command_complete();
     if (s->ti_size !=3D 0) {
         trace_esp_command_complete_unexpected();
@@ -311,6 +308,23 @@ void esp_command_complete(SCSIRequest *req, uint32_t=
 status,
     }
 }
=20
+void esp_command_complete(SCSIRequest *req, uint32_t status,
+                          size_t resid)
+{
+    ESPState *s =3D req->hba_private;
+
+    if (s->rregs[ESP_RSTAT] & STAT_INT) {
+        /* Defer handling command complete until the previous
+         * interrupt has been handled.
+         */
+        trace_esp_command_complete_deferred();
+        s->deferred_status =3D status;
+        s->deferred_complete =3D true;
+        return;
+    }
+    esp_report_command_complete(s, status);
+}
+
 void esp_transfer_data(SCSIRequest *req, uint32_t len)
 {
     ESPState *s =3D req->hba_private;
@@ -422,7 +436,10 @@ uint64_t esp_reg_read(ESPState *s, uint32_t saddr)
         s->rregs[ESP_RSTAT] &=3D ~STAT_TC;
         s->rregs[ESP_RSEQ] =3D SEQ_CD;
         esp_lower_irq(s);
-
+        if (s->deferred_complete) {
+            esp_report_command_complete(s, s->deferred_status);
+            s->deferred_complete =3D false;
+        }
         return old_val;
     case ESP_TCHI:
         /* Return the unique id if the value has never been written */
@@ -582,6 +599,8 @@ const VMStateDescription vmstate_esp =3D {
         VMSTATE_UINT32(ti_wptr, ESPState),
         VMSTATE_BUFFER(ti_buf, ESPState),
         VMSTATE_UINT32(status, ESPState),
+        VMSTATE_UINT32(deferred_status, ESPState),
+        VMSTATE_BOOL(deferred_complete, ESPState),
         VMSTATE_UINT32(dma, ESPState),
         VMSTATE_PARTIAL_BUFFER(cmdbuf, ESPState, 16),
         VMSTATE_BUFFER_START_MIDDLE_V(cmdbuf, ESPState, 16, 4),
@@ -671,8 +690,8 @@ static void sysbus_esp_hard_reset(DeviceState *dev)
=20
 static const VMStateDescription vmstate_sysbus_esp_scsi =3D {
     .name =3D "sysbusespscsi",
-    .version_id =3D 0,
-    .minimum_version_id =3D 0,
+    .version_id =3D 1,
+    .minimum_version_id =3D 1,
     .fields =3D (VMStateField[]) {
         VMSTATE_STRUCT(esp, SysBusESPState, 0, vmstate_esp, ESPState),
         VMSTATE_END_OF_LIST()
diff --git a/hw/scsi/trace-events b/hw/scsi/trace-events
index 0fb6a99616..2fe8a7c062 100644
--- a/hw/scsi/trace-events
+++ b/hw/scsi/trace-events
@@ -167,6 +167,7 @@ esp_handle_satn_stop(uint32_t cmdlen) "cmdlen %d"
 esp_write_response(uint32_t status) "Transfer status (status=3D%d)"
 esp_do_dma(uint32_t cmdlen, uint32_t len) "command len %d + %d"
 esp_command_complete(void) "SCSI Command complete"
+esp_command_complete_deferred(void) "SCSI Command complete deferred"
 esp_command_complete_unexpected(void) "SCSI command completed unexpected=
ly"
 esp_command_complete_fail(void) "Command failed"
 esp_transfer_data(uint32_t dma_left, int32_t ti_size) "transfer %d/%d"
diff --git a/include/hw/scsi/esp.h b/include/hw/scsi/esp.h
index 682a0d2de0..adab63d1c9 100644
--- a/include/hw/scsi/esp.h
+++ b/include/hw/scsi/esp.h
@@ -23,6 +23,8 @@ struct ESPState {
     int32_t ti_size;
     uint32_t ti_rptr, ti_wptr;
     uint32_t status;
+    uint32_t deferred_status;
+    bool deferred_complete;
     uint32_t dma;
     uint8_t ti_buf[TI_BUFSZ];
     SCSIBus bus;
--=20
2.20.1



