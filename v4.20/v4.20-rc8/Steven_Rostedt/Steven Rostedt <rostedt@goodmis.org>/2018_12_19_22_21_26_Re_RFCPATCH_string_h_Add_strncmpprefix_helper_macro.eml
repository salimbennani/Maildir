Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  20 Dec 2018 08:43:43 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga007.fm.intel.com (fmsmga007.fm.intel.com [10.253.24.52])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 0DBCD580522;
	Wed, 19 Dec 2018 14:31:32 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga007-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 19 Dec 2018 14:31:31 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Aay3TBB1yNXW8bIohsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segSLP7xwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJPUMlfVSNBDIyz?=
 =?us-ascii?q?YJcAAeQcI+hWr4rzp0AWrRa8HgSsGOHhyjpUinPqx6A30eIsGhzG0gw6GNIOtW?=
 =?us-ascii?q?zZosjpNKgMT+C60q/IxijfYfNRwjf99JbHfQ09ofqRWr9wa83RyVIzFwzbk1qQ?=
 =?us-ascii?q?tZfoPzyS1uQKrmeb6utgVfm1h24gsQFxrSGiy8ExgYfHgYIVz0rL9SR/wIstJt?=
 =?us-ascii?q?23VlR7Ydi6H5tUrS2aMJF2QswkTmp1uyg60qULtYCncCUO0pgr2hDSZ+Kdf4SV?=
 =?us-ascii?q?4R/vSPydLDZ6iX59eb+yhgy+/Euix+HmS8W4zllHojBBn9TCsH0Gygbd5dKdSv?=
 =?us-ascii?q?Rn+0eswTaP2B7X6uFDOU00i6XbJIA7wrIqlZocr17DHinol0XylqOWcV8k+uew?=
 =?us-ascii?q?5+TmZLXpuIOcOpdqhg3iNqkigNGzDOomPgQUQmSW+viw2Kfi8ED7WLlKi+c5kq?=
 =?us-ascii?q?jdsJDUP8Qboau5DhdR0oYi7Ra/Ejin3M0bnXYZNlJFfgyIj4zwN1HJLvH4C+mw?=
 =?us-ascii?q?g063nTd1yPDJIKfhDo/OLnfdirfhe6hy60pGxAo019Bf6IpYCqsdL/LrRk/xqN?=
 =?us-ascii?q?vYAwc9Mwy1wOboFs9x14wDWW+UBq+ZMaXSsUKH5+41IumMYpMVtyj5K/Q/+/Hu?=
 =?us-ascii?q?ino5k0cHfaa1xZsXdGy4HvN+LkWZe3Xsg8sBHn0NvgYkTOzqlUeNUThcZ3upW6?=
 =?us-ascii?q?I85zc7CJ+pDIvZR4CthqCB0zm/HpFMem9GDVWMG2/yd4qYQ/cMdD6SIsh5nzMe?=
 =?us-ascii?q?TrihS4gh1RK0uA/g0bVnLPHZ+ikZtZLlydh06PfflRA09TxoEcud13uBQH1znm?=
 =?us-ascii?q?MNXzU2xrxwoVRhylef1qh1m/9YGsZV5/9TVgc6NITTz+p1C93pXgLBf9GJSEup?=
 =?us-ascii?q?Q9m8ADExSM4xzMEKY0pnB9qiiRXD1TKwA7AJj7yLGIA08qXE0nfsPcl91WjJ2L?=
 =?us-ascii?q?Mhj1Y8RMtPLnOphqh4+wjXBI7JlkGZmr2udaQd2i7N6WiCwXCPvEFeTA5/T6HF?=
 =?us-ascii?q?UWoDaUvRqNTz/lnCQKO2CbQ7LgtBztaPJbZQZd33k1pKXvfjN87YY2KqhWiwAw?=
 =?us-ascii?q?2FxreNbIrsZmUc0z/RCEkCkwAP43mGMRIyCTumo2LbFDZuD07gY1vw8elir3O2?=
 =?us-ascii?q?VlM0zwCPb01my7q1+h4UieaAS/8J2bIEoiMhqzRyHFayxN/WD9uApwx8fKRTe9?=
 =?us-ascii?q?894VFH1X7HuAx5JJCvM6dihlsGeQRto0zuzwl3CplHkcUytnwqyBR9KK2G31JB?=
 =?us-ascii?q?bT+Xxo3wNaDNJWn0/xCvbLDW10ra0NaX/KcP9fs5p0/ivAGvCkot7XFn38NJ3H?=
 =?us-ascii?q?ub45XAFBASXo7pUkYr6xh6oKnXYykg54/OyXJgK6i1sj/Y1NIvC+so0RKgf9ZZ?=
 =?us-ascii?q?MKOZGw7+CcwaB86yKOM0n1ildA4LPOdX9KQsJcOpa+OG2LK3POZnhD+ml2VH75?=
 =?us-ascii?q?xn3UKW6iV8TfTE35AbzPGC3wuLTivzg02lss/qh49EfzYSHmykxCjgBY5RYLBy?=
 =?us-ascii?q?fIkRBWevJc232stxh5r3V3FE816jAksM2NW1dhqKc1z9wQpQ2FwXoHymgye5zy?=
 =?us-ascii?q?Z4kyo0rqqZxyHOx+XidBwaOm9EXmVijFHsIZSqgNAeRkSncw8plB6970bg26db?=
 =?us-ascii?q?vLh/L3XUQUpQfSj5NXtiUqiztrqFecJP84knsSZUUOS9Z1CVVLj9rgAe0yPiGW?=
 =?us-ascii?q?te2T86eyurupX/gxx1lmadIGxvo3refMF63Q3f68DERf5NwjoGQzF1iDnNCVi7?=
 =?us-ascii?q?JdWp/9SUl5HYv+C6VmKhUIBTcCbxwYOBsiu7+XNlARmlk/+vnd3nFBAw0TXn2N?=
 =?us-ascii?q?lySSXIsBH8b5Ho16ugMOJrZEloBELm5Mp8FYFziY8whJAW2XgHiZSZ53sHkWHv?=
 =?us-ascii?q?MdpF3aLydmYCRTkOw9TN+gjqxFVjLm6Vx4L+Tnidx8phZ9qgbW8M1CMy8dtKCL?=
 =?us-ascii?q?uK47xehiR6vEC4rQ3KbPh5nzcdz+Yu6XEAj+EIvgot0juSArQIEUZEOizskgyC?=
 =?us-ascii?q?78qio6VPeGavbb+w2VJindCmCbGOuABdV2z/epc/Bi9w9cR/PUnI0H3y7IHkZd?=
 =?us-ascii?q?bRYcgSth2SjxfPkexVJIgtmfoNgCptIXj9smE9y+4nkRxu2om3s5OdJGVq+KK5?=
 =?us-ascii?q?HwRUNjnoZ84I/jHtjKBentuZ3oy1H5VhHCkLU4XsTf6yDD0SsvHnPR6UEDIgsn?=
 =?us-ascii?q?ebBabfHQiH5UdktX3PFo6kN2qNKHkF19liRwSdJE9CgAASRjo6hYU0FgSrxMzn?=
 =?us-ascii?q?bUd46Sod5l/+qhtQ1O1oMwPzXXvYpAetcj00UoSQLAJK7gFe4EfYKcyf7uVuHy?=
 =?us-ascii?q?FB452utgqNJnaAZwRPC2EJVVeJB1TiPrmo+NnB/PKUBuu4L/vSf7qOrfZSWOuP?=
 =?us-ascii?q?xZKqyoFm5SqDNt2TPnl+CP02wkpDUm54G8TamDUPSjYblyHXb86cqxez5Dd3rt?=
 =?us-ascii?q?2k8PnwXALv5I2PC6ZdMNl1+hC2h7uDOPCUhCpjNTlY0ZYMz2fSyLcDxF4Slz1u?=
 =?us-ascii?q?dz61HLsaqC7CV7jQlbFXDhIBbyNzNdBF76Y93glLJM7ahcn51r9+jv4pFVhFUU?=
 =?us-ascii?q?btld2uZcwPO2u9Lk/IBF6XNLSaIj3G2933YaK5SbFKkOpYrQG/uTaFHE/lJTmD?=
 =?us-ascii?q?kzjpVxayMeBDli2bPRpeuJ2jfRZpE2TsUNXmahijOt9tkTI22aE0hm/NNWMEMT?=
 =?us-ascii?q?lzaUVNrriR7SNemvp+GmxB4WBjLemLgCuZ6+jYKpALsfpkGCh0luRa4GgkxLtR?=
 =?us-ascii?q?9i1LWPt1mC6B5uJp9nOhn6G3xyBsUBdV4mJJg4+jpUh4MqXU7d9LXnOSuFopzk?=
 =?us-ascii?q?C0Q0AOpt14GpjstrpWx9zniq3+MnFB/sjS8M9aANLbfpGpKn0kZCH1FSDZCkM/?=
 =?us-ascii?q?SiW3OG3DzxhHl+qO+3GJhpc9rZTpmYFITaVUAg9mXsgGA1hoSYRRaKx8WSkpxP?=
 =?us-ascii?q?vC1JYF?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AfAABfxhpch0O0hNFkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBZYJqgQIng32IeI0qFIENmC8tDwQBhy0iOBIBAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQgNCQgpIwyCNiQBgmIBAgMBAiAQRgYJAQEKGAICJgICA1QGAQ0FBYMdAYIBB?=
 =?us-ascii?q?QqoHoEvhC0BgRKEboELizQXgX+BOB+CTIRhAQGDJjGCJgKLP4UXkF4JhxCKaoF?=
 =?us-ascii?q?eTYRSilwsiRyBc4MGi0KBXIF3MxoIKAhlAYJBCQqCFBeIXoVdIzEBAQEBYSABA?=
 =?us-ascii?q?ReLC4I+AQE?=
X-IPAS-Result: =?us-ascii?q?A0AfAABfxhpch0O0hNFkGgEBAQEBAgEBAQEHAgEBAQGBZYJ?=
 =?us-ascii?q?qgQIng32IeI0qFIENmC8tDwQBhy0iOBIBAwEBAQEBAQIBEwEBAQgNCQgpIwyCN?=
 =?us-ascii?q?iQBgmIBAgMBAiAQRgYJAQEKGAICJgICA1QGAQ0FBYMdAYIBBQqoHoEvhC0BgRK?=
 =?us-ascii?q?EboELizQXgX+BOB+CTIRhAQGDJjGCJgKLP4UXkF4JhxCKaoFeTYRSilwsiRyBc?=
 =?us-ascii?q?4MGi0KBXIF3MxoIKAhlAYJBCQqCFBeIXoVdIzEBAQEBYSABAReLC4I+AQE?=
X-IronPort-AV: E=Sophos;i="5.56,374,1539673200"; 
   d="scan'208";a="67612980"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 19 Dec 2018 14:31:30 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730067AbeLSW21 convert rfc822-to-8bit (ORCPT
        <rfc822;like.xu@linux.intel.com> + 22 others);
        Wed, 19 Dec 2018 17:28:27 -0500
Received: from smtprelay0128.hostedemail.com ([216.40.44.128]:36904 "EHLO
        smtprelay.hostedemail.com" rhost-flags-OK-OK-OK-FAIL)
        by vger.kernel.org with ESMTP id S1728740AbeLSW21 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 19 Dec 2018 17:28:27 -0500
X-Greylist: delayed 417 seconds by postgrey-1.27 at vger.kernel.org; Wed, 19 Dec 2018 17:28:26 EST
Received: from smtprelay.hostedemail.com (10.5.19.251.rfc1918.com [10.5.19.251])
        by smtpgrave02.hostedemail.com (Postfix) with ESMTP id 1470418033CFA
        for <linux-kernel@vger.kernel.org>; Wed, 19 Dec 2018 22:21:30 +0000 (UTC)
Received: from filter.hostedemail.com (clb03-v110.bra.tucows.net [216.40.38.60])
        by smtprelay07.hostedemail.com (Postfix) with ESMTP id 3B455181D341D;
        Wed, 19 Dec 2018 22:21:29 +0000 (UTC)
X-Session-Marker: 726F737465647440676F6F646D69732E6F7267
X-Spam-Summary: 2,0,0,,d41d8cd98f00b204,rostedt@goodmis.org,:::::::::::::::,RULES_HIT:41:152:355:379:599:800:960:967:973:988:989:1260:1263:1277:1311:1313:1314:1345:1359:1437:1513:1515:1516:1518:1521:1535:1543:1593:1594:1605:1711:1730:1747:1777:1792:2194:2199:2393:2525:2553:2559:2563:2682:2685:2693:2859:2902:2933:2937:2939:2942:2945:2947:2951:2954:3022:3138:3139:3140:3141:3142:3865:3866:3867:3868:3870:3871:3872:3874:3934:3936:3938:3941:3944:3947:3950:3953:3956:3959:4321:4384:5007:6119:7653:7875:7903:7904:8603:9025:9040:9108:10004:10400:10848:11026:11232:11257:11658:11914:12043:12438:12555:12663:12740:12783:12895:12986:14181:14721:14849:21080:21347:21433:21451:21627:30026:30051:30054:30070:30079:30090:30091,0,RBL:66.87.124.93:@goodmis.org:.lbl8.mailshell.net-62.8.0.100 64.201.201.201,CacheIP:none,Bayesian:0.5,0.5,0.5,Netcheck:none,DomainCache:0,MSF:not bulk,SPF:fn,MSBL:0,DNSBL:neutral,Custom_rules:0:0:0,LFtime:28,LUA_SUMMARY:none
X-HE-Tag: part32_cdec7f437637
X-Filterd-Recvd-Size: 5156
Received: from ip-30-183-4-93.pools.spcsdns.net (ip-66-87-124-93.spfdma.spcsdns.net [66.87.124.93])
        (Authenticated sender: rostedt@goodmis.org)
        by omf02.hostedemail.com (Postfix) with ESMTPA;
        Wed, 19 Dec 2018 22:21:28 +0000 (UTC)
Date: Wed, 19 Dec 2018 17:21:26 -0500
User-Agent: K-9 Mail for Android
In-Reply-To: <b6cc5327509148fb26bfba2ca34f9c2927437707.camel@perches.com>
References: <20181219163207.792e0f97@gandalf.local.home> <b6cc5327509148fb26bfba2ca34f9c2927437707.camel@perches.com>
MIME-Version: 1.0
Content-Type: text/plain;
 charset=utf-8
Content-Transfer-Encoding: 8BIT
Subject: Re: [RFC][PATCH] string.h: Add strncmp_prefix() helper macro
To: Joe Perches <joe@perches.com>, LKML <linux-kernel@vger.kernel.org>
CC: Linus Torvalds <torvalds@linux-foundation.org>,
        Andrew Morton <akpm@linux-foundation.org>,
        Ingo Molnar <mingo@kernel.org>,
        Tom Zanussi <zanussi@kernel.org>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Alexander Shishkin <alexander.shishkin@linux.intel.com>
From: Steven Rostedt <rostedt@goodmis.org>
Message-ID: <0A30C9FF-1E99-454A-B935-AD14819DBF1C@goodmis.org>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Seems that I sent this as my daughter.

I'm not home now but will resend again as myself when I am.

-- Steve

On December 19, 2018 4:54:57 PM EST, Joe Perches <joe@perches.com> wrote:
>On Wed, 2018-12-19 at 16:32 -0500, Bryana Rostedt wrote:
>> A discussion came up in the trace triggers thread about converting a
>> bunch of:
>> 
>>  strncmp(str, "const", sizeof("const") - 1)
>> 
>> use cases into a helper macro. It started with:
>> 
>> #define strncmp_const(str, const) \
>> 	strncmp(str, const, sizeof(const) - 1)
>> 
>> But then Joe Perches mentioned that if a const is not used, the
>> sizeof() will be the size of a pointer, which can be bad. And that
>> gcc will optimize strlen("const") into "sizeof("const") - 1".
>> 
>> Thinking about this more, a quick grep in the kernel tree found
>several
>> (thousands!) of cases that use this construct. A quick grep also
>> revealed that there's probably several bugs in that use case. Some
>are
>> that people forgot the "- 1" (which I found) and others could be that
>> the constant for the sizeof is different than the constant (although,
>I
>> haven't found any of those, but I also didn't look hard).
>> 
>> I figured the best thing to do is to create a helper macro and place
>it
>> into include/linux/string.h. And go around and fix all the open coded
>> versions of it later.
>> 
>> I plan on only applying this patch and updating the tracing hooks for
>> this merge window. And perhaps use it to fix some of the bugs that
>were
>> found.
>> 
>> I was going to just use:
>> 
>> #define strncmp_prefix(str, prefix) \
>> 	strncmp(str, prefix, strlen(prefix))
>> 
>> but then realized that "prefix" is used twice, and will break if
>> someone does something like:
>> 
>> 	strncmp_prefix(str, ptr++);
>> 
>> So instead I check with __builtin_constant_p() to see if the second
>> parameter is truly a constant, which I use sizeof() anyway (why
>bother
>> gcc to optimize it, if we already know it's a constant), and copy the
>> parameter into a local variable and use that local variable for the
>non
>> constant part (with strlen).
>> 
>> Link:
>http://lkml.kernel.org/r/e3e754f2bd18e56eaa8baf79bee619316ebf4cfc.1545161087.git.tom.zanussi@linux.intel.com
>> 
>> Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
>> ---
>> diff --git a/include/linux/string.h b/include/linux/string.h
>> index 27d0482e5e05..3dc743e3a0ba 100644
>> --- a/include/linux/string.h
>> +++ b/include/linux/string.h
>> @@ -14,6 +14,27 @@ extern void *memdup_user(const void __user *,
>size_t);
>>  extern void *vmemdup_user(const void __user *, size_t);
>>  extern void *memdup_user_nul(const void __user *, size_t);
>>  
>> +/*
>> + * A common way to test a prefix of a string is to do:
>> + *  strncmp(str, prefix, sizeof(prefix) - 1)
>> + *
>> + * But this can lead to bugs due to typos, or if prefix is a pointer
>> + * and not a constant. Instead use strncmp_prefix().
>> + */
>> +#define strncmp_prefix(str, prefix)					\e
>> +	({								\
>> +		int ____strcmp_prefix_ret____;				\
>> +		char *____strcmp_prefix____ = prefix;			\
>
>This creates a warning and discards any const from prefix when used
>like
>
>	static const char foo[] = "bar";
>
>	strncmp_prefix(str, foo);
>
>> +		if (__builtin_constant_p(&prefix))			\
>> +			____strcmp_prefix_ret____ =			\
>> +				strncmp(str, prefix, sizeof(prefix) - 1); \
>> +		else							\
>> +			____strcmp_prefix_ret____ =			\
>> +				strncmp(str, ____strcmp_prefix____,	\
>> +					strlen(____strcmp_prefix____));	\
>> +		____strcmp_prefix_ret____;				\
>> +	})
>> +
>
>Perhaps
>
>#define strncmp_prefix(str, prefix)					\
>({									\
>	typeof(prefix) p = (prefix);					\
>	strncmp(str, p, strlen(p));					\
>})

-- 
Sent from my Android device with K-9 Mail. Please excuse my brevity and top posting.
