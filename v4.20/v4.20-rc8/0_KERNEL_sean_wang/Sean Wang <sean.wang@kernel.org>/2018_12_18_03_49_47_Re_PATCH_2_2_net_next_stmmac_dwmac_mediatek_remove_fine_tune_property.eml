Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 18:06:58 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 5AB5A5805FC;
	Mon, 17 Dec 2018 19:53:24 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga002-1.fm.intel.com with ESMTP; 17 Dec 2018 19:53:23 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AslZONh9m409KUv9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1+MWIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CSmVBUMReWSxPDI2/?=
 =?us-ascii?q?coUBEfYOPf1Ar4T/vFYOsQeyCBOwCO/z1jNFhHn71rA63eQ7FgHG2RQtEc8Qv3?=
 =?us-ascii?q?vOqtX+KacdXvqzzKnH0D7OaOhW1inn54jOaBwgr+uDXbR/ccfKykkgCRnFjlOO?=
 =?us-ascii?q?pozhJT+V0f4Ns2eC4udmSOmhhWknqwRrrTiuwMchkojJhoQbylDe7yp23Zg6Ks?=
 =?us-ascii?q?elR0JhZt6kCpRQuieHPIV1WsMvW39ktDo+x7EcpJK2cjYGxI46yxPcd/CLaYmF?=
 =?us-ascii?q?7xD7WOqPPTt1gGhpdbG/ihqo7ESs1O7xWtO03VpWqCdOj8PCuWoX1xPJ78iKUv?=
 =?us-ascii?q?t98Vml2TaIzw3T9O5ELl4ulabBKJ4u3KQwlpwNvkTHBCP2n1/2jKCOekUl/Oin?=
 =?us-ascii?q?9fjnb634qpOAM4J4kBzyP6owlsClHOg1MRQCU3Ka9Om+zLHj+Ff2QLROjv04iK?=
 =?us-ascii?q?nZt5XaKNwfpq64BQ9Vz4ki5w+8Dzi4ytQYm2cILFZcdBKAgYnpPU/BIOrjAPeh?=
 =?us-ascii?q?jFSjji1ry+rFPrL/GJXNKGbMkLP7cbZ68U5cxxI/zcpD6JJMFrEBPPXzV1f1tN?=
 =?us-ascii?q?zZDR82LRa4wun6CNhm0oMeWGSPArKWMa/IsF+I4P4vLPeIZIMPpDn9LP0l7eb0?=
 =?us-ascii?q?jXAlgV8dYbWp3ZwPZXC4BPtmIlmZbmDrgtsbEWcKoxAxTOrliFCZVT5TZnCyX7?=
 =?us-ascii?q?8z5z0hCYKmC5vDSZ6pgLCbwCi7GZhWbHhcCl+QCXfoa5mEW/AUZSKQJc9ujCYI?=
 =?us-ascii?q?VbumS48n0xGusxT3y75mLurS5y0Zuojv1Nlz5+3Pix4y8SZ4ANia02GIV2t0hH?=
 =?us-ascii?q?8HRycq3KBjpkxw0k2M0bN4g/xfFtxf/elJXR04NZPHy+x6CtbyWh/Of9uTSVam?=
 =?us-ascii?q?RMmmDi81Tt4r39AOZEN9Ec24jh/fxyqqH6MVl7uTCZw36K3c2WL9J8J8y3nc0q?=
 =?us-ascii?q?khgEIrQs9ONW2gm65++BLfB4/Pk0WFiamqcb4Q0zLK9GeG1WCOpl1XUBZsUaXZ?=
 =?us-ascii?q?WnASflbZos7n5kzcVbOuCa4oMg1aycGcLKtGbdnpjVZDRPfnI9neZ2Oxm2GtBR?=
 =?us-ascii?q?eH3L+MbYzqe3kD0yXZEkQLjwcT/XOePwgkGiihu37eDCBpFV/3fkzj6/d+p22h?=
 =?us-ascii?q?Qk801Q6KaVZh2KSz+hMOgfycSvUT3q8LuSs7qjV0Gkq90MzSC9aauwVhe6Bca8?=
 =?us-ascii?q?sn4FhbzWLZqxB9Ppu4IqB+h14edgN3v1/u1xR3EIlAjdImrHQwzAp2KKKY1lxB?=
 =?us-ascii?q?eiic3ZDxPL3XN2bz8Aqua67QxlHRztKW9r0T5/Q/rlXppBupGVY683V7z9lV1G?=
 =?us-ascii?q?OR6Y/ODAUMXpP+TEY2+wJhqLHHfyYy/YXU1X5rMamqqTLC39MpBO04yhevZdtf?=
 =?us-ascii?q?MaWEFBPsHM0eHcShNOsqm12xZBIeIO9S7LI0P9+hd/ae2K+rIfxsky68gWVG4I?=
 =?us-ascii?q?ByyESM9yVnR+7M3pYFxeyY3wSdWzf9ilehrt74mYReaT4OGWq/zDDuBJRNaa1q?=
 =?us-ascii?q?YYYLFWCuLtWtxtV/m5HiQWRY+0OkB18c3s+mZwCSb13k0QJMz0sXpWGoljWizz?=
 =?us-ascii?q?xzlTEkta6f3C3Iw+T/exsLIG9LRG9+jVjyJYi4lcwVXE+tbwIxjhuq+V76x7RH?=
 =?us-ascii?q?pKR4N2TSQUZIczL2Lm14Sauwq7yCbtVL6JMptyVXTeu9bUqbSr77vxsVzSfjE3?=
 =?us-ascii?q?FCyzA8cjGgoo/5kABiiGKBMHZzq2LUecNqyhfF59zcRvlR0iAdRCZiijnXBVm8?=
 =?us-ascii?q?P9+38tWSjJrDtuG+V2S8VpxcayXrzIWAtDel6m1uGxGwg/ezmtj/GwggzSD7z8?=
 =?us-ascii?q?VqVTnPrBvkYojkzaO6PfhlfklpAl/x8M56GoB4kosti5Acw3kahpOJ/XUZlWf/?=
 =?us-ascii?q?K8lU2aX7bHAVXz4E38bV4BT52E1kNn+JxJj2VnSHzsthetm1eGUW2i0m4sBOCa?=
 =?us-ascii?q?eU6qFEnCRvrlq5qwLRfeZynjMHxfQy734ahvkDuBAxwSWFHrASAU5YMDTplxSJ?=
 =?us-ascii?q?7NCxtr9bZWixfriryEpxg8qhA6qcrQFGV3b0YZMiHS527sViP1PAynzz6of4eN?=
 =?us-ascii?q?bOadIfrAGbkxDFj+JNMpI+iuIKhTZ7OWL6pXAl1+k7jRl00ZC7poeHLXht/Lmi?=
 =?us-ascii?q?Ah5ZLTD1Y8IT+jfwjadRhMqW3oavHol/FTUPRpfnUfWoEDcKv/T9KwmOCCE8qm?=
 =?us-ascii?q?ucGbfHBgCQ8kBmr3bSE5yxM3GXOWIUzdFjRBmbOUxejxoYXDQ8np4lCA+qwNbt?=
 =?us-ascii?q?f1t+5jAU/lT4sAdDyvp0NxnjVWfSvAWoZS0xSJeBNxpa9B1C613WMcyD7eJzAi?=
 =?us-ascii?q?dY8Ye6rAGWLmybZgJIDXwGW0CeBlDjOKWu6sfE8+SCGuW+KP7Oa62UqeNCT/eI?=
 =?us-ascii?q?2Y6v0ox+8jeMMcWPI2BiD+Ah1UpFR3x5AMPZmzMASyEMkyLNbsibpAqz+yFtr8?=
 =?us-ascii?q?C/9ujrVxzr5YeVF7RSNtBv8QisgaifL+6QmDp5KTFA25MM23DIybsf3F0Tiy10?=
 =?us-ascii?q?dDmtC7MAtSHTQ6LKh69XFAUWaydyNMtO8qI90RNBOc/ditPpyLF4iuQ5BEtCVV?=
 =?us-ascii?q?zkgsupf9AFI3mhNFPbA0aGLK6JJSDQzMHtf6y9SadcjOFVtxCrvTabEknjPimM?=
 =?us-ascii?q?ljXzVhCvN/1Mgz+fPBBEpI69dRNtA3D5TN36ch27LMN3jTouzL0oh3PKMHQQPi?=
 =?us-ascii?q?Rmf0xRrr2f8yVYj+57G2xA6HplMOaFlzyY7+neNpYZr/9rDj5omOJd5XQw06FV?=
 =?us-ascii?q?4z1cRPxphCvSqcZjolG8nemJzzpnURxOpS5KhYKLp0piP6rZ+4JEWXbF+hIN8G?=
 =?us-ascii?q?qRBw4Lp9tjFt3gpaRQxsLTm6L0LTcRu+7TqOEdDs+cCN+ONnVpZRDoETmSDBYM?=
 =?us-ascii?q?SzGDMGzThkVBnfLU/XqQ+MsUsJ/pzaEDQ7kTa1UzGbtOEUlsGpodKZF4djApi7?=
 =?us-ascii?q?iWiIgP/3Xo/0qZf9lTop2SDqHaOv7oMjvMyOAcPxY=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0DNAQCDbhhch0O0hNFkHgEGBwaBZYJqg?=
 =?us-ascii?q?QIng3yUEoINFI4wiwcHDhgLCAGHViI4EgEDAQEBAQEBAgETAQEBCgsJCCkjDII?=
 =?us-ascii?q?2JAGCYgECAwEBASAEGQEBLAYFAQUJAQEKCw0CAiYCAgMfBQEMAQUBHAYTBYMdA?=
 =?us-ascii?q?YIABQqcMjyJaz5wfDOCdgEBBYc1CIELiheBHIFXP4Qjgx4BBIRmgleJRYcJkE4?=
 =?us-ascii?q?HAoIkBIRlhi2EIBiCKo8ojjOLIw8hgTyBdzMaMEMxBoI1CYISDBeIXoVgHzKBB?=
 =?us-ascii?q?QEBjggBAQ?=
X-IPAS-Result: =?us-ascii?q?A0DNAQCDbhhch0O0hNFkHgEGBwaBZYJqgQIng3yUEoINFI4?=
 =?us-ascii?q?wiwcHDhgLCAGHViI4EgEDAQEBAQEBAgETAQEBCgsJCCkjDII2JAGCYgECAwEBA?=
 =?us-ascii?q?SAEGQEBLAYFAQUJAQEKCw0CAiYCAgMfBQEMAQUBHAYTBYMdAYIABQqcMjyJaz5?=
 =?us-ascii?q?wfDOCdgEBBYc1CIELiheBHIFXP4Qjgx4BBIRmgleJRYcJkE4HAoIkBIRlhi2EI?=
 =?us-ascii?q?BiCKo8ojjOLIw8hgTyBdzMaMEMxBoI1CYISDBeIXoVgHzKBBQEBjggBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,367,1539673200"; 
   d="scan'208";a="44446472"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 17 Dec 2018 19:53:21 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726600AbeLRDuS (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 17 Dec 2018 22:50:18 -0500
Received: from mail.kernel.org ([198.145.29.99]:52068 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726303AbeLRDuS (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 17 Dec 2018 22:50:18 -0500
Received: from mail-wm1-f50.google.com (mail-wm1-f50.google.com [209.85.128.50])
        (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id B8C4F2184B;
        Tue, 18 Dec 2018 03:50:16 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1545105017;
        bh=nf9/1bm3hBCP/Y6CurT6Mh3N1LPIZB808p5rFP/voUM=;
        h=References:In-Reply-To:From:Date:Subject:To:Cc:From;
        b=Izb3/GFOGJnyrJMxgIQQ7weSJI75nqElZD2I2AbpagDgIFKTa7mwKkJak+2NvWOov
         b6Up+49rZ5yEBoo/uUgAqG/fNbh8sbsOQvVE5uSuE6ZRGKiRc8garfBiJdnYARcQKO
         w8D33SCQsA8eIi/jNDRqFHVACMFzoGLAvXlMZpS0=
Received: by mail-wm1-f50.google.com with SMTP id y139so1185547wmc.5;
        Mon, 17 Dec 2018 19:50:16 -0800 (PST)
X-Gm-Message-State: AA+aEWZ9o13Wqrgkkx70gqDz6HLabJZKNo1DRfPciiSWHLAXpG5J+oZM
        alzFGcMxLBeKAXKv84oPZZOuO1eZrmvqYtiOOO8=
X-Google-Smtp-Source: AFSGD/XaW6U8YNzEALwgfEeQ/wOMZe2gyAQ8A8hBM1fKF440RmRbIXn0yIjf0ozEGePZFPmdwFVfbkjQ3exMNxWZMGM=
X-Received: by 2002:a1c:2e43:: with SMTP id u64mr1452607wmu.52.1545105015165;
 Mon, 17 Dec 2018 19:50:15 -0800 (PST)
MIME-Version: 1.0
References: <1545100937-16093-1-git-send-email-biao.huang@mediatek.com> <1545100937-16093-3-git-send-email-biao.huang@mediatek.com>
In-Reply-To: <1545100937-16093-3-git-send-email-biao.huang@mediatek.com>
From: Sean Wang <sean.wang@kernel.org>
Date: Mon, 17 Dec 2018 19:49:47 -0800
X-Gmail-Original-Message-ID: <CAGp9LzoWYdQ_PHgHbTmg35EvFY+kdFMZy5Pz7ndpPC0pUZ-uGg@mail.gmail.com>
Message-ID: <CAGp9LzoWYdQ_PHgHbTmg35EvFY+kdFMZy5Pz7ndpPC0pUZ-uGg@mail.gmail.com>
Subject: Re: [PATCH 2/2] net-next: stmmac: dwmac-mediatek: remove fine-tune property
To: Biao Huang <biao.huang@mediatek.com>
Cc: davem@davemloft.net, robh+dt@kernel.org, mark.rutland@arm.com,
        devicetree@vger.kernel.org, nelson.chang@mediatek.com,
        Andrew Lunn <andrew@lunn.ch>, netdev@vger.kernel.org,
        Liguo Zhang <liguo.zhang@mediatek.com>,
        linux-kernel@vger.kernel.org,
        Matthias Brugger <matthias.bgg@gmail.com>,
        joabreu@synopsys.com, linux-mediatek@lists.infradead.org,
        honghui.zhang@mediatek.com, linux-arm-kernel@lists.infradead.org
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, Dec 17, 2018 at 6:43 PM Biao Huang <biao.huang@mediatek.com> wrote:
>
> 1. remove fine-tune property and related setting to simplify
> the timing adjustment flow.
> 2. set timing value according to the value from device tree,
> and will not care whether PHY insert internal delay.
>
> Signed-off-by: Biao Huang <biao.huang@mediatek.com>
> ---
>  .../net/ethernet/stmicro/stmmac/dwmac-mediatek.c   |   71 +++++++-------------
>  1 file changed, 24 insertions(+), 47 deletions(-)
>
> diff --git a/drivers/net/ethernet/stmicro/stmmac/dwmac-mediatek.c b/drivers/net/ethernet/stmicro/stmmac/dwmac-mediatek.c
> index e400cbd..801c797 100644
> --- a/drivers/net/ethernet/stmicro/stmmac/dwmac-mediatek.c
> +++ b/drivers/net/ethernet/stmicro/stmmac/dwmac-mediatek.c
> @@ -44,7 +44,6 @@ struct mac_delay_struct {
>         u32 rx_delay;
>         bool tx_inv;
>         bool rx_inv;
> -       bool fine_tune;
>  };
>
>  struct mediatek_dwmac_plat_data {
> @@ -105,16 +104,28 @@ static int mt2712_set_interface(struct mediatek_dwmac_plat_data *plat)
>         return 0;
>  }
>
> -static void mt2712_delay_ps2stage(struct mac_delay_struct *mac_delay)
> +static void mt2712_delay_ps2stage(struct mediatek_dwmac_plat_data *plat)
>  {
> -       if (mac_delay->fine_tune) {
> -               /* 170ps per stage for fine tune delay macro circuit*/
> -               mac_delay->tx_delay /= 170;
> -               mac_delay->rx_delay /= 170;
> -       } else {
> -               /* 550ps per stage for coarse tune delay macro circuit*/
> +       struct mac_delay_struct *mac_delay = &plat->mac_delay;
> +
> +       switch (plat->phy_mode) {
> +       case PHY_INTERFACE_MODE_MII:
> +       case PHY_INTERFACE_MODE_RMII:
> +               /* 550ps per stage for mii/rmii*/
>                 mac_delay->tx_delay /= 550;
>                 mac_delay->rx_delay /= 550;
> +               break;
> +       case PHY_INTERFACE_MODE_RGMII:
> +       case PHY_INTERFACE_MODE_RGMII_TXID:
> +       case PHY_INTERFACE_MODE_RGMII_RXID:
> +       case PHY_INTERFACE_MODE_RGMII_ID:
> +               /* 170ps per stage for mii/rmii*/

mii/rmii appear to be a typo here.

Additionally, I'd suggest using the capital letters for these abbreviations.

> +               mac_delay->tx_delay /= 170;
> +               mac_delay->rx_delay /= 170;
> +               break;
> +       default:
> +               dev_err(plat->dev, "phy interface not supported\n");
> +               break;
>         }
>  }
>
> @@ -123,7 +134,7 @@ static int mt2712_set_delay(struct mediatek_dwmac_plat_data *plat)
>         struct mac_delay_struct *mac_delay = &plat->mac_delay;
>         u32 delay_val = 0, fine_val = 0;
>
> -       mt2712_delay_ps2stage(mac_delay);
> +       mt2712_delay_ps2stage(plat);
>
>         switch (plat->phy_mode) {
>         case PHY_INTERFACE_MODE_MII:
> @@ -167,13 +178,10 @@ static int mt2712_set_delay(struct mediatek_dwmac_plat_data *plat)
>                         fine_val = ETH_RMII_DLY_TX_INV;
>                 break;
>         case PHY_INTERFACE_MODE_RGMII:
> -               /* the PHY is not responsible for inserting any internal
> -                * delay by itself in PHY_INTERFACE_MODE_RGMII case,
> -                * so Ethernet MAC will insert delays for both transmit
> -                * and receive path here.
> -                */
> -               if (mac_delay->fine_tune)
> -                       fine_val = ETH_FINE_DLY_GTXC | ETH_FINE_DLY_RXC;
> +       case PHY_INTERFACE_MODE_RGMII_TXID:
> +       case PHY_INTERFACE_MODE_RGMII_RXID:
> +       case PHY_INTERFACE_MODE_RGMII_ID:
> +               fine_val = ETH_FINE_DLY_GTXC | ETH_FINE_DLY_RXC;
>
>                 delay_val |= FIELD_PREP(ETH_DLY_GTXC_ENABLE, !!mac_delay->tx_delay);
>                 delay_val |= FIELD_PREP(ETH_DLY_GTXC_STAGES, mac_delay->tx_delay);
> @@ -183,36 +191,6 @@ static int mt2712_set_delay(struct mediatek_dwmac_plat_data *plat)
>                 delay_val |= FIELD_PREP(ETH_DLY_RXC_STAGES, mac_delay->rx_delay);
>                 delay_val |= FIELD_PREP(ETH_DLY_RXC_INV, mac_delay->rx_inv);
>                 break;
> -       case PHY_INTERFACE_MODE_RGMII_TXID:
> -               /* the PHY should insert an internal delay for the transmit
> -                * path in PHY_INTERFACE_MODE_RGMII_TXID case,
> -                * so Ethernet MAC will insert the delay for receive path here.
> -                */
> -               if (mac_delay->fine_tune)
> -                       fine_val = ETH_FINE_DLY_RXC;
> -
> -               delay_val |= FIELD_PREP(ETH_DLY_RXC_ENABLE, !!mac_delay->rx_delay);
> -               delay_val |= FIELD_PREP(ETH_DLY_RXC_STAGES, mac_delay->rx_delay);
> -               delay_val |= FIELD_PREP(ETH_DLY_RXC_INV, mac_delay->rx_inv);
> -               break;
> -       case PHY_INTERFACE_MODE_RGMII_RXID:
> -               /* the PHY should insert an internal delay for the receive
> -                * path in PHY_INTERFACE_MODE_RGMII_RXID case,
> -                * so Ethernet MAC will insert the delay for transmit path here.
> -                */
> -               if (mac_delay->fine_tune)
> -                       fine_val = ETH_FINE_DLY_GTXC;
> -
> -               delay_val |= FIELD_PREP(ETH_DLY_GTXC_ENABLE, !!mac_delay->tx_delay);
> -               delay_val |= FIELD_PREP(ETH_DLY_GTXC_STAGES, mac_delay->tx_delay);
> -               delay_val |= FIELD_PREP(ETH_DLY_GTXC_INV, mac_delay->tx_inv);
> -               break;
> -       case PHY_INTERFACE_MODE_RGMII_ID:
> -               /* the PHY should insert internal delays for both transmit
> -                * and receive path in PHY_INTERFACE_MODE_RGMII_RXID case,
> -                * so Ethernet MAC will NOT insert any delay here.
> -                */
> -               break;
>         default:
>                 dev_err(plat->dev, "phy interface not supported\n");
>                 return -EINVAL;
> @@ -270,7 +248,6 @@ static int mediatek_dwmac_config_dt(struct mediatek_dwmac_plat_data *plat)
>
>         mac_delay->tx_inv = of_property_read_bool(plat->np, "mediatek,txc-inverse");
>         mac_delay->rx_inv = of_property_read_bool(plat->np, "mediatek,rxc-inverse");
> -       mac_delay->fine_tune = of_property_read_bool(plat->np, "mediatek,fine-tune");
>         plat->rmii_rxc = of_property_read_bool(plat->np, "mediatek,rmii-rxc");
>
>         return 0;
> --
> 1.7.9.5
>
>
> _______________________________________________
> Linux-mediatek mailing list
> Linux-mediatek@lists.infradead.org
> http://lists.infradead.org/mailman/listinfo/linux-mediatek
