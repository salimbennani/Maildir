Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  17 Dec 2018 18:15:39 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 107B35805FC;
	Mon, 17 Dec 2018 01:49:54 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga003-1.jf.intel.com with ESMTP; 17 Dec 2018 01:49:53 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Ao6ZZmBPbNCfstzTQUZEl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPr4o8bcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Xymp4aV2Rx/ykC?=
 =?us-ascii?q?oJNyA3/nzZhMJzi6xUohyhpwdnw4PWe4yZKOZyc7nBcd4AWWZNQsBcXDFBDIOm?=
 =?us-ascii?q?aIsPCvIMM+Jfr4nnqFsBswa1CxW2C+Pqyz9InGH53Kwj3+o4CwHGwA0gHtMTu3?=
 =?us-ascii?q?nTrtX1M70SUe+rw6XS1zXMdfZW2Tbn6IfWcxEtuPaMXahsccrQyEgiDAfFjlSW?=
 =?us-ascii?q?qYP/JTOV0f4Bs2+B7+pvTO+ijXMspQJpojW32Msglo3EipgIxl3K6yl12ps5KN?=
 =?us-ascii?q?6kREJhYNOpEoNcuiKHO4dsTc4vQXtktDs1x7AGo5K2fCsHxZI6zBDFcfOHaZKH?=
 =?us-ascii?q?4hf7WeaRPzh4gHVldaqhhxa970eg0PfwVsqq31ZQqCpKjN3MumoK1xzJ5ciLUv?=
 =?us-ascii?q?p9/kG/1jaTzw3f9P1ILEQumabGJZMt3KQ8mocQvEjfBCP7mUf7gLeTdko+++io?=
 =?us-ascii?q?7+rnYq/hpp+ZL4J0jgD+MqIzms2wGOg4MRYBX3Kd+eui0L3v5Er5QbtMjvIoiK?=
 =?us-ascii?q?nUq47aJcsFqa6jGQNV0Zgs6wy5Dzi41NQUh34HLEhKeB6flYjmJ0nOIOzkDfe4?=
 =?us-ascii?q?m1mslDZrx/PYMbH7DZTNM2POkLPgfbZ79k5dxxA/zdFZ55JIFL4BJOj/VVP2tN?=
 =?us-ascii?q?zdFhU5KRC7w/77CNVh0YMTQWKPDbWYMKPOq1CI4fgjI+mRZIAPvjb9JOMo5/rv?=
 =?us-ascii?q?jX8/hF8ccrOl3ZoRaHCkAPtmJ1+VbmbrgtcECW0KpBYxTPT2iF2eVj5ef3SyX6?=
 =?us-ascii?q?Ui6T0hC4KmCoHDRoaqgLGa2Ce7H5tWZn1JC1yWEHfocZmEVOkIaC6IPsBhlTkE?=
 =?us-ascii?q?X6C7S4A9zRGuqBP6y71/I+XO4S0YtZXj1Ntv6+3Jjx4y9yd5D8Cc02GLUmF1kX?=
 =?us-ascii?q?kERz4w3KBjv0N9zk2P3rR/g/xdDdZT/e9GUh8mNZ7AyOx3E9PyVRjHftuTTFam?=
 =?us-ascii?q?Q8+pATc+Tt8qx98OYkB9G8itjxzZ3iqqBaMVmKKPBJAu7q3c2H3xLd5ny3nazK?=
 =?us-ascii?q?khk0UmQsxXOGK7nKF/6RbcC5TJk0qDkaaqbroT3CjK+GeHzmqOuUVYXRV0UaXE?=
 =?us-ascii?q?W3Afe0TXoc745kPEU7+hF7AnPhFdxs6FL6tAcsfpgkleRPf/JNTeZHq8lHqqCh?=
 =?us-ascii?q?aW2LyAdorqdH8b3CXGFkcElRse/XKHNQg4GyegrHjSDD1oFVLzfUzs9fNyp2+8?=
 =?us-ascii?q?Tk8x1wuKdVFu16Kp+h4JgvyRU+8T3rMBuCcmtzV0HFa808jKC9aaoAphZqFcYd?=
 =?us-ascii?q?I74FdIzm/Zsw19Ppq9L6FtnFIecgJ3v1/w2BVzEIlPjc8qrHYyxgpoNa2YyE9B?=
 =?us-ascii?q?dy+f3Z3oILLXLnf9/R+xZK/WwF3Ry8uW9boV5/Q+qFXjux+pG1Em83Vm1dlVzn?=
 =?us-ascii?q?Sd6o/LDAoUTZL+TEI3+wJmqLHdZyk3/5nU2mF0Mamorj/C3MokBes4yhq6Y9hT?=
 =?us-ascii?q?KqKFFA/oHM0cCMijM+gqm1mvbhIZM+Fe7q80P8W6d/SY3K6nJvpvnDWjjW5f+o?=
 =?us-ascii?q?ByzlqM9zZgSu7Px5sF2fCY0RedWDfmkVihtdr7mYZaajEIH2qz0DTrC5RVZqJv?=
 =?us-ascii?q?Y4kLE2CuI8usy9V6hp7tXWNY9VG5C1MH3s+pZQSdb1jn0QJM0kQXpGStmTGkwD?=
 =?us-ascii?q?xsjzEpsq2f0TTOwuTjbhYGOnRHRHJ/jVfqOoW0i9EaXE61bwkmjhel5ED6x7RF?=
 =?us-ascii?q?q6R7NWXcXUBIfy3uJWF4TqSwrqaCY9JI6J4wsyVYSv68YVOZSr76uRcayDnsH2?=
 =?us-ascii?q?hdxDA6cTGlpJP5kgd+iGKcKnZzsXXYddtxxRfZ+NzTW/pR0iAaSyl/jDndHkK8?=
 =?us-ascii?q?MMWx/dWIi5fDtfizVmK7WZ1UayXrz4KAtC2g6G1uAB2/me2zm9L9HQg71y/7y8?=
 =?us-ascii?q?dlVSHSoBngZYnr0rywMfh7cUlwGF/89816F5l9koQqhZEcw3gahoiP8noBnmf+?=
 =?us-ascii?q?KtFb2aP4bHoQSj8H2d/V4A752EJ9KnKF3Z72VnKYwsF5fdm1fnsW2j4h78BNEK?=
 =?us-ascii?q?qU6b1EnShvrVaiowPef+N9nisDxvs083EVnfsJuAU2wyWZA7ASG1RYPCP2mxSJ?=
 =?us-ascii?q?6dC+sLtYZGK1fbes00p+mMirDKuerQFERHb5ZpAiEDds7sV4NVLAynzy5ZvieN?=
 =?us-ascii?q?nNdtITrRyUngzEj+hULpIxi/ULiTBmOWL7oX0q1eo7gQZy0pG9uYiNM39t876h?=
 =?us-ascii?q?Ah5EKj31YNse9Sr3gqZZmsaWwpqjHpF8GjgQWJvoTPSoEC8dtPj9NgaOFiE8pW?=
 =?us-ascii?q?mfGbbFAQCf70JmpWrVE5+3L3GXOGUZzdJ6SRmfPkNfhR4bXC4gkp4lDAyqx9Hh?=
 =?us-ascii?q?cERk5jAX/FH4sQBByuZpNxn5T2feqx2kajYySJiDMhVW6htO6FvSMcyb9uhzBT?=
 =?us-ascii?q?1X/oW9rAyRLWyWfwRJDWYUWkydGlDsJL+u6cPb8+ifAOq+IODDYbGPqexYSveJ?=
 =?us-ascii?q?yoij0opg/zaQKMqPOmNuAOE82kpGRXp5AdjWmy0TSywLkCLAd86bqwm9+i10rc?=
 =?us-ascii?q?C/8e7nWAH15YuIBLtdL89v+w2tgaqYM+6QhSB5KStX158WxH/IzqQf00AWiy10?=
 =?us-ascii?q?azatFrEAvzbXTK3Mgq9XEwIbayRrOcRS8qIzxRNNNtDbi9/v0r54j+U4C1NEVV?=
 =?us-ascii?q?znh8GoatYGI2C7NFPbGkmLMK6KKiHMw8Hyeam8U6FfjP1Itx2svjaWC1PjPjWG?=
 =?us-ascii?q?lzXzSx+jK/1DjCGFMxxYo4y9dhdtCW7+TNPpcBG7Mdl3jSEozr0wnH/FKWkcMT?=
 =?us-ascii?q?1keUNXsrKQ9T9Ygul4G2FZ7ntqN++EmyOY7+neMpkXsPtrDT5yl+JV+3k6z7pV?=
 =?us-ascii?q?7CdZRP16gifSr9huo024nemL0DZoTB1OqjMYzL6M6EdlI6rUsINJXHfe8QBI6n?=
 =?us-ascii?q?+MCgYio9pjA8fo/adKxZyHjqX5KHRO7/rX8NEaCsySL9iIdDIkOADqXiTJEA8M?=
 =?us-ascii?q?SzKDPHvawUdalbXa/3uZv941sJ/3g7IKS7lSTltzEekVTgxpFcIDLNF9RDQ7l5?=
 =?us-ascii?q?afjcgB/334qwPeAI1BtJfWWtqRDO/pJTLfiqNLI1MXwLf8a4geP4b83WRrcFw8?=
 =?us-ascii?q?l4PPXwLVQc1XuzBschM5iE9E4Xx/RHc+nUnib0fl4nYIDv+vnxg5igFkaP4F+z?=
 =?us-ascii?q?Ll4lNxLV3P9wUql0xku9L/jj3ZSjf0Lb29T8RxETb1pQBlMJThTAszdwS3nFZp?=
 =?us-ascii?q?JnLDXa5QnZNkdGZikgiavoFAT60PBZZYaQMdkKnEL84j1k5R/32q?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AeAADhcBdch0O0hNFkHgEGBwaBUQkLA?=
 =?us-ascii?q?YJpgQIVEox0ixeCIZdEgXEUAQEYAxABh1QiNAkNAQMBAQEBAQECARMBAQEKCwk?=
 =?us-ascii?q?IKSMMgjYigmUDAwECJBkBATcBBQkBAVADMQEFARwHEgWDHQGCAAQBnCA8iiCBb?=
 =?us-ascii?q?DOCdgEBBYEAhhkIEodrgyWBHIIWgRGHTYYliTqGFYFPj30HAoZNQIpNAhaCKod?=
 =?us-ascii?q?Jh1+JPJABAgQCCQIFDyGBJYIOMxowgy8JghKIPkOFQD8ygQQBAQE7inaCPgEB?=
X-IPAS-Result: =?us-ascii?q?A0AeAADhcBdch0O0hNFkHgEGBwaBUQkLAYJpgQIVEox0ixe?=
 =?us-ascii?q?CIZdEgXEUAQEYAxABh1QiNAkNAQMBAQEBAQECARMBAQEKCwkIKSMMgjYigmUDA?=
 =?us-ascii?q?wECJBkBATcBBQkBAVADMQEFARwHEgWDHQGCAAQBnCA8iiCBbDOCdgEBBYEAhhk?=
 =?us-ascii?q?IEodrgyWBHIIWgRGHTYYliTqGFYFPj30HAoZNQIpNAhaCKodJh1+JPJABAgQCC?=
 =?us-ascii?q?QIFDyGBJYIOMxowgy8JghKIPkOFQD8ygQQBAQE7inaCPgEB?=
X-IronPort-AV: E=Sophos;i="5.56,364,1539673200"; 
   d="scan'208";a="57755344"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 17 Dec 2018 01:49:52 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1732175AbeLQJqt (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 17 Dec 2018 04:46:49 -0500
Received: from mail-wr1-f68.google.com ([209.85.221.68]:39652 "EHLO
        mail-wr1-f68.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1732160AbeLQJqr (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 17 Dec 2018 04:46:47 -0500
Received: by mail-wr1-f68.google.com with SMTP id t27so11542004wra.6
        for <linux-kernel@vger.kernel.org>; Mon, 17 Dec 2018 01:46:45 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=from:to:cc:subject:date:message-id:in-reply-to:references;
        bh=rPu/KTYynL2hZ7Udac90NfGfOmFb5CPU0go+pwum/Ko=;
        b=GJ94LMcb2mXK/ECVCU6TpApvTHWweBWfPuTlBANuxKYmT4xaLEEdPjiPieHmsBgCCJ
         z4ECesqUmXpzpaYofaj1LKaF+l2Je+bQxM9psvo3s1WnbjqTzYEQWA5v+p8daXFv4J9Z
         Z8UZHjZ9x5J6+ubZs+m3Rzsq2Al5FdcnarC60=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references;
        bh=rPu/KTYynL2hZ7Udac90NfGfOmFb5CPU0go+pwum/Ko=;
        b=kUJyaQH7/ZtK99EqMDCpfPneyzVS8ElzpwMYT+B2wieu86dPqkDTwLUPbs8dAPeBf4
         1YRHIIP9qMUzt3Wo8JR4ErVOX7CxePGARlXhoPQhnvUaOuOg5syh9FCiI9xVMAm143Ds
         rIBHr77fRqNv1CFIihIn9FRDwNQumJu47ZrZuhgNqFuhgmKXmcFUCJ13C/GedWAzjSLy
         Cg27Qjkui5BEWTSyx+VTQkVHvnSeHzx/xNeUix1reST7ea0Ki1d2fJ90wpS+9Z4u59pz
         NHJqYUq8hTFg5Fvk198qwbcZt7c9/sW7vNvWCqUsfeRHKdX055EYeHTelDAXi3M6N0vP
         zUAw==
X-Gm-Message-State: AA+aEWZuit1iKvlzYmQBoJc8OP+UfDtQKMIz+P3fvOa6RhgE1hTWzqVn
        Flfsw6TuwMscRqW86SNnbnlmwg==
X-Google-Smtp-Source: AFSGD/WPbRY1qjo9wPqeWKiKnySAmHLHE2lhnFzt6KZue5DSPhSZN+WWivK1Ikwsj0MRbtN1VoM1JA==
X-Received: by 2002:a5d:4b01:: with SMTP id v1mr9480128wrq.5.1545040005201;
        Mon, 17 Dec 2018 01:46:45 -0800 (PST)
Received: from localhost.localdomain (58.red-81-47-145.staticip.rima-tde.net. [81.47.145.58])
        by smtp.gmail.com with ESMTPSA id h12sm28878113wma.48.2018.12.17.01.46.43
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
        Mon, 17 Dec 2018 01:46:44 -0800 (PST)
From: Jorge Ramirez-Ortiz <jorge.ramirez-ortiz@linaro.org>
To: jorge.ramirez-ortiz@linaro.org, robh+dt@kernel.org,
        mark.rutland@arm.com, andy.gross@linaro.org,
        david.brown@linaro.org, sboyd@kernel.org, will.deacon@arm.com,
        mturquette@baylibre.com, jassisinghbrar@gmail.com
Cc: bjorn.andersson@linaro.org, vkoul@kernel.org,
        niklas.cassel@linaro.org, sibis@codeaurora.org,
        georgi.djakov@linaro.org, arnd@arndb.de,
        horms+renesas@verge.net.au, heiko@sntech.de,
        enric.balletbo@collabora.com, jagan@amarulasolutions.com,
        olof@lixom.net, amit.kucheria@linaro.org,
        devicetree@vger.kernel.org, linux-kernel@vger.kernel.org,
        linux-arm-kernel@lists.infradead.org, linux-clk@vger.kernel.org
Subject: [PATCH 05/13] clk: qcom: apcs-msm8916: get parent clock names from DT
Date: Mon, 17 Dec 2018 10:46:22 +0100
Message-Id: <1545039990-19984-6-git-send-email-jorge.ramirez-ortiz@linaro.org>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1545039990-19984-1-git-send-email-jorge.ramirez-ortiz@linaro.org>
References: <1545039990-19984-1-git-send-email-jorge.ramirez-ortiz@linaro.org>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Allow accessing the parent clock names required for the driver
operation by using the device tree node.

This permits extending the driver to other platforms without having to
modify its source code.

For backwards compatibility leave previous values as default.

Co-developed-by: Niklas Cassel <niklas.cassel@linaro.org>
Signed-off-by: Niklas Cassel <niklas.cassel@linaro.org>
Signed-off-by: Jorge Ramirez-Ortiz <jorge.ramirez-ortiz@linaro.org>
---
 drivers/clk/qcom/apcs-msm8916.c | 33 ++++++++++++++++++++++++---------
 1 file changed, 24 insertions(+), 9 deletions(-)

diff --git a/drivers/clk/qcom/apcs-msm8916.c b/drivers/clk/qcom/apcs-msm8916.c
index a6c89a3..2453242 100644
--- a/drivers/clk/qcom/apcs-msm8916.c
+++ b/drivers/clk/qcom/apcs-msm8916.c
@@ -19,7 +19,7 @@
 
 static const u32 gpll0_a53cc_map[] = { 4, 5 };
 
-static const char * const gpll0_a53cc[] = {
+static const char *gpll0_a53cc[] = {
 	"gpll0_vote",
 	"a53pll",
 };
@@ -50,17 +50,39 @@ static int qcom_apcs_msm8916_clk_probe(struct platform_device *pdev)
 	struct regmap *regmap;
 	struct clk_init_data init = { };
 	int ret = -ENODEV;
+	struct clk_bulk_data pclks[] = {
+		[0] = { .id = "aux", .clk = NULL },
+		[1] = { .id = "pll", .clk = NULL },
+	};
 
 	regmap = dev_get_regmap(parent, NULL);
 	if (!regmap) {
 		dev_err(dev, "failed to get regmap: %d\n", ret);
 		return ret;
 	}
-
 	a53cc = devm_kzalloc(dev, sizeof(*a53cc), GFP_KERNEL);
 	if (!a53cc)
 		return -ENOMEM;
 
+	/* check if the parent names are present in the device tree */
+	ret = devm_clk_bulk_get(parent, ARRAY_SIZE(pclks), pclks);
+	if (ret == -EPROBE_DEFER)
+		return ret;
+
+	if (!ret) {
+		gpll0_a53cc[0] = __clk_get_name(pclks[0].clk);
+		gpll0_a53cc[1] = __clk_get_name(pclks[1].clk);
+		a53cc->pclk = pclks[1].clk;
+	} else {
+		/* support old binding where only pll was explicitily defined */
+		a53cc->pclk = devm_clk_get(parent, NULL);
+		if (IS_ERR(a53cc->pclk)) {
+			ret = PTR_ERR(a53cc->pclk);
+			dev_err(dev, "failed to get clk: %d\n", ret);
+			return ret;
+		}
+	}
+
 	init.name = "a53mux";
 	init.parent_names = gpll0_a53cc;
 	init.num_parents = ARRAY_SIZE(gpll0_a53cc);
@@ -76,13 +98,6 @@ static int qcom_apcs_msm8916_clk_probe(struct platform_device *pdev)
 	a53cc->src_shift = 8;
 	a53cc->parent_map = gpll0_a53cc_map;
 
-	a53cc->pclk = devm_clk_get(parent, NULL);
-	if (IS_ERR(a53cc->pclk)) {
-		ret = PTR_ERR(a53cc->pclk);
-		dev_err(dev, "failed to get clk: %d\n", ret);
-		return ret;
-	}
-
 	a53cc->clk_nb.notifier_call = a53cc_notifier_cb;
 	ret = clk_notifier_register(a53cc->pclk, &a53cc->clk_nb);
 	if (ret) {
-- 
2.7.4

